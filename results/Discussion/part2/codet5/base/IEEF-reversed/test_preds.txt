refactor SocketAppender initialization to set remote host and port directly to improve encapsulation and clarity of socket configuration
refactor header handling in BasicAuthPlugin to use a dedicated method to improve code readability and maintainability by reducing duplication
replaced ` RecordDescriptor . msgLengthOffset ( recordIndex ) ` with direct access to ` msgLengthOffset ( recordIndex ) ` to
cloudstack - 7038 : do n ' t hardcode overcommit ratio when vm detail be null
added an ` flags ` field and its getter method in ` ShadowPaint ` , and updated tests in ` PaintTest ` to support anti -
updated the title of the MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content
do not fail test if eclipse be not use to compile the project
fix ( http ) : do n ' t allow non - empty nonce for digest auth
added a listener interface ` RemoteInputListener ` and modified ` RemoteInput ` to utilize it to manage connection state to improve the handling of
reformatted conditional statements in OrcEncodedDataReader . java for improved readability to enhance code clarity and maintainability
updated filter condition in HomeConnectBridgeHandler to check if the thing is enabled to ensure that the handler is only processed when the thing is enabled
added null check before removing and adding policies in AuthorizeAdminServlet to prevent potential NullPointerExceptions during policy management
updated assertions in tests to use a regex pattern that matches " hpm " instead of " PM " to ensure compatibility with Java 9 and enhance
added JSON serialization and logging for the DAG information in TezTask . java to facilitate debugging by providing context and description details
added methods to retrieve heap time and header time in ComputedSummary and HprofHeap classes to improve heap data handling and ensure accurate heap time
refactor upload count retrieval in ContributionsActivity and update imports in ApacheHttpClientMediaWikiApi to streamline upload count retrieval process and improve code
removed unnecessary conditional checks for locking in MVTable . java to simplify the lock logic for better readability and maintainability
fix issue with commitlog and defaultmessagestore . size ( ) do n ' t work correctly .
added a check to ensure the folder is open before marking it as open to avoid potential null pointer exceptions when the folder is not open
added a test method to verify sorting of PGProperty names in ascending order to ensure that PGProperty names are sorted in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a
changed method parameters from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget ` to improve type specificity and simplify the code
updated error message assertion in RequestBuilderTest to use getMessage ( ) method instead of hasMessage ( ) to improve clarity and accuracy of error messages
updated NearbyActivity to utilize NearbyListFragment instead of NearbyMapFragment to improve organization and clarity of fragment
rename ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity by using a more descriptive
added a new configuration property ` send _ zero _ anomaly _ email ` to the ` EmailConfiguration ` class and updated the ` EmailReport
[ hotfix ] [ kafka ] fix checkstyle violation in flinkkafkaconsumerbase
removed user and geofence methods from the DataManager class to streamline code by eliminating unused methods
added a constructor to BlockingResponseListener that accepts a maximum length of 2 MB to enhance flexibility in handling larger response sizes
refactor memberBroadcastsReceived method to accept a byte array instead of a ChannelData array to improve code readability and maintainability by redu
replaced System . out . println with logger for snapshot logging and added a try - finally block around the snapshot fragment sending process to improve logging
remove the trailing slashes from URLs in the assertions to ensure consistency in URL formatting for accurate test validation
rename ConfigMetadataProviderTest . java file to improve clarity and maintain consistency in naming conventions
updated import statements in ListFragment . java and modified the parameter name in the updateNoteReminder method in SnoozeActivity . java
added a private static class AcceptAllFilter and refactored directory stream filtering in Files . java to improve code readability and maintainability by
refactor JdbcTestDataSet class for improved readability to enhance maintainability and facilitate easier debugging
[ gr - 21744 ] make hotspot jvmti / compiler / compilertovm / compilertovm / compilertovm
added validation for Docker image names in GenericContainer . java and created DockerName . java and DockerNameTest . java files to improve error handling
updated error messages in LoginActivity to reflect incorrect credentials instead of username and password to improve user experience by providing clearer feedback on authentication failures
added ` setAutofocus ( " autofocus " ) ` method to multiple Java classes to set the autofocus property for improved user
added unit tests for IdentityZone configuration in SamlIDPRefreshMockMvcTests . java to ensure correct handling of SAML properties for different identity
added checks for non - empty list in ComparableVersion . java and updated test cases in ComparableVersionTest . java to ensure proper handling of list
updated mode settings and adjusted width and height calculations in Sheet . java , and added padding and margin properties in UIManager . java to improve layout
updated package structure and import statements in RobolectricTestRunner , ParallelUniverse , and ParallelUniverseTest classes to organize code
refactor constructor invocation in LocalCacheFactory and NodeFactory to use a consistent method type to improve code readability and maintainability by reducing
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve visual
added functionality to draw self loops in the ProcessingPreview class to enhance graph visualization by displaying self - loops when available
rename ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059 across
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in method naming
set the translation of the drag handle indicator to zero to ensure the drag handle indicator is fully visible during transitions
added logging statements for collection , community , and item objects in CollectionViewer , and ItemViewer classes to improve visibility into collection , community , and
updated the configuration description for query optimization in HiveConf . java to clarify the behavior of query optimization during query optimization
added an assumption to the ScanningAppProviderRuntimeUpdatesTest class to ensure compatibility with the build server on non - OSX platforms
added Maven bundles for " jetty - alpn - java - client " and " jetty - alpn - client " in TestJ
fix for act - 1343 : do n ' t lock process instance if process instance be already lock
refactor transaction handling logic in Transaction . java to improve code readability and maintainability
replaced ` @ AddToRuleKey ` annotation with ` @ ExcludeFromRuleKey ` annotation in ` GenruleBuildable . java `
simonstewart : fix firefox custom profile launch on window
replaced ` putIfAbsent ` with ` put ` for ` colFamToDynamicColumnsMapping ` to ensure that a non - existent column mapping
[ hotfix ] [ runtime ] remove unnecessary @ suppresswarnings ( ` ` rawtypes ' ' )
added conditional logic to handle view types in MetaDataEndpointImpl . java to ensure compatibility with older client versions and improve index management for views
update instructor ' s googleid when add a new student
replaced the import of TestCellReference from org . apache . poi . xssf to org . apache . poi . ss . util
added a condition to check if the block ' s hardness is greater than zero to ensure that the block ' s hardness is non -
added a new file LongPointerPressTest3049 . java to implement a test for long pointer press functionality in the Codename One
truffle : remove dependency on truffle _ function _ inlining .
simplified null return statements in BaseBuilder . java and XMLConfigBuilder . java to enhance code readability and maintainability by reducing
simplified the condition in ListBlockParser and added a new test method in SpecialInputTest to improve code clarity and ensure proper rendering
make optional assertion extensible by introduce
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily ignore tests due to issue # 1070
remove jsinterop . native . tojstring ( ) . tojsstring ( ) . tojsstring ( ) .
updated the closing brace in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the media format is a video before proceeding to ensure that web subtitles are only processed for video formats
added import for Security and set TLS disabled algorithms property to an empty string in ComHostnameVerifier and JavaxHostnameVerifier classes to ensure that
cloudstack - 7038 : do n ' t delete local / zone storage pool if the vm be in a zone or local storage pool
updated logging statements in Driver . java and QueryResultsCache . java for improved clarity and consistency to enhance readability and maintainability of
added a new option to skip model updates in ManageDependencies and updated related logic in AddManagedDependency and AddManagedDependencyVisitor to improve dependency management
added a test for sending a PendingIntent with a specified request code in ShadowActivityTest . java and implemented a send method in ShadowPendingIntent
updated logging messages and refactored graphics creation logic in RocketFigure3d . java to improve clarity and functionality of graphics rendering
added synchronization to the controllerListeners list in HydrawiseAccountHandler to ensure thread safety when modifying the listener list
added a static method ` beforeClass ` to ` TestCoreAdminApis ` to assume ` EasyMock ` does not work with Java 9
updated year retrieval logic in TimestampUtils and refactored date formatting in SetObject310Test to improve clarity and maintainability of date
fix nullpointerexception when try to connect to jabber protocol provider . thanks to stu hood for the patch .
added " cur _ ws _ commit _ id " to the commit ID list in TxnHandler . java to clarify the purpose of the
replaced ByteChunk with ByteBuffer for better memory management to improve memory efficiency and error handling in BufferedInputFilter
added a new method ` toSync ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to enable asynchronous conversion
added ActionGraphBuilder to various compiler factory classes and updated related methods to utilize it to enhance functionality by integrating ActionGraphBuilder for better
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to verify the behavior of the upload
removed duplicate call to createTables ( ) in SQLManager . java to streamline code by eliminating redundancy
added a check to return the local Maven directory if the file does not exist to ensure that the default directory is used when the specified file does
do n ' t show the algebra label if it start with a hidden prefix
refactor : fix npe in ctelementimpl . getmetadata ( ) ( # 2649 )
replaced buffer . setFlags ( ) with buffer . addFlag ( C . BUFFER _ FLAG _ DECODE _ ONLY ) in DefaultTrack
added a check to ensure the cache is not sorted by ID before proceeding with reordering to improve performance by avoiding unnecessary reordering of
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added null check for backupFolder before logging expiration to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` with a main method that tests the behavior of ` Array . newInstance ` with
added @ AddToRuleKey annotation to the toolType field in ClangCompiler and GccCompiler classes to ensure that the toolType field
replaced hardcoded timeout values with a constant PINCODE _ TIMEOUT to improve code readability and maintainability by using a named constant
make prometheusexemplasample and prometheusmeterregistrytest sample non - deterministic
removed @ Ignore annotations from multiple test classes to enable tests that require MongoDB server functionality
http : / / issues . apache . org / jira / browse / amq - 4892 - fix unit test for consumeunc
updated the condition to check if the table name does not start with an empty string to ensure that the table name does not start with an art
updated file type checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty checks for session attributes in MongoSessionManager . java to ensure that session attributes are only cleared if they are not already present
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
refactor the handling of the ` _ stopping ` variable to use a local variable for clarity to improve readability and maintainability of the
removed unnecessary whitespace from method parameters in HuobiStreamingService . java to improve code readability and maintainability
camel - 16462 : camel - core - optimize message history by not use stopwatch
replaced the use of ` doOnError ` with ` subscribe ` for error handling in ` DelayedMonoPublisherTest . java ` to
replace assertTrue with a conditional check for WebSocketHandshakeException in WebsocketTest . java to improve error handling by providing a clearer failure message
refactor AllAppsTransitionController to use View . OnLayoutChangeListener directly instead of an anonymous inner class to improve code readability and maintainability
updated variable names from ' theHandler ' to ' handler ' in PolicyBasedAuthenticationManager . java to improve code readability and maintain consistency in
add support for ' default - output - channel ' attribute in xpathrouterparser for default output channel
changed cacheSeconds from an integer to a String representation of " PT180S " in MessageBundleProperties . java and updated cacheSeconds handling
updated OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to
removed the append method call from ByteBufferPool . java to streamline the code by eliminating unnecessary functionality
added a check for the presence of " alt - rt . jar " in the boot class path to warn users when " alt - rt .
updated username comparisons in JdbcScimUserProvisioningTests and modified test assertions in ScimUser to ensure consistency in username handling and improve test coverage
replaced the use of ` Arrays . asList ` with a ` List < String > ` for setting options in ` FlightRecorderProfiler .
added a method ` isStreamEmpty ( ) ` to the ` WebCamInputPanel ` class and modified the ` WebcamInputDialog
added a condition to check if the content view has content before continuing the loop in HttpParser . java and implemented a chunked put test in Proxy
camel - atmos : fix typo find by codespell on fossies . org
added support for additional target method names " printf " and " print " in Java2TypeScriptAdapter . java to ensure proper handling of method
added a new file TestCapacityUntilGCWrapAround . java to test the behavior of metaspace capacity in 32 - bit platforms to ensure that
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
update endTime calculation logic in SamplingStatCalculator . java to ensure accurate timing for timing calculations
add unit test base on user forum issue
tmi - jpeg : do n ' t swallow invalid icc _ profile chunk
fix the rod of the terra pick and the rod of the tornado rod not be able to be reequip
updated JoobyModule and SpringModule to exclude configuration and environment beans from registration to enhance bean registration efficiency by avoiding unnecessary registration of
use container . getparentclassloader ( ) instead of thread . getcontextclassloader ( ) . getcontextclassloader ( ) . get
bug 60525 - allow nameupdater to be configure via property file ( jmeter - core )
added initialization to track if the ellipsoid region selector was started to ensure proper initialization of the ellipsoid region selection logic
updated the default protocol from HTTP to HTTPS in the JavaSEPort class to ensure secure connections to the Codename One com protocol
mondrian : fix npe in getfeature when sort by attribute be invalid
updated null check for grantor assignment from ` . equals ( null ) ` to ` . equals ( null ) ` to ensure correct handling of
added graphics configuration imports and updated image handling in DiagramGenerationTest . java to improve image compatibility testing for better visual representation
throw a runtime exception if fml can not be install due to null sideddelegate
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
make locktest more robust to slow machine
added methods to handle whole - word tokenization and joining tokens in StringUtil . java to enhance string manipulation capabilities for better tokenization process
do n ' t log access info if the host do n ' t exist
refactor command handling and highlighting logic in SystemHighlighter . java to improve clarity and correctness in highlighting commands and arguments based
updated VERSION to " 1.0 . 1 - SNAPSHOT " and VERSION _ DATE from " 2012 - 07 - 14 " to " PENDING
update buffer position to use dimensionSize instead of index to ensure correct buffer positioning based on dimension size
add drag - and - drop functionality to the system UI to determine if drag operations are ready to enhance user experience by allowing drag - and -
[ log4j2 - 1349 ] add assumption to socketappender so that test be not fail on java 7
added " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to enhance security
updated the description retrieval method from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` to ensure the correct description is
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the " value " field
refactor HqlQueryRenderer to handle reserved words more efficiently and add a new test for schema scoping in HqlQueryRendererTests
[ java ] fix typo in subscriptionhelper
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method and modified related logic for track selection checks to enhance
tika - 697 -- add ` ` document . cpio ' ' mime type to test
[ hotfix ] [ table - planner - blink ] remove unused method in flink sqloperatortable
added equals , hashCode , and toString methods to OneTimeTokenAccount and OneTimeToken classes to enhance object comparison and string representation for improved
added a condition to check if the assistant is not launched before proceeding to ensure that fling actions are only performed when the assistant is not
added a new file SolarisShortDSA . java to demonstrate the use of DSA in a Solaris
added a call to toggleSearchLabel ( false ) in ListFragment . java to improve user experience by disabling search functionality
cloudstack - 7031 : fix the bug of create snapshot on primary storage fail to create a snapshot on secondary storage
refactor ` mConnection ` to a new class ` DetailsServiceConnection ` and update its usage in ` FileDetailActivity . java ` to
updated the handling of SSLPeerUnverifiedException in HttpClientTLSTest . java to use AtomicReference for better management of request failures to improve
removed the equals method from the ConjunctionScorer class to simplify the comparison logic for better readability and maintainability
added a null check for item binding in Launcher . java to log an error when binding items fails to improve error handling and debugging capabilities
make cpmemberaddremovetest . waitforleaderelection ( ) call in metadataraftgroupmanager . getmetadatagroupids (
refactor cache size handling to use a variable for better readability to improve code clarity and maintainability by reducing redundancy
updated API endpoint paths from " / api / v2 " to " / api / v3 " and modified order handling logic to align with
added a method ` empty ( ) ` to the ` freenect2 ` class to check if the list is empty to provide a way
drill - 8416 : drill - 8416 , drill - 8023 , drill - 8416 , drill -
updated argument handling in ` SerumStreamingService . java ` and modified the ` buildChannelName ` method to accept an additional ` args `
add a config to disable the charging animation when an item be charging on top of a mana pool .
[ java ] make clusternoderestarttest more resilient to connection timeout .
[ hotfix ] [ test ] add log for interrupt exception in waitforhelper
replaced conditional checks for directory creation with assume checks in DefaultServletTest . java to improve test reliability by ensuring filesystem support for question directories
removed duplicate ` StyleInjector . inject ` calls for ` dialogStylesScss ` and ` openScreenStyle ` in ` ResourcesInjectorFull .
refactor changeLogFile and outputFile types from String to FileResource in BaseLiquibaseTask and DBDocTask to utilize FileResource
use getx ( ) and getz ( ) instead of get ( ) in blockworldvector . equals ( )
updated return statements in LongConcurrentLRUMap . java and made the CacheEntry class final to improve code clarity and enforce immutability of
added regex escaping to resourceConfiguration in ReflectionProcessor . java to ensure proper handling of regex expressions in resource configuration
modified the handling of the KRB5CCNAME environment variable in FileCredentialsCache . java and updated its usage in EmptyCC . java to
updated the database path in ValidateMultiSignContractTest . java from " output _ PrecompiledContracts _ test " to " output _ ValidateMulti
disable fast sync if there be no peer available
[ java ] fix checkstyle issue in java . awt . webdriver . webdriverservlet
mondrian : do n ' t expand ` ` areequal [ segment [ x , y ] , segment [ w ] ' '
added a check to clear pending rendering operations when the view is minimized to optimize rendering performance by avoiding unnecessary operations when the view is not
do n ' t wait for the deadline in hazelcasttestsupport . sleep ( )
fix continuously update key in write - behind queue
set the icon of JLabel in GroupTreeCellRenderer to null to improve visual clarity by removing unnecessary spaces
updated test methods for strict matching in TestBlacklistAwareRedirectResolver to differentiate between default and non - strict matching scenarios
added functionality to close the server socket and refactored the shutdown monitor tests to improve resource management and enhance test coverage for shutdown behavior
refactor chunk rewriting logic in RandomAccessStore . java for improved clarity and efficiency to enhance code readability and maintainability while
refactor field retrieval and serialization logic in Json . java to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ runtime ] move componentclosingutils to coordination module
server : destroy all volume for the vm when transition to error state
server : fix ip range for ipv6 / ipv4 only when ip address be not null .
renamed ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderBeanManagerConfigurer ` and updated variable names for consistency to improve
increased the timeout for getting the leader in CollectionsAPIDistributedZkTest from 15 seconds to 30 seconds to allow more time
added logging functionality and improved error message handling in multiple parameter classes to enhance debugging capabilities and provide clearer error messages for invalid parameters
updated image drawing parameters in URLImage . java to use negative coordinates to ensure proper positioning of image elements
updated the comparison of field names from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure the correct field names
do n ' t throw exception when check if an item have a high card dimension .
[ hotfix ] [ stream ] include exception in streamtaskexception
refactor tag handling logic in Preprocess . java for better clarity and efficiency to improve readability and maintainability of the code
reformatted the read method in MessagePack . java for consistency to improve code readability and maintainability
added a new annotation ` Mapper ` to the ` org . apache . ibatis . annotations ` package to provide a standardized way to
fix ( jsonparser ) : do n ' t encode empty extension list
fix bug in librarymanager . extractartifact ( ) when there be no internal name .
added alias " node _ popup / node _ popup _ scripting " to " node _ popup / node _ popup _ scripting " to
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants and added alpha animation logic in Re
camel - 16462 : camel - jms : use getout ( jmsmessage . class ) instead of getout ( ) to avoid class
removed unnecessary ' throws IOException ' declarations from multiple Java files to improve code readability and maintain consistency
deleted the files AbstractDelegatedVerb . java and FailureContext . java to remove deprecated classes to streamline the codebase
updated GzipHandlerTest to use final variables for ` __ content ` , ` __ contentETag ` , and ` __ icontent ` , and
replaced ` getAndAdd ` with ` BackpressureUtils . getAndAddRequest ` in ` OnSubscribeRedo . java ` and added a
added logging functionality and improved code formatting in SpeedmentImpl . java to enhance debugging capabilities and maintain code readability
add dspace - config to load oai config from application . properties
hbase - 2275 fix hbase - 2275 race condition in storescanner ( addendum )
camel - nagios : disable jmx if it be not need .
replaced hardcoded ' / ' with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation . java ` and
added YARN binary and Hadoop home retrieval methods in HiveConf . java and enhanced Spark job monitoring in RemoteSparkJobMonitor . java to
added support for " maria " database type in DbConnectionManager to ensure compatibility with additional database systems
[ hotfix ] [ runtime ] fix log format in splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` that tests the behavior of the ` ExecuteAndReturn ` component to demon
added a new file InvokespecialInterface . java implementing an interface and its implementation to demonstrate the use of invokeinterface and invoke
refactor EvictingBoundedList class implementation to improve performance and maintainability of the code
make turncosts support in graphhopper more robust
added validation to ensure selection is non - negative to prevent illegal argument exceptions when backgroundDisabled is not set
added a null check for the method name in RpcServer . java to throw an exception for unsupported operations
updated hotseat cell size calculations to include border spacing to improve layout spacing for hotseat icons
replaced manual substring calculation with a direct retrieval of the partition column index in ExpressionTree . java to improve code readability and maintainability by
fix serialization of namedtaskdecorator and taskdefinition with version 4.1 .
updated the directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
change the default value of the ` equal ` variable from ` false ` to ` true ` and update its assignment logic to ensure that the comparison
modified UnicodeToLatexFormatter to handle Unicode code points correctly to ensure accurate formatting of Unicode characters and improve code clarity
added handling for character control characters in OAIDCCrosswalk and Item classes to ensure that the character ' s carriage return is not
danielwagnerhall : do n ' t try to select a frame from the seleniumbackedselenium if the window
added a clear button to the DataBrowser for closing all tables to enhance user experience by allowing users to clear all tables easily
refactor baseUrl construction in OAuth2AuthorizationRequestRedirectFilter to utilize UrlUtils for better URL handling to improve code readability and maintainability
updated date assertions in SoftAssertionsTest . java to use parseDatetime instead of direct Date objects to improve accuracy of date comparisons and enhance error
modified the adaptOrders method to include a reverse parameter for order adaptation to enhance flexibility in order adaptation based on user preference
added a new class ` Java11Var ` and modified ` PrettyPrinter ` to handle ` var ` statements to improve variable declaration handling and provide
simonstewart : remove unused import from test
updated Configuration initialization to set default value to false and removed unnecessary debug logging for overriding Hadoop conf properties
replaced the call to ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha )
added unit test base on user forum issue
use getormodinabase ( ) instead of system . getsystemproperty ( ) . getfatalinabase ( ) .
added tests for retrieving the JMM date time pattern based on locale settings to ensure correct locale handling for date - time patterns in ICU
add more information to plotSquared to make it easy to debug
added ZuulProperties support to TraceRestClientRibbonCommandFactory and its associated classes to enhance trace functionality by integrating Zuul
tika - 1343 - add test case to ensure that the fontparsers work in a utc timezone .
added SampleApplication . java file and modified BuildInfoMojo . java to include a method to retrieve the build time to improve code organization and
update xDist calculation in PagedView . java to use Math . abs for accuracy to improve accuracy of x - distance calculation
pdfbox - 4892 : remove obsolete test that be no longer need .
removed the @ NullableDecl annotation from method parameters in LazyMessage and StandardSubjectBuilder classes to simplify code by eliminating unnecessary null checks
updated the error message format in TestStream . java to include a placeholder to improve clarity of the error message for better debugging
thymeleaf / thymeleaf - thymeleaf - thymeleaf / thymeleaf - templates / markup
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated the ` evaluate ` method in ` XPathTest
added nullable annotation to FutureUtils . java to enhance code clarity by indicating that certain fields may be nullable
add warn if invokedynamic be not resolve during call - graph construction .
minor test correction . use example . com for test email a it guarranteed undeliverable
updated HTTP response formatting in HttpConnectionTest . java and modified URI comparison logic in URIUtil . java to improve clarity and correctness of
added ` getColumnDataType ` method implementation in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a consistent
camel - 15850 : camel - aws2 - * : add default implementation for aws client interface
refactor HSSFPictureData class for improved readability to enhance maintainability and facilitate future updates
replace long time with Instant for startTime and stopTime in Statistics . java to improve time precision and consistency in time representation
added version handling for media info parsing in LibMediaInfoParser . java to ensure compatibility with newer media info formats and improve logging clarity
added reflection - based proxy handling for IdeaDependency in ProjectReader . java to improve dependency management for IdeaDependency classes
added a new SerialHeap class and updated related heap mappings to use it to improve heap management by providing a specific serial heap name
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types . java to suppress serialization warnings for the class
refactor mouse wheel event to use mouse position instead of mouse position to improve code clarity and maintainability
datamongo - 1608 - fix nullpointerexception in findbyfirstnameignorecase ( )
[ hotfix ] [ table - common ] add multiset type info to maptypeinfo
added method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving identity providers based on an issuer to ensure proper error handling for
updated CMapParser to include delimiter handling and added a test for poor whitespace in CMapParser to improve parsing accuracy and ensure proper handling
refactor ` expireFiles ` method to utilize ` OperationsServiceConnection ` for managing service interactions to improve resource management and avoid potential memory leak
added a new class ` T6938454a ` , ` T6938454b ` , and modified ` Infer ` and `
add ` ` is _ config _ hidden ' ' property to accountlist and accountid . isconfighidden ( )
added a condition to log an error if the number of supported display dimensions differs from the current display dimensions to improve debugging by providing insights into
updated the schema removal logic in PMetaDataImpl . java and added a new test for schema removal in PMetaDataImplTest . java to ensure
ggb - 1649 do n ' t fire ` ` loginpassive ' ' event in web
added a new Box2DTest class and updated GDXTester to include it to enable testing of Box2D functionalities in the application
patch by stu hood ; add some debug log
[ hotfix ] [ network ] set default buffer request timeout to 5 minute
chore : update gapic - generator - java to 2.0 . 5 ( # 263 )
add a help button to the openoffice panel to help the user
[ java ] add child option for tcp _ nodelay in netty acceptor , protocoldecodingserver , protocolpublishdecodingserver
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService to enhance
refactor class loading logic in ScanResultObject . java to use a transient class reference to improve performance by avoiding repeated class loading operations
refactor connection handling in DecodeServlet . java to improve error handling and streamline resource management to enhance code readability and maintainability while ensuring
datajpa - 499 - querydsl now use the null - handling configured on the sort . order .
added null check for the actor before iterating over actions in ParallelAction and SequenceAction classes to ensure that actions are only processed when the actor is
test : fix checkstyle violation in cttypetest . java ( # 2403 )
added synchronization to the closing of sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` with classes ` JJ ` and ` JK ` implementing ` Issue888
added functionality to revoke existing certificate certificates in the CertificateManager class to enhance security by ensuring existing certificates are properly revoked
added handling for HTTP responses with no body codes in AbstractHttpTest . java and implemented a new test in HttpServerTestBase . java to ensure
added error handling for script engine loading in ScriptTransformer . java to ensure compatibility with Java 6 and provide clearer error messages when the script engine
updated METASTORE _ CONNECTION _ POOLING _ TYPE to include additional connection pooling options and added HikariCP support to enhance
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file locking functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing users to lock and unlock files easily
rename mmm Version . java and ppp Version . java files to improve clarity and maintain consistency in naming conventions
clear the endpoint cache when update a keyspace
refactor locking mechanism to use a dedicated waitForState method to improve code readability and maintainability by reducing duplication
refactor SkylarkDescription and SkylarkRuleContext to use SkylarkRuleContextAttr for improved dependency management
simonstewart : move local and session storage interface to a separate package .
fix nullpointerexception when create view with replace option
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling clarity by providing a more specific exception type
updated query string retrieval logic in SpellCheckComponent . java to ensure a valid query string is used to improve robustness by ensuring the query
added validation for header values in Headers . java to ensure only valid carriage return and carriage return characters are processed to improve error handling and
replaced instanceSize with arrayBaseOffset in HybridLayout . java and added afterFieldsOffset in HostedInstanceClass . java to improve
add @ experimental annotation to astcommentcontainer . setcontaincomment ( boolean ) .
hhh - 510 - add warn log for association with ` fetch = join ` and ` fetchtype . lazy `
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added assertions to verify database and table names in TestCompactionTxnHandler . java and set database and table names in TxnHandler . java to
camel - 16462 : camel - timer - should not swallow exception during graceful shutdown .
added a check to ensure the block is not processed before adding to the traces list to avoid adding unnecessary traces when the block is not processed
updated null element check in ProviderManager and added tests for null element handling in ProviderManagerTests to ensure proper exception handling when providers contain null elements
simplified the return statement for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to improve code readability and reduce unnecessary exception handling
added local index limit functionality and updated related queries in multiple classes to enhance query performance and ensure correct handling of local index limits
added validation to prevent adding collections with the same name and type already in the past to ensure that collections with the same name cannot be added to
updated cursor handling logic in VDUBuffer . java and vt320 . java to improve cursor position management and ensure proper layout adjustments
removed the static final string USE _ RETRIES from HttpShardHandlerFactory . java to streamline the code by eliminating unnecessary constants
updated the VERSION _ NUMBER string format in JavaVersion . java and added a test for JavaVersion . parse in TestJavaVersion . java to
[ hotfix ] [ stream ] skip processing when there be no input gates
added a new test method ` test ( ) ` to the ` TestReceivingMessageSourceParserTests ` class to facilitate unit
added a null check for properties before retrieving it to avoid potential NullPointerException when properties is null
refactor IOException handling in FileSystemBlobStrategy to use a local variable for clarity to improve readability and maintainability of error handling
updated error message from " rolling upgrade to " stack upgrade to clarify the reason for stack upgrade failure
added a ` TxConfidenceListener ` to manage transaction confidence updates in ` TxIdTextField . java ` to ensure consistent handling of transaction confidence
[ netbeans - 4892 ] add support for g1 perm gen to jmxsupport
removed unused imports and simplified the return statement in NearbyController . java to streamline code and improve readability by eliminating unnecessary
pdfbox - 4892 : make the clone utility public , a suggest by valerybokov
added checks for non - home activities in BaseSwipeUpHandlerV2 . java to ensure proper handling of non - home activities during gesture
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and align
renamed methods and variables in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency in naming conventions
added a method to set the unfreeze amount in the UnfreezeBalanceV2Actuator class to ensure that the unfreeze amount is correctly
rename ` ` penalty per published talk ' ' and ` ` room ' ' to ` ` penalty per published talk ' '
replace google . common . io . files with apache common io . ioutils . copydirectory ( )
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
refactor Observable class to improve performance and readability to enhance performance and maintainability of the code
refactor update logic to use addMultiFieldOperation and implement new test cases to improve code clarity and ensure functionality for multiple field updates in
added a null check for randomUUID before setting it in MockHubService to ensure randomUUID is not null before setting it to avoid potential NullPointerException
added hover event handling in InputConsumer and OverviewInputConsumer classes to enable hover events for better user interaction and responsiveness
added a delay of 10 seconds when the bootstrap configuration is not set to false in CoreContainer . java to ensure that the application does not proceed
added a label to the ` @ UriParam ` annotation and updated references to ` maxHeaderSize ` to improve clarity and consistency in the
hbase - 13434 increase the number of retries in hbase test to 5
updated file path construction in SourceSnippetHelper . java to use File . getAbsolutePath ( ) instead of toPath ( ) to improve clarity and consistency
make encodedgraphcachetest more resilient to failure
updated the query command from " customer _ count " to " all _ tables " and added a new test method for over - outputting tables
added logic to process and convert Kraken asset codes to currency metadata to ensure accurate currency representation from Kraken assets
added a custom ` toString ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test `
[ hotfix ] [ runtime ] fix npe in alert task runner v2
[ influxdb ] fix nullness warning in influxdb publisher
renamed the ` doTransform ` method to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming
added a check for unique local addresses in NetUtils . java to ensure that only unique local addresses are accepted in the address filtering logic
refactor column name handling in DataTextFormatter to use a dedicated method to improve clarity and maintainability of column name management
added methods for setting and getting system properties and retrieving system properties in WrapSystem . java , and modified method names in StrUtils . java to
added a constructor to the UpdateRequest class that accepts a URL parameter to enable the creation of UpdateRequest instances with a specified URL
changed enum declaration from static to instance variable across multiple Java files to enhance encapsulation and improve code readability
added a warning message for experimental format responses in RequestHandlerUtils to indicate that the response format is experimental and may change in future
updated debug logging format in JpmsUtil . java and added a new method to format the list of module names to improve clarity of
bug fix : use label . font instead of hardcoded value
http : / / issues . apache . org / jira / browse / amq - 4892 - remove useless code in broker heartbeat
refactor meanPartitionSize , partitionCount , and splitCount initialization in CqlInputFormat . java to streamline code by eliminating
simplified the conditional check for JUnit class names in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintain
[ drools - 770 ] add equal ( ) and hashcode ( ) method to ruleterminalnodelefttuple
added StageIDsRearranger import and resolution logic in TezCompiler . java to handle stage ID rearrangement based on configuration
fix typo in mbean name . patch by jbellis
updated memory management logic in LotsOfOutput . java to improve clarity of memory consumption checks to enhance debugging and traceability of memory consumption
added imports for ` Document ` and ` BinaryDocValues ` , and modified ` DimConfig ` in several classes to enhance documentation clarity
updated LdapAutoConfiguration and LdapProperties classes to improve the handling of anonymous read - only and base environment properties to enhance flexibility in LDAP configuration
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
changed visibility of EchoInputDoFn from public to private in ExampleEchoPipelineTest . java to restrict access to the EchoInputDoFn class
added ` finishMocking ` method to ` MockitoSession ` and overridden it in ` DefaultMockitoSession ` to handle ` Throwable `
removed extraDeps from parameters in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to streamline dependency management
refactor SPDYAsyncConnection and HTTPSPDYAsyncConnection to improve buffer handling and state management to enhance code clarity and ensure
changed block initialization from static block to slowing block in BlockLiquidWrapper . java to ensure the correct block type is used for processing
updated the background class handling in the AndroidLocationPlayServiceManager and BackgroundLocationHandler to use Uri for setting the background class to improve flexibility
fix typo find by codespell on fossies . org
[ hotfix ] [ client ] add support for streamingplan in cli frontend
refactor hash calculation in CraftingManager to use computeIfAbsent for better readability and efficiency to improve code clarity and reduce boilerplate
[ flume - 2329 ] [ test ] fix flume - flume - flume - kafkapartitiontest
simplified conditional checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a regex pattern for processing temporary lines in NeuteredLinesFilter . java to enhance filtering capabilities for temporary lines in the application
doc ( regen ) : update sample code to set total timeout , add api client header test
updated data type handling in DataTypeFactory and modified condition checks in UnknownType and ColumnSnapshotGenerator to include additional data type checks to improve data type
[ wavefront ] publish histogram only if it ' s publish .
updated the handling of ` DivideUpstream ` in ` ShenyuClientRegisterSpringCloudServiceImpl ` and modified the return
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to facilitate the registration of sensor events with specified
added logging for socket exceptions in the test methods for full method , full URI , and full header to improve error handling for socket exceptions in the
camel - 13663 : camel - ignite now use apache ignite and camel - karaf instead of camel - ignite
updated print statements to handle empty sets and added a condition to determine if the result set is reach the end to improve clarity of output and
pdfbox - 4892 : do n ' t swallow ioexception , return false
added tests for setting and throwing HDR capabilities in ShadowDisplayTest . java to ensure compatibility and error handling for unsupported HDR capabilities in the
added a finally block to reset classLoader in JavacInMemoryStep . java to ensure proper resource management and avoid potential memory leaks
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve debugging by providing more context about expected bloom
added a default constructor to the Message class to ensure that the Message class can be instantiated without parameters
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5651 :
updated PhoenixDecimalObjectInspector and PhoenixObjectInspectorFactory to use PrimitiveTypeInfo and improved null handling to enhance type
replaced GZIPOutputStream with OutputStream in CompressionResponseStream and added a check for response committed status to improve response handling by ensuring the original output stream
corrected a typo in the parameter name from " WWWAuthenticate " to " authenticateHeader " to improve code readability and maintain consistency
removed specific conditions for EJS and org . omg files in DCD . java to streamline the code by eliminating unnecessary checks
updated ThreadLeakTest to use a new method for retrieving the thread group name to improve code readability and maintainability by encapsulating thread
added logging functionality and improved error handling in MethodInvocationPrivilegeEvaluator . java to enhance debugging capabilities for unauthorized access decisions
changed package from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` and updated
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
server : add iso disk to listvirtualmachines command for user vms
removed the handling of the previous signal handler and updated the test method names for clarity to improve code readability and ensure proper exception management during
replaced static import of isEmpty with a direct reference to ArrayUtils in NodeTool . java to improve code readability and maintainability by using a
updated imports and annotations in AxonAutoConfigurationWithSpringCloudTest . java to use Spring Boot ' s @ EnableAutoConfiguration and @
added @ Override annotations in ColorRGBA . java for clarity to improve code readability and maintainability
remove resetinitializedplanningentities , deprecate in favor of resetinitializedplanningentities
added build time to the Pair in TwoLevelArtifactCacheDecorator and updated related classes accordingly to enhance the tracking of build time for better tracking and
updated field retrieval logic in GroupByOperator . java and modified condition check in GroupByOperator . java to improve code clarity and ensure accurate
added null check before adding block appearance to prevent potential NullPointerExceptions when the block is null
added support for CNC currency pairs in BTCEUtils and CurrencyPair classes to support trading functionality for CNC in the trading
updated skewAllowance from 5 to 15 and modified related logic in various classes to enhance flexibility by allowing dynamic skewAllowance based on service
added sorting functionality to SongListActivity and updated query parameters in Utils to improve user experience by allowing sorting of items by name
added a method to read the request body as a byte array if it is not already available to ensure proper handling of request bodies for improved
added a new class LegacyBaseBlockWrapper and replaced instances of BaseBlock with it in MobSpawnerBlock and SignBlock to replace
updated IcebergBranchExec to check for tag existence before retrieving snapshotId to improve error handling for non - existent tags in Iceberg
replaced ` newArrayList ` with ` Collections . singleton ` in ` AbstractLdapMockMvcTest . java ` to improve code readability and le
feat ( photon ) : remove the bounce count from the map demo .
updated password change validation logic in IdentityProviderEndpoints . java and added logging statements in IdentityProviderEndpointsMockMvcTests . java to improve error handling
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure uninitialized fields are removed from constructors
updated error handling in JdbcExecutor to use a dynamic URL based on the connection state to improve clarity of error messages by specifying the connection URL
added a new method ` testRequiredBody ` to validate the required body of a ` RestTemplate ` with a microservice name to ensure that
updated regex patterns for user and password in CredentialInjector . java and modified test cases in CredentialInjectorTest . java to improve clarity and accuracy
added " Item4 " to the menu items in ActionListenerCalledTwiceTest . java and defined a KeyStroke for the Enter key to enhance
updated print statements in TestCoreParser . java to include query class name and modified assertions in TestCoreParser . java to improve clarity of
updated equality check from ' id ' to ' id ' in SimpleNode . java to ensure correct comparison of child nodes based on their identifiers
changed the visibility modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the PopulatorContextStackItem
changed the data type of ` numDocs ` from ` int ` to ` long ` and added a null check for ` getDocCount ( )
reformatted the loop structure in QuestManager . java for improved readability to enhance code clarity and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
refactor query construction in MongoSessionDataStore to use append method to improve readability and maintainability of the code
make unsafe . getlong ( ) a macro substitution for native code .
updated time zone designation from ARAST to EET across multiple language files to reflect the correct time zone designation for Asia /
updated the ID value from 90000010 to 90000011 in DeprecationLogger . java to correct the ID for deprecation logging
hhh - 16462 : do n ' t throw a jdbcexception if the transaction be not rollback - only
remove debug output from downloadexternalfile . download ( )
bug fix : use screen menu bar on macos
geogebracasintegrationtest : add test for piecewise integration
changed access modifier of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a new variable ` modWhiteListPattern ` to ` HiveConf ` and implemented a test for modifying the Hive metastore URI to
added a value to the invalidClasses map in EntryLoader . java to ensure proper handling of invalid classes during entry loading
update mobileinput to use player . team ( ) instead of team . sharded ( ) .
updated the domain of the Cookie builder from " comp1 " to " domainHelper . getHostName ( ) " to ensure the cookie uses the
added validation logic for nullable columns in MissingColumnChangeGenerator and MissingTableChangeGenerator , and updated ColumnSnapshotGenerator to use this new method to
refactor multiple SecurityToken - related classes for improved organization and consistency to enhance maintainability and readability of the codebase
added tests for document deletion and document addition in CustomCollectionTest . java and modified CompositeIdRouter . java to improve code clarity and ensure
added snapshot data handling for PostgreSQL in ` ExecutablePreparedStatementBase ` and introduced a new test for blob types in ` PostgreSQLIntegrationTest ` to improve
updated conditional checks in DefaultServlet to include max _ cache _ size and max _ cache _ size to enhance cache management logic to accommodate
add drag - and - drop support for ` ` . tab ' ' and ` ` . library ' ' tab
updated description creation and test assertions in ExecutionUnitRunner , CucumberTest , and ExecutionUnitRunnerTest classes to improve clarity and accuracy
replaced string checks for ` myVersion ` and ` buildTimeString ` with ` StringUtils . isNotEmpty ` for better readability to improve code
changed access modifier of several methods from public to package - private in TimeUtils . java to restrict access to these methods for better encapsulation
added a method to check if the class name starts with " java . lang . invoke . SecurityFrame " or " java . lang . invoke
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with various file types in
updated the method return logic in NativeImageDebugInfoProvider . java to handle HostedMethod instances to ensure accurate Java type resolution for better debugging
added a new ` getIcon ( ) ` method to the ` Data ` class and updated the ` DataTableTopComponent ` to use it to provide
added a check for the last occurrence of a period in the request name retrieval to ensure that the method does not throw an exception if the last
updated the replacement logic in ` FindAndReplace ` to handle dollar signs correctly to ensure consistent behavior when replacing strings with dollar signs
do n ' t wrap connection in smackpacketdebugger , if the connection be n ' t an smack connection , set the remote
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a new method ` copyDir ` in the ` IO ` class and refactored the ` copyContents ` method in ` SpecWeb
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for unknown datum types
refactor the way class and source ABI are retrieved in DefaultJavaLibraryBuilder to improve code clarity and maintainability by centralizing AB
simplified the height adjustment logic in SelectBox . java to improve code readability and maintainability
added normalization of database and table names in ObjectStore . java to ensure consistent identifier formatting for database and table names
updated database type checks and schema retrieval logic in DbSqlSession . java to ensure correct schema is used when Oracle database is used
removed the logout mechanism for the activity finishing in HomeFragment . java to simplify the code by eliminating unnecessary logout handling
updated MockStreamingRuntimeContext parameters from 0 to 1 in multiple test files to ensure consistent behavior across test cases and improve clarity in task identification
added null check for candidates in FastImportAction . java to ensure robustness by handling potential null values gracefully
updated the managed state check in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve code clarity and ensure
rename iexecutionattributesdialect to iexecutionattributedialect so that it do n ' t conflict with thymeleaf dialect
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is cleared before
added null checks for the location variable and modified the way ordinal values are assigned to improve robustness by avoiding potential NullPointerExceptions when loc is
added null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueue to use a new exception handler to improve robustness
deleted the Session2Token . java file from the media package to remove unused session token functionality
cloudstack - 7038 : remove volume from destination if the destination volume can not be create .
added a new ` Install ` class to handle instant app installation checks in the ` SystemShortcut ` class to enhance functionality to support integration with instant
added a constructor to LdapAuthenticationProvider that initializes the authority populator with a default value to ensure that an empty authority list is returned when no
updated the handling of the retrolambda jar path in the Executor class and added a fallback mechanism in the CN1BuildMojo class to
replaced ` buildOrThrow ( ) ` method with ` build ( ) ` method in ` ShadowCamera . java ` to simplify the camera building
updated the method signature of ` sortLiveDocs ` to use ` Bits ` instead of ` FixedBitSet ` to improve clarity and functionality
added handling for null results in JMESPathExtractor to ensure proper handling of null values during path extraction
updated import statements and added a null check for user authorities in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
refactor assertions in tests for consistency and clarity to improve readability and maintainability of the test code
server : fix typo in error message for vm snapshot with memory
replaced classConfig with methodClassConfig and testClassConfig in RobolectricTestRunner . java and updated shadows collection type to
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to improve socket handling capabilities
added partial partition key comparison logic in HiveAlterHandler . java and updated tests in TestHiveMetaStore . java to ensure partition keys are
added a new BooleanFlag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to control the visibility of icons in
added an extra parenthesis to the conditional statement in SimulationStatus . java to improve code readability and maintainability
replaced SharedBlockingCallback with Callback . Completable in deployer and undeployer classes to simplify callback management and improve code readability
added workspace listener functionality to PreviewControllerImpl to manage workspace updates to enable dynamic graph updates based on workspace state
added checks for non - VM anonymous classes in ReflectionFactory . java and modified class name detection in ReflectUtil . java to improve handling of anonymous
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the file path format in CatalinaAcegiUserRealm . java from " file : / / " to " file : "
added logging statements for server initialization and manager startup in AmbariServer . java to improve visibility into server startup events for better debugging and monitoring
added null checks and assertions for initialization and modification in JSONWriter . java to enhance robustness and prevent potential NullPointerExceptions during JSON processing
refactor ` SliderAppsViewControllerImpl ` to accept ` FileSystem ` as a parameter and update user proxy creation logic to enhance flexibility
added a check to ensure the backgroundManager is not attached before attaching it to prevent potential NullPointerExceptions when attaching the window
added functionality to set the current tab in AllAppsTabbed and updated child height calculations in PagedView and Workspace to improve tab navigation and
added null check for the URL in BaseDataSource and a corresponding test in SimpleDataSourceTest to ensure that a valid URL is provided to avoid runtime
updated PebbleModuleTest to enable JUnit tests for various Java versions to ensure compatibility with newer Java versions while maintaining compatibility with newer
added EditNameDialogListener to handle directory creation dialog to improve user experience by allowing directory creation with a new name
added functionality to toggle bar border width in multiple activities to enhance user experience by allowing toggling of bar borders in the chart
updated SSL URI from " okcoin . com " to " okex . com " in OkCoinExchange . java to ensure compatibility with the
make acceptedforagetest # testpickmovemaxscore ( ) and acceptedforagetest # testpickmovefirstlaststepscore
replaced FileChannel with SeekableByteChannel in Files . java and added file reading logic in BytesAndLines . java to improve performance and
refactor getFlattenFieldTransferPair method to accept a FieldReference parameter for improved type safety to enhance code clarity and maintainability by
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
simplified the conditional check for serialization configuration objects in SerializationConfigurationParser . java to improve readability and maintainability of the code
added heap limit configuration for debug devices in QuickstepProcessInitializer . java to improve memory management for debugging purposes on debug devices
replaced direct calls to ` mapper . applyAsDouble ( t ) ` with a temporary variable ` val ` to improve code readability and
[ log4j2 - 1349 ] do not swallow exception in abstractloadbundletest
added a conditional check before serialization of the deletion time in PrecompactedRow . java to ensure that the serialization only occurs when the deletion time
updated rendering intent return values in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to ensure
close meter registry early in the shutdown
change log level from warn to info for unexpected config center
added tests for certificate generation with zero and zero byte values in CertificateFactoryTest . java to ensure proper handling of certificate generation with zero and zero
camel - 16462 : camel - core - support ambiguous binary operator in simple predicate parser . thanks to david mollitor
removed the ` ensureWindowsDismissed ( ) ` method from ` onTabUnselected ` and added focus handling in ` onFocusChanged
add user . name to accesslogvalve . openfail log message
updated matrix scaling from 0.4 f to 0.01 f and added null check for submeshnames in OgreXmlLoader to improve
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotation to UpgradeResponse . java to indicate that these methods are outdated and should not be used in new code
added support for generating d . ts files in the transpilation process to allow users to specify the output directory for generated d . ts files
set default fetch timeout for kinesis consumer factory ( # 3558 )
added a " . html " suffix to the timestamp parameter in StreamingDataflowWorker . java to enhance the dataflow worker ' s functionality by
updated the default value of METASTORESERVERMAXTHREADS from 100000 to 1000 to increase the maximum number of threads for the metastore
changed the return type of the ` onTaskSnapshotChanged ` method from ` void ` to ` boolean ` and added a return statement to indicate
update shadow radius setting in SwipeUpAnimationLogic to use a dynamic value to improve flexibility by allowing dynamic shadow radius configuration
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to validate the functionality of the aggregator input in the
updated loop condition in MarketSellAssetActuatorTest . java to use ' end ' instead of ' limit ' and added error handling
do n ' t use internal source in polyglot context if source be not interactive .
updated conditional check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure proper handling of null values in keytab file creation
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController to enhance functionality by integrating display management capabilities
updated toolTipText assignment for root directory in MetalFileChooserUI and SynthFileChooserUI to ensure consistent display of " Desktop
updated the method for obtaining the screen size from getToolkit ( ) to getDefaultToolkit ( ) to ensure compatibility with the default tool
changed the return type of the recognise method in TensorflowRESTCaptioner and TensorflowRESTRecogniser from List < ? extends Recogn
added unit tests for fetching results using expressions and projections in JPASQLBase . java to improve test coverage and ensure correct functionality of
removed drag index check and debug print statement in FreeformFinSetConfig . java to simplify the code and improve readability by eliminating
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to reflect the
added ` spendAllGas ( ) ` method call in ` Runtime . java ` to ensure that the program can properly set the call value and
updated string formatting in ` ElementsShouldSatisfy ` , ` ZippedElementsShouldSatisfy ` , and ` ElementsShouldSatisf
marked the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor unsafe plugins registration logic into a separate method to improve code readability and maintainability by reducing duplication
added Hint annotations to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and implemented a test for blacklisted modules in AndroidBinary
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to adjust the vertical positioning of the
removed duplicate calls to ` doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to streamline code by eliminating redundancy
[ konnected ] rename konnectedbindingconstants . host to konnectedbindingconstants . base _ url ( #
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy ` to
updated test table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to use the
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure correct parsing and deparsing of SQL
added motion event handling and refactored copy mode initialization in ConsoleActivity . java to improve code readability and maintainability by encapsulating copy
replaced custom XML output implementation with Java ' s built - in XML parser and improved resource management to enhance XML output handling and ensure proper
camel - 16462 : fix npe in custom aggregation strategy when exchange be null
camel - 16462 : camel - jbang - log exception message should not depend on exchangehelper
move basicconfigurator to the ' classic ' package and update import statements accordingly to improve organization and clarity of logging configuration
[ hotfix ] [ table - planner - blink ] remove assertion for phonode in typequalifierdataflowanalysis
removed unused import of SharedStringSource in TestXSSFRichTextString . java to streamline dependencies and improve code clarity
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters
refactor multiple Java classes related to box and whisker calculations to improve code readability and maintainability
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the ` NormUpdate ` class to static and updated string comparisons to use ` . equals ( ) ` instead of ` = = ` to
changed the visibility of the singleton instance and the constructor of the IndexFileNameFilter class from public to private to restrict access to the singleton instance and
refactor if statement tests to use a unified plugin definition and improve test assertions to enhance code readability and maintainability by reducing redundancy
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure
renamed the ` nullSafe ` method from ` read ` and ` write ` to ` nullSafe ` in ` TypeAdapter ` to simplify
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected value for the distribution
added EXIFReader class to handle image metadata processing to improve image processing capabilities for Exif images in the application
update tostandardunit ( ) to return ' none ' instead of ' unknown _ to _ sdk _ version '
[ rhdm - 2322 ] fix classcastexception in pmml4datafactory ( # 2323 )
updated the message format in FluentProtocol . java to include additional context about the expected case of repeated CounterCurrencyTransferStartedMessage to improve clarity
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 16465 ] reset label range when encounter branchtargetindexoutofboundsexception .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java to ensure that initialization occurs in a finally
added a ` find ` method to ` TicketCatalog ` and modified logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry `
refactor SSL connection initialization and test assertions in TestSSL . java to improve readability and maintainability of the code
[ hotfix ] [ runtime ] fix possible deadlock in sortmergesultpartitionreadscheduler
update jmsio . read ( ) and jmsio . write ( ) to use long . max _ value
updated PluginHandleController , PluginHandleDao , PluginHandleDao , PluginHandleDao , PluginHandleDao , PluginHandleDao , PluginHandleDao
added start ( ) method call to span creation in DefaultSpanCreator and SleuthAdvisorConfig to ensure span creation starts correctly for improved
added GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableStencilFormat to IOSApplicationConfiguration
refactor login attempt logic into a separate method and add a test for user lockout after failed attempts to improve code readability and maintainability
fix ( pytorch ) : throw unsupportedoperationexception for real ( ) and complex ( )
refactor lockName retrieval logic in SynchronizationStatistics . java to use a while loop for better readability to improve code clarity and ensure
renamed Implements and ShadowPicker classes to improve clarity and consistency in naming conventions
refactor HttpClientOptions initialization to use configurable settings for HTTP / 2 connection settings to improve flexibility and configurability of HTTP / 2 connection
added support for DynamicArray in DynamicStruct and improved type handling in SolidityFunctionWrapper to enhance type safety and provide clearer error
added default value for " text - align " , " font - size " , and " font - size " in InlineLayout and FontUtil
added constructors to CopyStep for handling file paths and modified CopyStepTest to include a new test for shell command path retrieval to enhance functionality and
fixed - rsemaphore . acquire ( ) and addpermit ( ) method do n ' t work correctly . # 3640
camel - 16462 : fix camel - core - java - dsl - java - dsl - java - dsl - java - dsl - java
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code
changed the data type of lists from String to ByteString in WitnessScheduleStore . java and updated related methods accordingly to ensure compatibility with the updated
added a check for non - empty resultsMeta before printing to the error message to avoid printing empty results when there are no results available
refactor ConcurrentLinkedQueue logic to improve null handling and introduce a new RemoveLeak class to improve code clarity and facilit
added a boolean parameter ` addSpecialTokens ` to several methods in ` HuggingFaceTokenizer ` to control the addition of special tokens to
[ hotfix ] [ runtime ] use collections . ncop instead of manual arraylist
updated chunk data handling in LoadSingleTsFileNode . java to utilize alignedChunkData for improved clarity and functionality to enhance data
added session storage context key and updated session state handling in DuoSecurityMultifactorWebflowConfigurer . java to enhance session management
add a unit test for the schema validation in the testJspDocumentParser class to ensure that the schema validation functionality works as expected
added a default constructor to TypeAdapter and updated the @ Ignore annotation in Java17RecordTest to clarify the purpose of the @ Ignore
do n ' t swallow suspendedevent . kill in repl mode .
refactor AntPathRequestMatcher class for improved readability to enhance maintainability and facilitate future updates
refactoring : remove unused parameter in createresourcepolicy ( )
added a null check before releasing the deflater entry in GzipHttpOutputInterceptor . java to prevent potential NullPointerExceptions when releasing the def
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup of tests after each test execution
updated the MD5 checksum calculation to normalize unicode characters to ensure consistent MD5 formatting by removing unwanted characters
refactor command handling in Example . java for improved readability and null safety to enhance code robustness and prevent potential NullPointerExceptions
add miss @ override annotation and make keylistener final .
changed the type of the ` objectToSave ` variable from ` T ` to ` DBObject ` and added a new test for saving a
added functionality to handle multiple remote addresses in RequestUtils and created a corresponding test in RequestUtilsTest to enhance functionality to support multiple remote addresses in
updated the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` and changed its return type from ` BiFunction `
update test to use localhost instead of localhost
updated glyph processing logic in GlyphLayout . java and added a new test case in BitmapFontTest . java to ensure proper handling of whitespace wrapping
[ hotfix ] [ pulsar ] pause or resume split in pulsarsourcereaderbase and pulsarpartitionsplitreaderbase
added a new configuration variable HIVESCRIPTIDENVVAR in HiveConf . java and updated ScriptOperator . java to utilize it to enable
refactor the ` getListedTermCounts ` method to use streams for term counting to improve performance and readability by leveraging streams for
added a new action class ` UseSeparateStepSizeAction ` to the ` platform . plugin . jog . useSeparateStepSize
added user ID and modified unlock logic in FileMenuFilter . java to enhance file locking functionality to improve user experience by allowing users to unlock files
updated region server handling logic in RoundRobinTableInputFormat . java and modified test cases in TestTableSplit . java to improve clarity
updated the value of the Sampled header from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter
pdfbox - 4071 : use ioutils . close ( ) instead of null check
added support for fullscreen mode in GwtGraphics and GwtApplication classes to enhance user experience by allowing dynamic resizing of the canvas based
changed the type of ` issuers ` and ` parameterName ` from ` String ` to ` URI ` in ` WebfingerIssuerService `
added a new test class ` SoulApacheDubboClientConfigurationTest ` for configuration of ` DubboConfig ` to ensure
replace usage of Gdx . files . internal with resolve for file path handling in SkinLoader . java to improve code clarity and ensure
added trace logging for attributes in ChainingAttributeReleasePolicy and changed log level from warn to info in OidcDefaultJsonWebKeystoreCache
replaced ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK . lock
changed the package declaration of ` java . lang ` in ` Compiler . java ` to maintain consistency in package structure
added handling for CodeException in NullDerefAndRedundantComparisonFinder . java to improve error reporting for specific code exceptions in the redundant
update dashrendererbuilder to use defaulthttpdatasource instead of content - type
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` and a corresponding getter
change return type of ` set ` method from ` WritableConfig ` to ` Configuration ` across multiple classes to standardize the return type of the
added error handling in the checkErr method in AutoScalingHandler to ensure proper error reporting for command payloads
refactor CombinedDataset class to improve code readability to enhance maintainability and reduce complexity
replaced the variable ` buf ` with a variable ` b ` in the ` InflateIn _ DeflateOut . java `
add logic to remove cryptography restriction from the default policy if not need
added a cancellation check and refactored chunk generation logic in Entity . java to improve responsiveness and ensure proper handling of entity teleportation
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to verify the functionality of
added null check and initialization for vContext in Vectorizer . java to ensure vContext is not null before use to prevent potential NullPointerExceptions
fix wialon speed ( fix # 1351 )
hbase - 22837 addendum fix testclientclustermetrics . testmetricsuseraggregate ( ) to skip test if user enable metric
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
updated boolean flags for user presence , visibility , and attachment status in Launcher . java to improve clarity and control over receiver unregistration logic
refactor AsyncFile , HttpClientRequest , HttpServerResponse , NetSocket , and ReadStream classes to improve code organization and maintainability
add params to the zadd method call in PipelineBase . java to enhance functionality by allowing parameters to be passed during the zadd operation
fix checkstyle issue in dspace - common
rename ` TestAsyncMessages ` class to ` TestAsyncMessagesPerformance ` to improve clarity regarding the purpose of the test class
refactor ` VersionedTargetGraphBuilder ` and ` VersionPropagatorBuilder ` to use an ` Optional < TargetNode < ? , ? >
updated epoch seconds checks to use negative values instead of hardcoded values to improve accuracy of time zone validation logic
updated the return value of ` field _ pictureData . length ` in ` EscherBlipRecord . java ` and added a new test
removed redundant row and column initialization in JSONParser . java to streamline code by eliminating redundancy
replaced ` JavaType . ShallowClass . build ( fullyQualifiedTypeName ) ` with ` java . util . regex . Pattern ` for
updated the DETAIL _ THUMB _ HEIGHT value and introduced a new action for playback trailers in BaseItemDetailsFragment . java
added a method to remove glyph information from the cache in CStrike . java and implemented it in CStrikeDisposer . java to
act - 1889 : terminate all child execution on termination of a process instance ( act - 1889 )
camel - 16462 : camel - core - add support for the xmlrootelement annotation to the type name strategy
updated the endpoint in SimpleHttpClientTests from " http : / / apereo . org / scottb . html " to " https
add ` ` prdef ' ' option to reset all preference to default value
changed access modifiers of several fields and methods from private to protected in ThriftMetrics and ThriftServer classes to allow subclasses to access these fields and methods
removed deprecated channels for manual fan speed in the DanfossAirUnitHandler to improve code clarity and maintainability by eliminating
use hamcrest assertion instead of junit in integrations / cdi / cdi / testendpoint . java
removed duplicate code for stopping the expansionHelper in TweetActivity . java to streamline the code by eliminating redundancy
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to prevent potential NullPointerExceptions and ensure proper object comparison and
server : set root disk size in custom params if it do n ' t exist
updated prediction visibility logic to conditionally show suggest apps in the drawer based on user preferences to enhance user experience by allowing customizable visibility based on
[ geos - 7011 ] return a bad request for invalid bbox in api bbox
added validation methods for value and position parameters in LibrustzcashParam . java and updated the Ivy value in Librust
deprecate ithrowableentity in favor of fml cpw . mods . fml . common . registry . ithrowableentity
added random values for x and y in NodeDataImpl . java to introduce random values for positioning in the NodeDataImpl class
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for missing scopes to improve
refactor JavacStep to use try - with - resources for better resource management to improve code readability and ensure proper closure of the
updated the VERSION constant from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version of the
added a condition to check for deep shortcuts in the LoaderCursor class to ensure proper handling of deep shortcuts in the loading process
added a ` hashCode ( ) ` method to ` TimeGranularitySpec ` class to ensure proper hashing behavior for instances of ` TimeGranularity
changed access modifiers of classes from private to protected in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses to access these classes for better ext
added a boolean flag ` useProxyResponseCode ` and modified proxy handling logic in ` HttpURLConnection ` to ensure proper handling of NTLM proxy
aarch64 : use scratch register instead of aarch64 . sp to allocate scratch register .
server : fix memory allocation calculation for host vms
updated condition in JSONResponseWriter to include score only when maxScore is not null to ensure score inclusion only occurs when maxScore is not null
change audio codec from 22050 to 44100 in AudioRecorderTest . java to ensure compatibility with the latest audio formats
update calculation of newOriginX in RocketFigure . java to account for subject bounds to improve accuracy of origin positioning based on the
druidquerybasedinputformat : fix nullpointerexception when druid data source be null
added ORIGINAL _ TYPE to the ORIGINAL _ ID and ORIGINAL _ TYPE constants in CustomProperty . java and updated pattern
added a static method ` create ` to create an ` Index ` instance with a parent and data map to facilitate the creation of
simplified the return statement by removing unnecessary variable assignment to improve code readability and maintainability
updated the schema compatibility logic to include an index for the reader and writer type to enhance compatibility checks and ensure correct handling of reader and writer types
added support for handling entity paths in QueryUtils and updated related tests to ensure correct association handling in entity paths and improve test coverage
replaced direct access to spans with synchronized blocks for thread safety to ensure thread safety during concurrent access to the spans list
changed the return type of the ` getText ` method from ` List < Object > ` to ` List < ? > ` across multiple classes to
updated exception handling and logging in ViewContextImpl . java to improve error handling and provide more detailed logging for authentication failures
refactor OAuth2AccessTokenEntity to improve access token handling to enhance security and maintainability of access token management
updated error messages related to request processing in SCBEngine and related classes to clarify that the service cannot process the request due to STATUS
added new project files for Default - 1024w - 1366h and Default - moe - resources in GdxSetup . java to
updated imports in TestSearcherManager . java and added a ConcurrentMergeScheduler to the MockAnalyzer to improve merge performance by utilizing a concurrent
added null and empty check for SessionState and improved list handling in GenericUDTFInline to enhance robustness and prevent potential NullPointerExceptions
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code readability and maintainability
make spreadsheet key listener more responsive to mouseup
added service registration for persistence and session factory services in HibernateBundleActivator and refactored related tests in OsgiTestCase to improve
fix typo in hikaripool . gettimeout ( ) .
remove the createcomponentfile ( ) method and add a non - packaged resource directory .
updated file handling logic in Compat . java and modified file name checks in FileOpener . java to improve cross - platform compatibility and ensure
changed the return type of the row ( ) method from Cell < T > to void to simplify the method implementation by eliminating unnecessary return
improve error message when port be specify multiple time ( # 2370 )
added null mask functionality to WebSocketClient and modified WebSocketConnection initialization to utilize a fixed mask generation mechanism
modified the ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of a ` Rel
added nodeSelectionStats tracking for preferred and non - preferred node selections in NodeScheduler and NodeSelectionStats to improve tracking of node selection counts for
added a new class Person with a name property and its getter / setter methods to provide a way to manage and retrieve the name of a Person
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve clarity and correctness of the owner pointer
added a clock functionality and modified fade - in and fade - out states in PlaybackOverlayFragment . java to enhance user experience by providing a
fix updatecomparatoroutputlevel ( ) to use the current position instead of the current position .
changed the implementation of the ` IMPL ` field from ` private static final ` to ` private static ` and updated exception messages to improve cl
update sudoku event to be run on the Event Dispatch Thread ( SwingUtilities . invokeLater ) to ensure that updates occur on the Event
replaced DefaultInetAddressAdapter with CollectionTypeAdapter and updated related classes to use a more generic type adapter for InetAddress to improve type handling
added methods to assert the presence of a single element in the Series class and corresponding test cases to ensure that the Series class correctly handles null values
changed the option for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
updated lat and lon comparisons in GeoRelationUtils and modified GeoRect construction in GeoUtils to improve accuracy of geospatial calculations and enhance
server : fix getdiskoffering method to use getdiskofferingid ( ) instead of getid ( )
added cleanup method to HazelcastTest class to ensure Hazelcast is properly shut down before and after tests
added tests for AES / cipher initialization with different padding algorithms in BlockCipherTest . java to ensure proper error reporting for missing or incorrect cipher modes
added logging filters to the QFileClient class to improve clarity of log output for better debugging
fix @ stub annotation and add @ stub annotation to aop proxy .
initialize currentconnectionaddress to proxy socket address if it ' s not already set
replaced manual addition of demand with MathUtils . cappedAdd to improve code readability and maintainability by using a more modern utility
updated image output stream handling to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
replaced direct calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct calls to ` startActivity ( Intent
updated constructor and method signatures for better clarity in MutableIndexColumn and related classes to improve code readability and maintainability by explicitly indicating parameter
http : / / issues . apache . org / jira / browse / amq - 4892 - add support for karaf
added @ Autowired annotation to the PersonRepository instance in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the PersonRepository instance
changed the exception type from Exception to InterruptedException in UIServer . java and updated log message formatting in TestVertxUIManual . java
fix switch / cases indentation in cactus
refactor mouse handling in ThemeSelector to use MouseMotionAdapter for mouse events to improve code readability and maintainability by encapsulating mouse event
[ java ] : fix flow control padding for min multicast .
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance flexibility in editing behavior
use illegalargumentexception instead of exception in statToksentannotator
added handling for distinct queries in ClusterIntegrationTestUtils and QueryGenerator classes to improve query generation logic to accommodate distinct queries and enhance query
use stringsimilarity instead of stringsimiliarity in jnifields .
add javadoc to filelistpanel , jmetermenubar , jmetermenubar , and jsyntaxtextarea .
added null check for children before iterating to avoid potential NullPointerException when children is null
added token and current location tracking in MessagePackParser and updated corresponding tests in MessagePackParserTest to enhance parsing functionality and improve test coverage for
added locale management to the AbstractSolrMorphlineTestBase class to restore and restore the default locale after tests to ensure consistent locale behavior during tests
removed conditional checks for launcher status bar size in LauncherFragment . java to simplify the size calculation logic for better readability and maintainability
added a new test file ` MetricsReporterTest . java ` to implement unit tests for the ` MetricsReporter ` class to ensure proper registration and
camel - 16462 : camel - osgiserviceregistry do not need to hold type cache in osgi service registry .
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for Rectangle objects
do not use the same sink name in all test in streamkafkaptest ( # 24579 )
updated DSAParameterGenerator . java to improve validation logic for prime strength and replaced hardcoded values with constants to enhance code clarity and maintain
added LLAP configuration to enable FQDN usage for AM machine submission to ensure proper identification of the AM machine when submitting work to LLAP
change assert to eventually on client oome test . fix #
added a method to retrieve the CMO object ID and updated multiple shape classes to use this new method to ensure consistent object ID retrieval across different
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of the distinct scalar
renamed multiple classes related to Trav functionality to improve clarity and consistency in naming conventions
fix : remove unused bind / unbind method from kubernetesclient
updated the ` DetailsDescriptionPresenter ` and ` Utils ` classes to use a new method ` getInfoRow ` for displaying subtitle details to improve code
updated JUnit annotations from @ Before and @ After to @ BeforeEach and @ AfterEach in TestAuthHandlerBoot and TestRSAProviderToken
do n ' t swallow exception when generate xml summary .
replaced calls to ` intPool . reset ( false , false ) ` with ` bytePool . reset ( ) ` in ` TermsHash
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated ShadowWindowManagerGlobal to handle window session delegation based on API level to ensure compatibility with TIRAMISU and improve window management functionality
refactor URL handling logic in UrlHelper to differentiate between scheme and port based on request scheme to improve clarity and functionality of URL generation
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQL database behavior
hbase - 27979 fix checkstyle issue in hbase - server
fix npe in emzuli pipe , and add a filtereventhandler class
simonstewart : make the htmlidentifier logging configurable
updated method calls in HiveLookupTableSource and HiveLookupJoinITCase to use getTableSchema ( ) instead of getProducedTableSchema (
deprecate setthrowswhenusewrongthread ( ) and add checkforapplicationthread ( )
updated schema name handling in SequenceSnapshotGenerator to use CatalogAndSchema for improved schema customization to enhance schema management by using CatalogAndSchema
updated color handling in SpriteBatch and SpriteCache classes and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugSt
fixed - redissonconnection . join ( ) and redissonconnection . join ( ) method throw classcastexception . # 3503
added logic to retrieve the base URL and ensure it does not already exist in the statistic year cores to improve URL handling and prevent duplicate entries in
renamed ` launchTask ` to ` launchTaskFromView ` and introduced a new method ` launchTask ` in ` TaskActionController `
updated MorfologikFilter to accept a dictionary resource and improved dictionary loading logic to enhance flexibility in specifying dictionary resources and enhance
updated sorting options for community and critic ratings in GridFragment . java to improve clarity and consistency in sorting options
added imports for ViewKt and ListRow , and modified visibility logic in CustomListRowPresenter to ensure proper handling of ListRow headers and
added a try - finally block around the switch - case structure in the StressAction . java file to ensure proper cleanup of the start count
refactor HttpClient class implementation to improve performance and maintainability of the code
replaced instances of ` accordingTo . isCaseSensitive ( ) ` with ` accordingTo instanceof DB2Database ` in multiple files to improve
add java time support for jsr310 serialization
replaced the import of MDC from Apache Log4j to SLF4J in LogUtils . java to ensure compatibility with the latest
replaced instances of TypeBearer with Type in PhiTypeResolver . java to standardize type handling and improve code clarity
removed unnecessary whitespace in the CoinbaseTransactionStatusDeserializer class to improve code readability and maintainability
added a method to retrieve build targets from BuckConfig and updated related logic in ProjectCommand and BuckConfigTest to enhance build flexibility
removed redundant initialization of idleStrategy in Ping . java to improve resource management and avoid potential memory leaks
updated ` OCFile ` to use ` ContentResolver ` instead of ` ContentProvider ` for content resolution to improve compatibility with Android ' s
removed unnecessary state change checks for autoscale , createMissingNodes , and selfLoop checkboxes in ReportPanel . java to streamline code for
[ hotfix ] [ test ] fix npe in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` that includes a recipe for removing calls to ` System . gc ( )
removed unnecessary super ( ) calls from multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added a method to set the UIID with an icon in the ScaleImageLabel class to ensure the correct icon is applied when updating the UI
replaced instances of ` foundEntry ` with ` update ` for better clarity to improve code readability and maintainability by using a more
updated command - line argument checks to include " - cp " in addition to " - classpath " to enhance flexibility in command - line argument
[ gr - 22387 ] fix compilation issue in avutil . java .
updated initialization logic in StorageService . java to ensure proper initialization state
updated Test7196045 . java file to improve test coverage and reliability
updated density and decay values in ShaderParametersLightShaft . java from 1.5 f and 0.9 f to 1.0
added new properties ` withState ` and ` stateData ` to ` OidcConfiguration ` and updated related methods in ` OidcRedirectAction
ddl : add nullable constraint to unique constraint when nullable
added federated sharing capability check to user queries in UsersAndGroupsSearchProvider and EditShareFragment to ensure users are only allowed when federated
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to indicate that document values should not be included in
refactor BufferAlignmentAgent and BufferAlignmentInterceptor for improved error message formatting and clarity to enhance code readability and provide clearer error
added a new method ` intForEach ` to the ` Int2ObjectHashMap ` class and modified the ` IntObjConsumer ` interface to
fix scoreboards not be share in the global map storage . close # 4892
changed return type of count methods from Long to long in multiple repository classes to improve performance and reduce memory usage
updated snapshot creation logic in MManager . java for better clarity to enhance readability and maintainability of the snapshot creation process
refactor dot product calculation in VectorUtil to improve clarity and accuracy of score computations to enhance code readability and maintainability while ensuring
added a threshold constant and methods to manage the latest confirmed block number in ` DynamicPropertiesStore ` to enhance the system ' s control over block
replaced the ` setLocale ( ) ` method with a new ` Systems . setLocale ( userSpecifiedLocale , context , resources ) ` method to
added a check to determine if a new database was created in LauncherClings . java and implemented the wasNewDbCreated method in Launch
refactor assertions and collection iteration logic in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability
added a null check for the datamodel before determining if is64Bit is set to improve code readability and prevent potential NullPointerExceptions
added logic to check if the current thread is the same as the current thread in TestIndexWriterDelete . java to ensure that operations are performed
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method
updated imports from ` org . jellyfin . apiclient . model ` to ` org . jellyfin . sdk .
added functionality to import and set XML attributes in the Batik SVG drawer to ensure proper handling of SVG elements in the document
added a try - catch block for handling IllegalArgumentException in ConsoleKeys . java to improve error handling by logging warnings when parsing user configuration fails
added support for " WaitForResult " in CodenameOneActivity to manage the waiting state based on the " WaitForResult " intent to ensure
updated constructors in HitQueue , SpanPositionQueue , PriorityQueue , TopOrdAndIntQueue , and TermAutomatonScorer to use
added functionality to display and display widget descriptions in WidgetCell . java to enhance user interface by displaying widget descriptions when available
added a maximum attribute count check in the Attribute class to enforce a limit on the number of registered attributes to prevent runtime errors when the maximum attribute
move predicatestest from com . hazelcast . query to com . hazelcast . query . impl . predicates
camel - 16462 : camel - core - add case - insensitive option to defaultheaderfilterstrategy
refactor InlineLayout and Breaker classes to improve string wrapping logic to enhance code clarity and maintainability by using more descriptive variable names
added nullability annotations and improved view inflation logic in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
refactor ` shouldInstrument ` method to include ` isFromAndroidSdk ` for better instrumentation checks to enhance code clarity and maintainability by
added a check to return the last column in the table if the association is an insert destination before the source to ensure that the correct number of
updated memory limit path retrieval in CmdModifierTest . java to utilize a dedicated method for determining the memory limit based on the Docker version to
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in multiple files to improve
added a null check for the specified source under test in JavaTestRule . java to improve error handling by providing a clearer exception message when
use minecraft 1.9 . 2 instead of minecraft 1.9 . 4 for minecraft 1.10 . 2
added a check to ensure atIndex is non - negative to prevent potential ArrayIndexOutOfBoundsException during string manipulation
increased timeout duration from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds to 5000 milliseconds to allow more time for tests to
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to improve flexibility in managing assist content requests
replaced ` StringUtil . createReadableString ( ) ` with ` StringUtil . encode58Check ( ) ` in ` VoteWitnessProcessor . java
updated test cases in DefaultMethodRegressionTests . java to improve test coverage and reliability of method execution
refactor WorkloadManagerMxBean to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests ` to ensure compatibility with the latest Kafka library
added a call to close the container loader in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and new test cases for various exception types in FaultTolerantExceptionClassesTests to
improve error message in configbuilder to provide more context about runner
added ` Map < String , String > extraProperties ` parameter to ` applyTunerConfigs ` method across multiple classes to allow specification of additional
added a check to prevent adding duplicate segment instances in the PinotRealtimeSegmentsManager to ensure that only active segments are added to the list
added a check to return null if touchable is disabled to prevent potential errors when the touchable state is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to verify the functionality
fix npe in abstractcachelastartitionrequest when cache config do n ' t exist
refactor module installation logic to check if a node package is installed before installing the module to improve clarity and maintainability of the module
added @ ManagedObject and @ ManagedOperation annotations to MBeanContainer and Destroyable classes to enable better management and management of MBeans in the application
changed the condition from checking ` settings . inAppBrowser ` to ` false ` in ` LongClickableSpan . java ` to simplify the
replaced ` equals ( ) ` calls with ` . equals ( ) ` calls in ` EspMilightHubHandler . java `
updated conditional check in ` Types . java ` and added new classes ` T6558559a ` and ` T6558
add more info on player edit position
camel - 14850 : camel - kafka should wait for all kafka task to complete before shut down the kafka consumer
removed the default ` examples ( ) ` method from the ` Schema ` class to simplify the interface by eliminating unnecessary default methods
modified thread handling logic in AgentRunner . java to ensure proper termination of the loop when the thread is not alive
removed the time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to streamline data handling by eliminating unnecessary
added a null and length check for shards in FacetComponent . java to ensure that only one shard is present in the request
replaced the use of ` LinkerProvider ` with ` CxxPlatforms ` in ` RustBinaryDescription ` and ` Rust
added name property getter and setter methods in JaasAuthenticationProperties , JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to
added logging statements for output files and methods in CFGPrinterObserver and improved error handling in IdealGraphPrinterDumpHandler to enhance debugging capabilities
refactor scan range handling in BaseQueryPlan to use a single variable for small scan threshold to improve code readability and maintainability by redu
added " routeId " to the return statement in the filterToStringCreator method to include the route ID in the retry configuration to improve clarity
replaced calls to redisplay ( ) with callWidget ( REDISPLAY ) in LineReaderImpl . java to streamline widget management and
replaced direct calls to ` onOverviewShown ( Launcher launcher ) ` with ` DiscoveryBounce . showForOverviewIfNeeded ( ) `
refactor conditional checks for ` globalMinPackedValue ` and ` globalMaxPackedValue ` in ` CheckIndex . java ` to
updated the ` publish ` method to use ` updateLastState ` instead of ` true ` to ensure the correct state is published based on the
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper syntax for string list identifiers
added a null value to the exp list in SpliteratorCollisions . java to ensure proper handling of null values during iteration
simonstewart : add ` ` textcasecasecase ' ' and ` ` exacttextcasecase ' ' to the ` `
replaced multiple instances of ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code
fix for mondrian - 1205 : do not set fetch size to 1 for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid processing exceptions when the channel is already closed
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
updated the calculation of the window radius in QuickstepAppTransitionManagerImpl to account for rounded corners on Windows to ensure compatibility with devices that support
refactor ` DesktopTaskView ` to use ` View ` instead of ` ShapeDrawable ` and update background handling to improve flexibility and
added a new instance of UpstreamCheckService in UpstreamCheckServiceTest . java to ensure proper initialization of the upstream check service in the
changed log level from warn to debug for session immortal messages in AbstractSession and AbstractSessionManager to improve logging granularity for better debugging
replaced error logging with returning locks instead of throwing an exception to simplify lock retrieval process by returning locks instead of throwing an exception
[ hotfix ] fix checkstyle violation in java . base
added a boolean flag ` containsCustomData ` and modified mipmap generation logic in ` FileTextureArrayData . java ` to ensure m
camel - 16462 : camel - core - util : fix flaky test of defaultmaskingformattertest
added a boolean field ` selectable ` and methods for managing selection state in the List class to improve user interaction by allowing toggling of selection
added a check to return false if the vector ' s value count is zero in LlapArrowBatchRecordReader . java to ensure that the
added file separator handling and improved debug output in PolicyContext . java and its test in TestPolicyContext . java to enhance file path resolution
replaced Set with List for flatQueries and expandQueries in FieldQuery . java to improve performance by using a more suitable data structure
refactor TLSRestrictions class for improved security to enhance security and maintainability of the code
http : / / issues . apache . org / activemq / browse / amq - 2296 - use daemon to close producer
updated the ` assertNodeStateProvider ` method to accept an ` ignorableNodeValues ` parameter and modified its logic accordingly to allow for more
added a check to delete the " LOCK " lock if it exists in RocksdbMavenPomCache . java to ensure that the
updated the client port initialization in MiniZooKeeperCluster . java and changed the test assertion in TestHQuorumPeer . java to ensure correct port
refactored response retrieval logic in RestClient . java to improve error handling and logging for better resource management
updated the method for converting segmentTarURIs to segmentTarURIStrs in IngestionUtils . java to improve clarity and consistency in
updated loginStudent method parameters to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure
added null check for item ID in EnhancedBrowseFragment and StdBrowseFragment to ensure robustness by preventing potential NullPointerExceptions during item deletion
increased the number of strings from 500 to 100 in TestSpecialOperations . java to increase the number of strings from 500 to 100
fix memory leak in wkbattributeio
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity by accurately representing the method ' s purpose
added a method to check if a state machine is a direct submachine and updated state entry assertions in tests to improve state management by preventing
added type checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding test cases in MultimapTest . java to ensure correct
added JoinOperation interface to PostJoinOperation class to enable joining functionality in the post - join operation
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify the functionality of the PostgreSQL
fix amq5035test . testdestroydeletesubscription fail on slow machine
rename AvaticaDatabaseMetaData . java file to improve clarity and consistency in naming conventions
changed ` lifeTime ` , ` idleTime ` , and ` maxWaitTime ` types from integer to String in ` MongoDbConnectionPoolProperties
refactor audio format creation to use the media service ' s media factory to improve code clarity and maintainability by utilizing the media service
refactor filter and domain change handling methods to return boolean values to improve clarity and control over filter application logic
[ java ] add option to disable timeout handler in shufflehandler .
replaced hardcoded value of ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ ROTATION
updated log messages in XPathBuilder . java and added debug logging in XQueryBuilder . java to improve clarity of log messages for better debugging and
pdfbox - 4892 : use dataresource . class . getresource ( ) . getresource ( ) instead of a relative path to
[ pmd - cpd ] add edgecasetokenizertest for escape backslashes
added a check for the presence of the ' atlas ' property in the map to ensure that a required ' atlas ' property is present and prevent
camel - 16462 : camel - spring - boot should not use property placeholder so we do n ' t have to do it .
added levelDbDataSource . closeDB ( ) in BlockchainTest . java and removed unnecessary receive listeners in KafkaTest . java to streamline
refactor line handling in CoreMarkdownNodeRenderer to use a new method for splitting lines to improve code readability and maintainability by encapsulating
updated import statements in WebServiceInboundGatewayParserTests . java for consistency to improve code readability and maintainability
replaced ` ImmutableList . Builder ` with ` newArrayList ` and updated related classes to use ` List ` instead of ` ImmutableList ` to improve flex
added a check for the " OpenJDK " JVM name in the virtual machine validation logic to ensure compatibility with OpenJDK environments in the
http : / / issues . apache . org / jira / browse / amq - 4892 - keep http / 2 connection alive
replaced hardcoded string " a _ position " and " a _ texCoords " with constant ShaderProgram . POSITION _ ATTRIBUTE and Sh
camel - 14263 : camel - core - optimize property component lookup to reduce memory usage
modified null check for accountCapsule in UnfreezeBalanceActuator . java to improve code clarity and prevent potential null pointer exceptions
update version number to 3.8 . 1 . 0 to 3.8 . 1 . alpha
updated return statements to use unannotatedType ( ) instead of a direct reference to ' t ' to ensure proper handling of unannotated
updated assertions in StorageGroupProcessorTest . java for clarity and consistency to improve code readability and maintainability by eliminating redundancy
added a new ` DumpableCollection ` to the ` dumpObjects ` method and introduced a new ` getAll ` method in ` Environment ` to
added a parameter ` waitbeforestart ` of 2500 in ` FFMpegVideo . java ` to allow for a longer wait time before
removed the ` _ skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor and related references to simplify the constructor and eliminate
updated imports and refactored test methods in AccessorsTest . java to improve code organization and enhance test coverage for list index bounds
add miss getframemap ( ) method to lirgenerator .
updated JUnit imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and SpringRunner
fix boat ' s boat positioning ( # 3446 )
updated toString ( ) method calls in Directory . java and added getLockID ( ) method in RAMDirectory . java to improve readability and provide
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the code by eliminating unnecessary method
added static methods for path assertions in BDDAssertions . java to enhance flexibility in asserting assertions within the BDD framework
updated variable names and host assignment logic in ForwardedRequestCustomizer . java and modified test cases in ForwardedRequestCustomizerTest . java
updated log level from debug to warn for multiple Kubernetes config files and improved log message formatting to enhance clarity of log messages and provide users
added OCFile handling and upload status management in UploadListActivity and FileStorageUtils to enhance file upload functionality and improve error handling during uploads
added a new ` ProviderLoader ` interface and refactored ` TerminalManager ` to use it instead of ` ProviderInstaller ` to improve the
replaced instances of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and its tests to utilize the new
replaced hardcoded column names in the SelectFromDatabaseChangeLogStatement with a dynamic column configuration to improve flexibility and maintainability of the
hhh - 14663 - postgresql dialect should select current _ schema ( ) instead of use sys . dummy
fix partition count calculation when there be no data member
added scheduler state checks and improved error handling in ExecutionScheduleManager and ExecutionSchedulerImpl classes to ensure proper scheduling behavior and provide clearer error
updated InlineBox instantiation and conditional checks in BoxBuilder . java to improve code readability and maintainability
refactor error message formatting in StatisticMap . java for clarity to improve readability and maintainability of the code
updated the return value of the getStagedRectSlideEnd method from 383 to 500 to increase the staged rectangle slide duration from 383
updated button labels in WaveInfoDialog and PlacementFragment to use bundle resources instead of hardcoded strings to improve localization support and maintainability of the
updated the condition for killing road items in BukkitMain . java to include a check for owned plots to ensure road items
added a test for setting touch exploration enabled in ShadowAccessibilityManagerTest and refactored listener handling in ShadowAccessibilityManager to improve
pdfbox - 5328 : avoid arrayindexoutofboundsexception in getsubtable ( )
use testelement . getname ( ) instead of testelement . getpropertyasstring ( ) .
replaced direct instantiation of NPOIFSFileSystem with a call to POIFSFileSystem . create ( big ) to streamline the creation
added imports for PlotArea and updated return logic in Move . java to enhance plot area handling and improve error handling
updated regex pattern for version matching in TestWebHCatE2e . java to ensure compatibility with the latest version format
updated the condition in the count check from ` count < 0 ` to ` count < 1 ` to ensure that the count is within the valid
[ kafka ] add client id to kafka consumer processor ( # 3640 )
updated import statements and added error handling in JavacCompiler . java to improve error reporting for javac execution failures
do n ' t repaint the view when there ' s no option to close
camel - 16462 : camel - spring - batch : fix checkstyle violation in camel - spring
added a method ` isAnimationFinished ( float stateTime ) ` to check if the animation has finished to ensure that the animation completes correctly based
updated import statements in LoginInfoEndpoint . java and added a new test method in LoginMockMvcTests . java to improve code organization and ensure
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified string formatting in ` HomeFragment . java `
simonstewart : remove space from the value of ` ` * ' ' and ` ` \ ' ' in the value of `
refactor ObjectHashSet implementation to improve code readability and maintainability
refactor null checks in DataUtilities . java for improved clarity and efficiency to enhance code readability and maintainability by using ` Arrays
fix creative gui not be able to delete nbt item ( mc - 12770 )
improve documentation and add test for async resource
rename target - flat - headers to target - user - headers in ProjectGenerator . java and related tests to clarify the purpose of the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 - add more
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and update its implementation to use ` EMPTY _ LABEL ` to improve clarity of method purpose and ensure consistent state reset for UI
added tests for retrieving partitions by names with single and multiple batch sizes in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct
added a closing brace to the FileListListAdapter class to enhance code readability and maintainability
changed the type of the sharees list from ArrayList to List in OCFile . java and OCFileListAdapter . java to improve code
update the index used in the removeViewInLayout method from 1 to 2 to ensure the correct child view is removed from the layout
removed unnecessary " org . eclipse . jetty . util . server . internal " and " org . eclipse . jetty . server
change the default value of the S3Request policy from true to false to disable the caching mechanism for S3 requests
fix jfxRadioButtonSkin update animation when timeline be null
updated the condition to check for the length of splits and added an exception for invalid DeweyNumber parsing to improve error handling and provide clear
updated the handling of categorySet by creating a new string and modifying its format to improve the readability and usability of the category string output
corrected the spelling of " close control " to " close " in WebSocketClientTest . java to improve clarity and accuracy of the
added null check for classLoader in WebappLoader and updated test assertions in TestVirtualWebappLoader to ensure proper handling of null class loader and
reordered the addition of inherited fields from ` collectInheritPersistentFields ( managedCtClass ) ` to ` collectInheritPersistentFields ( managed
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to verify the functionality of the ` PorterStemFilter ` to ensure that the
change method name from postBatchMutate to postBatchMutateIndispensably and add a success parameter to indicate if the mutation was
changed package names from ` exlore . support ` to ` explore . support ` across multiple test files to reflect the new organizational
fix thread safety issue in chat window manager
replaced multiple instances of ` Sys . touch ( ) ` with a single call to ` Sys . touch ( ) ` across multiple Java files
updated HgCmdLineInterface to include " - mardu " as a command option and refactored untrackedFiles method implementations to
camel - 15836 : camel - netty should use the timer from the endpoint rather than create a new one .
changed fields in DirectionalLight , PointLight , and SpotLight to be final and added a range field in PointLight and SpotLight to
updated width and height calculations in X11GraphicsConfig . java and WGLGraphicsConfig . java to ensure minimum dimensions of 1 to avoid potential
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a consistent way to
added annotation filtering functionality in ClassFinder . java to enhance class loading capabilities to improve performance by optimizing class loading based on inner classes and annotations
modify the handling of ` newLength ` in ` BytesColumnVector . java ` to prevent integer overflow and set the maximum size to Integer .
updated assertions in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually for better test reliability to improve test reli
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI `
[ add ] add equality ( ) method to the polyfunction class to make it easy to determine if a function be equal to a polynomial
added a null check for the table before configuring the value to avoid potential NullPointerException when the table is null
added a try - catch block around the instantiation of CustomChange class to handle potential ClassCastException during class loading to improve robustness by preventing runtime
added methods to get BuckConfig and optional path whitelist in DistBuildConfig and updated related classes to use it to improve configurability and
change default value to false when double entry be not enable .
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to broke issues
changed the return type of ` doJoin ` methods from void to boolean and updated related logic in ` JoinTemplate ` , ` JoinWorker `
remove unused method ` getAutodeps ( ) ` from ` JavaLibraryDescription . java ` to streamline code by eliminating unnecessary
added FLAG _ ACTIVITY _ NEW _ TASK to the intent flags in LauncherTimelineCursorAdapter . java to ensure the activity does not
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide functionality for checking pagination order by in
updated assertions in RepositoryConventionPluginTests to reflect the correct number of Maven artifacts to ensure tests reflect the correct repository configurations
[ java ] add a new affiliate task to the pubsub cluster .
use uri . normalize ( ) instead of requestutil . normalize ( ) . normalize ( ) .
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added support for array updates in CacheKey class and improved formatting in CacheKeyTest to enhance code readability and maintainability by standardizing
updated file type detection methods across multiple files to utilize the FileSystemProvider for improved functionality to enhance file type detection capabilities across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
replaced ` ShadowVirtualDeviceParams ` with ` VirtualSensorCallback ` and refactored related methods in ` ShadowVirtualDeviceManager ` to
added a condition to check if the context object is not equal to the execution context before executing the default session to ensure that the security context is
refactor loopback address retrieval logic in NetUtil . java to improve clarity and maintainability of the code by using a more descriptive variable
renamed BUF _ SIZE to DEFAULT _ BUF _ SIZE and updated buffer initialization to use DEFAULT _ BUF _ SIZE to improve code
updated KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to enhance security checks and improve exception handling clarity
added logic to check if the icon change listener is installed before setting the action listener to ensure that the icon change listener is only set once and
added support for Russian language in Language . java to enhance localization support for Russian users
hhh - 16462 : fix duration conversion to use nanosecond precision
[ gr - 13537 ] disable state verification in substrategraphkit .
added cleanup logic for system properties in RobolectricTestRunnerTest and a utility method in TestUtil to ensure proper cleanup of system properties
added a system class " org . slf4j " to the web application context and updated tests to verify the loading of the LoggerFactory
updated condition checks in ChangePackaging . java and added a new test in ChangePackagingTest . java to ensure proper handling of packaging
fix flaky test : download file with extension ' txt '
clear the command buffer in GLFWDemo . java to ensure the command buffer is cleared before processing new commands
updated unit handling in JogService and Settings classes to use preferred units instead of default units to improve clarity and functionality by using a more
updated the expected date format in DatePatternConverterTest to use UTC timezone to ensure accurate date formatting based on timezone settings
removed unnecessary whitespace in the return statement to improve code readability and maintain consistency
updated error messages for invalid file URIs and improved URI handling in FileSystem , LocalFileSystem , and DistributedFileSystem classes to enhance clarity of error
add a delay to show the notification on the main thread .
updated reconnect attempts in FtpReconnectAttemptServerStoppedIT and added connection counting logic in FtpEmbeddedService to improve reliability of server reconnect
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` class to improve concurrency performance by using a more
added ` ignore ` method to ` JavaUtilLog ` , ` Logger ` , ` Slf4jLog ` , and ` StdErr
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for item damage in BukkitWorld . java to simplify code by eliminating unnecessary type casting
added a call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to ensure the image is clean before
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to handle directory operations with unmap functionality to enhance directory management capabilities in Solr by allowing
added null check for ` ic ` before initializing ` cleanUpColor ` to prevent potential ` NullPointerException ` when ` ic ` is null
updated the expected output from " graphTerms f = field1 " to " field1 _ s " in QueryEqualityTest . java to ensure
refactor ExtendedOperatingSystemMXBeanImpl class to improve code readability and maintainability
added functionality to install left commands in the SideMenuBar to enhance the title bar ' s usability by allowing dynamic addition of commands based on
added a boolean flag ` advanceWindowed ` and modified ` setUpWindow ( ) ` in ` TweetActivity ` and ` UserProfileActivity
added support for SybaseDatabase in DropPrimaryKeyGenerator to ensure compatibility with additional database types
refactor Client class implementation to improve code readability and maintainability
[ java ] wait for leader to be ready before reset last recording position .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement in NearCachedClientMapProxy . java to ensure proper termination of the method execution
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a shutdownHttpServer method to handle server startup exceptions to ensure graceful shutdown of the HTTP server and improve error handling
camel - 15836 - camel - aws2 - s3 : fix checkstyle issue in camel - aws2 - s3
[ hotfix ] [ runtime ] fix taskmanagermetricshandler to use taskmanager . task _ manager _ id _ key instead of
bug 10650 : drop network _ offerings key that do not exist in 2.2 . 7 upgrade
added a new test file ` TestThriftCLIServiceSecurity . java ` and modified ` TOpenSessionReq . java ` to remove password checks
updated energy limit handling in VMActuator to use maxEnergyLimit for constant calls to ensure accurate energy fee calculations for constant calls
added maxInMemorySize property and its getter / setter methods to HttpClientProperties , and modified the WebClientPlugin to accept an ExchangeStrategies
refactor Cache class implementation to improve performance and maintainability of cache management
added new test classes for Cucumber using Cucumber ' s Cucumber framework to facilitate testing with Cucumber
added error handling for parsing double values in TypeJsonUtils . java and new test cases in TestArrayOperators . java to improve robustness of
removed duplicate byte array entries from Utf8StringBuilderTest . java to streamline the code by eliminating redundancy
added a check to ensure parameters are not null before appending them to prevent potential NullPointerExceptions during parameter processing
camel - 16400 : throw illegalargumentexception if circuit breaker load balancer can not be configure on load balancing . thanks to
updated the expected document frequency assertion in TestIndexWriterExceptions . java to ensure that the test accurately reflects the maximum number of buffered documents
replaced instances of ` String . putUnencodedChars ` with ` Sha1HashCode . update ` across multiple files to streamline hash
removed redundant methods ` enumValue ` , ` intValue ` , and ` longValue ` from ` AsmRuntime . java ` to streamline the
add miss biome tag for mangrove , deep - dark , deEP _ dark , is _ road , is _
improve image loading performance by use a thread pool
changed access modifiers of several fields and methods from private to protected in BaseTableUpsertMetadataManager . java to allow subclasses to access these fields and
updated month names from " م " to " م " in multiple format data files to improve clarity and accuracy of language
replaced calls to ` getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( ) ` in ` AbstractSunSecureRule
camel - 16462 : camel - jbang - add -- repos option to run
added handling for NaN score values in CrawlDbReader to improve robustness by distinguishing between NaN and non - NaN score values
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure the target file ' s last modified timestamp is maintained after tests
updated focus request method from ` requestFocus ( ) ` to ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java `
[ hotfix ] [ runtime ] make checkpointcleaner thread - safe
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema handling to facilitate testing of XML schema validation in a
do n ' t create trie log layer if it do n ' t exist
refactor FilledNewArrayInstruction class to improve code readability and maintainability
added timeout attribute to multiple @ Test annotations in SimpleNetworkTest . java to improve test reliability by allowing more time for tests to complete
updated the method to check if the parent path ends with a slash instead of a substring to improve clarity and ensure correct handling of file paths
added a print statement to display a failure message when loading the skin file to improve debugging by providing feedback on skin loading failures
added dirty state management and validation logic to LgoGroupedLevel2Update and LgoLevel2BatchSubscription classes to improve update handling and ensure
added a new constant ` UNDEFINED ` in the ` Result ` class and updated the return statement in ` TestStep ` to use this constant to
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper exception handling for null values in transaction registration
refactor uploadjobmultipartitionoperation to implement identifieddataserializable interface ( # 2594 )
[ hotfix ] [ table - runtime ] do n ' t swallow exception when recover data
add new factory method for create summarylevels . of ( ) and new summarylevels . ignoringchildnodes ( ) .
replaced volatile ` pos ` with non - volatile ` sizeMask ` and modified the ` ensureAvail ` method in ` DataOutput2
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to
replaced the variable ' targets ' with ' endpoints ' in StorageProxy . java to simplify the code and improve readability by using a more
modified the declaration of the ` bufferedIo ` , ` lazyCreate ` , and ` advertiseUri ` variables in ` FileManager . java `
updated TransformFunctionType to include additional identifiers for various transform functions to enhance code readability and maintainability by standardizing naming conventions
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` to ` VariableElement ` and ` package - info . java `
updated RFC version from " RFC3280 " to " RFC5280 " in multiple Java files to align with the latest RFC standards and
update version number from 2.17 . 3 to 2.17 . 4 and modify type casting in SearchAnnotationVisitor to ensure compatibility with the
replaced HashMap with SparseBooleanArray for selected items in NoteAdapter to improve performance and memory management by utilizing a more efficient data structure
reordered conditional statements in DirectUpdateHandler2 . java for better readability to improve code clarity and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for better URL validation to improve code readability and maintainability by using a standardized
updated PreviewPositionHelper to accept a Context parameter and modified its initialization in TaskViewSimulator and TaskThumbnailView to utilize SplitScreenBounds
[ java ] only publish new leadershipterm if necessary .
updated test assertions in PMDCoverageTest . java to use StandardErrorStreamLog for better error handling to improve clarity and accuracy of log
refactor ByteArrayInputStream to improve skipping logic and introduce a new Skip class for testing to enhance input stream handling and provide a test case for skipping
reordered conditional checks for prompting updates in UpdaterTask . java to improve code readability and maintainability
changed the ` MAX _ HEADERS ` constant from private to public in ` HeadersMessage . java ` and added a conditional check in ` Peer
add ` ` rt . jar ' ' to the list of supported library in ` ` modclassloader ' '
refactor connection handling logic in AbstractHandshakeHandler . java to improve readability and maintainability of the code
[ geos - 7018 ] fix geos - 7018 geos - 7018 , geos - 7018
added a check to prevent sending an error response if the response is already committed to improve error handling by logging a warning if the response is already
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 363630
updated fade - out fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorial
fix ` ` unknown component ' ' error in prefabserializer and prefabformat
updated external group configurations in LdapMockMvcTests . java to include " internal . superuser " and " internal . superuser " to ensure
updated the initialization of thirtyDays in FreezeBalanceActuator . java and added a validation check in TransferActuator . java to ensure
updated path comparison from ' / ' to ' File . separator ' in FileResolverTestBase . java to ensure compatibility across different operating systems
do n ' t show input help panel when there ' s no error
updated GpsMainActivity to pass description from session instead of an empty string to improve data handling by associating description with the session ' s
updated JsoupNonVisualRegressionTest to save PDF files if the number of pages does not match the expected number of pages to ensure
replace androidbufferallocator with androidnativebufferallocator , deprecate in favor of androidbufferallocator
added handling for flags starting with " ! " in Main , PrimaryItem , and Util classes to ensure proper parsing of flags starting with " !
added a comment to indicate that the NOPMD statement is no longer relevant to the current implementation
updated the equality check for item use operations in BattlePassManager . java to improve readability and maintainability of the code
updated queue priority test to use a list of priority elements instead of a fixed - size list to improve test reliability and clarity
clean up affinityapiunittest and remove unused test
added a null check for the command and modified argument handling in the Main . java file to improve error handling and allow for additional command options in
increased LightOutputStream size from 7 to 5 in multiple classes to optimize output size for improved performance
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
updated ClassWriter . java to introduce a showBlank option and modified conditional checks to include it to enhance control over the visibility of blank lines in
added assertion to check if the string length of ' sn ' is greater than or equal to ' sn ' to ensure that the string length is
updated the method to check if the file extension is null before checking if it is not present to improve robustness by preventing potential NullPointerExceptions
change return statement to continue in ContactRightButtonMenu . java to ensure proper flow control in the contact right button functionality
[ hotfix ] fix checkstyle violation in simpleslot and slotsharinggroupassignment
simplified screen index calculation in InstallShortcutReceiver . java to improve code readability and maintainability
refactor socket binding and reset logic in PlainSocketImpl . java to improve code clarity and ensure proper resource management
added functionality to manage and clear removed media details in the BookmarkListRootFragment and MediaDetailPagerFragment classes to improve the management of media
updated log message from " offset are from the center of element " to " element ' s in - view center point " to improve clarity
added a new file ` bug4865918 . java ` implementing a GUI test for scrollbar functionality to address bug 4865918 related
replaced the usage of ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code and
added group triggers functionality to the QuestCommand class to provide user feedback on group triggers for quests
fix crash when try to select gnucash account file
added Lombok ' s @ ToString annotation to PartitionChangeEvent and tbApplicationEvent classes to improve readability and facilitate debugging by
updated the configuration URI in the CloudService class to use a constant instead of a hardcoded string to improve code readability and maintainability by
removed setViewportComponent and setJScrollPane methods from BrowserPanel . java to streamline code by eliminating unnecessary components
added support for the FORWARD _ DEL and KEY _ BACK keys in various input classes to enhance user input handling for forward and backward navigation
added a conditional check to determine if the index MIME type parts should be indexed based on configuration settings to enhance flexibility in handling different content types
added a pattern for identifying the author of a constructor in JSDoc . java to determine the author of a constructor from a comment text to enhance
updated constant names from DELTA _ TOTAL _ DATABASES , CREATE _ TOTAL _ DATABASES , DELETE _ TOTAL _ TABLE
refactor HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient and SchemaConfig instead of List to improve flexibility
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > queryParams ` parameter and added error handling to
updated Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm al
added a check for Firefox in the WebAudioWrapper class to ensure compatibility with both IE and Firefox browser versions
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` InterceptorConstants ` constructor from ` InterceptorConstants ` to
added support for the " DEFAULT " character set in the database schema to ensure compatibility with the default character set in the database schema
[ hotfix ] [ table - common ] fix memory leak in streamingaggtemplate
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean flag ` hasFrom ` and updated related methods in ` Delete ` and ` DeleteDeParser ` classes to conditionally append "
refactor synchronization logic to differentiate between multi - status and unauthorized status to improve clarity and functionality of the synchronization process
refactor test matching logic by introducing a new method ` applicableListTests ` to improve code readability and reusability to enhance maintain
updated regex pattern for log line parsing in LogAnalyser . java to improve accuracy of log output formatting
( chore ) camel - google - cloud : enable integration test if google _ application _ credentials be not provide
fixed - redisearch numericfilter should n ' t set exclusive range by default #
refactor CCLicenseStep . java to improve type safety and clarify option selection logic to enhance code readability and maintainability by
added null check for ` ifcRoot . getGlobalId ( ) ` before putting ` value ` in ` guidIndex ` to avoid potential ` NullPointerException
updated comparison logic in OptionalAssert to use a custom comparison strategy to improve accuracy of value comparison in assertions
refactor memory management in NoNewLineParagraphCssApplier , ParagraphCssApplier , ParaGraph , and AlignAndMarginTest to improve
added a new file TestArrayCopyToFromObject . java that tests array copy behavior to ensure that ArrayStoreException is thrown when destination or source is
updated the formatting of Python path insertion in BuckPythonProgram . java to improve readability and maintainability of the code
do n ' t use socket . isasync ( ) for ajp and apr .
add craftinghelper . findfiles ( modcontainer , function , boolean visitallfiles ) , deprecate findfiles ( modcontainer ,
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable test case due to unstable issue HIVE - 2
modified the test to check for a null exception before verifying the response 400 status to ensure that the client does not throw an exception if it
refactored the autoloadCall method to include an additional parameter for the lower case name to improve thread safety by preventing duplicate loading of class
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and modified the ` PlaybackController ` to use the
updated localhost handling in BasicKrb5Test , KDC , and OneKDC classes to use canonical host names to improve clarity and
updated Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the jsr250AttributeFound flag
update mp4parser to work with new mp4 version
added a new constant HS2 _ PROXY _ USER and modified sessionParams handling to include the HS2 proxy user to enhance session management
added SnappyCodec to HdfsCompressionCodec and corresponding tests in HdfsProducerTest to enable compression functionality using BZip2 and snap
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing during tests
fix bug # 49966 - xssfcell . setcelltype ( cell . cELL _ TYPE _ BLANK ) do n '
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to improve text rendering accuracy and clarify
refactor ISTIO binary path handling to use Commons for image loading to improve code readability and maintainability by reducing redundancy
replaced calls to ` ReportPlaybackStartAsync ` and ` ReportPlaybackProgressAsync ` with calls to ` TvApp . getApplication ( )
make sure fileinputstream be close to avoid memory leak
do n ' t hit eviction on initial load if record store do n ' t exist in memory
updated the return statement to use bitwise OR instead of bitwise AND for LENGTH _ BIT and ERROR _ BIT to improve clarity and correctness of
fix : fix default policy for community that do n ' t have read policy
replaced direct instantiation of CompositeFont with a ConcurrentHashMap for thread - safe management to improve performance by avoiding redundant font lookups
simplified the calculation of prefHeight in Tree . java to improve code clarity and eliminate unnecessary method calls
dmn feel error message for unknown variable error ( # 1193 )
removed unused imports and updated type declarations in multiple Java files to improve code clarity and maintainability by eliminating redundancy
changed the visibility of the ` finishRunningRecentsAnimation ` method from private to public and replaced ` longPressRunnable . run ( ) `
added null checks for node ID and edge type handling in ElementFactoryImpl and ImportContainerImpl , and updated edge type handling in ImporterG
[ beam - 10619 ] fix npe in fnapicontrolclient when responsefuture be null
fix npe when create bin file that fit within the bin limit .
refactored the method for finding the closest core in the Teams class to use a loop for finding the closest core to improve efficiency by
added a check to skip copying content - length in the RestTemplateCopyHeaderFilter to improve performance by avoiding unnecessary copying of content - length
updated Java2TypeScriptTranslator to handle class and character literals and modified SyntaxTests to include new test cases to improve code clarity and ensure
updated filter calculations and sample sizes in multiple classes to improve performance and responsiveness in channel processing
hbase - 2271 canary canary canary should not attempt all region on a regionserver if - allregions be set to
removed the NodeModule import from CassandraConnectorFactory and modified the ImmutableMap initialization in TestCassandraConnector to simplify the code by eliminating unnecessary
added a call to resetCursorPosition ( ) in the KahaDBStore class to ensure the cursor position is reset before processing new data
added minimum size constraints for the CallDialog and updated the OneToOneCallPanel to ensure new frames do not exceed the defined minimum size to prevent
fix block fall state not be lose during world gen . close # 3868
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static fields and improve test setup to enhance test reliability and maintainability by
added null check and removal logic for KerberosPrincipalEntity in KerberosPrincipalDAO . java and removed unnecessary imports in KerberosPrincipalEntity .
removed the boolean parameter from the getTableSnapshot method call in StatsOptimizer . java to streamline the code by eliminating unnecessary parameters
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5395 -
updated the error message for the android . licenseKey build hint in AndroidGradleBuilder . java to clarify the purpose of the key
updated the file folder name from ` getName ( ) ` to ` getDisplayName ( ) ` and removed the ` isInsideTranscodeFolder ( )
[ drools - 6642 ] fix relative package name for spring boot in executable model
added an assumption to check if the runtime version is 19 to ensure compatibility with the current runtime environment
simplified the ` assignTargetsForSplitScreen ` method by removing the ` splitIds ` parameter and refactored related logic to improve
refactor LeaderLatch class for improved readability to enhance maintainability and facilitate future updates
added methods to initialize Zksnark parameters in SolidityNodeHttpApiService to facilitate the initialization of Zksn
refactor transaction confidence handling to use ListenableFuture for depth management to improve concurrency and allow for more flexible depth management in transaction processing
renamed variables and methods related to longtitude to longitude for consistency and clarity to improve code readability and maintainability by using more
set default value of platformName to " ios " to ensure platformName defaults to " ios "
doc : generate sample code in the java microgenerator
rearranged conditional checks for mozDash and webkitLineDash in Graphics2D . java to improve code readability and maintainability by
refactor CreateVisibleSignature class for improved readability to enhance maintainability and facilitate future updates
added error handling to the outgoing frame processing in AbstractExtension . java to improve robustness by logging failures during frame transmission
replaced direct call to ` new Caller ( ) ` with ` AccessController . doPrivileged ( ) ` for accessing the caller class to enhance security by
added logic to update parent category relationships in FeedCategoryDAO to ensure that child categories are not removed from the current category hierarchy
updated the ContributionManagerDialog to use a dynamic title based on the contrib manager type to improve user experience by providing a more descriptive title
added a new BigDecimal value ' vwap ' to the Ticker class and updated related methods to include it to enhance the Ticker class
added functionality to display a ` noWidgetsView ` in the search and recommendations scroll controller to enhance user experience by providing a visual indication
add rendergraphapi to make it easy to create a rendergraph with a tintnode .
updated NCFirebaseMessagingService to use primary color from ThemeUtils to enhance visual consistency with the application ' s theme
updated ShadowUsbManagerTest . java for improved test coverage to enhance reliability of the USB manager functionality
updated calculations in AbstractDifferenceRecommenderEvaluator to use evaluationPercentage instead of trainingPercentage and added logging for evaluation processes to improve clarity and tracking
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated correctly after
updated width and height calculations in AndroidGraphics to ensure minimum dimensions are non - negative to prevent potential errors due to negative dimensions
replace hashmap with linkedhashmap in symbolizerbuilder , featuretypestyle , csrule , csrule
replaced nativeClosureManager with closurePool in NativeClosureFactory . java to improve closure management by utilizing a dedicated closure pool
( chore ) camel - test - infra - spring - boot : migrate camel - test to junit5
added new files WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java to implement a WebSocket integration test for the ingress WebSocket
remove dspaceservicemanagertest . testgetservicebynameconfig since it ' s no longer need .
refactor authentication comparison logic into a separate method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by encaps
added a conditional check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to
replaced direct calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` to improve code readability and reduce
added a new annotation ` @ Insecure ` to the ` MessageBuffer ` class and updated its constructor to use it to enhance security by preventing
added new configuration variables in HiveConf . java to enhance Hive configuration options for improved performance
initialize ` scopes ` and ` policies ` with new ` HashSet ` instances to ensure ` scopes ` and ` policies ` are properly instantiated to avoid
changed the ` decrefOnClose ` field to be ` final ` and modified the ` MultiReader ` constructor to include a ` Collection <
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 files to
simonstewart : fix flaky test in inputfieldtest . java
removed the ` $ Gson $ Types . getFirstTypeArgument ` method and made several classes final to enhance code clarity and enforce immutability
changed return types of keySet ( ) and values ( ) methods from Set and Collection < Integer > to KeySet and Values in Int2Int
added a duration property and corresponding getter / setter methods to the FlipTransition class to enhance the flexibility of the FlipTransition class by
removed trace log statement for subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
bump forge version to 9.10 . 0
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages in ` StackLocator . java `
[ javaparser ] add support for java 16 , java 14 , and java 16
updated padding values for the status view in ExpansionViewHelper . java to improve UI responsiveness by adjusting padding based on the number
[ hotfix ] do n ' t call onresponse ( ) if versionmap be empty
added metadata handling functionality to SeedUrl , SeedResource , and SeedUrl classes to enable storage and retrieval of additional metadata associated with seed URLs
added null check for declaration before creating a cloned pattern to prevent potential NullPointerException when declaration is null
[ hotfix ] [ test ] fix typo in testcoprocessorwhitelistmasterobserver
added package name handling in AnnotationActionValidatorManager and updated related tests to include package name to improve clarity and ensure correct package path formatting for
updated assertions in IterableTest to explicitly cast null values to Object [ ] and added a new test method to improve type safety and ensure correctness
added stream and parallelStream methods to MapIterable and PrimitiveObjectMap classes , along with a corresponding test case in MapIterableTestCase to enhance
clone the notifInfo object before returning it to ensure that the original notifInfo is not modified externally

refactor AEADBlockCipher class for improved readability to enhance maintainability and facilitate future updates
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a check to initialize ` id ` if it is null and changed the default resource mode from ` best ` to ` legacy ` to ensure
added a conditional check for zero size and position in TrueTypeFont . java to ensure metrics are only set when necessary to improve performance by avoid
refactor SignPlugin to accept a list of HttpMessageReaders instead of a static message readers list to enhance flexibility by allowing custom message readers
refactor Int2ObjectCache class implementation to improve performance and maintainability of the caching mechanism
added validation check for MavenDeployer in StandardMavenAuthenticationProvider . java to ensure proper handling of remote repository dependencies during processing
updated audio handling logic in AudioNode . java to improve audio processing efficiency
added SSL context initialization and updated cookie handling in EnedisHttpApi to enhance security and improve cookie management in the HTTP client
refactor HiveFunctionRegistry to use Stream for string manipulation and add a new function replacement map to improve code readability and maintainability while ensuring
http : / / issues . apache . org / jira / browse / amq - 4892 - fix amq - 489
updated the ` getBuildTargetForAlias ` method to use ` possiblyFlavoredAlias ` instead of ` alias ` to improve clarity and
camel - 16462 : fix olingo2 consumer to handle empty feed
added a mapping of Hive versions to their equivalent versions in MetaStoreSchemaInfo . java to improve version handling by distinguishing between 0.13
vm expunge : do n ' t try to expunge the vm if it fail to expunge
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in new code
refactor ONDashClockExtension to use a new method for retrieving alternative note titles to improve code readability and maintainability by centralizing
updated database column types in GoogleAuthUserConfigTable and modified assertions in TotpEndpointIntegrationTests to ensure compatibility with the latest database schema
replaced ` commit ( ) ` with ` apply ( ) ` in multiple Java files to improve performance by reducing unnecessary commit calls
added TestIdleListener to the session initialization in AsyncTimeoutTest . java to enable handling of idle state in session management
update testBigQueryTable initialization to include a unique identifier to improve clarity and consistency in test table naming
added background resource and reset functionality for predicted icons in HotseatPredictionController and null background in BubbleTextView to improve visual appear
mondrian : fix typo : getflushafterquery - > flushafterquery
[ native ] add test for native query runner
updated the logic to return active features based on the presence of ALL _ OUTPUTS in LIMEExplanation . java to ensure that the prediction
added support for command - line arguments in the AppleSimulatorController and InstallCommand classes to enhance flexibility in handling command - line arguments
fix an issue where an empty line selection do n ' t appear in the parargraph
prevent spurious log warning on container stop if a child component have previously fail .
added clipping to outline for the QSB background in QsbWidgetHostView to improve visual appearance of the QSB widget background
added time tracking for flag processing and improved flag handling in SQLManager , BlockTypeListFlag , PlotArea , and PlotArea classes to
replaced specific OpenGL imports with a wildcard import and modified depth function logic based on whether floating text is included to improve code readability and
[ gr - 21744 ] fix class name of libffi _ nfi _ backend _ libffi _ libffi
replaced direct assignment of PROPAGATION _ REQUIRED with a private variable ` propagationBehavior ` and added getter and setter methods for it to improve
refactor layer validation logic to check for L1 and L2 regularizations before setting them to ensure that the base layer ' s regularization
added exception handling for read and write operations in AbstractChecker . java to improve robustness by logging errors during read operations
changed the visibility of the colorStack variable from static to instance and updated colorStack assignment to allow instance - specific access to the colorStack variable
updated ` getMappedStatement ` and ` hasStatement ` methods to include ` true ` as a parameter to enable statement mapping functionality in the configuration
convert tradableIdentifier to lowercase when retrieving BTCEDepth to ensure consistency in depth retrieval across different locales
updated MQTT publish value assertions in ChannelStateTests . java to reflect the new channel state values to ensure accurate representation of the MQTT
remove the versionedhashes parameter from enginepayloadparameter ( # 4891 )
reset trigger price and trigger price field in MutableOfferView to ensure the model reflects the current state of trigger price
modify the student edit page to redirect to the home page if there be an error
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2691 hstore . clear ( ) should not log the result if it be false .
fix for # 1193 : beanstate . getchangedproperties ( ) throw illegalstateexception ( # 1193 )
added a new boolean variable ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` , and modified the
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality for
replaced specific imports with wildcard imports and added a method to hide the popup menu in LWChoicePeer . java to improve code readability
added null check for the ' insert ' variable before processing it to ensure that the ' insert ' variable is always initialized before use to prevent potential
replaced usage of ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable `
added null check for requests in MockServerEventLog . java and enhanced logging in HttpForwardObjectCallbackActionHandler . java to improve robustness
added warning log for property file loading failure in DefaultEnvironment . java to provide better visibility into property file loading issues
added try - with - resources for SessionDataSet in ClientMain . java to ensure proper resource management and avoid potential memory leaks
added checks for multicast support and network status in SetOutgoingIf . java to ensure that multicast connections are only allowed when the NIC is up
updated the constructor of sqlCommand to include a length parameter to ensure proper handling of string input based on the specified length
updated ` UnDelegateResourceActuator ` , ` BandwidthProcessor ` , and ` EnergyProcessor ` to use the latest consumption time
added a method to set an invalid session strategy in SessionManagementConfigurer to improve flexibility in handling invalid session strategies
improve error message when a token can not be find for a given index
add a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` containsKeys ` in ` MapAssert `
replaced instances of ` stgen ` with ` psgen ` in ` JdbcProxyGenerator . java ` and added a new interface `
added a method ` ensure ` in ` ServerWebSocketContainer ` and refactored the ` start ` method in ` DirectUpgradeTest ` to
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to enhance immutability support for better performance
pdfbox - 4892 : use point2d instead of point2d . float , a suggest by valerybokov
added a static final empty array for MethodHook and refactored hooks initialization in Method . java to improve code readability and maintainability by
added a boolean parameter ` grantAccess ` to the constructor of ` MockAuthenticationManager ` and modified authentication handling to allow access to the authentication manager
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to provide additional context about the job execution during job execution
added a check for file execution status in SharedLibraryLoader . java to ensure the file is only writable when it is executable to enhance security by
feat ( regen ) : update protoc to v3.15 . 3 ( # 141 )
rename samplerservice . savesampleresult ( ... ) to samplerservice . savesampleresult ( ... ) so that
added new constants BATTERY _ LEVEL , ANNOTATION , TIME _ WITH _ OFFSET , STARTTIMESTAMP , and PROFILE _
change searchexpression . applyrule to use map instead of hashtable .
moved the object to an absolutescreenlocatedable instead of the geowidget to make it easy to understand
updated JoglGraphics . java and ProjectiveTextureTest . java for improved resizing behavior and texture filtering to enhance rendering performance and
refactor the ` setResourceToDelegate ` method to return a ` File ` instance instead of void to improve code clarity and maintainability by
camel - 16462 : camel - core - allow property component to intercept from property placeholder . thanks to david mollitor
updated the condition in ActionScheduler to check if the current time is equal to the last attempt time and modified the assertion in TestActionScheduler to
updated debug log file path and added null check for debug _ log to ensure robustness by avoiding potential NullPointerExceptions when debug _ zip is
update notification overlay to hide the hud
move gate reset logic into pipe . resetgate ( )
added locale management to the TestSupplementary class to ensure consistent locale handling during tests
updated the random color value for the Team object from 0.8 f to 0.4 f to improve the team ' s appearance and
replaced ` Set ` with ` Collection ` for ` activeMatchedStates ` and modified logging statements to use ` isLoggable ( Level . FINEST )
updated the condition to check for null annotation in SoftAsserts . java to ensure that the method correctly identifies expected exceptions when the annotation is null
updated error handling in StoragePluginRegistryImpl to include exception messages and added logging for better debugging to improve error reporting and provide clearer context for
refactor call tree printing to use a new method ` toCsvFile ` for better readability to improve code maintainability and reduce duplication in
added null checks and refactored note handling in DetailFragment . java and WidgetProvider . java to improve robustness of note management and ensure
added logic to track and calculate the number of peak tasks in AssetManager to ensure accurate loading of tasks based on the number of loaded tasks
simonstewart : make firefoxdriver enable native event on window by default
added support for custom score and fetch interval in the Injector class to enhance score injection flexibility by allowing customizable score and fetch interval
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in multiple files to
added a method ` isShareSchema ( ) ` to the ` CoreContainer ` class and a corresponding test in ` TestCoreContainer ` to
updated size calculations to include a flag for no store in multiple classes to ensure accurate size reporting and improve clarity in segment size reporting
replaced assertEquals statements with assertNull for version1 _ 2 in VersioningTest . java to ensure that the version1 _ 2 is
updated SQL queries to include additional conditions for non - null domain columns to ensure correct handling of non - null domain columns in PostgreSQL
[ java ] do n ' t wait for new leadership term event until leader heartbeat be complete .
removed the method ` buildMediaType ` from ` WebClientPlugin ` to return a default MediaType based on the request headers to simplify the code by
replaced instances of ` fill ` with ` fillSlice ` and updated method names from ` fillUsingLengthPrefix2 ` to ` fillAndGet
refactor compaction logic in AcidUtils and add a new test for cleanup after major table compaction in TestCleaner to improve code clarity
set default value of immutablestorageScheme and qualifierEncodingScheme to ONE _ CELL _ PER _ COLUMN and NON _ ENCODED _ QU
added new files PojoProducersCustomized . java and RestProducersCutomized . java to implement customizable and cut -om
replaced hardcoded string " cache " with constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability by
removed duplicate registration of AesGcmSivProtoSerialization to streamline code by eliminating redundancy
add wooden slab wood to ore dictionary ( # 3370 )
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the session management system
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14973 - fix test failure on oracle with mariadb
corrected the positioning of the spriteBatch drawing in HelloWorld . java to correct the positioning of the texture to ensure the texture is
updated iteration logic in PlayerFunctions . java and improved string representation in PlotId . java , and modified WorldGuardListener . java to enhance
added a deprecated version constant for Lucene 8.5 . 0 to indicate that this version should no longer be used in favor of a newer
updated print statement formatting in SSLSocketImpl . java to improve readability and clarity of log output
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL can be parsed and deparsed
add an enum for dependenciestype and use it in conlluoutputter
refactor ` makeTargetDescription ` method to use ` ParseContext ` for better encapsulation to improve code readability and maintainability by central
updated the test method from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild ` to simplify the test execution
replaced the array size of ` configBlocks ` from ` Block . blocksList . length ` to ` 256 ` and modified the loop iteration
update bukkitmain to use git - spigot instead of git - spigot
updated SQL statement escaping logic for PostgresDatabase in AbstractSQLChange . java and added a corresponding test in AbstractSQLChangeTest . java to
added methods ` ofAll ( Iterable < ? extends T > items ` to ` MutableBagFactory ` and ` MutableBagFactoryImpl ` ,
updated BuildNavAndPDFBody . java to include HTML escape codes and improved error handling for mismatched page shortname and permalink attributes to enhance
updated MqttBrokerConnection instantiation to include a false parameter to ensure proper configuration of the Mqtt broker connection
updated the retrieval of the ChangeSet to use a root change log if the root change log is not available to improve robustness by ensuring a
[ hotfix ] fix checkstyle issue in plugin / plugin / prometheus - plugin
added database drop functionality in TestHiveMetaStorePartitionSpecs and improved logging in TestObjectStore to enhance database management and facilit
added a order _ currency parameter to BithumbAuthenticated and updated BithumbAccountServiceRaw to include currency information to enhance functionality by allowing
deleted the SSEFluxWebConfig . java file to remove unused configuration properties to streamline the codebase
replaced direct calls to ` getFullyQualifiedName ( ) ` with ` isVoid ( ) ` for method return type checks to improve code read
replaced YAML _ READER with YAML and added a new GET endpoint for listing detection configurations to improve code readability and facilitate
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enhance encapsulation by
updated thread factory implementation to use lambda expressions and refactored awaitTermination method for improved readability to enhance code readability and maintainability
added unit tests for the ` addToList ` method in ` MongoTemplateTests ` and created a new ` PersonWithAList ` class with
ggb - 1745 use the correct size of the applet panel in web
replaced direct visibility setting of the toolbar in DrawerActivity with a delayed execution using a Handler to improve UI responsiveness by delaying
refactor first page reading logic into separate methods for clarity to improve code readability and maintainability by separating concerns
server : do n ' t save vm password if router be not run
added default values for usingOutputStream , usingWriter , and isCharacterEncodingSet in Response . java to ensure proper handling of output stream and character
added a warning check for assignment side effects in GroupDialog . java to ensure proper handling of assignment side effects during group creation
refactor JSON and JSONConvertor classes for improved readability to enhance maintainability and facilitate future updates
updated condition in FileUploadApiController to use maxWidthWithMargin instead of maxHeightWithMargin to ensure icons do not exceed the defined maximum width and
fix jwttokenciphersigningpublickeyendpoint . fetchpublickey ( ) to write public key in pem format
added Unix - specific mime type checks and modified import statements in Basic . java to ensure proper handling of file contents for different operating systems and improve
replaced deprecated compression methods with JZlibDecoder and JZlibEncoder in NettyConnection to streamline code by eliminating unnecessary
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and refactored ` Class . java ` and ` Method
removed the ` doConnect ` method from ` ProxyChannelProvider ` and modified the ` connect ` method in ` ChannelProvider ` to streamline
added a test for handling empty final columns in TestCsvHeader . java and updated TextReader . java to increment fieldsWritten in TextReader .
added compassGravity and compassMargins parameters to NearbyMapFragment . java to improve visual appearance and spacing of the map
added unit tests for distance calculations in GeoPathTest . java to ensure correctness of distance calculations in geopoints
added ` throws HiveException ` to method signatures and improved error handling in ` getLeafFilterBuilderByType ` and ` ParquetFilterPredicate
added a condition to set the language of the current audio track if the language is blank to ensure that the audio track ' s language is correctly
added a warning log for schemas older than the old version in MicroserviceRegisterTask . java to inform users that schemas are not compatible with the
replaced manual array copying logic with a unified addAll method across multiple array classes to improve code readability and maintainability by reducing redundancy
reformatted the try - catch block for the close ( ) method in DataSourceProxy . java to improve code readability and maintainability
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a Map of ClientRegistration objects to improve flexibility and
added a method to reset the UI state in SchemaUpgradeHelper to ensure the database reflects the latest cluster state
added logic to handle pending exceptions in JUnitReporter to improve error reporting by distinguishing between failed and non - strict scenarios
add playerselector . java and add playerselector . java file .
added the Closeable interface to the Selector class to implement the Closeable interface for better resource management
updated connection pool configuration for maximum concurrent streams in MaxConcurrentStreamsTest . java to improve connection management and performance during testing
added multiple stringType ( ) method calls to CoreOptions . java to enhance type handling for configuration options
updated HqlQueryRenderer to handle character and parameter contexts more effectively to ensure correct token parsing for HQL queries
updated status codes in HttpGenerator , HttpChannel , HttpConnection , and Response classes for consistency and clarity to improve code readability and maintain
pdfbox - 4892 : avoid unnecessary instanceof check , a suggest by valerybokov
replaced JDBC URL configuration with a data source class name for StubConnection to ensure compatibility with mock data sources and manage connection settings effectively
refactor ParquetFormatPlugin and ParquetGroupScan to improve metadata handling and file selection logic to enhance code readability and maintainability while
updated the ` isSuccess ` variable to true and modified the compilation process in ` Jsr199Javac . java ` to improve error handling
added a new ` BaseTableModelListener ` class and initialized ` baseModelListener ` in ` DefaultSortedTableModel ` to handle table changes
updated validation condition from 49152 to 65535 in ServerConfig . java to allow for a maximum value of 65535 instead of 49152
added document provider authority notification in AuthenticatorActivity and AccountRemovalJob for devices running KitKat and above to ensure compatibility with newer Android versions
removed the startLogging method call from MainApp . java to streamline logging process for improved performance
added exception handling for wrapped RequestRejectedException in FilterChainProxy to ensure proper handling of wrapped exceptions in the RequestRejectedHandler
refactor StringBuilder to use ' this . length ' instead of ' length ' for better clarity to improve code readability and maintainability by
added a check to throw an exception if the filterList is empty to ensure that a valid filterList is provided to avoid runtime errors
add tbstopwatch to make it easy to stop the app
removed unnecessary whitespace in PListStore . java to improve code readability and maintain consistency
added @ Deprecated annotation to multiple classes to signal that these classes are outdated and should not be used in new development
[ zeppelin - 4892 ] fix the classloading issue in remoteinterpreterserver
fix npe in commandsourcestack . getentity ( ) . isvalid ( ) .
updated minSdk from VERSION _ CODES . P to VERSION _ CODES . O _ MR1 in ShadowRttCallTest and
corrected the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in the timerIdForSlot method to improve code
# 1193 - add simple name to bean descriptor ( # 1193 )
updated URLs in BasePage . java from " wro / all . js " and " wro / all . css " to " static
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to verify the functionality of the ` show
corrected the spelling of " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency and accuracy in naming con
added conditional handling for ` CertPathValidatorException ` in ` OCSPChecker . java ` to ensure proper handling of ` CertPathValidatorException
benchmarker : make writeoutputsolutionenabled configurable
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` with a test method ` sliceSize _ reopen ` in ` Mapdb . java `
added a shapeless recipe for waterproof and slime ball in BuildCraftTransport . java to enhance the game ' s capability to
mahout - 1193 : fix infinite loop in sequentialaccesssparsevector . iterate ( )
added functionality to manage the owner plot metadata for Shulker entities in the BukkitMain and EntitySpawnListener classes to ensure proper
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
updated imports and added getter methods for MAX _ DIR _ NAME _ LENGTH and MAX _ FILE _ NAME _ LENGTH in IOHelper . java ,
added a check for the seen tag in the UpToTagChangeSetFilter and implemented the isSeenTag method in the UpToTagChangeSetFilter
[ beam - 1640 ] use arraylist instead of linkedlist in dofnfunction
refactor BrokerRoutingManager to improve routing logic to enhance performance and maintainability of the routing
change volume and up paint color from gray and green to GRAY and GREEN in CandlestickRenderer . java to improve visual
refactor layout parameter handling in InsettableFrameLayout to improve clarity and maintainability to enhance code readability and maintainability by standard
added a duration parameter to the BuildTargetDurationListener class and updated related tests to reflect this change to enhance the functionality of the BuildTargetDuration
updated database migration tests to use ` assumeTrue ` instead of ` @ Profile ` to check for active database profiles to enhance test reliability by
added a null check for the user object before processing claims to avoid potential NullPointerExceptions when the user is null
camel - 16462 : camel - test - add a method to replace a route from a template . thanks to michael
replaced ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve performance by using a non - blocking set implementation
api : listpublicipaddresses api - add sourcenetworkid parameter to listpublicipaddresses api
added a test for ignoring battery optimization in ShadowPowerManagerTest and implemented it in ShadowPowerManager to enable testing of battery optimization behavior
updated the method to retrieve the Jetty version from a build properties instead of a hardcoded value to improve flexibility by allowing dynamic configuration of
added tests for verifying invocation order in ` NumberOfInvocationsInOrderVerifierTest ` to ensure correct behavior of the ` VerificationModeBuilder
refactor debug evaluation logic in TRegexExecNode . java to improve clarity and maintainability of the code
added " - foreground " option to the startProfile method call in NewProfileExtensionConnection . java to ensure the profile starts with a foreground color
replaced the use of ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` for better performance to
updated file logging to use the file name instead of the file object to improve logging clarity and ensure proper cleanup of views in the action window
updated skipped entries message format in ClassFileReader . java and modified warning message in JdepsTask . java to improve clarity of skipped entries and
added a new ` LinkStorage ` instance and updated its usage in ` FetcherMain ` and ` FetcherTask ` to utilize it
updated the ` populateBubble ` method to include an existing ` BubbleBarBubble ` parameter and modified related logic to handle existing bubble
[ hotfix ] remove unnecessary log statement in scheduled route policy
refactor methods in MotanServiceBeanPostProcessor , MotanRpcExt , and TarsServiceBeanPostProcessor to simplify method
[ java ] add option for delay generation for multicast and unicast in medium conductor .
updated Gson initialization and added properties for client details in ClientInformationResponseView . java to improve JSON representation of client details for better clarity and
added a conditional check before setting the average price for open orders in HuobiAdapters . java to ensure that only non - zero values are
removed the ` rawExecutionReports ( ) ` method from the ` BinanceStreamingMarketDataService ` class to streamline the code by
added a fail method to handle exceptions and updated failure handling in LdapTimeoutTest . java to improve error reporting and provide more context during test failures
fix for ticket : 216 -- check for file existence before try to read it .
updated password handling logic in AmbariServerConfigurationHandler to check for a blank password file or credential store alias before updating the password to ensure
added a method to check if a segment is already parsed and log a warning if it is already parsed to improve efficiency by avoiding unnecessary segment
[ hotfix ] [ yarn ] add yarn . application - attempt - failures - validity - interval option
do n ' t try to unload the h2 driver if it be not present
hbase - 26400 addendum add readtype configuration for snapshot - based inputformat ( martin koifman ,
added support for fixed height and width in InstanceLoginInfo to enable dynamic configuration of instance login dimensions
added corner radius parameter to the update methods across multiple classes to enhance visual appearance by allowing corner radius adjustments during animations
updated COMMANDS _ TO _ REMOVE array to include " SHOW [ RIBE ] " and added filter filters in filterSet to enhance
added a retry mechanism to handle connection failures in the connection pool to improve reliability by allowing retries when attempting to connect to the connection pool
updated transaction methods to include a poll operation for backup reservation to improve clarity and functionality of backup reservation checks
added a final char array to the FirstOfStringsMatcher class to store and initialize the strings array
updated DELETE statements in CostBasedDecisionIT and DeleteCompiler to use " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS " to
refactor exception handling in BaseServiceException to use a retryable boolean for SocketException to improve clarity and maintainability of exception retry logic
added support for rapid install types in AdbHelper and related classes to enhance device management capabilities by incorporating support for beta install
updated the seed pattern in SortTest . java from " = ( 0 - ? ) " to " = ( 0 - ? ) " to
refactor MultimapSubject to use a factory method for retrieving values and improve variable naming to enhance code readability and maintainability by centralizing
update display size calculation in Workspace . java to ensure correct positioning of hotseat elements based on device orientation
added a transmux feature to the Transformer and TransformerInternal classes to enable conditional transcoding based on the transmux status of media items
added localization support for string values in the Picker class to enhance user experience by internationalizing string values
camel - 2347 : camel - cxfrs : fix the issue that camel - cxfrs do n ' t work if the
hhh - 16462 - postgresql dialect should throw lockacquisitionexception and pessimisticlockexception if the sqlstate be
added null check for queryId in TestJdbcDriver2 . java and modified annotations in HiveStatement . java to improve query ID handling and enhance
add usesunboundedpcollections category to pardotest
updated HTML output for formatted file name in GpsSimpleViewFragment to improve readability and consistency of displayed file names
[ java ] remove unused leadershiptermid parameter from joinlogasfollower .
refactor HttpSender to use a local variable for the HttpExchange instance to improve code readability and maintainability by reducing method calls
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
rename the token method to apiToken in AppOpticsPropertiesConfigAdapter to improve clarity and consistency in naming conventions
added null checks and Lombok ' s EqualsAndHashCode annotation to various classes to enhance robustness by preventing potential NullPointerExceptions during marker
pdfbox - 4892 : change the return type of getFontSizeAsFloat ( ) and setFontSizeAsFloat ( ) to double and
change email type from String to String [ ] in AddressBookDoCoMoResultParser . java to support multiple emails instead of a single email
refactor exclusions handling in RawMavenResolver to use a set instead of a stream to improve code readability and maintainability by reducing
added handling for ` DSXExchangeInfo ` and introduced ` quotedCurrency ` and ` baseCurrency ` fields in ` DSXPairInfo `
refactor TestBlockingIO , TestParsingTable , ResolvingTable , and TestValidatingIO classes to improve code organization and maintainability
[ drools - 90 ] fix incremental build fail when kiemodule pom be invalid
updated the initialization of ` copy ` and added a conditional check for ` sobj . has ( k ) ` in ` NativeArray . java
renamed JacksonDataFormat and JacksonXMLDataFormat files to improve clarity and consistency in naming conventions
truffle / truffle / truffle / hostfielddesc . java : remove methodhandles . findstaticgetter and methodhandles . findsetter
added a method parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to enable null - checking of CompletionStage in the database
updated the calculation of mFreezeCheckPoint in PlaybackController . java to adjust the freeze checkpoint duration from 9 seconds to 10 seconds to
removed unused imports and updated internal state management in PowerMockRunner to streamline code and improve readability by eliminating redundancy
updated the method call to use realType ( ) instead of typeCode to improve type handling by using realType ( ) instead of typeCode
refactor indentation handling logic in TabsAndIndentsVisitor . java to improve clarity and structure to enhance code readability and maintainability
replaced LuceneTestCase with JUnit ' s TestCase in TestSingleTokenTokenFilter . java to align with the latest testing framework
added a line to wrap the new column in HTML output to improve the readability of the displayed text in the report
updated JdbcStepExecutionDao , MapStepExecutionDao , SimpleJobRepository , and MockStepDao to utilize JdbcExecutionContextDao for better
added a condition to check if a new media folder is hidden before adding it to the root to ensure that the mon element is only added when
added null checks for the actor parameter in SplitPane . java to ensure proper handling of null actions and prevent unsupported operations
added handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management for parameterized Java types
updated debug logging to use ` this . getVersion ( modInfoList . get ( 0 ) ) ` instead of ` getModInfos ( modInfoList
changed the LOG variable to be static in TicketGrantingTicketImpl . java to ensure consistent logger initialization for the TicketGrantingTicketImpl class
updated the SQL string for timeseries creation from RLE . RLE . RLE . 81 + 12 to RLE . RLE . 81
added a method ` isValue ` to the ` AttrData ` class and modified the ` Converter ` class to check for value existence to improve value
updated key handling logic in CPlatformResponder . java and added methods for locale and character modifier keys in LWCToolkit . java to
[ java ] set aeron _ publication _ connection _ timeout in ctestmediadriver .
added a condition to check if the request URI starts with " / css " , " / images " , or " / favicon " to
added an assertion to verify the installation of the APK and ensure the device is rooted to improve test reliability by verifying that the
no effective change - add @ ignoreplatform annotation to testqueryforupdate and testqueryfindpagelist
added MultiMap mocking in TestSimpleBodyHandler and updated the expected length of enabled secure transport protocols in TestVertxTLSBuilder to ensure proper
updated Java library paths from ' e3506ff ' to ' fc76b6367ddddddddddc5 ' to
added a boolean flag ` mIsDismissHapticRunning ` and modified the conditional check in ` TaskViewTouchController . java `
branch the cause for explosion event to include projectile source . fix spongepowered / spongecommon # 313 .
removed the @ SuppressLint annotation and implemented the getItemId method in SymbolInputAdapter to improve code clarity and maintainability by eliminating
updated API path parameters in Bitfinex . java and changed limit _ bids and limit _ asks from 10 to 50 in BitfinexPollingMark
added a check to replace single quotes with double quotes in the result string to ensure proper handling of single quotes in XML output
[ hotfix ] [ runtime ] fix k8s kubernetesleaderelectiondriver tostring ( ) to include configmap name and leader latch path
refactor SqlSessionFactoryBean to improve session management functionality to enhance performance and maintainability of session management
fix ( tri ) : fix npe in triinvoker
replaced error handling in PolygonRegionLoader to throw a runtime exception instead of logging errors to improve error handling by throwing a runtime exception instead of
added a method ` isStarted ( ) ` to check if the ` Deadline ` is running and improved timer management in ` RawStoreProxy
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages for closed channel scenarios
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ hotfix ] [ checkpoint ] fix reset hook call in region recovery
add support for collection of mapped container in prefab
[ hotfix ] [ wal ] fix npe in getoldestunpinnedmemtableinfo ( )
added a new test method for retry behavior on callback failure in HttpTest . java to ensure proper handling of callback failures in HTTP requests
update package - info . java for clarity and consistency to improve code organization and maintainability
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server query escape functionality to ensure correct handling of question characters in SQL queries
added @ NonNull annotations to constructors and introduced a null check for routes in camelModule to enhance null safety and prevent potential NullPointerExceptions when routes are
replaced synchronized block with a utility method for waiting on a waiting loop in JavaFXSEPort . java to simplify code and improve readability
changed the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaff
replaced instances of ` RegionDecoderCropBehaviour ` and ` BitmapCropBehaviour ` with a new ` createCropperBehaviour `
removed the ` appName ` parameter from the ` configure ` method across multiple classes to simplify the configuration process by eliminating unnecessary parameters
add unit test for ignore and broken dependency
replaced ` setHeadless ( true ) ` with ` addArguments ( " -- headless = chrome " ) ` in multiple test files
replace the direct assignment of the value with an interned version of the value to improve memory efficiency by reusing the value
added support for " MOVE " status in the connection status check to ensure proper handling of MOVE responses in the connection logic
updated ISO8601 date format constants in FixedDateFormat . java to ensure consistency in date formatting across different time formats
replaced the import of ` org . apache . curator . shaded ` with ` com . google . common . collect ` in multiple
[ hotfix ] [ runtime ] do n ' t try to start a spill buffer if it be already release .
added a check for untrusted visit permissions in the visit logic to ensure only authorized players can visit untrusted plots
do n ' t try to register jabber protocol if they be already register .
updated the character validation logic in BasicURLNormalizer . java and added a new test method in TestBasicURLNormalizer . java to improve URL normalization
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a condition to compare CLOCK rates if the result is zero to ensure consistent comparison between encoding configurations
added a method to retrieve the project path and modified the return type of the ` generateProjects ` method to return an ` ImmutableSet < Path >
removed conditional check for native digit in HostLocaleProviderImpl . java and added validation for calendar ID in HostLocaleProviderAdapterImpl . java to
added a new file ` MSwingUtilities . java ` with utility methods for handling image scaling and exception dialog display to provide a utility for
camel - 16462 : camel - mail : make mailproducer async so it can be use in a background thread .
added @ RefreshScope annotations to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable dynamic refresh of configuration properties in the application
added unit test base on user forum issue
added a new ` Main ` and ` ScriptRenderer ` classes for the integration scripting tool to facilitate the rendering of JavaScript scripts
added a condition to check if ` _ inputState ` is not ` __ NONE ` when ` _ inputState ` is ` __ NONE `
updated descent calculation in BitmapFont and added isDescendant method in Group , modified touch focus handling in FlickScrollPane , and SelectBox to
replaced direct call to ` reportFailure ` with a call to ` context . runCloseHooks ` in ` DeploymentManager . java ` to
add stacktostring ( itemstack , boolean forceignore ) to make lexica botania craftable .
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve clarity and maintainability of sleep duration
replaced specific imports from Apache Commons StringUtils with a wildcard import and modified the condition to check for non - blank and non - blank shortName
use class . getresource ( ) instead of new urlstreamhandler ( )
added a new utility class ` FieldUtils ` for reflection - based field access and modification methods in the ` org . acegisecurity .
removed redundant assertions in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to improve code clarity and
updated workspace layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding adjustments for custom content to
fix sync of xmpp - account in xmpp - account
added a new method ` setvar ` to handle variable setting in the ` LineReader ` class to improve command - line argument handling and provide
fix catentity not fire animal tame event . close # 3553
added support for interval types in WindowFrame . java and improved exception handling for unsigned range values to enhance data validation and provide clearer error
pdfbox - 4892 : add test to verify that the font do n ' t contain the help text
set the application mode to the current mode in PageListController to ensure the application displays the correct mode for better user experience
added support for Docker file path and build arguments in ImageFromDockerfile . java and created a corresponding test class DockerfileBuildTest . java
added a null check before creating ThreadInfo instances in ThreadInfos . java to prevent potential NullPointerExceptions when accessing thread information
updated floating - point check from 0.00001 f to Utils . FLOAT _ EPSILON in PieChartRenderer . java to improve precision
[ hotfix ] [ checkpointing ] add more logging in singleinputgate and singlecheckpointbarrierhandler
added several new schema constants to the Schema . java file to enhance schema management capabilities by including additional table types
added a minimumSimilarity parameter to FuzzyQuery and updated related classes to utilize it to enhance fuzzy query accuracy by allowing a minimum similarity
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
logback - 1343 : allow immediateflush to be set in the enclosing appender instead of a default to true
added RabbitAutoConfiguration and KafkaAutoConfiguration to the auto configuration order in ZipkinAutoConfiguration to enhance configuration flexibility by allowing multiple configurations for
added null check for component before removing it in JLayer . java and created a new test class bug6875716 . java to handle
updated import statements to use ` com . google . common . base ` instead of ` avro . shaded ` to streamline dependencies by using
added methods to manage return and unwind blocks in BciBlockMapping and GraphBuilderPhase classes to improve block management and encapsulation in the
added getter and setter methods for legacyRenderer in Label . java to enhance flexibility in managing legacy rendering behavior
replaced the use of ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and
added a null check for mObserver in the return statement to prevent potential NullPointerException when mObserver is null
fix for jdk - 8033590 : comparator . thencomparing ( ) throw typecastexception
refactor DocIdSet to improve code structure to enhance maintainability and readability of the code
updated the end time setting in the UserRuleAnomalyFunction to use the current value of bucketMillis instead of null to ensure the anomaly
added a try - catch block around parsing integer values in VisualScoreTagTest . java to ensure that NumberFormatException does not occur during parsing
added a class loader to the MockFactory enhancer in MockFactoryTest . java to ensure the correct class loader is used for mocking
added a new ` OriginalFormat ` class and modified the ` formats ` list in ` ConverterWithEnumFormat . java ` to include it to
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM _ MM in FileStorageUtils . java to
refactor JAWTRenderer class implementation to improve rendering performance and maintainability
camel - 15836 - camel - aws2 - lambda : enable autowire on the Lambda client , fixed test
cloudstack - 7031 : make sure mac address be not replace in the next available mac address in the network
added a check for " Authorization " header name in ProxyServlet . java to ensure proper handling of authorization headers in the proxy servlet
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to improve method clarity by using a more descriptive
added ` getDetails ( ) ` and ` getDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , ` Username
updated the random number generation in SolrTestCaseJ4 from a random boolean to a non - zero value to improve the randomness of point
replaced ` sb . appendDot ( ) ` with ` sb . endSentence ( ) ` across multiple classes to replace ` appendDot (
updated ` TimeFormat ` methods to include ` Locale . US ` as a parameter for locale handling to ensure consistent formatting across different locales for better
refactor import statements and enhance the handling of named argument expressions in GroovyParserVisitor . java to improve code readability and maintainability while ensuring
added inset adjustments for top , bottom , and left inset dimensions in Border . java to ensure inset values are non - negative
replaced direct instantiation of ` GestureState ` with a static constant ` DEFAULT _ STATE ` and refactored gesture state management to improve
replaced ` DateTime ` with ` Instant ` and ` DateTimeFormatter ` for date formatting to improve code readability and maintainability by using a more
updated openblas and openblas _ nolapack Java files to improve code organization and maintainability
use close ( ) instead of ioutils . close ( ) in torrent storage
added synchronized modifier to the initTxnMgr method to ensure thread safety when initializing the transaction manager
increased the timeout duration in the waitForRecoveriesToFinish method and set the socket timeout in AbstractFullDistribZkTestBase
added a new file ` SearchResults . java ` to handle search results in a structured manner to facilitate easier management of search results
do n ' t create a refresher if there be no thread cpu
initialize the body if the primitive array be null to ensure that the body is properly initialized before use to avoid potential null pointer exceptions
added new versions " 8.10 . 0 - cfs " , " 8.10 . 0 - nocfs " , " 8.
updated the feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the
added a new endpoint to retrieve tenant pools for the current instance to provide a way to retrieve instance - specific tenant pools for the current instance
refactor ` canEarlyTerminate ` methods in ` TopFieldCollector ` to handle document ID and prefix sorting correctly to improve clarity and
added a check for ` isToString ( ) ` in ` InlineBytecodeGenerator ` and updated ` InlineByteBuddyMockMakerTest `
added logging statements to ` CxxCompileStep ` and ` CxxPreprocessStep ` for compiling and preprocessing commands to improve visibility
add a utility method to remove a character from a string to make it easy to remove it from the string
[ 3.0 ] fix metadata service protocol not be set ( # 10363 )
[ drools - 770 ] add datatransformer interface for compile and transform function ( # 2698 )
change the type of the values collection from Object to Number [ ] [ ] in DistributionGraph . java to improve type safety and clarity in
removed unnecessary conditional check for ' interesting ' in FormatStringChecker . java to simplify code logic and improve readability
updated initialization of SolrCore in ElectionContext . java to ensure proper initialization of SolrCore
updated ITestDbTxnManager . java file to improve transaction management functionality
refactor database connection handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a new method ` testMapModel ` to ` CodeFirstPojoClient ` and its implementations in ` CodeFirstPojoIntf
pdfbox - 4892 : reformat code , a suggest by valerybokov
refactor item listener implementation in ScaleDialog . java to improve readability and maintainability of the selection logic
fix a nullpointerexception in the itemtravelBelt . tick ( ) method .
pdfbox - 4892 : do n ' t throw an exception if there be no appearance stream
replaced TreeSet with LinkedHashSet for storing keys in ExecuteSqlCommandStep . java to improve performance by using a more efficient iteration order
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 milliseconds and added overridden methods in PagePreviewCard to
updated the preload library from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the latest
added a conditional check for agent support before setting all constructors to public in MainMockTransformer . java and created new test classes for mocking static
pdfbox - 4892 : avoid redundant object check , a suggest by valerybokov
set the window title of the main window when use the x11 toolkit
update depth calculation based on pixel size in XRSurfaceData . java to ensure correct depth is set based on pixel size
added error handling for reading the response body of an unsuccessful response in OkHttpDataSource to improve robustness by providing a clearer error message when
added a static method ` exit ` in ` TopLogging ` and replaced ` Thread . sleep ( 10000 ) ` with ` TopLogging . exit
updated the logic for determining the starting index based on the regex pattern ' s global status to ensure correct handling of regular expressions that are not global
planner - 468 : ignore optaplanner test for upgrade to optaplanner 6.3 . 1 +
updated the variable used for retrieving high allocation from ` lowIndex ` to ` highIndex ` to ensure the correct allocation is used based on the
added a method to clean feed entries without feeds in DatabaseCleaner and its implementation in FeedEntryDAO to improve resource management by ensuring no feeds
changed the return type of the appendToLabel method from void to AtomicCounter to allow method chaining for better usability
[ java ] use no - op idle strategy for low latency driver .
added handling for HTTP status code NOT _ MODIFIED in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper handling of not
refactor InstrumentationPartialEvaluationTest to replace SplicedInstrumentListener with ToolEvalNodeFactory and update related references to improve clarity and
updated the paintTabArea method in SynthTabbedPaneUI to include dimensions from the tab area to ensure proper rendering of the tab area
refactor ` getKrakenDepth ` and ` getKrakenMarketDataServiceRaw ` methods to accept an additional ` Object ... `
added methods to retrieve file separator and absolute status in FileEndpoint , GenericFile , and RemoteFileEndpoint classes to improve file path handling and ensure
added a new method ` build ` to the ` JavaProvenance ` class and updated the ` MavenProjectParser ` to include ` testDependencies
added trace logging for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java and modified conditional check in HiveFunctionRegistry .
increased loop iterations from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for state updates
patch by jbellis ; review by brandonwilliams for cassandra - 1340
added a check to ensure the output file is writable if the test is running as root to provide clearer error messages when the output file is
added error handling for package information retrieval in LauncherModel . java to improve robustness by logging failures when packing package information
added error handling for database upgrade failures in DatabaseUpgradeChecker . java and corrected SQL statement syntax in Upgrade410to420 . java to
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test in FaultTolerantChunkOrient
replaced ` startsWith ( completed ) ` with ` regionMatches ( option . CASE _ INSENSITIVE ) ` in ` LineReaderImpl .
added imports for SourcesFileResults and SourcesFileErrors , and refactored data table handling in Recipe . java to improve data table management
added functionality to dismiss all tasks in the overview in TaplTestsTaskbar to ensure tasks are dismissed when there are tasks available
update systemvm template when upgrade from 4.14 . 0 to 4.15 . 0
removed unnecessary null checks for the connection object in LdapClient . java to simplify the connection cleanup process and improve code readability
refactor index handling in SequenceAction . java for clarity to improve readability and maintainability of the code
patch by stu hood ; review by jbellis for cassandra - 544
added a check to skip synthetic fields in ReflectUtils . java to ensure only non - synthetic fields are processed in reflection
added LoggerProvider to manage application - wide logging to enhance logging capabilities in the application
changed the type of the ` builder ` from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object > ` and updated
added deprecation warning message for multiple glue classes in SpringFactory to inform users about the deprecation of the spring context configuration
added a new method ` deepStart ` to the ` Startables ` class that accepts a list of ` Startable ` instances to provide a
removed the deprecated method ` reservePrimitiveExtensionArray ( ) ` from the ` Shape ` class and its implementation in the ` ShapeImpl ` class
make laser table use lasertargetblock instead of lasertable
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated the expiration period of policyEntry in MemoryLimitTest . java to ensure proper handling of memory consumption during testing
removed unnecessary null checks and improved handler registration logic in RequestHandlers . java to streamline code and enhance readability by eliminating unnecessary
replace ' - ' with ' . ' in the servlet name return statement to ensure consistent logging format for better readability
updated the handling of the PYTHONPATH environment variable in ProjectBuildFileParser . java to improve clarity and maintainability of the code by
updated audio frame size handling and error management in DirectAudioDevice and Toolkit classes to improve robustness and provide clearer error messages for invalid
added null check for enums in ElasticSearchStringLookupService to ensure safe handling of null values and avoid potential NullPointerExceptions
updated error message format in CommitLogReader . java for clarity to improve readability of error messages for better debugging
added policy assignment from containerScope to WebSocketSession to ensure proper policy management for WebSocket connections
updated the logic for determining the initialization of static fields in the Java2TypeScriptTranslator class to simplify the logic for determining if static fields are
updated the web root argument in the UserService class to allow dynamic configuration of the web root directory
test : migrate unit - tests from junit4 to junit5 ( # 4445 )
replaced reflection - based method for checking if a VM is attachable with direct method invocation to simplify code and improve readability by elimin
updated the ` printHeaderObject ` method calls to ` createHeader ` in multiple formatter classes to unify and standardize header creation logic across different formatting components
simplified import statements in VircurexTradeService . java and added a placeholder method for placing stop orders to streamline
reset the buffer in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is
updated the condition for decExp in FloatingDecimal . java and added a new class ToString . java with a main method to ensure proper handling
updated property type checking in PropertyDescriptor . java and added a new test class Test7189112 . java to improve type safety and ensure proper
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to simplify version retrieval by eliminating unnecessary max
added a check to set the origin header if it does not already exist in the headers to ensure that the origin header is only set if it
updated animation behavior in RecentsView and TaskView to utilize alpha and translation for task overlays to improve UI responsiveness and
updated error messages and method calls in ORCRecordReader . java for clarity and consistency to improve error reporting and enhance code readability by
added sample files for " Clear HLS : Tears of Steel " and " Clear HLS : Basic 4x3 " to
updated import statements and variable names in PersistenceProvider . java for consistency and clarity to improve code readability and maintainability by using more d
updated logging class references to use " org . apache . hadoop . ipc . ExecRPCInvoker " and " org . apache . hadoop .
avro - 1640 . java : add test for compilation with - xlint : all
removed unnecessary return statements in WebSocketEndpoint . java and added a test for session closure in WebSocketIT . java to improve code clarity and ensure
updated delay values and changed method names from " onDaoStateBlockChainChanged " to " onChangeAfterBatchProcessing " across multiple services to improve
updated DTD mappings to reference " Apache Struts " instead of " OpenSymphony Group " to ensure compatibility with the new design specifications
modified stream stop logic in WebCamInputPanel . java to ensure proper handling of video tracks when stopping
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
update gml example to use geotools 3.0 . 0
replace ` substream ( 200 ) ` with ` skip ( 200 ) ` in ` TargetType58 . java ` to correct the logic for
hhh - 10956 - improve error message when composite id be not find
add shortcut key binding for download full text file ( # 4891 )
refactor URI registration logic to include host and port information to enhance clarity and functionality by associating URIs with specific host and port information
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for blank OSDB hash and changed List to ArrayList for parameters to improve robustness by avoiding potential NullPointerExceptions when the hash
added token transfer functionality to the RuntimeImpl and MUtil classes to enhance token management capabilities for smart contracts
camel - 16462 : camel - ftp should change the current directory when the ftp operation be stepwise .
camel - 16462 : camel - jackson - ldap should use search - bind - password instead of search - bind - dn ( #
added validation for join results and modified conditional logic in MapJoinOperator . java and HybridHashTableContainer . java to improve error handling and
updated the constructor of ` HTTPSPDYAsyncEndPoint ` to accept ` AsyncEndPoint ` as a parameter and added corresponding getter methods to enhance
added " id " extra to intent in multiple adapter classes to ensure consistent identification of tweets within the intent
added proxy authorization handling and refactored disconnect logic in HttpURLConnection . java to improve connection management by ensuring proper disconnecting based on proxy authorization status
updated ` _ numChildren ` to be an ` AtomicInteger ` for thread - safe incrementing and modified the number of children in ` TraceContext
refactor multiple Java files for consistency and clarity to improve code readability and maintainability
changed the test annotation from ` @ Test ( priority = 1 , expectedExceptions = NullPointerException . class ) ` to ` @ Test ( enabled =
resolve split - packages : move everything from kie - api under org . drools . drools . kie . api . kie
updated predicate types from IN to NOT _ IN in multiple predicate classes to align with new naming conventions for improved clarity and accuracy in
updated exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to catch a broader range of exceptions and improved account display name
added null check for witnessService before validating permission to prevent potential NullPointerException when witnessService is not initialized
updated the construction of the taggedCol string to use getExprString ( ) method to improve clarity and ensure the correct expression string is used
added a check to ensure ` item . getJavadoc ( ) ` is not null before setting it to ` getJavaDoc ( ) ` to avoid
renamed ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and introduced ` RedefineInterfaceCall .
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) and revalidateWithAnimationSafety ( ) calls to improve
[ hotfix ] [ connector ] do not throw unsupportedoperationexception when metricgroup be use in bulkformat
updated the y - coordinate calculation in the Polygon class to use a temporary variable to improve code readability and maintainability by using a temporary variable
updated cache creation to cast null to Configuration < Object , Object > to ensure proper type handling for cache configuration
added a check for the length of ` stringConstant ` in ` InheritanceUnsafeGetResource . java ` and created a new class ` Bug
refactor ShadowCookieManager to improve cookie management functionality to enhance performance and maintainability of cookie management
added permission checks for dropping external tables in the metastore authorization provider to ensure backward compatibility when dropping external tables
simplified conditional statements in Stage . java and adjusted drawing parameters in ProgressBar . java to improve code readability and ensure correct positioning of
cache platform capability byte order in llvmlanguage to improve performance
updated the property name from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to
modified the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and updated the login URL loading logic to enhance flexibility in
corrected the spelling of " Paramter " to " Parameter " in the exception message to improve clarity and accuracy of the error message
updated the ` @ DateTimeFormat ` annotation to allow the ` after ` parameter in the ` AuditEventsMvcEndpoint ` class to allow optional date formatting
rename ` ExponentialTimer ` and related classes to ` PreciseThroughputTimer ` to improve clarity and consistency in naming conventions
added functionality to remove and delete the soft body in the SoftBodyTest class to ensure proper resource management and prevent potential memory leaks
changed interface visibility from package - private to public in several provider classes to allow access to these interfaces from other packages
[ zeppelin - 4892 ] fix log message to include exception
add a test to ensure that the jingle namespace be not redundant .
fix a crash when the redplasma be n ' t present
added HTTP / 2 header handling in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
updated member removal logic to use trusted and denied UUIDs instead of exact UUIDs to improve accuracy of member removal checks in the plot management system
updated delimiter and adjusted string concatenation logic in SimpleReport . java to improve readability and maintain consistency in string formatting
removed the ` - XDignore . symbol . file ` option from ` JavapTask ` and introduced a new class ` T68
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to clarify the purpose
added null checks and exception handling for contract creation and address retrieval in Runtime . java to improve error handling and provide clearer feedback during contract creation
do n ' t create input3d when not in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
change scripttagpayloadreader . parsepayload to return false instead of throw an exception
added an @ Override annotation to the getRepositoryFactoryClassName method in JpaRepositoryConfigExtension . java to ensure proper method overriding and improve code cl
changed the return type of ` getExecutableCommand ` from ` String ` to ` List < String > ` across multiple classes to enhance flexibility
replaced instances of ' this ' with ' IOSGLES20 ' for consistency to improve code readability and maintainability
removed the UploadPathActivity class and its associated methods from the ComponentsModule to streamline the codebase by eliminating unnecessary components
updated return statements to return - 1 for total term frequency and sum total term frequency when index options are set to DOCS _ ONLY to ensure
fix : fix : implicit constructor should not be set ( # 2329 )
added a database parameter to the populateValidateIfNeeded methods to check if the database is OracleDatabase before proceeding to ensure that validation checks are performed
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the application
updated the iterator assignment in PointInSetQuery . java to use the instance variable ` sortedPackedPoints ` to improve code clarity and
removed the substring method from rawName in SchematicHandler . java to streamline code by eliminating unnecessary substring operations
added a switch statement to handle specific collections types in AbstractCollectionAssert . java and updated tests in CollectionAssert _ isUnmodifiable _ Test . java
changed the visibility of the Option enum from static to non - static to improve flexibility in enum usage within the ProcessExecutor
refactor dialog handling in Compose . java and ComposeActivity . java to streamline code for better readability and maintainability to improve
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ) ` for managing file synchronization
replaced javax . xml . bind . DatatypeConverter with java . util . Base64 and added unit tests for embedded Base64 image handling to
added new files ` ControllerCounter . java ` and ` DBCallback . java ` with methods and database management functionality to provide a structured way to
added final modifier to the ticketId parameter in the deleteTicket method to enhance code clarity and enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement a main method for the Flyway migration to facilitate the
replaced instances of ` isEmpty ( ) ` with ` size = = 0 ` in HashMap . java and added a new class ` OverrideIs
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest version
updated the ` modify ` method in ` CompressionCodec ` and ` ZlibCodec ` to accept ` EnumSet < Modifier > ` to allow null
added error handling for missing main manifest attributes in LauncherHelper . java and refactored test methods in TestHelper . java to improve robust
renamed test classes to include " Tests " for consistency to improve clarity and consistency in naming conventions
rename hotspotmethoddata . getcompilationgraphsize to hotspot . getcompilationirsize and add hotspotprofilinginfo .
pdfbox - 4892 : remove clone method from cellcopypolicy , a suggest by valerybokov
added a method to reset the icon load result in FloatingIconView and updated its usage in Launcher to improve resource management by ensuring the
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated IconRecentsView to handle landscape orientation and modified dimension calculations to improve layout responsiveness for different screen orientations
deleted the AddAdapter . java file to remove unused adapter class to streamline the codebase
added a check for empty constructorCodeList before proceeding with processing to avoid potential errors when the constructor code list is empty
refactor the ` processSortCols ` parameter and its usage in the ` OpTraitsRulesProcFactory ` class to improve code clarity and
refactor TestLogWatcher to use a looper method for checking log watcher entries to improve error handling and provide clearer failure messages during the
added a print statement for " < any > " in Java2TypeScriptTranslator . java to provide a placeholder for type handling in TypeScript
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
added a condition to check for the presence of the SPRING _ AOP _ PROXY _ TARGET _ CLASS property in the environment to ensure
removed the conditional check for singletonLock in TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary configuration
updated callback methods in CallbackActionExamples to include class and string parameters to improve clarity and functionality of callback handling in the application
refactor utils . writefile to include an option for appending output files to enhance flexibility in file handling by allowing optional appending of output files
updated logic in ` MavenExecutionContextView ` and modified ` MavenRepositoryMirror ` to return the first mirror instead of an empty message to ensure
added a ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer
refactor redirect URI matching logic in OAuth20CallbackAuthorizeEndpointController to improve clarity and maintainability of the redirect URI comparison logic
replaced the static EMPTY _ ANNOTATION _ ARRAY with a new ` AnnotationParser . toArray ` method across multiple classes to streamline annotation retrieval
updated method calls from ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` to ` getBadgedIconForUser ` and
updated the default value for the system ' s line separator to provide clearer guidance on the system ' s line separator for output
fix configurationmanagerutils . isderivedclass ( ) to check for derived class
thymeleaf / thymeleaf / thymeleaf / thymeleaf - spring - boot should sanitise input before
chore : update java and python dependency ( # 602 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` declaration and modified the ` buildFileNamesCan
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
updated container type assignment in AllAppsRecyclerView and modified logDeepShortcutsOpen method to accept a View parameter to improve clarity and functionality
hbase - 26402 deprecate hbase . ipc . server . reservoir . initial . max and hbase . ip
[ native ] fix native join test for window
replaced ` getGenericParameterTypes ( ) ` with ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` and updated its usage
updated TestFSTs . java file to improve test coverage to enhance reliability of test cases
refactor draw methods to use labelTop ( ) and getLabelTextHeight ( ) instead of labelTop ( ) and labelTextHeight ( )
hbase - 16462 increasetoupperbounderegionsplitpolicy should not set flushsize for initial region split policy ( addendum
removed unnecessary model reset and loader calls in LauncherClings . java to streamline the loading process by eliminating unnecessary state management
removed redundant initialization of keys and updates in ManagedSelector . java to streamline code by eliminating redundancy and improving readability
added a set to exclude datasource beans in SpringDataSourceBeanPostProcessor to allow exclusion of specific beans from processing
store undo info in tablevaluesview and remove unnecessary null check in tabvaluespanel .
camel - 15836 - camel - aws : improve error handling for kinesis client
refactor VelbusSensorHandler to use a loop for processing channel events to improve code readability and maintainability by reducing redundancy
disable test that fail due to unfavorable benchmarks
added a test for illegal database names in IoTDBSessionSimpleIT . java and handled illegal path exceptions in PartialPath . java to ensure that
added a call to ` resetNewFiles ( ) ` in ` GarbageCollector . java ` to ensure that new files are reset before garbage
rename ` desiredWorkspaceLeftRightOriginalPx ` and ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and introdu
reformatted code for improved readability and consistency to enhance maintainability and adhere to coding standards
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
update XENSERVER _ NETWORK _ LABEL constant to use " xennetworklabel " instead of " xenservernetworklabel " to ensure consistency
updated libgdxVersion and libgdxNightlyVersion from " 1.5 . 5 " to " 1.5 . 6
added a private Set < String > metricNames and a public getter method in SolrCore . java to manage and retrieve metric names for improved
refactor URI handling to use Path objects instead of URI objects to improve code clarity and maintainability by utilizing a more modern API
replaced direct system property check with a static final boolean for mac OS detection to improve code readability and maintainability by reducing duplication
refactor JdbcAggregationRepository to improve code readability to enhance maintainability and facilitate future updates
clear the slotList and add the other slotList to the slotList to ensure the correct slot list is maintained from another Frame instance
set m _ predCount to - 1 in PredicatedNodeTest . java to reset the value of m _ predCount to - 1 to
added a method to merge configuration properties in ConfigurationSpringInitializer to ensure properties are correctly merged from the configuration instance
updated the ` setupLogging ` method to accept a ` org . slf4j . Logger ` parameter and modified the logging setup logic to
replace HashMap with LinkedHashMap for aliasToWork in multiple classes to maintain the insertion order of elements
added logic to retrieve the JDBC handler map based on the type type to ensure that JDBC handler mappings are correctly retrieved for subclasses of Object types
added debug logging statements to HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JMSItemWriter classes to improve trace
updated the parsing logic in LocaleUtils to handle trailing semicolons to ensure correct parsing of language range strings with trailing semicolons
modified the handling of null values in Http2ServerResponseImpl and VertxHttp2Handler to execute on the correct handler context to ensure proper
improve performance of xssfevaluationworkbook . gettable ( ) by cache xssftables
updated schema text detail type checks and simplified conditional statements in BaseSchemaTextFormatter . java to improve clarity and maintainability of the code logic
updated MongoFactoryBean references to MongoClientFactoryBean and MongoClient in MongoNamespaceReplicaSetTests . java to ensure compatibility with the latest MongoDB
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain the insertion order of elements
removed assertion and added a null check for table scan operations in SkewJoinOptimizer . java to ensure that the operator tree is properly cloned before
added a null check for client ID before processing client registration in DynamicRegistrationClientConfigurationService . java to ensure that clients are only registered if they
clear achievementlist . field _ 187981 _ e . clear ( ) in statlist . refresh ( )
initialize variables userName , productName , driverClassName , and connectionUrl with empty strings in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure
corrected the spelling of " link _ share _ read _ only " to " link _ share _ view _ only " in multiple files
added LongBuffer support and modified readLongs method in ByteBuffersDataInput and ByteBuffersIndexInput classes to enhance data handling capabilities for long data
added sec and nsec fields to UnixFileAttributes and refactored the toFileTime method to use these new fields to improve clarity and
added a new file TestNoEagerReclaimOfHumongousRegions . java that implements garbage collection for humongous regions to
added search bar visibility control in AllAppsContainerView to control the visibility of the app search bar based on user preferences
use routes ( ) instead of router ( ) in envrouterfeature
added null checks for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` to manage page reloading in the menu to enhance user experience by allowing users to reload the
changed log level from info to warn for non - existent entries in SQLManager to provide a less severe log level for troubleshooting
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to avoid runtime errors
geoserverextensions : use serviceloader instead of factoryregistry to load extension
added a finalize method to the HiveHBaseTableInputFormat class to ensure proper resource cleanup to prevent memory leaks
added ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and logging statements in ` HiveViewImpl ` and ` JdbcConnector `
updated feature settings in DocumentFactory and modified hints initialization in XML handler classes to enhance XML parsing capabilities and improve type safety
replaced ` jdbCommand . cont ( ) . waitForPrompt ( ) ` with ` jdb . contToExit ( 1 ) `
added a method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to provide functionality for retrieving the type
updated Future handling in ExpressionThreadPoolManager to use a more descriptive variable name to improve code clarity and maintainability by using a more d
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure the correct HTTP port is used based on
replaced ` addCaptureListener ` with ` addListener ` in the ` buttonTable ` to ensure the correct listener is applied to the button table
change default batch size from 10 to available processors in NewSessionQueueOptions . java to optimize memory usage based on available processors
[ hotfix ] log error when attempt to establish resource manager connection in taskexecutor
added null initialization for ClassFile and modified return logic in LambdaRewriter . java to ensure proper handling of null class files and provide a fallback for
updated the error message in IllegalArgumentException to include min and max parameters to improve clarity of the error message for better debugging
updated onMessage method signatures to include owner and telegram parameters across multiple classes to enhance message handling by associating the telegram with its owner
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` , along with an abstract class ` Database ` and ` Row `
refactor AbstractIterableAssert , AbstractPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories to improve code organization and maintainability
# 269 - ebeanserver . setbeanid ( object bean , object id ) : add setbeanid ( object bean , object
updated the xslt transformation method in RuleSetToDocs . java to use a method from xmlFileTemplater to improve flexibility and maintainability
replaced direct call to ` requestMatcher ` with a list of ` RequestMatcher ` to enhance flexibility by allowing multiple matchers to be added
added hashCode and equals methods to ContactResource class to ensure proper equality comparison and hashing functionality for contact resources
move getrequest ( ) and getrequest ( ) from abstractajpprocessor to abstracthttp11processor
updated log messages in FileManager . java for clarity and error handling to improve log readability and provide more informative error messages for better
added mock control reset in TestJdbcDataSource and a tearDown method in TestIndexSearcher to ensure proper cleanup of resources during test execution
updated import statements in SyntaxTests . java for consistency and clarity to improve code readability and maintainability by standardizing class references
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
simplify the parserdecorator , use a fallbackparser instead
do n ' t allow fml security manager to call class that do n ' t exist .
simplified variable declarations in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintainability by reducing
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a test for handling JSX comments in JsLexerJsxTest . java and refactored parsing logic in Parser . java to improve
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for testing purposes
added a new test for handling missing Buck configuration and updated exit codes in tests to improve error handling and provide clearer feedback when Buck
added physical memory checks in TestStringBufferAndBuilderGrowth . java to ensure test execution does not exceed available memory limits
updated the ` MapToLocalDateConverter ` to use a ` ConversionService ` instance instead of using a shared ` ConversionService ` to improve
added a success flag to HiveMetaStoreClient . java to track the success state of the operation
updated string comparison for " * " in ResourceReferenceInfo . java and modified bundle creation in Dstu2BundleFactoryTest . java to
updated conditions to check for both " vine . co / v / " and " vine / twimg . com / v / "
mark the AreaReference class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor ElementType and Target classes to improve code structure to enhance maintainability and readability of the codebase
added reference kind checks and modified reference kind handling in MemberName . java to improve type safety and clarity in reference management
changed the default value of the ` __ submitKeyUpdates ` property from " false " to " true " and added synchronization around the ` run
added an else clause to the conditional check for MouseEvent in EditNodeTextField . java to ensure proper handling of mouse events in the input field
camel - 16462 : camel - core - add support for static method in bean expression . thanks to david mollitor
updated multiple Java files related to MQTT and MQTT protocol handling to improve code organization and maintainability
refactor exception handling in AgentRunnerTest . java for improved clarity and consistency to enhance code readability and maintainability
added ` getDescription ( ) ` method implementations for ` AddDependency ` , ` AddPlugin ` , ` ChangePropertyValue ` , ` RemoveProperty `
refactor face management in ObjLoader to use a local variable for activeGroup and faces to improve code readability and maintainability by reducing
refactor ProcessEngine class implementation to improve code readability and maintainability
replaced instances of ` reentrantLock ` with ` lock ` in multiple files to improve code readability and maintain consistency in naming con
added a new parameter ` mavenPackaging ` to the ` getBomReference ` method and updated related calls to include it to enhance the handling
updated back ( ) method to use evt . getComponent ( ) instead of a hardcoded value to improve user experience by ensuring the correct component is
fix checkstyle issue in saslauthentication . java
updated type parameters in ObjectArraySubject , StandardSubjectBuilder , and Truth classes from @ Nullable to @ Nullable Object to improve type safety and
replaced ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple Java files to ensure consistency in accessing configuration
replaced ` removeBoardsPane ( ) ` with ` tab . deselected ( ) ` in ` SheetAssembly . java ` and
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the session ID for external use
added null checks before setting the time interval for nodes and edges in ImportContainerImpl . java and updated tests in ImporterGEXF2
removed the log level option from the server port command in MockServerContainer to simplify command configuration for improved readability and maintainability
updated error logging to include exception message to improve clarity of error messages for better debugging
change dispositionprocessor to use crawlingmetadata instead of roboshonoringpolicy
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
camel - jbang - fix test on window
added imports and a method for creating an alternative path input stream in ExpectNewDemo . java to enhance functionality by providing a default input stream for
[ log4j2 - 1349 ] log4j2 - 1349 - log4j2 - 1349 log
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security by allowing protection domain configuration
added dispose method to release resources in WaterRipples to ensure proper resource management and prevent memory leaks
added configuration to disable semi - join optimization for external tables in Hive to improve performance by avoiding unnecessary optimizations on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
removed the ` FLAG _ SHOW _ WALLPAPER ` flag from ` Launcher ` and modified the wallpaper offset setting in `
updated return values in SybaseASADatabase and modified sequence retrieval logic in SequenceSnapshotGenerator to ensure correct behavior for SybaseASADatabase
nifi - 4892 : fix bug in putsql when autocommit be set to false
added directory creation logic in SnapPuller . java and assertions in TestReplicationHandler . java to ensure that the parent directory exists and validate
changed the target ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency in the target
refactor framer methods to accept an output buffer as a parameter and update their implementations accordingly to improve memory management by allowing the output buffer to
updated constructor signatures in OAuth2AuthorizationRequestFilter and OAuth2LoginAuthenticationFilter to include the clientRegistrationRepository parameter to enhance clarity and consistency
added an extended description for splitting text into key - value pairs in GenericUDFStringToMap . java to improve clarity and usability of
updated PlainFormatter to use ` ChronoUnit ` and ` TemporalUnit ` for instant formatting to improve clarity and consistency of time representation in the
updated timeout constant from 1000ms to 3000ms and added a retry close timeout for the agent ' s close method to improve reliability of agent
refactor privateLookup retrieval in ClassLoadingStrategyHelper to use MethodHandles directly to improve code readability and maintainability by eliminating reflection
updated Mockito library version to ensure compatibility with the latest features and bug fixes
updated debug log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the log
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable tests that require at least one sample result to ensure that the
updated the error message to clarify that rows and columns must be greater than zero to improve clarity of the error message for better debugging
[ geos - 7015 ] fix exception when parse wagon cart feature value
added functionality to sort BOF records by their position in the XLS2CSVmra class to improve the organization and organization of BOF records
refactor thrust calculations in ThrustCurveMotor . java for improved clarity and consistency to enhance code readability and maintain
updated InputSystemJme initialization to include inputManager parameter to enhance input system functionality by associating input system with the input manager
updated the logic for setting the ` hashCodeFieldOffset ` in ` UniverseBuilder . java ` to ensure ` offset ` is non - negative
remove deprecate getmesh ( ) from block
rename keytabPath to localKeytabPath in YarnTaskManagerRunner . java to improve clarity and consistency in variable naming
added an empty word option option and modified matcher logic in the LineReader and LineReaderImpl classes to enhance flexibility in matching input based on
updated pushViewReplicaUpdates method to include writeCommitLog condition to ensure updates are only pushed when necessary
added auto - open functionality to the Clipboard interface and defined a default button ID in the ResultHandler class to enhance user experience by allowing
added a test for batching functionality in JoinedTableTest . java and an additionalProperties method in JoinedTableTest . java to ensure
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamps during item persistence
removed the deprecated ` format ` method from ` CucumberOptions ` and updated the ` RuntimeOptions ` to use ` -- plugin ` instead
removed the save ( ) method from PMS . java to streamline code by eliminating unnecessary functionality
simplified the back key handling logic in ExtendedEditText . java to improve code readability and maintainability
added a new class ` Capacity ` and modified ` AbstractStringBuilder ` to use a new variable ` newCapacity ` to improve code readability and fac
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to streamline note
patch from josh from bug # 45323 - add endnote support to xwpfdocument
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager . java and modified credential retrieval in CasEventsReportEndpointTests . java
added a test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the functionality of the GDALVersionInfo class
added a new file ` Lifecycle . java ` that implements network error handling in the Codename One framework to provide a mechanism for displaying network
updated DeviantartRipper to use getDACookie ( ) and added a retry mechanism for 404 status to improve reliability and
removed unused imports and simplified the loop structure in RocketFigure . java to improve code clarity and maintainability by eliminating unnecessary
added support for retina surface scaling in PJOGL . java to enable dynamic scaling of graphics based on user - defined settings
add an option to select offline setting ( # 4338 )
refactor DiskDocValuesConsumer to use BlockPackedWriter instead of PackedInts for handling numeric values to improve performance and maintainability by
updated DefaultStatusRoute to use originatingType ( ) instead of status ( ) and changed routesByStatus from ArrayList to SortedSet to improve code
removed data handling logic from the GoAwayTest class to simplify the code by eliminating unnecessary data list management
added property introspection support for ` FluentPropertyBeanIntrospector ` in ` ReflectionUtils ` and created ` FluentSetterBean ` class with corresponding
updated the return type of the post method in BlockingHttpEndpoint and HttpEndpoint from ListenableFuture < ? > to ListenableFuture < HttpResponse
updated file URL construction and added folder preparation methods in tests to improve test clarity and ensure correct folder structure is used for sorting
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by using a
added image scaling feature to rtfdocumentsettings , a suggest by valerybokov
added conditional logic to include aggregate function name based on execution parameters in TSServiceImpl . java to enhance flexibility by allowing dynamic aggregation based on
refactor TestExceptionInBeforeClassHooks and related classes to extend WithNestedTests . AbstractNestedTest instead of LuceneTestCase to improve
added functionality to select and display XCap server URI based on registration status to enhance user experience by displaying the XCap server URI based on registration
ww - 3353 add support for handle exception in the dispatcher
added stopEditing methods in CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to manage the stopping of text editing to
[ flink - 18901 ] [ table ] fix npe in controlrate when group attribute be null .
renamed ` includeUndoModify ` to ` isNewComponent ` in the ` showDialog ` method and modified visibility of the ` selectPreset `
added error handling and logging for chat message sending in ChatAnnotation . java to improve error tracking and debugging capabilities during message transmission
added a check for the operating system type in HTMLDataFlavorTest . java to ensure the test is only executed on Windows to avoid errors
added SQL _ SERVER _ SNAPSHOT constant to TransactionIsolationLevel . java to enable database snapshot management for improved performance
replaced the direct addition of a new record ID with a loop that waits for a new record ID to become available before proceeding with further
use java . util . zip . jar instead of jrecompat . jar . newinstance ( ) .
added a null check for the command class before creating the service instance to ensure that the service is only created if it does not already exist to
change default disk failure policy from best _ effort to ignore to provide more flexibility in handling disk failure scenarios
removed the public access modifier from several methods in RipperInterface and update method in RipStatusHandler to enhance encapsulation by restricting
update filter logic in PeerDiscoveryAgent to check if the from address is an IPv4 address to ensure that only valid IPv4 addresses are processed
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to streamline the code by eliminating unused functionality
added ClusterDataCache to the computePartitionAssignment method in PinotSegmentRebalancer . java to enhance partition assignment computation by utilizing cluster data
[ java ] remove unused container . delete ( ) method .
simonstewart : make the parsing of selenium command more robust .
add a retry rule to createglossarytests that fail on slow ci server
replaced hardcoded schema references with constants from Components . COMPONENTS _ SCHEMAS _ REF to improve maintainability by centralizing schema
refactor EntityDeletedEvent to use JsonUtils for serialization and deserialization to improve code readability and maintainability by leveraging JsonUtils for
added a new constant ` MI _ GOP ` and a conditional check in ` FormatConfiguration . java ` to handle GOP value matching to
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate performance testing of return type
added a locking mechanism using ReentrantLock in ParseConfigUtils . java to ensure thread safety when accessing shared resources
[ hotfix ] release column segment operator in minmaxvaluebasedselectionorderbycombineoperator
simonstewart : remove @ ignore from firefoxprofiletest . java
updated return statements in HasAndroidDeviceDetails . java and changed the return type of getSystemBars method from String to Map < String , Object
replaced the import of CheckForNull with javax . annotation . CheckForNull in multiple Java files to streamline code by eliminating
[ netbeans - 4892 ] fix import panel color issue on gtk
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check to return a date in the future if the recurrence ' s by days are empty and a default value is returned to ensure that
replaced the upload button ' s click listener with a menu item for enabling upload functionality to streamline the upload process by using a menu
refactor multiple Java classes related to message expression functionality to improve code organization and maintainability
added loadMetaData method to MeXBTExchange and RippleExchange classes to enable loading exchange metadata from an InputStream
added a custom JsonSerializer for handling Writable types in CrawlDbReader to enable proper serialization of Writable types in JSON output
remove testjaspicbasicauthenticator because it do n ' t work
added configurationPid attribute to the @ Component annotation in MDNSDiscoveryService . java to ensure proper service registration for the discovery service
added a null check before scrolling to the offset in ChatViewerFragment . java to prevent potential NullPointerException when messageItem is null
refactor ForkJoinPool initialization in BPIndexReorderer and TestBPIndexReorderer to use a worker thread for improved
removed redundant assertions for role checks in RoleCommandOrderTest . java to streamline test code by eliminating unnecessary checks
added a new method ` restoreLocalInfoFromTableInfo ( ) ` and modified the ` writeObject ` method to include ` dedupWithTableInfo
removed unnecessary whitespace in multiple Java files to improve code readability and maintain consistency
added transformations for scaling and flipping the logo sprite in BitmapFontTest . java to enhance visual rendering by applying transformations on the sprite batch
added a condition to check if the aggregate is built - in in the StreamPhysicalPythonGroupWindowAggregateRule to ensure that both aggregate and built
removed the ` hasPendingEcho ` field and its associated methods from ` EndpointState ` , modified logging statements in ` Gossiper `
added a method to retrieve unreachable token owners in Gossiper . java and updated references in StorageProxy . java to improve clarity and
[ geosymbolic ] do n ' t change x ^ 2 to x ^ ( x )
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to ensure correct content type is set based on the saved
changed access modifiers of ` _ display ` , ` _ device ` , and ` display ` variables to ` final ` , and added null checks
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock ` and ` ReentrantReadWriteLock ` for thread - safe locking
added a new test method ` testReadIdentityProviderInOtherZone _ Using _ Zones _ Token ` to ` IdentityProviderEndpointsMockMvcTests
replaced the job schedule with an ExpireJob instance in ObjectTypeNode . java and modified timestamp handling in PointInTimeTrigger . java to
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
send heartbeat to all broker when rebalance change
add new property ` ` cairo . detached . mkdir . mode ' ' ( # 1181 )
[ java ] add a slow down test for cluster follower .
change default label pattern to [ auth ] [ year ] [ year ]
updated dependencies in DBinaryDescription , DLibraryDescription , and DTestDescription to utilize CxxPlatforms for parsing time dependencies to improve
refactored the management of the ` oAuthService ` and introduced a ` dispose ` method in ` GoogleTTSService ` to ensure proper
camel - 16462 : fixed file consumer to accept dynamic done file name . thanks to daniel for the patch .
added a boolean flag ` reopenReaders ` to ` SolrConfig ` and modified the conditional check in ` SolrCore ` to include it to control
added dialect version to freeplaneversion and add it to mapwriter
added methods to retrieve current date and timestamp fields in the Update class to enhance functionality for handling date and timestamp types in MongoDB updates
added a new method ` dup ` in the ` Attr ` class and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition and related classes to use a lambda expression instead of an anonymous class to improve code readability and reduce boilerplate code
replaced ` TermQuery ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` and updated expected value calculation to improve
removed multiple Java invoke classes from ConcurrentClassLoadingTest . java to streamline the code by eliminating unnecessary dependencies
added a new method ` providesUploadPreferences ( ) ` to retrieve direct nearby upload preferences and modified the ` providesUploadController ( ) `
added support for the " SYSIBM " and " SYSDUMMY1 " database modes in the parser and mode classes to enhance compatibility
refactor logging statements in TraceGatewayEnvironmentPostProcessor and add new sampler methods in SamplerAutoConfiguration to enhance logging clarity and enable conditional
pdfbox - 4892 : fix bug in poixmlproperties when add custom property
geotiffreader : do n ' t try to read negative _ infinity when nodata be null
refactor CliDriver to improve exception handling and streamline session management to enhance code readability and maintainability while ensuring proper resource management
replaced Executor with Scheduler for better error handling in MockRestAdapter to improve performance and maintainability of the code
refactor ` selectByRuleIdSet ` method to use a partitioned list of ` ruleIdSet ` to improve efficiency and readability by
added a method ` addExitDescription ` to ` ExitStatus ` for handling throwable stack traces to improve error handling by providing more detailed exit descriptions
fix multiblock render for player that do n ' t have the player .
rename ` columnFamily ` to ` cfColumn ` in ` SliceReadCommand . java ` to improve clarity by accurately reflecting the purpose
updated the range length comparison logic in PlotConfiguration . java to ensure consistency in range length validation
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` to improve UI responsiveness and
replaced ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java `
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method for clarity to improve code readability and
added an assertion to check if the service message is null to ensure that the service message is correctly retrieved from the service
updated key handling in MappingMongoConverter to use potentiallyEscapeMapKey instead of potentiallyConvertMapKey to improve clarity and correctness in key
updated Timber logging format in NearbyMapFragment . java to improve readability and consistency of log messages
camel - 16462 : camel - core - fix the issue that camel - jbang do n ' t use javatype
updated FuzzyLikeThisQuery to use Terms directly instead of MultiFields to improve performance by avoiding unnecessary term retrieval for non - existing fields
updated the ` writeApplicationsLinks ` method to accept a ` tabularList ` parameter and modified related logic to enhance link writing functionality based on the
[ ds - 3352 ] use identifierservicefactory instead of dspaceutils . getservicebyname ( )
updated ` assignBytes ` method calls to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure consistency with the
modified the ` getDisplayScript ` method to return a non - null value to provide a default implementation for the method without an abstract implementation
replaced keyToPress and keyToRelease with a single sequence of keyToPress and keyToRelease in RemoteWebDriver . java to
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
added synchronization to wait if there are no active interfaces in NetworkConfigurationWatcher . java and null check for dbusConn in NetworkManagerListenerImpl .
added a new method ` getAllEmbeddedObjects ` to handle nested objects in ` HSSFWorkbook ` to improve code readability and maintainability
added import statement for Shdr from jogamp . common . os . elf to Shdr in ShaderNodeLoaderDelegate . java
replaced instances of ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font types
replaced GLStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
updated LiveTvGuideActivity and ProgramListAdapter to use mCurrentGuideStart instead of a local variable to ensure accurate display date based on the
updated method invocation to use Whitebox ' s getMethod instead of getDeclaredMethod and added new test classes for mocking to improve method invocation reliability
added dlopen calls for " libfreetype . so " and " libfontmanager . so " in JREUtils . java to
pdfbox - 4892 : fix math . pow ( ) for multi - variable function
do n ' t allow infinite loop if there be a non - overflow guard .
move instanceof check to typeframemodelingvisitor . getinstance ( )
added a new static class LocalizedString and modified method calls in multiple files to utilize it to improve localization support and simplify type argument handling
added a boolean property ` disableClasspathSearch ` to the ` ServerConfig ` class and updated the ` DefaultContainer ` class to use it to
changed the ` formats ` and ` minBufferSize ` , ` maxBufferSize ` to be ` final ` and modified the initialization of ` formats `
change default value of retries from 0 to 1 in multiple classes to increase the default value for retries from 2 to 1
added settings handling and updated usage instructions in TexturePacker . java to improve clarity and functionality of settings management in the texture packing process
refactor image handling in AchievementsFragment to use AppCompatTextView for UI updates to improve code readability and maintainability by
added logging statements and lifecycle management for annotation processing round in TranslatingJavacPhaseTracerTest . java to improve debugging and monitoring of annotation
added a new ` CategoryInfo ` class and modified the ` CategoryInterface ` and ` MwQueryPage ` to include ` categoryInfo `
updated assertion messages in AuthzAuthenticationRequest . java for clarity to improve readability and maintainability of the code
updated TaskbarStashController to use a dynamic taskbar timeout based on accessibility preferences to improve user experience by allowing automatic hiding of
added handling for the ' ^ ' character in the signature parsing logic to ensure that the method correctly identifies and throws an exception for already thrown exceptions
updated access flag handling in ClassVisitorDriverFromElement and added new test cases for stubbing interfaces , enums , and abstract enums to ensure correct
added null checks for the ' in ' variable in IntervalFilter and added a null check in LowpassIntervalsSource to ensure ' in ' is
added tests for iterator behavior in MapInterfaceTest . java to ensure correct iteration over entries in a map
added a serialVersionUID field to the TreeMap class to ensure serialization compatibility for the TreeMap class
change created time from milliseconds to seconds in ImageData . java to allow for more precise timestamps for image creation
add singularws . getlocuscommand ( ) to use f2m instead of grobcov
deleted private and public keys for accounts in AccountRemovalJob . java to ensure proper key management for accounts in the application
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5995 - use keep
fix postjoinmapoperation when map have no interceptor
added multiple inlining processor for c++ and c++ templates in StandardDialect . java to enhance the flexibility and performance of the in
removed spillEnabled parameter from several methods in BaseHybridHashTable , BinaryHashTable , and LongHybridHashTable classes to simplify
refactor environment variable retrieval methods to use Optional for better null safety to improve robustness by avoiding reflection when the environment environment is not present
updated import statements in DefaultActionMapper . java for consistency and clarity to improve code readability and maintainability
added SerializableMode import to Mockito and modified PluginSwitch class formatting to enhance serialization support and improve code readability
fix : field injection point should not be set to null
added support for isolation level in SQL statements and refactored related logic in the Parser and TestCompatibility classes to enhance compatibility handling for different database
added constants for server2 transport mode and HTTP path in HiveConnection . java to improve code readability and maintainability by using named constants instead
added an overridden method ` isCacheable ` to ` GlobalOrdinalsWithScoreQuery ` to indicate that caching is not allowed for the
added a new file TestStrangeControl . java to implement a thread for StrangeControl functionality to facilitate testing of Strange
updated file type from JSON to JavaScript file in JsFile and JsLibrary classes to improve clarity and consistency in file naming conventions
added selectionStart and selectionEnd variables with corresponding getter and setter methods in ShadowEditText . java to enable tracking of start and end indices for
refactor gRPC server initialization to use try - with - resources for better resource management to ensure proper cleanup of gRPC servers and executor threads
updated the ` use ` method in ` Jooby ` to accept a ` String path ` parameter and added null checks for the path
added a null check for the fst variable in FreeTextSuggester . java to throw an exception if the lookup is not supported at the
updated line separator handling in T4975569 and T6729471 to ensure consistent line endings across different operating systems
added functionality to load and handle ABI writer classes in JavacInMemoryStep . java to enhance flexibility by allowing the use of
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to the PubRoot class to suppress warnings about the use of the Boolean
added a check for ` isStopped ( ) ` before scheduling scheduled tasks in ` PullMessageService . java ` to ensure graceful shutdown of the
refactor EnergyEndpointer class to improve code readability to enhance maintainability and facilitate future updates
refactor ComponentPresetChooserDialog to use a list for displayed column keys to improve code readability and maintainability by reducing redundancy in
fix checkstyle issue in org . opengrok . opengrok . indexdatabase
fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the file ` Constants . java ` and ` DistanceUtils . java ` from the project
refactor key extraction logic in RandomPartitioner to improve clarity and efficiency to enhance readability and maintainability of the code
[ gr - 35656 ] fix build - time initialization of native - image .
added unit test for creating inline role bindings in RoleBindingTest . java and refactored create method in RoleBindingOperationsImpl . java to
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve traceability and debugging of session cookie configurations
updated file name generation in HotseatFileLog . java to use the day of the year instead of a fixed value to ensure accurate
[ hotfix ] fix checkstyle issue in util / blocking / subscribe . java
added error handling for invalid options in ` JavapTask . java ` and created a new class ` T8033711 . java
replaced the usage of ` Collectors . toList ( ) ` with ` toList ( ) ` across multiple Java files to improve code readability and
changed log level from error to warn and added conditional handling for shutdown in TaskDriver . java to improve logging clarity and ensure proper error handling
[ hotfix ] [ network ] add support for tiered storage in input gate
refactor code to use a new method ` isNotSuccessStatus ` for clarity to improve code readability and maintainability by encapsulating status
enable GL20 usage in Cuboc and modified LwjglApplication initialization in CubocDesktop to enable OpenGL20 support for
remove unnecessary check for method return type in j2j body
replaced DefaultSourcePathRuleFinder with SourcePathResolver and introduced a new Arg class for handling supplementary outputs to improve code clarity and
fix test that fail on slow machine
added a condition to check if the input file path does not contain the " / build / " separator to ensure that duplicate words do not contain
instructor : add list of response entry to instructor ' s feedback response comment
removed unnecessary whitespace in the if statement to improve code readability and maintainability
added a new file ` TestEscapeThroughInvoke . java ` implementing a class ` A ` with methods ` create ` and ` saveInto `
replaced direct stream skipping with IOUtils for reading bytes to improve code readability and maintainability by leveraging built - in utility methods
added interceptor initialization in ConnectionPool and improved error logging in DataSourceProxy to enhance error handling and provide clearer logging for connection pool issues
changed catch block from catching Exception to catching Throwable to improve error handling by catching all throwable types
hbase - 16465 hbase - 16465 cache . getcurrentsize ( ) should return 0 if eviction in progress ( #
removed unnecessary check for task count in RecentsView . java to simplify code and improve readability
added instance configuration change listener to HelixBrokerStarter and increased sleep duration in HelixServerStarter to improve the handling of instance routing
added ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` interfaces and updated ` CoinmateExchange ` to utilize
improve validation of ` ` basedir ' ' and ` ` project . basedir ' ' in defaultmodelvalidator
pdfbox - 4892 : avoid duplicate key in coswriter , a suggest by valerybokov
add displaydata to ptransform . setdisplaydata ( list < itemspec < ? > > )
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat
disable the ` jdk . certpath . disabledAlgorithms ` security property in ` ClientJSSEServerJSSE . java ` to enhance security
added checks for sub - command and sub - command groups in OptionData . java and updated the max choice check in OptionData . java to
updated module - info . java files for mmm and ppp modules to improve module structure and organization
added error handling for server connection failures in IOSImplementation . java to improve robustness by providing specific exceptions for connection failures
updated ` sCheckingEvents ` and ` mFinished ` logic in ` LauncherInstrumentation ` and ` LogEventChecker ` classes to ensure
refactor exception handling and writer closing logic in FileSinkOperator . java and SortedDynPartitionOptimizer . java to improve error handling and resource management
added diagnostic output to the return statement in SchemaGenerator . java to provide visibility into diagnostic information for debugging purposes
replaced instances of ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to provide a more specific
updated DataSourceMonitorTests . java for improved test coverage to enhance reliability of data source monitoring functionality
added a set to track loaded resource paths and modified the resource scanning logic to prevent duplicate entries in the classpath scanning process
updated the handling of the test instance in TestServiceUtil to check for null values before logging errors to improve error handling and provide clearer diagnostics
add error handling for null values in RoutingInBoundHandler to ensure proper error reporting when the input object is null
added ` natIp ` field and updated logging messages in ` EkeyConfiguration ` , ` EkeyUdpPacketReceiver ` , and `
updated imports from ` io . netty . buffer ` to ` io . apache . arrow . memory ` and refactored buffer allocation in
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes for improved code organization to enhance maintainability and read
added validation for HTTP headers and bodies in HttpConnection . java and implemented a new test case in RFC2616BaseTest . java to ensure
[ java ] use atomicreference for subscription in multilock to avoid deadlock .
avoid starved sstables in leveledmanifest if no compaction candidate be available
added a test annotation to the TestOrcTimezone1 class to facilitate unit testing for the ORC timezone functionality
updated the ` enableMetrics ` and ` enabledTimers ` logic to use a new ` findMatch ` method and modified related logic to enhance
added error handling for JSON processing in PinotSegmentRestletResource and refactored return statements in TraceContext and TraceContextTest to improve
updated JTable renderer retrieval to handle null superclasses and added a new test class Test6888156 to improve robustness of the renderer
added conditional logic to check for the existence of the shell file before adding it to the args to ensure proper execution of shell commands based on the
updated the deletion limit from 10 to 1 in DatabaseCleaningService . java to optimize the deletion process for better resource management
replaced List with Set for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
replaced ` deleteFilesAfterClose ( ) ` and ` fileMmapEnableIf ( ) ` calls with ` transactionDisable ( ) `
modified iterator initialization logic and added a new iterator constructor in SortedIntList . java , along with a new test class SortedIntListTest .
added a call to unregistering JMXHelper in DefaultRemoteProxy . java and modified exception handling in JMXHelper . java to improve error handling and
change default writebuffer size from 4MB to 64MB in RocksDB configuration to accommodate larger writebuffers for better performance
removed the ' true ' parameter from the ' this ' constructor in the Style class to simplify the style initialization by eliminating unnecessary parameters
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure compatibility with non - UTF - 8 encoding
added JSON graph configuration to SamzaRunner to enable the execution of a JSON pipeline in the Samza framework
change sound sound to use ocean waves instead of nature .
[ hotfix ] fix checkstyle violation in looprotationbadnodebudget
added ` TypeInformation < ? > typeInformation ` parameter to the ` convertToMongoType ` methods across multiple classes to enhance type conversion flexibility and
[ inputbox ] display ' i ' instead of ' i ' for complex input box
simonstewart : make sendkeytoactiveelement return an empty string instead of an array .
added methods to get a scaled image instance and reduce the target dimensions in AddAndScaleMultiImage . java to ensure target dimensions are valid and
removed the ` extendArgumentCheck ( ) ` and ` extendWrapStore ( Engine engine ) ` methods from ` DBMaker . java ` to
added updateshiftstatenow ( ) to update the shift state of the keyboard .
removed the handling of the " DETECTED _ ACTIVITY " field and updated related methods in several classes to ensure backward compatibility while maintaining
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket .
removed import of Buildable from AaptPackageResources . java to streamline dependencies and improve code clarity
added comments to track unused variables in multiple Java files to improve code clarity by indicating that these elements are unused
updated the exception message in WebSocketUpgradeHandler to include the status of the invalid upgrade protocol to provide clearer context about the status of the error
reformatted code for setting blockMode in P11Cipher . java to improve code readability and maintainability
updated Mockito library version to ensure compatibility with the latest features and bug fixes
updated permission checks for plot ownership in Merge . java to streamline code for improved readability and maintainability
removed deprecated ` getConversationID ( ) ` methods from several classes to clean up the codebase and encourage the use of updated methods
use mary ' s featureprocessors instead of sun ' s freetts
refactor stripQuotes method in BaseSemanticAnalyzer and replace HashMap with LinkedHashMap in PartitionSpec to improve code organization and maintainability by centralizing
refactor rendering context handling in DLNAResource and Request classes to improve clarity and maintainability of rendering logic
updated repository retrieval logic in DefaultPluginManager . java to include project artifacts instead of resolution groups
camel - 16462 : camel - cxf should close the applicationcontext to avoid resource leak .
refactor PhysicsClient to improve code structure and readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failure
added a new File instance for the specified file name in ZipFile . java to facilitate the creation of a File object from a specified
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the ` handleAll ( ) ` method
fix : channel . uid should not be initialize by default constructor .
added logging functionality to GenericDAOImpl and introduced a new ReflectionUtils class for stack trace filtering to improve debugging capabilities and facilitate easier
added a test annotation to the FormLoginIntegrationTests class to enhance test coverage for form login functionality
refactor unparse logic in FunDefBase and ParenthesesFunDef to conditionally handle parentheses based on the argument length to improve
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to include cluster _ name and improved error
[ gr - 16462 ] fix unsafeautomodulationsubstitutionprocessor for jdk 11 +
refactor JsonTreeReader to improve error handling for unexpected JSON elements to enhance clarity in error reporting when reading JSON elements
added support for command - line arguments in TestCommand . java and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest . java to
added methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to handle deduplication and
[ hotfix ] [ table - planner - blink ] add flink planner support to streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure a clean state for database operations
updated progress display logic to allow dynamic adjustment of progress display based on display percentage to improve user experience by allowing dynamic updates of progress display based on
added a check to ensure the parent file exists before proceeding to avoid potential errors when the parent file does not exist
added methods to write and close a POIDocument using OutputStream and File in IOUtils . java to improve resource management and ensure proper closure of
updated print statements in JavaBuild . java to include newline characters for runOptions , sketch , and exportClassPath to improve output formatting for better read
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for it in ` ITextRenderer
added user search functionality in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance user authentication process
added default port handling for routes based on server and HTTP ports to improve route configuration flexibility by allowing dynamic port assignment
updated SnmpTargetHandler to check if the handler is initialized before updating the status and refactored related tests to improve code clarity and
update instructorfeedbackeditpageaction to only include instructors with submit privileges to ensure that only instructors with submit privileges are included
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should not be used in new code
refactor path parsing logic in FileResolverImpl . java and add WarFileResolverTest . java for testing to improve path handling and ensure
updated the string concatenation for newFlushedSize in DocumentsWriterPerThread . java to include docstores to improve clarity of the output
fix : use getunlocalizedname ( ) instead of func _ 149739 _ a ( )
swapped the conditional checks for stripWhitespaceX and stripWhitespaceY in ImageProcessor . java to ensure proper handling of whitespace stripping in the
increase the number of locks in FeedRefreshUpdater from one to one second to improve performance by reducing the number of locks processed
updated ` MetadataIndexNode . deserializeFrom ` to include ` exactSearch ` in ` TsFileSequenceReader . java ` and added a test
removed the ` DateFormat ` parameter from the ` makeResultFromDelimitedString ` method in ` CSVSaveService ` to simplify the method signature
added preferred size setting for the pane in NavigationShareTab . java to ensure the pane displays correctly within the available space for better user interface
replaced offset and endOffset attributes with state management in BeiderMorseFilter and added a new test for custom token attributes in TestBeider
refactor UpnpAudioSinkReg , UpnpHandler , UpnpRendererHandler , UpnpServerHandler , and UpnpEntryQueue to
fix warp burst not be collided at the right position . close # 1193
added a new ` toJson ` method and modified import statements in ` JsonTest . java ` to enhance test coverage and improve import statements for better
refactor MutableContextDataSupplier class for improved readability to enhance maintainability and facilitate future updates
updated exception handling in CoreContainer to catch Throwable instead of Exception to improve error handling by logging a warning instead of throwing an exception
updated the KubernetesMockServer constructor to include a HTTPS parameter to enhance security by allowing HTTPS connections
do n ' t create foreign call node if the stamp of the function be not the default .
updated DefaultServlet to allow GET , HEAD , OPTIONS requests instead of METHOD _ NOT _ ALLOWED , and modified HTTP headers to allow POST requests
tika - 3353 : fix tiff extractor to use locale - dependent decimal format
updated exception handling in ShowFileRequestHandler to return a response instead of throwing exceptions to improve error handling by providing a clearer indication of the
added exception handling functionality in ReflectorClassWriter and a corresponding test in ReflectorTest to improve error management and ensure proper exception handling in the
added a ` clamp ` method to the ` Vector ` class and its implementation in ` Vector2 ` to allow users to specify minimum and maximum
added OAuth2 authentication handling and improved scope management in ChainedTokenGranter . java to enhance security by ensuring requested scopes are not
refactor BC _ instanceof for improved readability to enhance maintainability and facilitate future feature additions
replaced the setSaveFlags ( SAVE _ ALL ) method with a static final Logger instance to improve logging capabilities and remove unnecessary save flags
updated UaaUrlUtilsTest to use JUnit 5 annotations and changed method visibility from public to package - private to enhance test structure and maintain
hhh - 15973 - fix nativequery # addScalar ( ) to use basicdomaintype
added a WeakHashMap to track font aat status and updated return statements accordingly to improve memory management and ensure thread safety when accessing font attributes
use intarraylist instead of intbigarray in typedset . size ( )
replaced " sessioId " with " sessionId " in multiple Java files to standardize the handling of session IDs and improve clarity in
refactor BrokerRequestUtils to improve code readability to enhance maintainability and facilitate future updates
refactor InjectorBuilderImpl to use a map for storing instances in a reverse order to ensure instances are processed in the correct order when creating instances
updated method calls in ` BuildTargetToRawTargetNodeTransformer ` to use ` buildTarget . getBasePath ( ) ` instead of ` getAbsolutePath
added null check for the value of ' val ' in EchoMessage . java to ensure that a default value is used when ' val ' is
keepalivemanager only when connect to jabber server . fix http : / / issues . apache . org / jira /
updated the DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to correct the initialization of the
added ` getAllDataTypePhysicalVariations ( ) ` method to ` VectorizationContext ` and updated ` Vectorizer ` and ` VectorPTF
move htmlassettranslator and stringsresourceloader to org . google . zxing . client . j2se package
updated layout condition checks for overview actions in OverviewState . java to ensure correct behavior when the shelf is removed from the overview
added JPA entity annotation to BaseActivityEventEntity . java to enable persistence support for the BaseActivityEventEntity class
added tracing functionality in NavBarSwipeInteractionHandler and TouchInteractionService , and changed SYSTEM _ TRACE to false in TraceHelper to improve
added a new file ` InvalidOptions . java ` to demonstrate the usage of the ` javap ` tool with command - line
added a condition to log an error if the number of supported display dimensions differs from the current display dimensions to improve debugging by providing insights into
refactor OAuth20UsernamePasswordAuthenticator to use OAuth20Utils for client ID and client secret retrieval to improve code organization and maintainability by central
changed the default value of the ` _ unwrapServletException ` variable from ` false ` to ` true ` in ` ErrorPageErrorHandler ` to
set status to ShortcutInfo . DEFAULT and infoUpdated to true in PackageUpdatedTask . java to ensure proper handling of shortcut status and info
camel - 14263 : seda component should set default seda queue size to 500 by default .
added batch update start and end methods to the App class to enable batch processing of updates in the application
added HttpClient configuration and validation annotations to ThirdEyeApplication . java to enable the use of a custom HTTP client in the application
added sorting functionality to JobInstanceFetchRequest and updated batch size handling in JpaJobPersistenceImpl
updated the ` cancelCryptoFacilitiesOrder ` method to return a ` CurrencyPair ` instead of throwing an exception to improve order cancellation handling by
ggb - 1353 hide the keyboard when click on the keyboard in av
use nfi ' s ` memcpy ` function for memcpy .
refactor code formatting in BindLdapAuthenticationHandler . java for consistency to improve readability and maintainability of the code
mow - 129 fix tooltip not block in desktop
updated DefaultDateTypeAdapter to allow customizable date and time formats to enhance flexibility in date formatting options for better compatibility with various use
updated playerSet format from " < UID : " to " ( " ) " in ListCommand . java to improve clarity and consistency in
added a check for empty lists in List . java to ensure proper handling of empty lists in the code
added exception handling for CommandException in ParametricCallable to ensure proper handling of command exceptions during execution
added support for handling UDFRegExp instances in the getLikeExpression method to enable differentiation between regular expressions and regular expressions in the vectorization process
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide a consistent way to
updated the runChild method in LuceneTestCase to set default locale for all locales to ensure correct locale settings are applied for child tests
refactor multiple Java classes related to database connection handling to improve code organization and maintainability
refactor context handling logic into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context handler initialization
camel - 16462 : camel - osgi - camel - test - osgi should use camel - test - bundle . thanks to
updated assertions in TestExecuteStreamCommand . java to use contains instead of substring comparison to improve clarity and accuracy of error message validation
updated the ` returnTypeSubstitutable ` method to include a ` Warner ` parameter and modified conditional checks for covariant return types to enhance
added a throttle type of CHARS and BYTES in TestExecutor . java to allow flexible handling of character encoding during template processing
removed unnecessary variable assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve code readability
refactor Annotation and AnnotatedElement classes for improved clarity to enhance code readability and maintainability
added a new interface ` Model ` to the ` org . apache . poi . hssf . model ` package and modified ` Sheet `
camel - 16400 : fixed the issue of camel - http - client - server - client - server - client - server - client -
added a ` clearEntityManager ` option to the ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control entity management
added null checks for ShortcutInfo and intent in multiple classes to prevent potential NullPointerExceptions when adding shortcuts
replaced instances of ` TwoDimensionalCollectionValuedMap < > ( ) ` with ` TwoDimensionalCollectionValuedMap < > ( true
updated exchange specifications from " BTC - e " to " Wex " and changed the exchange name from " BTC - e " to
added null checks for column readers in OrcEncodedDataConsumer . java and improved null handling in EncodedTreeReaderFactory . java to enhance
added a null check in SegmentInfos . java and a new test method in TestIndexReader . java to ensure that a NullPointerException is thrown when
fix test failure in fhirresourcedaor4searchwithelasticsearchit
modify the calculation of percentValue in DeviceHandler . java to handle negative values to ensure percentValue does not exceed 100 to prevent potential errors
updated limit checks in RangeInputStream and RangeReader to handle zero values to ensure proper handling of cases where the limit is less than or equal to
improve logging of additional routesbuilder duration
update hl chunk source to account for initial start time
updated test classes to extend LuceneTestCase instead of TestCase to ensure compatibility with the latest Lucene testing framework
added a new StatefulMapper2 class and updated input handling in OutputHandler and its tests to improve state management and ensure accurate state updates during
removed null check for fill in Area . java and set bitmap shader shift in Line . java to streamline code by eliminating unnecessary null
added database existence checks and updated imports in Blockchain and BlockchainTest classes to ensure blockchain data integrity and improve test coverage
trim whitespace from the match group value in SQLPlusSupport . java to ensure consistent formatting by removing leading and trailing whitespace
[ java ] set the apr socket to async so that it do n ' t interfere with other connector .
make sure divider be center in the split pane even if it ' s too small .
[ healthcheck ] add health check metric for controller ( # 5338 )
hide shared avatars in LocalFileListAdapter to improve user experience by hiding shared avatars
[ geogebra / mebis ] fix miss @ clientbundle . source annotation
updated condition checks from " if ( 1 > = args . length ) " to " if ( 2 < = args . length ) " in
added logging check before executing command in LogInterceptor to ensure command execution only occurs when the log level is not fine
replaced CountDownLatch with assertWaitUntil for span completion checks in EventBusTracingTestBase . java to improve test reliability by ensuring
replaced the locale initialization in QueryParser with a default locale and added getter / setter methods to enhance flexibility and maintainability of locale management
replaced the use of ` Arrays ` with ` Collections ` in ` EntryCustomizationDialog . java ` and changed ` HashSet ` to `
jbrules - 1352 : fix build issue with beta node constraint
added OCSPUnauthorized class and modified OCSPResponse handling in OCSPResponse . java and updated OCSPResponse . java to include new O
replaced a fixed sleep duration with a loop that waits for an existing server state to improve responsiveness and prevent multiple attempts to connect to
added methods to track and manage the number of active connections in SourceCounter and updated related classes to improve connection management and provide a mechanism to track
add field definition to interface type to allow field definition to be pass to the execution strategy .
refactor the ` createDefaultJavaPackageFinder ` method to return a set of source root paths instead of a single path to improve code readability
replaced the Writer instantiation to use PrintWriter for improved output handling to enhance output stream functionality by utilizing PrintWriter
updated file creation to use a random UUID for temporary files to ensure unique file names for testing purposes
added support for handling DataTable in JRubyStepDefinition to enable conversion from Java to Ruby for better integration with Cucumber
updated visibility settings for author and refactored image retrieval logic in ApacheHttpClientMediaWikiApi . java to improve UI responsiveness and enhance
refactor ReadSentimentDataset class for improved readability to enhance maintainability and facilitate future updates
update formula parse error message to include pointer - 1 to improve clarity of error messages for better debugging
added getter and setter methods for the bind address in WebSocketClient . java and modified the visibility of the WebSocketFuture class to enhance flexibility in
[ java ] clean up the archive and archive directory in the consensus module harness .
refactor width and height setting logic in WidgetGroup . java and add a new hit method in Actor . java to improve code readability and
updated sessionFixationAttribute comparison to use Boolean . valueOf for clarity to improve readability and avoid potential null pointer exceptions
refactor switch statement in LALogicLinesFragment to use edgeOption variable to improve code readability and maintainability by using a more
refactor ChromeBinary to introduce linearBackoffCoefficient for better backoff management to improve control over the backoff frequency during execution
added method and route attributes to ClientResponseWrapper and updated related methods in TraceExchangeFilterFunction to enhance the handling of HTTP requests by associating them
patch by jbellis ; review by brandonwilliams for cassandra - 1349
updated rendering intent return values in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to ensure
add ` ` not sure ' ' option to contribution question
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
added @ SuppressFBWarnings annotation and removed Serializable interface from KafkaRecord class to suppress warnings related to exception handling in KafkaExactlyOnceSink .
added support for PGConnection in the PooledConnectionImpl and created a test for it in BaseDataSourceTest to ensure proper handling of PGConnection
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log messages in TokenAuthenticationHandler to provide clearer context about the missing token encryption secret to improve clarity of log messages for better debugging
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class is outdated and should not be used in new code
updated AmbariManagementControllerImpl to handle unlimited key JCE requirements and refactored command reporting logic in AbstractServerAction to improve
added support for reading and writing iterators in NamedListCodec to enhance flexibility in handling different data types and improve code readability
fix potential npe when assign completely lose partition
added import for InclusionRule and set schema inclusion rule to " public " to enhance schema management by restricting access to public schemas
updated the expected value of the mean value from 3.0 to 7.0 in the test to reflect the correct expected behavior of the mean
refactor ring creation to ensure valid coordinates and add new test cases for edge cases in SDO to improve robustness of polygon creation and ensure
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve base name and dimension
added a method to set debug evaluation output for the next evaluation in SheetUtil and XSSFFormulaEvaluator to enhance debugging capabilities for formula evaluation
refactor ( testmodule ) : migrate test module to junit 5 ( # 3649 )
removed the ` false ` parameter from the ` ExoPlayerProfile ` constructor and updated the condition for live TV playback to simplify the profile
added a return statement to the DynamicStyleBar class to ensure proper termination of the method execution
added SLF4J logging statements to Utils . java for setting and resetting database properties to improve visibility into the state of the repl dump process
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future updates
updated condition in MethodEmitter to promote both object and boolean types to ensure compatibility with both object types and boolean types
rename llvmobjectnuller to llvmaddressnuller , make it public
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
add a new test suite for verify transaction - aware cache proxy in caffeine cache
added a method to calculate the bounding box of a mesh based on vertex attributes to provide functionality for bounding box calculations based on the number of vertices
added TargetHashFunction enum and modified hash function implementation to support different hashing algorithms to enhance flexibility in hashing by allowing different hashing algorithms
refactor DefaultConfigurationProperties for improved readability to enhance maintainability and facilitate future updates
updated high light color and alpha settings in ListViewMultiChartActivity , modified highlight paint alpha in BarChart , and added arrow drawing in Bar
removed duplicate entry for temporary PG path plan mapping in ClusterPlanRouter . java to streamline the code by eliminating unnecessary duplication
[ hotfix ] fix checkstyle violation in infinispanremoteadroducerit
added checks for file existence in MavenArtifactFetcher and refactored dependency fetching logic in MavenDependencyResolver to improve reliability of artifact fetching and
updated the fragment shader format in SpriteBatch . java to include a conditional check for GL _ ES to ensure compatibility with ES environments when GL
changed the type of ` servers ` and ` getServers ` from ` SortedSet ` to ` Set ` in ` RSGroupInfo ` and updated
added a try - catch block to load the JspPage class and modified log level from warn to debug to improve error handling and reduce log verbosity
refactor CustomAnalyzer and TestCustomAnalyzer to use a new token filter factory for version - aware analysis to improve version handling and ensure compatibility with
added a test for retrieving package archive info in ShadowPackageManagerTest . java and updated ShadowPackageManager . java to handle package archive info retrieval
replaced direct calls to ` Method . invoke ` with ` MethodUtil . invoke ` and added package access checks using ` ReflectUtil ` to
added import statements for ProjectConfigurationStartEvent and TaskStartEvent , and implemented a method to update progress listeners in Main . java to enhance functionality
removed synchronized block from AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
refactor initialization fail timeout logic in HikariConfig . java and improve exception handling in HikariPool . java to enhance clarity
replaced the method ` getResult ( int timeOut ) ` with ` getResult ( ) ` and added an error method ` error ( HttpResponse HttpResponse
changed the visibility of the ` isNative ` field from non - transient to transient and modified the entry addition logic to ensure the ` isNative
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity and consistency in error reporting
rename ruleenablethandler to ruleenabletactionhandler , fix typo
refactored several Java files to improve code organization and readability to enhance maintainability and clarity of the codebase
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of log messages for better troubleshooting
updated test cases in KafkaDynamicTableFactoryTest and UpsertKafkaTableFactoryTest to use new source and sink options to enhance clarity and
added null check for the registrant repository in UsersPanel . java to improve error handling and provide user feedback when the repository cannot be found
added support for additional font file extensions " . otf " and " . OTF " in font name checks to ensure compatibility with additional font
refactor type handling in AnnotationMatcher to improve clarity and correctness in matching Java types to enhance code readability and maintainability while ensuring
updated the message from " OFF " to " SEVERE " in Grep . java to provide a more specific status for troubleshooting
modified debug logging to check if debug level is enabled before logging messages to improve performance by avoiding unnecessary string concatenation when debug logging is not enabled
replace includes list with excludes list and update null checks for includes and excludes to improve clarity and prevent potential NullPointerExceptions
added conditional logic to handle home intent behavior based on user preference to improve user experience by allowing navigation to the default screen when the home intent is
updated maximum bitrate from " 110 " to " 30 " in PMS . java to increase the maximum bitrate for improved performance
replaced the method ` getOptions ( ) ` with a direct call to ` optionsMap . values ( ) ` in ` CommandLineParser . java
trim whitespace from the description returned by the MutableDatabaseProperty class to ensure consistent formatting of the returned description
updated the output filename in XOMParserTest . java from a relative path to a fixed path to ensure the output file is correctly formatted for
removed pid from error log message in ProcessBesuNodeRunner . java to simplify error logging for better readability
added methods ` getLoadedMusic ( ) ` and ` getLoadedSound ( ) ` to ` MusicLoader ` and ` Sound
removed unnecessary imports and updated type casting in OnBeanCondition . java to improve code clarity and ensure type safety
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for testing purposes
do n ' t set lrpausebutton to false if it ' s null
refactor preference handling in Preferences . java to use a unified method for adding account preferences to improve code readability and maintainability by reducing
send available presence packet in order to be able to connect to the server .
refactor StringBuilder initialization in ObjectInputStream to optimize memory allocation based on utflen to improve performance by avoiding unnecessary object creation
added a property value for Spring metrics export in the WebEndpointsAutoConfigurationIntegrationTests to disable statistics export in the application
refactor InterruptedException handling in the code to improve code readability and maintainability
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the code
refactor SSL and HTTP connection handling logic in ConnectionCheckOperation . java to improve clarity and maintainability of SSL and HTTP connection checks
refactor conversion logic in ArgumentArrayMessageMapper to handle both String and Map types to improve clarity and maintainability of the conversion logic
added null check for IndexableDSpaceObject in SolrServiceCommunityCollectionItemFilterPlugin . java and updated collection handle in XmlWorkflowFactory
added FLAG _ ACTIVITY _ RELAY _ TO _ FRONT to the intent in PasscodeManager . java to ensure the AuthenticatorActivity
refactor : remove @ deprecated from patternparameterconfigurator
changed the return type of the ` beginDraggingWidget ` method from void to boolean and added a null check for the drawable before proceeding
added JUnit @ Ignore annotation to TestPackedInts . java to mark tests as ignored due to issue LUCENE - 4488
added a null check for the root variable and collected components from the tabbed pane to prevent potential NullPointerExceptions when the root is not initialized
tagger : write confusion matrix in debug mode
do n ' t set last _ sample _ ok if it ' s already set
added unit tests for ` getConnectedDevices ` and ` getConnectionState ` methods in ` ShadowBluetoothHeadsetTest ` to ensure correct handling
corrected the spelling of " autowire " to " autowired " in the PropertyBindingSupportTest and PropertyBindingSupport to
added " clone " and " finalize " method to the objectMethods set and introduced a constant for the finalization method to enhance functionality by allowing
added null check for counters and updated logging messages in IntegrationTestBigLinkedList . java to improve error handling and provide clearer logging for ins
return not _ implemented status for resolve object in jdwp
updated the ` setRegisteredServiceFilter ` method to include a ` serviceId ` parameter and added a condition to check if the registered service matches the
added null check for getActivity ( ) in PhotoFragment . java to prevent potential NullPointerException when accessing getActivity ( )
replaced instances of ` LOGGER ` with ` logger ` across multiple files to improve consistency and clarity in logging across the codebase
added methods to set and get the string type in DatabaseAdaptor and updated JDBCSessionDataStore to use this new method to allow subclasses to access and
updated test cases in UIMAUpdateRequestProcessorTest to use suggested category instead of language and modified exception handling to improve test clarity and
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
[ drools - 2200 ] fix npe in dmnruntime # evaluateall ( dmnmodel )
simonstewart : fix the texture map creation issue on macos
added a tooltip text to the showCGCP checkbox in RocketPanel to enhance user experience by providing context - sensitive information
replaced ` owner . getTypes ( ) . add ( e ) ` with ` owner . addType ( e ) ` in EnumFactory and Interface
add text and description for hot reload and restart action ( # 4338 )
do n ' t use isspreadsheetlabel ( ) , use stringtemplate instead
changed the type of the BRIGHTNESS _ FACTOR constant from int to double to ensure accurate calculation of the BRIGHTNESS _
[ scm ] add context and date to the sscm history entry ( # 2631 )
added a boolean parameter to the createUser method and implemented the listUsers method to include admin status to enhance user management functionality by allowing admin users to
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in both ` IndexedPropertyDescriptor ` and ` PropertyDescriptor ` classes and updated
replaced string concatenation with parameterized logging for summary and timer messages in DynatraceExporterV2 . java to improve performance and readability
updated method parameter names from ' runnable ' to ' task ' in Context . java and Response . java to improve code readability and maintain consistency
add itemstack . setcapabilitiesfrompongebuilder ( nbttagcompound ) for backwards compatibility
[ hotfix ] [ test ] fix flaky test in lifecycleutilstest
added validation for contract types and updated contract retrieval logic in multiple servlet files to ensure compliance with contract types and improve contract validation process
added new package - info . java files for various classes including Image , Runtime , lang . management , and virtualization . management to organize
refactor the add method in DocumentsWriterDeleteQueue to improve concurrency handling to ensure thread safety during node addition
added a HashSet to prevent duplicate parsing of Java files and refactored test execution in T7091528 to improve efficiency by avoiding
changed the default value of the STRIP _ IPV6 property from " true " to " false " and updated the substring logic accordingly to
added support for adding a new user parameter in the LoginServerTokenEndpointFilter class to enhance flexibility in handling user credentials during OAuth token authentication
added a new language constant ` C _ KEY ` and modified language checks in ` LanguageFactory ` and ` CPPParserTokenManager ` to
replaced the direct instantiation of ` MoreFutures ` with a new method ` newSingleThreadExecutor ( ) ` in multiple files to improve code
added cache control and expiration headers to the login response to improve response handling and prevent caching of sensitive login information
updated error logging to include exception message to improve debugging by providing more context about the error
updated import statements and test classes in HSSFTests . java and modified test assertions in TestEmptyDocument . java to enhance test coverage and
move fetchhttp * test * to engine / subproject because testformauth ( ) make use of preconditionenforcer , part of engine / , and we want to keep that
added null check for the output file before retrieving its absolute path to avoid potential NullPointerExceptions when the output file is null
added access control priority settings for external resources in Java2DRenderer . java to ensure proper resource resolution during the rendering process
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure tests do not fail on unsupported fonts on Windows platforms
updated HotspotThreadMBean to be final and modified main method to include exception handling to improve thread CPU time verification and enhance code clarity
added a check for empty comments in TabsAndIndentsVisitor . java to ensure that whitespace checks are only performed when there are no comments
updated assertions in TestTriggerIntegration to check collectionRate from 5.0 to 100.0 to increase the expected values for collectionRate and shard
updated equality checks to be case - insensitive in DatabaseChangeLog , RanChangeSet , and NotRanChangeSetFilter to be case - insensitive
added a method ` getString ( String key , String defaultValue ) ` to the ` ShadowBundle ` class to return a default string value if the
updated date and time formatting logic in TweetActivity . java to accommodate military time settings to enhance user experience by providing
added a check to return an empty list if there are no connections to handle cases where no connections are available
refactor keyboard focus request logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus request logic
updated the classpath setting for the main class to include quotes around the file path to ensure proper formatting of the canonical path to avoid potential issues with
make sure we do n ' t create a new array for each call to solve ( )
added import statement for org . springframework . integration . core . Message in GenericMessage . java to enable integration with the Message class in the
updated SQL queries in PostgresConnector , TaskAttempt , MapReduceJobHistoryUpdater , and MapReduceJobHistoryUpdater to use a new join
updated AquaFileChooserUI to check for filter presence before setting the file filter to ensure the filter is only set when it does not
fix thread safety issue in p2p transport manager
updated the ` toString ( ) ` method in ` ArrayPtg ` to return " TRUE " or " FALSE " based on the boolean value
added specific import statements for JUnit assertions in PGtokenizerTest . java to improve code clarity and maintainability by using explicit import statements
refactor variable handling logic in Java2TypeScriptTranslator and add new test cases in GenericsTests to improve clarity and correctness of
added support for creating and altering auto - increment columns in PostgreSQL to support auto - increment functionality in PostgreSQL
updated byte reading logic in DataInput . java to use bitwise operations instead of bitwise operations to improve code clarity and ensure proper handling of negative
removed assertions for vertical and horizontal pixel spacing in ImageParserTest . java to streamline test cases for better readability and maintainability
updated the method call to retrieve the parent component to ensure the correct parent component is used for proper functionality
updated import statements in multiple Java files for consistency and clarity to improve code readability and maintainability
use engine _ free instead of engine _ finish and add engine _ init
refactor iteration event handling in the InterleaveControl and GenericController classes to improve clarity and consistency in method naming to enhance code readability
added resource cleanup for HttpContent and fileUpload in FormDataHttpContentProcessor and NettyStreamingFileUpload classes to ensure proper resource management and
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are deleted before tests are executed
modified URL handling in BrowserActivity to launch a new activity based on the presence of " twitter : / / " to improve user experience by allowing
added a HeliosClient instance and a host status waiting mechanism in DeploymentGroupTest . java to ensure the client is ready before proceeding
changed the logResult parameter from false to true in the listLabels method to enable logging of labels for better visibility tracking
increased the maximum auto retries from 0 to 25 in RestTemplateRetryTests . java to increase the maximum auto retries from 0 to 25
removed the System . out . println statement from TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapperComponent . java to improve
added support for the FRACTION resource type in the PackageResourceLoader and Converter classes to enhance resource loading capabilities for fraction values in the application
removed file confirmation check in BasicFrame . java to streamline file writing process by eliminating unnecessary checks
added assertions to validate the presence of groupId and artifactId in UpgradePluginVersion . java to ensure that these fields are not null before proceeding with
hbase - 27979 improve error message when table quota be exceed in namespace ( # 4748 )
refactor multiple Java classes related to token processing to improve code organization and maintainability
refactor TestFuzzPreLoop class to improve code readability to enhance maintainability and facilitate future development
added a check to ensure f0 is non - negative to prevent potential errors when f0 is negative
updated logging message from " Retrieeved catalogs " to " Retrieved catalogs " and added null checks for primary and foreign key columns to
add a getcharset ( ) method to the b2cconverter so that it can be reuse .
added logic to check if empty pages are allowed based on LawnchairPreferences to enhance user experience by preventing unnecessary operations on empty pages
added a warning log message about the deprecation of cucumber - needle to inform users about the use of cucumber - cdi2
refactor ` ShadowThemeTest ` and ` ShadowArscAssetManager ` to use ` Resources . Theme ` instead of ` TestActivity `
updated error messages in VerifyFast . java to use Arrays . toString ( ) instead of string concatenation to improve clarity of error messages for better
no effective change - no effective change - no effective change
added checks for ` IdentNode ` in ` CodeGenerator ` and introduced ` getProto ` and ` setProtoCheck ` functions in ` Global
added randomness to the shuffle method call in TestFilterDirectoryReader to enhance randomness of the readers list
updated the display name assignment logic to differentiate between remote clarification and known remote clarification to improve user experience by providing clearer
updated path handling in CookieRetrievingCookieGenerator to ensure a non - blank path to avoid potential errors when the path is blank
updated closing braces in multiple Java files to improve code readability and maintain consistency
updated cache name retrieval to use total backup count instead of backup count to ensure cache name reflects the correct backup count configuration
updated the comparison logic to check if the page number is non - zero instead of zero to ensure that the page number is not equal to zero
added a condition to check if the focused widget is equal to the current instance in UIDropdown . java to ensure that the UIDropdown
fix checkstyle issue in util / soundutil . java
refactor ApplePackageDescription to utilize a new method ` getAppleCxxPlatformFlavorDomain ( ) ` for obtaining
[ fix ] add test case for ` ` show ololo from ololoed ' '
changed method names from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
refactor the EnglishPTBTreebankCorrector class for improved clarity to enhance maintainability and readability of the code
added a new file ` TestGetLoggerNPE . java ` that tests the behavior of ` System . out ` and ` System . err
added a ` data ` field and its getter method in ` PathSharingContext ` , modified references in ` ActionDirectory ` , ` Scripted
do n ' t throw espressoexception if the method be not synchronize .
added support for " NEXT VALUE FOR " in the NextValExpression class and updated related tests to enhance flexibility in handling multi - row values
improve error message when resource bundle be not pre - cached
refactor BoundedLocalCache to improve buffer management and add a new test for clearing pending writes to enhance cache efficiency by preventing excessively
added Leverage _ Level parameter and order direction handling in QuoineExchange and QuoineNewMarginOrderRequest classes to enhance exchange configuration
added a new method ` boundInitialization ` in ` PropertyDescriptor . java ` and created a new test class ` Test7192955 . java
refactor display mode handling in LwjglApplicationConfiguration and LwjglGraphics to use a new SetDisplayModeCallback interface to
added null check for parent ' s buttonsAwatingRelease property in Tabs . java to ensure proper cleanup of buttons when the parent form is
refactor wrap width calculation in LineCell . java and update wrapWidth to Double . MAX _ VALUE in StyledTextAreaSkin .
corrected a syntax error in XSLTErrorResources _ it . java to ensure proper formatting of the error message for better readability
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
replace string concatenation with String . format for better formatting to improve readability and maintainability of the code
replaced the method of obtaining the namespace URI from ` xmlReader . getNamespaceContext ( ) ` to ` getNamespace ( prefix ) ` to
added support for nested joins configuration in multiple test classes to enable conditional execution of nested joins based on configuration
server : allow root admin to use root admin instead of normal
added caching for class and platform class paths in SourceFileManager and updated CompletionTaskProcesor constructor to include a cursor parameter to improve cache
added Hive configuration settings for METASTOREURIS and SQL std authorization in TestMsgBusConnection . java to ensure proper configuration of Hive authorization
replaced JUnit ' s assertThat with Hamcrest ' s assertThat in KuduIOIT and XmlIOTest
add miss @ nullable annotation and use util . createhandler ( ) instead
fix ( tcp ) : fix symbol map memory size ( # 1193 )
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and updated imports in ` Jooby . java ` to streamline the codebase by eliminating unnecessary
refactor ThreadlessExecutor to remove dependency on sharedExecutor and introduce isFinished ( ) and setWaiting ( boolean ) methods to improve code
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter . java and added new test cases in TestDateTimeParsing . java to improve error handling clarity and ensure
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related references to improve clarity and consistency in naming conventions
added a case for WILDCARD case in Types . java and created a new class T7034495 . java with interfaces and interfaces to
replaced a ` do ` loop with a ` while ( key ! = null ) ` loop in ` LotsOfEvents . java `
updated conditional checks in TransclusionDecideRule . java for Hop . NAVLINK and Hop . SPECULATIVE to ensure correct
change to show display just major version on banner ( # 9441
added unit tests for handling Print _ Area and Area3DPtg name records in TestBugs . java to ensure correct identification and representation of
updated the description handling in MindIconFactory to ensure a default empty string is returned when the name does not contain a slash
modified the ` onHomeIntent ` method to accept a boolean parameter indicating whether to handle the internal state of the home intent
replaced direct usage of ` getPreferDependencyTree ( ) ` with a local variable ` preferDependencyTree ` to improve code readability and
added ` showDetails ` method implementations across multiple activities to support displaying file details based on the active tab to enhance user experience by allowing users to
updated function names from " $ apply " to " apply " across multiple files to standardize method naming conventions and improve code readability
added randomization logic for symbol sizes in MinimalEncoder . java and updated test assertions in HighLevelEncodeTestCase . java to ensure proper
updated string formatting in SourceBuilder . java for clarity and consistency to improve readability and maintainability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter updates after data changes
added a method ` setDefaultWALSyncMode ` to the ` ShadowSQLiteConnection ` class to enable configuration of WAL sync mode in
updated type erasure checks in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure proper handling of
remove unused method from defaults3ccnasyncclient ( # 3649 )
updated error messages in ` doDudPasswordTest ` and ` doDudPasswordTest ` from " DEF length object truncated by 28 `
improve error message for hazelcasttestsupport . testcollectionsize ( )
do n ' t emit bailout in case of an error
ggb - 1353 fix for npe in imagemanager . getexternalimage ( ) .
refactor SQLXML class for improved readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook methods in YoBitMarketDataService and YoBitMarketDataServiceRaw classes to
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` across multiple files to align exception handling with the new package structure
added StreamReadConstraints to the objectMapper factory to enforce maximum string length constraints for data processing
updated method for retrieving engines configuration to use a default value to ensure that a fallback value is available for better error handling
renamed ` FullIterator ` to ` WheelIterator ` and updated exception handling in ` TimerWheel . java ` to improve clarity
improve error message when a custom bug pattern can not be find
[ hotfix ] [ test ] increase timeout for localchunkprovidertest
changed the visibility of the menu item from true to false to hide the uncomplete check lists menu item for improved user experience
refactor DefaultResultSetHandler to use resolveDiscriminatedResultMap for result map resolution and introduce a new Contract class with associated methods to
added null check for defaultHome and registered package registration logic in OverviewComponentObserver . java to ensure proper handling of null cases and prevent potential
removed the import and annotation for VertxGen in PumpImpl . java to streamline code generation by eliminating unnecessary dependencies
removed unnecessary type casting for file operations helper calls in FileDetailFragment and OCFileListFragment to simplify code by eliminating unnecessary type casting
trim leading and leading spaces from tokens in ConfigAttributeEditor and add unit tests in ConfigAttributeEditorTests to ensure proper handling of leading and leading
rename classes and methods related to auxiliary to improve clarity and consistency in naming conventions
[ gr - 16936 ] make module reference public for jdk9 .
modified the case handling for ' r ' in DatabaseMetaData . java to differentiate between " SYSTEM TABLE " and " TABLE " based on the
chore ( deps ) : upgrade googleapis - agent to v3.15 . 3 ( # 377 )
changed the value of RQST _ FIELD _ DESC from ( short ) - 1 to ( short ) 1 in ThriftHiveMetast
added a new module - info . java file for the core module to define module exports and dependencies for better encapsulation and dependency management
added flush state handling and fill state checks in SslConnection . java to improve connection stability by ensuring interference between flush and interception states
log4j2 - 1343 fix log4j2 log delegate initialization error
7029048 : test / java / lang / class / executionenvironment / test7029048 . java fails due to
refactor MongoOperations , ReactiveOperations , and ExecutableFindOperation classes to improve code organization and maintainability
replaced null reference with " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with the current
disabled the test in TestInterProcessSemaphoreEdges . java to temporarily disable the test due to a known issue
added sorting functionality for resource names in EditableResources . java to ensure consistent ordering of resource names and improve code readability
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to support OSV terminal support to enhance terminal
added additional file extensions " . gr " and " . grs " to the conditional check in ClassType . java to ensure compatibility with additional
replaced HashMap and ArrayList with TreeMap for combinedVectors and combinedVectors in DrillTestWrapper . java to ensure consistent iteration order and improve performance
added an additional condition to the for loop condition in XPathEntityProcessor . java to ensure that processing occurs only when both names and values are present
refactor WebSocketPolicy class for improved performance to enhance responsiveness and reliability of WebSocket connections
changed ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` to instance variables and methods in ` ShadowTelephony
simonstewart : add option to the standardmessageresolver to allow customization of message resolution .
updated method and constructor instantiation to use Class < ? extends MethodVisitor > instead of Class < ? extends ClassVisitor > to enhance type safety and
added new classes LoggingAuditService and UaaAuditService for user authentication logging to implement auditing functionality for user authentication processes
added nullability annotations and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance code robustness
do n ' t generate proxy for abstract class in aop proxy
camel - 16462 : camel - http - allow to configure http proxy host and port via system property
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to ensure compatibility with the latest version of the template
added a call to ` jdk . internal . util . StaticProperty . jdkSerialFilter ( ) ` in ` System . java `
add more detail to log about the pool size of camelcontext
replaced calls to ` forceFinishScroller ( true ) ` with ` forceFinishScroller ( ) ` across multiple classes to simplify the
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to use ` rawRealtimeTableConfig ` instead of ` realtimeTable
added methods ` isError ( ) ` and ` error ( ) ` to ` ValidationReport ` , modified error handling in ` DisallowValidator `
refactor inline QSB handling in InvariantDeviceProfile . java to improve clarity and functionality to enhance readability and maintainability of the
updated ` createClassPath ` method to include exception handling and changed URL encoding to improve URL decoding reliability and ensure consistent character encoding
updated regex patterns in TransformSteps . java to allow optional whitespace in method names to enhance flexibility in matching method parameters
fix npe in toolkit . setretinaproperty ( ) , add check for null image
replaced hardcoded timeout values with a constant timeoutMs in FaultToleranceTest . java to improve code readability and maintainability by using a
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the environment to ensure the application uses the correct Docker image for execution
added multiple calls to System . gc ( ) in KnowledgeAgentTest . java to ensure proper garbage collection to prevent memory leaks
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced createHardLink method with copyFile method for file copying to improve file handling and error logging for non - existent directories and files
updated method names from ` appendToDescription ( ) ` to ` getDescription ( ) ` across multiple classes to improve clarity and consistency in naming con
add warn log when fail to move ndarray to the desired device
added a conditional check before visiting XML elements in Autodetect . java to ensure only relevant XML elements are processed during processing
replaced ` InstrumentationTestCase ` with ` @ RunWith ` and added JUnit 4 annotations to ` NotesHelperTest ` and `
added new gas limit rules for ProofOfWorkRule , DifficultyRule , and ParentGasLimitRule in CommonConfig . java to streamline
changed the visibility of the setupData ( ) method from public to private in BaseAssumptionsRunnerTest . java and removed duplicate setupData
rename ` autocommit ` to ` runInTransaction ` and update related logic in ` ChangeSet ` and ` XMLChangeLogHandler ` to
added null check for listener in TripleServerStream . java to prevent potential NullPointerExceptions during stream processing
[ hotfix ] fix documentation for restart strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` to ensure that the SQL query can be parsed and de
refactor Common class to improve code readability to enhance maintainability and facilitate future updates
added context layers for launching an app in a try - with - resources statement to ensure proper resource management during app launching operations
[ hotfix ] [ stream ] fix typo in streamexecdeduplicate
added a warning log statement when an error occurs when sending a Kafka message to a topic in KafkaSubscriber . java to improve error handling and provide
added persistent property accessor factory and isImmutable method to SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enable proper management and immutability
fix setcoord ( ) to set undefined on segment3d
added scroll gesture handling for horizontal and vertical scrolling in AskGestureEventsListener . java to enhance user experience by enabling smoother scrolling
refactor comparison logic in NGramEstimator to use a loop for comparing keys to improve readability and efficiency of the comparison logic
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to
updated the method to retrieve folder icon properties in StatsLogCompatManager . java to enhance functionality by providing more detailed information about folder icons
updated server name retrieval from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to
added a new file TestSkeletonPredicates . java to implement and test skeleton predicates in the IR framework to facilitate testing of loop predicates
added a setHandler method to the SelectionHighlighter class and refactored equals and hashCode methods in ViewModelInfo to improve object comparison and
added a new ` StringResultConverter ` class and refactored ` AsmRuntime ` and ` AsmUtil ` to use it to
camel - 19751 : camel - test - infra - cdi should use @ disabled ( ` ` camel - 19751 '
changed the condition from ` waitForSingleObject ( console , 100 ) ! = 0 ` to ` waitForSingleObject ( console , 100 ) =
added null checks for the buffer before setting it in the setInBuffer method and reformatted the loadMethod method for clarity to improve code
updated the data path assertion in TestSolrDiscoveryProperties to use File . separator to ensure compatibility with different operating systems in file path handling
updated OS detection logic in AutoUpdaterServerProperties . java to handle Windows and macOS environments to ensure compatibility with macOS and include pre -
updated the lock constructor to accept a String lock name instead of a File object to improve clarity and usability by using a more descriptive
updated the launcher object reference from appIcon to allApps in Overview . java to improve clarity by using a more descriptive variable name
updated method calls in ClientDatagramEndPoint to use the ClientDatagramEndPoint class for better context to enhance code readability and maintainability by
changed the order of the GET _ STEP _ EXECUTIONS string from " oreder by STEP _ EXECUTION _ ID " to "
updated button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and added a check for unknown buttons
added tests for approval and rejection of claimed tasks in TaskRestRepositoriesIT . java to ensure correct handling of accepted and rejected tasks in
replaced instances of ` logger ` with ` LOGGER ` in ` OpenIdServiceResponseBuilder ` and ` GoogleAccountsServiceResponseBuilder ` to improve consistency
simplified the expiration check in SsoAccessTokenProvider and updated method visibility in SsoAccessTokenProviderTest to improve code clarity and ensure
[ geos - 7015 ] skip some test that fail on window
migrated alarm suppression methods to return null in ` GreetResourceMockedTest ` and updated imports in ` OciMetricsC
reformatted conditional checks in JFrame . java for improved readability to enhance code clarity and maintainability
added a null check for the MediaDatabase connection before executing the ANALYZE SAMPLE _ SIZE command to prevent potential NullPointerException when accessing the MediaDatabase
replaced the use of ` metricsContext ` with a call to ` solrMetricsContext ` in ` SuggestComponent . java ` to stream
refactor output generation logic in OCFileListFragment . java to handle cases where filesCount and foldersCount are zero to improve clarity and
changed the default configuration from " yes " to " no " in ScpServerTestSupport . java and changed the return type of loadKeys
refactor SourceVersion class to improve code readability to enhance maintainability and facilitate future updates
added a new test class ` ThreadFactoryTest ` to validate the behavior of the ` MyThreadFactory ` class to ensure that the thread factory
updated lockPeriod retrieval and expiration time calculation in DelegateResourceActuator . java and ProposalUtil . java to ensure correct lock period handling based on
added a new TicketModel instance to the EditTicketPage class to facilitate ticket management within the application
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss apps from predicted list
updated super constructor calls to include selfType parameter in multiple assertion classes to enhance type safety by associating assertions with specific types
added a new menu option for quote functionality and updated related constants in TweetActivity . java to enhance user experience by allowing users to quote twe
do n ' t call lock . lock ( ) in jmeterthread . start ( )
renamed ` codecPassthrough ` to ` decryptOnlyCodecFormat ` and updated related methods for clarity to improve code readability and
added a conditional check before offering failure and closing the consumer in ServerHTTP2StreamEndPoint . java to ensure that failures are only offered
updated German and French error messages in XSLTErrorResources _ de and French files to improve clarity and accuracy of error messages for
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during concurrent operations
replaced the use of ` Observer ` and ` Subscription ` with ` Subscriber ` in multiple classes to standardize the use of ` Subscriber `
reformatted code for better readability in ComponentPresetManager . java to improve code clarity and maintainability
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and updated assertions in TestJdbcDriver and TestJdbcDriver2
bugfix : maryguiclient do n ' t need to clear the first - time flag
added validation to ensure the session is valid and throw an exception if it is invalid to improve error handling and ensure that invalid sessions are properly managed
hhh - 16462 - remove unused exceptionhelper . java which be no longer use
fix jcex25519domain . getrandomkeypair ( ) to use 255 instead of 256
added a call to set the codec to Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with L
[ hotfix ] add debug log for empty header list
added algorithm handling for RSA / ECB / OAEPPadding in OperatorHelper . java to ensure compatibility with OAEPPadding algorithms and
updated platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple Java files to ensure compatibility with the correct
added error handling for SecurityException in DebugSourcesResolver . java to improve robustness by logging specific exceptions during URI resolution
removed unnecessary conditional check for UNIX OS in AbstractTest . java to streamline code logic for better readability and maintainability
updated error handling in FileUploadUtils and modified segment upload logic in UploadRefreshDeleteIntegrationTest to improve error reporting and ensure consistency in segment management
replaced instances of ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory freeing functionality to improve memory management and ensure
changed the value of USE _ PIPELINE _ DOWNLOADER from false to true to enable the download process by default
updated Calendar . DST _ OFFSET setting in SimpleDateFormat . java and added a new Bug7130335 . java file for date formatting tests
refactor AllAppsView . java to use local variables for iconCount and selection variables to improve code readability and maintainability by reducing
server : fix npe in listvirtualmachines api when vm be in stopped state
refactor StringBuffer class to improve performance to enhance efficiency in string manipulation operations
added rule . uid assignment to RuleResource . java to ensure the rule has a unique identifier for processing
added null check for the listener before unsubscribing and removed it from the registry to prevent potential NullPointerException when listener is null
added a new property ` PRETTY _ PRINT ` and modified JSON string conversion logic to conditionally apply pretty print formatting to the output of
make accessibility of access table in instrumentationbranchphase public
update error message for missing resources in DataSourceInitializer and its tests to provide clearer context about the absence of resources at the specified location
refactor dorun ( ) to throw ioexception instead of log error
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
refactor AmbariManagementControllerImpl to include effectiveClusterVersion and isUpgradeSuspended variables to improve code clarity and maintainability by
updated the copyright year in the FindsByCssSelector . java file to reflect the latest copyright year
removed the initialization of the field list from the writer to streamline the code by eliminating unnecessary variable declaration
added a constructor to OAuthProperties that initializes encryption and signing keys to ensure consistent key size settings for cryptographic operations
hbase - 27458 fix npe in htabledescriptor . getcolumnfamilystreams ( )
replaced the ` AllowedResourceAliasChecker ` instantiation with a lambda expression to simplify the alias check logic for better readability and maintainability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info . java files to improve code organization and maintainability
added a reset method to the Cluster interface and implemented it in the ClusteredServiceAgent to enable resetting of the idle strategy for better resource management
updated the initialization of the writer in ChunkedWriter . java to correctly increment the current chunk ID to ensure the writer is created with the correct
added a new abstract class AbstractJobExecutor to define job execution behavior in a Spring Batch framework
replaced the return statement with a break statement in the RecoveryStrategy class to improve control flow and ensure proper termination of the loop
rename ` hugeStaticBase ` to ` staticBase ` for consistency to improve code clarity by using a more descriptive variable name
[ java ] return empty publishers when consul discovery be not enable .
replaced the use of ` Float . floatToIntBits ` with ` SecureRandom ` for random number generation to enhance security by preventing collision
added error handling for failed runtime compilation methods in RuntimeCompilationFeature . java and introduced a new option in RuntimeCompiledMethodSupport . java to track
updated currentStart and baselineStart calculations to include aggTimeBucketMillis to ensure accurate aggregation of time values based on the specified bucket
added handling for abstract method invocations in CallsRealMethods . java and created tests for abstract methods in CreatingMocksWithConstructorTest . java to
refactor package access checks to accept Class objects instead of String names to improve flexibility and maintainability of package access checks
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup methods to enhance plugin error handling and improve
replaced instances of ` dtm ` with ` model ` for consistency and clarity to improve code readability and maintainability by using more d
added support for the " has - touch - interaction - service " feature in QuickstepTestInformationHandler and TestInformationHandler , and updated Launch
removed unnecessary try - catch block in ConnectAction . java to streamline code for better readability and maintainability
updated ` TargetsCommand ` to use ` BuildTarget ` instead of ` String ` for better type safety to improve code clarity and maintainability
added new classes ` ArrayHelper ` , ` Asserts ` , ` Enums ` , ` NativeRegExp ` , ` Objects ` , and `
added support for HOME and END commands in the Less . java file to enhance command processing capabilities for better user experience
removed synchronization around accessing connected plots in PlotHandler to improve performance by eliminating unnecessary synchronization
refactor intent creation in Utilities . java for sharing and chooser activities to improve code readability and maintainability by using a more descriptive
removed the ' public ' access modifier from the constructor of the Roster class to enforce encapsulation within the package
added basic constraints to the certificate generation configuration to enhance security by enabling basic certificate validation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address the issue caused by incorrect transform offsets
removed conditional checks for field multiValued in TrieDateField . java and TrieField . java to simplify the assignment of precisionStep to improve code
removed the TaskbarStateHandler class and its associated functionality from BaseQuickstepLauncher . java to streamline the codebase by eliminating unnecessary
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ` and ` getField ` methods for array types to ensure
wait for the hazelcast process to be destroy to prevent flaky test .
replaced the ` @ Singleton ` annotation with ` @ PostConstruct ` and modified the ` save ` method in ` ApplicationSettingsService ` to
updated assertions and newValue logic in Safepoint . java to ensure value validity and correct value assignment logic
updated thread name field type from char array to String and changed return type from char array to string to improve compatibility with Java ' s string representation
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to a fixed value of 42 in Lucene90HnswGraph
allow font to be use for stroke and font in java2d
[ calcite - 5248 ] fix window and group by in dynamic star column
added a new method ` findInterestingChildren ( ) ` to initialize the ` _ children ` array with a new ` Comment2000 ` record
added import for Messages and set status code in HTTPServer . java to improve user experience by providing a warning message
fix ( opengl ) : use getmodifiersex ( ) instead of getmodifiers ( )
amd64countleadingZerosnode and amd64counttrailereaddressesnode : increase node cycle to 3 for good performance
[ camel - 16400 ] fix nullpointerexception in entityparser when content - type be not set .
refactor Locale class for improved readability to enhance maintainability and facilitate future updates
added a clearLogButton and a clearLog method to ErrorConsoleController , modified ErrorConsoleViewModel to use this new clearLog method to
removed unnecessary whitespace in mRecentsAnimationController assignment to improve code readability and maintain consistency
updated Debug and CaptionMap classes to use LocaleHolder and Collections for caption management to improve localization handling and enhance code clarity
added connection pooling method to ConcurrentBatchIdentifierTest and SequenceOptimizerIdentifierTest , and modified connection pooling logic in AbstractTest to improve connection
[ java ] add opera blink support to opera session
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 595 .
added new Lifx product entries with new features and modified the existing ones in LifxProduct . java to enhance functionality and support additional product types
added asynchronous request handling for adding replicas in the OverseerCollectionProcessor and CollectionsHandler classes to improve performance and responsiveness during replica addition
refactor constants and method calls in PostgresDatabase and PostgresDatabaseTest to improve code readability and maintainability
updated LogPanel and SummaryPage to use a reference ID instead of a hardcoded null value to ensure consistent reference to the repository model for better
changed the parentTail vector from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to correct the bone ' s
added a ` browserDestroy ` method to ` AndroidImplementation ` and modified the ` deinitialize ` method to provide a more descriptive ` destroy
added a wait for the active collection of " readApiTestViolations " in AutoScalingHandlerTest . java to ensure that the test waits for
refactor loop structure in ScreenTerminal . java and remove unused imports in Tmux . java to improve code readability and maintainability while
updated the method to check for controller state in SoftResetAction . java to improve accuracy in determining if the controller is in an idle state or
disable on - disc stream cache to speed up texture pack reloading
added logic to retrieve DLNA resources in Request and RequestV2 classes to ensure proper resource retrieval for media resources
rename ispersistent to persistent to fix typo
replaced direct file output stream deletion with a custom close method to ensure proper resource management and prevent potential memory leaks
added error handling for HTTP 403 responses in StandardGitHubRepository . java to improve error reporting for forbidden requests in the API
log4j2 - 1349 add getoriginal ( ) method to messagefactory2adapter and use it in test
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to multiple test classes to suppress warnings related to serialization in the test cases
update version regex from version 1.9 to version 3.0 in mmm Version . java and ppp Version . java to ensure version
set initial and dismiss delays for ToolTipManager in ExtractionModelFrame . java to improve user experience by reducing tooltip delays
refactor ProjectCommand to utilize ` TargetGraphAndTargets ` instead of ` ProjectOptions ` to improve code clarity and maintainability by
added timezone setting and a test for 2445 format in TimeTest . java to ensure correct handling of time zones in tests
refactor MediaSessionConnector class for improved session management to enhance performance and maintainability of session management
use endpoint . gethandler ( ) . getsslimplementation ( ) . getssslimplementation ( ) . getssupport ( )
updated the display of location accuracy in GpsLoggingService to use accuracy instead of altitude to improve accuracy accuracy display for improved user experience
added a check for futures enablement in BinanceExchange and updated related methods in BinanceAccountService and BinanceTradeService to ensure future
refactor adminaccountmanagementhelper to use instructor course list instead of instructor list
set the accept queue size to max worker threads in ThriftHttpCLIService to improve resource management by limiting worker threads
replaced direct calls to ` getClass ( ) . getName ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to
added a conditional check to return true if the scheme is " ssl " in JmsFactory . java to ensure proper handling of SSL schemes in the
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test assertions in ` TestWindow
updated the calculation of the duration variable in GCInspector . java to clarify that the duration may be zero for a really fast collection
fix : return an empty optional instead of null for method with line comment
replaced the unsafe memory access method with a native method for reading reserved memory to improve compatibility with macOS and enhance memory management functionality
added calls to ` ungroupedAggregateRegionObserver . checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java
hbase - 2594 add procid to hbaseadmin to show procid when wait for a table
camel - 16462 : fix camel - cxf to work with cxf 3.0 . x
refactor YAMLChangeLogSerializer to use a list of maps for storing database change logs to improve code readability and maintainability by using a
replaced ` println ( ) ` with ` print ( ' \ n ' ) ` for formatting output in ` SchemaPrinter . java ` to
remove debug road regeneration from debug roadregen and simplify schematic handler .
replaced ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragmentNowPlayingRow ` and ` HomeFragmentFooterRow
added ` @ GenericGenerator ( name = " native " ) ` annotation and updated ` @ GeneratedValue ` annotation in multiple classes to support native
removed the country parameter from the getSystemTimeZoneID method and its usage to simplify the code by eliminating unnecessary dependency on country information
updated the write method to include position and remaining data in BZip2Codec . java and modified ByteBuffer allocation in TestBZip2Codec .
move log init from appw / appframe to geogebraappframe
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified the creation logic in Value . java to use this constant to improve type
fix findbugs warn in groupmanager . java
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class implementation to improve code readability and maintainability
added a new method ` newInstanceExact ` in ` TargetGraphFactory ` to create a ` TargetGraph ` instance with specific nodes and dependencies to
rename getminrowcompactedsize ( ) and getmaxrowcompactedsize ( ) to getminrowsize ( ) and getmax
fix serialization of modversion in modmetadata ( fixes # 399 )
updated the logic for setting and deleting elements in NativeArray to handle cases where the current element already exists to improve efficiency by avoiding unnecessary operations
updated file handling in FileUploader to use the remote parent file instead of the local file to improve file management by ensuring the correct parent file is
added a new file UTF8ReaderBug . java to test UTF - 8 character handling in XML parsing to ensure proper parsing of supplementary characters
added unit test base on user forum issue
updated assertions in BinanceIntegration and BinanceUsIntegration to include " depth20 " in addition to " depth " to include " depth20
added a resetAllocation method to the Wrapper class and called it in SimpleParallelizer to ensure that initialAllocation and maxAllocation are reset to zero
added import statement for AssertTree in AmbariManagementControllerTest . java to utilize AssertTree functionality for improved testing capabilities
refactor property handling in the Agent class and add a new AgentCMETest class for testing to ensure thread safety when modifying system properties
refactor ModelUtils to improve code structure to enhance maintainability and readability of the code
refactor methods in AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the code
updated width and height calculations in Legend . java to include checks for the index of the labels array to ensure that width and height are only
added delay and abort methods to the CodeFirstSpringmvcIntf and TestResponse classes , and modified the setUp method in SpringMvc
replaced direct access to ` String ` with an array of ` String ` and updated term frequency addition to handle multiple values to improve performance and
replaced the method of obtaining the source path from CxxLink to a new BuildTargetSourcePath instance to improve code clarity and
add chat message when versioning be disabled
changed ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` field in ` MediaFolder ` to enhance functionality
removed the argument " - b " from the AidlStep and GenAidlTest classes to streamline command - line argument handling
delete oblind oblindation on an edge from a comparison
added a TODO comment to the FakeHttpLayer class to address a known issue related to the testing of this functionality
replaced ` handleError ` with ` revokeLeadership ` in ` EmbeddedLeaderService . java ` to streamline error handling by eliminating
refactor ` CompositeDiscoveryClient ` to use ` Single ` instead of ` Stream ` for better readability and performance to improve code clarity
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ doc ] add jobmanageroptions . restart _ all _ tasks option
replaced ` updateNoWidgetsView ` and ` updateNoSearchResultsView ` with ` updateRecyclerViewVisibility ` and updated related logic to
use class . forname ( ) in order to avoid classnotfoundexception in woodstox
refactor test setup in AuditAliasCommandIntegrationTest to use a separate setup method to improve code readability and maintainability by separating setup
removed debug logging statements from WidgetsFullSheet and WidgetsRecommendationTableLayout to clean up the code and improve performance by eliminating
camel - 16462 : camel - cxf : disable test that do n ' t support the document - literal
added exception handling for the update ( ) method in CachedStore . java to improve error logging for periodical refresh failures
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use a unified ` addProviders ` method to improve
added a method to check the default background fill color in HSSFCellStyle . java and updated color handling in HSSFFont .
refactor ZonedDateTimeFormatterBenchmark for improved readability to enhance maintainability and ease of understanding for future developers
refactor the update processing logic in ` DistributedUpdateProcessor ` and add a new test class ` DistributedUpdateProcessorTest ` to improve code cl
added a null check for the rocket ' s stage number in SimulationListHandler . java to ensure that the rocket ' s stage
add ` ` / editreplace ' ' and ` ` / editscript ' ' command to make / editreplace / and / editscript /
refactor ExtendedMasterSecretExtension for improved code organization to enhance maintainability and readability of the code
changed the declaration of the ' processor ' variable to be final in AndroidInput . java to enforce immutability of the ' processor ' variable
added an event listener to handle cases when the end of the stream is reached during writing to improve error handling by notifying when the end of
added " CUBE " to the MySQLDatabase class to support CUBE - specific functionality
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the deletion process
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods to
replaced reflection - based field access with direct access to httpClient methods in DefaultOkHttpClientFactoryTest to improve code readability and maintainability by
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the ` os ` variable in ` RawMessageContentRedirectInterceptor . java ` to prevent potential NullPointerExceptions during execution
ggb - 1353 fix for av size in av
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified the error handling logic to include a conditional check
refactor HttpRequest class for improved readability to enhance maintainability and facilitate future updates
added functionality to store the pull unread status in shared preferences to track the unread status of the notification
make isnullnode only check if the parent object ' s kind be object .
updated delta time calculations and refactored camera methods in Box2DTest , Pong , and OrthographicCamera classes for better memory
refactor layout manager initialization for mCommentsRecyclerView in ViewPostDetailFragment . java to improve code readability and maintainability by reducing
changed log level from trace to warn for background operation aborted to provide a less severe log level for troubleshooting purposes
do n ' t include abstract method in j2j body builder
do n ' t run touch event on mouse up in ie10 +
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter and modified the user retrieval logic to include the device ID to enhance
updated the baseUrl from " http : / / droppr . org / srtm / v4.1 / 6 _ 5x5
updated MotifFileChooserUI to remove property change listeners and added a new class bug6520101 for testing JFileChooser functionality to
improve error handling in hollowuirouter and hollowdiffuirouter
refactor methods in BuildRuleResolver to improve handling of optional rules and type checks to enhance code readability and provide clearer error messages for
set the visibility of the transportSpinner based on the makingShortcut condition to improve user interface responsiveness by hiding the spinner when shortcuts are
added null check for ` attributes _ field ` in ` Attr . java ` and introduced new classes ` Anno . java ` and ` T
refactor backPressed methods to return a boolean indicating if the back button is clicked to improve responsiveness by preventing unnecessary back presses
added support for long view index configuration in QueryServices and updated MetaDataClient to use this new method to improve flexibility in handling view index data
changed the string format from " V " to " v " in SDRTrunk . java to improve clarity and consistency in the output
updated the private key path handling in PrivateKeyParserTests to ensure the private key path is clean before processing messages
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest
hbase - 27979 add option to importtsv to disable column family check
[ java ] clean up log subscription when start a new consensus module .
replaced ` startActivity ( intent ) ` calls with ` startActivitySafely ( intent , " onClickVoiceButton " , " startApplication
added a condition to skip processing for a specific JSON node " i " in PoloniexStreamingService . java to ensure that the API
refactor Procedure class implementation to improve code readability and maintainability
updated resource bundle application to include default locale and class loader to enhance resource loading flexibility for different locales
[ j2kt ] normalize array for kotlin and expand vararg argument if possible in method call
updated the logic for incrementing the term enum in ` PerSegmentSingleValuedFaceting . java ` to ensure proper handling of term counts and
fix ( modmetadata ) : add ` ` authors ' ' and ` ` authorlist ' ' field
added a new test class ` OSGiTest ` for verifying the presence of ` com . google . gson . annotations ` and `
refactor service enableability check into a separate method ` isDependentServiceEnableable ` to improve code readability and maintainability by encapsulating
hbase - 26465 remove the clearbufferonfail flag from htable . waitforallpreviousopsandreset ( ) .
fix : fix ( ifelement ) : do not cast ifelement . getthenstatement ( ) and ifelement . getthenstatement ( )
feature : add hasuserdata ( ) method to provide a way to determine if a feature have a user data
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify method signatures by elimin
refactor RelyingPartyRegistration class to improve code readability to enhance maintainability and facilitate future updates
added a method to enable logging for the JavaCompiler class to ensure all logging handlers are enabled for better debugging and monitoring
added a new class ` InJavaSourceSet ` to handle Java source sets and updated imports in ` UsesJavaVersion . java ` to improve
updated resource loading for the WFPC2u5780205r _ c0fx . fits file in TestGDALParser .
added a static method ` createGetter ` to the ` ReflectionHelper ` class to provide a flexible way to create getter instances with specific attributes
removed the use of external storage preference in the SDK version check to simplify the condition for SDK version compatibility
added a new constant ` INDEXER _ NO _ COMMIT ` and modified writer commit logic in ` IndexerMapReduce ` and ` Index
createvolume api : do n ' t allow disk offering id to be specify when create a volume
updated assertions in BaseTestCellComment to check for non - empty notes instead of empyy notes to improve clarity and correctness of
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes
added a new file ` Issue382 . java ` to handle various error endpoints in the Jooby framework to improve error handling and
removed the signum method and simplified the return statement in PositionUtils . java to streamline the code and improve readability by eliminating unnecessary
set the visibility of the text holder to GONE in the AttachmentAdapter to hide the text when certain conditions are met to improve user experience by
fix : fix npe in astparentconsistencychecker and jdtimportbuilder
simplified the method call to retrieve the profile from FirefoxOptions to improve code readability and reduce boilerplate
added a new ` LiquidBlock ` class with a ` BucketPickup ` interface and updated related references to enhance the functionality of the
fix intermittent test failure on slow ci server
change time zone from PST to America / Los _ Angeles in LocaleProviders . java to ensure correct date - time representation for
rename ` existingObservation ` to ` distinctObservation ` in ` DistinctErrorLog . java ` to improve clarity and consistency in
updated TEST _ * constants to include annotations for Nightly , WEEKLY , AWAITSFIX , SLOW , and BADAPPLES
changed the method name from ` createLogger ` to ` getOrCreateLogger ` and modified logger initialization logic to improve clarity and ensure the logger is
[ gr - 22699 ] disable access to reflection in graalcontext . getcontext ( )
implement updatepixels ( ) and setpixels ( ) in pgraphics2 . java so that it do n ' t interfere with the
updated verifyAndAddTransactionalProperties calls in HiveAbstractReader . java to include partition - specific data to ensure accurate verification of transactional properties for
refactor the logic for determining whether to scroll overlays in RTL layout to improve readability and maintainability of the code
hhh - 16462 : make batchbuilder implementation independent of the session ' s jdbcbatchsize
improve error message for ` ` should not reach here ' '
added a new class ` MockWithStaticStateDemo ` and a test method ` spyingOnAClassRetainsStateTest ` to implement
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure correct parsing and deparsing of
added null check and exception handling for the action execution in SecurityUtil . java to improve robustness by handling potential exceptions when ugi is null
updated error handling in OpenALMusic . java to include the audio buffer error code to improve error reporting for better debugging
rename endpointhelper . reslovestringparameter to resolveparameter and mark it a deprecate .
[ calcite - 1640 ] fix calcite literal calculation for decimal type
updated handling of null values for vendor and device properties in WebAuthnMultifactorDeviceProviderAction . java to improve robustness by avoid
updated the assertion in WalletTestAccount003 to use the current time as a string to ensure the test accurately reflects the current time of
replaced AxialStage with RocketComponent in BasicFrame . java and refactored selection handling in DesignPanel . java to improve code
added a new configuration option for the long running time in the Args class to allow configuration of the JVM ' s long running time for improved
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW and added a new class Ideas _ 2012 _
updated imports and modified method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider to use java . util . ServiceLoader to
fix camel - gml3 unit test so that it do n ' t fail on some platform
refactored assertion statements in TestRestClientRequestImpl . java for improved readability to enhance code clarity and maintainability by reducing
added a condition to check if the reference database is equal to the comparisonDatabase before proceeding with unique constraint checks to ensure that unique constraints are
refactor the ` addAndroidConstants ` method to streamline the process of setting Android properties to improve code readability and reduce boilerplate
replaced assertEquals assertions with await statements in DuplicateCookieTest . java and SessionRenewTest . java to improve test reliability by ensuring requests
added user _ args and is _ daemon and timestamp fields to the ImmutableMap builder in ChromeTraceBuildListener and its test to enhance trace build information
[ gr - 16922 ] fix thread safety issue in native - libraries .
corrected a typo in the log message from " Set match limit " to " Set match order " to improve clarity and consistency in
added a new file ` TheRockMetaDataDemo . java ` to demonstrate the usage of the ` TheRockExchange `
rename ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes to ` strictfp ` and add a test for strictness in `
removed the unparseIdentifier method call from columnNamesBuilder to simplify the code by directly appending the column name
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified the ` contextFreeTemplate ` method to include
added a condition to check if the method is not synthetic in InstantiateStaticClass . java and introduced a new test method in Bug1282 .
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify
added rescue handling logic and initialized necessary collections in IkStepDefinition . java to improve error handling and manage pending rescues effectively during
changed ` equals ` and ` hashCode ` methods in ` AbstractType ` , ` BooleanType ` , ` DateType ` , ` TimestampType
added a new method ` getSyncLevel ` to return a default value of ` SyncLevel . FLUSH ` and modified the ` SyncLevel
simplify controlcommandstest . testclientpause ( ) by use try - with - resources
added a condition to exclude the RECOVERY state from the recovery check in the RecoveryStrategy class to ensure that both CONSTRUCTION and RE
updated the create method call in opencv _ core . java to ensure the correct image dimensions are used for image creation
added SDK path handling in AppleBundle and SwiftStdlibStep classes and modified ProcessExecutorParams to accept ExecutionContext to set the SDK root
[ hotfix ] [ blob ] remove file lock in transientblobcleanuptask
server : fix npe when fail to create nat rule for static nat
refactor PasswordEncoder and StandardPasswordEncoder classes for consistency to improve code maintainability and readability
added conversion logic for row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type handling during
refactor BetterBlockPos class to improve code readability to enhance maintainability and facilitate future updates
updated the proxy retrieval method in EmbeddedVelocityToolboxView to use the class loader to ensure compatibility with different class loading strategies
updated nightly warning functionality to differentiate between nightly and nightly builds to improve user experience by providing a more descriptive
added support for removing trailing slashes from OracleDatabase statements in LoggingExecutor and JdbcExecutor to ensure consistent handling of trailing slashes across different database types
added a new constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to provide configuration for
fix hawtio jolokia test which fail on slow ci server
pdfbox - 4892 : fix audio slider and play marble ( # 4891 )
added a method to bypass the multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance security by
updated method signatures in MaxRectsPacker . java for consistency and clarity to improve code readability and maintainability
[ drools - 7 ] fix checkstyle violation in javax . lang . model
added methods to manage and retrieve the help page and refactored the updateContents method in HelpTab . java to improve code organization and enhance
added new classes GeocodeProviderFactory and ConstantsBase for managing geocoding functionality in the Omni Notes package to facilitate
updated import statements from ` org . apache . lucene . analysis . util . CharArraySet ` to ` org . apache . lucene
[ hotfix ] [ test ] remove expectedexception from resourcemanageroptions
[ pytorch ] fix memory command to delete object that be already delete .
updated conditions in SegmentsInfoRequestHandler . java and refactored SolrInputDocument creation in CollectionsAPISolrJTest . java to improve code
update numPredictiveAppCols calculation to account for phone device to ensure correct number of app columns based on device type
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and refactored related code in ` DrillJoinRel
added a new file ` BlockBuildCraft . java ` that extends ` BlockContainer ` and implemented block removal logic in ` BlockBuildC
updated layout parameters in DeviceProfile . java for drag - and - drop functionality to improve layout responsiveness and ensure proper sizing of the
changed the method call from ` . run ( ) ` to ` . start ( ) ` in ` YahooSession . java ` to
added null check for the metastore client in HiveMetaStoreClient . java and reset the metaStoreClient variable in HiveMetaStoreClient
updated the method to return the display script for the DISPLAY locale and added a test for bug 7079486 to ensure that the getDisplayScript
updated references from ` BASE _ URL _ PROP ` and ` CORE _ NAME _ PROP ` to ` ZkStateReader . CORE
replaced ThreadLocalRandom with a custom Random instance in StoreDirectTest . java to simplify random number generation by using a single instance
added a condition to check if the launcher is ready before attempting to backup backup data to ensure that backup operations are only performed when the launcher is
updated exception messages in Cell . java to include additional context to improve clarity of error messages for better debugging
added unit test base on user forum issue
rename ` getBodySpace ` to ` setBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability to enhance maintainability and facilitate future updates
update filemessagelastest to use temporaryfolder for test
added multiple logger settings for various classes in Grasscutter . java to improve logging detail for better debugging and troubleshooting
changed the visibility of the ` highlightCnstScrRngQuery ` variable and its getter / setter methods to static in ` SpanSc
updated condition to check if the workspace is not in the NORMAL state and added a method to retrieve the current workspace state to ensure proper handling of
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the assertion framework
added a cacheable check before notifying the new template in SnippetTemplate . java to ensure that notifications are only triggered when caching is enabled for
added SCOPE _ SOLR _ CORE constant and refactored variable handling in DataImporter and ContextImpl classes to improve scope management and enhance
added a primary key column to the measurement table in DatabaseMetaDataTest . java to ensure that the measurement table is created with the correct primary key
[ pantheon ] change permission - config - path to permission - config - file ( # 1193 )
refactor session handling logic in HttpSessionContextIntegrationFilter . java for improved clarity and consistency to enhance code readability and maintainability while
added a new file TestIfWithDeadRegion . java that contains a method for retrieving a string with a dead region to demonstrate
correct spelling of ' uds ' to ' usds '
replaced ` testConcurrentAccess ( ) ` with ` testConcurrentAccess ( ) ` in ` SnowflakeIdGeneratorTest . java ` to
added a static UI setting to control the visibility of the toast bar based on user preferences to enhance user experience by allowing more intuitive toast
refactor the drop method in WindowsSecurity to use a lambda expression instead of an anonymous class to improve code readability and ensure local resources are
refactor parameter handling in ` SamlRedirectLogoutHandler ` to ` setParameterIfAbsent ` and introduce ` putIfAbsent ` for existing values to improve
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to include localized messages to improve user experience by providing clearer error
tika - 4892 -- add mime detection for ooxml and ooxml - officedocument . spreadsheetml . sheet ,
added logging statements and modified feature path handling in multiple classes to improve traceability and clarity of feature loading process
camel - 16462 : camel - eip - documentation - enricher - fix xml output on window
do n ' t wait for endpoint to remove from version info when it ' s remove .
added debug logging statements and refactored audio device handling logic in DeviceConfiguration . java and PortAudioAuto . java to improve debugging capabilities and
added WebSocketConfig class and updated WebSocketPluginConfiguration to configure maximum frame payload size to enhance WebSocket functionality by allowing configurable maximum frame payload size
improve cachevalidationlistener to use testlisteneradapter instead of testlisteneradapter
added a check for empty content length before adding it to the document to ensure that the content length is only added if it is not empty
fix deadlock in defaultsolvingjob . shutdown ( )
refactor createTimeseries method to handle PathAlreadyExistException to improve error handling when creating non - existent time series
added a check method to the Authz class to provide a way to check authentication results
changed access modifier of several methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
bug 10399 : listpublicipaddresses api : do n ' t check the ip _ range for reserve ip address
updated HttpParser to initialize _ valueString to an empty string instead of checking for RFC2616 and modified test names accordingly to improve clarity and
replaced the ` completeInitialization ` method with a new ` threadCompleteInitialization ` method in ` J9VMInternals . java ` to
added methods to get and set external storage directories in the ShadowEnvironment class and created corresponding tests in EnvironmentTest to enhance functionality for managing external storage
[ drools - 7 ] add test case to demonstrate mvel type coercion
updated import statements and improved formatting in LoggingConfig . java and DbgPacker . java to enhance code readability and maintain consistency in
added exception message to the log message in ActionNode . java to provide more context about the exception encountered during the construction process
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 -
refactor visibility logic for shared file icon in FileListListAdapter to improve readability and maintainability of the code
deprecated the HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java to
refactor configuration handling in ExecuteStatementOperation and Operation classes to improve code clarity and maintainability by centralizing session and query ID management
refactor BTCMarketsStreamingAdapters and BTCMarketsStreamingService to use Java ' s Arrays utility instead of Google Commons Lists
fix ogr test to use gettypename ( ) instead of getname ( )
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to simplify error handling by returning a null value
renamed Wallet class to improve clarity to enhance code readability and maintainability
camel - 16462 : camel - netty - http should use http : / / and http : / / , not http : /
replaced ` System . out . println ` with ` log . info ` for logging messages in ` TestNonBlockingAPI . java ` to
added a check to return false if the index of the connection list exceeds the size of the connection list to prevent potential index out of bounds errors
[ java ] add rule to check if a method have the same name as the enclosing class .
added a new ` ExtendedPlatformComponent ` class and modified ` ManagementFactory ` to utilize it to manage platform - managed objects to enhance the
replace double quotes in SQL statements with single quotes to ensure proper SQL syntax for query execution
updated parse statements to include the " org / knowm / xchange / bleutrade / dto / " prefix for various Bleu
refactor text escaping logic in TextEscapeUtils . java to improve code readability and maintainability
added a filter parameter to the FunctionQuery return in AbstractSpatialFieldType . java and updated its usage in FilteredQuery . java to improve query
removed progress display logic for auto - email sending in GpsLoggingService . java to streamline user feedback during the email sending process
replaced ArrayList with HashSet for inlinks in Inlinks . java and modified iteration methods in LinkDb . java and LinkDbReader . java
[ tradfri ] remove out of date scan result when stop ( # 1391 )
updated the ` testFilterForPartition ` method to accept a boolean parameter for server - side filtering to enhance flexibility in testing partition retrieval based
added " Abandoned " status to multiple workflow statuses in TicketModel . java and updated TicketBasePage . java and TicketsPage . java
replaced the default value of ` columnAliasPrefix ` with a default value across multiple platform classes to simplify the code by eliminating unnecessary
updated LlapRowRecordReader and related classes to use BytesWritable instead of Text for data handling to improve data handling efficiency and compatibility with the
show warning when run on a 32 - bit jvm on a 64 - bit system .
refactor conditional logic in PdfCopy . java for handling PdfName . PARENT and PdfName . B to improve readability and maintainability of the code
added a new option " DAEMON " to the OptionEnum and implemented daemon mode handling in TerminalClient to enable the application to start
added a new file ` FlushIndexTask . java ` that implements ` PerfTask ` to flush the index buffer to ensure that the index
patch by jbellis ; review by brandonwilliams for cassandra - 1188
added SEASONS output condition to the expected output check in MediaLibraryFolder . java to ensure proper handling of SEASONS as
added a new file ` LocalSocketAddress . java ` to test IPv6 connectivity to ensure proper binding of a DatagramSocket to the IPv6
updated grid size points in GridSizeMigrationTask . java to correct the positioning of grid size steps
replaced calls to ` getName ( ) ` with direct access to ` name ` in ` SerializerPojo . java ` to streamline code
added a read - only context handling mechanism in the Context class to ensure operations are only performed in read - only contexts to prevent illegal state exceptions
refactor LookAndFeelCommand class for improved readability to enhance maintainability and facilitate future feature additions
update logic in BlockBoxing . java to use lastRunStart instead of lastRunEnd and modify offset check in childOffsets to ensure correct
added support for EOFException in GracefulStopTest to ensure proper exception handling for closed channel exceptions
refactor locking mechanism in NetJavaImpl to use synchronized methods instead of manual locking to improve code readability and maintainability while ensuring thread safety
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
updated account asset optimization configuration in DynamicPropertiesStore . java to ensure proper handling of account asset optimization settings
added a new constant ` J9 _ GC _ POLICY _ NOGC ` and initialized it to zero to enable garbage collection policy for garbage
added validation for transaction procedures in TransactionCapsule . java to ensure proper handling of invalid protocol buffer exceptions during processing
[ java ] remove strictexception rule that be no longer need .
updated resource path in HelpContent . java and improved error logging in HelpContent . java to enhance user experience by providing a fallback fallback mechanism
added a new file ` ProcessorInfo . java ` for CPU processor management to provide a mechanism to determine and mask the number of available processors on
added support for - html option to generate html output
fix nullpointerexception in logbackloggingsystem ( # 5379 )
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve cluster ID handling and encapsulate cluster data updates to enhance code clarity and
removed the conditional on the " spring . sleuth . propagation . tag . whitelisted - keys " property in SleuthTagPropagationAuto
refactor dependency type handling in RustCompileUtils to use a switch statement for better readability to improve code maintainability and clarity by
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String , String > queryParams ` parameter and added error handling to
hbase - 26465 hstore . getfirstkey ( ) do n ' t seek to the first key in the file ( #
hhh - 14663 - add miss @ deprecated annotation for generationtiming . always .
test : add test for layer norm with nan
refactor showShareFile method calls to use getFileOperationsHelper ( ) instead of direct calls to improve code maintainability and reduce direct dependencies on
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to verify the functionality of the ` LiquibaseUpdate
convert the proxyType value from a string to uppercase to ensure consistency in proxy type handling
add a mod _ minecraftforge class that load dungeon loot attempts to make things initialize
added caching logic for table columns in JdbcDatabaseSnapshot . java to improve efficiency in fetching columns based on the specified table name pattern
added a new container with a specific label to the CSSBorderTest to enhance the UI by providing a visual representation of a label
added a new ` RetryableStatusCodeException ` class and modified ` RetryAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` to use it to
changed the parent layout parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout to align layout behavior with the current layout requirements
updated the calculation of the parent task name to use the current time instead of the current time to ensure the task name accurately reflects the
added error handling for invalid Add Service request parsing in ServiceResourceProvider . java to improve robustness by providing a clearer error message when parsing
refactor the return logic in IndexDatabase . java for better clarity to enhance readability and maintainability of the code
[ giac ] fix for round ( x ) in ca
rename AnonCipherWithWantClientAuth . java file to improve clarity and maintain consistency in naming conventions
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these methods are outdated and should not be used in new code
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
use assertTrueAllTheTime ( ) instead of a fixed sleep in evictiontest . testcount ( )
refactor Md5PasswordEncoder to use a single variable for the salted password instead of a private method to improve code readability and
replaced direct reference to ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to stream
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
patch by jbellis ; use long . max _ value instead of long . min _ value
add a preferred size of 200x60 to the security panel so that it would well reflect our new call architecture that also include conferencing
added null and empty checks for replies in multiple classes to ensure that replies are only compressed when they are not empty to improve robustness by prevent
added ` toString ` and ` hashCode ` methods to ` HitbtcBalance ` class and removed ` ExpectedException ` from ` Hit
fix ( sql ) : fix order by statement with in clause
updated return statement in RetriesExhaustedWithDetailsException . java to use addrs . toString ( ) instead of a hardcoded string to
do n ' t open open cookie when edit a gcode file
updated HTTP client imports and replaced the default connection manager with the latest version from client 5 to client 5 to ensure compatibility with the latest features and
update energy calculation in PipePowerWood . java for better energy management to ensure accurate energy consumption based on stored energy
added a check to delete the temporary output file if it exists to ensure that the temporary output file is deleted if it exists to prevent data loss
changed the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added new test cases for trade and ticker
[ java ] fix replaysubject . peek ( ) and replayprocessor . peekwithtime ( ) to return null if the value be expire .
updated the expected Citation string in CitationStyleGeneratorTest . java to ensure consistency in the expected Citation format
added SQL insert statements and modified the way video HDR format is set in MediaTableFiles . java to improve code readability and maintainability
add feature flag to hide definition for exam in exam
fix npe in sipcommtextfield when there ' s no component
added caching mechanism for scan when startrow is null and scanRoot is not null to improve performance by reducing unnecessary data retrieval when scanning
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to provide a debug option for enabling transient task
[ hotfix ] [ doc ] fix typo in accessexecution and archiveexecutionvertex
added density setting condition to IOSGraphics . java to ensure density is set correctly when scaling is 3 or higher
renamed the ` optional ` field and related methods to ` vararg ` in the ` Parameter ` class to clarify the purpose of
hbase - 2745 add exception to log when regionstatestore fail to start
refactor assertTrueEventually to use a lambda expression for clarity to improve readability and reduce boilerplate code
updated logging messages and refactored class names in AsyncContextTest to improve clarity and structure to enhance code readability and maintainability while
added a boolean parameter ` showArrow ` to the ` title ` and ` subtitle ` parameters in the ` SearchUiManager ` class to allow
added lock mode handling for MV store in Database . java and removed a test for lock mode in TestRowLocks . java to ensure proper
skip big endian test on linux / amd64
updated input handling in Scalars . java for Integer , StringValue , and IntValue types to improve type safety and ensure proper conversion of input values
updated error handling for primary key specifications in CreateTableStatement . java to provide clearer error messages for missing or multiple primary keys
added conditional checks to set drawable resources for UI components based on the LMP version to ensure compatibility with devices running LMP and improve UI consistency
improve error message when no isolate to query for flutter view
added new header writer methods for content type options , XSS protection , cache control , and HTTP strict transport security to streamline header writing process
refactor methods in ObjectEnumerableAssert for improved readability to enhance maintainability and facilitate easier debugging
simonstewart : rename smoketest to distributedcdptest
added type attribute to @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the type of the aggregate root in the test
added support for prebuilt libraries in Python binary classes and updated related tests to ensure proper handling of prebuilt libraries in the build process
added client authentication handling in ` NetServerOptionsConverter ` and refactored ` HttpServerOptions ` to use ` ClientAuth ` instead of a
updated directory paths in HiveConf and MetastoreConf to use system - specific paths instead of hardcoded paths to ensure compatibility with the system
refactor task view management logic in RecentsView . java to improve clarity and maintainability to enhance code readability and maintainability
added a timeout of 60 seconds to the test annotations in AmqpTransformerTest . java to improve test reliability by preventing indefinite
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
rename ` ` controller ' ' variable to ` ` flowcontroller ' ' in multiple classes to improve clarity and consistency in naming conventions
update the exchange sum number assignment in the OperatorTreeGenerator and add a new test for the full outer time join node in PipelineBuilderTest to
added usage of ClassLoaderHandler in module - info . java to enhance class loading capabilities in the application
fix problem where we do n ' t set the planning problem on the event thread .
added JsonIgnore annotation to ApplicationSettings . java to exclude certain fields from JSON serialization
changed the condition from checking if throwable is null to checking if throwable is not null to ensure proper handling of cases where throwable is not null
refactor query information retrieval in QueryTimeManager to improve code readability and maintainability
fix the auto workbench not work when there be no item in the crafting .
fix gl200 text decoder ( fix # 1351 )
rename timeColumnName and timeFieldSpec to incomingTimeColumnName and incomingTimeFieldSpec in AvroRecordToPinotRowGenerator . java to improve
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
add initializable support to containerfactory . createcontext ( ) .
use longtasktimer . sample . stop ( ) instead of timer . start ( ) .
changed the data type of SYNC _ DELTA _ RATE from float to double and modified time calculations to improve precision in fetching time
add warn message for deprecation of fragment expression in thymeleaf
changed the type of ` _ attributes ` from ` HashMap ` to ` ConcurrentHashMap ` to ensure thread safety when deserializing attributes
http : / / issues . apache . org / jira / browse / amq - 4892 - fix amq - 489
added constants for main and secondary color light and dark colors in ColorExtractionAlgorithm . java and modified return logic in extractInto method to enhance
add data folder to source folder list in sketchbuilder
updated the ` appendContent ` method to include an ` includeTitle ` parameter and modified related logic in ` NotesHelper ` to handle title inclusion
removed unnecessary instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify session management by eliminating unnecessary object creation
added logging for reconnection completion and failure in NettyStreamingService to improve visibility into connection reconnection process and error handling
replaced Factory with Proxy in multiple test files to utilize the Javassist proxy framework instead of OGNL to ensure compatibility with
replaced ConcurrentLinkedQueue with ConcurrentHashSet for thread management to improve performance by using a more suitable collection implementation
replaced manual string concatenation with String . join for better readability in SocketExceptions . java and updated exception message validation in ExceptionText . java
added a check to determine if the view path is under the repository directory to ensure that the view path does not start with the repository directory to
remove ` ` tab - header - area ' ' and ` ` tab - header - area ' ' on drag and drop
8274181 : jdk / jfr / jvmti / jvmti / test / jvmti
added error logging for update log state checks in PeerSync . java to ensure that updates are only processed in both ACTIVE and REPLAYING
deleted the ConnectionHook . java file to remove unused code that is no longer needed in the project
removed the ` waitForReplicasInSync ` variable and its usage across multiple test classes to simplify the code and improve readability by eliminating
camel - 16462 : camel - swagger - java - api - java - schema - java - java - api - java - java -
updated ApexLanguageModule to use Version . CURRENT . getExternal ( ) instead of a hardcoded value " 45 " to ensure compatibility with the
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
replaced direct instantiation of AggregateEngine with a singleton pattern using IoTDBThreadPoolFactory to improve thread safety and maintainability of the code
added a ByteBufferPool parameter to the WebSocketAsyncConnection constructor and updated its usage in the WebSocketServerFactory to improve memory management by utilizing the
added scrolling functionality in UploadActivity to adjust the position of the thumbnail based on the index to improve user experience by ensuring proper positioning of thumbnails
fix ( sql ) : fix min ( x ) sample by timestamp override by other column alias
refactored animation handling in LauncherAnimUtils and added animation dispatching in LauncherStateTransitionAnimation to improve animation responsiveness and
added a check to disable the default user agent in the HttpClient builder to ensure that the default user agent is not used when the configuration is disabled
added pubsub hubbub support to FeedRefreshUpdater and ApplicationSettings classes to enable conditional handling of pubsub updates based on user settings
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method for better error handling
updated ` isAnonymousOrLocalClass ` method to include ` ACC _ SYNTHETIC ` and added a check for synthetic classes to
add dspacewebapp that do n ' t work with rest
added null check for leftTableAlias in CalcitePlanner . java and a method to getTableAliasContainingColumn in RowResolver . java to ensure
[ hotfix ] [ runtime ] fix typo in triggerkey . withidentity ( )
updated logging statements in Wallet . java for better clarity and consistency to enhance log readability and provide more informative information during transaction broadcasts
improve ` testputwithttl ` ; ttl should be big than 5sec ( = sync backup wait timeout
updated the initialization of the ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` variables in ` HiveClientConfig ` to ensure
added a new ` TlsClientCertPolicy ` enum and updated ` GitBlitServer ` to use it for handling client certificate policies to
added a debug log statement to indicate when a new CHALLENGE message has been saved to improve visibility and debugging of the message being sent
added HTTP headers and sub - protocols handling to the ProxyWebSocketHandler to allow customization of WebSocket protocols based on request headers
added debug logging for the fetch request in HiveQueryResultSet to improve traceability and debugging of query results
updated string formatting in HolidayEventFormatter . java for consistency to improve readability and maintainability of the code
refactor ` FinalizePrivateFieldsTest ` and ` FinalizePrivateFields ` to introduce ` InnerStaticClass ` and ` isInnerClass `
refactor UnexpectedJobExecutionException class for improved clarity to enhance maintainability and readability of the code
deleted the module - info . java file and modified the buttonShouldBeOpaque initialization in AquaLookAndFeel . java to
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer classes to use maxCost instead of max
added GeoDegeneratePath class to the class registry to ensure proper mapping of the GeoDegeneratePath in the application
removed the ` preFill ` parameter from the ` this ` constructor across multiple pool classes to simplify the pool initialization process by eliminating unnecessary
updated taskbar state management in TaskbarLauncherStateController . java and modified flags in TaskbarStashController . java to improve taskbar
added null check before comparing the default style in CascadeDeleteVisitor . java to avoid potential NullPointerException when the default style is not set
refactor GuiUtil methods for setting maximum and preferred sizes , and update MarqueeLabel initialization to improve code readability and maintain
refactor icon retrieval logic in FileTreeViewHolder . java to streamline icon retrieval for different file types to improve code readability and maintain
replaced ` isEqualTo ` assertions with ` contains ` assertions in ` ParallelUniverseTest . java ` to improve test readability and ensure
refactor XMLReporter to synchronize access to results to ensure thread safety when accessing shared map
add testnativeworker for native probability function
added a shutdown thread deregistering for the client container to ensure proper resource management and prevent potential memory leaks
hhh - 16462 : add droptemporarytableafteruse ( ) method to sybase ase15dialect to avoid drop temporary table
simonstewart : add htmlunit to the list of ignored htmlunit test
refactor multiple Java files related to Solr functionality to improve code organization and maintainability
refactor LinksIndexingFilter class for improved readability to enhance maintainability and facilitate future updates
updated string concatenation for reserved memory allocation in VirtualAllocCommitUncommitRecommit . java to improve clarity of memory allocation messages for testing purposes
skip ad group when there be no ad group
refactor equality check in MultimapSubject to use a boolean variable for clarity to improve readability and maintainability of the equality check logic
updated wave frequency text from deg _ text to unit _ hz in WaveGeneratorActivity . java to improve accuracy of frequency representation in the wave
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the use of ` putAll ` with a constructor that initializes the ` TreeMap ` with ` includedLabelSets ` to simplify the code and
added a new constant NORMAL _ 4F and refactored vertex format handling in VertexLighterFlat . java to improve code clarity and
added ` span . tag ( " grpc . message _ sent . visible " ) ` and ` span . tag ( " grpc . message _
updated the handling of ` TimeZone ` in ` ScheduledTrigger ` to use ` TimeZone . getTimeZone ( timeZoneStr ) ` instead of ` ZoneId
added ` AsyncBucket ` and ` InMemoryExtension ` classes , modified ` Bucket ` , ` ConfigurationBuilder ` , and ` Extension ` classes
updated the handling of the classes directory in the resexhausted003 . java file to improve clarity and correctness in determining the test
updated formatting and added exception handling in AbstractConnector . java to improve code readability and handle potential interruptions gracefully
updated OngoingStubbing class implementation to improve performance and reliability of the stubbing process
refactor web server reuse logic to use Optional < WebServer > for improved flexibility to enhance server management by allowing the use of an
updated variable name from productConstructor to constructor in HttpClientUtil . java and added a static import in SolrTestCaseJ4 . java to improve
added a check to clear the thread allowlist if it was utilised but not cleared to ensure that the thread allowlist is properly cleared before
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the processor uses the correct
[ drools - 5270 ] do n ' t analyze ddta table with hit policy ` ` collect ' ' ( # 527
test : add a test for sliding window combine
added a conditional check for ` allAppsDirty ` before binding apps in ` LauncherModel . java ` to ensure apps are only bound when
camel - 16462 : camel - core - jmx : fix test that fail on jmx
updated import statements and formatting in the Solution . java file to improve code readability and maintain consistency
refactor AquaMenuBarUI to use embedded property checks instead of deprecated system property retrieval to improve compatibility and maintainability of the code
update glowentity . setrawlocation ( location , boolean fall ) to set fall distance
refactor query handling in SimpleJpaRepository to use a CriteriaQuery for better clarity and efficiency to improve code readability and maintainability
updated BlockUtil . java to include timestamp , parent hash , nonce , and number from genesisBlockArg to enhance block structure by including genesis block
use safepoint insertion phase instead of loop safepoint insertion phase .
hbase - 22928 fix npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs when there be no child
changed access modifiers of several methods in ArtifactResolver from package - private to public to allow access to these methods from outside the package
added thread stop and disposed methods in ClientConnectionHandler , BulletPhysics , and ChunkProcessingPipeline , and improved error handling
added a validation check to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions during indexing
added state management for the login activity in the LoginActivity to manage the logging state during configuration changes to improve user experience by ensuring the login process
added null checks for source and value extraction in Pump . java and implemented a new test for UUID sorting in PumpTest . java to
refactor loadbalancer creation in HttpShardHandlerFactory and change access modifiers of several methods in LBHttpSolrServer and HttpShardHandlerFactory
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added tests for DefaultAuthenticationServiceSelectionStrategy
added Jetty server handler setup in TestJNDI . java to enable handling of HTTP requests in the JNDI environment
updated method calls and assertions in SortedDynPartitionOptimizer . java for clarity and correctness to enhance code readability and ensure proper validation of
change the return value of the method from checking if the loop is an NioEventLoop to always returning true to ensure the method always returns
updated the calculation of ` newNumNulls ` in ` StatsUtils . java ` to ensure ` cs . getNumNulls ( ) ` does not
camel - 18131 : camel - jbang - export should load kamelet from yaml file when camel - kamelet be in use
replaced OkHttpOAuthConsumer with AuthState for managing OpenStreetMap access to improve authorization handling and error management during OSM uploads
clean up debug output and add basicptxtest . test ( string ) .
added a clientAuth property and corresponding getter / setter methods in IoTDBRestServiceConfig . java to allow configuration of whether to enable client authentication
replaced the variable ` mocksToBeInjected ` with a new instance of ` mockCandidates ` in ` PropertyAndSetterInjection . java
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 558 : add
changed getCursorAdapter ( false ) to getCursorAdapter ( true ) in HomeFragment . java and added refresh preference in TweetPager .
updated the intermediary header height ratio from 1f to 75f in ProfilePager . java to improve the responsiveness of the scrolling
updated import statements and introduced a new class ` RecompilationEvent ` for handling recompilation events to improve code organization and clarity in
added HOST _ SYS _ PREPPED constant and its usage in multiple classes to enable configuration of host system preparation status in the application
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and introduced a new ` UnknownChangeLogFormatLoggingTest
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5651 - remove leading
added properties for entity and score in the StaticPipeline class to enable dynamic configuration of entity and score in the pipeline
refactor file path handling in Frame . java and add configuration for Whoops in WhoopsModule . java to improve code clarity
[ geos - 6561 ] catalogrepository . getstore ( ) should return null if the store do not exist in the workspace
refactor Assert class for improved readability to enhance maintainability and ease of understanding for future developers
rename ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and ` MultiLineJaggedTextTests ` , and add
camel - 16462 : camel - activemq - fix test which fail on slow ci server
replaced instances of ` IMeasurementSchema ` with ` MeasurementSchema ` in multiple files to streamline code by directly using the ` schemas `
updated memory allocation calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure accurate memory usage reporting during
updated the logging library path from slf4j - log4j12 - . * to slf4j - reload4j -
improve test stability by wait for thing status to be set
changed package names from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` and added an
[ drools - 1276 ] ignore kiesolverfactorytest until drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ service ` , ` _ topicName ` , and ` _ gitHubAPI
refactor AbstractExpressionPart class for improved readability to enhance maintainability and facilitate future updates
[ hotfix ] [ doc ] fix typo in taskslot
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` listener in WebSocket connection handling to simplify error handling by using
added error handling when releasing a lock in MoveTask . java to improve robustness by logging exceptions when unlocking the lock
replaced properties loading with a resource bundle retrieval for GEM _ PATH and RUBY _ VERSION to improve flexibility and maintainability by
transaction : use byteutil . empty _ byte _ array instead of zero _ address
reformatted code for better readability in ClassGraphClassLoader . java to improve code clarity and maintainability
[ hotfix ] fix flaky test in jobmanagertest
chore : update google - cloud - datastream to v3.15 . 3 ( # 136 )
added a Bundle with extras to FileDisplayActivity to enable customization of the activity ' s display settings
changed the loop condition from break to continue in ParticleEmitter . java to ensure proper handling of null particle cases
updated expect values in AmbariManagementControllerImplTest to reflect the correct number of clusters in the cluster request to ensure tests reflect the correct
removed nullable constraint from the ' SERVICE ' column in TransientSessionTicketImpl . java and added error handling in JpaTicketRegistry . java to
updated Bug4823811 . java file to improve code clarity and maintainability
replaced direct addition of ` patternToDelete ` with a call to ` pathRelativizer ` in ` RmStep . java `
[ deconz ] schedule full state request when initial request
added attribute property and updated related methods in ShibbolethCompatiblePersistentIdGenerator . java to support customizable persistent ID generation based on attribute
removed duplicate @ Inject annotations in RequestValidationService . java to improve code clarity and maintainability
refactor keyboard message handling in UiThreadHelper . java to use a Bundle for better clarity to improve code readability and maintainability by
removed redundant lines in FileNodeProcessor . java and added new imports in MTreeTest . java to improve code readability and ensure proper cleanup
rename NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add test case for slurpfile ( ) and slurpfilenoexceptions ( ) .
changed access modifier of ` wrap ` method from protected to private and added @ FunctionalInterface annotation to various classes to enforce encapsulation and improve
refactor span retrieval logic in TraceWebFluxTests to use a dedicated method for name matching to improve code readability and maintainability by
added support for DateWritable type conversion in ETypeConverter and updated related classes to support date types in Parquet to enhance data handling capabilities for
replaced hardcoded comma separator with a constant from Patterns . COMMA _ SEPARATOR to improve code readability and maintainability
ggb - 1642 fix for invalid input in dialog
refactor column comparison logic in SemanticAnalyzer to improve clarity and maintainability to enhance code readability and maintainability by reducing redundancy
refactor condition checks in WandScorer . java for better clarity and correctness to enhance code readability and maintainability while ensuring
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future updates
replaced wildcard import statements with specific Java AWT classes in PaintSetEnabledDeadlock . java to improve code clarity and maintainability by
initialized ` curPixVal ` to a default value of 0xFF000000 and added a new test class ` WhiteTextColorTest ` to ensure correct
refactor biomedictionary to use a collection for supertypes instead of a list of subtypes
corrected the spelling of " withinTolerance " to " exceedsTolerance " in the BoundedLocalCache class to improve code readability and
added stability annotations for LOCAL and PLATFORM _ POSTSUBMIT in TaplTestsLauncher3 . java to indicate that tests are
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure logFileSuffix is not only non - null but also not empty to improve robustness by preventing potential errors when the
refactor PythonBuckConfig class for improved readability to enhance maintainability and facilitate future updates
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest . java and modified return statements in ShadowApplicationPackageManager .
fix meiligao decoder ( fix # 1351 )
added null check for tile before calculating battery capacity to prevent potential NullPointerException when tile is null
refactor cache management to use an asynchronous task for trimming cache to improve responsiveness and user feedback during cache operations
re - organize import to use guava package instead of api
updated access control methods to throw NotAuthorizedException for " Basic " and " ZkBasicAuthAccessControlFactory " instead of returning false to improve error handling
added a new abstract method ` schedulePeriodically ` and updated method signatures to include ` @ SuppressWarnings ( " unused " ) ` annotations to enhance
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java `
added conditional logic to choose a random stream when multiple XML files match the specified path to improve robustness by ensuring a single stream is used when
refactor methods in SessionHiveMetaStoreClient and HiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to simplify table creation
added a volatile boolean flag ` aborted ` and synchronized the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker `
updated parsing logic in multiple parser classes to include a minimum indent value of 4 to ensure proper handling of indentation in block parsing
added support for wifi autoplay when wifi be enable .
simplified the control frame validation logic in FrameGenerator . java to improve code readability and maintainability
added visibility setting for the collapse handle in the WidgetsBottomSheet to ensure the collapse handle is displayed in the UI
added new files ` Issue475 . java ` and ` XSS . java ` for HTML and JavaScript escape functionality to enable HTML and JavaScript
added a check to return early if no units are to scroll to improve performance by avoiding unnecessary processing when no units are available
updated conditional check from ` size ( ) > 1 ` to ` size ( ) ! = 1 ` in ` Manager . java ` to ensure
added ` add ` and ` put ` methods to ` JsonArray ` , ` JsonObject ` , and ` JsonArrayTest ` , along with corresponding unit
added hashCode ( ) method to IPPPrintService and created TestRaceCond class with a trial method to ensure consistent hash code comparison for
replaced direct calls to ` getIVersion ( ) ` and ` getZVersion ( ) ` with direct calls to ` getVersion ( ) ` in
added a condition to check if the transaction ' s platform fee is greater than zero before proceeding to ensure that connection is only enabled when the
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
re - enable encrypt buffer for playback in mediapodecoderenderer
removed the ` public ` access modifier from several class constructors in ` AsynchronousAntn ` , ` BulkheadAntn ` , ` Command
added Retrofit import to Part and PartMap classes to utilize Retrofit functionality for improved rendering performance
updated JSON handling logic in JsonBuildHelper . java and added new parameters in ParamsBuildHelper . java to improve clarity and functionality for handling
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of types in AbstractFloatingView . java to support additional functionality related to task
fix : update gapic - generator - java with mock service generation fix ( # 449 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation behavior based on recents
removed the second parameter from the createRenderScript method call in AllAppsView . java to simplify the render script creation process by eliminating
refactor PMD class for improved readability to enhance maintainability and facilitate future updates
refactor system bundle checks into a separate method in PluginManagerActivator to improve code readability and maintainability by centralizing system bundle checks
updated import statements and improved formatting in IntegrationTestSparkBulkLoad . java to enhance code readability and maintain consistency in formatting
fix flaky test : use low _ false _ positive _ rate instead of 0.01
refactor rocket configuration handling to use a new Configuration instance instead of a static rocketConfiguration to improve clarity and maintainability of the
server : do n ' t return null for host _ id when host _ id be null
added null check before converting values to Data in DefaultRecordStore to avoid potential NullPointerException when values are null
cloudstack - 7013 : do n ' t return null for kvm host discovery error
updated ` NO _ NAME ` and ` NO _ VALUE ` string concatenation to include ` NAME _ ATTRIBUTE ` and ` VALUE _ ATTRIBUTE ` to
changed constructor parameters from ` InvocationContainerImpl ` to ` Object ` in ` BaseStubbing ` , ` ConsecutiveStubbing ` , and
added a method to strip method parameters from method names and updated the getMethodLine method to use this new method to improve method clarity by removing
updated VERSION _ NAME and VERSION _ CODE in GreatVoyage - v4.2 . 1 - 62 to reflect the latest release
use set instead of list for allow command in outputfilter
update symbolizer to use constant instead of string
ggb - 1353 center popups after resize
updated error messages from " Function : " to " Function - " in ValidationSuite . java to improve clarity and consistency in error reporting
refactor StartingWindowListener implementation to utilize a dedicated listener to improve modularity and maintainability of the code
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve documentation clarity and maintainability of the MBeanServer class
updated exception handling in CheckPackageAccess . java to specify expected exceptions for PackageAccess and PackageDefinition to improve clarity and specificity of error
increased the timeout duration in the awaitTermination method from 30 seconds to 90 seconds and added an assertion to ensure the test does not terminate
changed the loggingEnabled variable type from boolean to Boolean and added a null check before setting it to ensure logging is only enabled when it ' s
added @ JsonIgnore ( true ) annotations to Schema . java to exclude certain fields from JSON serialization
increased test timeout from 5000ms to 10000ms to allow more time for tests to complete successfully
refactor train methods in SimpleNaiveBayesClassifier for improved clarity and consistency to enhance code readability and maintainability while
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` to enhance clarity of module
refactor Prototype class to improve code structure to enhance maintainability and readability of the code
added a check to initialize tableIsTransactional if it is null to ensure that the table is marked as transactional if it is not already set
[ java ] remove unused writefragment method and use onblock instead .
fix a bug in the cea decoder that cause the cue to be empty .
[ kairos ] make datastoremetricquery . getalias ( ) return null for all metric .
updated CurrencyPair instances in VaultOfSatoshiBaseService . java to replace hardcoded values with hardcoded values and added new currency pairs
hhh - 14514 close entitymanagerfactory and serviceregistry in unit test
updated KafkaSender import from ` kafka11 ` to ` kafka ` in ` ZipkinKafkaSenderConfiguration ` and ` ZipkinAutoConfiguration
added two new files , GwtBinaryIntegrationTest . java and A . java , and implemented GwtBinaryIntegrationTest . java and A
updated loading cause label visibility logic in BrowserContentPane and improved error handling in SQLConsole to enhance user experience by ensuring loading causes are only
removed unnecessary whitespace in EnhancedRandomImpl . java and updated test cases in EnhancedRandomImplTest . java to improve code readability and
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance XML security property management by integrating XML
added a new file ` InlineDefaultMethod . java ` with default methods for interfaces and classes to demonstrate the use of default methods
updated SQL query patterns from " LIKE " to " GLOB " in SqliteFieldPredicateView . java to enhance filtering capabilities for better data
dmnassemblerservice : change method visibility of getdmnprofiles from private to protected
fixed - rscript . load ( ) method throw npe if slave node do n ' t exist
updated print statements in EspressoLanguage . java and refactored static methods in StaticObject . java to improve code readability and ensure
updated debug log messages to include the size of targets in multiple files to improve log clarity by providing more detailed information about the number of targets
fix memory leak in fmloutboundhandler . sendproxy ( ) .
added HTTP _ JETTY _ SERVER _ HANDLERS constant and updated thread pool configuration in WebServer . java to allow dynamic configuration of
refactor shortcut management logic in LauncherModel . java for improved clarity and efficiency to enhance code readability and maintainability while ensuring
remove unnecessary type check for value in DefaultHttpClientBinderRegistry . java to streamline code for better readability and maintainability
added navigation functionality for the home screen in DetailFragment to enhance user experience by allowing navigation to the home screen
added a check for ` hasAndroidMarket ( ) ` in the ` if ` condition to ensure that ` includesPlayServices ` is only
refactor TableBlockParser to improve cell parsing logic and add tests for whitespace and zero - length headers to enhance readability and ensure correct rendering
added support for a bridging header in the NewNativeTargetProjectMutator and updated related classes to utilize it to enhance flexibility in
refactor PotentiallyDeadCode . java to improve handling of unused and used Java methods to enhance code clarity and maintainability by using a
added diamond detection functionality in ` Attr . java ` and created new classes ` Foo ` , ` DiamondRedundantArgs1
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` onStartSendRequest ( ) ` in multiple
removed unused import and debug log statement in SolrCacheHolder . java to streamline code by eliminating unnecessary logging
added catch block for AuthenticationException in LdapCtxFactory . java to ensure proper handling of authentication exceptions during authentication
update float comparison logic in Test6796786 . java to use negative values instead of zero to improve accuracy of floating - point comparisons
added " logback . dev . xml " to the configuration file in JoobyMojo . java and Main . java to ensure
added a new file JaasEventCheck . java to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent to facilitate
refactor QuickstepTransitionManager to use a list of views to animate instead of individual views to improve code readability and maintainability by redu
updated string distance comparison in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure correct behavior
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve code
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
add agent . script . timeout property to allow modify storage pool command to wait for ready command to return
added JDBC _ SCHEMA parameter to the JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider . java to ensure the correct database schema
updated SQL update statements from " UPDATE AUP " to " UPDATE " across multiple files to ensure consistency in naming conventions and improve code read
refactor schemaTypeCache to use a synchronized map for thread safety to improve performance by reducing synchronization overhead
modify header handling logic in StaticServerHttpHeadersWriter to ensure headers are only added if they do not already exist to improve header management and prevent
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable tests that depend on files available to the CMU environment
added a directory creation for the storage directory in TestCollector . java to ensure that the storage directory exists for testing purposes
added a method to set chunked streaming mode in StarTreeJobUtils to improve performance by allowing larger data transfers
added basicsyntaxchecker , multipletypesyntaxchecker , singletypesyntaxchecker , and basictypesyntaxcheckertest
hbase - 26462 fix hbase - 26465 ( addendum )
added a test to verify that the bean populator does not cause stack overflow exceptions to ensure that the bean populator does not cause stack overflow
added IOException declaration to the getRemoteName method in AccountingTransceiver . java to ensure proper error handling when retrieving the remote name
added exception handling for IllegalArgumentException in UserAccountManagerImpl and introduced a createPlainClient method in ClientFactoryImpl to improve error handling and provide a
updated WebSocketConnection and ExplicitDemandTest classes to improve connection handling and test coverage
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser and updated related methods to enhance security interceptor behavior based on aspectJ mode
updated import statements and added hostname verification configuration in SSL socket handling to enhance security by allowing dynamic configuration of endpoint identification based on system properties
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to allow dynamic
updated method calls from ` invoke ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService . java ` and modified
refactor joint management logic in World . java to improve code clarity and maintainability by eliminating redundancy
do n ' t search phone number if the filter string be null .
[ hotfix ] [ test ] add miss license header to sourcereadertestbase
refactor error handling in DocumentsStorageProvider to include try - finally block for better error management to improve code readability and ensure exceptions are
added new files for ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookTest ` to implement and verify the registration of
refactor buffer flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing
updated the ` setExoOptions ` method to include a ` allowTs ` parameter and modified its usage in the ` setExoOptions
remove user role from the identifier collection in DMRDecoderState . java to ensure proper handling of user identifiers during decoding
added an INVISIBLE color constant and modified the toString method in Color . java , and updated import statements in RailButtonShapes . java to
updated null handling logic in CountAggregationFunction and added a new test for count count with null handling option in NullHandlingIntegrationTest to ensure correct
set the ` deep ` property of ` InternalTransaction ` to ` - 1 ` to disable deep transactions for improved performance
escape the name in XML before appending it to prevent XML injection vulnerabilities
updated work directory initialization to use a configurable directory instead of hardcoded " work " to allow customization of the work directory for better flexibility
[ drools - 770 ] add deprecation flag to rulesetfactory .
fix amd64directcallop to use codebuffer . position instead of a dummy label .
[ hotfix ] [ table - common ] make min / max / all - time field static final
refactor BitDocIdSet class to improve code structure to enhance maintainability and readability of the code
refactor metrics JSON emission logic into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing duplication
reformatted code for better readability and consistency in DetailFragment . java and GalleryActivity . java to improve code clarity and maintainability by
fix tank not drain when the player be sneaking
updated CsharpLibrary . java to handle DotnetLibraryProviderInfo and source path resolution based on rule type to improve handling of dotnet
added iq . type . get and iq . type . get to the pep handler . jm - 139
added a null check for the runtime variable in IntrinsificationPhase . java to ensure that the code only executes when the runtime is not null
added a check for non - empty active data before refreshing active work in MetricTrackingWindmillServerStub and StreamingDataflowWorker
pdfbox - 4892 : add last object id and object offset to bfsearchcosobjectkeyoffset , a suggest by valeryb
added constructors to LwjglAppletApplication for better initialization and notification management to enhance the application ' s functionality by allowing notifications to be added
updated the string representation method in EnvironmentAndSystemPropertyClientProviderStrategy to handle null DockerClientConfig gracefully to improve robustness by avoiding null pointer
refactor password policy handling in LdapAuthenticationHandler and AccountStateHandler to improve code clarity and maintainability by centralizing password policy application logic
refactor Int2ObjectCache class implementation to improve performance and maintainability of the caching mechanism
added a new private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to use it to
refactor Readable class to improve readability to enhance code maintainability and readability
updated PDF document creation in JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT instead of a custom file
updated the share menu icon from share _ menu _ item to share _ menu _ share in CaptureActivity . java to improve clarity and consistency
updated ` JRE _ IS _ MINIMUM _ JAVA8 ` and ` JRE _ IS _ MINOR _ JAVA9 ` constants to
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 563630
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filtered classes in Enclosed . java to improve performance by using a more suitable data structure
added multiple @ Override annotations in several Java classes to ensure proper method overriding and improve code clarity
rearranged variable declarations in ChartProvider . java to improve code readability and maintainability
fix work directory for file import / export ( # 3640 )
modified the return statement in JavacParser . java and added a new class ExtraSemiTest . java to improve code clarity and
added support for querying users by their created time in the JpaQueryCreator and User classes to enhance the user repository functionality by allowing users to
updated Test15FloatJNIArgs . java file to improve test coverage for floating - point arguments
replaced hardcoded version strings with dynamic versioning patterns for improved readability and maintainability to streamline versioning and enhance maintainability
update substring logic in MockProcessContext and add a new test for fake encryption and decryption in TestMockProcessContext to ensure proper handling of encrypted
[ java ] ensure that aeronarchive do not call thread . sleep ( ) on the callback thread .
added a null check before merging the dependency in OpProcFactory . java to avoid potential NullPointerException when the dependency is not found
added timeout attribute to multiple @ Test annotations in SslBytesServerTest . java to improve test reliability by allowing more time for tests to complete
refactor Peer class to improve code readability to enhance maintainability and facilitate future updates
added methods to retrieve the real - time segment and changed the method name from ` toImmutable ( ) ` to ` toHistoricalIndexSegment
replace direct calls to ` viewCaptureDataSupplier . get ( ) ` with a null check for ` exportedData ` before writing to the output
refactor scrolling logic in RecyclerViewFastScroller . java to use a dedicated method for retrieving scroll thumb radius to improve code readability and
updated BuckWSServerPortUtils and BuckEventsConsumer to use restarting IntelliJ and added a method to check if the
added a conditional check to ensure the " preventSleep " checkbox is only added on Windows platforms to enhance user experience by preventing sleep functionality on
updated imports from javax to jakarta in HttpConfigurationAuthorityOverrideTest . java to align with the latest Jakarta EE
updated QuickstepAppTransitionManagerImpl and FloatingIconView to handle crop dimensions based on device profile orientation to improve layout responsiveness and
added full - screen exclusive mode functionality to the XWindow and related classes to enhance user experience by allowing toggling of full - screen mode
[ net . pms . util ] fix playeddurationstr ( ) and add unit test
added methods to add credentials for URIs in DagUtils . java and utilized them in TezTask . java to enhance security by ensuring
camel - 16462 : avoid use keyset iterator instead of entryset iterator
trim whitespace from the last element of the thread name in SessionState . java to ensure consistent thread naming by removing leading and trailing whitespace
updated the message in GpsMainActivity to clarify that a description can also be logged to a file to improve user understanding of
refactor Job class to improve code readability to enhance maintainability and facilitate future updates
added a new abstract static class ` Unused ` with methods for integer , boolean , string , and double fields in ` Main . java `
updated the key in componentToClusterInfoKeyMap from " hbase _ master _ host " to " hbase _ master _ hosts "
deleted the EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused interfaces to streamline the codebase
modified the ` performJoin ` method to return a list of records instead of a single record to enhance flexibility in handling multiple records for join
updated MAX _ DELEGATE _ LOCK _ PERIOD validation to allow a value of 10512000 instead of a fixed value of 0 to
server : fix npe when try to connect to a network that do n ' t exist .
removed initialization of services in CmcExchange and modified the applySpecification method to streamline service initialization and enhance exchange specification handling
updated IP address handling in GossipLocalNode . java and renamed constants in Constant . java to improve clarity and consistency in configuration management
add system property hazelcast . client . tpc . enabled to disable tpc by default
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple classes to ensure compatibility with the latest
refactor the modular inverse calculation in MutableBigInteger and add a new ModInvTime class for testing to improve clarity and functionality of mod
refactor key assignment logic in NamedObjectList . java to improve clarity and structure to enhance readability and maintainability of the code
updated cleanup methods to use ` cleanupEmptyTableDir ` instead of ` cleanupEmptyDir ` across multiple classes to improve clarity and consistency in
renamed AsyncCache and Cache classes to improve clarity and consistency in naming conventions
added import for RCFileInputFormat and registered it with Kryo to enable serialization support for RCFileInputFormat in the application
added methods ` typeOf ` and ` categoryOf ` to the ` TypeMapperComponent ` class for retrieving Java types and categories to enhance type mapping
added error handling for invalid host headers in Request . java and updated tests in RequestTest . java and SelectChannelTimeoutTest . java to improve
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ReflectionHelpers for retrieving time zones to improve compatibility with newer Android SDK
removed the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods from the ` StandardOp ` class to streamline the handling of outgoing
refactor ` SegmentCoreReaders ` and ` SegmentReader ` to use ` si . name ` instead of ` core . segment ` to improve
added a method to check for the existence of a main thread profile in the AggregateDao and its associated classes to enhance the functionality of the Aggregate
added validation to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi = True to improve error handling
updated constant names from " greeklower " , " irishlower " , " uaX29URLEmailEmail " , "
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
replace ` ` lucenesearchrequestprocessor ' ' with ` ` discoverysearchrequestprocessor ' ' since dspace 4.0
updated BasicDateTime . java to remove specific time zone entries from the list to simplify the code by eliminating unnecessary entries
updated the initialization of the SurfaceSyncGroup to include " TaskBarController " as a identifier to improve clarity by specifying the context of the
updated method calls to use ` getId ( ) ` instead of ` getObjectId ( ) ` in ` GridFsTemplate . java ` and added
added unit tests for retrieving total size and byteSoFar in ShadowDownloadManager to ensure accurate retrieval and retrieval of total size and total byte for download
refactor enter character handling in TextField . java to use a boolean variable for clarity to improve readability and maintainability of the code
added a check to return early if the target is the same as the current instance to prevent unnecessary processing when the target is the same as the
updated the ` afterSetStatements ` method in ` Lower . java ` and refactored its logic in ` BlockLexicalContext . java
added hashCode ( ) and hashCode ( ) methods to IntervalXYDelegate and XYSeriesCollection classes , and updated equality checks in XYSeriesCollection to
add cleanup method to clientqueuedisruptiontest to fix flaky test
updated method names and formatting in CloudWatchAppender . java and added caching attribute repository tests in CasPersonDirectoryConfiguration . java to improve code readability
replaced ` GsonBuilder . serializeSpecialDoubleValues ( ) ` with ` GsonBuilder . serializeSpecialFloatingPointValues ( ) ` in the
added multiple calls to waitToProduceOneBlock and waitProduceNextBlock in HttpTestZenToken and WalletTestZenToken007
added checks for non - empty subtags and language tags in Locale and LanguageTag classes to ensure that language tags are only processed when subtags
add kvm . ssh . to . agent configuration to control whether to ssh to agent .
removed public access modifier from constructors and methods in SchedulerWhen . java to enhance encapsulation and improve code readability
removed the import of PagerSlidingTabStrip from EmojiKeyboard . java to simplify dependencies by removing unnecessary dependencies
added a condition to check if the string contains a hyphen in the filter condition to ensure that the filter does not contain invalid characters
updated sort column label text from " natural order " to " Natural column order " in BrowserContentPane . java and refactored
updated array copy method from ` Arrays . copyOf ( in , 6 ) ` to ` Arrays . copyOf ( in , 6 ) ` to optimize
added HTML encoding to the remote address in HtmlSessionInformationsReport . java to enhance security by preventing XSS vulnerabilities
fix itemstatetriggerhandler to check for ` ` smarthome / items / ' '
removed unnecessary synchronization around date formatting in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization overhead
refactor file moving logic to use a separate thread pool for improved performance to enhance responsiveness and error handling during file operations
added a new ` trigger ` method to the ` WrapTimer ` class for triggering a timer with a specified period to enhance the functionality of the
added support for LOCAL _ DATE and LOCAL _ TIME type in TypeStringUtils to ensure proper handling of additional data types in the TypeUtils class
added a verbose option to the error logging mechanism in AbstractStatusReporter to provide more detailed error information for debugging purposes
added menu toggle functionality to the ClickStartHandler initialization in Header . java and ItemControls . java to ensure menu behavior is only triggered when the
server : do n ' t allow VPN connection to be connect between two accounts to ensure that VPN connections are only authorized between the same account
modified error handling in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to ensure that error handling is only triggered once
pdfbox : do n ' t try to create thumbnail for encrypted pdfs
fix ( curatorzookeeperclient ) : make sure to shutdown the executor service when the zk client be shut down
rename AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve clarity and consistency in naming conventions
updated URI handling in HostsList . java to use ' id ' instead of ' getSelectedItemId ( ) ' and refactored the deleteItem
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of the replaceOrderBulk method from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > to improve
renamed the method ` enterDefault ` to ` enterIdentNode ` in ` FindScopeDepths . java ` and added ` enterFunction
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to use it to retrieve long values from
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification behavior in a multi - threaded environment
added notification of offline roster when a user be offline .
updated MapOperator and PartitionDesc to use getOverlayedProperties ( ) instead of getProperty ( ) and added a method to retrieve overlayed properties
updated the loadHandle method call in FunctionObjectCreator . java for consistency to improve code readability and maintainability
added null check before initializing extTypeCustomDesers in MessagePackFactory and modified the copy method in MessagePackFactoryTest to include a new
remove system . setproperty ( ` ` mockserver . logLevel ' ' , ` ` warn ' ' ) .
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
updated scoreMap to include a termScoreMap and updated its usage in TestGrouping . java to improve clarity and functionality by associating score
updated conditional checks in U64 . java and added an equals method in U64 . java to improve clarity and functionality of the equality check
updated headline style settings in MainViewModel . java to improve text visibility and readability of headlines in the UI
updated notifyChange condition to include support for dark text in WallpaperColorInfo . java to ensure notifications are only triggered when dark text support
[ hotfix ] [ checkpoint ] fix non - forced enqueuing in checkpointrequestdecider
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MILLISECONDS constants to MAX _ POOL _ SIZE and CO
replace ` filter ` with ` anyMatch ` for matching providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to improve
added testRequirements . notWindows ( ) and TestRequirements . notArm ( ) methods to OpenCVImageFactoryTest . java to ensure compatibility
fix for http : / / issues . apache . org / activemq / browse / amq - 2379 - fix http :
[ py4j ] fix exception throw by python proxy . getreturnvalue ( string , gateway )
added a new annotation ` @ Issues ` to the ` Issue ` class with an ` value ( ) ` method to provide a way to
updated user properties from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest to
updated socket connection logic to use a dynamic address based on the ` socksProxyHost ` property to enhance flexibility in configuring the socket
[ hotfix ] fix checkstyle violation in slotstatus
removed unused import of ClassUtils from mmm ReflectionUtils . java and ppp ReflectionUtils . java to streamline dependencies and improve code clarity
replaced instances of HashSet with LinkedHashSet for exclude protocols , excludeCipherSuites , cipherSuites , and selected _ ciphers to maintain the insertion order of
added a static resource variable and conditional logic to retrieve the system resource based on its location to improve resource management by ensuring the system resource is only
added a constant for the size of the plaintext segment in the StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel classes
added a test for invalid circuit breaker fallback in ServerMvcIntegrationTests to ensure that the circuit breaker correctly throws an exception for invalid fallback
added SSL connection factory using AllowAllHostnameVerifier in AppPage . java to enhance security by allowing hostname verification during HTTP connections
updated the size limit in the PerformanceTest from 0x7FFFFFFF to 0x7FFFFFFF and removed the resetBytesReadCounter
added preferAES property and its getter / setter methods to ProtectionPolicy . java and removed it from StandardProtectionPolicy . java to streamline
camel - opentelemetry : use log instead of system . out for opentelemetry test
test : remove test that do n ' t work in ec2
rename method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to clarify the purpose of
added error handling for invalid path exceptions when creating a file in DiacriticTest . java to improve robustness by providing informative feedback
hhh - 16462 - fix test failure on oracle 11 when use a driver other than ojdbc6
updated file handling in TextureUnpacker to use absolute file paths and improved exception handling to enhance robustness and provide clearer error messages for
added locking mechanism to manage concurrent access to the cluster configuration to ensure thread safety during concurrent access to the cluster configuration
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the result set does not close the statement to ensure proper resource management and prevent potential resource leaks
refactor InputStreamBodyGenerator and ChunkingTest to improve input stream handling and enhance test coverage for different buffer scenarios
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure that pre - deleted databases are not removed from the
removed the " chunkedWriter " header from the HTTP / 2 upgrade pipeline to streamline the HTTP / 2 upgrade process by eliminating unnecessary
updated item deletion logic in EnhancedBrowseFragment and added a confirmation dialog in FullDetailsFragment to enhance user experience by allowing items to be deleted
refactor CSS handling by introducing a RuleBank interface and modifying RuleFinder to implement it to improve code organization and encapsulate rule management for better
do n ' t swallow exception in jcatlscryptocrypt . dofinal .
added new files TestMonomorphicObjectCall . java and Object . java , implementing MonomorphicObjectCall . java and Object . java
replaced the ` removeMetaDataSource ( session ) ` method with a ` toFront ( ) ` method in ` DataBrowser ` and `
hbase - 24905 fix npe in defaultmemstore . shouldseek ( ) when columnfamily time range be null
[ hotfix ] [ runtime ] make local state directory configurable in taskmanagerservices
modified the ` AlterTimeSeriesStatement ` class to initialize ` isAlterView ` with a boolean parameter to improve flexibility in managing the alter
fix condition . matchtext ( ) to display human - readable name
added a try - catch block around the retrieval of the routing table builder to handle potential exceptions to improve robustness by preventing application crashes
refactor parameter handling in HttpClientIntroductionAdvice to use a loop for adding entries to the paramMap to improve code readability
( chore ) camel - jms : use char [ ] instead of string for jms password
server : add search by domain path to list of child domain in api
refactor equals and toSortedListWithCounts methods for improved clarity and efficiency to enhance readability and maintainability of the comparison logic
updated the ` initialize ` method to accept an ` original ` parameter and set warnings accordingly to ensure the original SimulationStatus reflects the original
[ gr - 16922 ] transfer to interpreter before invalidate type . currenttimemillis ( ) .
updated the variable handling in the PrettyPrinter class to use a variable variable instead of a tree to improve clarity and maintainability of the code
lucene - 5352 : fix npe in lucenetonemap ' s remove ( ) method
refactor DatagramSocket and DatagramChannelImpl to improve filtering logic to enhance code clarity and ensure proper handling of datagram packets
testquerydns : migrate testquerydns to junit 5 ( # 4519 )
added a new class ` NutchServerInfo ` to manage server configuration , job , and running jobs to provide a structured way to manage
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource and updated attribute handling in EdgeNGramTokenFilter . java to streamline attribute management
added timestamp support to CqlInserter , ThriftInserter , and SettingsColumn classes to allow users to specify a timestamp for data
updated DSAParameterGenerator . java to improve validation logic for prime strength and replaced hardcoded values with constants to enhance code clarity and maintain
updated methods and variables in NumberUtils and Numbers classes for better handling of float and double values to improve code clarity and maintainability while
updated masking logic in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking of byte values
added support for constraint violation checks in DefaultJdbcOptimisticLockingExceptionMapper to enhance error handling by distinguishing constraint violations from other SQLExceptions
[ issue # 3640 ] fix the issue of brokeroffsetstore do not set zero when not find ( # 3640 )
added a new method ` addTab ` to the ` Tabs ` class and refactored the tab creation logic to improve tab management and
replaced ` toArray ( new Array < size > ) ` with ` toArray ( new Array [ 0 ] ) ` across multiple Java files to
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder
refactor conditional checks in MavenVisitor for better readability to improve code clarity and maintainability
updated mock updates in ZookeeperDataChangedListenerTest to use " MOCK _ NAME _ UPDATE " instead of " MOCK _ NAME2
added a new file ` FormatCheckingTest . java ` to test the handling of class name format errors to ensure that the Java process correctly identifies
updated line number handling in CodeGenerator . java to ensure correct line number is used for method execution
added a try - catch block around the method call to handle potential exceptions during configuration retrieval to improve robustness by preventing application crashes due
added methods to create toggle buttons with specified text , icon , and command in RadioButton . java to enhance the functionality of the RadioButton class
increased cache size from 100 , 000 to 10 , 000 in LRUCache and MetadataQuerierByFileImpl to optimize cache
polish ` ` change default channel capacity from private to public ' '
added null check for symbolicName in OsgiManagementNameStrategy . java to ensure symbolicName is empty when it is null to avoid potential NullPointerException
add ` ` -- usemode ' ' system property to load mode contribution
added error handling for adding and removing the shutdown hook in IOManager . java and improved logging in YARNSessionFIFOITCase .
refactor ` RobolectricTestRunner ` to replace ` projectRoot ` with ` androidManifestPath ` for improved clarity to enhance
http : / / issues . apache . org / jira / browse / amq - 4892 - fix npe in abstractreply
refactor CompareMode class for improved readability to enhance maintainability and facilitate future updates
added HasTests interface to Arg class and implemented HasTests interface in RustBinaryDescription and RustLibraryDescription to enable testing capabilities for R
updated placeholder and error drawable resources in FileMessageVH . java to improve clarity and consistency in resource naming
updated OnExitTest . java file to improve test coverage for exit scenarios
added an onUserPreferenceChanged method to the TaskbarManager class to ensure the taskbar is recreated when user preferences change
refactor HeapDump to use reflection for heap dumping based on IBM VM type to improve flexibility and maintainability of heap dumping
camel - http : / / issues . apache . org / activemq / browse / amq - 2372 - ensure session be
updated the driver type from FIREFOX to IE and added new methods for window switching and quitting to enhance compatibility with IE features and
updated imports and annotations in IteratorToFor . java for compatibility and improved type safety to enhance code clarity and ensure compatibility with Java 5
added a method to set the application state to UNAVAILABLE to ensure the application is in an unavailable state for better resource management
removed assertions from ByteBufferAs - X - Buffer , Direct - X - Buffer , Heap - X - Buffer , and StringCharBuffer classes to
replaced the method call to ` toUri ( ) . toString ( ) ` with a direct method call to ` toString ( ) ` to
refactor setEmpty method implementations across multiple array data classes to improve clarity and consistency in handling array elements
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
replaced instances of ` doc4 ` and ` doc5 ` with ` doc6 ` in ` TestMultiPhraseQuery . java ` to
update assignTickets method to conditionally assign tickets based on payment method to ensure accurate ticket assignment based on the payment method being offline
added handling for onTimeout listeners in HttpChannelState . java to ensure thread safety when invoking onTimeout events
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to improve logging clarity and
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the read method to use LOCAL _ QUORUM when consistencyForPaxos is not set to LOCAL _ SERIAL to ensure correct
added a check for the " Home " model in the HeosDiscoveryParticipant and modified the HeosPlayerHandler to handle the presence of a
added a new ` Wait ` class and updated ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` classes to support
refactor Neo4j to utilize AttributeController for managing node and edge attributes to improve code clarity and maintainability by utilizing
added a null check for serverName in the session manager condition to ensure proper handling of null values when serverName is not set
nifi - 1641 : move rocksdbmetronome and rocksdbflowfilerepository from nifi - rocksdb to nifi
updated the method of retrieving the " IS _ GRANTABLE " boolean value from a result set to improve flexibility by allowing retrieval of string
added logging for asynchronous execution and modified URL validation logic to enhance debugging capabilities and ensure proper URL validation
camel - cxf : fix camel - cxf test on macos
hbase - 16465 loadtesttool do n ' t create a new column if it ' s already a new one
implement the Disposable interface in the Texture class to ensure proper resource management by implementing the Disposable interface
updated WebappRegistrationCustomizerImpl to check for null bundle location and changed WebBundleDeployerHelper to use WebBundleDeployerHelper to
check goquorum genesis file if goquorum compatibility mode be enable
replace IOException with Throwable for handling errors in HttpInput to improve error handling by providing a broader range of throwable types
added a condition to check if the JP country is not " JP " in LocaleTest . java to ensure that the JP locale
rename ` Wrapper ` interface to ` HostResponseWrapper ` and update related references to improve clarity and consistency in naming conventions
added boost comparison and hash code calculation in FilteredQuery . java to ensure correct query behavior based on boost values
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
[ geogebradebug ] make sure we do n ' t show log in debug mode
added a new file TestCMSClassUnloadingDisabledHWM . java to test the CMS class unloading behavior to ensure that the CMS class
fix spongepowered / spongecommon / spongecommon / spongecommon / spon
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and updated related methods to use ` ItemPreparedStatementSetter
fix compactionstest to use identityqueryfilter instead of range
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java to
added support for the SpEL operator in the OperatorEnum and created a new SpELJudge class to enhance the functionality of the OperatorEnum
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in localexecutionplanner
bugfix # 205271 , use lookup . lookup ( ) instead of sun . misc . service . providers ( )
updated multiple Java files related to Conscrypt to improve code organization and enhance readability
updated type references from ` Ref < > ( 0l ) ` to ` Ref < > ( 0L ) ` in ` ShadowArsc
updated the HID file source and target parameters from version 1.5 to version 6 to ensure compatibility with the latest HID features and impro
mondrian : add support for pushprojectintotablesourcescanrule ( calcite - 1343 )
added imports and changed the way localized names are retrieved in AboutActivity . java to improve code clarity and ensure consistent sorting of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added conditional logic to refresh shared preferences based on live streaming settings to ensure shared preferences are updated correctly based on live streaming settings
added exception handling to the MappingException constructor in AuditConfiguration . java to improve error reporting for better debugging
( chore ) camel - core : fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in SchemaLoader , CompositeType , DynamicCompositeType , and CompositeTypeTest to use wildcard generics to improve type safety and
added a method ` supportsTransport ` to ` GitClientApplication ` and modified the ` RepositoryUrlPanel ` to use it to check if a
added delegation names and logging for various input consumer classes in TouchInteractionService . java to enhance clarity and maintainability of gesture handling in the
added null check for mavenMetadata and updated version comparison logic in ChangeParentPom . java to improve robustness by handling cases where mavenMetadata
8274181 : test / java / awt / g1 / testlargepageuseforheap . java fail with ` `
cloudstack - 2186 : do n ' t fail migration if usage db do n ' t exist
updated the ` getTestParameters ` method to include an ` IOException ` and adjusted the path format for the sample configuration directory to ensure compatibility with Windows
added a new test class TestObjectStreamClass and modified the requireInitialized ( ) method in ObjectStreamClass . java to implement serialization tests for
fix npe in zoneawarediscoveryfilter when there be no data center
changed log level from error to warn in OpenTracingTracer . java to provide a less severe log level for tracing data capture failures
added a toString ( ) method to the Generator class to provide a readable string representation of the registered generators
refactor URI handling in ` mmm URI . java ` and add tests in ` mmm Test . java ` to improve clarity and
added a check to throw an exception if the requested resource does not exist in ClusterControllerImpl . java to ensure that a valid resource is provided
added error logging and improved response validation in AccepttoApiUtils . java to enhance error handling and provide clearer logging for API responses
removed conditional logic for ByteBuffer allocation in VertexBufferObject . java to ensure compatibility with devices running Android versions below 5
refactor SybaseASADatabase . java for improved code organization to enhance maintainability and readability of the code
added a forceProjection parameter to the HashJoinInfo constructor and updated related methods to use this parameter to ensure backward compatibility while maintaining backward compatibility
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` StringDistance ` instance for
added FLAG _ ONE _ SHOT , FLAG _ MUTABLE , and FLAG _ IMMUTABLE constants , and modified PendingIntent creation
added methods to handle reading column IDs in HiveFileFormatUtils and updated references in HiveInputFormat to improve code clarity and maintainability by
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added multiple instances of DisplayTemporaryToast ( ) in SavedExperiments . java to provide a user - friendly toast message for temporary
added version resolution logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure the service version is set correctly based on the parent version
added a new test file ` RawSerializationTest . java ` for validating JSON serialization of various collection types to ensure that the ` toJson ` method
simonstewart : rename seleniumserver to sslcertificategenerator so that it can be use
updated the iteration over replies in ExpansionViewHelper . java to use an index - based iteration instead of an iterator to improve code readability
increased the timeout duration in the test from 3 seconds to 60 seconds to allow more time for resource access exceptions in ExpiringUrlCache
added a new test method ` testNGramFilterPayload ` to the ` TestNGramFilters ` class to verify the functionality of the token
refactor AclImpl to improve code structure to enhance maintainability and readability of the code
updated test cases in EasyRandomTest . java to verify randomness of arrays with different sizes to ensure that different array sizes are randomized correctly
cloudstack - 4892 : do n ' t fail to start a vm if it fail to start
added a ThreadLocal variable ` __ tryWriteAgain ` and modified the execution logic in ` SslConnection . java ` to manage the try -
reformatted code for better readability and added a new method ` ancestorsVisible ( ) ` to improve code readability and provide a way to
added logging for rolling - update failures in RollingUpdateOpFactory . java to improve visibility into deployment failures during the rolling update process
[ hotfix ] [ table - common ] fix checkstyle violation in datastream module
added error handling for BadCredentialsException in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve error reporting and provide
updated AtMostXVerificationTest . java file to improve test coverage for verification functionality
updated the default QTYPE from " lucene " to " LuceneQParserPlugin . DEFAULT _ QTYPE " and added new test cases
updated SimpleDateFormat instances to include Locale . US to ensure consistent date formatting across different locales
added an ` isInitialized ( ) ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new
updated the parameter name from ` idToken ` to ` shouldHaveIdToken ` in the ` ClientAPITokenIntegrationTest ` class to improve
added methods ` beginTransaction ( ) ` , ` setTransactionSuccessful ( ) ` , and ` endTransaction ( ) ` to ` DatabaseAdapter `
replaced byte array handling with ByteArrayOutputStream for reading input data to improve performance and reduce memory usage during string conversion
added multiple ` @ Override ` annotations and refactored exception message handling logic in ` MessagingTemplate . java ` to improve code clarity and
added an overridden method ` isAcceptable ` to ` AutoFormatVisitor ` to check if a source file is an instance of ` CompilationUnit
set maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy . java to improve performance by reducing the number of buffered documents and
added a new test method ` updateWits ` to the ` WitnessCapsule ` class and modified the ` WitnessCapsule `
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by handling cases where the iterator does not exist
flume : remove log4j dependency and use log . info ( ) instead .
updated authentication metrics and thread management in BasicAuthIntegrationTest and DaemonStream classes to improve authentication metrics and ensure proper thread management during stream operations
changed the implementation of the ` nodes ` variable from ` HashMap ` to ` LinkedHashMap ` to maintain the insertion order of nodes
add an internal error mapper to jerseysupport . java and update jerseymodule - info . java
refactor header validation logic in Http2TestBase . java to use a helper method to improve code readability and maintainability by encapsulating
added a switch - case structure to handle specific Java properties in System . java to improve code readability and maintainability by using a switch -
changed method parameters from String to CharSequence in StringSubject . java and added new test cases in StringTest . java to enhance flexibility in string
add miss jdk / jfr / internal / jvm . countertime ( ) and jdk / jfr / internal / jvm . event
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory assignment in PersistenceManagerProvider . java to ensure the correct DataSource is used based on compaction settings
updated DeploymentOptions . java file to improve deployment configuration handling
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` object instead of ` ConstantState ` to simplify drawable handling and
refactor XmlParser and YamlParser to use try - with - resources for better resource management to enhance code readability and ensure proper resource management
added support for the COALESCE function in RexNodeConverter and registered it in SqlFunctionConverter to enhance functionality to support coalesce
camel - 16462 : camel - hl7 - fix the unit test error of camel - jbang
replaced direct instantiation of ` JavassistProxyFactoryFactory ` with a context class loader in ` JavassistProxyFactoryFactory
updated DefaultDateTypeAdapter to remove dependency on DateFormat and added synchronized keyword to enhance thread safety for serialization and deserialization processes
reformatted method signatures in DocumentUtil . java for improved readability to enhance code clarity and maintainability
refactor URI handling in HttpClientRequestBase to simplify query and query assignment to improve code readability and maintainability by eliminating unnecessary state
removed the filterOldEntries method from FeedRefreshUpdater . java to ensure that old entries are only filtered if they are not already present in the
hbase - 26465 fix the log level of fshlog . append ( ) from fatal to warn
refactor NodeMap to implement a new NodeMapIterable class and improve iterator implementation to enhance code readability and maintainability by separating iterator
updated import statements and variable names in DiscoveryClientRouteDefinitionLocator . java for clarity to improve code readability and maintain consistency in naming con
added a check for non - empty fields before adding aggregation in MongoRecordReader . java and modified return condition in RexToMongoTranslator .
added ` ` admin ' ' to the admin list if no admin list be available
replaced MultiFields usage with SolrIndexSearcher ' s slow - atomic reader terms method in IGainTermsQParserPlugin , Significant
updated the return statement in ConstantBeanHolder to include the object ' s class name and its identity hash code to improve clarity of the returned
removed conditional check for line number and simplified return statement in GroovyParserVisitor . java to simplify code logic and improve readability
remove hashcode ( ) and hashcode ( ) from java . lang . string , which be uninterruptible .
increased timeout values for blockWhenFull and blockingBar in SedaBlockWhenFullTest . java to improve test reliability by
added a new file ` package - info . java ` to the ` org . apache . lucene . core . testresources ` package to
update read length calculation logic in MessageUnpacker . java to ensure accurate read length based on position and buffer size
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core
updated SQL query in IconDB to include user - specific attributes to enhance filtering capabilities by including user - specific attributes
fix typo in defaultmqproducerimpl # setbackpressureforasyncsendsize ( )
do n ' t allow whitelisted resource for module - info . class
fix baremetal foreign key in 4.1 to 4.2 upgrade
removed the IJava2DRenderer interface and its implementation from the Java2DRenderer class to simplify the codebase by eliminating unnecessary interface
added onTearDown method to handle offload buffer emptying in DefaultAudioSink to ensure proper handling of audio playback state during tear
added a scheduled thread pool for upstream tasks and refactored related logic in UpstreamCacheManager . java to improve the management and execution of upstream
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion message in Recording . java to include an additional context to improve clarity of the assertion failure message for better debugging
updated FilestorePage and RootPage to improve authentication handling and user navigation to enhance user experience by ensuring only authorized users can manage filestore
add @ ignore to camel - elasticsearch - rest to skip test
added a check for the declaring class of the method in the accept method to ensure that the method ' s declaring class is valid before proceeding
updated button labels in OfferBookChartView from " leftButton " and " rightButton " to " buy " and " sell " to
camel - 16462 : camel - restlet - do n ' t allow route with invalid url . thanks to benjam
refactor createNextBlock and createNextBlockWithCoinbase methods to remove unnecessary ' blockHeight ' parameter to simplify method signatures and improve code
updated BTreeMapJava and ConcurrentSkipListMapTest to implement NotSerializableException and modified serialization methods in JSR166Test to enhance serialization
fix npe in ruleengineimpl when error occur during startup
refactor conditional statement for clarity in Main . java to improve readability and maintainability of the code
updated the method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to ensure the
deleted the PlainVerifier . java file and updated the DefaultJwtSigningAndValidationService . java file to remove unused code to streamline the codebase
added a condition to close the system window when triggered from the alt tab to improve user experience by closing recents when the action is triggered
updated dialog handling in DialogFragmentIT and removed unused BottomSheetBehavior imports in OCFileListBottomSheetDialog and OCFileListBottomSheetDialog
updated MimeUtil . parseCharset calls to include " UTF - 8 " as a parameter to ensure compatibility with UTF - 8 encoding in MIME type
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper initialization of the TextField component
updated the testSerialization method to utilize TestUtilities for serializing LogFormat objects to improve code readability and leverage TestUtilities for serialization
updated duration parsing and fill parameters in LogicalGenerator , GroupByFillDataSet , and PhysicalPlanTest classes to improve accuracy of duration parsing and enhance
added validation for negative array size and improved argument handling in JAXWSExceptionBase . java to ensure proper error handling for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4446 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow for a longer wait time before
[ hotfix ] [ test ] switch default scheduling strategy to region in miniclusteritcase
added title management methods in ShadowActivity and updated @ Implementation annotations in ShadowAlertDialog , ShadowDialog , ShadowTextView , and ShadowToast
replaced Apache Commons Logging with Apache POI ' s Apache POI Logger for logging messages to improve logging consistency and align with Apache PO
updated alarm handling logic in InstarHandler . java to support multiple object codes for instar and PIR to improve clarity and functionality of
add localmapstats . getremovelatencynanos ( ) for mapdeletemessagetask . delete ( )
refactor status check in Response . java to use a switch statement to improve code readability and maintainability by using a switch - case structure
refactor javac location retrieval in CheckResourceKeys . java to use a dedicated method to improve code clarity and maintainability by centralizing
add project - name for stable channel ( # 5338 )
added a new file deprecatedStubbingTest . java to test deprecated stubbing behavior in Mockito
replaced the import of ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType `
tregex : add nml and NX to the list of recognise nml and np in the tree
add a system property to disable rsa key exchange by default
replaced instances of ` output _ reader ` with ` reader ` in ` PerforceHistoryParser ` and ` PerforceRepository ` to ensure
refactor PubSubAPI , SDMAPI , PubSubHandler , and SDMAccountHandler to use a unified OAuthFactory and handle ID to
updated the animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java
added handling for UpdateRegionLocation in ConfigPhysicalPlan and improved logging messages in RegionMigrateProcedure and DataNodeInternalRPCServiceImpl to enhance
added a new file ` FileDialogLeakTest . java ` that tests the behavior of ` FileDialog ` to ensure that the ` File
hbase - 26462 make testopentablethreadincoprocessor a subpackage of hbase - coprocessor (
disable uninterruptible feature in trufflefeature . getfeature ( ) .
[ hotfix ] [ protobuf ] remove unused method in pbcodegenrowdeserializer and pbcodegenrowserializer
updated condition to check for non - null disi dimensions in DrillSidewaysScorer . java to ensure proper handling of non - null
do n ' t wait for the manifest to be refresh after the stream have be read .
added support for Java 9 version checks in the Constants class to ensure compatibility with different Java versions and improve code clarity
updated FileReporter initialization to explicitly cast null to String and File types to ensure proper type handling for null values in tests
changed the condition from checking for end - to - end encryption keys to checking if keys exist to ensure that the end - to - end encryption
added home button functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing navigation through the home button
added GET _ USER to the RpcServlet and introduced a new method in RpcUtils to retrieve user information to enhance user management by allowing users to
added a system property check for the operating system architecture in TestJdbcPluginWithMSSQL . java to ensure compatibility with additional system architect
replaced the variable ` startClass ` with ` originalStartClass ` in ` WhiteboxImpl . java ` to ensure the correct class is
updated error message and improved local registration logic in DexBody . java to enhance clarity of error messages and enhance code readability while
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
jbrules - 3353 : fix nimbus look and feel on macos
updated regex pattern for versioning in AppPage . java to ensure consistency in versioning format
refactor animation listener management in LauncherAppTransitionManagerImpl . java to improve code readability and maintainability by reducing redundancy
updated error message in AddressFormatException to include version instead of base58 to provide clearer context about the network version being used
updated the reference from ` offerPayload . getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) ` to ensure the correct
updated milestoneParameters initialization in TicketPage . java to use new parameters based on milestone status to improve clarity and functionality when creating milestone parameters based
changed the battery dimensions from 640x 640 to 80x80 in PipeItemsWood . java to align the battery with
added a new method ` getClusterKey ` to retrieve the cluster key and updated the ` getStateMachineClusterInstance ` method to include blueprint name and
initialize downgradeAllowed to true in UpgradePack . java and add a new test for downgrade behavior in UpgradePackTest . java to ensure
updated XML scanning methods to use NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE to improve clarity and specificity in XML
added a new configuration option to emulate the system load library and modified library loading logic to enhance flexibility in loading libraries based on user settings
refactor sorting and sorting logic in AppsCustomizePagedView and LauncherModel to use a dedicated comparator method to improve code read
close the output stream in DefaultPlatformManager and add directory creation in FatJarStarter to ensure proper resource management and avoid potential resource leak
updated the assertion format in the doTest method to include the digest and iterations parameters to improve clarity of the assertion output for better debugging
camel - 16462 : camel - spring - xml - dsl - remove reflection from routebuilderfinder
[ hotfix ] [ doc ] fix typo in metricoptions description
hbase - 16400 testfulllogreconstruction . testfulllogreconstruction . testfulllogreconstruction fail on
added ` reuseAddress ` property and overridden methods in ` DatagramSocketOptions ` to enable dynamic configuration of socket options based on network options
fix ` ` server . shut down ' ' error message
simonstewart : remove deprecate ' locatable ' interface
updated error messages for VERSION _ FIELD in VersionInfo . java to clarify error conditions to enhance clarity of error messages for better debugging
rename ` equalityPredicateColumns ` to ` predicateColumns ` and update related logic in ` StarTreeIndexOperator . java ` to improve cl
reorder the initialization and disconnect logic in HandshakeHandler . java to improve code readability and maintainability
updated formatting in Navigator . java for consistency to improve code readability and maintainability
changed the access modifier of several constants from private to default in RecordReaderFactory . java and added a new test class RecordReaderFactoryTest .
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator and corresponding unit tests to enhance query
refactor group by expression checking logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
refactor FileChannelLinesSpliterator to use AtomicInteger for buffer reference counting to improve resource management and prevent potential memory leaks
refactor code to use a local variable for the validator object to improve code readability and maintainability
fix flaky test : add schedule ( ) method to circuitbreakerimpl
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent flags for
updated the configuration property from " ajax " to " progressbar " in SubmissionController . java and FileUploadRequest . java to provide a progress
updated the display name of the test class from " Retrieve view " to " Retrieve column privileges " and added a disabled annotation to indicate that the
added synchronized keyword to the addExportedCount and getExportedCount methods to ensure thread safety when accessing shared resources
updated import statement from ` IntRangeUtil1 . requireNonNegative ` to ` IntRangeUtil . requireNonNegative ` to ensure compatibility with
updated HttpParser to handle illegal characters and added a test for encoded headers in HttpParserTest to improve error handling and ensure proper encoding of HTTP
updated the layout used in ConfigurePagerActivity from trends _ activity to configuration _ activity to align the activity with the new configuration layout
updated print statement to include position information in SLWTTextListing . java to improve clarity of output messages for better debugging
refactor ` ForceLeaderTest ` and ` HttpPartitionTest ` to utilize a timeout mechanism for tlog replicas to improve test reliability
rename Thread class to improve clarity to enhance code readability and maintainability
added new template file suffix constants and modified the initialization of the RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES set to include additional
camel - 16462 : camel - cxf - do n ' t set the ns attribute if it ' s the same a the default
reformatted whitespace in YamlRepresenter . java for consistency to improve code readability and maintainability
updated string formatting for day and month values in ToChar . java and added a test for the TO _ CHAR function in TestFunctions . java
added validation for transaction and write ID configurations in GenericUDTFGetSplits . java to ensure compatibility with valid transaction and write ID configurations
replaced ArrayList and length checks with Collections . emptyList ( ) for column and column types to improve code readability and leverage built - in
added null check for bookpath in DataHolder . java and introduced a new method to check for initial image availability in Picture . java to improve
updated the ` manufactureStrings ` method to include a check for ` NextRecord . sid ` in the ` manufactureStrings `
updated grid column handling in AppPreferencesImpl and ExtendedListFragment to use a default value to improve robustness by ensuring default grid column values are
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java from " empty - differences in line breaks ? " to " line
added a new boolean field ` waitingForKeys ` and updated related logic in ` DecoderInputBuffer ` , ` ClippingMediaPeriod `
removed the " / api " prefix from multiple @ Path annotations in OkexV3 . java to simplify API path management by removing unnecessary "
rearranged conditional checks for line coordinates in LineUtilitiesTests . java to improve readability and maintainability of the code
added error logging for varargs and old array syntax in JavacParser . java and introduced new classes T6569633 . java to
add warn log if defaultdrmsessionmanager be set on wrong thread
added support for handling method calls in VariableContext and updated related tests in TestVariableContext to improve the handling of method calls and enhance test coverage
added unit tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure proper error handling for invalid JSON inputs in
update buffer limit logic in Piece . java and remove redundant buffer capacity in SharingPeer . java to improve buffer management by ensuring correct position
added HttpClientProperties to manage response timeout properties in NettyRoutingFilter and related classes to enhance HTTP client configuration flexibility by allowing customizable response
refactor NativeLinkTarget handling in CxxLibraryFactory and update native link target input methods in NativeLinkTargetGroup to improve clarity and
add unit test base on user forum issue
added support for handling RexFieldAccess in ASTConverter and RexNodeConverter to enhance field access handling in Hive queries
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 646 . fix http
refactor certificate handling logic in PKCS12KeyStore . java and add certificate loading in StoreSecretKeyTest . java to improve clarity and functionality of
added reflection access checks and refactored access control methods in NativeObject and ReflectionCheckLinker classes to enhance security by ensuring proper access control
removed the ' public ' access modifier from the constructors of the CollisionMap class to enforce encapsulation within the package - private scope
replaced the @ NotNull annotation with @ Deprecated and added a null check for the input parameter in the getRawInputFromTransactionInput method to improve
refactor logging level handling to use a switch statement for better readability to improve code maintainability and reduce boilerplate code
cloudstack - 1343 : remove region _ id from the list of user / account record
bug - 60284 -- throw encrypteddocumentexception for password protect oldexcel file
add -- add - exports = com . oracle . svm . nativeimage . builder / com . oracle . svm . core . j
removed unnecessary visibility setting for the image holder in TimeLineCursorAdapter . java to improve code readability and maintainability
increased the maximum number of attempts in the scheduler from 10 to 50 and modified sleep duration from 10 to 1 to improve test reliability
updated file creation logic in ShadowContext and refactored deleteDir method in ContextTest to improve directory management and enhance test coverage for directory creation
refactor ExceptionFactory to use Class . forName for better error handling to improve compatibility with different testing frameworks
updated WAIT _ TIME _ MS constant from 10000 ms to 60000 ms to increase wait time for improved performance
updated import statements and added audience handling in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to improve code clarity and ensure proper audience
camel - kafka : make breakonfirsterror default to true by default
added a new constant for the selectable item background in R . java to provide a visual representation of the selected item ' s background color
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
update event type assignment logic in TxnSetOperation . java to ensure correct event type is set based on the presence of a record
move resumablerandomaccessfilelistener from resumablerandomaccessfilehandler to resumablerandomaccessfilelistener
replaced " AccessLogValve $ 3 " with " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java to align
added logic to update HSSFDataFormat and updated test assertions in TestWorkbook to ensure proper handling of format records and improve test coverage for
[ hotfix ] [ kafka ] deprecate kafkaproducer in favor of kafkaproducer
updated the condition to check if the checksum length does not exceed the maximum compressed length to ensure that the checksum length does not exceed the maximum allowed
camel - 16462 : camel - spring - data - redis - add support for idempotent processor in camel - spring - data - redis
fix vanilla bug where vanilla do n ' t use metadata .
do n ' t create local repository if it ' s already local
[ hotfix ] [ runtime ] check if taskmanager have already be initialize before start it .
added deployment options to the AbstractArtifactResolutionException class to provide guidance on how to deploy files in a Maven repository
updated the method for obtaining the internal temporal path in FileStorageUtils and added a new helper method in FileStorageUtils to improve file management
refactored the ` findByEntries ` method in ` FeedEntryStatusDAO ` to use ` CollectionUtils ` instead of ` Lists ` to improve
added thread execution handling in ContextImpl . java and refactored test cases in BlockedThreadCheckerTest . java to improve thread management and
updated the ` instantiate ` and ` convert ` methods in ` FormatterConverter ` to accept a formatted string and added a null check for ` ctor
updated file reading logic in LoadContactsTask . java to handle different file formats for Android O and above to ensure compatibility with newer Android versions and
replaced custom ` setRemoteAddress ` and ` setRemoteHostname ` methods with direct assignment of ` remoteAddress ` and ` remoteHostname ` to
added a null check for shadowClass in Robolectric . java to ensure that shadowClass is not annotated with @ Implements to prevent runtime
added a check for TLS mutual authentication requirement in NettySslContextFactory and ExampleNettySslContextFactory to ensure that TLS mutual authentication is
updated imports in BasicHttpTest . java to include ISO _ 8859 _ 1 and added a test for SSL exception handling to ensure proper exception
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance encapsulation by providing access to the consumer and producer instances
refactor event handling logic in PageChangeListener . java and update frame class name replacement in FrameRenderer . java to improve code clarity and ensure
corrected a typo in the log warning message from " email " to " SMS . " to improve clarity and accuracy of the warning
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 563 - add
added error handling for IOException during file transfer in MultipartBody . java to improve robustness by handling potential IO exceptions during file transfer operations
refactor : fix checkstyle issue in util / executablefactory and zipfolder
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
fix ` ` attach file ' ' do n ' t work if the file directory do n ' t exist
added LoadOptionsBuilder to SchemaCrawlerOptionsBuilder and updated its usage in AccessTest . java to enhance schema crawling options configuration for impro
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace exception throwing with returning null in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties from the prototype to enhance property management by associating properties with their respective properties
refactor connection handling to use a try - with - resources statement for ConnectionInfo to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ doc ] fix typo in datastreamjob
added error handling for Errno exceptions in TestContentProvider . java to ensure proper resource management and avoid potential resource leaks
camel - 16462 : camel - cxf should use classhelper . getrealclass ( ) instead of getclass ( ) .
added a conditional check for the " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure proper handling of HTTP / 2
refactor lambda handling in LambdaToMethod and ClassFileVisitor classes to improve clarity and functionality to enhance code readability and maintainability while ensuring
tregex : fix a bug in the coordinationtransformer that cause it to fail
increased the timeout duration for the file copy in DL4JInceptionV3Net . java from 5000 to 60000 to
added a call to setSlop ( phraseSlop ) in QueryParser . java to set the slop factor for phrase processing
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time
updated the default port for metrics server from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to ensure
add a method to schedule a task on a parallel thread in the game scheduler .
updated visibility condition for compound in EditShareFragment to include ` areEditOptionsAvailable ` to ensure that the compound view displays correctly when editing options
updated the progress calculation in DepthController . java to ensure progress does not exceed 1.1 to improve user experience by ensuring progress does not exceed
remove session . packetreceived ( packet ) method that be no longer need .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the service parameter in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes to
added ` hidden = true ` to the ` PantheonCommand ` command to allow users to access account level permissions via smart contract
added a method to exclude the class " androidx . room . CoroutinesRoom $ Companion " from instrumentation to prevent unnecessary instrumentation
added logging for context class loader retrieval in NegotiateAuthentication . java to improve error handling and ensure thread safety when accessing the context class loader
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the initialization process by eliminating unnecessary initialization
camel - 16462 : camel - jmx : add thread name to answer object to help debugging
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added methods to open and close mc blocks for tagged elements in PdfDocument . java to ensure proper handling of image elements when the writer is tagged
log4j2 - 1349 add a unit test for the patternselector .
simonstewart : use selenium - server ' s test runner instead of throw an exception
added a new response class ` MwThankPostResponse ` and updated the ` thank ` method in ` Service . java ` to
implement SocketBased interface in ChannelEndPoint and update SslConnection to use it to enable socket - based communications in the channel endpoint
refactor revokingStore initialization and max size setting logic in Manager . java to improve clarity and maintainability of the revoking
added test cases for implicit joins in HQLTest . java to ensure correct functionality of querying calls and timestamps in the database
updated assertions in NonVisualRegressionTest to remove carriage return characters from expected and actual text to ensure consistent line endings across different operating
added filesToCommit collection and updated references in IndexWriter and SegmentInfos classes to improve file management and prevent unreferenced file references during index operations
changed method modifiers from ` final ` to ` public ` in ` BaseError . java ` and added ` @ Final ` annotation to ensure method
added validation for the consumption percentage in ConsumeUserResourcePercentActuator to ensure that the percent value is within the valid range of 0 to 100
added a condition to check if the old login is shown before proceeding with the legacy login logic to ensure the legacy login behavior aligns with
rename the class ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to improve clarity and consistency in naming
updated the response page assignment in EditTeamPage . java to ensure the correct response page is used for team editing
updated debug log message to include exception details to improve clarity of error logging for better troubleshooting
updated connection management logic in ConnectionManager . java to ensure proper shutdown of the server socket channel to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code readability to enhance maintainability and facilitate future updates
refactor conditional logic in BaseSemanticAnalyzer to use a new method for creating dynamic partition specifications to improve code readability and maintainability by
make round _ half _ up _ factor consistent with scientific notation
added a method to visit directory entries in ` JarDirectoryStep ` and implemented a test for directory entries in ` DirectoryTraversal ` to ensure that
added a new file ` JWKSetEditor . java ` that implements a property editor for text input to enable flexible handling of JWK values in
refactor term handling in OrdsBlockTreeTermsWriter , BlockTreeTermsWriter , and VersionBlockTreeTermsWriter to simplify the finish method
add truffleboundary to toespresso and jfr listener for trace throwables .
change default value of fetcher . threads . per . host . by . ip from true to false to disable thread fetching by default for improved
updated condition to check for transactionTimeout in StatementUtil . java to improve clarity and correctness of timeout handling logic
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher and included it in HaskellGhciRuleIntegrationTest . java to
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
server : fix network stats update task with wrong initial delay ( # 5868 )
updated animation interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a constant FINAL _ FRAME instead of a lambda expression
updated swipe bar height calculation in Background . java to improve user experience by adjusting navigation bar position based on display density
added module - info . java to define module exports and dependencies for the Jetty HTTP3 server module to organize module structure and improve mod
runtimeservice : fix npe in jsontype when value be null
simplified the assignment of the ` ctx ` variable in ` ResourceResolverBean . java ` to improve code readability and maintainability
[ flink - 33935 ] [ checkpoint ] improve the default value logic relate to ` execution . checkpointing . tolerable - failed - checkpoints
updated the method signature of ` reportInnerClassReferences ` to accept a ` Element ` instead of ` TypeElement ` to improve clarity and functionality
updated the command string construction in TimestampCheck . java to include spaces around the VM options to ensure proper formatting of the VM options in the command
replaced FluentIterable with Stream and MoreCollectors for file listing to improve code readability and leverage Buck ' s built - in
[ 3.0 ] add support for register service to registry ( # 10363 )
do n ' t close otr session if security mode be disabled
added new properties for label outline size and transparency in PreviewProperty and NodeLabelRenderer classes to enhance label rendering flexibility by allowing customizable outline
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the boolean value from false to true in the Win32FontManager class to enable a specific feature for better font management functionality
added null check and cursor setting in TreeVisitor . java to ensure cursor is set when the visit method is called on a non - null object
added error handling policy to JDTBatchCompiler based on the compiler environment to improve error handling behavior based on the compiler environment
added content alignment point and text anchor properties to the LabelBlock class to enhance label rendering capabilities by allowing customizable alignment points
refactor Class and Parameter classes to improve code structure to enhance maintainability and readability of the codebase
refactor IndexReader to improve code readability to enhance maintainability and facilitate future updates
updated the ` isLoopback ` variable type from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to improve
updated the ` fromRfc1123DateString ` method to include a ` Locale ` parameter to enhance date formatting to accommodate different locales for
fix flaky test : filedownloadviaproxytest fail on window
added outputNoHits property to the AbstractJsonQueryElasticsearch class and modified handleHits method signatures to include a boolean parameter to control the output behavior
cloudstack - 4892 : remove aggregation ratio from quota update method ( # 4892 )
[ java ] fix switch / switch / try / catch in election .
fix ( streamfilesp ) : do n ' t close the directory stream when it ' s closed
refactor widget handling logic in PageChangeListener . java to improve clarity and maintainability to enhance code readability and maintainability by simplifying
added a method ` isWriteProtected ( ) ` to the ` Workbook ` class and modified ` FileSharingRecord ` and ` RecordInputStream
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session validation to improve robustness by logging
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
changed the status message from " reachable = false " to " reachable " in HueLightHandler . java to clarify the reason for
add fmlclienthandler . isloading ( ) and fmlclienthandler . isloading ( ) . close # 74303
updated return statements to include " unit . millions " and " unit . thousands " instead of hardcoded " mil " and
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code readability and
added parameterized tests for queries using reserved words as relationship names in HqlQueryTransformerTests and JpqlQueryTransformerTests to improve test coverage
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct serialization and deserialization of nested maps in JSON format
added offset adjustments for x2 and y2 in GeometryUtils . java to ensure coordinates are correctly positioned within the specified offset
refactor FileDisplayActivity and ReceiveExternalFilesActivity to use SortingOrderDialogFragment for sorting order functionality to improve code readability and maintain
do n ' t crash if testplan do n ' t exist
updated method names from ` dbmsName ` and ` dbmsType ` to ` getDbmsName ` and ` getSchemaName ` , and
updated argument handling in the parser to check for non - strict idents and null values before adding them to the parameters list to improve robustness
updated the default protocol setting in JettyHttpComponent9 from " SSL - HTTP / 1.1 " to " SSL - HTTP / 1
set default value of displayVolume to true to ensure displayVolume is set to true by default
updated the version method to accept a boolean flag for full versioning and improved message retrieval to enhance clarity of versioning and provide a
updated condition checks in ChangeLogParameters . java for better clarity and logic to handle global change logs correctly to improve code readability and ensure
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for missing transactions in CMT environment
hhh - 13434 skip setoperationtest due to illegalargumentexception in basicformatterimpl
removed duplicate calls to startHandshake ( ) and setSoTimeout ( ) in sslSocket to streamline the handshake process and ensure socket timeout settings
updated action bar size calculation in multiple fragments to account for popup state to ensure proper layout behavior for popups in the user interface
changed the default value of the ` CHA ` option from ` false ` to ` true ` in ` EspressoOptions . java `
http : / / issues . apache . org / activemq / browse / amq - 2370 - fix http : / /
refactor tests in JodaTimeRangeRandomizersTest to use AssertJ assertions instead of DataProvider to improve code readability and maintainability
updated Jakarta EE schema loading to include redirects for both Jakarta EE 9 and later versions to ensure compatibility with
fix : add logic to determine if a node be ready
replaced references to ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to ensure that the correct endpoints are
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest RPC version changes
added security checks using System . getSecurityManager ( ) in ObjectStreamClass and ObjectStreamField classes to enhance security by ensuring package access checks are
refactored time calculation methods in Utils . java and made UGSCommandCount private in XLCDCommunicator . java to improve
refactor DefaultMetricsTagProvider to use a HashMap for tag management instead of an ImmutableMap to improve code readability and maintainability by using a
added MockBrowserTest to the test suite in ClientDriverSuite . java to ensure the MockBrowserTest is correctly included in the test suite
change default setting of opt2 from Level . OFF to Level . ERROR to improve error handling by providing a more appropriate default logging level
changed member variables from non - final to final in IconNormalizer . java to ensure immutability and improve code readability
added a boolean flag ` firstCallPrepareDo ` and modified the invocation logic in ` PrepareInterceptor ` to conditionally set the prefix based on
refactor workspace and overview mode handling in Launcher . java to improve clarity and functionality of workspace and overview mode behavior based on content type
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ` in ` AuthWithStoreFeature . java ` and removed ` as
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method in ` GraphicalDataModelView . java ` to control
server : remove private ip capacity by default when remove a private ip
added basic usage information to the profile command for empty diagram and Linux version 4.6 + to provide users with guidance on how to see
add requirereffieldmodel to allow api model to use ref field
rename configuration classes from ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreEnvironmentBootstrapAutoConfiguration `
refactor FeatureFlags class for improved readability to enhance maintainability and facilitate future feature additions
[ hueid ] fix hue id mapping for large hueid ( # 1391 )
added image handling for cached bitmaps in TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the image is only set when a picture
updated configuration messages in HiveConf . java to clarify compaction behavior for full CRUD tables to improve clarity on the purpose of compaction
added a null check for the storage path in the waiting message check to ensure that the check for a valid storage path is present before proceeding
refactor resize threshold checks into a separate method ` checkResize ( ) ` across multiple classes to improve code readability and maintainability by central
refactor LDAP connection handling in LDAPConnectionService . java to improve code readability and maintainability
deprecated the @ XmlAttribute annotation in AggregateDefinition . java to indicate that the attribute should no longer be used in future development
removed debug logging statements from TouchInteractionService and RecentsAnimationDeviceState classes to clean up the code and improve performance by eliminating
added a condition to check if the class name starts with " com . intellij . rt . junit " in AbstractSoftAssert
updated assertions in TestMultiSearcher to use correct variable names to improve clarity and accuracy of test assertions
added a new file ` LucenePackage . java ` containing a private class ` LucenePackage ` with a static method ` get ( )
corrected the calculation of sizeInBytes to account for negative values to ensure accurate size handling in RAMDirectory
added estimate method to various classes and made variables final to improve code clarity and ensure immutability of variables
added null check for getDrawerToggle ( ) before invoking onDrawerSlide ( ) to prevent potential NullPointerException when getDrawerToggle ( )
added ` @ SuppressWarnings ( " unused " ) ` annotation to the ` convertToAuthentication ` method in ` DefaultAuthenticationAdapter . java ` to suppress
jdk . internal . loader . ClassLoaders $ appclassloader and jdk . internal . loader . ClassLoaders $ platformclassloader to
[ msbib ] add ` ` corporate ' ' field to ` ` msbibentry ' ' for recognition ( #
added a method to cancel core recovery if ZooKeeper is enabled and updated logging message formatting to improve code clarity and ensure proper handling of core recovery
replaced direct calls to System . currentTimeMillis ( ) with a custom currentTimeMillis ( ) method and updated position difference calculations to improve code readability and
removed debug print statements and simplified conditional logic in RepoEditView . java to improve code readability and maintainability
[ hotfix ] [ doc ] fix typo in documentation
added trustResolver , roleHierarchy , and permissionEvaluator fields to SecurityEvaluationContextExtension and updated SecurityExpressionRoot initialization to enhance security configuration by allowing
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is set correctly based on primeSize
replaced direct calls to ` FileStorageUtils . getSavePath ( ) ` with a new method ` getUsableSpace ( ) ` across
updated the ` combine ` method in ` DistinctSqlAggregation ` to handle multiple values instead of a single delegate to improve the handling of distinct
added a test method to verify the execution of post - login activities for a user in UserServiceTest . java to ensure that the authentication process
extractorspanishstrippedverb : allow to specify a dictionary path for extractor
simplified the ` contains ` method in ` CharArraySet ` and added a new test method in ` TestCharArraySet ` to improve
updated error messages and added validation for audio and video track formats in MuxerWrapper . java to improve clarity of error messages and enhance validation
updated JsBundleGenrule and related tests to use AndroidPackageable instead of JsBundleAndroid to improve compatibility with Android resources and streamline asset
added UTF - 8 character encoding support and refactored string handling in StringDictionary and DictionariesTest classes to ensure proper handling of UTF -
replaced multiple instances of applications with a single tile icon in InstrumentsFragment . java to streamline the code by eliminating unnecessary array
replaced dynamic instantiation of ` Vector ` with dynamic class loading based on ` instanceClassName ` and ` instanceClass ` to improve performance by avoid
removed syncMetaLeader ( ) method from CMManager . java to streamline code by eliminating unnecessary synchronization
update feedback contribution question detail to show ' no response '
added TestLoggingExtension import and annotation to DiagramRendererTest . java to enable logging functionality for test cases
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 563 : add
added VIOMI _ WATERHEATER _ E1 device type to MiIoDevices . java to support additional Vomi water
replaced direct calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` to improve code readability and
added a new file ` CreateNewSpreadsheet . java ` to demonstrate the creation of a new spreadsheet in Apache POI to
replaced ` Duration ` with ` long ` for ` ttl ` and related methods in ` CacheProperties ` and ` RedisCacheConfiguration ` to
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` in ` LauncherBackupHelper ` and ` Launch
updated testCompile group and version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to reflect the latest
replaced ` lucidaFontName ` synchronization with ` this ` synchronization in ` SunFontManager . java ` to ensure thread safety
added a condition to check if the character is an ' < ' character before verifying if it is a single character to ensure proper handling of
removed String . format from the string return statement to simplify the code and improve readability
added error message for missing validation errors in ValidateCommandStep . java to provide user feedback when no validation errors are found
updated import statements and refactored web resource configuration in IntegrationTestContextLoader . java to improve clarity and functionality of resource management in the
updated scroll handling logic in multiple classes to improve responsiveness to ensure proper scrolling behavior and handle pointer events correctly
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated ` StatsService ` and ` DefaultStatsService ` to use ` String ` instead of `
updated the expression replacement logic in CellContentConverter . java to ensure consistent line endings in pattern processing
simonstewart : fix test that fail on window
mondrian : fix typo in mondrianproperties . java
added error handling and stack trace printing in ProcessTools . java , updated LauncherTest . java and LocalManagementTest . java to improve debugging
removed a test method for embedded images in TumblrRipperTest . java to streamline the test by eliminating unnecessary
added a conditional check before converting storeType in CodeGenerator . java to ensure conversion only occurs if the symbol has a slot for storeType
update extractor initialization logic in ContainerMediaChunk and InitializationChunk classes to handle cases where nextLoadPosition is zero to improve efficiency by avoiding unnecessary
added UTF - 8 encoding support and updated IndexWriterConfig usage in BaseLockFactoryTestCase . java to improve string representation of streams for better
tika - 489 - add support for loaderrorhandler and loaderrorhandle to the serviceloader .
added error handling for package - info checks in DocLint . java and refactored ArrayList initialization in DocLintTester . java to improve
added a new import command constant and modified condition in DataImportHandler and DataImporter to include it in the import check to enhance functionality by allowing
added a test to ensure that inner classes are not modified when an ignore definition is set to true to ensure that inner classes are not modified when
removed the import of android . util . Log from JettyService . java to streamline the code by eliminating unnecessary dependencies
modified the ` checkItemPlacement ` method to include a ` ArrayList < Long > workspaceScreens ` parameter and adjusted related calculations to enhance
simonstewart : add a ` ` / quitquitquit ' ' endpoint to jetty7appserver
refactor handling of generic rows in LLRealtimeSegmentDataManager to use a list for transformed rows to improve code readability and maintainability
added a check to skip processing for Windows platforms in the Tests . java file to ensure compatibility with Windows and exclude Teredo NIC
add contact dialog : show a warning if the contact be not connect to the contact .
replaced bean definition registration with a bean component registration in AuthenticationConfigBuilder . java to improve code clarity and maintainability by using a more
modified the drawBitmap method to use a null parameter instead of its left and top coordinates to simplify the bitmap drawing process by eliminating unnecessary
fix totem , meitrack and meitrack protocol decoder ( fix # 1181 )
changed visibility of getFontPath and getPlatformFontPath methods in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path
added @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should not be used in new code
fix clientmapstoretest to catch ` ` java . lang . executionexception ' '
added a configuration option to keep empty sentences in DocumentPreprocessor , SentimentPipeline , and MaxentTagger classes to allow users to
updated the ` createArtifactSubdirectory ` method to return a boolean and added error handling for directory creation failures to improve error handling and provide clear
refactor ` JavaCompiler ` and ` JavaLanguageServer ` to return ` NO _ MODULE _ COMPILER ` instead of ` null `
added null check for answer in DirectAgentAttache . java to ensure proper handling of null resources to avoid potential NullPointerExceptions
removed exception handling from the sendEmail method signature in Emails . java to simplify the method signature and improve error handling
fix an npe in pipitemsobsidian . close # 1365
updated date math parser methods to accept a Locale parameter to improve flexibility in parsing date maths based on the specified locale
added a boolean flag ` includeDecals ` and its getter / setter methods in ` StorageOptions ` , and implemented a checkbox in ` Storage
added a null parameter to the generateDocumentation method in Liquibase . java and modified the getImplementedDatabases method in Liquibase
updated performance logging logic in HiveProtoLoggingHook and improved test assertions in TestHiveProtoLoggingHook to enhance performance tracking and ensure accurate
updated warning message formatting in multiple Java files to improve code readability and maintain consistency in formatting
update the output message to reflect the current version of the class file to ensure compatibility with different Java versions
added a new test class LdapPasswordAuthenticationTest for LDAP user authentication to ensure correct handling of user credentials in LDAP connections
replaced ` OrcInputFormat ` with ` BasicStatsNoJobTask ` in ` TaskCompiler . java ` to improve clarity and
fix an npe when reload on save ( # 2329 )
refactor visibility logic in VisibleAdvance . java to improve code readability and maintainability
fix : do n ' t reconnect in reflector . start ( )
added a condition to check for dynamic number columns in EdgeDataTable and NodeDataTable to ensure compatibility with dynamic number columns in Sparklines
added null checks for groupId and artifactId in RawPom . java to enhance code safety by ensuring non - null values are passed to avoid potential
added null check for apiInfo before assigning it to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve header configuration and caching efficiency
added debug logging for disposing of textures and shaders in FlameRenderer . java to improve debugging capabilities and facilitate
updated scene size from 460 to 520 in FxWindow . java and added context menu functionality in InsnListEditor . java to
added a boundary check for the character length in CSSParser . java to ensure proper handling of character boundaries and prevent index out - of - bounds
added a check for the " isLookAndFeelDecorated " property in UIServiceImpl . java to enable or disable the default look
removed unnecessary ' this ' keyword from method calls in HostRoleCommandDAO to simplify code by eliminating unnecessary ' this ' keyword
updated function references from F5 _ UNKNOWN to F5 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRANSPONDER _
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance code readability and maintainability
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to enhance functionality by integrating color storage capabilities
refactor String class to improve code readability to enhance maintainability and facilitate future feature additions
removed unused SLF4J logger imports from multiple Java files to streamline code and improve readability by eliminating unnecessary dependencies
added a method ` getGlobals ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from the map
added assertions to verify the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method beh
test : migrate CUFilterTest from JUnit 4 to JUnit 5 to ensure compatibility with the latest testing framework
o replace hardcoded path separator ' ; ' value with $ { path . separator }
removed the static modifier from the augmentSuccessViewModelObjects method in AbstractServiceValidateController . java to allow the method to be called without an
added assertions for ' id ' and ' name ' properties in the inheritance test and changed field retrieval method from ` getField ` to ` getDeclaredField `
removed the ` conf ` parameter from the ` Outlink ` constructor across multiple files to simplify the code and improve readability by eliminating
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and improve
added imports and modified the return statement in UseLambdaForFunctionalInterface . java to remove unused imports to improve code clarity and maintainability
removed the appendClassSelector method from the file set addition in TestNGAntTask . java to simplify the file set addition process by directly using
removed unnecessary conditional check for root input type in HiveCardinalityPreservingJoinOptimization . java to streamline code by eliminating unnecessary
fix npe in registryevent when add a map to a registry that do n ' t exist in the registry .
removed redundant assignment of x3 and y3 variables in Intersector . java to streamline code for better readability and maintainability
added default methods for SBE encoding and limit in MessageDecoderFlyweight to indicate that these methods are not implemented by the current version of
updated the Elasticsearch version in the test cases to use the current version instead of a hardcoded value to ensure compatibility with the latest elasticsearch features and
update work receiver to use bytebuffer . wrap ( ) instead of bytebuffer . parse ( byte [ ] messagebytes ) .
added version ID handling and updated cluster name properties in ClusterDefinition and GSInstallerClusterProvider classes to support versioning and improve cluster management functionality
camel - 16462 : camel - ftp - remove the setconfiguration method from camel - ftp
zeppelin - 4892 : zeppelin - 4892 : zeppelin - 489
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified the ` newLocal ` method to
added a check to return early if the basic constraints are - 2 in ForwardBuilder . java and created a new class BuildEEBasicConstraints .
added a new method ` initAfterFirstDbConnection ` to ` JdbcPostgresqlDAO ` to initialize database state after the first database connection is
updated WebSocket configuration to set maximum message size and added input buffer size validation in AbstractWebSocketConnection to ensure that the input buffer size does not exceed
removed undeleteAll and rollbackUndeleteAll variables from SegmentReader . java and added assertions for pendingDeleteCount to streamline deletion logic and
added null check for scopes in ClientRegistration and updated corresponding tests in ClientRegistrationTests to ensure proper handling of null scopes and improve test coverage for
added null check for orderBy before adding it to the expression and explanation to prevent potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit in test
server : do n ' t allow back - up snapshot for kvm
replaced direct call to LogUtils . initHiveLog4j with a variable initialization message to improve code readability and facilit
added a check for non - empty tasks before processing the first element of the asset to avoid potential null pointer exceptions when there are no tasks available
do n ' t try to delete pubsub node if it do n ' t exist .
fix some bug in relationdao , use id instead of id _ property
added error handling for empty barcode results in Code128Reader , Code39Reader , and TruePositivesBlackBoxTestCase to ensure robust error
replaced TreeSet with LinkedHashSet in SSLContextImpl . java to maintain insertion order for cipher suites
added a method to check for control characters in Escaper . java and updated the expected string in InternationalizationTest . java to improve
updated the ` ProviderSqlSource ` and ` SqlProviderTest ` classes to handle ` CharSequence ` instead of ` String ` to improve flexibility
updated imports and modified logic for handling aliasChildren in InternalMNode . java to improve code clarity and prevent potential NullPointerExceptions
added a method to calculate the scroll offset for a page in PagedView . java and updated scrollDelta calculation in Workspace . java to improve
renamed variable ` synthetic ` to ` pruned ` for clarity and refactored code for better readability to improve code readability and
added setAccessible ( true ) method to WidgetInterceptor . java to enable access to the method for better encapsulation
added a conditional check to exclude " database . server . id " from default value initialization in ConnectorConfigGenerator . java to ensure proper handling of
updated Firefox version in AbstractRipper . java from Macintosh to Windows NT and KHTML to ensure compatibility with the latest WebKit
added a menu item to browse the server ' s host in BasicSystemUtils . java to enhance user experience by providing direct access to the server
added a new variable ` actualValueName ` and modified the initialization of ` value ` in ` HandleGetter . java ` to use it to
added error handling for ArrayIndexOutOfBoundsException when building record to improve robustness by preventing crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ runtime ] improve logging in queue and checkpointio
fix null pointer exception when call before avatar postload
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified command - line arguments in PortForwardingContainer . java
added a new array and garbage collection mechanism in ThresholdTest . java to improve memory management and performance during garbage collection
updated logging checks in StdErrLog to include checks for log names and modified logging behavior in StdErrLogTest to ensure proper logging behavior and
fixed - rremoteservicetest . getremoteaddresseservice ( ) method throw npe if invocation with
added methods to manage the selection state of a RadioButton and CheckBox emblem in MultiButton . java to enhance the functionality of the Multi
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to ensure the correct activity is
remove duplicate code in brokercontroller # setfenced ( )
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for connection management to ensure proper resource cleanup and avoid potential memory leaks
refactor background color retrieval in ` ProgramGridCell ` and rename ` getBrandColor ` method to ` getThemeColor ` in ` Utils `
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
refactor type adapter registration in ToolingApiLauncher for improved clarity and consistency to enhance code readability and maintainability by reducing
updated the array of values from 55 to 255 in TestPayloadCheckQuery . java to ensure compatibility with recent changes in payload processing logic
refactor ConsoleReader to streamline character printing logic and add a new test for reading lines with a mask to improve code readability and ensure
added user information to command output in BaseCommand . java to enhance debugging by providing user context during command execution
move test class to package graalvm . compiler . api . test
[ hotfix ] [ test ] remove unused constructor in slotsharinggroup
added a condition to check for Java 8 emulation in StreamExInternals . java and updated the dropWhile logic in StreamExTest .
updated texture and music files from " data / wheel . png " and " data / cloudconnected . ogg " to " data / sys
removed duplicate registration and unregistration of the system dialog receiver in Launcher . java to improve code clarity and ensure proper handling of system dialog
updated import statements in HostsRemovedEvent . java for consistency to improve code clarity and maintainability
updated ` ClientDetailsEntity ` to enable refresh token reuse and added a new property ` allowIntrospection ` to enhance client introspection capabilities and
replaced direct calls to ` write ` with ` writer . write ` and added a ` htmlEncode ` method to handle HTML encoding to ensure
added new link annotations for PhraseQuery , PhrasePrefixQuery , and SpanQuery in the Query class to improve clarity and usability
replaced size ( ) checks with isEmpty ( ) method in CommentsInserter and CommentsParser classes to improve code readability and leverage
replaced the ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` methods with a conditional check for
changed parameter types from A to Object in multiple assertion methods to enhance flexibility by allowing more flexible data types in assertions
updated the package of ThrowingFunction from ' lambda ' to ' exception ' and modified its type parameters to improve clarity and type safety in
refactor uploader behavior handling to use instance methods instead of static methods to improve flexibility and maintainability of preference management
fix : fix npe in typefactory . getelements ( ) ( # 2329 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s bitmap handling
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to improve cl
updated the page indicator icon from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current page
added a new volatile integer ` reinvocations ` and updated logging messages in ` BasicInvocation . java ` to track the number of reinv
updated the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight instead of getHeight to ensure topPadding reflects the
added a break statement in the Recognize class to ensure proper flow control in the code execution
added preference management for locking home screen in multiple classes to enhance user experience by providing haptic feedback when the home screen is locked
updated formula handling logic in ExcelBatchReader and added new test cases for text and numeric formula in TestExcelFormat to improve formula handling and ensure
fixed bug 138267 - immutablefield no longer report false positive for anonymous inner class .
added a user agent field to CommaFeedConfiguration and updated HttpGetter to use it to enable dynamic user agent retrieval based on application settings
updated the ` @ XmlAttribute ` annotation to be optional in ` AvroDataFormat . java ` to ensure that the ` @ XmlAttribute `
changed log level from info to debug for file not found log message to improve logging granularity for better debugging
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to ensure compatibility with newer server versions and handle potential exceptions
camel - 16462 : camel - core - allow to configure include pattern to be false by default
added a vertexColor property to control the visibility of the vertex color in PShape3D to allow customization of color rendering based on the
updated ` SchemaDotFormatter ` and ` DiagramRendererOptionsTest ` to include a ` isPkColumnFiltered ` parameter and modified related logic
removed the use of Shadow . extract for retrieving values from the matrix to simplify the code by eliminating unnecessary shadowing
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
refactor class definition handling in GroovyEngine . java to simplify code and improve readability to enhance maintainability and reduce redundancy in class definition
fix ( plugin ) : move plugin to branding . plugin and add plugin context listener .
removed duplicate command print statement in NativeCodeGenerator . java to streamline output for improved readability and maintainability
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to stream
added a new test method to verify the behavior of ` hasCause ` with different types in ` ThrowableAssert _ hasCause _ Test ` to
updated variable names for flattening and packing in AutomaticDependencies . java to improve clarity and maintainability of the code
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to clarify the purpose of the variable to improve code
added unit tests for setting firefox profile and capability in MarionetteTest . java to ensure proper functionality of Firefox profile and capability settings
camel - 16462 : camel - core - allow to specify route description for camel - jmx and camel - jmx
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the codebase
added a method to set the weight of an edge in the ImporterCSV class to enable dynamic adjustment of edge weights based on user - defined
fix tariff cost calculation to account for current month
updated SQL queries in DatabaseMetaData . java and DatabaseMetaData . java to include additional attributes from pg _ attrdef to enhance metadata retrieval by including
throw an assertion error if binarized sentence be not build by parser
updated the ` User ` class to return a formatted string representation of the user object to provide clearer insights into the user ' s details
http : / / issues . apache . org / jira / browse / amq - 4892 - fix messagehelper . extractbody
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory # fromexecutionvertex to execution
make rosteraccess . cansubscribemember ( ) consistent with groupmanager . isgroupvisible ( ) .
added a classpath reference for " maven . test . classpath " in AbstractJRubyMojo . java and removed unnecessary @ SuppressWarnings annotation in
updated assertions in MethodHandleImpl . java to use ' mtype ' instead of ' rtype ' and added a new userMethod method in MethodHandles
added imports for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory to enhance functionality by integrating StopFilterFactory and Named
updated width and height comparisons in URLImage . java from greater than to equal to ensure correct handling of image dimensions
added a check to ensure the class name does not start with " META - INF / " and modified the logic for appending unique package names to
updated method signatures in ImageDownloadService to include ' final ' keyword and added background task for UI updates to enhance code readability and ensure proper
updated assertions in StackWalkerTest to use a dynamic expected value based on the version check to ensure compatibility with different versions of the OpenJ9
changed the visibility of the ` addViewportJob ` method from protected to public to allow access to the method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method and related tests to simplify the flow building process by eliminating unnecessary partition
removed server restart and shutdown settings from TestDatabase . java to streamline server configuration for improved reliability
added null and empty checks in NodePathsConvertOperator and modified index handling in SchemaQueryMergeOperator to improve robustness and prevent potential NullPointerExceptions
added functionality to retrieve and display the total harvesting time in CallInfoFrame , IceUdpTransportManager , RawUdpTransport
updated font drawing parameters in ParticleEditor . java to improve visual appearance and responsiveness of the particle editor
added logic to update the " keyserver _ port " configuration property in Hadoop environment to ensure that the keyserver _ port is reset when it
added transparent background color to SvgViewerFactory to enhance visual appearance by providing a transparent background
removed the minSdk attribute from ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the code by eliminating unnecessary configurations
refactor the ` containsExactly ` method to accept varargs instead of first and rest parameters to improve clarity and usability of the method
updated Bandwidth configuration and added key validation in Bucket4jFilterFunctions . java to ensure that a valid key is provided before building the proxy
added Javadoc comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code clarity and maintainability for future
updated the Generator class to accept a set of hooks and modified related transformations accordingly to enhance functionality by allowing customizable hooks for query execution
added error handling for NoClassDefFoundError in REngine . java to ensure proper initialization of supported state when no class is found
refactor span handling in TraceWebFilter to utilize SpanAndScope for improved scope management to enhance flexibility in span management within the
updated exception handling in AbstractUpdateCommandStep to provide a fallback message when the cause is null to improve robustness by avoiding null pointer exceptions
updated SolrServerException to include the base URL as a parameter to improve error handling by providing the base URL for better debugging
corrected the logic for setting the landscape orientation in HSSFPrintSetup . java to ensure that the print setup record is not in
updated return statement to handle null input gracefully to improve robustness by preventing potential NullPointerExceptions
added validation to check for invalid argument names in ArgDesc . java to ensure proper error handling for invalid argument names
added background location listener handling in AndroidLocationPlayServiceManager to manage location updates based on the presence of an activity to improve user experience by allowing
changed the condition from checking if primitiveType ! = GL10 . GL _ POINTS to checking if primitiveType equals GL10 . GL
truffleliteral : do n ' t compare the length of the string to the length of the string .
added a method to set the command list in the ComboBox class to ensure the command list reflects the current state of the component
nifi - 2322 : escape filename in tl client manager and toolkit ( # 2323 )
updated ZkCLI . java to include ' localhost ' for Zookeeper commands to improve clarity and usability of the ZkCLI command
updated comparisons in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` . equals ( ) ` instead of
added a conditional check for remoteGrpcStatus before posting a severe console event to ensure that the console event is only sent when the remote
reformatted method signatures in XYItemRenderer . java for consistency to improve code readability and maintainability
add entity id to tick entity if they do n ' t already exist
added a new method ` getErrorString ` to return error string for various error codes in ` GLSurfaceViewAPI18 . java `
mondrian : add a method to get supported locales and add an error message if the locale be not support .
updated the server URI assertion in RFC2616BaseTest . java to use the correct host format to ensure the test verifies the correct URI format
added a method to add a new helper list to the helper list in the Construction class to enhance functionality by allowing dynamic updates to the helper
added a condition to skip the first element of " [ [ " escape sequence in GlyphLayout . java to handle cases where the length of the
added security permissions and refactored context class loader management in Transport and TCPTransport classes to enhance security by using privileged actions for context class
refactor file synchronization logic in ReceiveExternalFilesActivity . java to handle null file paths and ensure folder is not null to improve robustness by
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
removed debug logging for components in BarrowmanCalculator and adjusted the deltap calculation in TubeCalc to improve logging clarity and simplify the
updated column assignment logic in TimelineControllerImpl to differentiate between node and edge tables to ensure proper handling of node and edge columns based on
added a method to register extra components for BrokerAdminApiApplication in BaseBrokerStarter . java to enable the registration of additional broker components for
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT . java ` to verify the behavior of SQL
peergroup . getpeers ( ) : use witness _ version instead of bloom _ filter
added methods to track and manage the state of mjStored and mjUnchangedCycles in TileAbstractBuilder . java to improve performance
updated ConfigNodeSimpleConsensusSnapshotTriggerThreshold to a configurable value and modified RatisClient to accept a Supplier for RatisCons
refactor multiple Java classes to improve code structure and readability to enhance maintainability and clarity of the codebase
added a conditional check for the annotation of ManagedService before registering JMXHelper to ensure that JMXHelper is only registered if it is annotated with Managed
tika - 3746 : fix packageparser to detect non - unicode entry name
added a new file TestSplitThruPhiDivMod . java with methods for division and modulo operations to demonstrate the behavior of
added methods to lookup generic interfaces and superclasses in TemplateRegistry . java to enhance template registration functionality for better type safety and type safety
increased the size of the ByteArrayOutputStream from 512 to 1028 to optimize memory usage for improved performance
added comments to the languagesExcluded array to indicate that Chinese , Indian , Korean , and Farsi symbols are not yet
refactor byte transfer logic in TransferCompletionHandler . java to optimize memory allocation to improve performance by reducing the number of byte transfer operations
change window focus listener to window adapter so that it do n ' t interfere with the popup menu .
refactor error handling in SemanticAnalyzer to check for null source before throwing a SemanticException to improve robustness by ensuring a valid source node is
added calculation of the aabb ' s center and extensions based on the skeletal mesh scale to ensure proper rendering of skeletal mesh elements
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to
added a ComponentScan annotation to SpringWebConfig . java to enable scanning of components in the application context
removed the ` getAccount ` method from ` UserListItem ` to streamline the account retrieval process by eliminating unnecessary method
added unit tests for installing packages in ShadowPackageManagerTest . java and modified process name assignment logic in ShadowPackageManager . java to ensure
refactor AvailableSettings class for improved readability to enhance maintainability and facilitate future feature additions
added TransactionTrace class with initialization , execution , and finalize methods to facilitate transaction tracking in the application
add ` ` hazelcast . client . shuffle . member . list ' ' and ` ` hazelcast . client . shuffle . member . list
replaced Text with CrawlDatum in SegmentReader . java to improve code clarity by using a more suitable data type
rename JsonDeserializer class to improve clarity to enhance code readability and maintainability
refactor TsfileDBConfig and QueryProcessExecutor to use ThreadLocal for fetch size management to improve thread safety and ensure consistent fetch size management
updated error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify that the
added import statement for ExecutionContext in TaskletStep . java to enable execution context management in batch processing
initialize the title variable to an empty string to ensure a default value is used for the title variable
fix asynchttpclientresponse . body ( ) return null when body be null
deprecate embeddedserverinstance for backwards compatibility
use reflection to register mac event in jabrefframe ( fixes # 709 )
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated related references to improve cl
simplified the return statement in the toEnum method call to improve code readability and maintainability
made the ` hideUnprivilegedObjects ` variable final in ` PgConnection . java ` to ensure immutability of the ` hide
change log level from info to fine in threadedacousticscorer . java and add assert to audiodatasourcestest . java
added a conditional check for Android Q and saving Giphy video URL in IOUtils . java to ensure compatibility with Android Q and save Giph
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 563 : add
refactor multiple Java classes related to ticket handling to improve code organization and maintainability
replaced manual logger retrieval logic with computeIfAbsent to simplify code and improve readability
removed the DataOutputOutputStream class and updated imports in HbaseObjectWritableFor96Migration . java to streamline code by eliminating unnecessary
removed " hive . stats . column . autogather " configuration from multiple test cases in TestAcidOnTez . java to streamline
changed log level from info to debug in MavenEnhancePlugin . java to provide more granular logging during development
replaced hardcoded " AndroidOpenSSL " with a dynamic retrieval of the default provider name to improve flexibility and maintainability of the provider
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to ensure all non - Captor fields are
added checks to print warnings for disabled classes and methods in TestSuiteBuilder . java to improve error handling by throwing an exception when no test cases
updated GroovyAutoComplete . java and GroovyLanguage . java to improve prefix handling and import statements to enhance code readability and maintainability while ensuring
update import to use graphhopperosm instead of graphhopper
simonstewart : add retry config to the client for remote client
changed the visibility of the mHideSysUiScrim variable from final to non - final and added functionality to control the visibility of the
added cancellation logic and modified method signatures in Call , OkHttpCall , and CallTest classes to improve call management and error handling to ensure proper
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance code readability and maintainability
updated RequestMatcher to extend from Spring Security ' s matcher interface to enhance flexibility in matching requests within the application
added IF to the list of supported types in DeferredAttr . java and created a new abstract class ImplicitLambdaConsideredForApplicability
[ j2kt ] add test for boxed type and value of .
added tests for applying display metrics with and without density in DeviceConfigTest . java and updated display dimensions handling in DeviceConfig . java to ensure
replaced IOException with RuntimeException in ExternalViewReaderTest , modified timestamp initialization in PinotDataTypeTest , and simplified URL addition in PluginClassLoader to
updated the icon resource from a drawable to a mipmap icon to improve the visual appearance of the icon in the UI
added content text setting to errorBuilder in FileUploader . java to improve error handling by displaying content in error messages
refactor ConcurrentHashMap class implementation to improve performance and maintainability of the code
added methods to adapt user trades from an array of AbucoinsFill objects and updated related classes to utilize these new methods to improve
updated plot removal logic in PlotSquared . java and modified player clearing logic in Claim . java and Delete . java to improve gameplay experience by
simonstewart : add proxy support for htmlunitdriver
added support for VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY types in the database
http : / / issues . apache . org / jira / browse / amq - 4892 - fix cookie handling to work with
added synchronization to the initialization of ` language . simpleTypeMap [ idx ] ` to ensure thread safety when accessing shared resources
updated context handling in InboundBuffer to utilize ContextInternal and improved thread checks to enhance context validation and ensure correct thread context is used
added a new method ` deadServerNoTimeout ` and modified the timeout handling in the ` LdapTimeoutTest ` class to improve test reliability
updated the usage message from " UniocdeData . txt " to " UnicodeData . txt " in CharacterName . java to cl
camel - 16462 : camel - cxf should set the operation name to the inout header for the relay test
refactor multiple UI classes for consistency and clarity to enhance maintainability and readability of the codebase
added BoosterSet parameter handling in ComponentAssemblySaver . java and modified return value in BoosterSet . java to ensure proper representation of
add proxy authentication for jabref ( # 3640 )
replaced instances of ` BLOCKCHAIN __ FORK _ COUNT ` with ` BLOCKCHAIN _ FORK _ COUNT ` and modified interval
replace InternalError throwing with returning false to indicate that the compiler stub is not supported for JEP 359 support
updated import statements in TestIPCUtil . java to use Apache Commons Logging instead of Mortbay Log to improve logging consistency and
removed unnecessary chunked transfer handling from the NettyRoutingFilter to simplify the code and improve readability by eliminating unnecessary complexity
added a call to clearAttributes ( ) in PatternTokenizer . java to reset the attributes before processing new patterns
updated ` VerificationAfterDelayImpl ` to include a polling period and improved error handling for verification failures to enhance verification flexibility by allowing different
added compaction functionality to SessionState and modified masking logic in SemanticAnalyzer to ensure data integrity by preventing compaction during masking operations
[ zeppelin - 4892 ] copy all jar file in zeppelin . sh after zeppel
hbase - 26465 fix typo in hbaseadmin . gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated ` calcXBounds ` methods in ` BarLineChartBase ` , ` CombinedChartRenderer ` , ` Renderer ` , and ` Renderer
refactor XML parsing to ensure proper cleanup of content and error handlers to improve resource management and prevent potential memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to include a
added a null check before closing the result set in JdbcExecutor . java to avoid potential NullPointerExceptions when closing the result set
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 to reflect the latest database version changes
fixed bug 138367 - usestringbufferlength no longer report false positive for empty literal .
removed error logging in RemoteSparkJobMonitor . java to streamline error handling and improve code clarity
modified the createDb ( ) method to return a Connection object instead of void to ensure proper resource management and avoid potential memory leaks
rename CreateCustomMetric , ListResources , and ListResourcesTest classes to improve clarity and consistency in naming conventions
hbase - 26402 add config option hbase . hstore . compaction . max . size . offpeak to limit off - peak
updated BitstampDepositAddress to handle both " address " and " address " cases and added a new DepositAddressJSONTest class
replace IllegalStateException with response . abort in BufferingResponseListener . java to handle scenarios where the buffer capacity is exceeded
updated linkInDeletedDirectories check to use absolute path to ensure correct handling of file paths in deleted directories
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` instead of ` Event ` and refactored ` DefaultMetricsRegistry ` to use
refactor network interface iteration to check for multicast support before returning it to improve code clarity and ensure only supported network interfaces are returned
replaced the existing validation check for " 1 : any " with a loop to iterate over all valid checksums to streamline the validation process
added a clone method to the BufferedChecksumIndexInput class to indicate that the clone operation is not supported
modify the return condition in the Circle class to use a variable ` radius ` instead of ` Math . sqrt ` to improve code readability and
added a conditional check before setting the frequency band and modified the return statement in the P25Channel class to ensure that the frequency band is only
refactor GestureDetector to replace tapSquareSize with tapRectangleWidth and tapRectangleHeight for improved clarity to enhance code readability
set default _ replicate _ on _ write to false by default
added a new query parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in ` Util ` to
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes to provide a standardized way to retrieve the
refactor error handling and synchronization logic in FileActivity and FileDisplayActivity to improve code clarity and streamline synchronization process
added error handling for writing to a stream in ForeignIncubatorQuicheConnection and JnaQuicheConnection to improve robustness
added a boolean parameter to the method call in JavascriptContext . java to enable additional functionality in the JavaScript context handling
removed alignment parameters from TableCell constructor calls in BaseTextFormattingHelper . java and added a default constructor in TableCell . java to streamline
added a new file ` TracingAutoConfiguration . java ` for tracing configuration in the Cloud Foundry identity UAA package to facilitate
add a second parameter to the submission list to ensure that the second parameter is correctly included in the content
updated the ` getPrunedQueryableSegments ` method to accept a list of ` IndexSegment ` instead of a list of ` IndexSegment
refactor VertxBufferTest class to improve test coverage to enhance reliability of buffer operations
refactor messagesubmissionchunk . readmessagedate and add unit test for it .
changed the visibility of mContext from private to protected to allow subclasses to access and override the mContext variable
removed unnecessary imports from ShowTablesOperation and ShowViewsOperation to streamline code by eliminating unnecessary dependencies
added a new class MongoDataIntegrityViolationException and updated MongoTemplate to use it to improve exception handling for data integrity violations in MongoDB operations
[ hotfix ] [ runtime ] fix return value of jobcoordinationservice . jobcompletionfuture ( )
replaced bitsToHumanReadable method with bytesToHumanReadable and added a new MIME type2HUmanReadable map to improve clarity
refactor merge policy creation in TestUpgradeIndexMergePolicy and add a new test method in TestMergeOnFlushMergePolicy to simplify merge policy
added a check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
update error message in CpuNDArrayFactory . java for clarity to improve understanding of performance issues related to CPU support
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter and updated its implementation to accept an input stream for reference properties to
added null checks for incoming fields , TermsEnum , DocsEnum , and PositionEnum in FilterLeafReader . java to ensure robustness by
add key size requirement to jcecrmfencryptorbuilder .
updated exception handling in NetSocketReader and removed unused constructor parameters in SoftEndOfStreamException to improve clarity of error messages and simplify network interface
removed @ Inject annotations from multiple Java classes to streamline code and improve readability by eliminating unnecessary imports
updated the expected size from 9 to 10 in BundledDistributionTest . java and added assertions in PostgreSQLTest . java to improve test coverage for
[ hotfix ] [ stream ] allow user to specify the job name for print and log
refactor scaling logic in OverviewState . java to differentiate between two - panel layouts to improve layout responsiveness based on device profile
updated IcePlainsBiome to extend SnowyBiome instead of GrassyBiome and modified PopulatorTree initialization to
removed unnecessary ` DateTimeZone ` parameter from ` getMinTime ` and ` getMaxTime ` methods in ` StorageUtils ` to simplify method signatures and improve
add an ` ` isqualified ' ' flag to the ` ` thisreference ' ' class to be able to determine if a type be qual
updated regex pattern in XhamsterRipper to allow for a wider range of URLs to enhance flexibility in matching xhamster
fix entity collection in glowworld ( fixes # 10 )
hhh - 14663 - oracledialect . gettablename ( ) should return the schema name if it ' s null or empty
fix an npe in the console filter ( # 4338 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select multiple files in the
[ java ] update termoffset to use termlengthmask instead of termwindowlength .
fix checkstyle issue in org . apache . micrometer . model . guildupdateownerevent
updated inPortalTicks increment logic in Player and Entity classes to limit the number of inPortalTicks based on whether the player is a creative and
added functionality to handle chart compressed state in ClusterMonitorTileSkin . java to improve visual presentation of chart items based on chart data size
refactor multiple transactional codec template classes to improve code organization and maintainability
change variable types from int to long for length calculations in Base64 . java to ensure compatibility with larger binary data sizes and prevent potential overflow issues
removed null check for header in RendererConfiguration . java to simplify the condition for null renderer checks
cloudstack - 7031 : do n ' t allow disk offering change on volume with custom service offering ( # 7031
updated import statements in HitbtcAdapters . java and refactored LimitOrder construction in HitbtcAdapters . java to improve
rename ` idleCount ` to ` consecutiveIdleCount ` for clarity to improve code readability and maintain consistency in naming conventions
updated the description of the JRuby Scripting service from " jruby " to " jrubyscripting " to clarify the purpose
updated variable name from ' name ' to ' displayName ' in ConfigCategory . java to improve code clarity by using a more descriptive variable
updated the condition in ParticipateAssetIssueActuator to include an additional check for negative exchangeAmount to ensure accurate validation of exchangeAmount values
modified the iteration logic in FeedUtils . java to limit the number of iterations to 10 to improve performance by eliminating unnecessary iterations
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to verify the functionality of reading HDF4 files
[ calcite - 6092 ] fix test for cast ( ` ` 12 : 55 : 18 ' ' )
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintainability
added methods to quietly close multiple AutoCloseable instances in CloseHelper . java to improve resource management by ensuring all AutoCloseable instances are
updated confirmation button resource from a string resource to a common yes string to improve user experience by providing a clearer confirmation confirmation prompt
added a null check before drawing images in the Pixmap class to avoid unnecessary drawing operations when dimensions are zero
replaced the use of ReflectionHelpers with a direct invocation for the ` defineClass ` method in ` UnsafeAccess . java ` to improve compatibility
updated the regex pattern for hostname validation in GUIUtil . java and added test cases in GUIUtilTest . java to improve regex validation accuracy and
replace boolean conflict tracking with long conflicts counting in CachedRowSetWriter . java to improve clarity and maintainability of the conflict detection logic
add support for pubspec . yaml ( # 4891 )
added a condition to return the reference if the reference is the same as the current reference in ReferenceMemory . java to ensure proper handling of references
added logic to inject seed files and improved error handling in the Injector class to enhance robustness by ensuring only valid seed files are processed and
added a condition to check if ` hideOriginal ` is true before hiding the original view to ensure that the original view is not hidden when
updated the calculation of maxNodes and modified the conditional check for maxTrips in DefaultLoopPolicies . java to ensure maxNodes does not exceed
added a check for texture coordinate types before creating texture data objects in CombinedTexture . java and introduced a new method in UVCoordinatesGenerator .
added error handling for file deletion in EncodeActivity and improved input validation in DecodedBitStreamParser to enhance robustness by logging failures and
camel - 20297 camel - tracing : add support for close a duration in producer and consumer .
updated the substring calculation in HandleDAOImpl . java to use oldPrefixLength instead of locate to ensure correct handling of prefix lengths in queries
replaced the addition of elements to the converted list with a constructor that initializes it directly from the collection to simplify the code and improve readability
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used in favor of an alternative implementation
added a warning dialog for nightly builds in MainWindow to inform users about the latest features and bugs related to nightly builds
[ # 7372 ] feedback session result bundle : sort response by team name ( # 7373 )
updated the return message in UnnecessaryThrows . java to clarify the removal of unnecessary ` throws ` declarations
deleted ` CacheApplication . java ` and replaced ` CacheController ` with ` CommonsApplication ` in ` ShareActivity . java ` to stream
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated configuration handling in RuntimeEnvironment for devices running KitKat and above to ensure compatibility with newer Android versions and improve resource management
added a new constant ` VERSION _ DEF _ STACK _ REPO _ LINK _ EXISTS ` and a corresponding test in ` StackManagerTest `
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
patch by jbellis ; review by brandonwilliams for cassandra - 1340
added import statements for internal resolver helpers and readers in CheckPackageAccess . java to enhance package access management for XML processing
rename methods from ` save ` to ` add ` and ` persistExecutionContext ` to ` updateExecutionContext ` across multiple classes to improve cl
do n ' t remove loopbegin from loop exit node , if it ' s a loop exit node
replaced instances of RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController . java to improve recycler view management and
added a conditional check for terminal support in ConsoleReader . java to ensure compatibility with devices that do not support terminal functionality
changed the data type of ` timeAllowed ` from ` long ` to ` int ` and updated related logic in ` CloudExitableDirectoryReader
added a session validity check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure that sessions are only processed if they are valid
refactor the handling of column names in ChangedIndexChangeGenerator to improve code readability and maintainability by reducing redundancy
replace Vector with ArrayList for button management in ButtonGroup . java to improve performance and simplify code by using a more suitable data structure
updated UserManagerCompat and UserManagerCompatVL to implement new UserManagerCompatVM and UserManagerCompatVNMr1 implementations to
added methods to retrieve database major and minor version in MockDatabase , AbstractDatabase , and HibernateDatabase classes , and updated ReorganizeTable
updated ActionGraphCache . java to use MapDifference for rule comparison and added a constant for maximum mismatch rules to improve clarity and maintainability
added LockDatabaseDesc and UnlockDatabaseDesc classes to handle database lock and unlock functionality in the Hive query plan
refactored RankingUIModel to use setter methods for model properties to improve code readability and maintainability by reducing redundancy
added handling for disconnect messages in HandshakeHandler . java and updated logging in NodeImpl . java to improve connection stability and enhance logging clarity
added a test method for setting and deleting storage groups in IoTDBAuthorizationIT . java and updated AuthorityChecker . java to include a new
fix : change ` : : cloud : : d ` reference to ` : : gcp : : gcp : : gcp :
added handling for ` J . VariableDeclarations . NamedVariable ` and improved type validation logic in ` Assertions ` , ` FindMissingTypes
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to facilitate
refactor CountersManager to use CachedEpochClock and update buffer capacity checks to improve code clarity and ensure proper handling of buffer sizes
updated logging statements in MultiSteps and SendEmail classes to use placeholder syntax to improve readability and maintain consistency in logging practices
[ flink - 20613 ] [ table - planner - blink ] fix join key cloning in joindesc
added PrincipalResolver support to WebAuthnConfiguration to enhance authentication handler registration with a default principal resolver
added searchPaths parameter to the addSettingsFromFile method and updated related tests to include additional search paths to enhance functionality by allowing users to specify additional
made several lists and collections final in Oracle . java to enforce immutability and improve code safety
[ hotfix ] disable unaligned checkpointing option until rescaling of unaligned checkpoint
add unsupportedoperationvisitor . isvalidated ( true ) to prevent unsupportedoperationexception .
add log to compiletheworld to make it easy to debug build failure
added a check to throw an exception for non - LocalVariable instances in LambdaRewriter . java to ensure proper handling of non - LocalVariable
added support for MySQL timestamp handling in CreateTableGenerator . java to ensure proper handling of NULL values for timestamp columns in MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper context class loader management during execution
added a condition to set an ejection delay for the first stage in the SimulationListHandler to ensure that the motor ' s ejection
updated the runner configuration to use BeanDefinitionOrderOrder instead of FunctionalRunnerConfig to improve clarity and consistency in the runner configuration
refactor TransactionUtil2 class for improved transaction handling to enhance performance and maintainability of transaction management
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance flexibility in
added a null check for the collection reference in ClusterState . java to ensure that a null DocCollection is returned when the collection is null to
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` to ensure
added methods to retrieve foreign database and schema names in ForeignKeyColumn and related classes to enhance foreign column functionality by allowing configuration of foreign database and schema
[ java ] throw a timeoutexception when an election fail to join leader .
replaced static import of Shadows . shadowOf with a private method Shadow . extract in ShadowActivity . java and ShadowBluetoothDevice .
refactor selection root handling in FileSelection . java and add a new test for DRILL - 4192 in TestBugFixes .
add oninventorytick , deprecate for removal in 1.20 . 1
fix ( export ) : add war extension to exportinterceptorplugin
added a null check before calling invalidateOptionsMenu ( ) on getSherlockActivity ( ) to avoid potential NullPointerException when accessing getSherlockActivity
updated binding logic for widget options in AppsCustomizePagedView and Launcher classes to ensure correct binding behavior when options are provided
[ ecobee ] add support for the eobee sensor capability ( # 11937 )
reformatted code for improved readability and consistency in OperationSetServerStoredContactInfoFacebookImpl . java to enhance code maintainability and ad
added environment variables " AAPT " and " AAPT2 " to Genrule . java and updated tests in GenruleTest . java to
only dump access table if truffleinstrumentBranches be enable .
added a null check before disposing of the message to prevent potential NullPointerException when disposing of a message
added @ Getter annotation to the db field and changed the init ( ) method visibility to public in TransactionCacheDB to enhance encapsulation and
updated log warning messages in CoreContainer . java to clarify that LogWatcher is not yet implemented for Log4j to provide clearer
replaced printStackTrace ( ) calls with fail ( ) and added return statements in CategoryPlotTests . java to improve error handling and provide clearer
added a new class ` SmallByteArrayOutputStream ` and modified the ` dial ` method in ` IOSImplementation . java ` to handle small
use vertexbuffer . type instead of string for shader attribute
changed the connection configuration from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java
added null checks for firstExchangeTimestamp and lastExchangeCompletedTimestamp in RouteInfo . java to ensure proper handling of null values to avoid potential NullPointerException
updated default language handling in TestHtmlTag . java and added new test cases in TestUseOption . java and C1 . java to enhance
updated condition to check if the result is incomplete and the size of the items list is greater than 10 to ensure that the completion process does not
updated argument handling in HybridClusterIntegrationTestCommandLineRunner to support a new time column name to improve clarity and functionality of the command line
updated output format handling to differentiate between " htmlx " and " svg . html " extensions to ensure correct file extension is used based on
updated condition to check if QSB is enabled in DeviceProfile . java to ensure proper handling of QSB margin adjustments when QSB is
added equals and hashCode methods to AnimationList and replaced null checks with Objects . equals in SceneKey and GltfModelKey to improve object
added a new ` _ date ` field and its setter in ` AbstractGenerator ` , modified the ` setDate ` method in ` HttpGenerator `
replaced instances of Adler32 with CRC32 in Store . java to standardize CRC32 implementation for improved performance
cloudstack - 1343 : fix typo in xen . heartbeat . interval config
added a new constant ` ZERO _ AREA _ FIN ` and updated geometry warning checks in ` FinSetCalc . java ` to enhance warning
[ flink - 26462 ] [ e connector ] fix document metadata serialization ( # 26462 )
hhh - 14714 - add trunc ( ) and datetrunc ( ) function to h2 and oracle dialect ( # 148 )
added error handling for memory pool not found in MetricUtils . java and updated corresponding test cases in MetricUtilsTest . java to improve error reporting
updated UserContext to include JavaScript usage and improved error handling in UserContext . java , modified return statements in FileAccess . java , and
updated error messages to use ` RUNTIME _ PROTOTYPE _ TYPE ` and ` Types . PROTOTYPE _ FACTORY _
update BACKFILL endpoint from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java to
replace instances of ` new DataWord ( ) ` with ` new DataWord ( 1 ) ` and update return statements in ` PrecompiledContracts
refactor item handling in AllAppsContainerView to use child views instead of adapter items to improve code readability and maintainability by reducing
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the start method comments in ResourceHandlerTest . java and ServletContextHandler . java to clarify the intended behavior after ContextHandlerCollection is
removed custom workspace condition in Cling . java to streamline code logic for better readability and maintainability
truffle : remove unnecessary assertion in trufflejdkservices . java
added JUnit @ Ignore annotation to ClassicSuperHandlingTest . java to indicate that the test does not make sense until call - through is turned
updated import statements to use the correct package structure for ItBit exchange and market data classes to ensure compatibility with the latest version of ItBit API
refactoring : use parameter . isdefined ( ) instead of cast to string [ ]
added ` private constructor ` to ` Utils ` , ` ApplicationUtils ` , ` AsyncSocketFactory ` , and ` Whois ` classes to
added a try - with - resources statement for the ObjectInputStream in RegionsApiUtil . java to handle potential IOException during deserialization to ensure proper resource
updated serialization methods to use " java . util . Vector " and " java . util . Hashtable " for type checks and improved exception handling
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to improve logging clarity by including the table
added trim ( ) method to fragmentList size check to ensure that fragmentList does not contain leading or trailing whitespace
fix resourcepackfilenotfoundexception to use modfile . getfilepath ( ) instead of path . getfile ( )
refactor TransformerBuilder handling and button visibility in PartitionToolbar . java for improved clarity and functionality to enhance code readability and maintainability
removed unnecessary condition for showing as grid in RecentsView . java to streamline scrolling logic for better readability and performance
refactor ` calculate ` methods to return a ` BMIViewObject ` instead of a ` Map < String , String > ` to improve
removed unnecessary comparator from thenComparing method in QueryCommand . java to simplify the comparison logic for better readability and performance
fix damage calculation for hay bale
refactor environment symbol handling to use a List instead of a LinkedList for improved readability to enhance code clarity and maintainability while ensuring
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest to enhance configuration flexibility by allowing custom plugin properties to be
updated condition to check if hashTable is not empty instead of null to ensure proper handling of empty hashTable cases
updated timestamp handling in ` Timestamp . java ` and refactored test cases in ` TimestampTest . java ` to improve clarity and consistency
[ java ] remove unused archivectx field from cluster service agent .
added a condition to check if the compilation is not compiled before proceeding with the method type assertion to ensure that the assertion only executes when the
added new test methods for image2 and image2 _ joined in AbstractTest . java and added corresponding test cases in various test classes to enhance
renamed the ` getInitialValue ` method to ` getOverridenDefaultValue ` and added a ` addChangeListener ` method in ` Toggl
updated log messages in DockerClientFactory to include placeholder placeholder for better readability to improve logging clarity by providing more informative information about the
added a conditional check to return early if the current platform is Android to optimize performance by avoiding unnecessary operations on unsupported platforms
use hamcrest assertion instead of junit in test
added new functional interfaces BytePredicate , ByteToLongFunction , FloatToLongFunction , and ShortToLongFunction to provide functional interfaces for byte , float ,
changed the return type of getSubsColor ( ) and setSubsColor ( ) methods from int to String and updated related logging statements to enhance
added a conditional check before deregistering the invocation registry to ensure that the invocation is only deregistered if the future completes
replaced manual frame handling with output method in AbstractWebSocketConnection . java to streamline WebSocket connection management and improve code readability
added a conditional check for the " redirect " status in the LoginActivity and updated the SignupActivity to include the " Redirected " flag
added a new class ` ShadowCheckedTextView ` to implement shadow functionality for ` CheckedTextView ` to enable testing of the ` CheckedText
added Serializable interface to ParserState class and changed member variables to be transient in AccessorProperty and Property classes to enable serialization of ParserState instances
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enhance certificate validation by including identr
removed redundant attribute settings for TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline code by eliminating
smack - 1353 : update occupant ' s nickname from presence . smack - 1353
updated QuicConnection and QuicSession constructors to include a context map and modified connection handling to enhance session management by associating context with connection
updated MergeScheduler and merge policy handling in CreateIndexTask . java to utilize LogMergePolicy for improved configuration management to enhance flexibility
refactor character type checks and variable assignments in ICU4JImpl and TextPosition classes to improve code readability and maintainability by reducing
added support for ComputedDateValue , ComputedNumericValue , and ComputedDateValue in the AddDefaultValueChange class to enhance default value
refactor NbtScoreboardIoService to improve code structure to enhance maintainability and readability of the code
( chore ) camel - saml2 : do n ' t throw exception if resource be not writable
changed the visibility of the ` printer ` variable from private to protected and refactored the printer creation logic in ` GraphPrinterDumpHandler `
added BigDecimal rounding and set average price for open orders in HuobiAdapters . java to ensure proper handling of average price calculations during order processing
updated ProjectionOperation and TypeBasedAggregationOperationContext to use Field instead of String for fields and improved type handling to enhance code clarity and
modified the ` addViewer0 ` method to check if the player is already in the ` viewers ` list before sending a new packet to
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable to enhance drawable state management for better visual feedback
refactor SPDYClient to use separate connection and compression factory instances to improve code readability and maintainability by reducing redundancy in
fix npe in protostuffobjectoutput when write null value
pdfbox - 4071 : improve code style , remove unnecessary whitespace
refactor BarrowmanCalculator class for improved performance to enhance the efficiency of Barrowman calculations
do n ' t draw ax when there be only one ax
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` in ` Texture .
updated the returnToWorkspace method call in XmlWorkflowServiceImpl . java to ensure consistency in workspace item retrieval
added SSL context and hostname verification for custom URL connections in CustomUrlJob . java and created CustomUrlTrustEverything . java for testing SSL
refactor the way used clock rate is retrieved in EncodingConfigurationTableModel and MediaStreamStatsImpl to improve clarity and maintainability of the
refactor TextureAtlas class and improve texture handling to enhance performance and maintainability of texture management
updated the method to return the module name instead of the product name and added a method to set the module name in the AppleLibraryBuilder
[ hotfix ] fix deadlock in testslot # finishreleaseprocess
# 162 - support findids ( ) with inheritance ( # 163 )
updated WebSocketServletRFCTest to validate response headers and streamline buffer handling to improve code clarity and ensure proper response header validation during WebSocket
[ wasm ] fix race condition in wasmfunctioninstance and wasmfunctionnode
add ` ` ttl ' ' property to log collection plugin ( # 1193 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomChangeWrapper , CustomPreconditionWrapper ,
updated imports and refactored server setup and teardown methods in DeploymentExceptionTest . java to improve code organization and enhance server management functionality
added exception handling for initialization in CommonsApplication and modified vector drawable creation in NearbyController to improve robustness by catching potential resource
added a null and empty check for objectName before trimming it to ensure that objectName is not null or empty before proceeding
updated error messages in ` Command . java ` and ` TestPrint . java ` to include the exception message to improve clarity of error reporting
[ hotfix ] [ table - planner - blink ] make planner and executor class constant static final
updated variable names and improved subject handling in KeyTool . java and Resources . java to enhance code clarity and ensure proper handling of null
added a deprecation annotation to RuntimeOptions . java to indicate that the class is outdated and should not be used in future development
replaced byte buffer encoding with a direct string encoding method to simplify code and improve performance by eliminating unnecessary byte array creation
added a new interface ` PermissionEvaluator ` with a ` hasPermission ` method in the ` org . springframework . security . expression ` package to
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and implemented cleanup logic in ` LineReader
hbase - 26400 fix npe in masterfilesystem # isserverinuse ( )
replaced instances of SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ MERKLE _
refactor expandwar to use urlconnection instead of jarfile
fix ( netty ) : improve error handling in httpclient
changed the container ' s position from center to centerAbsolute in Picker . java to ensure the wrapper is centered on an absolute position for better
[ flink - 11345 ] [ network ] fix the bug that memory segment be not be recycle in the networkbufferpool when it
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper cleanup of MBeanServer
updated imports and annotations in AbstractIT . java to use RetryTestRule instead of AndroidJUnit4 to improve test reliability by allowing retries
refactor QueryStateMachine to remove the auto - commit parameter and improve transaction management logic to enhance clarity and maintainability of the code by
fix checkstyle issue in net . hydromatic . optiq . test
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ test ] remove unnecessary anonymous inner class in streamtasktestharness
refactor request handling logic in ` Request . java ` and add a new test for HTTP CONNECT requests in ` RequestTest . java ` to
updated the handling of storage points in MainApp and added a method to get legacy available storage points in DataStorageProvider to improve compatibility with legacy
added methods to handle available and unavailable sessions in the SessionManager class to improve session management by updating priority based on session priority
added " liquibase . pro " to the package scan list in ServiceLocator . java to enable scanning of Liquibase pro packages
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in the ` MainApp ` and ` SyncedFolderProvider
updated the ` loadWithNewGlobal ` method to accept an additional ` Object [ ] ` parameter and modified its implementation accordingly to enhance functionality by
refactor FastPathResolver to improve path matching logic to enhance readability and maintainability of the code
replaced ` length ( ) ` method calls with ` toIntExact ( ) ` for better size comparison in ` HiveClientModule ` to improve
rename methods and variables related to randomization depth from " isExceedRandomizationDepth " to " hasAlreadyRandomizedType " across multiple classes
added support for " LEAD " and " LAG " functions in UnsupportedOperatorsVisitor . java and corresponding tests in TestWindowFrame . java
added a line to clear the proxy request headers in AbstractProxyServlet . java to ensure that the proxy request headers are cleared before processing requests
added a conditional check to skip tests if SA attach is not expected to work to improve test stability by skipping unnecessary tests when SA attach is
added null check for bgColor before checking its alpha value in GraphicsDevice . java and created TranslucentWindow . java for fullscreen window
added a check to display an error message if there is no user information available to enhance user experience by providing feedback when no user information is available
added custom field serialization for PrecompiledHeaders in PrecompiledHeaderData . java to ensure precompiled headers can not be used on different machine to
[ hotfix ] [ table - connector - kafkatablesink ] fix update - mode property in kafkatablesink
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the functionality of named outputs in various scenarios to ensure that named outputs can
updated regex pattern and added content comparison logic in FileSettings . java to ensure proper formatting of settings and avoid duplicate entries
[ hotfix ] fix npe in statelessflow and statelesscontrollerserviceinitializationcontext
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added a taskbar mode switch annotation to the TaplTestsQuickstep class to enable persistent taskbar behavior in persistent mode
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
add more logging for itemloadingexception to make it easy to debug .
removed unused imports and added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for
fix ( opengl ) : do n ' t get the current pixel scale for 2x
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and ease of understanding for future developers
refactor CsvBulkLoadToolIT and QueryUtil to simplify server and client properties handling to improve code readability and maintainability by eliminating
replaced File . separatorChar and File . pathSeparatorChar with underscores in displayName to ensure consistent formatting of file paths across different operating systems
use seekableinputstream in wakeloader so that we can seek more than 32 bit audio file
added support for repeating the first line indent in ColumnText by introducing a boolean flag to control indentation behavior in the column text
change the type casting in the equals method from Oid to Object to ensure type safety when comparing Oid instances
move metric and health check initialization to separate method to improve code readability and maintainability by reducing redundancy
do n ' t use controlflowanchored instead of controlflowanchornode
added a line to disable focus painting for button elements in the WindowsPlacesBar class to improve user experience by preventing unintended focus
added checks for UniqueConstraint and ForeignKey in the DatabaseSnapshot class to ensure proper handling of backing index for unique constraints and foreign keys
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and updated ` AccountAPI ` to use it
add check for dc . title in community group creation
do n ' t throw an error if there be no utterance
added unit test base on user forum issue
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and added a
increased the fast scrolling threshold from 40ms to 10ms to improve performance by reducing the fast scrolling duration
replace ` System . class . getName ( ) ` with ` Ljava / lang / System ` in ` HotSpotResolvedJavaField .
hhh - 13644 : procedurecallimpl . getresultstream ( ) should return a stream of the result list .
updated the initialization of ` apiProperties ` to handle potential null values to ensure a default empty map is used when ` getApiProperties ( ) `
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text frame payloads in WebSocket communication
simonstewart : fix flaky test : wait for element to be present
refactor latitude and longitude generation logic in RandomGeo3dShapeGenerator . java for improved clarity and efficiency to enhance randomness and
added a keepAlive method to manage ClassLoader instances to ensure proper resource management and prevent potential memory leaks
changed the return value from false to true in SQLiteDatabase . java to reflect the intended functionality of the database operation
refactor conditional logic for checking concurrent signature in ` FindJSR166LockMonitorenter . java ` to improve readability and
added MkdirStep to multiple Java files and updated assertions in FatBinaryTest to ensure proper directory structure for output files in the build process
updated coordinate calculations and error handling in MeshLeveler . java to improve readability and provide more informative error messages for alignment errors
[ rhdm - 3030 ] avoid kie - pmml execution when jpmml module be not on classpath ( # 334
rename locationMode to thermalStatus in ShadowPowerManager . java to improve clarity by using a more descriptive variable name
added support for macOS temporary directory creation in MountableFile . java to ensure compatibility with different operating systems when creating temporary directories
disable memory map buffer on window for prj file reader
added a null check for the organization in the pom . xml file to ensure that Plugis must have an organization in the pom . xml
updated license information in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the codebase
updated the method to use the system ' s class path instead of a hardcoded empty string to ensure compatibility with different Java environments
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv , and
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to address issue # 3198 regarding Javadoc formatting
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher interface by default
added a div tag with a ' noPrint ' class to the HTML output in HtmlThreadInformationsReport . java to improve the visibility of
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and modified version constants in multiple files
added macosx symbolicator and task handles in BsdDebuggerLocal . java and modified platform detection in PlatformInfo . java to support mac
improve memory management by use weakreference
do n ' t log connection reset exception in networkdispatcher . log ( )
[ java ] default to admin directory when conductor bytebuffers be null .
added a break statement in TouchImageView . java to ensure proper flow control in the code execution
chore ( regen ) : update ruby and python dependency ( # 14 )
removed SSL handshake handling logic from FeedableBodyGenerator . java to streamline the code by eliminating unnecessary handshake handling
added conditional checks for Java ' s Object and CONTRAVARIANT types in TypeUtils . java to ensure proper handling of type variables and bounds
replace NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush to improve thread safety for concurrent access
added null check for errs and improved error handling in MemberEnter and JavaCompiler classes to enhance robustness by preventing potential NullPointerExceptions
replaced ` SWT . NO _ BACKGROUND ` with ` SWT . NONE ` in ` BugInfoView . java ` to simplify browser
updated the dialog cancellation method from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to
add test for integer . div ( ) and integer . ops . getdiv ( ) .
added a method to read a stream from an InputStream and updated image creation to use this new method to improve image loading efficiency by reading input streams
added support for defining and undefining variables in the CaseStmtToken and updated the SwitchCompiler and ExprGenerator classes to enhance variable management and
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions during the handshake process
added " psapi . lib " to the " AdditionalDependencies " attribute in WinGammaPlatformVC10 . java to ensure compatibility with additional system
updated comment and newline handling in StringUtilsTest . java to improve code readability and maintain consistency across different operating systems
added encoding settings in TemplateEngineFreemarker and modified the alert string in ApplicationController to ensure proper handling of special characters in JavaScript
refactor byte array handling in CRDGeneratorTest to use String instead of ByteArrayInputStream to improve code readability and facilitate easier debugging
use instance variable instead of private static variable to allow test to run in parallel
added a conditional check for the existence of the " testngEmailableReporter " system property before adding the EmailableReporter to enhance flexibility
added handling for quoted characters in CommandLineBuilder and updated test assertions in CommandLineBuilderTest to improve command line parsing logic and enhance test coverage for quoting
removed the ` public ` access modifier from multiple ` Clock ` , ` DelegatingGauge ` , ` MetricProducer ` , and ` RegistryProducer
added a line to set the number of reduce tasks in the FreeGenerator class to ensure the job uses the correct number of reduce tasks based on
fix default value for object field in schema generation
updated the FILEVERSION constant from " 505365 " to " 532077 " to update the file version to reflect the latest changes
added support for GL _ ARB _ texture _ float extension in FloatTextureData . java to ensure compatibility with OpenGL 3.0 and
add fileserver . write ( ) and fileserver . closefile ( ) , since fileserver . write ( ) be not thread - safe
added a null check for outputDirectory and jarStream before setting the output directory to ensure that the output directory is set only if it is not null
added performance measurement for SQLite tasks in ShadowSQLiteConnection to improve performance tracking during database operations
replaced ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest ` and ` JDK
[ geos - 7013 ] add resourceerrorhandling enum to support error reporting
updated buffer position calculation and added EOFException handling in RAMInputStream , TestRAMDirectory , and BaseIndexFileFormatTestCase to ensure proper buffer
include request uri in error message for miss resource
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous parameter and introduced a new AccessControlContext class to enhance thread management
updated the constant CHECK _ EVERY _ N from 10000 to 0xFFFF and added logging statements for cache free memory checks to improve performance monitoring and
hbase - 16400 testsplittransaction . java fail due to hregion . openhregion not be call
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is not initialized
added a parameterized test for the Jaas demo in DemoModulesTests . java to verify the behavior of JAAS environment in the J
added a condition to check if spanX and spanY are zero before creating a folder , and adjusted the calculation of the hypot value to
refactor CacheOffHeap class for improved performance to enhance cache efficiency and reduce memory usage
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 453 : throw
added validation to prevent processing out - of - bounds tile values in TiledLoader . java and improved data string validation in TiledLoader
added synchronized keyword to setWorkingSet method to ensure thread safety when modifying the working set
added a new Java class ` Solution ` to calculate the maximum step based on two integer inputs to implement a solution that calculates the maximum step based
added a new interface ` AddressChecker ` and modified ` TrackerRequestProcessor ` to use it to handle bad IP addresses to improve address validation
do n ' t use translucent render type in multilayermodel . gettranslucentmovingblock ( ) since it
remove ` ` [ default : ] ' ' from ` ` comment ' ' and ` ` configelement . comment ' ' in ` ` tool
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and updated related references in `
added null check for recieptents before sending mail to avoid potential NullPointerExceptions when recieptents is null
refactor single single result check into a separate method ` isSingle ` to improve code readability and maintainability by reducing duplication
refactor DockerClientFactory methods to include a failFast parameter for better control over client pinging behavior to improve flexibility in handling failure scenarios
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated the ` perfStatsCollector ` to include it to enhance the
mondrian : fix nullpointerexception in historicprocessinstancequeryimpl . getdate ( ) .
changed the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to align with the new
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for better debugging
refactor TreeMap implementation to improve code readability and maintainability
added methods to get and set a boolean for enabling asynchronous stack traces in Display . java and implemented exception handling in Display . java to improve
added a method to set the glow color in BubbleTextView and updated Folder to use this new method to enable customizable glow
added " file - row - text " styling for link and description in LinkedFilesEditor . java to ensure consistent styling of file rows
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " and added a new test for class name matching in ResultSetMetaDataTest
removed file deletion logic from Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify code and improve readability by eliminating
added null check for _ info in HttpConnection . java to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a provider string to enable initialization of ShadowLocation with a specified provider
updated the condition for setting the maximum RAM size in the LauncherPreferenceJavaFragment to accommodate larger device RAM values
add miss local map stats when there be no data
added logging functionality to FileProfileActivator to enhance visibility into file profile activation checks and file existence checks
updated the string in the addToBody method from " noname1234 " to " invalid _ " to improve clarity by providing a more d
make guild # getroles return a set instead of a list to avoid concurrentmodificationexception
updated the limit for the number of uploads in ExpandableUploadListAdapter from 30 to MAX _ NUM _ UPLOADS _ SHOWN to
added unit tests for the delete method in DashboardUserMapperTest to ensure that the delete method returns the expected value after deletion
rename ' recipient ' parameter to ' primary ' and ' giver ' to ' secondary '
sulong : add support for auto - deref handle to truffle object .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
add usage help for the ` ` start headless ' ' command and remove the ` ` exit ' ' method
added swipe - to - dismiss functionality to the action bar in DrawerActivity . java to enhance user experience by providing quick access to old interactions
updated CommandLineParserTest . java with new test cases to improve test coverage for command line parsing functionality
added new constants and interpolators for animations in the QuickstepAtomicAnimationFactory and PortraitStatesTouchController classes to improve animation respons
updated method call from ` javaName ` to ` javaNameFromExternal ` for clarity to improve code readability and maintainability by using
added native methods for setting and releasing a frame in CWrapper . java to enhance the functionality of frame management in the application
added validation for constant references in mmm Checker . java and created a new ValueTest class in mmm ppp ppp ValueTest .
updated test cases in MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve test coverage and ensure
removed null check for constructors in PojoUtils . java to simplify the condition for checking the length of constructors
refactor JiraConfiguration class for improved readability to enhance maintainability and facilitate future development
updated string concatenation for error and coverage status in UploadBuild . java to improve clarity of error and coverage status reporting
update bounds calculations in DeviceProfile . java to include search bar offset to improve layout consistency by accounting for search bar offset
updated log messages to reflect correct terminology and modified disconnect logic in PulseAudioAudioSource and P pulseaudioSimpleProtocolStream classes to improve
refactor OverviewCommandHelper to use runOnUiThread for UI updates to ensure UI updates occur on the correct thread to improve respons
removed the ` getSourceGroupOptional ` method and its usage in the ` AppleSource ` class to streamline the code by eliminating
increased the wait duration from 22 seconds to 30 seconds in TestSimTriggerIntegration . java to allow more time for trigger firing to complete
updated the parameters in the RunLengthEncodedBlock and RunLease instances from ` outputPositionCount ` to ` positionCount ` to ensure consistency in
fix npe in abstractnodecostsearch when distfromstartsq be less than min _ distance
added a condition to skip processing for specific component types in ResourceEditorView . java to improve efficiency by avoiding unnecessary processing for specific UI components
replaced ` UiThreadHelper ` with ` LauncherModel ` for background thread handling in ` DragView ` and ` FloatingIconView
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is initialized before use to avoid potential null pointer exceptions
added tests for ` getImeiForSlot ` and ` setImei ` methods in ` ShadowTelephonyManagerTest `
added debug logging for ZUUL requests in SimpleHostRoutingFilter . java to improve debugging capabilities for HTTP requests in the SimpleHostRoutingFilter
added ` destory ( ) ` methods to ` OfflineResourceDataManager ` , ` BitmapInvertedIndex ` , and ` IndexSegmentImpl
[ rocketmq - 3496 ] fix the bug of normalmessagerequestandreceiveit . testsendmessage ( )
replaced Charset . forName ( " UTF - 8 " ) with StandardCharsets . UTF _ 8 for UTF - 8 encoding to improve code readability
hbase - 16465 bulkload should not crash if there be no bulk load for a family that do n ' t exist ( #
added a nullable ` commission ` parameter to the ` DefaultWithdrawFundsParams ` constructor and updated the ` RippleWithdrawF
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to streamline code by eliminating unnecessary dependencies
replaced multiple instances of ` MorphlineRuntimeException ` with multiple ` IOException ` catch blocks in ` LoadSolrBuilder ` and ` SolrLocator
added a check to prevent invoking abstract overloaded methods in Java2TypeScriptTranslator to ensure that abstract methods are not invoked to avoid runtime errors
added StacklessLogging for the FileSessionDataStore ' s sweepDisk method in TestFileSessions . java to improve logging visibility for better debugging during
added serialization support and reorganized access modifiers for XML , HTML32 , and HTML40 entities in the Entities class to enhance data serialization capabilities
refactor SubExactLConstantTest and SubExactLNonConstantTest classes to improve code clarity and maintainability
added null check for claimRequestString in ConnectOAuth2RequestFactory . java to improve robustness by handling potential null values gracefully
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of the filter set optimization
updated the processTypeHintForNestedDocuments method to handle null source cases and added unit tests for null values to ensure correct mapping of null values
replaced ` CoreAdminResponse ` with ` CoreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and added a
avoid concurrentmodificationexception in mododetransformerdiscoverer due to concurrentmodificationexception
[ hotfix ] fix checkstyle violation in abstractquerydslprocessor
[ gr - 17467 ] add tostring ( ) method to pegraphdecoder .
replaced instances of ` setOf ` with ` copiedSetOf ` and updated method names from ` setOf ` to ` copiedSetOf
camel - 16462 : camel - mail : use objecthelper . getidentityhashcode ( ) instead of tostring ( )
fix for http : / / issues . apache . org / activemq / browse / amq - 2370 - avoid npe
updated the return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure the method correctly identifies the identifier as a property name
open wave generator activity in the app instead of just show a toast
added null checks and logging for non - existent sheets in KeyedProperties . java and modified sheet retrieval logic in SheetOverlaysManager . java
test : add integration test for shell . exec ( ) and log ( ) .
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to ensure that the SolrCore does not detect no index and create
add a call to super . dispatchmethodkernelokra ( range , args ) in graalkerneltester
improve ordering of defaultmxrecord to make it easy to find
refactor thread creation in XToolkit . java to use a privileged action for thread creation to improve code readability and maintainability by
added validate ( ) method in SelectBox . java and set dropdown value in UITest . java to ensure proper validation of UI components and
replaced IllegalStateException with a stack trace printing in JobGlobalListener . java to improve error handling by providing stack trace information
updated the ` createState ` method to include a ` SplitState ` parameter and modified related logic in ` FlowBuilder ` and related tests to
changed the ` connectionState ` variable to be ` volatile ` and modified the return statement to improve thread safety by ensuring ` connectionState ` is
updated the default polling period from 10 to 1000 milliseconds in AbstractPollingEndpoint . java and added integration tests in EnableIntegrationTests . java to improve
refactor MemoryStack and MemoryUtil to use local variables instead of ByteBuffer instances to improve code readability and maintainability by reducing redundancy
added handling for DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting and provide clearer
[ java ] unusedmodifier : fix false positive with enum
refactor multiple Java files to use method references instead of lambda expressions to improve code readability and reduce verbosity
added a parameter name " ssl = { 0 } " to the @ Parameterized . Parameters annotation in AbstractHttpClientServerTest . java to enhance test
added exception handling for IllegalFormatException and improved logging messages in TransformationHelper . java to enhance error reporting and provide clearer feedback on transformation failures
updated user permissions retrieval from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` in ` ActiveConnectionRESTService . java `
replaced direct equality checks with a custom equals method using Apache Commons Lang ' s EqualsBuilder to improve code readability and maintainability by
added null check for outputRoot in FileProcessor . java to prevent potential NullPointerException when outputRoot is null
pdfbox - 4892 : add a annotationfilter to the pdfrenderer , a suggest by valerybokov
refactor StackTraceCleaner class to improve stack trace handling to enhance performance and maintainability of stack trace management
added content type handling for CSS and JavaScript file paths in PluginServlet to ensure correct content type is set for different file types
hhh - 16462 skip criterialiteralinselectexpressiontest for dialect that do n ' t support it
updated the parameter name from ` slot ` to ` slotSize ` and modified the upgrade logic to improve clarity and ensure proper handling of the
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , ` ContextImpl ` , ` DocBuilder
[ scb - 2370 ] add long polling option to kie client ( # 2379 )
added accessibility features and refactored gesture handling in multiple classes to streamline scrolling functionality and improve code maintainability
updated unlocks initialization in UI . java and added a button in PausedDialog . java to enhance user experience by providing access to unlocks
clear the drag - and - drop event in PlayerEventListener to ensure the drag - and - drop event is properly managed
added a new constant DEFAULT _ PARAM to the StreamResult class to define a default input parameter for stream processing
replaced ` MalformedURLException ` with ` IOException ` in the ` testNormalizeOrder ` method to ensure proper exception handling for IOException
updated printBoth method to include chunk type and modified skip logic in TsFileSketchTool . java and LocalTsFileInput . java to improve
added a ` headersToExclude ` field to exclude Swift headers from the ` UmbrellaHeader ` class to improve header management by excluding
[ grizzly ] fix checkstyle violation in grizzlyasynchttpprovider
added encode ( ) method to RequestPlugin . java to ensure proper encoding of request data
mondrian : do n ' t use ' FLOAT ( ' expr ' ) ' for mysql compatibility
added validation to check for null or blank passwords in LdapAuthenticationProviderImpl . java and created a corresponding test class TestLdapAuthenticationProviderImpl .
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a check to clear the complex writers in ProjectRecordBatch . java to ensure that complex writers are properly cleared when certain conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress serialization warnings for these classes
removed the ' public ' modifier from the ClassGraphClassLoader class and updated the null check condition to improve class loading logic and handle potential null values
added error handling for schema errors in ErrorResponseException . java to improve error reporting and provide clearer output when location is empty
added a constructor to EventSourcingRepository that accepts additional parameters for eventStore , eventStore , snapshotTriggerDefinition , and repositoryProvider to
refactor symbol declaration logic in ` Attr . java ` for clarity to improve code readability and maintainability
modified the search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle empty search text to improve user experience by ensuring
[ nuvo ] enable ` ` standby ' ' mode for all _ off and ` ` alloff ' ' command ( # 10
tmi - tiff : use ` ` chunky ' ' instead of ` ` image extension ' ' for planar configuration
added a call to close the input stream in ItemListTag . java to ensure proper resource management and prevent potential memory leaks
move the updateentity ( ) method to the averageutil class so that it can be reuse .
added two new classes ` SigInt ` and ` SigIntBarrier ` to handle and await interruptions in the ` agrona
refactor graph handling in ExporterGEXF to differentiate between hierarchical and non - hierarchical graphs to improve performance and flexibility in graph
replaced byte array with Text for handling null strings in TCTLSeparatedProtocol . java to improve memory efficiency and handle character encoding
[ # 7272 ] rubric response : fix index out of bound exception ( # 7273 )
updated the condition in CatalogComparator to use CatalogAndSchema . ORIGINAL _ CASE instead of DB2Database to ensure compatibility with different schema
simonstewart : fix flaky test in browsermobproxytest
updated the formatting of the critical error message in ModelRepositoryImpl . java to use Integer . toString ( ) instead of MessageFormat . format ( )
removed redundant reset call for mTextWatcher in InPlaceEditView . java to streamline the code by eliminating redundancy
improve javadoc for internalbytearray . java and trufflestring . java
[ hotfix ] [ table - common ] fix type inference issue in graph . foreachedge
refactor Java assertion classes for consistency and clarity to improve maintainability and readability of the assertion framework
deleted the ` ClassA \ 314 \ 201 . java ` file and added a new ` DiacriticTest . java ` file
replace CountDownLatch with CyclicBarrier in ClusterMembershipTest . java to improve synchronization handling in cluster membership tests
do n ' t try to get the reactor reader from the container if it ' s not the same one
updated SSL scheme check in ServiceRegistryConfig and refactored IP port assertions in TestServiceRegistryConfig to improve code clarity and ensure correct
updated Mockito library version to ensure compatibility with the latest features and bug fixes
removed the ' url ' parameter from the Jdbc3Connection constructor to simplify the constructor signature for improved usability
refactor the servlet instantiation logic into a separate method ` ensureInstance ( ) ` to improve code readability and maintainability by reducing duplication
added logging functionality and modified server time handling in BinanceExchange and BinanceBaseService classes to improve monitoring and debugging of server time changes and
updated Tomcat 8.5 and Tomcat 8.5 container adapter implementations to support new features and improvements related to Java
replaced direct call to getComponentForm ( ) with a null check for the component form before deregistering it to improve robustness by ensuring the
updated the ` decodeResource ` and ` decodeStream ` methods to accept ` BitmapFactory . Options ` as a parameter and modified the ` draw
[ java ] use configuration . number _ of _ messages instead of hardcoded value of 10 .
added click handling and linkifying functionality for tweets in TimelineArrayAdapter to enhance user interaction by allowing long - click actions and impro
added " text " data type to unmodifiableDataTypes and modified conditional checks in NumberType . java and ColumnSnapshotGenerator . java to enhance data
remove @ ignore from entryprocessorbouncingnodestest ( # 3683 )
replaced the method ` isHardDeletableState ( ) ` with ` isRemovableState ( ) ` in the ` Ambari
added a null check before adding a result to the inbox in CreateBridgeServlet . java and modified tests in CreateBridgeServletTest . java to
refactor the ` isRobotsExpired ` and ` isValidRobots ` methods in ` CrawlServer ` and ` PreconditionEnforcer `
replace direct calls to getDisplayName ( ) with a local variable for display name retrieval to improve code readability and prevent potential NullPointerExceptions
refactor SpriteBatch constructors to accept a default shader parameter and update shader creation logic to improve flexibility in shader creation and enhance shader management
added synchronous commit option to properties in TestUtil . java to enable synchronous commit behavior during tests
added element coercion functionality to SortedSetTypeCoercer and refactored the handling of duplicate elements in SortedSet to improve error handling and
refactor message retrieval logic in RemoveFileDialogFragment and RemoveFilesDialogFragment for improved clarity and functionality to enhance user experience by providing
added a condition to check if the character is within the valid range of 256 to prevent potential errors when processing invalid URL paths
replace hardcoded port with dynamic port assignment in the registerFragmentStorage method to improve flexibility by allowing dynamic port assignment for fragment storage registration
updated the assertion in HostResourceProviderTest to return an empty map instead of an empty list to ensure that the test correctly verifies the presence of
removed the logger parameter from the loadConfiguration method in YarnEntrypointUtils to simplify configuration loading by eliminating unnecessary logging dependency
move initialization and style to init ( ) and repaint ( ) method in sipcommframe . java
removed the ShadowHtml . java file and updated tests in HtmlTest . java to simplify the codebase by eliminating unnecessary shadowing
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface
updated Jetty logger configurations from " org . eclipse . jetty " to " org . eclipse . jetty . http3 "
changed the access modifier of the ` addListeners ` method from private to package - private in ` MockSettingsImpl . java ` and added a
refactor StateHandleStore to improve code structure to enhance maintainability and readability of the code
updated import statements from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . http .
[ 1.7 ] instructor : add section name to student attribute , use constant instead of hardcoded string
use try - with - resources to prevent resource leak
camel - 1145 : fix the camel - test - infra - spring - boot test failure
added support for handling Java ABI jars in the build process to improve dependency management for Java libraries in the build process
remove the ` ` validating - cerficates ' ' tag from the error message for peer certificate verification
bug 10650 : remove unused getpagesizeval ( ) method from listcapacity api
added a case for CLOSED in the IteratingCallback class to prevent further processing when the callback is closed
added an ` isAuthorized ` boolean and updated related methods in ` AccessControlContext ` and ` AccessController ` classes to track access control behavior to ensure
refactor event handling in OSGiDeployer to check if the application is not an instance of AbstractOSGiApp before sending a
added handling for " tiff " codec and container in DLNAMediaInfo . java to ensure correct MIME type is set for t
refactor variable names and initialization in OptimizedCallTarget . java for clarity and consistency to improve code readability and maintainability by using
added a new file ` CubocDesktop . java ` and refactored ` Cubocy . java ` , ` Map .
updated PolicyMonitor initialization to use target directory instead of test resource directory to ensure test resources are correctly located within the test classes
added a call to remove all files from the trashbin list adapter in TrashbinActivity to ensure that all relevant files are removed from the
replaced org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) . allConnectors ( ) with com . sun .
add a checkglobalnode to check if a global storage be present in the global storage .
updated the ` createLauncherEvent ` method to include ` Intent ` as a parameter to enhance event data handling by associating the launcher event with
increase the burn amount limit for burningmanPresentationService to ensure it does not exceed a predefined limit
refactor UniqueConstraintSnapshotGeneratorSnowflake to streamline import statements and enhance the snapshotObject method to improve code readability and maintainability
modified the assignment of the ` item ` variable in ` DMLTransformer . java ` to handle empty ` insertStatementBuilder ` to improve cl
updated import statements in ServiceValidateControllerTests . java and changed the PGT URL from HTTP to HTTPS to improve test clarity and ensure correct
updated the ` getDefaultValidFunctionName ` method to include an ` isStatement ` parameter and modified the function body handling to include a boolean parameter to
refactor JarLauncher to improve code structure to enhance maintainability and readability of the codebase
updated type declarations to use generics for better type safety to enhance code clarity and prevent unchecked cast warnings
added a new dimension to DeviceConfiguration and modified visibility of firstCallPeerIsGV in CallGTalkImpl , and added a null check in
added a test method for updating a PGobject in the ResultSetTest class to ensure correct handling of PGobject objects in database interactions
updated password reset endpoint to check for non - UAA origin and return an UNPROCESSABLE _ ENTITY if the user does not have a user
replace retrieval of child elements with direct retrieval of the document element to improve code clarity and maintainability by using a more descriptive method
refactor Cache class implementation to improve performance and maintainability of cache management
rename timeInSec and prevTimeInSec to timeMillis and prevTimeMillis in Isochrone . java and SPTResource . java
fix light relay not bind properly when it ' s set to - 1
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to use it to enhance the functionality of
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated the increment of recordedTime from 1024 weeks to 619315200000 to ensure the recordedTime reflects a maximum of 6193
added a condition to resize the status if the terminal type starts with Windows to ensure proper resizing behavior for Windows - specific terminal types
updated host version state handling in UpdateDesiredStackAction . java and modified repository version state constants in RepositoryVersionState . java to improve clarity
move jsinterop test into integrationtestcase to avoid conflict with other test
replaced HashSet with LinkedHashSet in multiple Java files and updated method visibility in DefaultMavenExecutionRequest and MavenProject to ensure consistent iteration order and
remove unnecessary try / catch block in operationserviceimpl . getoperation ( ) .
rearranged the order of method calls in KnativeEnvironment . java to improve code readability and maintainability
updated the executor name in CommitLogArchiver from " commitlog _ archiver " to " CommitLogArchiver " to ensure consistent naming
added connect ( ) method calls in CloudSolrClient . java and a new test for uploadConfig ( ) in TestCloudSolrClientConnections .
add synchronization to avoid concurrent modification exception
added methods to clear files and cache and refactored file handling in ShadowContext to improve code readability and maintainability by centralizing directory
added LinkedHashSet and TreeMap to the list of classes in SecureXStream . java and updated related tests in XStreamPersisterTest . java to enhance
[ drools - 6642 ] add kiemodulemodel to kiehelper ( # 2698 )
added a check for Farmland instances in BlockEventListener to prevent soil from drying when the currentMoisture exceeds the currentMo
added a default implementation of the method ` getLocalIp ( ) ` in the ` FinishedSpan ` class to provide a default implementation for the method
updated JdbcStepExecutionDao to deserialize the OBJECT _ VAL from a binary stream and modified test cases in AbstractStepExecutionDaoTests to improve data
updated comments in multiple Java files to improve code readability and maintain consistency in terminology
added " libs " to the resource list and included " python37 " in the list of supported resources to support additional Python - related resources and
refactor PluginTab to use a dedicated refresh method for plugins and adjust table initialization to improve code readability and maintainability by encapsulating plugin
changed log level from info to warn for history file reloading , saving , and trimming errors from debug to warn to provide a less severe
server : fix npe in vmware storage processor when vm be not in use
camel - 16462 : camel - sftp - fix test failure on window
updated ExperimentalMockitoJUnitRunner . java file to improve test coverage and enhance reliability of unit tests
updated serial handling in multiple classes to use a centralized method for retrieving the build serial to improve consistency and maintainability by centralizing build serial
refactor SwapGBuffers class for improved memory management to enhance performance and reduce memory usage
added null checks for spatial and skeletonControl in AnimControl . java to ensure proper handling of null values and prevent potential NullPointerExceptions
added unit tests for setting smart replies in ShadowRankingTest . java and refactored the setSmartReplies method in ShadowRanking .
[ java ] only list segment file if it do n ' t start with a specific prefix .
updated the initialization of carrot2ResourcesDir in CarrotClusteringEngine . java to streamline resource directory retrieval to improve code readability
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to handle potential
update ASM API version from ASM7 to ASM9 to ensure compatibility with the latest ASM features and improvements
refactor error handling in RecommenderMapper and CacheTest to throw TasteException instead of returning null to improve error handling and provide clearer
added clientInfo initialization in SurrogateAuthenticationEventListenerTests to include client - specific client information to enhance test coverage by including client - specific information during
set isUserView to false in CardPresenter . java to disable user view functionality for better user experience
updated references from ` GraphvizJavaExecutorUtility ` to ` GraphvizUtility ` and removed unused methods in ` GraphvizJavaExecutorUtility `
refactor metric retrieval in LogDispatcherThreadMetrics to use local variables to improve code readability and maintainability
added a new module - info . java file for the SQLite connector module to define module exports and dependencies for the SQLite connector
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " new " web type before initializing permissionsManager to simplify the code by eliminating unnecessary conditional checks
updated DateParser and TestDateParser classes to improve date parsing functionality and enhance test coverage
added a method to get the depth in SpringLoadedState that returns a value of 0.5 f to provide a default value of 0.
replaced manual array copying with a constant for minimum size validation in BinaryDecoder . java to improve code readability and maintainability by using a
[ hotfix ] fix checkstyle violation in executiongraph
added a method to remove a notification in NotificationActivity and removed unnecessary swipe handling in NotificationRenderer to streamline notification management and improve user interaction with
added null check for invocation in DefaultExceptionConverter and updated exception messages in ExceptionsTest to improve error handling and provide clearer context for unexpected exceptions
fix nullpointerexception in glowcontainer # setlock ( )
replaced the use of MethodHandle for retrieving the setter method in ProxyMaker . java to improve compatibility with Java ' s reflection API and enhance
changed integer type casting from int to Integer in MathTest . java to ensure type safety when retrieving integer values from the database
replaced StringUtils . join with a direct string concatenation for metrics and datasets in BaseEmailContentFormatter . java to improve readability and simplify the
added logic to manage the visibility and visibility of the ` layoutProvidedPanel ` based on the layout node ' s layout to improve user interface by
added a null check for the location parameter in the dead server check to ensure proper handling of cases where the location is not initialized
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a check for missing key parameters in ` DSAPublicKey ` and simplified the return statement in ` BasicChecker . java ` to improve error
refactor MediaTypeRequestMatcher to use a new method for ignoring ignored media types to improve code readability and maintainability by encapsulating the logic
updated debug logging to include task number and task attempt ID in LlapBaseInputFormat . java to improve clarity and traceability of log
added properties to the SpringBootTest annotation in EventServiceTests . java to allow configuration of bean definition overriding in Spring Boot tests
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
refactor package structure for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , BTCMarketsStreamingService , and B
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to ensure proper rendering of code blocks
added a new file CompatibilityTest . java with methods to load and verify property values from an XML file to ensure compatibility checks are performed
added new utility classes ` PushUtils ` and ` SecurityUtils ` for managing push registration and security functionalities to provide utility functions for managing push
[ hotfix ] [ tablerebalancer ] fix incorrect number of replica
bump version to 2.7 . 0 and release note
[ log4j2 - 1349 ] fix line separator in test ( log4j2 - 1349 )
improve error handling for readtimeout in apr / native - image
set default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are
[ te ] rename fetchsaclingfactors to fetchscalingfactors in anomaly classifier api
added a command to wait for broadcast idle in LauncherInstrumentation . java to handle potential IO exceptions during broadcast idle wait
added unit tests for reading font and link tags with attributes in ResourcesTest . java and adjusted the span calculation in ResStringPool . java to
update source path in guistatscomponent . patch so that it do n ' t interfere with other component .
added permission request handling for CALL _ PHONE in Launcher . java and introduced a new constant in Utilities . java to improve user experience by
updated return values in SimulationPanel , PlotDialog , BasicEventSimulationEngine , and Startup classes , and added locale handling in Startup
refactor GeoPointDistanceQuery , GeoPointInPolygonQuery , and GeoEncodingUtils classes for improved byte handling and consistency to enhance code
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to check if the Docker client is available to
added a new constant VPX in CodecTypes . java to support Vpx format in the application
added coordinatorAddress parameter to DistBuildFactory and DistBuildRunCommand classes and updated its usage in DistBuildRunCommand to allow users to specify
added a new method ` match ` in ` FsUtils ` and refactored the ` timer ` method calls in ` WrapTimer ` to
added a condition to check if the entry value is greater than zero before adding it to the labelValues collection to ensure that only valid values are
ggb - 1353 make sure that ` ` true ' ' and ` ` false ' ' be not ` ` true ' ' in
updated TestPerfBenchMarkDriver . java file to include a test annotation to enhance test coverage for performance analysis
added materialization time handling in ObjectStore and created a test for materialization time updates in TestObjectStore to ensure that materialization time is
added error handling for UnsatisfiedLinkError in VoskSTTService . java to improve robustness by logging missing native dependencies and
bug 56400 - jms sampler gui : remove isoneway property and set responsecodeok to true
updated break weight logic in GlyphView . java to use GoodBreakWeight instead of BadBreakWeight to improve clarity and functionality of break weight
refactor sync check reading logic in RCFile . java to use a buffer for improved efficiency to enhance performance by reducing the number of
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to
replaced direct usage of ` getSortedByCounts ( ) ` with a new ` LinkedList ` for storing ` unwound ` and ` un
removed the order parameter from the setSortedDataFlavorArray method and refactored the DataTransferer class to simplify the comparison logic and
added an ` - infoport ` argument to the ` TestThriftServerCmdLine ` class to dynamically generate a random port for testing purposes
added a check to return false if the end of the file is reached in the RegExpScanner class to ensure proper handling of end - of -
replace direct property retrieval with a static set for enabled metrics and timers to improve performance by reducing redundant calls to System . getProperty
fix nullpointerexception when check for nickname in chat room .
add a check for null and empty filename to avoid npe
refactor refresh token creation logic into a separate method to improve code readability and maintainability by reducing duplication
updated error message for path transformation failure in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] [ yarn ] remove dead code in yarnapplicationmasterrunner
added a new method ` nativeGetHardwareBuffer ` that returns null in ` ShadowNativeImageReaderSurfaceImage . java ` to implement a
updated BTCChinaExchange to use a SSL URI for market data service to establish a secure connection to the BTCChina exchange
pdfbox - 4892 : use the project ' s base dir instead of the file system ' s default path
added ` OauthController ` and ` Oauth2PluginTest ` classes for handling OAuth2 authentication in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future updates
add ` flatmap ( function ) ` and ` flatcollection ( function ) ` to ` abstractstreamex ` and remove ` entrystream `
added logging for invalid parameters and improved exception handling in ExceptionToProducerResponseConverters to enhance error reporting and provide clearer context for exceptions during
updated the logic for determining the shouldComeFromThisClassLoader to include Maven Surefire support for Android projects with mixed Surefire to
change the condition from checking for transmittableAudioEncodings to checking if the sdp is not already transmittableAudioEncodings to ensure that the
replaced ` SequenceNextValueFunction ` with ` DatabaseFunction ` in ` CreateTableGenerator . java ` and added a new test for default
added methods to check GML 3.3 and GML 32 measurement counts in the NormalizedMultiValuesTest class to enhance test coverage for
added a volatile boolean field ` wasInvoked ` in ` NetworkTestUtils ` and updated variable names in ` UaaHttpRequestUtilsTest ` to
added a check for configuration before expanding regex mappings in ColumnarDataSource and modified return statements in RowProcessor to return unmodifiable collections for field processors
refactor ` CustomSeekProvider ` to use a constant for seek duration and improve the handling of seek positions to enhance readability and maintainability
added XLCDCommunicator and XLCDController classes , and refactored FirmwareUtils to use a switch statement for firmware
[ drools - 5642 ] fix xsd validation for kie - modules ( # 2808 )
added retry logic to check if a transaction message is not empty in multiple event classes to ensure that retry attempts are valid before proceeding with further
refactor thread handling in WorkerProcessPoolTest to use join method instead of awaitThreadState to improve clarity and maintainability of thread state
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
increased FREEZE _ V2 , UNFREEZE _ V2 , WITHDRAW _ EXPIRE _ UNFREEZE ,
added ` throws ConfigurationException ` to the ` command ` method in ` DownloadPlugins . java ` and removed unnecessary configuration updates to improve error handling and
deleted the ` SpringTransactionHooks . java ` file and replaced ` SpringTransactionHooksTest . java ` with ` AbstractSpringTransactionHooks `
refactor methods in AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file GetUninitializedStringValueTarg . java to demonstrate handling of uninitialized String values to facilitate
added support for provided dependencies in AndroidLibraryDescription and updated related conditions in GraphEnhancementQueryEnvironment to enhance dependency resolution capabilities and improve query
added a new BooleanFlag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` to FeatureFlags . java to enable synchronization of
replaced the creation of system anomaly message with a boolean flag to track the saving state of bug reports to improve performance by avoiding unnecessary
added a constant for " cinepack " format in FormatConfiguration and utilized it in LibMediaInfoParser to support cinepack format
added camera bobbing control and updated hand movement animation logic in the Player class to improve control over the camera ' s bobbing behavior
updated the data retrieval method from ` describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader .
deleted the HSQLDBServerFilesFilter . java file and replaced its usage with a custom FilenameFilter in TestUtility . java to streamline
added a null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to prevent unnecessary processing when restoreFromSeed or restore
updated the retrieval of the latest version from APIDataVideoVersion to APIDataSeriesVersion and added a trace log for missing title queries to improve
added a method to handle type existence in the ` visitMethodInvocation ` method to ensure correct handling of method invocations based on class types
replaced hardcoded array size with a constant for better maintainability to improve code readability and maintainability by avoiding magic numbers
[ netbeans - 4892 ] fix bug where profile mode be not set properly
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskLastN classes , and
clean up derbyblockstoretest and bouncyoverheadblockstoretest
add itemstack . isitemstackdamageable ( ) and itemstack . gethassubtypes ( ) method to allow itemstack
mc - 167447 : line _ width should be set to 1.0 , not 1.0
set the ` ` browser . startup . page ' ' preference to ` ` 0 ' ' in firefoxdriver and firefoxdrivertest
updated condition in Http1xClientConnection to handle both CONNECT and GET HTTP methods to ensure proper handling of connection upgrades in HTTP responses
rename the task from " compile " to " process - classes " to clarify the purpose of the task for processing classes
pdfbox - 4892 : use closeidleconnections ( 1 ) instead of shutdown ( )
added a conditional check for aggregate function suffixes before creating new metrics in AmbariMetaInfo . java to ensure metrics are only added if they
added a method to set fullscreen draw parameters in TaskOverlayFactory and updated TaskView to use this new method to improve fullscreen parameter handling
added a new Java class to calculate the frequency of integers from user input to provide a solution for counting integers based on their frequency
initialize socketChannel to null in ClusteredAgentManagerImpl . java to ensure that the socket channel is properly initialized before use
rename MutisignOperationerGodicTest . java file to improve clarity and maintain consistency in naming conventions
added error handling for NoSuchElementException in StaxEventItemReader . java and a corresponding test in StaxEventItemReaderTests . java to improve
refactor ShadowTextView to use a wildcard import and improve null handling in TestAttributeSet to enhance code readability and prevent potential NullPointerExceptions
updated import statements from ` com . nimbusds . jose . json ` to ` net . minidev . json ` in
updated OS detection logic to differentiate between Linux and AIX environments to ensure compatibility with AIX systems in the application
server : use router control ip instead of private ip in vr command
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to provide a way to invoke a RunnableWithResult
remove xmpp ignore test that be no longer use
replaced integer wrapping with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve code readability
[ hotfix ] fix checkstyle violation in testclusterdumper
updated ClassSize calculations in KeyValue . java to improve memory allocation for improved performance
camel - 16462 : camel - core - allow to inject type converter into camel context if they do n ' t exist .
added support for handling conditional tasks in SparkCrossProductCheck to enable processing of conditional tasks in the Spark environment
updated the handling of managed profile actions in the Launcher and LauncherAppState classes to ensure the model reloads correctly when actions are managed
updated the condition in ` LoginInfoEndpoint ` to include a check for ` jsonResponse ` in addition to ` accountChooserNeeded ` to ensure that
[ hotfix ] [ table - common ] add todescriptivestring ( ) method to assignmentmanager
added a new ` result ` field and updated related methods in ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw `
added a reserved word " PERIOD " to the MariaDBDatabase and implemented a test for adding a " PERIOD " column in the
[ beam - 10650 ] update portable pipeline option description ( # 10650 )
added launcher shortcuts and bug fixes for Android 7.1 in VersionChangeLogs . java to improve user experience by providing guidance on launcher shortcuts
changed the access modifier of NUM _ MILLIS _ IN _ DAY from private to public to allow access to NUM _ MILLIS _ IN _
removed debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] check for aeron client invoker before invoke aeron client in archive .
updated validation logic in ` mmm Attr . java ` and introduced a new class ` NoWarnOnImplicitParams . java ` with a new
refactor menu item visibility and visibility logic into separate methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by
updated BTCETransHistoryResult to include additional currency types and modified corresponding test assertions to improve clarity and accuracy of transaction history type assertions
replace List with Set for series and exceptions in RetryFilterFunctions . java to improve performance by avoiding duplicate entries
marked the PluginLoader class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated the condition in LastQueryExecutor . java and added a new test case in IoTDBLastIT . java to ensure that the last query
added a newline character to the request string in HttpResponse . java to ensure consistent line endings for HTTP requests
added a static block to set the SLF4J HTTP wire property to " ERROR " to enable logging of HTTP errors for better debugging
added safe area setting for the title bar in Sheet . java to enhance user experience by ensuring safe area visibility
refactor loop to iterate through TimeSeriesChunkMetaDataList instead of using an enhanced for loop to improve performance and readability of the code
added a test for parsing and deparsing a SQL ALTER TABLE statement in AlterTest . java to ensure that the SQL syntax can be
changed the visibility of the ` copyState ` method from package - private to public to allow access to the method from other classes
fixed - redissonexecutorservice . executecallnable ( ) method should return a complete future instead of throw exception
add a constant for the suffix ` ` . part ' ' to the filesystemsplit .
refactor multiple Java files related to Orc functionality to improve code organization and maintainability
reordered conditional checks for valueArg and nameArg in CompareFunctionsProcessor . java to improve code readability and maintainability
fix checkavailablediskspace to break if insufficient disk space
removed the ` toString ` method from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to stream
added state checks in AbsSwipeUpHandler and unregistering TaskStackListener in TaskAnimationManager to ensure proper handling of invalidated states and prevent
added methods to retrieve and set the lock timestamp in AppPreferences and updated references in PreferenceManager to improve preference management by centralizing lock timestamp handling
refactor artist retrieval logic in MediaInfoParser . java to use a helper method to improve code readability and maintainability by encapsulating artist
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
added null checks and null checks for splitInfo and headerFlowFile in SplitText . java to ensure robustness by preventing potential NullPointerExceptions
added support for Windows - specific key store handling in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
increased the default check timeout from 400 to 1 , 000 milliseconds in RestTemplateSenderTest . java and WebClientSenderTests . java
added a check for ` ResultCode . FILE _ NOT _ FOUND ` in ` FileSyncAdapter . java ` to handle cases where the
added animation duration and interpolation features to the Slider class to enhance animation control and control over animation behavior
updated assertions in LineSeparatorProcessorTest to use a consistent variable name for consistency to improve code readability and maintainability
increased max width and max height from 512 to 1024 in TexturePacker . java to accommodate larger texture packing requirements
added a new test method ` negateTernaryNotUnwrapped ` to ` UnwrapParenthesesTest . java ` and modified the return condition
camel - 16462 : camel - hazelcast should not throw npe if poll timeout be set .
added a new ` TextFeedbackTest ` class and modified the ` TestRunner ` to accept a ` Test ` parameter to enhance test coverage and
replace Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve precision in score comparison logic
updated DENSITY _ * case values and modified resource saving logic in ResourceEditorApp . java to improve resource handling and ensure proper resource closure
added a new method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated ` ArrayCopySnippets `
log4j2 - 1343 : do n ' t emit log for time - sensitive metric
added support for remote SCM system configuration in Configuration and RuntimeEnvironment classes to enable control over remote SCM support in the application
added additional conditions to the state determination logic in MieleApplianceHandler . java to enhance the state determination logic to accommod
replaced usage of ` StatsLogCompat ` with ` SysUiStatsLog ` for logging launcher events to improve consistency and clarity in logging
updated variable names from ' log ' to ' LOG ' for consistency to improve code readability and maintain consistency in naming conventions
added unit tests for ProjectGenerationEvent ' s finished and started states in EventSerializationTest . java to ensure correct serialization of project generation events in
make sure preview point do n ' t crash when user click on a polygon
refactor JavaCompiler to improve code structure to enhance maintainability and readability of the code
add a check for remaining time before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas to ensure that random reads do not exceed
updated multiple Java files related to heap dumping and testing to improve code organization and enhance maintainability
added " -- gc - sections " and " nocopyreloc " flags to the ldflags list in NdkCxxPlatform
updated SpringCloudCircuitBreakerFilterFactory to expand fallback URIs from ServerWebExchangeUtils to improve URI handling and enhance test coverage for circuit breaker
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the test suite
patch from josh from bug # 45323 - avoid npe in read - only share string table
added a new method ` getAccountNet ` in ` HttpMethed ` and a corresponding test in ` HttpTestAccount001 ` to enable
added a check for ` availTextWidth ` before returning ` clipString ` in ` SwingUtilities2 . java ` and improved error handling
refactor FlatteningIterator to simplify iterator pushing and improve clarity to enhance code readability and maintainability by using a more descriptive
replace < b > and < / b > tags with spaces in TweetLinkUtils ' s removeColorHtml method to ensure HTML tags are
doc : generate sample code in the java microgenerator ( # 438 )
add a test method to reload and delete existing question in the InstructorFeedbackEditQuestionsUiTest to ensure that any existing question is deleted
patch from josh from bug # 45323 - make hssfsheet . getfirstrownum ( ) and hssfsheet
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by ignoring potentially malicious intents
[ java ] do n ' t send session open event if the session be already open .
updated hashCode method implementations in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector to improve
added logic to flush and release the QuicSession buffer when the connection is remotely closed to ensure proper resource management and prevent memory leaks
updated SplitReader interface to extend AutoCloseable and removed the close ( ) method to enhance resource management and prevent potential memory leaks
remove the deepCopy ( ) method from GsonBuilder to simplify the code by eliminating unnecessary object creation
sulong : return not _ found instead of null in sulongscanner .
refactor file opening and closing logic in RestClientRequestImpl . java to improve code readability and streamline asynchronous file operations
updated the dispatchStatusString method call in GrblController . java to ensure consistent handling of controller status updates
added a new ` SearchingClassLoader ` class and updated ` MockFactory ` to utilize it to enhance class loading flexibility by allowing multiple
add test to demonstrate refresh flag bug
added support for LEFT _ SEMI _ JOIN condition in ConstantPropagateProcFactory to ensure proper handling of LEFT _ SEMI _ JOIN conditions
refactor HttpReceiver and HttpSender to simplify response completion checks and improve response termination logic to enhance code readability and ensure proper handling of HTTP
use arrayoopdesclengthoffset ( ) instead of arraylengthoffset ( ) in hotspot
fix for http : / / issues . apache . org / activemq / browse / amq - 2636 - add default policy
refactor multiple Java classes related to Kerberos and SSL to improve code organization and maintainability
added a check to ensure appCtx is not running before stopping it to prevent potential errors when the application context is not running
changed the return type of the drawItem method from void to GlyphLayout to provide the result of the drawing operation for better usability
replaced the way metrics are retrieved in SpringmvcClient . java to utilize the MetricsPublisher for better metrics management and improved error
removed the constant ` SAFE _ ACCOUNT _ AGE _ DATE ` and updated return statements in ` AccountAgeWitnessService . java `
reformatted code for better readability and added default case handling in StructureHeader . java and StructureReader . java to improve code readability and
added ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration and its tests to enhance the webflow configuration by integrating resource URL
add a dexreturninliner so that it do n ' t interfere with deadassignmenteliminator .
update enrichedruledto to use getproperties ( ) instead of rule . getconfiguration ( ) .
removed the NOFOLLOW _ LINKS option from the isDirectory method in PathResource . java and updated related tests in AliasCheckerSymlinkTest . java
[ hotfix ] [ table - common ] remove sqldialect from executionentry
replaced ` ImmutableSet ` with ` Supplier < ImmutableSet < String > > ` for ` rDotJavaPackages ` in ` AndroidPackageableCollection
add a new test class ASTPackageDeclarationTest for testing package information to ensure the correctness of package information in the AST structure
add config min _ cross _ compaction _ unseq _ file _ level for cross compaction ( # 9766
[ hotfix ] [ runtime ] move active resource manager to ' active ' package
changed the test method name from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated the URI creation logic in ZipResource . java and added a new test class for parsing feature files with spaces to improve robustness of URI
updated button click listeners and added thumbnail generation logic in ExpandableUploadListAdapter . java to improve user experience by ensuring proper handling of image uploads
refactor configuration retrieval in RobolectricTestRunner to handle parent classes and their annotations to improve flexibility in merging configurations based on annotations
updated the list initialization to filter blocks and items based on their registry names to improve data integrity by preventing null reference errors
removed the abstract modifier from several methods in AbstractDataChangedListener and refactored WebsocketDataChangedListener to extend AbstractDataChangedListener to
updated JSONPojoConvertor to handle enum types and modified test cases for color handling to improve type safety and enhance test coverage for color enum
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the option is
changed the type of ` originalPayload ` from ` String ` to ` byte [ ] ` and refactored the payload handling in ` GWT
added orientation correction functionality to GyroControl by implementing OrientationCorrectionListener to enhance responsiveness to device orientation changes in the Gy
set biome list size to the actual length of the biome gen array
fix getinterfacetest to use print ( ) instead of println ( )
removed duplicate declaration of the environment variable in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a standard
added a preload parameter to MMapDirectoryFactory to control the loading behavior of the map directory based on user settings
added custom metrics for various components in BukkitPlatform . java to provide insights into the availability of various components in the system
refactor QuickConnectREST to improve code structure to enhance maintainability and readability of the code
added aspect ratio and default card image initialization in CardPresenter . java to enhance the visual appearance of the default card in the application
[ ds - 3952 ] use loginpageurl instead of isimplicit in authenticationcountselector and loginredirect
updated cloning logic in VectorHashKeyWrapper to handle empty arrays for long , double , decimal , byte , and byte arrays to improve robustness
added tests for the ` System . nanoTime ( ) ` method in ` TimeChangeTest . java ` to ensure that the system ' s J
added trimming of the line variable in MultiPartFilter . java and printed a test case in MultipartFilterTest . java to improve handling of
add event handler for livingexperiencedrop event . close # 3643
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use localized messages instead of hardcoded strings to improve localization and maintainability
remove unsupportedoperatorsvisitor , use planner . validate ( sqlnode ) instead
added support for RdepsFunction in GraphEnhancementQueryEnvironment and updated related tests to enhance dependency management and improve test coverage for dependencies in
refactor Character class to improve code readability to enhance maintainability and facilitate future feature additions
updated selection option selection logic to conditionally scale entire rocket components to ensure the selection option reflects the correct state of the entire rocket
replaced ` Arrays . toString ( ) ` with ` assertEquals ( byte [ ] ) ` for byte array comparison in ` UpdateableResult
added time boundary handling for offline and realtime tables in BaseBrokerRequestHandler and refactored related methods to improve clarity and efficiency in managing
do n ' t add socketref to the poller if it ' s already in use .
updated regex pattern and modified album title handling in EightmusesRipper . java to improve accuracy of album titles and enhance URL processing
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple files to standardize the
added a condition to check if the device is a phone and not landscape to ensure proper layout handling for phone devices in the QuickstepLauncher
replaced calls to ` getValue ( ) ` with ` unwrap ( QueryImpl . class ) ` in ` PartTreeJpaQueryIntegrationTests
replaced ` Files . readAllLines ` with ` subsystem . readMatchingLines ` and added a new method ` readMatchingLines ` to enhance
added dynamic check for the ` getResultStream ` method in ` JpaQueryExecution ` to ensure proper invocation of the ` getResultStream ` method
added null check for entity in PhysicsProcess . java to prevent potential NullPointerExceptions when processing entities
added test for entry processor with predicate to ensure that the map is cleared correctly when value attributes are indexed
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated color handling in Utils . java and modified htmlMessage in UtilsTest . java to improve color representation and enhance test coverage
disable menu item when input be empty ( # 3550 )
updated the path format for the link tree in Aapt2Link . java to improve clarity and consistency in path handling
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
ggb - 1353 : update selection after clear geos ( )
update ysldvalidator to catch emptystackexception instead of markedyamlexception
added the ` isCanceled ( ) ` method implementations across multiple classes to provide a consistent implementation of the ` isCanceled ( ) ` method across
refactor ` isAnnotationPresent ` methods across multiple classes to use a default implementation in ` AnnotatedElement ` and ` AnnotatedTypeFactory ` to improve code
add a default implementation for the ` removeAllWidgets ` method in the ` UILayout ` class to provide a placeholder for future implementation of the
[ hotfix ] [ test ] fix flaky yarn test
opensslcipher . getoutputsizeforfinal ( ) now return the max of the output size for the input .
added conditional logic to handle high - res content transcoding based on Fire TV Stick and video width to ensure high - resolution content is
[ beam - 10619 ] fix source source mock to work with mock dataset
replaced specific import statements with a wildcard import and modified listener handling in GpsLoggingService . java to improve code clarity and maintainability
changed the ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` for ` fullwidths ` to
added support for handling BaseItemDragListener in FolderIcon . java to improve drag - and - drop functionality for better user experience
added ` createEmptyArtifact ` method to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` TagConnector
removed unnecessary comments in RabbitMQPublisherImpl . java to improve code readability and maintain consistency in formatting
simplified the conditional check for m3u8 video link in VideoViewerActivity . java to improve code readability and maintainability by
camel - 16462 : camel - sftp - fix issue with ftp path with space
replaced mock assertion with assertMockEndpointsSatisfied with a timeout of 20 seconds to improve test reliability by allowing more time for endpoints to
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more descriptive
added support for LARGE _ FERN spec alongside DOUBLE _ TALLGRASS in BlockDoublePlant and BlockType classes
replaced ` tree . setFocusable ( false ) ` with ` tree . setRequestFocusEnabled ( false ) ` in ` TranscodingTab .
throw exception if stopping vm fails , then ui can show the error message in stead of fails
updated license acceptance logic in DB2TestSystem and modified condition checks in DockerDatabaseWrapper to ensure compatibility with DB2TestSystem and improve database
changed the ` units ` field from final to non - final and added a setter method for it in ` DoubleModel ` , refactored
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC and ZMW
added a check for the number of samples in the PBRLighting class to ensure that the PBRLighting class uses the correct number
updated test cases in StepWithSimpleTaskJobParserTests to remove unnecessary " job . " prefix to streamline test cases by eliminating
added ' final ' modifier to variables in CentralAuthenticationServiceImplTests . java to enforce immutability of variables to enhance code clarity
make sure expressionnode . tostring ( ) be consistent with ggbabs ( )
added multiple calls to ` addServiceOutput ( ) ` and modified service output handling in ` DDLSemanticAnalyzer . java ` to improve
[ drools - 1640 ] fix decimal to be cast to biginteger .
added " org . eclipse . jdt . " to the WebAppContext class to hide the JDT used by jetty
change return value from super . useAuthCache ( ) to false in NegotiateAuthentication . java to simplify authentication logic by eliminating
update namespace assignment to use Utils . capitalize for consistency to ensure consistent capitalization of the first segment
camel - 16462 : camel - core - fix the backwards compatibility issue of camel - direct
added a null check for the ZooKeeper object before resetting it to null to prevent potential NullPointerException when zooKeeper is not initialized
updated progress bar step message in Loader . java to improve clarity and consistency in the progress reporting
replaced direct calls to ` mVibrator . cancel ( ) ` with a ` runOnUiHelperThread ( ) ` method
added a method to update the last remote stream ID in HTTP2Session . java to ensure the correct remote stream ID is used for session management
added rendering hint for text antialiasing in EditorHeader and EditorToolbar classes to enhance text rendering quality by enabling antialiasing
[ java ] use current position instead of term window size to avoid overflow .
refactor : remove static import of enums in ctannotationimpl
refactor ExoPlayer class to improve code structure to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to improve performance by using a rectangle
added a new method ` newPrintStream ` to handle encoding when creating ` PrintStream ` instances to improve flexibility by allowing customizable character encoding
updated vibration duration from 1 to 25 in TouchableMovementMethod . java to improve user experience by providing a more visually appeal
fix app engine cloud server build - some import must have be remove on flag day
simplified the constructor of WebSocketClient by removing unnecessary parameters to improve code readability and maintainability
simonstewart : fix a bug in the i18ntest that cause the test to fail
refactor error handling methods in BytecodeParser and SharedGraphBuilderPhase to use RuntimeException instead of IllegalArgumentException and IncompatibleClassChangeError to improve
[ hotfix ] [ test ] restore auth system state in integration test
added a LowercaseComparator class and modified the constructor calls in CoNLLUFeatures to use it to improve sorting functionality by allowing case -
refactor JavadocTool to handle duplicate source files and improve error messaging for missing source files to enhance code clarity and provide clearer warning messages
danielwagnerhall : add test for firefox for toggle option .
added a validation check for the length of keys in HighestKvno . java to ensure that the count of keys does not exceed the
added error handling for attribute retrieval in HDF5BatchReader . java to improve robustness by logging a warning when encountering Huge objects B
[ beam - 10399 ] use writeresult instead of pdone in bigqueryio
rename ` copySnippetRequestEntity ` to ` createTemplateRequestEntity ` and add ` @ ApiImplicitParams ` annotation in ` ProcessGroupResource
added a new file TestMultiANewArray . java to implement functionality for testing multi - dimensional array initialization in Java
fix : remove unused configuration option ` ` secondary . storage . vm ' '
refactor synchronization logic in SyncBlockChainMsgHandler . java to improve clarity and correctness in handling head block IDs
added theme setting for PreviewViewer in PreviewTabView to ensure the preview displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a test for HTTP idle timeout in ConnectorTimeoutTest . java and updated the idle timeout configuration in ServerConnectorTimeoutTest . java to ensure
add miss property to dcoref . dictlist , dcoref . dictpmi , and dcoref . signatures , and make
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve
refactor JpaPagingItemReader to use diamond operator and remove unnecessary type casting to improve code readability and maintain consistency in
change log level from warn to debug in DistributedQueue . java to reduce log verbosity for child nodes with improper names
refactor color extraction logic to use a dedicated method for generating hotseat paletes to improve code readability and maintainability while ensuring
added new methods for setting default data table entry and cell transformers in TypeRegistry to enable customization of table entry and cell transformations for Cuc
added an assertion to check if newAvailableShared is less than or equal to initShared in AtomicRemainder . java to ensure that the correct
chore ( regen ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` and updated references in ` WorkspaceAndProjectGenerator ` to stream
removed unnecessary whitespace in the conditional statement to improve code readability and maintain consistency
added new routes for contact form handling in the application and introduced a new Contact class with associated methods to enhance the application ' s capability to handle
guacamole - 162 : make simpleuser . getpermissions ( ) return objectpermissionset instead of permission objectpermissions
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version of the application
[ drools - 7 ] fix typo in traitfactory . setmode ( )
updated method names and SQL queries to include " alias " alongside " name " in the MetricConfigManager and related classes to enhance the
replaced manual closing of per - document consumers with IOUtils . closeSafely to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added an OnClickListener to the overflowButton to show the menu when the overflow button is clicked to enhance user interaction by allowing the menu to be
updated error messages to clarify reference types for null and non - null scenarios to improve clarity and accuracy of error messages related to null
ggb - 1396 update line height for help button in av
move protobufferutilitiestest to core . util package
update divider position and width for split pane ( # 5338 )
update aux file generator to handle crossreference entry
[ geos - 6640 ] fix checkstyle violation in geoserverfeaturesource and resourcepool
renamed the variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of
update the contact list with the new avatar of a contact
updated import statements for Command classes in ShellCommand and ShellFactoryImpl to align with the new package structure for better clarity and organization
added a test method to validate the cleanup of the audit log table after a specified position to ensure that the audit log table is cleaned up correctly
changed the return type of the inject method in ComponentContext from generic type T to Object type T to ensure type safety and avoid unchecked cast warnings
added regex patterns for parsing comment lines and updated comment handling logic in ACLFileParser to improve code clarity and ensure proper parsing of comment lines
updated the ` isReadable ` method to include ` FileSystemPlugin ` , ` storageEngineName ` , and ` userName ` parameters to enhance functionality by
added an ` ancestorDimensionValues ` map to the ` StarTreeNodeImpl ` class and modified related logic to handle ancestor dimension values to improve
added user unlock check before dumping plugins in TouchInteractionService and refactored closeOpenViews method in Launcher to improve user experience by
changed the condition from checking widthStr to checking if positionStr is not null to ensure that positionStr is not null before proceeding
refactor certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance readability and maintainability of certificate validation logic
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org . apache . shenyu . integratedtest . dubbo ` to ` org . apache . sh
vpc : do n ' t skip network when listpublicipranges api call
updated assertion in RuntimeTypeAdapterFactoryFunctionalTest to use get ( ) instead of remove ( ) to ensure correct retrieval of the type field
added functionality to store undo info for properties in App . java to enable or disable the storage of undo information for better user experience
added privileged action to retrieve the " sun . java2d . xrgradcache " system property in XRCompositeManager . java to
replaced assertEquals with await logic in StreamCloseTest . java to improve test reliability by allowing more time for stream stream size to be
removed unnecessary ` doAfterFlush ( ) ` method from ` DocConsumer ` , modified ` perFields ` initialization in ` DocFieldProcessorPer
added support for handling deprecated configuration properties in ConfigurationMetadataGenerator . java and introduced nested configuration property annotation in AbstractJpaProperties . java to improve
refactor capacity and mask initialization in BiInt2ObjectMap and Int2ObjectHashMap to use ` values . length ` instead of a fixed
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and refactored file renaming logic in Hive to
do n ' t swallow exception in parallelniosender . send ( )
added a null check for the context in SchemeAndroidIDE . java to ensure that a new instance is returned when the context is not provided
[ gr - 16462 ] native - image : use the correct classloader in nativeimagebuildserver .
updated the return type of the ` modifyGrantedAuthorities ` method from void to List in ` SwitchUserAuthorityChanger ` and modified the
refactor JaxrsIntegrationTest to extend JaxrsIntegrationTestBase and create new classes RawJaxrsIntegrationTest and JaxrsSpring
add support for set querytimeout ( ) in jdbc 4 . x
added data providers for general and supplementary character tests in XslSubstringTest . java to facilitate testing of substring operations with
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for sequence handling in MariaDBDatabase and updated sequence generation logic in CreateSequenceGenerator to ensure compatibility with MariaDB and improve
updated error message formatting in MappedResizeableBuffer , UnsafeBuffer , CompilerUtil , and Int2ObjectCacheTest to improve clarity of error
updated import statements and set server metrics for TableDataManagerProvider in multiple test files to ensure compatibility with the latest data manager features and improve metrics
added a check for both " jsse . enableMFLNExtension " and " jsse . enableMFLExtension " in SSLExtension
replaced generic type ` ObjectIterator < T > ` with generic type ` ObjectHashSetIterator ` and removed the constructor parameter to simplify the iterator
updated character limit calculations in Compose . java and TweetFragment . java from 22 to 23 for shortened URLs to ensure accurate character count
add data point ttl to the write buffer ( # 701 )
modified the ` checkForAndKillXcodeIfRunning ` method to accept a boolean parameter for enabling or disabling Xcode prompts to
added a method ` getTerrainAtCell ` to retrieve the terrain at a specific cell coordinate to enhance functionality by allowing retrieval of ter
added default value printing in Pretty . java and created a new file T6665791 . java with a test class for annotation processing to
added error handling for missing QuestEncryptionKeys . json file in ResourceLoader . java to improve debugging by providing a clear error message when the
modify the return condition to check if the request is not push to ensure that push support is disabled when not in push mode
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method call from BlockUtil . java to streamline the signing process by eliminating unnecessary signing
modified the return statement in FileSystemView . java to handle empty root cases and added security checks in Win32ShellFolder2 . java to improve
updated row handling logic in ColumnText and changed method name in PdfPRow to copyLastRow to improve clarity and functionality of row copying
refactor undo note management in ListFragment to use SparseArray for managing note selections to improve efficiency and maintainability of the undo functionality
update feedback question id and comment id in uploadbackupdata ( # 3558 )
removed null check for data in getTransferData method to simplify error handling by throwing an exception for non - null data
no effective change - remove unused pstmtdelegate
refactor padding retrieval in AppWidgetResizeFrame and Launcher classes to use a unified Rect instead of a custom Padding class to improve code
refactor static MethodHandle initialization in NashornBeansLinker . java to introduce a new constant for consStringFilter to improve code
refactor ClassGraph and ScanResult classes to improve code structure to enhance maintainability and readability of the codebase
replaced ` CountDownLatch ` with ` goAwayLatch ` in ` IdleTimeoutTest . java ` to clarify the purpose
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve read
replaced instances of ` new ThreadLocal ( ) ` with ` null ` for the ` currentBook ` variable across multiple Java files to improve
added support for the ` vote ` method in ` ContactSecurityVoter ` to ensure that only supported ` MethodInvocation ` types are accepted in
removed unused imports for GachaHandler and Tools in DataLoader . java to streamline dependencies and improve code clarity
added row count logging functionality to the ` postUpdateLog ` method and updated its implementation to accept an integer parameter to provide users with insights
ggb - 1353 fix margin for docking in web
set default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration . java to ensure default values are set for better performance
added ObjectReleaseTracker and ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent memory leaks
replaced the use of ` DefaultWebSocketFrame ` with a ` ChannelFutureListener ` for closing the WebSocket frame to improve responsiveness by
updated test classes to use new event listeners and added an interceptor to handle state machine errors to improve test coverage and ensure proper event handling in state
refactor SettingsActivity to use a dedicated method for setting the list background to improve code readability and maintainability by centralizing background setting logic
replaced Apache Commons StringUtils with OpenHAB ' s StringUtils and added a null check for the line variable to ensure compatibility with the latest
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to enable the accumulation of average and count based on
updated formatting in Put . java and ReplicationSink . java to improve code readability and maintain consistency
replace VALID _ CACHE _ SET with REGEXP _ CACHE to store regular expressions to improve performance by reusing existing regexp instances instead of creating new
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a way to reset the ` gameThread ` to
added a login method to the DigestAuthenticator class that checks the realm against the specified realm to ensure that the authentication process only proceeds if the
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency of parameter merging to enhance code readability and maintainability while
updated InfoStatus messages to include the class name and added a toString method in LoggerContext to improve clarity of log messages for better debugging and
replaced ` waitPoint . countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog . java ` and ` HA
added a check for Android O and modified image view condition in PhotoViewerActivity . java , and implemented user auto - complete adapter in UserAuto
updated schema info level from minimum to basic in SchemaCrawlerTest . java to ensure compatibility with the latest schema information structure
replaced ` XMLStreamWriter ` with a buffered output stream in ` SaveTask . java ` to improve performance by reducing the number of operations
updated character encoding handling in TestPayloads . java to use fixed byte length and UTF - 8 to ensure consistent character encoding and improve byte conversion
fix mc - 103516 : entity . isvalid ( j2 ) should return false
removed and added Tomcat10ContainerAdapter and Tomcat101ContainerAdapter from the list to streamline the configuration by eliminating
[ drools - 725 ] fix serialization of accumulate with multiple key in the same kogito context
fixed switch / cases indentation see camel - 14540
pdfbox - 4892 : remove public from class , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and headers to enhance flexibility by allowing dynamic URL resolution based
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to improve code readability and reusability by encapsulating
added notification for command start in AsyncBackgroundTaskManagerTest to ensure that the task manager starts before proceeding with further operations
updated the ` computePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` to improve robustness by preventing potential
replaced TokenFilterFactory with CharFilterFactory in LukeRequestHandler . java to enhance character filtering capabilities in the analysis process
replaced multiple null checks with a centralized null check method in AbstractCategoryItemRenderer . java to improve code readability and maintainability by
added verbosity handling to the ` createSubContext ` method in ` JavacStep ` and ` JavacStep ` classes to allow
added a check to convert the schema to uppercase if the database type is Oracle to ensure compatibility with Oracle database schema handling
added context class name to context description in AsyncLoggerAllThreadContextImplementationsTest . java to improve clarity of context description for better debugging
added a new file TestShrinkToOneRegion . java with a main method that calls System . gc ( ) to facilitate garbage collection
replaced string splitting method with Splitter for better readability to improve code readability and leverage built - in Splitter for better performance
replaced ` utf8ToString ( ) ` with direct usage of ` context ` in ` AnalyzingInfixSuggester ` and
updated the attachment handling in PushsaferMessageBuilder . java to use a local variable for better clarity to improve code readability and maintain
removed the ` showLabelStats ` method from ` ModelExplorer ` and changed ` provenanceHash ` to ` jsonResult ` in ` StripPro
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
updated the FORMATTER function declarations from ` private final static ` to ` private static final static ` across multiple test classes to ensure consistency in formatting
replaced Apache Commons Log with Java ' s BigDecimal and RoundingMode in UDFRound . java to improve rounding functionality by using BigDecimal and Round
[ graaljsscriptenginefactory ] use config value instead of hardcoded null
changed the visibility of Test1 and Test2 classes from package - private to public to allow access to these classes from other packages
updated player event messages to use " deny . no _ enter " instead of " no _ permission _ event " and refactored variable names
modified the ` getAdditional ` method in ` ConditionInConstantSet ` to include a ` Session ` parameter and updated its implementation to include the session
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` and
added dynamic body and circle transformations in Box2DCharacterControllerTest . java and reset friction in ContactList . java to enhance test
added tests for exceeding maximum buffer sizes and memory sizes in FLIGHT _ RECORDER _ OPTIONS . java to ensure proper handling of memory
removed redundant assertions for " must be power of 2 " in ObjectAlignment . java and Options . java to streamline code by eliminating
added functionality to extract and utilize the target package from the Android manifest to enhance flexibility in specifying the target package for instrumentation tests
refactor DocHelper to improve code structure to enhance maintainability and readability of the code
updated the initialization of the acceptableThrowawayItems list to use an ArrayList instead of an empty list to ensure that the initialization of the list is
replaced generic method invocation with explicit casting for boolean , byte , char , short , and int variables in Test6987555 . java
reformatted code for improved readability and consistency in MessageHandler . java to enhance code clarity and maintainability
refactor Inflection class to improve code readability to enhance maintainability and facilitate future updates
added methods to retrieve and set the locale in EvaluationContext to enable dynamic locale management for the el context
removed unused import of Plugin from SummaryPrinter . java to streamline the code by eliminating unnecessary dependencies
added a break statement in DrawerActivity . java to prevent fall - through behavior in a switch case
updated import statements in MongoQueryCreator . java and modified debug log message to use getQueryObject ( ) to improve clarity and consistency in logging
added xwork . loggerfactory system property . xwork . loggerfactory
renamed test methods for clarity and consistency in naming conventions to improve readability and understanding of the test ' s purpose
updated bean names in AvailabilityHealthContributorAutoConfiguration and AvailabilityProbesAutoConfiguration to include " livenessStateHealthIndicator " and " read
make localpstoreprovider thread - safe
changed the access modifier of the ` deleteFiles ` method from public to private to restrict access to the method for better encapsulation
renamed the ` Provider ` class to ` ServiceProvider ` and updated related methods for clarity to improve code readability and maintainability by
truffle : remove unnecessary throw in javainteropreflect . set ( ) .
added functionality to check if two toolchains have been created and updated related tests to ensure the Android SDK changes parser is invalid when toolchains are
do n ' t remove the context from the engine if they be already add to the engine .
updated failure string checks in AbstractCheckDescriptor . java to use contains instead of indexOf for improved clarity to enhance code readability and maintain
updated linker flag handling in PrebuiltCxxLibrary classes to use ' setExportedLinkerFlags ' instead of ' setLinkerFlags '
replaced the method ` onConfigurationChangedInternal ( ) ` with ` updateRecentsRotation ( ) ` in ` RecentsView .
updated type parameters in multiple classes to use wildcard generics to improve type safety and eliminate unchecked warnings
updated the object array to include the hash of the newBlock object to ensure the correct hash is used for blockchain processing
use getstorepathphysic ( ) instead of getstorepathcommitlog ( ) . getstorepathcommitlog ( ) .
removed the try - with - resources statement for JvmGcMetrics and JvmHeapPressureMetrics in MicrometerMetricManager . java to
add miss / found / miss stats to compaction log
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new code
added a method to check for the presence of a system UI object and execute a shell command for keyguard status view to enhance functionality by allowing
changed logger from static to instance variable and made principal and sessionIds fields final to ensure immutability of logger , principals , and sessionIds
added a check for empty cookies in InMemoryCookieStore and a corresponding test in NullUriCookieTest to ensure that the removeAll method returns false
bonsai try : respect account deletion across transacitons ( # 1952
changed the return type of ` getText ` methods from ` String ` to ` CharSequence ` in multiple repository classes to allow for more flexible text
added @ NotYetImplemented annotation to AlertsTest . java to mark the test as unimplemented in MARIONETTE to address
added a finally block to ensure the destination connection is returned even if an IOException occurs
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references across multiple files to
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing shared resources
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored ` wrapWithTracingAndCan
added a new method ` updateFirstLineShowing ( ) ` to handle text selection when the first line is out of bounds to improve user
hive - 20686 : testinformationschemawithprivilege should use work directory for test ( sergey shelukhin
refactor graphics configuration retrieval logic in Component . java to improve code readability and handle null cases more effectively
tika - 3497 -- remove test for oom in legacy mode .
camel - 16462 : camel - core - optimize pipeline to reduce code duplication .
refactor parser file handling and tag management in PrintTagList . java to improve command - line argument validation and enhance tag processing functionality
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
test : fix test to handle eofexception
[ java ] make startfromtruncatedrecordinglogtest more robust .
updated the arc calculation in LineBorder . java to use a float value instead of an integer to improve precision and consistency in rounding behavior
added a check for empty gallery images in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerException when galleryImages is null or empty
added a nullable constraint for the " DEPLOYMENT _ ID " column in the database change log table to ensure that the deployment ID is correctly
pdfbox - 2576 : use interactive form instead of fdf for printfields and setfield
removed the boolean parameter from method signatures in AlterTableAddConstraint . java to simplify method signatures and improve readability
refactor engine management in QuickfixjComponent to use a separate map for provisional engines to improve efficiency and maintainability of the engine management
added a new boolean field ` displayZoomControls ` and modified the ` setMixedContentMode ` method to use it to enable or disable zoom
added corporea _ block , corporea _ brick , corporea _ slab , corporea _ slab and corpore
refactor ConnectionFactory to improve connection handling to enhance performance and reliability of database connections
added a method to disable menu items in GpsMainActivity to control menu behavior based on user settings for Gpx , KML , and
updated the message for an empty favorite list from " headline server search " to " filter list " to clarify the purpose of the
hhh - 15836 - fix test to use @ setting instead of @ serviceregistry . setting
updated MotorMountConfigurationPanel to use subpanel instead of ' this ' in MotorMountConfigurationPanel to improve UI respons
changed the line separator from ` System . lineSeparator ( ) ` to ` System . getProperty ( " line . separator " ) ` in ` String
added getter and setter methods for creator and subject properties in POIXMLProperties . java and updated test cases in TestPOIXMLProperties .
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] check if cnc file be empty before wait for it to be read .
refactor ` UnsatisfiedTypeBounds ` to replace ` NonMarkedFoo ` and ` MarkedFoo ` with ` FooCommand
added methods to check if a file is a JMod file and adjust the classPath accordingly to ensure proper handling of JMod files in the classpath
updated the ` TreeBackedElement ` , ` TreeBackedEnter ` , and ` TreeBackedPackageElement ` classes to remove the
replaced direct assignment of tokenRequest with a new instance of PublicTokenRequest in Saml2TokenGranterTest and UserTokenG
[ hotfix ] [ table - common ] fix array . get ( ) in abstractfrompropertyvaluerangedescriptor
added a sync method to ZooKeeperWatcher and called it in ZKAssign to ensure that changes to the ZooKeeper are properly synchronized to maintain data integrity and
added check for no current context in GLUtil . java to ensure proper error handling when no current context is available
[ drools - 770 ] avoid remove activation from ruleflowgroup if it be not active
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertion in IoTDBPipeIT . java to improve error handling and
add cleanup method to clientqueuedisruptiontest to fix flaky test
refactor : use new defaultjavaprettyprinter ( ) instead of signatureprinter ( # 3649 )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated import statements in GeoPointField , GeoPointInPolygonQuery , GeoPointNumericTermsEnum , and GeoPointPrefixTermsEnum classes to
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to use it to facilitate testing of
fix npe on empty item in forge and universal bucket
updated references from " rule path " to " rule timeseries " in TSParser . java and SQLParserTest . java to improve clarity and
added a check to return 0 if the velocity is less than an EPSILON value to ensure that the calculation only proceeds if the value is
replaced calls to ` getBucket ( gcsUri ) ` with ` _ storage . create ( BlobInfo . newBuilder ( ) ) ` for better
removed duplicate calls to blockCloseVertxByName ( " transport " ) in TestHighwayTransport . java to ensure proper resource management and avoid
ddl : add ` ` create or replace view ' ' and ` ` drop view if exists ' '
updated checkEngine parameter from 2 to 3 in CarrotClusteringEngineTest . java to adjust test coverage for the new cluster engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable the test due to rewriting issues
added a new ` ParserStateObjectInputStream ` class and updated ` ParserCacheCommand ` to use it for deserialization to enhance error handling for invalid
added null checks and initialization for objectQuotingStrategy in ChangeSet and DatabaseChangeLog classes to ensure proper handling of quoting strategy based on change log
replaced the parsing method from ` parse ` to ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to improve
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the codebase
added a method to quote the endorsed directory paths in AntCompiler . java to ensure that paths are properly quoted to prevent potential issues with
added a scrim animation to the launcher for smoother transitions to enhance user experience by providing visual feedback during screen transitions
updated the long parsing limit from 2 to 1 in TypeInferenceUtils . java and added new integer types in TypeInferenceUtilsTest . java to
chore ( deps ) : update java microgenerator to 1.0 . 2 and update gax - java to 2.1
added validation for Windows path prefixes in WindowsPathParser . java and corresponding tests in PathOps . java to ensure that long path prefixes are only
replaced InetSocketAddress instantiation with a direct instantiation of MulticastSocket to simplify code and improve readability by eliminating unnecessary parameters
removed duplicate calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
change return value from nBits to nBits . clone ( ) to ensure that the original nBits array is not modified externally
lucene - 9748 : fix name of collector in profilercollector ( # 1748 )
refactor type hint handling in MappingMongoConverter to introduce a new method ` requiresTypeHint ` to improve code readability and maintainability
added performance measurement for creating proxy factories in ProxyMaker . java to improve performance tracking during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting for connection issues
replaced the method ` reinflateWidgetsIfNecessary ( ) ` with a call to ` getWorkspace ( ) . reinflateWidgets
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion functionality in a dialog to ensure that the file dialog beh
fix ( lwjgl ) : display . update ( false ) and display . processmessages ( ) do n ' t work in lwj
update instructorstudentlistpageuitest . testshowphoto ( ) to show profile picture
added methods and environment variables handling in TestIgnorance . java to allow tests to be ignored based on specific system properties to enhance flex
removed the pointer parameter from the fling method signature in ScrollPane . java to simplify the method signature for better usability
added null check for pageable in QueryDslJpaRepository . java and a corresponding test in QueryDslJpaRepositoryTests .
added a method to compute memory size based on a fraction in MemoryManager . java and corresponding tests in MemoryManagerTest . java to enhance memory
camel - 20297 : camel - core - camel - jms - publish : increase test timeout to 20 second
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
update previousIndex initialization and batch handling in StreamingAggTemplate . java to ensure proper state management and prevent potential null pointer exceptions
throw a graalerror if a plugin need to be null check .
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to facilit
updated log messages to reflect the status of the watched file being moved to fully played to improve clarity of log messages and enhance error handling
replaced the ` setAccessable ` method with a ` newInstance ` method in ` InjectorProxy ` and updated instance creation in ` StandardInjector
[ hotfix ] remove unnecessary close ( ) call in flinkstreamingcreatefunction
added unit tests for ` ShowStatement ` , ` UnsupportedStatement ` , and ` CreateTable ` functionalities to ensure proper parsing and handling of
return an empty list instead of null in AppleTest . java to ensure that the method returns an empty list instead of null
updated test cases in NamedSetTest . java to include Quality Distribution and Deliberate error to improve test coverage for Cruise control
updated WebSocket connection logic to handle reconnection scenarios and improved connection state management to enhance robustness and clarity in connection state management during WebSocket
replaced calls to setAttribute with removeAttribute for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _ TARGET _
refactor table creation logic into a new method ` createOrEnableTableWithRetries ` to handle retries to improve reliability of table creation by
added initialization and configuration settings for PMS in FormatRecognitionTest . java to ensure proper initialization of PMS settings during test execution
create ova template on image upload when template format be ova
updated test imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 and JUnit4 classes to improve test
added @ Override annotations in multiple authentication service classes to enhance code clarity and ensure proper method overriding
updated table and table definitions in AppendOnlySchemaIT . java to use metricVal1 instead of metricVal to ensure consistency and correctness in
added a check for document count mismatches in SegmentReader . java to ensure data integrity by throwing an exception for mismatched document counts
add logtrace ( ) and logname ( ) method for sip communicator jain slf4j logger .
pdfbox - 4892 : increase filament length for staves w / no starting barline
changed the default value of ` handleFileUploads ` from ` true ` to ` false ` in ` VertxPlatformHttpServerConfiguration ` to
added a test method ` doFilterDefaultRequiresCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to ensure
use hotspotresolvedjavainterop . getfield ( ) instead of field . getcallsitetarget ( ) .
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
replaced direct call to ` Instant . now ( ) ` with a variable ` now ` for better readability to improve code clarity and
hhh - 16462 : do n ' t use final field in cte statement when copy cte statement
added import statement for java . sql . ResultSetMetaData in QueryCompilerTest . java to facilitate the use of ResultSetMetaData in the
updated the string format in JsLibrary . java to include the project filesystem root path to improve clarity and maintainability of the library output configuration
updated the angle slider range from - 180 to - Math . PI in RailButtonConfig . java to improve accuracy of angle representation in the
updated drawEncloser coordinates and refactored save execution in Saves . java to improve rendering accuracy and enhance error handling during save operations
added expression language support to KerberosProperties . java to enable support for expression language in the Kerberos framework
removed unnecessary null checks for remoteMountPointComponent in ThirdPersonRemoteClientSystem . java to streamline code by eliminating unnecessary null
updated ` setupViews ` method to accept ` ScrimView ` as a parameter and modified related classes accordingly to enhance the handling of scr
[ flink - 18901 ] [ state - backend ] add config option for enable periodic materialization in state backend
added getter and setter methods for the ` value ` field in the ` ProtocolParameter ` class and updated the ` List ` and ` ParamTag
add a new test case to demonstrate the behavior of chunking with a head
refactor ` parseDetails ` method to return a boolean indicating if the router was already marked as bumped to improve error handling and provide
added Content - Type header to the request body in SwitchToPostInterceptor . java and updated SearchRequestUnitTest . java to include it to
refactor EmbeddedClientConnector class for improved readability to enhance maintainability and facilitate future feature additions
replaced SQLFeatureNotSupportedException with a warning log for ignored setFetchSize method in PhoenixResultSet . java to improve error handling and
added initialization of AndroidNet with null parameters in AndroidDaydream . java to ensure proper initialization of AndroidNet instances
sulong : fix typo in llverminatimesegmentdatamanager
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 16400 remove hbase - prefix - tree from tablemapreduceutil ( addendum )
added handling for inflation failure in DesignerActivity and made the root variable final in XMLLayoutInflater to improve user experience by preventing
refactor PushbackInputStream class to improve input stream handling to enhance performance and maintainability of the input stream processing
refactor lower phase to use schedulephase instead of controlflowgraph
updated error message from download _ folder _ failed _ content to sync _ folder _ failed _ content to clarify the purpose of the error
updated Makefiles . java and MakefilesTest . java to include a new newline parser for newline handling to ensure correct parsing of carriage return
replaced direct calls to getDeletedDocs ( ) with MultiFields . getDeletedDocs ( ) and added null check for deleted documents to improve
replaced ` super . setTransformRefresh ( ) ` with ` setTransformRefresh ( ) ` and added ` setBoundRefresh ( ) `
[ gr - 16462 ] remove unnecessary check for uninterruptible method in sharedmethod .
added a framebuffer size callback to the LwjglWindow class for handling window size changes to improve the handling of window size changes and
updated animation parameters in LauncherAppTransitionManagerImpl . java to use offscreen transitions instead of right - to - left transitions to improve visual
replaced instances of ` NodeLiteralNode ` with ` NullLiteralNode ` and updated related methods to handle null values to improve clarity and
added ` totalSize ` and ` setLength ` methods to ` CompoundFileWriter ` , ` FSDirectory ` , and ` IndexOutput ` classes to
updated AndroidNdkScriptGenerator to check for the existence of the manifest file and modified AntScriptGenerator to include memcpy _ wrap .
camel - 18131 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource for consumer / producer to
added permission handling for " * " role in RuleBasedAuthorizationPlugin and updated query parameters in TestRuleBasedAuthorizationPlugin to enhance security checks and
refactor ZookeeperClientServerRegisterRepository to improve handling of URI register events and streamline path processing to enhance code readability and maintainability
refactor methods in ReturnsDeepStubs for improved clarity and functionality to enhance code readability and maintainability by using more descriptive
modify return value of getCallValue ( ) to return a Byte ( " 0 " ) when the size of the call value is zero to
change debug log message to use placeholder instead of string concatenation to improve code readability and maintainability
updated the ` mapPBEAlgorithmToOID ` method to return an OID and changed the algorithm name in the ` PBETest ` class
tmi - tiff : do n ' t throw eofexception if length be too large .
added validation for job parameters in CommandLineJobRunner and improved error message formatting to enhance error reporting for invalid job parameters in the CommandLineJobRunner
remove carriage return from message content in test
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and conciseness of case statements
refactor lastSequenceId to use an AtomicLongFieldUpdater for thread safety to improve performance by reducing synchronization overhead
added a new file ` Test . java ` that includes a static method ` sum ( ) ` and a main method ` main ( ) `
updated minimum and maximum SDK configurations in ShadowWifiManagerTest . java and changed private fields to protected in WifiUsabilityStatsEntryBuilder
added a new Java file ` Solution . java ` that implements a query solution that checks if a given integer is equal to a specified value to
patch by jbellis ; use concurrenthashmap instead of map
refactor taskbar recreation logic to improve clarity and maintainability to enhance readability and maintainability of the code
refactor SyncFutureCache class implementation to improve performance and maintainability of the cache management logic
update Dubbo protocol version from 2.0 . 1 to 2.0 . 2 and update LOWEST _ VERSION _ FOR _ RESPONSE
[ java ] uselessstringvalueof : fix false positive with string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior
hollowproducer allow for specification of target max type shard size , default to 16mb
added new test cases for " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in Test
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the code
updated database location in test mode and refactored parameter handling in DDLTask to improve clarity and functionality of database description display in test mode
added a call to ` ClearDatabaseChangeLogTableStatement ` in ` AbstractJdbcDatabase . java ` to execute a clear database change log table
modified the ` CallPath ` implementation to include version handling and updated related tests for integration to improve flexibility in handling service versions within API
updated exception message from " Untable " to " Unable to register " and added a closed state check for the Phoenix JDBC driver
updated multiple Java files to replace references to " Mesurement " with " Measurement " to clarify functionality and improve code readability
added unit tests for file deletion in ConflictsResolveActivityIT and modified FolderPickerActivityIT to extend AbstractIT to improve test coverage and ensure
do n ' t remove deoptimizations when devmode be set to false .
added a length check in String . java and a test method for removing leading and ending quotes in StringHelperTest . java to ensure proper handling of
updated JpaQueryCreator to use a switch statement for handling NOT _ CONTAINING type to improve code readability and maintainability by redu
do n ' t set push branch id if we have too long to authenticate .
added a dispatch method call to the P25MessageFramer class to enable the dispatching of the P25Message object to enhance message
added null checks for handler before calling checkClosed ( ) in WebSocketImpl . java and a new test for clearing client handlers in WebsocketTest
[ ds - 3352 ] update discoveryit to use new indexablepooltask and indexablepoweredtask interface
updated widget padding values in AppWidgetResizeFrame , Launcher , and LauncherAppWidgetHostView to use default padding values to improve consistency
added methods to hide all apps in the taskbar UI controller and updated the closeOverlay method in the BaseActivityInterface to enhance user experience by
replaced ` Thread . sleep ( 1500 ) ` with ` launcher . join ( ) ` in ` launch ` method to improve respons
updated point calculations in JavaSEPort . java to use canvas ' s x and y coordinates instead of zoom levels to ensure accurate positioning of
refactor notification handling in UploadService to use startForeground method instead of notificationManager to improve code readability and maintainability by centralizing foreground
fixed bug 1373709 - excessivepubliccount no long report false positive on static final
added a retry configuration for HBase client retries in TestThriftServiceHandler to improve reliability of the HBase service execution
changed log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity for debugging purposes
added error handling for FileNotFoundException in ResourceUtils and changed log level from debug to trace in AbstractCipherExecutor to improve error handling and reduce log verbosity
added a new ` BittrexTickersResponse ` class and updated ` BittrexMarketDataServiceRaw ` to return tickers
refactor EntityEntry to store enum constants in a private field and improve type safety to enhance code clarity and maintainability by centralizing enum
refactor methods to accept Object instead of Class < ? > for improved type safety to enhance flexibility and maintainability of session management
added Unicode escape sequences to the character array in FileUtils . java to ensure proper handling of special characters in character sets
added support for stylesheet management in ResourceService and updated related methods in ResourceHandler and DefaultServlet to enhance resource management and improve stylesheet handling in the
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before proceeding with tests
changed the method call from ` ObjectParameterStrategy . invokevirtual ` to ` PointerParameterStrategy . invokevirtual ` in ` X86MethodGenerator
changed the database type check from Postgres to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockroach
removed the condition checking for " java . lang . String " in ObjectStreamClass . java to streamline the code by eliminating unnecessary
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and added a new class ` SymbolNotFoundError
added logic to conditionally create a SolrDocument based on the presence of pseudo fields in BinaryResponseWriter . java to improve handling of documents based
added WebSocket handling for PING and PONG cases in WebSocketImplBase . java and implemented a test for pause and pong functionality in WebSocketTest
updated the NON _ IDENT _ ESCAPES string to include a hyphen to ensure proper handling of special characters in regular expressions
replaced specific DNS imports with a wildcard import and refactored cache configuration in DnsResolverProvider . java to streamline import statements and enhance
added a conditional annotation to the TraceMessagingAutoConfiguration class to ensure compatibility with messaging tracing in the application
mondrian : fix mondrian - mart dialect . getquoteidentifierstring ( ) for db2
updated import statements in IDELanguageClientImpl , EditorTextActionMode , and IDEEditor classes to include necessary event and widget classes to
added a condition to handle closing tags in XMLLightweightParser to ensure proper handling of closing tags in XML processing
removed the setVisibility ( GONE ) method from TouchCharInput . java to simplify the code by eliminating unnecessary visibility control
added null check for the current user before comparing the group ID to avoid potential NullPointerException when the user is not set
refactor JSObjectLinker to handle index assignment more efficiently to improve code readability and maintainability by reducing redundancy
modified the DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator classes to allow initialization of randomStringGenerator and suffix with null values
added @ Deprecated annotation to SecurityConfig . java to mark the class as outdated to discourage its use in future development
added @ Deprecated annotations to multiple Java classes to indicate that these classes are obsolete and may be removed in future versions
deleted ` JoglDebugAdaptor . java ` and modified ` GuiceStartup . java ` to include debug logging configuration to streamline code
updated the ` toString ` methods in ` ExtraFieldPropagation ` , ` ExtraFieldPropagationTest ` , ` AWSPropagation ` , and ` AWS
added ` PendingIntent ` to ` mNotification . contentIntent ` in ` FileDownloader . java ` and ` FileUploader . java `
added a private method ` set ( ) ` and modified the ` nextOrd ( ) ` method in ` Lucene80DocValuesProducer `
refactor DateTimeFormatter class for improved readability to enhance maintainability and ease of understanding for future developers
removed unnecessary try - catch block for loading shell folder manager in WToolkit . java to simplify code and improve readability by eliminating
added validation checks for administrator credentials in the setAdministratorCredentials method to ensure credentials are not null or empty to prevent authentication
added a constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and updated width calculation for tablet and two panels to
added call to beginRender and endRender in PSurfaceJOGL . java to ensure proper rendering behavior with the sketch window color
refactor Hashing class to improve performance to enhance efficiency of hashing operations
updated the ` accept ` method in ` FileSenderFactory ` to use ` Files . getBaseName ( ) ` for file name matching to improve
updated the ` addToListIfNeeded ` method to accept an additional ` contentDescriptionInt ` parameter for icon icons to enhance the user interface by providing
added a null check for the type variable in J . java to ensure that null checks are performed only when the type is not null
increased ACTIVITY _ START _ DELAY from 500 to 800 to increase activity start delay from 500ms to 800ms
added a constant WEBAPP _ HOME in SolrJettyTestBase and updated the home path in JettyWebappTest to use it to
set selectedMotorSet to null and clear table selection in ThrustCurveMotorSelectionPanel . java to ensure proper management of motor
added BufferUtil import and called clearToFill method in ByteBufferPool . java to ensure the buffer is cleared before use
refactor notification rule processing to use originator id instead of entity ID to improve clarity and functionality of notification rule processing
replaced instances of " authorization . ldap " with " authentication . ldap " in multiple configuration files to align with the new authentication - related configuration
added exchange deletion and queue deletion logic in DurableOnTransient . java to ensure proper handling of transient transactions in the clustered channel
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
refactor connection handling in ServerInfoService to use a listener for connection failures to improve error handling and provide clearer feedback on connection failures
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class for improved performance to enhance performance and resource management during quartz operations
added exception handling for IllegalStateException in the lookup method to improve robustness by preventing application crashes due to illegal state exceptions
update schema references from Spring Security 6.2 to 6.3 across multiple files to ensure compatibility with the latest Spring Security features and improv
updated the ` newNameResolver ` method to accept ` NameResolver . Args ` instead of ` helper ` and modified the ` DiscoveryClientNameResolver
updated JavacParser to handle cases where newAnnotations is empty and introduced a new earlier method to improve annotation conversion logic and introduce a
added " com . sun . naming . internal . " to the package access checks in CheckPackageAccess . java to ensure proper access to internal
changed the strict variable from false to true in StaxEventItemReader . java to enable strict validation by default
modified the ` readPartition ` method to include an ` isExhausted ` boolean parameter and updated the loop logic to handle the exhaust
refactor ActionResetingPool class to improve code structure to enhance maintainability and readability of the code
added a boolean variable ` isInXYMode ` to check if the light state is in XY mode before returning it to optimize performance by avoiding
refactor CellLayout to utilize an array of target cells for folder creation and reorder radius calculations to improve code clarity and maintainability by
replaced direct calls to ` activity . showLoadingDialog ( ) ` with a call to ` FileDisplayActivity . showLoadingDialog ( )
added null checks for uigestureFile and uigestureFile before initializing collections to avoid potential NullPointerExceptions when uigestureFile is not
updated test cases in FieldNamingPolicyTest to use Locale . getDefault ( ) for case - insensitivity to ensure consistent behavior across different locales
added a method to set the listeners in the result object to ensure that the result has the correct listeners for processing
added a new method ` loadWithNewGlobal ` and updated existing method handles in ` Global ` and ` Context ` classes to enhance functionality by
added methods to convert StarTreeIndexSpec from JSON strings to strings to enable JSON serialization and deserialization of StarTreeIndexSpec instances
added ObjectPostProcessorConfiguration import to HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , and ServerHttpSecurity
replaced double quotes with single quotes in string replacement methods across multiple files to improve consistency and avoid potential issues with string literals
[ drools - 1641 ] fix npe when fire in operator with null value
added field cache management in TestDistributedSearch . java to optimize performance by avoiding FC insanity
add test case for message boundary event on subprocess
add ` resolvestaticcall ` to make it easy to find the target of a static call .
http : / / issues . apache . org / jira / browse / amq - 3496 - increase messagegrouphashbucketcount
added constants for slot IDs and updated method signatures to use slotId instead of a boolean for FIPS slot to improve code readability and
added alignment support in the Layout class and modified the startRenderer method in GdxRenderer to return a boolean indicating success to enhance flexibility in
[ hotfix ] [ test ] disable unalignedcheckpointitcase
added imports for MIDI midi classes and added a null check for certain classes in JDK13Services . java to enhance functionality by ensuring only
added a check for the existence of a keyword in the keywordToReference map before adding it to the keywordToReference map to ensure that the
camel - 16462 : fixed multicast processor to return the size of the collection instead of the size of the collection
removed unused methods and improved initialization in SegGraph , SegToken , and WordDictionary classes to streamline code and enhance maintainability
escape ` ` = ' ' and ` ` = ' ' in flavor statsd ( # 644 )
[ java ] add udp port to memberimpl and add it to memberserialization .
replaced ` OperatorMulticast ` with ` OperationMulticast ` in ` Observable . java ` and ` OperatorMulticast . java ` to
increased the timeout for sending messages in EventBusTracerTestBase from 1 to 100 milliseconds to improve test reliability by allowing more time
added a try - finally block around the latch counting logic in VertxTestBase . java to ensure latch is cleared in a finally block for
added a synchronized ` destroy ` method to ` SessionFactoryServiceRegistryImpl ` that sets ` cachedEventListenerRegistry ` to null to ensure proper cleanup
simonstewart : fix the flaky test that fail on travis
[ pytorch ] add test for map of tensor ( # 1193 )
added a TaskStackChangeListener to manage the visibility state of the task stack in RecentsView to improve user experience by ensuring the task stack
pdfbox - 4892 : do n ' t use regex for date parsing , add profiling test
camel - 16462 : camel - cxf should set property on factory bean if they do n ' t exist
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
added debug logging for play time calculation in LauncherAnimationRunner . java to improve visibility into play time changes during debugging
added a conditional check for BailoutOnException in C1XCompilation . java and introduced a new constant in C1XOptions .
changed default values for signup and passwd from " / create _ account " and " / forgot _ password " to null in the Links
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
replaced the ` onlyFormat ` field with a ` format ` field and introduced a new method ` getOnlyFormat ` to improve clarity
geotiffreader : set gc _ nodata to - 1 to avoid memory leak
sulong : fix npe in llvmwritenode when source section be null
replaced ` toString ( ) ` with ` new String ( toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and ` DefaultExecution
replaced ` client . blockUntilConnected ( ) ` with ` client . getConnectionStateListenable ( ) . addListener ( listener ) ` to
added null checks to the ` getNullableResult ` method in ` ArrayTypeHandler . java ` to ensure that null values are correctly handled when retrieving
replaced the existing RegexpTunnel class with a new method for retrieving the prefix using REProgram to improve flexibility and maintainability of the prefix
updated the application selection method to use the Application class instead of null to ensure the application is correctly instantiated with the correct class context
[ drools - 1641 ] avoid npe on mutable global context ( # 1649 )
replaced Preconditions checks with TransactionUtil validation for asset name , URL , and description in AssetIssueActuator . java to ensure only valid asset
make sure copy paste do n ' t keep the same algorithm for textfield
updated action labels and descriptions in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , and LGWebOSHandler to
replaced setting seed , active , and trust nodes with adding them to the configuration to streamline node management by consolidating seed , active ,
updated assertions in BaseTokenStreamTestCase to include detailed context and added failure handling in AnalysisThread to improve debugging information and ensure proper thread management
log4j2 - 1349 add an option to control the rollover interval in timebasedtriggeringpolicy .
refactor methods in ShadowAdapterView and ShadowListView to improve item click functionality to enhance usability and maintainability of the code
pdfbox - 4892 : fix typo , a suggest by valerybokov
added afterMethodScope method to GraphDecoder and improved debug output in PEGraphDecoder to enhance graph decoding functionality and facilitate debugging
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and refactored attribute handling to improve session management and enhance clarity
added a test for changing the service name in the Zipkin span reporter to ensure that the service name changes correctly to the manually provided service name
added logging statements and modified spool mode handling in JavaInMemoryFileManager and JavacToJarStepFactory to improve debugging and control
rename ` SeparatedProjectGenerator ` and related tests to ` SeparatedProjectsGenerator ` and update references accordingly to improve clarity and
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow more time for the lock operation to complete successfully
updated ConfluentSchemaRegistryDeserializerProvider to include a cache capacity constant and modified method signatures to include schemaRegistryConfigs to improve cache management and
replaced the JCheckBox ' remind ' with a new JCheckBox ' checkAtStartup ' and updated its description to provide users with localized
added new methods for key , value strength , expiration , maximum size , and weighed in NodeGenerator . java to enhance the NodeGenerator
hhh - 16462 : do n ' t throw transientpropertyvalueexception in cascadingactions if the child entity be transient
added support for proto property access in ScriptObject to enable proper handling of prototype properties in the scripting process
changed the default read mode from " heap " to " mmap " in CommonConstants . java and modified the return statement in ImmutableSegmentLoader .
added import for ByteArrayTemplate and modified return logic for byte class in ArrayTemplateBuilder . java to enhance functionality by integrating ByteArrayTemplate for byte
added Hipchat support to the SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class to manage Hipchat
replaced ` List < URL > ` with ` Set < URL > ` for ` commandRegistryUrls ` and updated resource retrieval logic to improve
updated warning log message to include the current context and added debug logging for troubleshooting to improve clarity of warning messages for better
camel - 16462 : camel - ftp - allow sftp to log in from remote server . thanks to michael for the
camel - 16462 : camel - jms - do not create transaction manager when not transact
vmware : fix checkstyle issue in util / vmware / vmwareresource . java
refactor Timers class for improved performance to enhance performance and readability of the code
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
removed deprecated deprecated constants from UAX29URLEmailTokenizer . java and updated constructor calls in TestUAX29URLEmailTokenizer .
removed the ` Map < Object , Object > ` interface implementation from the ` ScriptObject ` class and updated related tests accordingly to streamline the
refactor EventBusMetrics class for improved readability to enhance maintainability and facilitate future updates
[ ds - 3352 ] refactored code to use the new i18nutil method
replaced the @ PostConstruct annotation with the InitializingBean implementation in JaversTransactionalDecorator . java and added a method to ensure schema
removed null check for pgTypeName before adding it to the _ pgNameToSQLType map to simplify code by eliminating unnecessary null checks
added server initialization for multiple handlers in ScopedHandlerTest . java to ensure proper handling of server instances for multiple handlers
fix calltimeoutexception in waitnotifyserviceimpl . calltimeout ( ) .
replaced StringUtils . isBlank with StringUtils . isEmpty for username and password validation to improve code clarity by explicitly checking for empty values
changed the condition from checking if the permissionNode is an empty string to checking if it equals " * " to ensure proper handling of specific permission
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity by
changed the data type of postLogin from byte [ ] to String in HostBean and updated related methods accordingly to improve handling of post - login
refactor simulation handling in GeneralOptimizationDialog to improve clarity and structure to enhance code readability and maintainability by reducing redundancy
camel - 16462 : camel - core - allow to turn off context reload by default
updated log4j configuration settings in CommonTestUtils . java to align with new logging frameworks and improve logging configuration
refactor PrologSizeSanityCheck class for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check to verify if the input stream is supported before invoking the reset method in RequestBody . java to ensure that the reset operation only
added a check for the enabled status of the Neo4j server and modified the handling of beans in the DefaultBeanContext to ensure that
restore the player ' s speed and damage settings from the prefab to the client
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted the logic for calculating the number of weights to ensure
removed unnecessary StringBuilder and simplified return statements in GsonParser . java , and updated test cases in MetricsResourceTest . java to streamline cache string
updated parameter comments in ApacheHttpClientMediaWikiApi . java for clarity to improve readability and maintainability of the code
replaced instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` across multiple files to streamline transaction
pipe : use pipetaskcoordinator lock instead of reentrant lock
added a conditional check for " robolectric . usePreinstrumentedJars " system property to control the use of instrumented jars
modified the conditional check from ` ! isSilent ` to ` isSilent ` to ensure the condition correctly reflects the silent state of the execution
added validation to ensure dynamic fields have default values and required to improve error handling and provide clearer error messages for unsupported attributes
do n ' t call randomreadrepair in case of digest mismatch . patch by jbellis
replaced ImmutableSortedSet with Iterables for inclusion directories in PrebuiltCxxLibrary . java and added a test for includesDirs in Prebuilt
added boolean flags ` isSKIDSensitive ` and ` isSNSensitive ` to the ` AdaptableX509CertSelector ` class and modified
log4j2 - 1343 nosqlappender should use abstractappender . parseint ( int , 0 ) instead of try
added @ Deprecated annotation to GuiScreenEvent . java to indicate that the event should no longer be removed in version 1.16
added methods to manage adding , removing , and adding new categories in CategoryEditSearchRecyclerViewAdapter to enhance the functionality of category management in the
# 1193 - enh : add servercachetype parameter to servercachefactory . createcache ( )
rearranged the assignment of mass and CGOverriddenBy and CDOverriddenBy to iterate through all rocket components instead of
refactor ` javacompilerservice ` and ` synchronizedtask ` to use ` post ` method instead of ` doCompile ` to ensure proper cleanup
refactor Task class to use a Supplier for better flexibility and error handling to improve code readability and maintainability by reducing boiler
refactor ` WanReplicationServiceImpl ` to use a synchronized instance for ` StripedExecutor ` to improve thread safety and ensure ` Strip
added null checks for storage descriptor and table in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
updated lambda expressions in ` RemoteServiceRegistry . java ` and ` LocalServiceRegistryClientImpl . java ` to use lambda expressions to improve code
added a new file ` FilesTest . java ` and a static method ` delete ` in ` Files . java ` to test file deletion behavior
removed exception handling for socket closing in ServerSocketAdaptor and SocketAdaptor to streamline code by eliminating unnecessary exception handling
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replaced currentWorkingDirectoryList . clear ( ) with addWorkingDir ( f . toString ( ) ) in Project . java to streamline
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
changed the visibility of the String variable from public to private to restrict access to the String variable for better encapsulation
updated Java file paths for CSV and JSON types in SimplePostTool . java to ensure compatibility with the latest Solr versions
geosymbolicitem . issymbolicdiffers ( ) now return false for non - hassymbolicmode
refactored shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and ensure proper shutdown
changed the condition from checking if the type is null to checking if the type is null with the application to ensure that the application type is correctly
[ ci ] clean up web application context after each test
added search functionality to retrieve search strings from query parameters in RemoteBrowseHandler to enhance user experience by allowing dynamic search functionality based on query parameters
removed the visibility of the neutral button in the SetupEncryptionDialogFragment to improve user experience by hiding the neutral button during initialization
refactor item count methods in ItemServiceImpl and ItemDAO to include includeArchived and includeWithdrawn parameters to enhance functionality by allowing
updated SQL statements to use double quotes for column and partition names to ensure consistency in SQL syntax for better readability and maintainability
added logging functionality and exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error handling and provide better debugging information for OAuth2
updated multiple classes related to the XYDrawableAnnotation , IntervalCategoryItemLabelGenerator , IntervalCategoryItemToolTipGenerator , AbstractRenderer , AbstractRenderer ,
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to improve test reliability and clarity to enhance test reliability and maintainability
updated dismiss delay from 20000ms to 10000ms in ExtractionModelFrame , DataBrowser , and SQLConsole classes to improve user experience by
added support for running a single test method with JUnit 5 in the ActionProviderImpl class to ensure compatibility with both Surefire 2.
replaced HumanReadableException with RuntimeException in WorkerShellStep . java to improve error handling by providing a more specific exception type
[ hotfix ] [ datastream ] add @ experimental annotation for datastreamutils and collectsink
[ hotfix ] fix checkstyle violation in streamcepstrumsource
added a check to return false if the index exceeds the end of the list to prevent potential index out - of - bounds errors
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure compatibility with the new parser structure
added confirmation and required type options to the DebugPaste command to enhance user experience by providing a confirmation option for debug actions
improve error message when no endpoint find .
simonstewart : make sure focus do n ' t interfere with the new creation mode
replaced the ` Arg ` class with a new ` AbstractGoBinaryDescriptionArg ` interface and updated related imports to improve code clarity and
refactored environment variable retrieval logic in Jooby . java to improve readability and maintainability of the code
updated ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduced ` SecondDummyRetryListener ` to
fix number format in elasticmeterregistry ( # 498 )
refactor Contribution class to initialize email , author , and commits with a single instance of the Contribution class to improve code clarity and
replaced a loop with a do - while loop for appending a period in JUnitFormatter . java to improve performance by avoiding unnecessary iterations
modify the way elements are retrieved and instantiated in the Subject class to ensure proper handling of non - LinkedList types when retrieving elements
enhanced error messages in StaxEventItemReader to include the resource URL to improve clarity of error messages for better debugging
update testmultirendertarget to use pointlight array instead of geometry
updated client result retrieval to handle null currentProfile and added debug logging to improve error handling and provide clearer logging when the current client is not
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
added cryptographic parameters for " p " , " q " , and " g " using BigInteger and DSAParameterSpec to enhance security by
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
act - 511 : add engine version to process definition when deploying process ( act - 5 )
updated property names from " class . resource . loader " and " file . resource . loader . file " to " resource . loaders " and
updated thread verification logic in CEntryPointSnippets . java and VMThreads . java to include a new method to verify if a thread is
added null check for the map in GenericUDFMapValues . java and created a corresponding test class TestGenericUDFMapValues . java
renamed " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to clarify the purpose of the interceptor
added properties for enabling oil well generation rate and spouts in BCEnergyConfig . java and modified OilGenerator . java to
added a check for the existence of the " . clean - me " directory in the import context and updated related logic in JobQueue to ensure
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56363 -
removed redundant import statements from CRLDistributionPointRevocationCheckerTests . java to streamline the code by eliminating redundancy
added EXTID _ ZIP64 and EXTID _ EXTT constants and import statements in ZipConstants64 . java and ZipEntry . java to support
refactor ` newFileSystem ` methods in ` ZipFileSystemProvider ` to improve file validation and error handling to enhance robustness by ensuring only valid
updated conditionPanel layout to use createHorizontalGlue ( ) instead of createHorizontalStrut ( ) to improve visual consistency by using a more
updated connection initialization in FailoverUpdateURIsTest . java to ensure consistency in connection handling
added Gson serialization annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enhance JSON serialization support
fix deletebook ( ) to delete db entry only if the file be delete .
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
fix off - by - one error in abstractajpprocessor . processresponse ( )
do n ' t start / stop the admin console server when the server be stop .
removed the unregistration of binary and text handlers from WebSocket implementation to streamline the handling of WebSocket connections to improve code clarity and ensure proper
added configuration properties for device ID transformation and ID table settings in IoTDBDescriptor . java to enhance configuration flexibility by allowing dynamic configuration of ID
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and introduced a new DelayingSearchComponent class with delaying search functionality to
updated the condition to check for the presence of the " http : / / www . com / rfc3161 " access error in TestSignature
fix p2pkhoutputscript . createp2pkhoutputscript ( ) to write the length of the scriptcode
added " / schema / types / fieldType " to the expression in IndexSchema . java to support additional schema types in the schema
updated the Completers class to check if valueCompleter is not null and added a new OptionCompleterTest class with a test for
fix checkstyle issue in util / s3utils . java
changed the data type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to accommodate larger peer IDs
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5451 : ftp upload
added transparency settings for the reply button in TweetFragment . java to improve user interface responsiveness and visual feedback
added mocking for AccessLogContext and modified expected string construction in AccessLogSupportTest . java to improve test clarity and ensure accurate timestamp
marycachetest : use tmp / testfiles - deleteme for test
remove null check for subscribers in SettingImpl . java to simplify the logic for checking the presence of subscribers
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed initialization of XMLObjectProviderRegistrySupport in AbstractSaml10Response
replaced printStackTrace ( ) with a warning log statement in DataBrowser . java to improve error handling by logging warnings instead of printing stack traces
added a check to ensure the assets directory exists before proceeding with development mode to prevent errors when the asset directory does not exist
[ hotfix ] [ statebackend ] use writeoptions in rocksdbkeyedstatebackend
changed the default format of the DEFAULT _ FORMAT constant from " value - tag - index " to " value - index " to ensure consistency in
fix bug : douglas ' s minprecision should not be set in the request
change default value of native secp256k1 and altbn128 to true
rename DuclsSandboxTest to SandboxTest and update references accordingly to improve clarity and consistency in naming conventions
camel - 16462 : camel - cxf should use exchange . setexception instead of log a warning .
make forwardpropagatetree public so that it can be use by other package .
updated the SQL query to include a time limit of 20ms instead of a fixed time limit to improve query performance by reducing the time limit
add a warning message if $ { project . basedir } be not support during profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future feature additions
added zoom functionality to ShareActivity to handle the back key event to enhance user experience by allowing zoom functionality in the app
added a condition to skip processing deprecated fields in Json . java to ensure proper handling of deprecated fields during processing
added animations to show and hide the send layout in the LauncherFragment to enhance user experience by providing smoother transitions when floatingCompose is
[ hotfix ] fix checkstyle violation in utils . java
added Progressable parameter to several methods in Utilities and related classes to enable progress tracking during file writing operations
[ hotfix ] [ coordination ] fix typo in sourcecoordinatorprovider
remove contribution from the panel and update panel colors in ContributionListPanel to ensure the panel reflects the current state of contributions
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and update references accordingly to improve clarity and consistency in naming con
added a check to set dPath to " user . dir " if it is empty to ensure dPath defaults to the user ' s directory
fix defaultaudiosink . setmaxsupportedchannelcountforpassthroughv29 ( ) to use a default value of 48000
log4j2 - 1349 mapfilter . filter ( mapmessage ) should not use getdata ( ) .
renamed VerificationInOrderWithCallsTest . java file to improve clarity and maintain consistency in naming conventions
updated the return statement in the setFromAxis method to use the x - axis instead of the z - axis to ensure the correct axis is used
rename the constant COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to clarify the purpose
add a test to verify that the first listener state be connect at the start of the server .
bugfix # 5355 - fix documentation generation for union and union type
refactor one - handed mode support checks in RecentsAnimationDeviceState . java to improve code readability and maintainability by reducing
added onDetachedFromWindow method to cancel running tasks when the view is detached to ensure proper cleanup of running tasks when the view is detached
added a dictionary resource attribute to MorfologikAnalyzer , MorfologikFilter , and MorfologikFilterFactory
replaced the count variable with a boolean ' thrown ' variable in ResultSetTest . java to simplify the test logic by eliminating unnecessary checks
updated the message initialization in GradleBuildService to use an empty string instead of a debug log message to improve clarity and reduce unnecessary
added MVCC anomaly detection logic and modified exception handling in AbstractPhenomenaTest . java and ExceptionUtil . java to improve
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by reducing duplication
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server
added username and password configuration for Deviantart login in DeviantartRipper . java to enhance security by ensuring a valid
replaced the KNOWN _ GOOGLE _ SIGNATURES array with a new constant GOOGLE _ PLATFORM _ KEY
refactor solutionBusiness initialization to use createSolutionBusiness ( ) instead of commonApp . solutionBusiness to improve code clarity and maintainability by
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes in the application
added email description to the template in EntityGroupKeyContentFormatter . java and set a test description in TestEntityGroupKeyContentFormatter . java
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
refactor language handling in Locale . java and LocaleTest . java to improve clarity and ensure correct language code retrieval based on the length of
refactor ChangeLog parsing and update update visitor creation in Liquibase . java to improve code readability and maintainability by encapsulating
added a conditional check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when the screen is not in
added methods to set and retrieve no data text text and description in the Chart class to improve flexibility in displaying chart information based on user -
replaced multiple calls to checkValid ( ) with a new checkHeadWritten ( ) method in Http1xServerResponse and Http2ServerResponse
refactor chunk handling logic in NettyResponse to use a separate chunkHandler method to improve code readability and maintainability by reducing duplication
updated HTTP / 2 test cases to include the " : scheme " header to ensure proper handling of HTTP schemes in tests
fixed - rlocalcachedmap . getall ( ) and rlocalcachedmap . putall ( ) method do n ' t work correctly
camel - 16462 : camel - jpa should use component . getcomponent ( ) if component be not available
change jump speed from fallSpeed to jumpSpeed in PhysicsCharacter . java to ensure consistency in jump speed configuration
added a condition to check if reparsedFunction is null in the syntax extensions check to ensure proper handling of syntax extensions when reparsedFunction is
refactor logging variable names and improve order handling in BitstampPusherService . java to enhance code readability and maintainability by using more
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient . java to improve code clarity and encourage the use of
added a filter parameter to the findOne method call in MongoDbTailTrackingManager . java to allow filtering of results based on specific criteria
added a new method ` assertPredicateFails ` to the ` LanguageTestSupport ` class and corresponding tests in ` JuelLanguageTest ` to
added a range check for the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to
updated string replacement for " Import - Package " in ManifestReversion . java to ensure proper formatting of the version string in the import package attribute
refactor DataSyncConfiguration to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized it in JavaLanguageServer to ensure proper initialization of the JavaSnippetRepository
added a loop to update sums for all time buckets in StarTreeRecordStoreCircularBufferImpl . java to ensure sums are updated correctly for
updated URLs in ChromeDriverService and ChromeOptionsFunctionalTest from " http : / / code . google . com / p / chromed
camel - 16462 : camel - pg : use string . format ( ) instead of string . format ( ) for sql statement
replaced specific imports from ` com . sun . syndication ` to ` com . rometools . rome ` in FeedParser
added content length handling in TransferCompletionHandler and updated NettyTransferAdapter instantiation to use FluentCaseInsensitiveStringsMap to improve data transfer efficiency by
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
removed the constructor from EnhancedRuntimeException to streamline the code by eliminating unnecessary complexity
simonstewart : make the test more robust on slow machine
camel - 16462 : camel - core - remove unused component from endpointbuilders and endpointbuilderfactory
updated method signatures and exception handling in ByteArray . java for improved clarity and consistency to enhance code readability and maintainability by standardizing
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing unintended
camel - 6770 : remove @ ignore from restletdomainservicetest
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method to simplify the method signature by removing unnecessary parameters
rename com . hazelcast . tests to com . hazelcast . test . modulepath
added a method ` getSourceDirs ( ) ` to ` JavaServerConfiguration ` and modified the ` getCompiler ( ) ` method in ` Java
removed menu item handling for webpage visibility in TweetPager . java to streamline menu functionality for better user experience
rename ` nodeIsAncestorOf ` and ` nodeIsDescendantOf ` to ` nodeIsNotDescendantOf ` and update assertions accordingly to improve cl
fix erroneous y - coordinate calculation in editplayer .
added PathNotExistException handling to the selfCheckDataTypes method in InsertNode . java to improve error handling for non - existent measurements during partial
removed an unnecessary closing brace from JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ runtime ] make mailboxexecutor non - null for asyncwaitoperatorfactory
hbase - 24905 fix meta when set table state in meta ( # 2635 )
updated method reference syntax and improved error message formatting in GatewayMetricFilterTests . java to enhance code readability and provide clearer output for
updated BlockJUnit4ClassRunner constructor to use getJavaClass ( ) instead of directly accessing the TestClass to improve type safety and clarity
[ drools - 5640 ] fix kiewatcher delete event ( # 5640 )
updated calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to improve layout responsiveness by accounting
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
updated references from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistency
add a force merge operation to the writer to optimize the performance of data retrieval by consolidating
updated the ` Session ` interface to extend ` java . io . Closeable ` and changed the return type of ` close ( ) ` to `
refactor GetLocations class to improve code readability to enhance maintainability and facilitate future updates
updated exception handling logic in SchemaValidatorTask . java to check if the exception is null before printing stack trace to improve error handling by avoiding
removed RuntimeException from the catch block for IOException to simplify error handling by directly catching the caught IOException
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android features and improve app compatibility
ruby flavor : simplify emitsnippet ( ) and emitquantifier ( ) .
changed log level from warning to debug for Apache Derby driver class and added null checks for username and password in BaseLiquibaseTask
remove the usecaches flag from the nio2endpoint so that it can be disable by default .
updated CasGeoLocationConfiguration to use Resource instead of MaxmindProperties and refactored database reading logic to improve code clarity and ensure
update instructorfeedbackresultspageuitest . java test to reflect new instructor result page
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to enhance the optimization logic to exclude raw tables from
removed public access modifier from several methods in ApprovalStore and ApprovalsControllerService to enhance encapsulation by restricting access to these
dismiss only after delay to remove stuck notification
replaced ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in ` AbstractFloating
updated project version from 1.0 . 11 to 1.0 . 13 and modified copyright year from 2008 to 2009 to reflect the
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
rename GsonBuilder class to improve clarity to enhance code readability and maintainability
added null check before adding center geo and fixed points in ProverBotanasMethod . java to prevent potential NullPointerExceptions when centerGeo is
remove espresso home option , use homefinder instead
doc ( doc ) : fix doclint warning ( # 2329 )
changed the visibility of the ` DeleteSessionAction ` class from protected to private and updated session management logic to enhance encapsulation and improve session management
corrected a typo in the class name from ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException `
updated JoinQParserPlugin , SolrIndexSearcher , TestJoin , and JoinQParserPlugin classes to handle cases where upto is zero
added a file parameter to the triggerMediaScan method call in FileDownloader . java to enhance media scan functionality by associating it with the
removed conditional printing of test results based on verbosity level to simplify test result handling by eliminating unnecessary output
added functionality to set custom G - code settings from user input to enhance user experience by allowing custom G - code settings
camel - 16462 : camel - additional - jaxb - should use utf - 8 encode for xml output
refactor JsonElement class implementation to improve code readability and maintainability
added exception handling for unset system property in TestBadConfig . java to improve test robustness by ignoring specific exceptions during tests
added a method to remove fragments and action bars in GpsMainActivity to ensure proper management of fragment and action bar visibility
simonstewart : fix tokenannotatoritest so that it do n ' t fail on window
updated ` RemoteMediaHandler ` , ` RemoteRawHandler ` , ` RemoteUtil ` , ` RemoteUtil ` , and ` RemoteUtil `
updated G - code file and modified G - code bounds handling in VisualizerCanvas . java , and modified G - code view parsing in G
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
modified the formatting of the assertion checks in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability
added a check to close the exchange client if the query output stage is null and the query state is completed to ensure proper handling of query results
fix ` ` file not find ' ' error when check for ` ` file ' '
removed unused import and field for SolrClient in ChaosMonkey . java to streamline code by eliminating unused dependencies
added null check for ` fas ` before accessing its private persistent file to prevent potential NullPointerException when ` fas ` is null
removed unnecessary whitespace in the NestedRepositoryTreePanel . java file to improve code readability and maintainability
changed constructor visibility of ` ExtensionTypeHeader ` from package - private to public and added a validation check for the extension type to ensure that the
pdfbox - 4892 : do n ' t swallow ioexception when generate appearance
move pushonshutdown property from prometheusproperties to prometheusproperties
added error handling and context trigger error handling in ReactiveStateMachineExecutor to improve error management and provide better feedback during state machine execution errors
added a new test method to verify the behavior of multiple Python executables on the first path to ensure that the correct executable path is used
set the default button for the sign - in button in the root pane to ensure the sign - in button is displayed in the user interface
added a new configuration option ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN ` in ` HiveConf
updated error logging messages in RegistrationRestRepository to include exception details to improve clarity of error messages for better debugging
move reflection class to util package to avoid conflict with reflection class .
added a method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and implemented tests for ` OidcIdToken
removed the ' center ' variable from multiple classes to clean up the code and improve readability
simplified the conditional check for pcollection in RegisterAndProcessBundleOperation . java to improve code readability and maintainability
refactor SslContextFactory to improve SSL configuration handling to enhance security and performance during SSL connections
removed the @ Ignore annotation from multiple test cases in ConfigurationPropertiesTest . java and updated the maxExpectations ( ) method to defaultMaxLog
add a page that handle invalid authorization request . legacy remainder fix for spring security oauth 2 v1 to v2 upgrade
[ 3.0 ] add consumerclassloaderfilter to support service model class loader ( # 9011 )
patch from josh from bug # 45246 - make hssfsheet . shiftrows ( ) more flexible
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods with ` setRolloverPressedIcon ` and ` set
refactor grid translation handling in TaskViewUtils and TaskViewSimulator to improve clarity and functionality to enhance code maintainability and ensure proper
refactor Assertions class for improved readability to enhance maintainability and facilitate easier debugging
added a check to return ` currentDateTimeFunction ` if it is not null across multiple database classes to ensure consistent behavior when ` currentDateTimeFunction
added a method ` anonymousPath ` to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling for anonymous
updated the ` DigitalWellBeingToast ` and ` TaskView ` classes to include a content description parameter to enhance the functionality
[ hotfix ] [ table - common ] fix timeout in catalogtracker . getmetastore ( )
manual fix of header miss by script
do n ' t return null for item that do n ' t have any conversion .
updated BidirectionalOneToOneNPlusOneTest to use Hibernate ' s IntegratorProvider and added a new test method for retrieving post
remove extra empty screen from the workspace and update search page index logic to ensure proper handling of empty workspace screens and improve search page index
updated hashmap and HashSet initialization in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve memory efficiency and prevent
updated string formatting in GoogleLineChart and GooglePieChart classes to use double quotes instead of single quotes to ensure consistency in string representation for
refactor wait logic in SendingAccountor . java for improved clarity and error handling to enhance code readability and ensure proper handling
added functionality to seek to a file in the WALPrettyPrinter class to allow users to specify a position for seeking to the file for better
updated the timeout parameter in the NettyTransceiver initialization from 1 to 0 to ensure that the transceiver starts from zero to avoid
simplify simplereport by sort event before generate the report
added a test for handling double quotes in CSV line descriptions to ensure correct formatting of CSV lines with escaped quotes
add coref . doscore , coref . scorer , coref . data , and coref . useconstituencytree
do n ' t send iq packet to non - remote server . jm - 134
removed the @ JniImpl annotation from VM . java to streamline code by eliminating unnecessary annotations
updated configuration settings for blocking and robots in Fetcher2 . java to use Protocol constants instead of hardcoded strings to improve code readability and
added a condition to check if the HDR format is " dolbyvision " before processing the SID in FFMpegVideo .
rename ` ` other _ package ' ' to ` ` other _ package2 ' ' in asttests
fix worldborder . setradius ( ) and add integration test .
hbase - 22837 addendum fix npe in hmaster . getwalgroupsreplicationstatus ( )
ggb - 2296 remove user from view after login fail
refactor ` markDataResourceOnline ` method calls to use a new method for generating instance configurations to improve code readability and maintainability by
changed the FieldAttributes class from package - private to public to allow access to FieldAttributes from other packages
add a unit test to verify that the exception be throw when a maven project do n ' t contain a reference
simplified the conditional check for oldProto and protoGetSwitches and protoHistory in PropertyMap . java to improve code readability and
refactored the ` getControllerId ` method to accept a ` configId ` parameter and updated related logic to streamline the process of adding
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the check for ` service . isGenerateRefreshToken ( ) ` in the consent approval check to simplify the condition to focus solely on the
removed debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with a NoopGetter implementation in BaggagePropagation . java to improve code readability and maintainability by using
refactor conditionalOnEnabledResourceChain for improved clarity to enhance maintainability and readability of the code
added a condition to check if the tree root contains children in BarrowmanCalculator . java to ensure that the BarrowmanCalculator only processes
replaced ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure
updated logging statements and modified login handling in FacebookImpl . java to improve clarity of log messages and ensure proper execution of login actions
updated the date pattern return value from " h : mm a " to " skeleton " in ShadowICU . java and refactored the
removed unnecessary check for device lock status in TouchInteractionService to simplify the logic for determining if the device is locked
cloudstack - 7031 : fix npe when set default disk offering for custom volume
replaced FileChannel with AsynchronousFileChannel and added position handling in UtowBodyHandler . java to improve performance by utilizing asynchronous file operations
refactor ` SigInt ` and ` SigIntTest ` classes for consistency and clarity to improve code readability and maintainability by standard
ggb - 1353 remove updatebyboundingboxresize ( ) and updatebyboundingboxresize ( ) in textcontrollerw
change return value from - 1 to 0 in Asset . java to correct the return value from - 1 to zero
replaced hardcoded integer generator and lambda expressions with static final constants in ComputeBenchmark . java to improve code readability and maintainability by using
added an onRefreshListener to the UploadListFragment to notify the adapter when data is refreshed to ensure the UI reflects the latest data changes
refactor bibdatabasecontext to use path instead of file . tofile ( ) instead of file . tofile ( )
replaced direct access to emitters with direct access to emitters in ParticleEffect . java to improve code readability and maintainability by
refactor service and engine handling in Tomcat . java to improve clarity and efficiency in obtaining the service and engine instances
updated error message formatting in multiple Java files to improve clarity and consistency in error reporting
added a check to return early if the playback state is not PLAYING to improve performance by avoiding unnecessary processing when the playback state is
replaced the retrieval of the ServiceComponentDesiredStateEntityPK with a direct call to ` findById ( 0L ) ` to simplify the code
refactor Java2TypeScriptTranslator for improved readability and add a new test for inner class field clashes to enhance code maintainability
added logging filter and follow redirect filter functionality to DockerClientFactory and DockerClientProfile classes to enhance Docker client configuration flexibility by allowing configurable logging
refactor displayChanged calls to use awtUnlock and awtLock for thread safety to ensure thread safety during display updates
hhh - 10183 : add support for sqlserver2008 in nationalizedscalarquerytest
pdfbox - 4892 : do n ' t close the input stream in case the zip header be miss .
changed the visibility of the ` storeClassFile ` method from private to public to allow access to the method from other classes
updated the assertion in SingletonSortedSetDocValues to check for missing values and added a new test class TestSortedSetDocValues to ensure correct
updated error messages for invalid commands and port number in CGIHandler . java and added a callback handler in JavaVM . java to improve error
added additional checks for newline characters in LineReaderImpl . java to ensure proper handling of additional lines in the code
changed the parameter type of ` multiFetchSourceFiles ` from ` List ` to ` Set ` and updated related methods to use ` ImmutableSet `
added a check to return early if no vertices are present in OGLESShaderRenderer . java to avoid unnecessary processing when there are no
add test for verification in order to show actual and actual error message
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the deletion
truffle : fix typo and remove unused import
refactor JsonObject class implementation to improve code readability and maintainability
updated idle time condition in SelectChannelEndPoint . java and adjusted idle time handling in HttpConnection . java to ensure idle time is greater than zero
fix ` farmlandblock . cansustainplant ( ) ` not check the plant ' s state . close #
added database table creation and assertions for primary keys in QueryDatabaseMetaDataIT . java and updated index handling in UpgradeUtil . java to enhance database
updated SimpleDateFormat to use Locale . US and added a new class B6791927 for cookie parsing to ensure consistent date formatting across different locales
removed multiple redundant calls to db . close ( ) in DbHelper . java to improve resource management and prevent potential NullPointerExceptions
increased polling timeout from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to improve test reliability by allowing more time for
add trace phase to economyallocationstage when tracera be enable
add save _ database , save _ all , save _ database _ as key binding to source tab
updated ObjectMapper initialization to use a static block to ensure consistent line separator across different operating systems
updated Windows path handling in NativeEnvironmentRepository . java to ensure consistent path formatting across different operating systems
refactored multiple test classes to use a single Application instance instead of multiple instances to improve code organization and maintainability by reducing redundancy
[ java ] remove redundant log check and initialisation before enter an election .
( chore ) camel - it : replace groupname with errorgroupname in itsystemtest
do n ' t run testfuzzoptimizations in travis
replaced shared preferences initialization with a new boolean variable ` reverseImage ` to streamline code by eliminating redundancy
replaced ` . equals ( entry . getName ( ) ) ` with ` . equals ( entry . getName ( ) ) ` for consistency to
fix mdmmatchlinkservicetest . testpatientcreate does not overwrite golden resource attribute that be involve in link
updated test class and method visibility from public to package - private in AuthenticationSuccessListenerTests to enhance test structure and align with the latest JUnit
simplify settypes so that we do n ' t need to create a new arraylist
refactor TypeUtil to improve code structure to enhance maintainability and readability of the code
updated trigger time formatting to include the system ' s default timezone to ensure consistent timestamp formatting across different locales
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle instantiation of ` AbstractMethodError ` with variable arguments to improve error handling
camel - 16462 : camel - core - optimize simple language to not throw illegalargumentexception for invalid expression .
removed unnecessary empty check for toExplore in AbstractParser . java to streamline code logic by eliminating unnecessary checks
camel - 18131 : camel - jclouds - add copy ( ) method to copy input / output stream
camel - 16462 : camel - test - camel - camel - camel - spring - boot should not run camel if osgi bundle be
updated the access flag check in Check . java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java
[ java ] increase connection timeout in channelvalidatortest to avoid spurious failure .
added a new file ` FileExtensions . java ` that defines constants for language source and header files to provide a structure for managing language - specific
replaced ` ThreadLocalDateFormat ` with ` ThreadLocal < DateFormat > ` for thread - local formatting to simplify the code and improve performance by
removed deprecated options for fastTLABRefill , safepointRefill , safepointSpinBeforeYield , and UseCGroup
added display name and title properties to client properties and updated related classes to enhance user experience by allowing customizable display names in the client configuration
added ` EarlyTerminationException ` to multiple operator classes and replaced ` RuntimeException ` with it in ` CombineSlowOperatorsTest ` to improve error
removed unnecessary whitespace in the return statement to improve code readability and maintain consistency
improve handling of closed connection in httpbindservlet and httpbindservlet .
fixed npe in forgeeventfactory . getcapabilities ( ) when parent be null
removed KeyCrypterException from exception handling in WalletTool . java to simplify error handling by excluding unnecessary exceptions
added @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the service is outdated and should not be used in future development
updated the length calculation in HyphenationTree . java to ensure the correct length is used for constructing the Hyphenation object
added a sleep of 200ms in IQRegisterHandler . java to ensure proper synchronization before proceeding with operations
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED constant in ParameterBinder . java to clarify that
added a new boolean variable ` providersChanged ` initialized to false in ` ConfigurationManager . java ` to track changes in configuration settings
added a method ` quoteIdentifierTokens ` to handle quoted identifiers in the token rewrite stream to ensure proper handling of quoted identifiers in the token rewrite process
added a check for missing ' name ' entry in ' type1 ' in FileSystemFontProvider . java to ensure that missing ' name ' entries
updated type casting and variable declaration in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings
updated boundary condition in Window . java to ensure proper positioning of the hit element within its parent hierarchy
added null check for appManifest before retrieving target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog for improved serialization handling to enhance code clarity and ensure proper serialization of configuration properties
added userName property and its getter / setter methods to multiple classes to enable the use of a user name in the driver configuration
added setter methods for TransformerFile , URL , and InputStream in XsltBuilder , and updated XsltComponent to use newInstance to improve flexibility
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , TaskExecutorTestHelpers , and TestFirstInFirstOutComparator classes to
updated expected file size calculation and simplified enqueue calls in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to improve code
fix possible npe in coyoteadapter . logaccess ( )
simplified the logging logic in ThroughputLogger . java and updated the message format in ThroughputLoggerTest . java to improve
updated VM option checks to use Platform . isDebugBuild ( ) instead of System . getProperty ( " java . vm . version " ) to improve
refactor MeterStatisticsManager to use a single instance of MeterDetailStatisticsModel for loading statistics models to improve code readability and maintainability by
replaced System . err . println with a conditional statement to resolve the logback configuration file to improve error handling by ensuring logback property is
added nullability annotations to methods in CipherExecutor , CookieRetrievingCookieGenerator , DefaultCookieValueManager , and DefaultCasCookieValueManager
replaced BASH _ ESCAPER with SHELL _ ESCAPER in multiple files to support Windows - specific command escaping functionality
refactor container handling in ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` to use try - with - resources for better resource
changed the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test
updated formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a Shield address in RpcApiService to enable the generation of Shield addresses from the wallet
change return type of readConsoleInput ( ) from byte [ ] to String in JansiWinSysTerminal and JnaWinSysTerminal
updated regex patterns for presubmit and postsubmit in TestStabilityRule . java and changed sRunFlavor from PLATFORM _
updated fragment handling in DefaultSolrHighlighter and added a new test for multi - valued field highlighting in HighlighterTest to improve highlighting
modified the ` tryToLogin ` method to accept username and password as parameters to enhance security by enabling authentication for the login process
updated entity handling logic in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to improve entity management and
camel - 16462 : fix checkstyle violation in jmsproducer
removed the wrapCollection method from the update return statement to simplify the code by eliminating unnecessary collection wrapping
added logging for handling IllegalCurrencyException in BTCEAdapters . java to improve error handling for currency validation
[ java ] remove unnecessary clientid check in durableconduitbridge . adddeactivestream ( )
pdfbox - 4892 : increase the default value of averagechartolerance and spacingtolerance from 0.5 f to 0.3 f
updated ` startController ` method to accept a boolean parameter for tenant isolation and added new tenant creation methods in ` ClusterTest ` and ` Hy
simplified the return statement by directly returning the response value as a Map to improve code readability and reduce unnecessary object creation
added a check to ensure the size of the attrs list is greater than or equal to 4096 to avoid potential NullPointerExceptions when the size of the
added methods to retrieve project JDK name , type , and language level in ` AbstractIjProjectConfig ` , and refactored ` I
rename " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose of the optimization feature
added tests for resolving effective ACLs with user details and updated method names for clarity to enhance test coverage and improve readability of the test
update javaparsertypedeclarationadapter to use get solvedjavaLangobject ( ) instead of new reflectionclassdeclaration
added logic to determine the number of buttons in XToolkit to ensure that the application does not exceed a defined maximum button limit
updated import statement for assertEquals from ` jdk . testlibrary ` to ` com . oracle . java . testlibrary ` to ensure compatibility
added a new ` MessagePackFactory ` class with factory methods for creating ` MessagePack ` and ` MessageUnpacker ` instances to enhance flex
add is _ ca , is _ desert , is _ cave tag to the biome ' s tag . close # 5331
# present ( float ) - > # draw ( float ) to make it similar to gdxinvaders
added conditional logic to set the layout based on the horizontal state of the component group to ensure proper UIID assignment based on the horizontal state of
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` for
replaced ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLockless
[ java ] remove unnecessary check of commit position counter in cluster service .
no effective change - add user site entity to example
added error handling for malformed IP addresses and port retrieval in HttpConverterRegistrar . java to improve robustness and provide clearer error messages for invalid
api : fix listvolumes api response for storage _ capacity _ type _ storage _ only and storage _ capacity _ type _ allocated
replace file opening with file length calculation in NRTCachingDirectory . java to improve file handling efficiency by directly using file length
updated the JavascriptCompiler class to use a new method for generating classes and modified import statements to enhance code clarity and ensure immutability of
removed synchronized keyword from the store method in UISettings . java to improve performance by avoiding unnecessary synchronization
added a check for native text input and changed the access modifier of the fireDataChanged method from private to public to allow access to the fire
spannerio : fix retry logic for emulator that only support one transaction at a time .
replaced explicit generic type declarations with diamond operator in CompilerTest , ReportedBugsTest , and TestUtil classes to improve code read
updated the type check in ObjectInputStream from double to short and added a new CloneArray class with serialization tests to ensure correct handling of short arrays and
updated nonce handling in OIDCAuthenticationFilter to use getStringClaim instead of getClaim and improved error logging to enhance clarity and consistency in
added a condition to check if a field is a relationship field in DCInputSet . java to ensure proper handling of relationship fields in the input
added support for server slogan functionality in the application to enhance user experience by integrating server slogan in the application
simplified the condition for tinting menu items in DrawerActivity . java to improve code readability and maintainability by reducing
replaced fail ( ) method with Assume . assumeNoException ( ) in SolrRequestParserTest . java to improve test reliability by ensuring
added a check to return early if no missing symbols are found to improve performance by avoiding unnecessary processing when there are no symbols available
added new entries " Data 5 - 4 " and " Data 5 - 4 " to the StringHelperTest . java file to enhance test coverage for
added warning log for empty data providers in Parameters . java to provide feedback when the data provider returns an empty array or iterator
camel - 14263 : camel - core - optimize : use empty list instead of empty _ list / empty _ set / empty _ set
updated XML _ VERSION from " freeplane 1.9 . 0 " to " freeplane 1.9 . 8 " and modified selection style
corrected the variable name from mass to restitution in PhysicsRigidBody . java to improve clarity by using a more
added a new file ` AutoFtpActivity . java ` and modified ` FtpHelper . java ` to include ` IActionListener `
refactor conditional checks in BaseSemanticAnalyzer to use a local variable for token type to improve readability and maintainability of the code
added getter and setter methods for component state in ImageViewer , OnOffSwitch , Component , and GenericSpinner classes to enhance component state management and
added a new class ` RemoteExecutionEnabled ` and corresponding test cases in ` BuildableSerializerTest ` to enable or disable remote execution based on
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated file reading methods to use UTF - 8 encoding instead of FileReader to ensure proper handling of character encoding and improve code readability
[ scoredirector ] add assertworkingscorefromscratch in abstractscoredirector # assertworkingscorefromscratch
updated the configuration key from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " to cl
added SLF4J logging to various DatagramPacketDecoder , DatagramPacketByteArrayEncoder , DatagramPacketDelimiterDecoder , and Dat
replaced file removal method with directory removal method in SynchronizeFolderOperation . java and updated current directory handling in FileDisplayActivity . java to
added assertions to verify the presence and existence of the transaction hash in PollingTransactionReceiptProcessorTest . java to ensure that the transaction hash is
marked the method ` testConstructSchemaBlackList ` to ` testDeleteTimeseries ` and marked it as deprecated in ` ISchemaRegion
added a null check for sampleMimeType in MediaCodecRenderer . java to ensure that a valid sampleMimeType is provided to avoid runtime exceptions
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23Pool
updated @ AllArgsConstructor annotation to include @ JsonCreator mode to ensure proper deserialization of JSON objects in JSON format
added SQLFeatureNotSupportedException handling for index creation on views in MetaDataClient . java to improve error handling for unsupported operations on views
added a new ` Website ` class with properties for name , URL , and URI , along with a test for Java Net types population to
added a setup method to set the default locale to " US " in BSFormatterTest to ensure consistent locale handling for tests across different locales
log a warning if there be a badly download jar file .
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase for sha1sum comparison to ensure case - insensitive comparison of
added a check for single parameter and its type in SimpleExprGenerator . java to ensure proper handling of variable expressions in the analyzer
added a volatile boolean field ` createdVertx ` and modified the condition to check if ` vertx ` is created before proceeding to ensure
updated the ` writeAttributes ` method calls to use the ` node ` variable instead of ` null ` to ensure the correct node model is used
updated log messages in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity . java to improve logging clarity and prevent potential
added a new boolean field ` ignoredReadStatus ` and updated related methods in ` Entries ` , ` CategoryREST ` , and ` FeedREST
replaced MavenTestingUtils . getTargetDir ( ) with MavenPaths . targetDir ( ) for directory path resolution to improve code readability and maintain
added validation logic for URI and MetaData registrations in RegisterServerConsumerExecutor . java and refactored URIRegisterExecutorSubscriber . java to improve data
updated the condition for determining if the audio is playing based on the sound ' s playback state to ensure that the audio playback state accurately reflect
added a new permission permission for admin area in MainCommand . java and defined a new permission constant in Captions . java to allow users to
updated query options handling in ` ServerRequestPlanVisitor ` and modified test cases in ` QueryRunnerTest ` and ` QueryRunnerTestBase `
updated path comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to
updated assertions in ResourcesTest to use variables for pure and mix emoji and text instead of hardcoded strings to improve code readability and maintainability
replaced the method ` NMTWaitForDataMerge ( ) ` with ` NMTOverflowHashBucket ( ) ` and added a
[ hotfix ] [ serializer ] migrate EitherSerializerSnapshot to JavaEitherSerializerSnapshot for better compatibility handling
updated AddressResolverOptions and AddressResolver to use constants for NDOTS and rotation options to improve code clarity and maintainability by centralizing
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and created a test for it in `
pdfbox - 4892 : avoid npe if the dictionary object be null , a suggest by valerybokov
updated references from " liquibase / parser / core / xml / " to " www . liquibase . org / xml
move commonmessagetypelocator from truffle - api to test
changed the default repository state from INIT to NOT _ REQUIRED across multiple classes to ensure that the repository state is not required for better resource management
updated the comparison method in GenerateChangeLogTask to include a new schema comparison control to enhance comparison functionality for better accuracy in schema comparison
updated the import statement for TestBackwardAnoamlyFunctionUtils from JUnit to TestNG to align with the latest testing framework standards
added a new file ` ProgressiveJPEGTest . java ` that extends ` GdxTest ` to test the rendering of a progressive JPEG
updated material loading logic to set alpha discard threshold and reset variables to improve clarity and maintainability of the material loading process
provide more information about target architecture when build native - image on window .
added a null and length check before setting the preferred size in the Label class to ensure that the size is only set when the text is not
modify the readVarInt ( ) method to use a modulus of 1 , 000 , 000 instead of a fixed value to ensure the value is
changed the PushUtils class from non - final to final and added a private constructor to prevent instantiation of these classes
simplified the calculation of the length by directly using the current configuration ' s length to improve code readability and maintainability by elimin
removed unnecessary cast to MockDirectoryWrapper in setEnableVirusScanner method to simplify code by eliminating unnecessary type casting
updated the file path format for loading presets from " . * CSV " to " ? i " to ensure compatibility with the expected file format for
added conditional checks before announceing accessibility in TaskbarStashController and updated references in ActivityContext and FloatingIconView to improve access
replaced ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) ` in ` Node
allow pmd to target both jdk 1.3 and jdk 1.5
test : remove powermock from mockito , use mockitojunitrunner instead
added PrintStream and PrintStream configurations for output and error streams in TestSchemaToolCatalogOps . java to improve error handling by capturing output and error streams
added DFSClient parameter to FanOutOneBlockAsyncDFSOutputSaslHelper and modified SaslNegotiateHandler to include an
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance functionality by allowing metadata to be passed during query execution
add entityresolver2 wrapper to make it easy to use
updated import statements in MetaDataEndpointImpl . java to remove redundant static imports to streamline code and improve readability by eliminating redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry logic in TxnHandler . java to
renamed variable ` xl ` to ` xAxis ` for consistency in ` BarChartActivity . java ` to improve code readability and maintainability
added a method to check if a character is printable and a set of system names in FsUtils . java to ensure that only valid characters are
rename selenide . in ( ) to selenide . using ( ) to clarify the method ' s purpose
added process plugin configuration functionality to the project building process and improved exception handling in DefaultMaven . java to enhance plugin configuration management and ensure
change return value of amountTransfered , incomingCounter , and outgoingCounter from milliseconds to milliseconds of milliseconds in ProxyConnectionManager and ServerTrafficCounter
updated the RESOURCES constant to use a conditional check for the existence of the Google Cloud Vision resources directory to ensure proper resource loading based on
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in Auth
add admin button to the community list page for admin user
added a counter for long and short compaction threads in ` CompactSplit . java ` to track the number of threads for long and short compaction tasks
updated the package name retrieval in WallpaperChooser to use resources instead of the application ' s package name to improve flexibility by allowing dynamic
updated player visibility logic in Near . java to include player visibility to improve user experience by filtering only relevant players in the plot
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class for improved readability to enhance maintainability and facilitate easier debugging
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant ` OPERATING _ SYSTEM _ IMP
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test for buildableReference
replaced conditional key and iv initialization with direct initialization in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary
added Stability annotation to WorkProfileTest . java for local and post - subtitle flavors to address issue b / 243688989
removed a conditional check for bucketing version in TezCompiler . java to streamline the code by eliminating unnecessary checks
replaced ` setCursorPosition ` with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure cursor position
added abstract classes ` LockFreeBucketContendedTimeMeter ` and ` LockFreeBucket _ finalFields _ CacheLinePadding ` and ` Lock
patch by jbellis ; add thread pool stats to nodeprobe
updated max bitrate retrieval in ExternalPlayerActivity and PlaybackController to use user preferences to ensure correct bitrate settings are applied based on user
refactor ZipkinHttpSpanExtractor to separate trace ID checks and span ID checks into separate private methods to improve code readability and maintainability
refactor : move getuserpaymentaccounts ( ) method to abstract class to allow subclassing
remove use of reflection in dartservercompletioncontributor ( # 3995 )
added a line to set the project path in LauncherUtils . java to ensure the project is correctly configured for processing
updated filesystem handling in JsBundle , JsBundleBuilder , JsLibraryBuilder , and JsTestScenario classes to include ProjectFilesystem as a parameter to
refactor multiple Java classes for consistency and clarity to enhance maintainability and readability of the codebase
refactor MetricsDSLContext for improved readability to enhance maintainability and facilitate future updates
removed the VersionConfig interface and refactored its implementation in VersionBuckConfig . java to streamline the code by eliminating unnecessary
added a try - catch block around the bindShadowClass method call in Robolectric . java to handle potential TypeNotPresentException during
changed the visibility of the ` validateTypes ` method from static to public and updated the error message for missing or invalid type information to improve access
fix : update gapic - generator - java with mock service generation fix ( # 269 )
added SLF4J logging capabilities to SimulationStatus . java to enable logging of simulation status updates for better debugging and monitoring
updated VERSION _ POSITION _ Y from 138 to 150 and changed VERSION _ FONT from 9 to 14 to improve the visual representation of the application
refactor notification addition in UserInterfaceComponentImpl to run on the main thread to ensure UI updates occur on the main thread for better responsiveness
updated test cases in AdditionalAnswers . java and ReturnsElementsOf . java to improve test coverage for mocking behavior
corrected a typo in the error message for dropping non - string partition columns to improve clarity in error reporting for non - string
added a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to validate the functionality of ` LineFileDocs
added a method ` getVersionCode ( ) ` in ` MainApp ` and updated references in ` FeatureList ` and ` WhatsNewActivity
camel - 16462 : beaninfo should not throw ambiguousorundexception with body of type string / reader / inputstream
updated references from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added buffer management functionality to IndexBufferObject and VertexBufferObjectWithVAO classes to improve memory management and prevent memory leaks when disposing
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer class to enhance user experience by allowing users to
fix typo in javadoc of jerseyclientconfiguration
int - 1186 : remove reference to characterstreamreadingmessagesource and characterstreamwritingmessagehandler from bean definition .
updated print statements in InstanceOfPatternMatchTest . java and changed return type in RemoveRedundantTypeCastTest . java to improve code read
added methods to check for empty arrays and adjust column and row counts in StringDict and Table classes to ensure proper handling of empty arrays and improve
deprecated deprecated methods and added a customizer method for container creation in GenericContainer to improve code clarity and allow customization of container command creation
updated logging level from info to error in MediaInfo . java and refactored test methods in RendererConfigurationTest . java to improve error handling
added support for a schemapattern option in the BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector classes to enable dynamic configuration of the schem
feat ( bouncy castle ) : return empty _ bytes for null tlssession id
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve clarity and maintainability of bitmap creation logic
refactor Base64 encoding methods for improved performance to enhance data processing efficiency and reduce memory usage
sulong : add fallback to llvmglobalcontainer to support single - context assumption
simonstewart : ignore a test that fail on iphone
updated FlowBuilder and FlowJobBuilderTests files to improve code organization and maintainability
replaced ` resName ` with ` resId ` in ` AttributeResource ` and updated related classes to use an integer identifier instead of a
refactor Docker context TLS file handling in DefaultDockerClientConfig to utilize a new method for resolving context TLS files to improve code clarity and
use @ before instead of @ after in simplereactivereactivereactiverepotest
modified type variable handling in ` mmm Attr . java ` and added a new class ` ppp T6450290 . java `
added logging level configuration to LoggingFlags and LoggingOptions classes to enable configurable logging levels for better debugging and monitoring
added logging statements to track package removal and item removal in the database to improve traceability and debugging of database operations
added allFilesOption method implementations in FileActivity , FileDisplayActivity , and PreviewImageActivity to enhance file management functionality in the application
added methods ` forEachOperation ` and ` hasMatching ` with ` BiConsumer ` and ` BiFunction ` in ` MutationOperationGroup ` to
update numPredictiveAppCols calculation to account for phone device to ensure correct number of app columns based on device type
added UTF - 8 character encoding support in StringUtils to ensure proper handling of character encoding in string processing
added RequestMatchers and its corresponding tests in RequestMatchersTests . java to provide a structured way to handle multiple request matchers in the security framework
do n ' t show input box in applet when create new input box
updated calculations in ProgressBar . java to account for background height and width to ensure correct positioning and alignment of knob elements in the UI
[ native ] use resource . getresource ( ` ` external _ functions . json ' ' ) instead of hardcoded path
updated the ` BruteArgumentMoverHandle ` class to use ` final ` modifiers and modified the ` permuteArgs ` method to
added a condition to check if the handler state is invalidated in the gesture handling logic to ensure proper handling of gestures when the handler is
updated layout constraints and metrics calculations in CellLayout and Workspace classes to improve layout handling for landscape and landscape orientations
added a condition to check if the file is " / robots . txt " in the conditional statement to ensure proper handling of robots . txt file
update to netbeans 2.6 . 0 , fix warning icon
updated button subscriptions from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen . java to
added a check for zero values in UDFOPDivide . java and created a corresponding test class TestUDFOPDivide .
refactor code formatting and add conditional checks in FlowJob and StopAndRestartFailedJobParserTests to improve code readability and ensure proper job
updated filter configuration in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use matcherBuilder instead of direct property assignments to enhance flexibility in
added onDestroy ( ) method to unbind the service in ShareActivity and ContributionsActivity to ensure proper resource cleanup during activity destruction
updated variable names from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve code clarity
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
added a method to set the request timeout in the RaftServerConfigKeys to ensure the RPC requests have a consistent timeout based on configuration settings
updated logging in TsFileResourceManager and modified test cases in ResourceManagerTest to improve error handling and streamline memory management during time index de
added system properties to the model source and system properties in MavenModuleLoader to ensure that the model source and system properties are correctly set for the
add server metric for readiness check ( # 5391 )
add custom model handler for animatedtorch ( # 2640 )
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when closing the writer
added a method to retrieve Hive configuration from a specified directory and updated multiple test classes to use this new utility method to improve code maintainability and
added " Muting Users " link to the links list in FeatureActivity . java to provide users with direct access to the Muting Users page
set jdk . reflect . usedirectmethodhandle to false to disable direct method handle functionality
hbase - 26462 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionregionsplit
[ hotfix ] [ yarn ] add support for empty plugins folder in yarn cluster
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getSpelling ( ) instead of getPronunciations
removed unnecessary newline characters from JSON JSON output in JsonUtilsTest . java to improve code readability and maintain consistency in formatting
added ` id ` extra to ` compose ` in both ` TimeLineCursorAdapter ` and ` TimelineArrayAdapter ` and ` Compose
[ java ] log a warning when a message listener be lose .
throw a more specific exception when there be no class to analyze
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to
updated the initialization of the isIncompatible variable in DLNAResource . java to ensure consistent handling of compatibility status
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to align with the new contract structure
pdfbox - 4892 : avoid npe if there be no range
http : / / issues . apache . org / jira / browse / amq - 4892 - fix regression in messagelistenerred
enable off - heap format by default and update default star tree format version from " ON _ HEAP " to " OFF _ HEAP " to enable
modify title handling in FeedUpdateService to limit the length of the title to a maximum of 2048 characters to ensure that the title does not exceed
updated the previewPanel initialization in JColorChooser and BasicColorChooserUI classes to utilize a dedicated method for setting the foreground color to improve
changed log level from info to debug in DefaultBuildExtensionScanner . java to provide more granular logging during development
added a null check for the reusable bitmap before setting inBitmap to prevent potential NullPointerException when accessing getTileBitmapFromReusableSet
added a method to retrieve layout parameters in FakeView . java to provide access to layout parameters for better customization
added a check to throw an IllegalStateException if the cursor is already closed to ensure that the application does not attempt to call iterator on a closed cursor
pdfbox - 4892 : add a check for kids / pages , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private String field ` ts ` with getter and setter methods to the Message class to store and manage timestamp information effectively
refactored genericexceptionmapper to use toresponse ( ) instead of entity ( )
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
remove the legacy parameter for isochrone ( # 528516 )
removed the ' public ' access modifier from multiple test classes to enforce package - private visibility for better encapsulation
refactor CSRF CSRF setting into a separate method ` setCSRF ` to improve code readability and maintainability by encapsulating CSRF setting logic
added a bootstrap flag to the EclipseLoaderPatcherTransplants . java file and modified shadow class loading logic to accommodate the
[ drools - 1641 ] add numericdisabled property to rule sheet listener ( # 2368 )
hive - 16462 : reduce log level for default value in hiveconf ( prasanth jayachandran
added null checks for axes and buttons in Lwjgl3Controller . java and modified controller management logic in Lwjgl3Controller
updated import statements from cucumber . api to io . cucumber . core . backend in WeldFactory and WeldFactoryTest
refactor port forward saving logic in PortForwardListActivity to improve readability and maintainability of the code
added a new property ` shouldSnapshotData ` to the ` GlobalConfiguration ` class to enable or disable snapshotting of Liquibase data
refactor SyncedFolderObserver to check for a non - null path before creating a PersistableBundle to improve robustness by avoiding unnecessary
refactor LocationMarshaller to improve code structure to enhance maintainability and readability of the code
removed trackpad motion event checks in StatusBarTouchController . java and updated swipe detection logic in OtherActivityInputConsumer . java to streamline
refactor VectorReader to a class instead of an interface and update its implementation in LlapIoImpl to improve code organization and maintainability by
updated import statements from ` ArgumentMatchers ` to ` Matchers ` across multiple test files to standardize the usage of Mockito matchers for better
replaced calls to ` getRelativePathName ( ) ` with ` getRelativePath ( ) ` across multiple files to streamline path handling by eliminating
updated ` SegmentMapper ` , ` CompositeTransformer ` , ` Transform ` , and ` RecordTransformer ` classes to use ` RecordReaderFileConfig
added a null check before instantiating the extractor in ControllerMethodInvoker . java and updated annotations in Param . java and Params . java to ensure
cloudstack - 7031 : fix default max secondary storage for vms with unlimited / unlimited storage
add ` ` potionshiftevent ' ' to the guiscreenevent so that it do n ' t interfere with the inventory effect
added a deprecated constant ` COLD _ READS _ TO _ OMIT _ KEY ` and removed it from ` uncheckedOptions ` to indicate
added a call to leech . stop ( ) in ClientTest . java to ensure proper cleanup of leech resources during tests
[ issue # 7041 ] fix the bug that popmessageprocessor do n ' t report label _ is _ retry
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
updated the test annotation from ` @ Test ` to ` @ Ignore ` in ` ShadowDateUtilsTest . java ` to mark the test as
replaced ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` with ` NettyDriverMongoClientSettingsBuilderCustomizer ` and updated related
added upgrade request and response handling in UpgradeConnection and ClientConnectTest classes to enhance WebSocket connection functionality and ensure correct handling of upgrade requests
added timeout functionality to the AndroidImplementation class to enable configurable connection timeouts for improved reliability
refactor methods to retrieve user and team permissions directly instead of using RpcUtils to simplify permission retrieval and improve code clarity
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure the SQL parser correctly handles quoted cast expressions
updated assertions in Misc . java to check if the file is root or executable based on the operating system to ensure correct validation of writable and
added logging functionality and refactored executor selection logic in FixedThreadExecutor . java to improve flexibility and maintainability of thread management in the
added null check for the ' field ' variable in AbstractChangeGenerator . java to prevent potential NullPointerException when ' field ' is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to align with Spring ' s lifecycle management practices and improve
refactored the animation end logic into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by encapsulating
added a custom close method to the DeflaterOutputStream class to ensure proper resource cleanup when closing the DeflaterOutputStream
added a new file ` gsp001 . java ` that tests the ` getSystemProperty ` method to verify the behavior of ` JVMT
fix @ inject processor for bean with @ configurationproperties and @ scope
[ jme3 ] export camerainode and lightnode to jme3 - export
refactor PopupNotificationPanel to use SwingUtilities for disposal of the popup window to improve code readability and maintainability by reducing
refactor exception handling by replacing NoInstanceException and InvalidInstanceException with InferenceException to improve clarity and consistency in exception management
added a method ` getFeatureValue ( ) ` to return the ` featureValue ` variable to provide access to the feature value for external use
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` VerificationAfterDelay ` method to allow
added properties ` onBuild ` and ` executionDriver ` with their respective getter and setter methods in ` ContainerConfig ` and ` Info ` classes
updated icon setting logic in Toolbar . java and FlowLayout . java to differentiate between left - to - right and right - to -
added a boolean flag ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the instantiation of ` StopFilter ` to
replaced direct assignment of " noreply " with an InternetAddress instance in EmailsTest . java and SystemErrorEmailReportTest .
added a boolean variable ` mTryShareAgain ` and set it to ` false ` in ` FileActivity . java ` to control the sharing
added functionality to determine if TTY is used based on the presence of a terminal in JansiNativePty . java to improve terminal
refactor bandwidth calculation to use ` bytesSize ` instead of ` bytes ` for better clarity to improve code readability and maintainability by
replaced direct calls to ` then ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to
replaced hardcoded URL strings with a constant for API base URLs in EaseeBindingConstants . java to improve maintainability by centralizing
[ hotfix ] [ test ] set kafka container startup attempt to 3
updated the matching logic in SearchResultMatcher to include a new check for the item name to improve clarity and accuracy of JSON path validation
added SSL certificate trust management and hostname verification in OkHttp . java to enhance security by ensuring all certificates are validated during TLS operations
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to use a method for button type to improve code
added a new file ` HyperlinkFormula . java ` and updated ` StringPtg . java ` to use ` int ` for field length
added nullability checks for workingDirectory and initialized stdout and stderr variables to ensure workingDirectory is not null to prevent potential NullPointerExceptions during execution
increase timeout for asyncappendertest to reduce flakiness
refactor escapeDatabaseObject methods to include object name and schema name parameters to enhance clarity and flexibility in handling database object escaping
mow - 512 fix hover style for ok button , disable ok until some button be
added a state change method and a test for display state changes in ShadowDisplayTest . java and implemented state change logic in ShadowDisplay . java
[ geos - 6641 ] add support for direct invocation in the dispatcher .
ggb - 1396 fix keycode for ` ` ^ x ' ' and ` ` ^ y ' '
updated SQL queries in PgDatabaseMetaData to conditionally include dependencies based on server version to ensure compatibility with PostgreSQL versions prior to 9.0
removed initialization of the message variable in QueueChannel . java to improve code clarity and enforce non - nullability
updated method signatures and variable names in FileUtils . java for clarity and consistency to improve code readability and maintainability by using more descriptive
added support for handling Jenkins nodes in the remote collector to improve monitoring capabilities for Jenkins nodes in the application
updated the handling of ` disabled ` and ` defaults - disabled ` attributes in ` HeadersBeanDefinitionParser ` to use placeholder resolution to ensure correct
updated error handling and logging for malformed edits in ProtobufLogReader . java to improve clarity of log messages and ensure proper handling of end -
removed duplicate calls to destroyRegistries ( ) and destroyMetadataReports ( ) in DefaultApplicationDeployer . java and added shutdown logic in N
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a new method for writing status codes and update state handling to support different
refactor AuditEvent and AuditEventTests for improved readability to enhance code clarity and maintainability by separating concerns
added checks for FLOAT _ ROUNDING _ ERROR in Interpolation . java and changed return value to 0 to ensure proper handling of floating - point
fix ` ` / defaults / ' ' path in forgeworldedit . java
refactor code to store the executable path in a variable before adding it to the builder to improve code readability and maintainability by reducing
added unit tests for PointRangeQuery instances in TestPointQueries . java to ensure type safety and correctness of PointRangeQuery comparisons
hbase - 27412 addendum fix testhfilecleaner to work on window
updated file label display logic in ReceiveFileConversationComponent . java to ensure the correct file name is displayed based on the download request ' s file
do n ' t swallow exception in jedisclustercommand # getcommand ( )
[ hotfix ] [ table - planner - blink ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated filter invocation definition decoration from RegExpBasedFilterInvocationDefinitionMap to PathBasedFilterInvocationDefinitionMap and modified test method names for URL parsing to
[ hotfix ] [ test ] add benchmark for qmapreadrandomkey and qmapreadsequentialkey
added a new instance of the G _ SCH _ B map to the HybridPlotWorld class to initialize the G _ SCH _
added a check for empty fields and refactored the handling of meta methods in GroovyEngine . java to improve code robustness and maintainability
set drawable to false for angle in setangle ( )
added configuration options for server socket timeout and TCP keep - alive in HiveConf . java and modified server transport initialization in HiveServer . java to
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` to clarify the purpose of
no effective change - remove unused import
refactor RealtimeSegmentRelocator to use lambda expressions instead of anonymous inner classes to improve code readability and reduce boilerplate code
vpc : do n ' t return success when vpc creation fails
updated window alpha calculation in WindowTransformSwipeHandler . java and modified condition in FloatingIconView . java to improve accuracy of window alpha
updated the schema version in the fatal error message from 3.2 to 4.0 in SecurityNamespaceHandler . java to ensure compatibility with Spring
refactor multiple assertion and subject classes to improve consistency and clarity to enhance maintainability and readability of the codebase
added ' final ' modifier to several fields in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to ensure immut
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to include configuration logic to
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
replaced multiple instances of ` logger ` with direct calls to ` LoggerFactory . getLogger ( ) ` for consistency to improve code readability and
replaced ` updatePurgedShards ` and ` purge _ time ` methods with ` delete ` methods in ` ShardDao ` and ` Shard
updated JavaLanguageModule to add a new version " 17 " and added a new version " 17 - preview " to ensure compatibility with the latest
added a constant for the number of seconds to wait for compression jobs and improved error handling in ` TimeBasedRollingPolicy ` to ensure that
[ hotfix ] [ runtime ] fix potential nullpointerexception in volatilereadnode
added a method ` getSteps ( ) ` to return an unmodifiable list of steps and corrected formatting in the ` getStep ( ) ` method to
removed the fromBase58 and toBase58 fields from TronJsonRpc and TronJsonRpcImpl classes to streamline the code by
refactor currency pair creation in BitstampAdapters . java to improve code readability and maintainability
fix longtasktimer to use base time unit instead of nanoseconds
# ! reducebykey use custom partitioner just in case it ' s different from hashpartitioner
changed the type of ` value ` from ` String ` to ` CharSequence ` and updated related logic in ` HostEditorActivity . java ` to
replace incompatibledatadatabasehandler with databaseversionhandler and add test
added a constant MAX _ TWEETS _ IN _ CONVERSATION and updated the condition in the while loop to limit the number of
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow for a longer refresh interval
removed redundant tail page addition in Queue . java and added a new test method in QueueTest . java to ensure correct persistence of persisted byte size
fix checkstyle issue in util / glowserver / glowserver . java
refactor the growing logic in DataIO . java to improve code readability and maintainability by separating concerns
removed unused import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide a way to retrieve the processed file name
added markReadForLoad ( ) method to LauncherFragment . java to ensure read state is marked as read when loading
updated the ` instrumentJar ` method to include ` ClassNotFoundException ` and handle ` NegativeArraySizeException ` to improve error handling and provide clearer
added a new method ` checkForSpillPossibility ` to check for spill positioning in ` HashAggTemplate . java ` to ensure
refactor code to store the document store segment name in a variable for reuse to improve code readability and maintainability by eliminating
added a default name ID format of " urn : oasis : names : tc : saml : 2.0 : nameid - format :
added error handling for password change in ChangePasswordPage . java to improve user experience by notifying when a password change is aborted
removed unnecessary whitespace in Deadlock2 . java to improve code readability and maintain consistency
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file to remove obsolete font scaling tests from the project
added validation for ` filterBeginDate ` and ` filterEndDate ` in ` RRD4jPersistenceService . java ` to ensure only valid
added a check for non - positive numVectors in GenericUDAFComputeStats . java to prevent processing when there are no vectors to process
test : migrate executablereftest to junit 5 ( # 4519 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 16462 : add wiretap support to camel - spring - boot and camel - spring - boot
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option ` TOPN ` in ` PlannerSettings ` and implemented its matching method in ` PushLimitToTopN ` to
[ java ] remove redundant setting of aerondirectoryname in archive / cluster test .
fixed - rbatch . ping ( ) method should n ' t be call if the connection be n ' t queue . # 3868
refactor HiveConf to use a temporary URL for configuration variable and remove the LoopingByteArrayInputStream class to improve resource management and simplify the code
updated the model model initialization to use the criteria ' s device instead of the default device to ensure the model uses the correct device from the criteria
added menu item selection functionality in SimulationViewer . java to enable saving functionality in the simulation viewer
refactor CertificateValidator class to improve certificate validation logic to enhance reliability and maintainability of certificate validation
update homeDir initialization to use a property for hawtio . dirname instead of a hardcoded value to improve flexibility in specifying the
added a condition to return a single space when comments are empty and whitespace is empty to ensure that a single space is returned when no comments are
changed variables in multiple dictionary classes to be volatile to ensure visibility of changes across multiple threads
removed printStackTrace ( ) method call from ContextHandler . java to simplify error handling by eliminating unnecessary stack trace printing
move customitemdroptest to integration test and add test for custom item
added support for checking if - exists partitions in the DDLTask and DDLSemanticAnalyzer classes to enable conditional execution of partitions based on the
nfs : fix reading of large file in nfsSecondaryStorageResource . java ( # 4748 )
[ java ] remove duplicate call to controlrequeststreamid in echoservicenode and basicauctionclusteredservicenode
wfs 2.0 capability : add support for spatial operator ( wfs 2.0 )
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitsFix to address issue SOLR - 2161
refactor condition checks in Http11InputBuffer . java for better clarity and correctness to enhance readability and maintainability of the code
[ java ] set the cluster in progress to false by default .
replaced hardcoded HBASE _ OFFHEAP _ PCT _ KEY and HBASE _ BUCKETCACHE _ SIZE _ KEY with an
added methods to track and update the running record count in JSONRecordReader . java to improve clarity and maintainability of record management logic
filter out year from merged items in CategorizationFragment . java to ensure only valid items are processed in the merging process
updated drawColor method calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use zero color instead of a
removed check for OpenGL ES 2.0 availability in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering methods
added ActionContext import and set context to null in BackgroundProcess . java to ensure proper context management for action execution
added support for prepending the default database name in table names and updated related method signatures to include database name to enhance table name handling and improve
added a connection timeout configuration in TestConnections . java and changed the count variable to be final in StubConnection . java to improve connection handling and
added multiple test assertions for the approx _ percentile function in TestHiveAggregationQueries . java to ensure that the approx _ percentile function behaves
updated DEFAULT _ IDLE _ TIMEOUT from ZERO to 30 seconds and refactored idle and write timeout handling in WebSocketChannel to ensure consistent idle
updated the method of retrieving shared files to use the user ' s platform account instead of the account object to improve accuracy in obtaining shared files
updated type declarations and added null checks for scope _ ifname and scope _ ifname in Inet6Address . java to enhance type safety and
refactor PlaybackControlView to replace disableView and enableView methods with setButtonEnabled and setButtonEnabled methods to improve button visibility management
updated method signatures and variable names in Session and Token classes to improve clarity and consistency in session handling
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to
make useedexceptionprobability default to ___ _
updated the newPlateColor assignment based on whether the icon is themed or not to ensure consistent color representation based on the icon '
guac - 1842 : remove dependency on password encryption and salt from mysqluser and userdirectory
added " centre " alias to the aliases list in Middle . java to support the center functionality in the application
added dependency injection for DirectUpload in CommonsApplicationComponent and made the DirectUpload class public to enhance dependency injection capabilities and improve accessibility of
updated spacing settings for left and right axis in BarChartActivity and adjusted bounds checks in BarLineChartBase to improve layout consistency and ensure proper
added support for additional Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance support for additional Java ABI flavors in
added operation event status handling in OnlineHubService and initialized the services list in CompositeLogService to improve event processing and ensure proper initialization of
added debug logging and visibility annotation handling in DexAnnotation . java to improve debugging capabilities and ensure visibility annotations are only added when they are not
camel - jms : rename startbundle to setup and teardown so that it do n ' t swallow exception
refactor process creation to use a variable for the classpath string to improve readability and maintainability of the code
updated resource loading logic in PackageResourceLoader . java to use a dynamic separator based on the package name to improve cross - platform compatibility for resource
[ hotfix ] [ table - common ] fix checkstyle violation in dataset
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable tests related to b / 243855320
updated error message formatting in ` ShouldHaveMessage ` and added a test for escaping percent in ` ShouldHaveMessage _ create _ test ` to
fixed - jcache . close ( ) and jcachemanager . geturi ( ) do n ' t close the jcache . #
reduce log level for already claimed exception in commandcontext . close ( )
added an empty block to the initialization of ALPNClientConnectionFactory in HTTP2Client . java to ensure proper initialization of the ALPNClientConnectionFactory
fix entitypropertiespacket to write base value instead of double
fix sonos speaker not be initialize ( # 3551 )
increased the timeout duration for countDownLatch from 500 milliseconds to 5 seconds in multiple test files to allow more time for asynchronous operations to
changed log level from info to debug for the effect light type determination failure message to provide more granular logging for troubleshooting
add db . properties and syncqueuemanagerimpl . returnitem ( ) method to allow job to be execute in a fixed thread pool
updated the ` smartNullPointerException ` method to accept an ` Object ` parameter and improved error messaging to enhance clarity of error messages and
changed the type of the ` frame ` parameter from ` Frame ` to ` DataFrame ` in the ` generate ` method to simplify the method signature
updated multiple module - info . java files in the package - info . java files to ensure consistency and clarity in module documentation
added a check for non - empty physicalColumnName in OrcPageSourceFactory and introduced a new test for handling empty files in TestHive
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enable mixing of
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated calculations in FinderPatternFinder . java and modified test values in QRCodeBlackBox1TestCase . java and QRCodeBlackBox2
removed redundant checks for leadingIncludePaths in PreprocessorDelegate . java to simplify the validation logic for better readability and maintainability
[ te ] fix npe in stringtemplate . ismatrixmatrixmultiplication ( )
simonstewart : add $ $ and find ( ) to the list of search method in elementproxy .
fix defaultaudiosink . setmaxsupportedchannelcountforpassthroughv29 ( ) to use a default value of 48000
added methods to get and set formula in XSSFName and refactored related methods in XSSFName to improve formula handling and
increased the target value from 60000 to 90000 in HighDimensionsTest . java to accommodate larger data sets for improved
fix a bug in simpletypegt and add a test for patternfacet
added a new test class ClassPathXmlJobRegistryContextTests for testing job location in a Spring Batch context to ensure the job registry correctly loc
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 - camel - restlet : deprecate endpoint and add test for it .
camel - 20297 : camel - log4j - remove logout option from camel - log
refactor ChromeTraceEvent submission into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by encapsulating
added checks to ensure only non - canceled , filled , and rejected orders are added to limitOrders to avoid adding invalid orders that are not in
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct pixel size handling and improve error handling for invalid image layouts
[ jruby ] use rubytimestamp to convert timestamp to rubytimestamp .
added a path check in ` ContextHandler ` and a test for ` getRealPath ` in ` WebAppContextTest ` to ensure correct handling of paths
changed the name handle from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER in Script
updated variable names and logic for setting scroll values in JEditTextArea to improve code readability and maintainability by using more descriptive variable
added null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to ensure proper handling of graph state during
test : migrate sniperprettyprinterjavaprettytest to junit 5 ( # 1745 )
updated test cases to use try - with - resources for URLOutputStream and modified exception message assertions to use equalToCompressingWhiteSpace to improve resource
added Entity annotations to the Mail class to enable the Mail class to persist entities as entities in the database
change default value of ` includeTablespace ` from false to true and introduce a new command - line option to include tablespace in the
added getter methods for metadataBuffer and valuesBuffer in CountersReader . java to provide access to these buffer data for external use
added logic to clear non - empty fields in ScanBatch and created a test for empty JSON directories in TestJsonReader to ensure proper handling of
updated failure strategy to include internal custom name in failure messages to improve clarity of failure messages for better debugging
added a regex pattern to check if the name matches a specific library name in LibUtils . java to enhance flexibility in handling different library types
replaced catch blocks for ClassNotFoundException and NoClassDefFoundError with catch blocks for Exception and Error in JrtJavaBasePackages and PackageHelper
hbase - 26465 wait for file system to be write in safemode to prevent write to file system that be in safem
updated error message formatting in TranslatingJavacPhaseTracer . java to include the exception type and message to improve clarity of error reporting
o removed obsolete code ( plugin descriptor be cache by dedicated component
fix contact status update on jabber contact if it ' s already on mobile .
remove servletrequestdetails . withresourceandparams ( string , set < string > requesttype , set < string > requesttype ) , which
added a new file ` AccountInfoFetchIntegration . java ` to implement integration tests for fetching account information from the BTCE exchange to ensure
added mouse wheel functionality in VDUInput and vt320 classes and updated terminal reporting logic in TerminalView to enhance mouse input handling and improve mouse
set net . java . games . input . librarypath if needjinput = false
no effective change - rename @ columnhstore to @ columnhstore
fix ( demo ) : set player skin flag in metadataindex
updated LoadBalancerWithServiceTests to use SLF4J logging instead of RequestFieldMatcher and refactored service creation logic to improve logging capabilities
fix npe in mapservice . getmember ( ) when member be null
replaced direct system property retrieval with privileged access to retrieve the operating system version to enhance security by restricting access to system properties
added a configuration option for the file suffix in the TemplateEngineFreemarker class to allow dynamic configuration of the file suffix based on
updated hash code calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
added animation callback to hide the HDragger panel to improve UI responsiveness during animations
replaced ` bindConditionally ` with ` bind . when ` for caret binding in ` StyledTextAreaVisual . java ` to
updated methods to include CxxBuckConfig and introduced declaredPlatforms in multiple descriptions to enhance platform management by incorporating declared platforms
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` across multiple files to standardize parameter handling in the query framework
added a null check before setting the password attribute name in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for array types in DataUtilities and implemented a test for default values in DataUtilitiesTest to ensure proper handling of array types in
updated SSL engine creation logic to handle null address scenarios to ensure correct host name verification based on client authentication requirements
testfstabledescriptors : use assertTrue instead of assertEquals for cache hit check
danielwagnerhall : remove use of uri for cookie deletion
added a flag to track launcher transition state in AbsSwipeUpHandler and modified controller recreation logic in RecentsView to ensure proper
added meta charset to HTML head and title elements in HTMLListWriter . java and HTMLWriter . java to ensure proper character encoding for HTML elements
refactor IndexReader to improve code readability to enhance maintainability and facilitate future updates
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and modified path separator handling in multiple classes to improve
added a new class ` bug6337518 ` with a ` createArrowButton ` method to ` BasicComboBoxUI ` and modified the
updated TestRandomAccessBuffer . java file to improve test coverage for random access buffer functionality
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added imports and notifications for HomeContentProvider in multiple services to ensure consistent updates to the content URI in the application
added functionality to manage the state of the pressed or focused background in BubbleTextView to improve user experience by controlling the visibility of the
updated the ` getFallbackResponse ` method to accept a ` Throwable ` parameter across multiple classes to enhance error handling by allowing a stack trace for
removed the condition checking if ` env . _ compile _ only ` is true in ` DumpBytecode . java ` to simplify the code logic
fix possible npe in channeluri . gettags ( ) when there be no tag
updated regex patterns in RegexpUtil and modified test cases in TestSqlPatterns to enhance regex matching accuracy and improve test coverage for SQL patterns
added functionality to save and restore the action bar title in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action bar
updated the method to retrieve the last element from convertedElements and added a new test for concatenation lists with select in ConfigSettingIntegrationTest to ensure
updated the scheduling interval from " * " to " 0 " in CleaningService . java to allow for a zero hour instead of an hour
added methods to retrieve partitioned tables and their paths in TransactionalValidationListener . java to improve table structure validation and error handling for partitioned tables
refactor ReplicationHandler and SnapPuller classes for improved clarity to enhance code readability and maintainability
changed the data type of ` generatedKey ` from ` int ` to ` long ` and modified the SQL execution logic in ` ShadowSQLite
simplified the retrieval of the proxy object in SimpleReferenceCache . java to improve code readability and maintainability
add ` ` failed to inline ' ' to test failure message
updated keep - alive and keep - alive timeouts from 60 seconds to 10 seconds in WebClientFactoryImpl . java to improve connection stability and
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
changed exception handling from Exception to Throwable in Dispatcher . java and modified tests in DispatcherTest . java to use try - with - resources for FileSystem
camel - 16462 : camel - cxf - allow to configure the cxf data format for camel - cxf . thanks to
added a case for ' ~ ' in ClientUtils . java to handle special characters in user input
camel - 14263 : camel - slack now use java . time . duration instead of long .
add harvesting drop event to blockutil . dropdrop ( ) .
updated FormLayout parameters and adjusted JCheckBox string formatting in TranscodingTab . java to improve layout flexibility and enhance user interface clarity
added a new file ` bug8057791 . java ` to demonstrate the use of Nimbus Look and Feel
updated flag assignment logic in LambdaToMethod . java and introduced a new interface LambdaInterfaceStaticField . java with a static field interface to improve
[ api ] enable websocket subscription when engine api be add ( # 2370 )
changed the condition from checking if ' to ' is empty to checking if ' to ' is not null to improve null safety and prevent potential NullPointerException
refactor ParquetFixedWidthDictionaryReaders to conditionally use BigIntVector ' s Mutator for reading values based on dictionary usage to improve
refactor layout calculations in PortraitPagedViewHandler for better clarity and consistency to improve code readability and maintainability by using
added a new ` @ Log ` annotation and an ` LogInterceptor ` annotation to the ` Spring Cloud examples ` package to enable logging of method
updated the dump string formatting in QueuedThreadPool . java to handle empty trace cases to improve clarity of thread state information for better debugging
updated ` CacheGenerator ` and ` CacheProvider ` to include ` Implementation ` as a parameter and modified related methods to enhance cache functionality by allowing
added totalFrameSize parameter to the reference map creation in FrameMap . java to ensure the reference map is created with the correct total frame size
refactor TypesafeConfigurator for improved configuration handling to enhance performance and maintainability of the configuration logic
add karaf integration test for camel - graphql
removed the main method from the RFE2891944 class and added multiple bug methods to demonstrate the handling of BigDecimal values
removed URL encoding for key and value in HttpClientIntroductionAdvice . java to simplify code and improve performance by eliminating unnecessary
refactor unsupportedPlatformTool implementation to use a new class instead of an anonymous class to improve code readability and maintainability by using a dedicated
changed the type of loopCount from double to int and updated log message formatting to improve type safety and clarity in logging output
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the
[ drools - 770 ] fix test case for address manager ( # 1188 )
updated column and row specifications in VLCVideo . java and adjusted component boundaries in FormLayoutUtil . java to improve layout consistency and ensure proper
rename bisq to bitsquare ( # 1193 )
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory and refactored file parsing logic in MBoot . java and MavenCli . java to ensure proper handling of m2
added binding of the GL _ ARRAY _ BUFFER to the GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure proper
refactor ServerHttpSecurity class for improved readability to enhance maintainability and facilitate future updates
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default header management in HttpClientProperties and updated CasCoreHttpConfiguration to include default headers to enhance HTTP client configuration by allowing customizable HTTP headers
improve error message when username or password be not valid
deleted the NoOpConfigPathGetter . java file to remove unused code to streamline the codebase
handle jwt key with either 0x or not ( # 3657 )
updated FloatUtil to use CSSName for floating - point properties and adjusted inline block positioning based on CSS properties to improve code clarity and
planner - 1641 : add miss import to planning - related class
refactor RestUtils to use MultiMap for default headers instead of CaseInsensitiveHeaders to improve flexibility in handling HTTP headers in the application
replaced ` String ` encoding with ` Charset ` in multiple classes to standardize character encoding handling across the application
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
refactor comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare instead of Long . valueOf for consistency to improve
replaced error logging with debug logging in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity and reduce unnecessary error logging
updated import statements in LegacyAuthenticationHandlerAdapter . java to include NamedAuthenticationHandler and UsernamePasswordCredentials to improve code clarity and maintainability by
changed the class declaration of WingDings from final to public to allow access to the WingDings class from other packages
do n ' t try to remove a filter from the network if it be not our own .
added a static wrap method to BCPGInputStream and refactored its usage across multiple classes to centralize the wrapping logic for BCP
[ java ] use bufferedoutputstream in minimallockingwritelAheadlog to reduce memory consumption .
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified assertions in ` HiveBaseResultSet `
updated FocusTransitionTest . java file to improve test coverage for focus transitions
gwt : fix import in sharecontrollerw from gwtproject to guava
added a null check for sourceTask before retrieving counters and improved error handling in CounterStatsAggregator . java to enhance robustness by preventing
updated the assignment of the _ readListener variable in HttpInput . java to ensure that the readListener is not null to avoid potential NullPointerExceptions
refactor color setting logic in AppearancePanel to utilize a ChangeListener for state changes to improve color selection handling and ensure color changes are
changed the parameter from ` false ` to ` hidden ` in the constructor of ` TaskHelper ` to allow control over the visibility of the task
resolve http : / / issues . apache . org / activemq / browse / amq - 2379 - fix test failure
pdfbox - 4071 : fix resource leak in ccittg3 and ccittg3n file handle
added import statement for DefaultParameterHandler in LanguageDriver . java to enhance parameter handling capabilities in the scripting framework
lsra optimization : do n ' t set spill state to spill - in - dominator if the loop depth be less than the
[ java ] add test for groovy ast compilation ( # 3558 )
refactor : add closeinternally ( ) method to pgresultset and make firstunclosedresult volatile
set default value of serviceAdvisorType to ServiceAdvisorType . PYTHON to ensure proper initialization of service advisor type
replaced the static resolver with a thread - local resolver in the GenericDatumReader class to improve performance by avoiding multiple instances of the resolver
changed the parameter type of the ` Path ` constructor from ` Collection ` to ` List ` and updated return statements in ` PdfContentStreamProcessor
replaced hardcoded byte arrays with a random byte array for memo assertions in SendCoinShieldTest . java to improve code readability and
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` for setting personalisation parameters based on a specified locale to
removed duplicate code for argument count check in CodeGenerator . java to streamline code by eliminating redundancy
removed the ` percent ` parameter from the ` scroll ` method in multiple classes to simplify the method signature and improve code readability
changed the access modifier of the pointer variable from private to public and added reset and reset methods to enhance accessibility of the pointer variable and provide
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity by accurately reflecting the class
do n ' t convert boolean to boolean when cast to integer .
modified the handling of accepted media types in AbstractResource . java to use a boolean flag for clarity to improve code readability and maintainability
added a new boolean variable ` false ` with a value of ` false ` in ` TaskView . java ` to control the behavior of the
added a method ` isAutoIncrement ( ) ` to the ` LiquibaseDataType ` class and implemented the ` isAutoIncrement ( ) `
set default value of errorText to " Command failed due to Internal Server Error " to provide a clearer error message for debugging purposes
updated imports in DeadListenerTest . java and LocalManagementTest . java , and modified JVM argument handling in LocalManagementTest . java to improve
replaced calls to ` toSimulate . add ( currentStatus ) ` and ` toSimulate . push ( boosterStatus ) `
added support for AJP port configuration in GitBlitServer to enable dynamic AJP communication based on port settings
added type coercion logic for compound types in TransTypes . java and created a new class Intersection03 . java with assertions to ensure
rename ` EmbeddingTest ` to ` EmbeddingITest ` to clarify the purpose of the test class
added a native method to start the toolkit thread only if it does not already exist to improve performance by avoiding unnecessary thread creation
add -- compress - in - parallel to optimize the bundle content
set surface to hide on window in papplet . setvisible ( )
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity by specifying the
added configuration options for enabling fullNode and solidity node HTTP services to enable conditional service addition based on configuration settings
added a ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and updated its usage in ` GoogleCloudFirestoreTicketRegistry `
refactor Generate . java for improved code organization to enhance maintainability and readability of the code
removed nullable parameters from the @ ScalarFunction annotation and added tests for Java and JSON null handling in JsonFunctionsTest to ensure proper handling of null
updated BadgeRenderer to conditionally adjust width based on the DOTS _ ONLY flag to improve badge rendering behavior based on the DOTS _
removed the ' final ' modifier from the getConfiguration method in FreemarkerManager . java to allow the method to be overridden in subclasses
add a test for invalid exclusion of excluded package name patterns in OgnlUtilTest to ensure proper exception handling for invalid package name patterns
modified deviceUdid assignment based on platform name and added SDK name check in IdbRunTestsStep . java to ensure correct device Udid
updated logging level from error to warn in DefaultHttpClientFilter and modified response handling in TestDefaultHttpClientFilter to improve logging clarity and enhance error
updated context binding and execution logic for mScript in AllAppsView . java to ensure that context binding occurs only when mScript is not null
added a boolean flag ` TEXT _ BURN ` and modified the conditional check for line count in ` Utilities . java ` to enhance text rendering
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database tables and views after tests
added a line to retrieve a parser from the parsers map in SecurityNamespaceHandler . java to improve parser management by ensuring the correct parser is used
added a new method ` fastpath ` to ` BoundedLocalCacheTest ` and modified the condition in ` BoundedLocalCache . java `
refactor ` RawConnection ` to extend ` WebSocketConnection ` and implement ` complete ` and ` flush ` methods in ` WebSocketAsyncConnection `
added multiple test cases for softly assertions in SoftAssertionsPerfTest . java to verify the correctness of assertions in the test suite
added a new constant for test failure codes and modified the execute method in PythonRunTestsStep to check for specific exit codes to ensure that Python
added conditional logic to increment xAdances based on markupEnabled flag to enhance text rendering behavior based on markup settings
refactor score comparison logic in TestBooleanRewrites . java to use streams for improved readability and performance to enhance code readability and
updated the class reference from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java ` to ensure
move connection . flush ( ) to connectionmanager . flush ( ) .
added a check to prevent multiple invocations of ` removeOnDrawListener ` in ` Launcher ` and ` LauncherAnimUtils ` to ensure
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java and modified the conditional check to include NOT _ APPLICABLE to enhance code clarity and ensure
change the default return value of the media info parser from false to true in RendererConfiguration . java to enable media info parsing by default for media
added support for annotation processing for AROUND _ TYPE in BeanDefinitionInjectProcessor to enhance flexibility in handling interceptor types during annotation processing
added assertions and verification for table operations in FolderPermissionBase . java to ensure proper permission checks and validate table operations
updated the ` handleProviderRegistered ` method to include a ` boolean dueToRegistrationStateChanged ` parameter and modified the ` publishStatusInternal `
updated the random color calculation in PastelColor . java to use a base value of 255 to improve the randomness of the color representation
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
refactor image handling in HolographicViewHelper to use original and outline bitmaps to improve code readability and maintainability by encaps
refactor request handling for unsupported HTTP methods in CloudClient to improve code readability and maintainability by reducing redundancy
add a method to infer the position of a phrase in multitagpreprocessor to make it easy to get the position of a phrase
removed unused import of IOException from IOChannelUtilsTest . java to streamline code by eliminating unnecessary dependencies
added conditional logic to retrieve the output format class based on the class name to improve flexibility in handling Hive pass - through output formats
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and readability
added a check for negative lengths in the DOMBuilder class to ensure that the length does not exceed the expected range to prevent potential ArrayIndexOutOfBoundsException
updated conditional checks for ` isDirected ` in ` clusteringCoefficient . java ` , modified edge retrieval in ` EigenvectorC
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to demonstrate handling of
camel - 16462 : camel - core - add support for property placeholder in defaultkeyselector
replaced instances of ` if ( t instanceof ThreadDeath ) ` with ` throw t ` in LogResolverBean . java and ResourceResolver
refactor multiple Java classes related to key management and security to improve code organization and maintainability
updated JGIT _ VERSION from " JGit 1.0 . 0 " to " JGit 1.1 . 0 " and modified
updated client key handling in HttpClientIntroductionAdvice . java to improve clarity and maintainability of client path management
int - 113 , int - 113 , int - 113 , int - 113 , int - 113 , int - 1
renamed BACK _ FACTOR to REWIND _ TIME and updated duration calculations in ResumeObj . java to improve clarity and accuracy of
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and implemented it in ` JavaSEPort
updated usage formatting in utility commands and modified usage output formatting in DocumentationPrinter to improve clarity of command usage and enhance output readability
updated the request attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in
updated methods to set sequence and unsequence files in CrossSpaceCompactionResource to improve clarity and functionality of compaction resource management
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule synchronization logic in ProjectPropertiesModelImpl . java to improve clarity and maintainability of the code
move synchronization in abstractsootfieldref to avoid deadlock
use custom naming conventions for elastic meter registry ( fixes # 263 )
added new methods and updated imports in IController , TinyGController , and BackendAPI to use IController instead of AbstractController to enhance
add a new test case ` hugeHorizontalRule ` to ` PathologicalTest . java ` to ensure correct rendering of large horizontal rules in the
replaced System . out . print statements with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to
refactor multiple Java classes for consistency and clarity to improve code readability and maintainability
changed the condition from checking if frameLength is equal to zero to checking if frameLength is less than or equal to zero to ensure that frame
updated return statements in IntFloatMap . java and IntIntMap . java to return default values instead of zero values to ensure consistent behavior when
updated image handling in ImageDownloadService to run on the UI thread to ensure UI updates occur on the UI thread for better responsiveness
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerExceptions during execution
no effective change - remove hasnextSibling ( ) method from ieenavigator
added null check for results in RedisDistributedMapCacheClientService . java to prevent potential NullPointerException when results are null
updated logging statements in MobFileCache . java to differentiate between enabled and disabled MobFileCache to improve clarity of log messages
refactor ColConvCCMTest class for improved readability to enhance maintainability and facilitate easier debugging
replaced instance variables for target and source with local variables for covariant return and name character handling to improve code clarity and maintainability by
pdfbox - 4892 : improve type safety , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X
added a return statement to the GenericFileConsumer class to ensure proper termination of the method execution
added an EventQueue . invokeLater to execute a Runnable on the Event Dispatch Thread to ensure that the Runnable is executed on the Event Dispatch Thread
updated maxSize calculation to use getMaxBinaryMessageSize ( ) instead of getMaxTextMessageBufferSize ( ) to ensure the maximum size accurately reflects
updated steering value calculations in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to correct the steer
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve code readability and leverage built - in security
updated JdbcSerDe to use LocalDate and LocalDateTime for better handling of date and timestamp values to improve accuracy of date and time conversion for better data
updated the version number from 2 to 3 and modified metadata handling logic to differentiate between version 2 and 3 to ensure compatibility with the latest version
added conditional configuration for Flyway JPA dependency in FlywayAutoConfiguration and updated test cases accordingly to enhance flexibility and ensure proper
added a sorted order to the ClassesImpl class to ensure the classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and modified ` AbstractLauncherUiTest ` to use it
updated the implementation of the SharedInformer class to improve performance and maintainability of the code
refactor memory scope handling in TestCloseScope0 . java to support different memory or resource scopes based on the Java version to ensure compatibility with
updated test parameters from 500 to 5000 in AdaptServerSocket . java to increase test timeout for improved reliability
refactor CaptchaChannelProcessorTests to improve test coverage to enhance reliability of the CaptchaChannelProcessor functionality
added logic to update the owning collection of an item in MetadataImport . java to ensure the item reflects the correct owner collection when changes occur
added retry mechanism for saving registry cache files in AbstractRegistry . java to improve error handling by limiting retry attempts to a maximum of 3 attempts
updated the variable used in TrackingDirectoryWrapper from mergeDirectory to directory to ensure the correct directory is used for tracking operations
[ java ] unusedimports : fix false positive on jdk 1.5
added validation for insert overwrite queries on bucketed tables in HiveIcebergStorageHandler to ensure that insert overwrite queries are not performed on bucket
updated assertions in BootstrapTests to reflect the correct number of keys and added a check for legacy SAML keys to ensure that the tests reflect the correct
added check for non - static fields in the isAnonymousOrLocal method to ensure that non - static fields are not treated as anonymous or local
removed synchronization from the getAddressVector method and updated related logic to improve code clarity and ensure proper handling of unexpected email addresses
removed unused WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE
added IOException handling to lock release methods and introduced a new LockReleaseFailedException class to improve error handling and provide clearer feedback during lock release failures
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align package
added a conditional check for unary operators in SpelExpressionTransformer and updated related logic in LiteralNode , OperatorNode , and MongoQueryMethod to
added TypeValidation to the ByteBuddy initialization to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and added ` ErroneousAnnotations
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest . java and updated lock wait
updated the ` setSystemProperties ` method to remove the ` LogFile ` parameter and added a null check for ` logFile ` to simplify the
added a method to check for HTTP redirect status codes and refactored the request method to handle redirects more effectively to improve HTTP connection handling and
added constants for service name , version , and application mapping in ServiceCombConstants . java and modified MicroserviceFactory . java to use these constants
changed the method call from ` getName ( ) ` to ` getBeanName ( ) ` for the ABOUT _ TO _ BEGIN _ PROCESSOR
updated DB _ PATH _ REGEX and DB _ PREFIX constants to be static and modified database deletion logic to use a configurable prefix to improve flexibility
update return statement to retrieve unread count from HomeDataSource to ensure accurate tracking of unread counts for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for the virtual thread pool
added a limit parameter to the ` getAllOrder ` method and updated related logic in ` MarketOrderIdListCapsule ` and ` Wallet `
added null check for the user before retrieving user settings to prevent potential NullPointerExceptions when the user is null
updated file handling in LocalFileSystem to use getAbsoluteFile ( ) and added a new test for matching relative wildcard paths in LocalFileSystemTest to ensure
added maximum width and height limits for the instance ' s bounds to ensure that the dimensions do not exceed the defined maximum size
added logging capabilities and deprecated the ` setConnectionManagerTimeout ` method in ` CommonsHttpSolrServer ` to improve logging capabilities and prepare for future
removed unused ExceptionHandler import and error handling in PrintController . java to streamline error handling and improve code clarity
refactor filename handling in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code readability and ensure
added methods to check if a word is a number and check for separators in SpellChecker . java to enhance spell checker functionality to support number
updated the MESSAGE constant in HelloWorld . java to ensure consistency in message formatting
refactor file action handling in FileDisplayActivity to use a dedicated method to improve code readability and maintainability by encapsulating file action logic
added error handling for logging replication time and configuration files in SnapPuller to improve robustness by logging exceptions during replication processes
changed the order of parameters in the update method call in StoreCachedTest . java to improve code readability and maintain consistency
updated the constructor parameter name from ' materials ' to ' theMaterials ' and added a loop to remove MaterialColumnParser instances from the file
updated dependencies in DependencyBank . java for improved clarity and organization to enhance maintainability and readability of the codebase
set maximum recycled views for various components in AppsContainerRecyclerView to optimize recycler view management for improved user experience
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest . java ` to verify the build
fix baritone not be able to run on a world that do n ' t have any location .
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to utilize Liquibase ' s
added null handling checks and tests for range and equal filters in the FilterOperatorUtils and NullHandlingEnabledQueriesTest classes to improve query performance and
added validation checks for bootstrap method signature and argument count in JDynamicInvokeExpr . java to ensure correct argument types and improve error handling for method
increase port for jms http test to avoid port conflict
removed the clearing of formatters in CucumberInstrumentation . java to streamline the code by eliminating unnecessary operations
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and updated
added a conditional check to hide workspace labels based on cell padding to ensure workspace labels are only shown when necessary to improve UI responsiveness by
updated assertions in ReplicationFactorTest to use a unified assertion method for consistency to improve code readability and maintainability by reducing redundancy in
sulong : do not initialize llvm context during context pre - initialization .
removed JUnit @ Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to enable
replace RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced Integer . valueOf with Integer . parseInt for value parsing in VisualScoreTagTest . java to improve performance by avoiding unnecessary boxing
updated error messages and modified file traversal parameters in Copy . java to improve clarity of error messages and ensure proper file traversal behavior
refactor segment name validation in HLCSegmentName and LLCSegmentName classes to use a dedicated method to improve code readability and maintain
added methods to start activities in ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure proper functionality and error handling when the fragment
updated the return statement in DueDateBusinessCalendar to use clockReader ' s current time instead of the current time to ensure accurate date representation
updated the return statement in TargetCpuType . java to include a target architecture to specify the target architecture for the application
added a method to delete all files associated with an account in FileDataStorageManager and integrated it in ManageAccountsActivity to enable asynchronous file deletion
updated the help command format in SchemaCrawlerCommandLine . java from " - ? " to " - h " to improve clarity and consistency in
added a method to create a suite description with an optional unique identifier and updated related tests to enhance functionality by allowing unique identifiers to be specified and
replaced the decoding method with a direct call to ` decodeBarcode ` in ` SnapshotThread . java ` to streamline code and improve
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor and eliminate unnecessary
[ te ] add test for zoom context range past start / end
added a new configuration key for dependency tracking in JRubyScriptEngineConfiguration and updated its usage in JRubyScriptEngineFactory to enable dependency tracking
updated the request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
do n ' t announce new keyspace if they already exist . patch by jbellis
refactor WelcomeWindow to use a caching mechanism for image rendering to improve performance by reusing images instead of background images
updated TunerManager and RTL2832TunerController to include a unique identifier for tuner configurations and improved error handling for buffer
added HasTests interface to AbstractShBinaryDescriptionArg and introduced a new test method in ShBinaryRuleIntegrationTest to enable testing of sh binary
added a condition to set the includeString variable to " hsqldb " in TestFilter . java to ensure compatibility with HSQLDB database
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t call materializehostexception when there be no stack trace
refactor service loading logic in GraalServices . java for improved clarity and efficiency to enhance readability and maintainability of the code
add test for duplicate command handler in aggregateannotationcommandhandlertest
[ flink - 20865 ] [ stream ] add support for fine - grained shuffle mode
fix entityfishhook not be able to place fish on a block . close # 3508
camel - 14284 : fix javadoc warning in camel - ftp and camel - ftp
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` and update related methods in ` GangliaReporter ` to improve clarity
added a check to return early if the list of items is empty to avoid unnecessary processing when there are no items available
added a conditional bean definition for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure the bean is only created
log4j2 - 1349 add support for mdc property map in xmllayout
added support for an " omitHeader " parameter in CommonParams and its usage in BinaryResponseWriter , JSONResponseWriter , and XMLWriter to
updated the method to use getPropertyNumber ( ) instead of _ id in EscherProperty . java and added a new test class TestEscher
updated the method call to use ` Description . getBuildRuleType ( key ) ` instead of direct calls to ` getBuildRuleType ( key )
add a call to modify hierarchy when a method be remove from the scene .
fix npe in tradedatavalidation . isvalid ( ) when dispute to test fails
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified ` retrieveColumns ( ) `
wallet : set default transaction confidence type to not _ have _ in _ chain .
refactor argument handling logic in HttpClientIntroductionAdvice . java to improve clarity and maintainability to enhance code readability and
added condition check to craftinghelper . processconditions ( ) . fix # 1193
hbase - 2695 log warn when open region fail ( # 3649 )
refactor null and length comparison logic in Credential . java to improve readability and maintainability of the code
[ java ] do n ' t wait for the subscription image to be available until the subscription be complete .
modified the ` destroy ` method in ` TestJvmProcess ` to use ` destroyForcibly ( ) ` and ` waitFor ( ) `
added support for Oracle in the conditional check to ensure compatibility with Oracle database connections
camel - 7018 : camel - mail : do n ' t try to connect to the store if the store be n ' t connect
added token validation in the parser to throw a ParseCancellationException if there are more tokens in the query to ensure that queries that have no
camel - 18131 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
added a method to retrieve the data file name in the Model class and modified the Voice class to use this new method to retrieve the data file
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration and retrieval of the email domain
added configuration properties for request read and connect timeouts in ` Configuration . java ` and updated ` ViewRegistry . java ` to use these properties to
do n ' t call processdeferredconcepts ( ) if there be no link to save
added RedisCategory import and JUnit category annotation to RedisServiceRegistryTests . java to categorize tests as Redis categories for improved test organization
updated the ` FindDeprecatedMethodsTest ` and ` FindDeprecatedUses ` classes to include a ` typePattern ` parameter to improve test coverage and
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the WaterfallPanel
removed unnecessary import statements from multiple Java files to improve code clarity and reduce unnecessary dependencies
updated event handling in ` ContractEventTriggerCapsule ` to use ` getEventSignatureFull ( ) ` instead of ` getEventSignature ( ) `
updated filter condition to check if the file name ends with an underscore instead of contains to ensure that the file name does not include the session ID
updated drawing logic in MapView to use background color instead of clearing the rectangle to enhance visual appearance by using the background color dynamically
[ drools - 770 ] fix compilation error in packagebuilder . java
removed debug print statements from multiple Java files to clean up the code and improve readability
added a check for NaN score values before assertions in TestFieldCacheSort . java to ensure that only valid score values are asserted to avoid
updated the way entity keys are retrieved in DeviceState . java to ensure immutability of the oldKeys set to prevent unintended modifications
added checks for zero - time strings in ColumnSnapshotGenerator and implemented a new test for date default values in MySQLIntegrationTest to ensure correct handling
replaced ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` t
updated FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPassGroupingCollector to use wildcard
[ drools - 6642 ] fix regression in kiesessionmodel # getclocktype ( ) and # setclocktype (
updated the instantiation of the HiveMetaStoreClient to use the current instance variable to ensure the correct configuration is used for the HiveMetaStoreClient
added a check to return early if the modalness is equal to the current modalness to optimize performance by avoiding unnecessary processing when the modal
added a test for retrieving codec capabilities from profile level in ShadowMediaCodecListTest . java and implemented native settings in ShadowMediaCodecList .
added a request focus to the confirm button in EditOfferView . java to address issue # 5460 regarding focus behavior when the enter key is
added input validation for width and height in SunVolatileImage and improved error handling in X11SurfaceDataProxy and XRPMBl
updated thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper formatting of
updated AsyncStressTest and StressTest classes to use AtomicInteger for thread - safe management to improve concurrency handling and ensure thread safety in concurrent
added beta flavor handling and visibility logic in AchievementsFragment and LeaderboardFragment to improve user experience by providing feedback when the app is
updated SearchMethodVisitor to use context properties for access , name , and description to ensure proper context handling for search functionality
added sleep calls in IoTDBInsertWithoutTimeIT . java to ensure proper handling of potential interruptions during execution
reformatted code for setting media duration in DLNAResource . java to improve code readability and maintainability
[ java ] add name attribute to resequencerconfig and batchresequencerconfig to avoid confusion .
refactor transaction management methods in TableReader and TableReaderTxnScoreboardInteractionTest to improve transaction management and error handling to enhance code clarity
refactor key manager and trust manager type handling in ThriftSource and ThriftRpcClient classes to use a dedicated method for retrieving the key manager algorithm
refactor ` getSingleSourceApplicableTest ` to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code readability and le
fix tab - > tab key in desktop
replace references to ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to improve clarity and consistency in
renamed the method ` unHandled ` to ` unhandled ` and updated related error logging in ` Check . java ` to improve clarity and
updated stripes and stripeStats assignment logic in OrcInputFormat . java to ensure accurate retrieval of stripes and stripe statistics based on the
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
updated URLs from HTTP to HTTPS for Myhentaicomics . com in MyhentaicomicsRipper . java to
added a command line option to display the current version to provide users with information about the current jar version
use splittokens ( ) instead of split ( ) for export list
added support for default rotation settings in ConsoleActivity and improved input connection handling in TerminalView to enhance user experience by providing a more intu
changed the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` and
added a null check for ownerConnectionAddress in ClientSmartListenerService to prevent potential NullPointerExceptions when ownerConnectionAddress is null
camel - 16462 : camel - jolokia - add support to get the class name of the header map factory . thanks to
updated formatting in JavaCompiler . java and Diagnostic . java files to improve code readability and maintain consistency
int - 1186 add support for ' outbound - gateway ' in the jms namespace handler
updated the expected index from ` i + 1 ` to ` i2 ` in ArrayFunctions . java to correct the index used for array replacement
refactor script engine handling in AbstractScriptProcessor and InvokeScriptedProcessor to improve clarity and error logging for script engine addition failures
added support for ` org . postgresql . PGStatement ` in ` PooledConnectionImpl ` and created a test for it in ` Connection
flush mem table and refresh size estimate after each test
changed log level from error to warn for no more memory fragment limit to provide a less severe log level for debugging purposes
do n ' t sort candidate when check for expire entry . patch by jbellis
fixed - rblockingqueue . pollfirstasync ( ) and rblockingdeque . polllastasync ( ) method throw npe . #
updated printMap calls in JobInspectCommand . java to remove unnecessary string concatenation to streamline output formatting for better readability and performance
refactor Engine class to improve code structure to enhance maintainability and readability of the code
refactor sorting logic in ChildHolder to use a comparator for key - value pairs to improve readability and maintainability of the code
[ issue # 3994 ] remove unused acl client class ( # 3994 )
changed the condition from ` numIndexDims ` to ` numDataDims ` in BKDWriter . java to ensure correct handling of data
[ hotfix ] do not print stacktraces in notebookserver if interpretergroup be null
fix expressionnodeevaluator to use ' lt ' instead of ' funn '
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor ` to
cloudstack - 7031 : improve error message when create snapshot policy fails
changed method visibility from public to package - private in ItemWriter . java to restrict access to the methods for better encapsulation
updated the initialization of the Thing instance from an empty string to a specific string " test " to ensure the test uses a specific identifier for better
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replaced usage of FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a more efficient directory implementation
added a static line height variable and modified line height assignment logic to ensure the buffer height does not exceed the current line height to improve performance by
refactor WalletAppKit class to improve code organization to enhance maintainability and readability of the code
[ netbeans - 3246 ] remove unused parameter from oqlengineimpl . getinitstream ( )
remove the transport menu item from the button group in the chat transport selector box to improve code clarity and maintainability by reducing redundancy
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
refactor bsqBlockChainExplorer handling to use Optional for better null safety to enhance code robustness by avoiding potential NullPointerExceptions
added attribute management methods to StandardSession and Session classes to enhance session management capabilities by allowing retrieval and modification of session attributes
added assertions to verify the presence and value of the plain bean in the TestDbJson _ List class to ensure that the expected behavior of the
updated the array size from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to optimize memory allocation based on initial page count
[ hotfix ] [ doc ] fix typo in batchcommandlinelauncher
added datasource and transaction manager beans for HSQLDB in BatchMetricsApplication . java to facilitate database connection management and transaction management in
fix checkstyle issue in net / glowroot / logging / glowrootloghttpservice . java
pdfbox - 4892 : use non - stroke - java - composite for painting , a suggest by valerybokov
removed synchronization from the close method in DocumentsWriter . java and updated the deleter reference in DocumentsWriterPerThread . java to improve
added methods to retrieve multiple choice options and validation constraints in UiBinding . java to enhance functionality for managing multiple choice options and constraints in the UI
updated ` builder . setReflectively ` method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency to improve
bugfix : only update the stored copy of the tree for a full save
[ hunspell ] change dictionary ' s condition to use a regex pattern instead of a string .
updated the initialization of lists to use diamond operator and added a default value of " 0.5 " to improve code readability and
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unused dependencies
refactor NBJavacTrees class to improve code organization to enhance maintainability and readability of the code
removed unsupported encoding check from VectorizedPrimitiveColumnReader . java to streamline code by eliminating unnecessary error handling
added MarkerFactory import and modified logging logic in HttpSolrCall . java to improve logging clarity and ensure consistent logging behavior
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure proper cleanup of metadata service proxy resources
change defaultentityqueryrepository to prevent infinite recursion
updated the message construction in HubChangeExecListener to provide clearer error messages based on the presence of a changelog ID to improve clarity of
try harder to try harder when test fail .
refactor ` executeCompilation ` method to return ` ProcessExecutor . Result ` instead of ` int ` to improve type safety and clarity in
refactor event handling logic in ObjectStore . java to improve clarity and efficiency in event iteration
simplify the validation check in ` ValidatedLocalValidatorFactoryBean ` to improve code readability and maintainability
refactor the handling of temporary block entities in EntityAwareWorldProvider to improve clarity and maintainability of the code
intrinsifyarraycopyphase : remove redundant check for exact type
do n ' t use logger . setlevel ( ) in testcoyoteadapter
replaced the WantedAnywhereAfterFollowingInteraction class with a new WantedAnywhereAfterFollowingInteraction class and updated
added validation checks for owner and key addresses in AccountPermissionUpdateActuator , PermissionAddKeyActuator , and PermissionDeleteKeyActuator to
do n ' t sort command in scriptlauncher so it do n ' t have to sort them .
chore : update java and python dependency to v3.15 . 3
refactor property setting for metadata properties in BaseSingleTreeBuilder . java to improve code readability and maintain consistency in property management
updated AsmLoader constructor to accept a ClassLoader parameter to ensure proper class loading with the interface class loader
pdfbox - 4892 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
update export namespace handling in Java2TypeScriptTranslator to differentiate between declaration and namespace declarations based on the definition scope to improve clarity and
replaced ` EmptyServerHandler ` with ` AbstractHandler ` and added input / output stream handling in ` HttpClientTest . java ` to improve
simplified the listener registration by removing unnecessary array creation to improve code readability and reduce redundancy
mondrian : use findroot ( ) instead of findroot ( ) in abstractsqmpath
updated package declaration for ReadFolderTest and RenameFileTest classes to improve organization and clarity of test classes
refactor BufferedImage handling and filter logic in AwtCanvas . java to improve image processing efficiency and handle different image types more effectively
[ gr - 22699 ] support native image location qualifier in graalvm .
[ beam - 1774 ] remove dataflowportabilityapiunsupported from usestimersinpardo test
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log a warning if the max size configuration do not allow any data in the map .
rename AST elements to LST elements in multiple Java files to improve clarity and consistency in terminology
refactor scoring logic in ThreadedAcousticScorer . java to improve clarity and correctness to enhance code readability and
replaced throwing an AssertionError with returning null in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls and variable names in ApplicationControllerFluentLeniumTest . java for consistency and clarity to improve code readability and maintain
added a new ` makeString ` method across multiple iterable classes to provide a standardized way to create strings with a specified start and end parameters
updated the order setting in OidcServicesManagerRegisteredServiceLocator to use a constant instead of a hardcoded value to improve code readability and
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related tests to use it to enhance the flexibility of weak association validation
refactor compression logic in Deflater . java to improve code readability and maintainability
added exception handling for IOException in Font . java to improve error management by throwing an IOException when an exception occurs
added a null and empty check for content in VersionTypeBinding . java to ensure that a valid Version object is returned when content is not provided
refactor NearbyListFragment to directly return the list of places instead of storing them in a local variable to improve code readability and
updated content type check to be case - insensitive to ensure consistent content type validation
do n ' t hardcode ssh - rsa format to ssh - rsa
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding behavior to improve flexibility in handling folder name suggestions
replaced specific Hibernate annotations with a wildcard import and added a JPA entity retrieval in InheritanceCacheTest . java to streamline imports
updated import statements in ConnectOAuth2RequestFactory . java and added a method to getUserApprovalRequest in TofuUserApprovalHandler . java
fix influxdb name convention not apply tag value ( # 645 )
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353 : add
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the latest cookie handling
added a static method ` classMetadataUnsupported ( ) ` in ` Platform . java ` and updated its usage in ` Subject . java ` to improve
added preferences for showing and dismissing the clear all button and its click listener in OverviewActionsView to enhance user experience by allowing users to
refactor ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to use a final variable for desiredRepoVersion and adjust timeout values to improve
deleted the MemoryLeakTest . java file to the test class is no longer needed in the project
updated the return statement in ServletTester . java to include the local host or port based on the local environment to improve clarity of the
add option to turn off mvdwplaceholderapi hook into mvdwplaceholderapi
fix flakiness in abstractpartitionassignmentcorrectnesstest . testclustersize ( )
added a singleton implementation for FFIProvider to enable dynamic loading of the FFI provider based on configuration settings
added a test method ` testHierarchicalWFileList ` in ` BatchProcessTest . java ` to validate the functionality of hierarchical file listing in
added null checks and improved null handling in MongoTemplate to enhance code robustness and prevent potential NullPointerExceptions
change the default value of position from 0 to NODE _ LIST in NodeClass . java to ensure proper handling of direct input and successor counts
added ` accTradeValue ` field and its getter / setter in ` BithumbTicker ` , modified ` BithumbMarketData
updated logging statements in RealtimeSegmentDataManager and AvroUtils to use placeholder syntax to improve performance and readability of log messages
rename ` maxParallelThreads ` to ` MAX _ PARALLEL _ TASKS ` for consistency to improve code readability and maintainability
replace ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMVMutableForwardIndex and FixedByteSVMutableForward
refactor multiple dict - related classes to improve code structure to enhance maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during execution
fix camel - msv unit test so it do n ' t fail on slow machine
updated the conditional check from ' if ( beginCycle = = currentCycle ) ' to ' if ( beginCycle > currentCycle ) ' to
updated the random value generator from 6 to 10 in JdbcExpiringCodeStore . java and modified the expected length in CodeStoreEndpointsTests .
added a check for UniqueConstraint instances in StandardObjectChangeFilter . java to ensure proper matching of unique constraints based on their table type
updated description parsing logic and improved language code handling in MediaDetailFragment . java to enhance code readability and maintainability while ensuring accurate language
do n ' t swallow arrayindexoutofboundsexception and classcastexception .
added reference and key filters to the ListImagesCmd and ListImagesCmdImpl classes to enhance functionality by allowing customizable filtering of images based on
camel - 16462 : camel - jms - allow to configure bridgeerrorhandler on jms endpoint . thanks to benjamin
added checks for specific conditions in OpExclusionUtils . java and implemented a warning message if no operations are found to ensure proper handling of exclusion
added return false statements in DatabaseCommand . java to ensure proper handling of database commands
updated the ` Politician ` instances in ` HonestPoliticianExample . java ` to replace hardcoded values with
[ zeppelin - 4892 ] use stringutils to check if initfile be not empty
camel - 14284 : fixed restlet component to work with port > 0 .
removed unused imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline the code by eliminating
set the maximum query length to 100MB in QTestUtil . java and removed overridden configurations from SessionState . java to improve query performance and
changed access modifiers of userName and securityManager fields to private and refactored HttpConfiguration initialization in WebServer . java to enhance encapsulation and
updated sink processor names from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSink " across multiple
updated HiveConf to exclude " spark . app . name " from the result condition and modified SparkSparkClientFactory to ensure correct application name
rename variable ` whiteName ` to ` includedName ` for clarity to improve code readability by using a more descriptive variable name
simonstewart : add a new server handler to maximize the window
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , and DefaultProjectFilesystemFactory to improve clarity and functionality to
added an assertion to check for the presence of " entity expansions " message in TestXMLEntityExpansion . java to ensure that
updated table offset and length assignments to use a bitwise mask of 0x7FFFFFFF to ensure that the offset and length values do not exceed
added a customization method to the DirectMethodHandle class to ensure that the customization of the form is not null
refactor line buffer initialization and condition checks in LineChartRenderer . java to improve readability and maintainability of the code
refactor the handling of flavored targets in AndroidBinaryDescription . java to improve clarity and maintainability of flavor validation logic
changed the buffer index from offset to i in LwjglGL11 . java to improve clarity by using a more descriptive variable
added new file ` Property . java ` and ` PropertySuper . java ` , along with a test class ` TestClassResolutionFail . java
only remove the shutdown hook if the shutdown hook be enable .
updated the FilterChainProxy class to use FilterChjainProxy and refactored the VirtualFilterChain constructor to remove the URL parameter and
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( values , 0 , size ) ` for sorting and retrieving
added checks to ensure schema is loaded before loading tables in MetaDataBasedSQLCompletionProvider and modified table retrieval logic in QueryTypeAnalyser to
set default values for baseType and literalPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType to improve clarity and functionality in handling column
updated link links in multiple Java files to include { @ link } annotations to enhance code readability and maintain consistency in link references
replaced instances of ` ObjectEqualEvaluator ` , ` ObjectNotEqualEvaluator ` , and ` BooleanNotEqualEvaluator ` with their singleton instances
updated file paths from " osx _ x86 - 64 " to " osx _ x86 _ 64 " across multiple files to ensure
added sound effect handling methods in AllAppsView . java to enable customizable sound effects for improved user experience
change exception type from Exception to IOException in the main method to improve error handling by providing a more specific exception type
added granularity functionality to the leftAxis in BarChartActivitySinus to enhance the visual representation of the left axis in the chart
refactor version comparison logic into a separate method for clarity to improve code readability and maintainability by encapsulating version comparison logic
updated file handling in ContextHandlerGetResourceTest to use a test root directory and added OS - specific assumptions to improve test reliability by
added a close ( ) method to Connection , JsonAsyncHttpPinotClientTransport , and PreparedStatementGroupTest classes to ensure proper resource management and
update socketremotetest , mockappender , socketserverfunctionaltest , socketremotereplicatest , socketremotet
[ beam - 4142 ] add a check to check if the resource be a directory
removed redundant import statements for SpriteBatch in IsometricStaggeredTiledMapRenderer . java to streamline code and improve read
removed duplicate invocation of unbindHandle in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code structure to enhance maintainability and readability of the codebase
simplified conditional checks for touch tracking in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated NavbarButtonsViewController to use configuration for navigation button dark mode to improve UI responsiveness based on device ' s theme settings
simonstewart : throw instead of abort if language can not be determine
replaced bootstrapMethodIndex , nameAndTypeIndex , and memberIndex with refKind and memberIndex in ClassWriter . java to improve clarity
added BlockFormattingContext support to the findBox , findElementBox , and findElementBox methods in BasicPanel . java to enhance layout adjust
refactor WorkerProcess and WorkerShellStep to improve error handling and output reporting to enhance error reporting and provide clearer diagnostics during job execution
added null check for operator and improved error handling in CheckedListReplaceAll . java to ensure proper handling of null operators and provide informative
added a boolean and FutureCallback for testing connection handling in SslConnectionTest . java to enable conditional writing of data on connection to improve test reli
added listener registration for device configuration changes in DeviceFlag . java and changed the visibility of ` mCurrentValue ` in FeatureFlags . java to enhance
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue 2.2 . 0 gh -
removed import of MalformedURIException from StandardRequestHandler . java to streamline code by eliminating unnecessary dependencies
added focus to the end of the input box in the instructor feedback edit page
refactor synchronization and subscription logic in KrakenStreamingTradeService . java to improve readability and maintainability of the code
changed the print statement from ` System . err . println ` to ` System . out . println ` for ignoring the class - path entry to
modified the constructor of ` SparseRowMatrix ` to include a ` randomAccessRows ` parameter and updated related methods accordingly to enhance flexibility in
cloudstack - 7031 : do n ' t create volume _ delete usage event for volume that do n ' t have a pool id
refactor file input stream initialization to use dynamic plan path based on Hive configuration to improve flexibility and maintainability of the code by allowing dynamic
[ beam - 1771 ] fix import of guava in udftestprovider ( # 1772 )
memorycallgraphbuilder : reset internal state before register memory cctprovider
added a check for the presence of a multi - user chat operation set in ConferenceChatManager . java to prevent potential null pointer exceptions when
added file write validation to ensure the update file is writable before proceeding to prevent illegal user actions when the file cannot be written
added a new FolderSyncActivity class and updated DrawerActivity to handle folder synchronization to improve user experience by providing a dedicated activity for folder synchronization
[ hotfix ] [ test ] use try - with - resources in sequentialchannelstatereaderimpltest
add support for ` ` % ' ' and ` ` % ' ' in the spanishtreenormalizer
replaced the method of appending a point value from ` reader . pointValue ( ) ` to ` heapPointWriter . getPackedValueSlice
added LocaleRandomizer and its corresponding test class to provide functionality for generating random locale values based on a seed
added unit tests for font type detection in TestMimeTypes . java to ensure correct detection of font - related MIME types in the application
update version numbers in Installer and AutoUpgrade classes to include " 10.0 " and " 9.0 " to ensure compatibility with the
reformatted the ` run0 ( ) ` method call in ` TCPTransport . java ` for improved readability to enhance code clarity
updated the read timeout handling in Http2AsyncParser . java to ensure a default value of 0 is used when the block is true to improve
increased the initial delay from 120 to 600 milliseconds in TimelineMetricConfiguration . java to increase the initial delay from 120 to 600 milliseconds
corrected the spelling of " previous . name " in the error message for the primary key constraint to ensure accurate representation of the primary key
added date format support for Joda - Time in ThirdEyeJiraClient to enhance date handling capabilities in the application
replaced priority generation logic with a new PriorityGenerator class to streamline header generation process and improve code maintainability
added a constant MAX _ SCALAR _ REPLACE _ CODE _ SIZE and updated the scalarReplacement condition to ensure scalar replacement does not exceed the
added DATE _ TAKEN to the projection test and updated sorting criteria to include DATE _ TAKEN for media data and folder sorting
update image drawing parameters in TexturePacker2 . java to correct positioning of texture packing to ensure proper rendering of texture packing with
added WebSocketUpgradeFilter import and modified context handling in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve WebSocket upgrade handling and
added shutdown methods for validateSignService , transactionHandlePool , and nodePersistTaskTimer in Manager and NodePersistService classes to ensure proper resource
added a new annotation processor for RawJsonRequestBody in JaxrsSwaggerGeneratorContext and implemented it in Echo to enable handling of raw JSON request
added a new method ` newTarget ` in ` LoggerUtils ` to create a new ` Target ` instance with specified target type and extension to
updated BeanContainer to use an ArrayList for entries and added a new test class for BeanContainerTests to enhance functionality and ensure correct behavior of the
hbase - 17412 addendum fix typo in testmetricsregionserver
camel - 16462 : fixed memory leak in cachedoutputstream when exchange complete .
fix teltonikaproducer to set deviceid for teltonika position
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line in ` HybridProjectBuild
added a null check for the operator in JCAssignOp and created a new Test class with a method to initialize it to avoid null pointer exceptions
added a boolean flag ` enableAccountHandling ` to control the behavior of ` mixinRegistry . onCreate ` in ` BaseActivity ` to control
use heuristically find main connected polygon in isochroneresource to avoid infinite loop
refactor DrillViewTable to accept a list of paths instead of a single view reference to improve flexibility in view management by allowing dynamic
added default memory allocation parameters to the PooledByteBufAllocator class to enhance performance and flexibility in memory allocation settings
updated the type check in ObjectInputStream from double to short and added a new CloneArray class with serialization tests to ensure correct handling of short arrays and
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE in HiveConf . java and updated LlapIoImpl . java
added conditional logic to rerun initialization for debug and SSL classes in SecurityServicesFeature . java to ensure compatibility with Java versions 8 , 11 ,
updated lat / lon range checks and added assertions in LatLonGrid . java and TestLatLonGrid . java to improve boundary validation and ensure
[ java ] add ` ` invisibilityofelementwithtext ' ' and ` ` invisibilityofelementwithtext ' ' to
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and updated related calls to include it to enhance file replacement functionality to
added a test method ` reflector _ getOuterClass ` to ` ReflectorTest ` to verify the behavior of the ` getEnclosingObject `
added " auto _ generate _ android _ facet _ sources " configuration option and updated its value in IjProjectBuckConfig . java to
updated message handling in HubChangeExecListener to include author information to improve clarity of log messages for better debugging and monitoring
added properties property handling in the Link class and corresponding tests in QuickLinksConfigurationModuleTest to enable dynamic property resolution for child links in the Quick
removed @ EqualsAndHashCode annotations from InitialConfig and YamlConfigFileDTO , and added a toString ( ) method in YamlConfigFileDTO to streamline
updated generic type parameters in SimpleForwardingServerCall and SimpleForwardingClientCallListener to include ReqT and RespT to improve type safety and cl
refactor class loading methods to include CallerSensitiveAdapter annotation and improve class loading logic to enhance clarity and maintainability of class loading mechanisms
replaced usage of Hamcrest ' s Matchers with Hamcrest ' s IsEmptyString for consistency and clarity to improve
replaced instances of ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by utilizing
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated imports and refactored date handling in TimeStepdefs . java to improve clarity and functionality of date processing in Cucumber tests
fix ` ` spark _ isolated ' ' and ` ` spark _ recessive ' ' not be add to the list of banners .
updated RestProxyFactory to use ` getUri ( ) ` instead of ` exchangeSpecification ` to ensure consistency in proxy creation by using the correct URI
updated print statements in RecordGenerator . java for clarity to improve readability and maintainability of the code
camel - 16462 : camel - kafka should not commit offset when auto commit be enable
removed unnecessary lock release in Liquibase and modified SQL output handling in LoggingExecutor and StandardLockService to streamline database lock management and
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and added deprecation warnings in AuthorizeTagCustomGrantedAuthorityTests . java to improve code clarity
added synchronization to methods in Database and SessionRemote classes to ensure thread safety during concurrent access to the database operations
refactor nested property handling in SpringBootAutoConfigurationMojo to use ResolvedProperty class to improve clarity and maintainability of property resolution logic
updated ticker adaptation from baseSymbol to counterSymbol in VirtExMarketDataService . java to ensure the correct ticker is returned for
camel - 16462 : camel - core - optimize camel - core to reduce dependency on camel - core
replace UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to ensure
resolved - issue batch - 175 : fix concurrentmodificationexception in defaultjobparametersconverter
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
change height scale from 256 to heightScale in FractalHeightMapGrid . java to improve flexibility by allowing dynamic adjustment of height scaling
updated the equality check in SecurityConfig and changed the assertion in SecurityConfigTests from assertEquals to assertNotSame to improve type safety and ensure
[ hotfix ] set default value of dump - partition - id to false
added unit tests for ` TronTXOutput ` and ` TronTXOutputs ` in ` UTXOSetTest . java ` to
[ java ] fix false positive with unused variable name
pdfbox - 4892 : avoid npe if array be null , a suggest by valerybokov
added a new test for job parameters overriding previous restart parameters in JsrJobOperator to ensure that job restart properties are correctly updated during job execution
added a new boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the Database
refactored principal creation logic in JaasAuthenticationHandler . java to improve code clarity and maintainability
refactor core shutdown process to use a separate thread pool for better resource management to improve responsiveness and responsiveness when shutting down Solr
added null check and visibility logic for mActionsView in RecentsView . java to ensure actionsView is only visible when fullscreenProgress
refactor parameter handling in RunIdIncrementer to use a separate variable for JobParameters to improve code readability and maintainability by reducing
refactor BasicEntity and TestUtil classes for improved structure to enhance code readability and maintainability
added assertions to verify the expected number of matched devices in SchemaRegionBasicTest . java to ensure that the expected results reflect the correct number of
improve logging of metric event error ( # 10363 )
added a conditional check for ` max ` before calculating centralities and introduced a new ` EigenvectorCentralityBuilder ` class for
replaced hardcoded registry port with dynamic port generation in LookupIPv6 . java to improve flexibility and avoid port conflicts during registry lookup
mondrian : fix geometry generation for ifc - specific type .
changed the amplifier value for an entity from 2 to 0 in the Beacon class to adjust the entity ' s amplifier for
refactor TubeCalc class implementation to improve code readability and maintainability
disable http client configuration by default
changed the type of ` DEFAULT _ GROUPS ` and ` groups ` from ` List < Class > ` to ` List < Class < ?
added a new key headful annotation and a timeout for the main main method in bug8057791 . java to address issues related to
make thread daemon to allow speedment applications to exit via main method completion ( # 322 )
simplified version parsing logic in ItemLexicon . java to improve code readability and maintainability
added a reflection access check in the JavaAdapterFactory class to enhance security by ensuring proper access control for the type
camel - 16462 : camel - core - allow to turn off lazy session creation in camel - mina
updated the ` initIOContext ` method to include a ` RecordReader ` parameter across multiple classes to enhance flexibility in handling different record readers
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to streamline the codebase
added a new method ` configurationChanged ` in ` FileStore ` and improved validation checks in ` JavaLanguageServer ` to ensure proper handling
added try - catch blocks around registration and unregistration of session callbacks to handle potential exceptions during session callback registration and unregistration
removed the " src / test / org / apache / lucene / index / index . cfs " and " index . nocfs "
refactor AkkaRpcServiceUtils to use a constructor function instead of a direct instantiation to improve flexibility in creating AkkaRpc
hbase - 26400 addendum : increase mapreduce . map . maxattempts to 3 in testexportsnapshot
pdfbox - 4892 : do n ' t set non - symbolic to false , a suggest by valerybokov
added a new file SslConnectionTest . java to test SSL connection behavior to ensure that SSL connections are properly closed before being filled
added validation for IPv4 and IPv6 address types in InetAddress and NetworkInterface classes to improve error handling and provide clearer error messages for invalid address
added a test for date serialization in a collection in DefaultTypeAdaptersTest . java to ensure correct handling of date formats in JSON output
refactor Message class for improved readability to enhance maintainability and facilitate future updates
putdatabaserecord : fix for npe in putdatabaserecord . getfirstupdatekey ( )
updated loop condition in TableOutput . java to correctly calculate the maximum width based on the running width
pdfbox - 4892 : remove null check , a suggest by valerybokov
do n ' t show priority for format string that contain { 0 }
add a property to ignore non - final loop variable in for - each statement .
updated PDFExporter to use PDF version 1.5 and enhanced PDF export options in tests to improve compatibility and functionality of PDF
added unit tests for LdapUserDetailsMapper to ensure correct handling of role attributes in LDAP user mapping
add ldap . read . timeout config to make ldap connection timeout configurable
updated TestDescription . java and TestDescription . java files to improve test structure and organization
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple hash map classes to clarify the purpose of the variable related
added a condition to check if the handler state is invalidated in the gesture handling logic to ensure proper handling of gestures when the handler is
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex values in Workspace . java to improve folder creation behavior by adjusting maximum distance
updated configuration handling in OciConfigConfigSource . java to use ConfigProviderResolver instead of ConfigProvider to improve flexibility and maintainability of
refactor Testjsig class for improved readability to enhance maintainability and facilitate future development
fix mana ring , tablet , ring , terra pick , and terra picking item with no mana . close # 3
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the serialVersionUID field and added a suppression warning annotation in P11TlsPrfGenerator . java to streamline code by eliminating
refactor tsFile validation logic to improve clarity and error handling to enhance code readability and maintainability by using more descriptive variable names
added two new Java files , Switch21 . java and Switch19 . java , implementing switch pattern matching , null handling , and guard pattern logic
updated error message for ` ComparableType ` and ` RawComparableType ` in ` ComparableSubjectTest . java ` to clarify the
updated StreamHelper to set the XML standalone flag and added a new TestStreamHelper class with unit tests to enhance XML processing capabilities and ensure proper
updated bounds checking and improved error message formatting in Int2ObjectCache . java , and added equals method in Int2ObjectCache . java
updated security filter chain ordering in WebSecurityConfiguration and added a new test for it in WebSecurityConfigurationTests to ensure that security filter chains are
removed the ` TimeInForce . GTC ` parameter from the ` recvWindow ` method in ` BinanceTradeService . java ` to
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and improve value validation to enhance flexibility and ensure min and max values are within
changed the character KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure
camel - 16462 : camel - jms - provide documentation for activemq component . thanks to david mollitor for
added error handling for ` NoSuchFieldError ` in ` SourceUtils ` and created a new test class ` TestGetBound ` to improve robust
refactor the leaf filter builder logic into a separate method for clarity and maintainability to improve code readability and maintainability by reducing
modified the handling of the original artifact name in BatchPropertyBeanPostProcessor . java and added setup and teardown methods in JobContextFactoryBeanTests .
add a loop to read the certificate serial number from an input stream in HttpsSegmentFetcher . java to enhance security by ensuring all certificates are
updated the return type of the ` getDefaultBooleanValue ` method in ` Config . java ` and added a new ` DnsFallback . java `
ww - 4353 add exception when write tag fails
changed the type of the ' success ' variable to ' url ' and updated its corresponding JSON properties to improve clarity and functionality by associating
refactor the drop method in WindowsSecurity to use a lambda expression instead of an anonymous class to improve code readability and ensure local resources are
removed " address " and " phone " from the scope configuration in CommonOAuth2Provider and its tests to simplify scope management by eliminating
refactor ManagedSelector to implement a new Start class with a CountDownLatch for synchronization to improve responsiveness and ensure proper synchronization of the
added new BigDecimal constants for hue and saturation in WLedHandler . java and modified request handling in WLedHandler . java to improve color representation
replaced the ` isValidCaller ` method with a static final ` VALID _ CALLERS ` set to improve code readability and maintainability by
added a new method ` caseJSRInst ` to handle JSR instance cases in ` InstSwitch . java ` to facilitate
add a transactionmanager to the subscriptionactivatingsubscriber to ensure that the subscription be register in a transaction .
refactor SQL query construction in DBMSProcessor . java for better clarity and error handling to enhance code readability and maintainability while ensuring
added elevation property to ContactItemInflater for improved visual appearance on devices running Lollipop or higher to enhance user experience by
renamed ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming conventions
replaced direct access to file operations with privileged actions in SandboxFileManager . java to enhance security by ensuring file operations are performed with
refactor GroovyParserVisitor and GroovyPrinter to include handling for the " [ " and " Access " operators to improve code clarity and support
updated warning message format in MetaDataFetcher to include the exception class name to improve clarity of error messages for better debugging
refactor character handling in RecordInputStream and UnicodeString classes to use a more descriptive variable name and improve clarity to enhance code readability
added a test for downloading a file with non - ascii characters in the name to ensure that the file download functionality works correctly with orway characters
replaced RuntimeException with CancellationException and added cancellation handling methods in AsyncResource . java to improve error handling and provide clearer feedback on cancellation
added null check for statistics before processing cache count to prevent potential NullPointerException when statistics are not provided
refactor MongoTemplateTests by restructuring annotations and adding a test for object removal from a specific collection to enhance test coverage and improve code organization for better readability
update copyright year to 2022 in java . desktop
use % n instead of \ n in coder . tostring ( )
added a new boolean field ` mIsClearAllButtonFullyRevealed ` and updated scroll handling logic in ` RecentsView `
added COMMON _ HMS _ PROPERTIES map and refactored parameter handling in HiveIcebergMetaHook and HiveIcebergSer
added a method to check if an address is already in use in the Server class to improve error handling by distinguishing between bind exceptions and address
added a command line argument for the test class path in TestNestmateAttr . java to ensure the test environment is correctly configured for
updated the logging level from ` java . util . logging . Logger ` to ` java . util . SchemaTextDetailType . verbose _ schema
fix checkstyle issue in java . rmi
# 1193 - add support for nested sub - transactions ( # 1193 )
replaced a fixed fetchSize with a ThreadLocal < Integer > for thread safety to improve performance by reducing the number of fetch operations
[ java ] use noopidletimeoutstrategy instead of backoffidletimeoutstrategy for pingpong .
refactor HttpClientIntroductionAdvice to use a supplier for handling blocking calls to improve code readability and maintainability by reducing
added HDP version handling and logging in SliderAppsViewControllerImpl . java to ensure the application uses the correct HDP version if available
refactor ` JavacProcessingEnvironment ` to store ` loaderClass ` , ` jusl ` , and ` loader ` for impro
added DeepCloner class and modified parameter handling in ParameterizedRobolectricTestRunner and RobolectricTestRunner to improve object cl
added binding for JETTY _ SHOW _ STACKTRACE to Boolean . FALSE in ResourceBase . java to control the visibility of the stack trace
added a type check for OBJECT in NativeObject . java to return null if the object is an instance of JSType . OBJECT to ensure proper handling
replaced instances of ` sun . jvm . hotspot . types . OopField ` with ` sun . jvm . hotspot . types
updated JwkKeyListView to handle both RSAPublicKey and ECPublicKey types and improved serialization logic to enhance cryptographic functionality and
use only writable boot image heap when use - g : + useonlywritablebootimageheap
modified MBeanServerMXBeanUnsupportedTest . java file to enhance test coverage for MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies by eliminating unnecessary dependencies
added getOwnerAddress method to Actuator and its implementation in CreateAccountActuator , TransferActuator , and TransactionCapsule classes to provide functionality
http : / / issues . apache . org / activemq / browse / amq - 2636 - add a demo for http
[ zeppelin - 539 ] fix zcount and zrangewithscore when min and max be double .
update protobufannotationserializer to handle empty index
[ java ] do n ' t use contains to check if the correlation id be already in the async command id set .
added method calls to save conflicts in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure proper handling of file conflicts during
updated generic type declarations in multiple Java files to enhance type safety and improve code readability
updated import statements from ` org . apache . solr . common . util . StrUtils ` to ` org . apache . lucene . analysis
added support for remarks reporting and use information schema in Oracle and MySQL databases to enhance compatibility with Oracle and MySQL databases
updated MockMethodInterceptor to accept a handler parameter and added a serialVersionUID to ensure compatibility with the handler and improve serialization compatibility
updated timing logic in FileChangedExclusiveReadLockStrategy . java to use current time instead of the current date to improve accuracy of file modification checks
[ hotfix ] [ table - common ] fix classloading issue in executioncontext
added buffer change handling in TerminalView and TerminalTextViewOverlay classes to improve responsiveness to buffer changes in the UI thread
added a check to ensure pid does not contain a period in the processConfigFile method to improve code readability and ensure proper handling of null values
refactor freeze operation logic to support both v2 and v1 freezing modes to enhance flexibility in freezing behavior based on
added support for insecure trust manager configuration in TlsConfig . java and updated TlsUtils . java to handle it to improve security by allowing
refactor code to use a local variable for source and class path in JavadocTool . java and add a new class T7091528
updated nodeColumns to use edgeColumns instead of nodeColumns and refactored defaultEdgeColumnsGDFs array to include edgeIdColumn and
added cascade option to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the association is not persisted in the database
http : / / issues . apache . org / jira / browse / amq - 4892 - make message . equals ( object
update character encoding from Unicode to Unicode in AsyncProvidersBasicTest . java to ensure proper handling of special characters in URLs
[ hotfix ] [ test ] remove unused method in rocksdbserializercompositekeybuilder
added a method ` getStaticPermissionsField ` to the ` ProtectionDomain ` class and modified the ` SubjectDomainCombiner ` to use it
fix a crash when you click on an item that do n ' t have a recipe
refactor parsing logic in Parser . java to improve parsing logic to enhance readability and ensure correct parsing behavior
added an ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter ` to improve user
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to handle unsupported media types to ensure proper
change bitwise operation from bitwise operations to bitwise operations in NodeBitMap . java to ensure proper type handling for bit manipulation
refactor import layout styles in ImportLayoutStyle . java to improve code readability and maintainability
refactor ConsoleUIService to use standard input instead of Git bash configuration to improve flexibility in handling terminal input based on environment settings
replaced mocking with TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest . java to improve test clarity and maintainability by
[ java ] remove unused enclosingtype field in analysistype . java .
renamed methods from ` getProperty0 ` and ` getEntries ` to ` property0 ` , ` getEntries ` , ` concatSeparator ` , and
removed the timeout parameter from the set method call in PutAllCallable . java to simplify the code by eliminating unnecessary delays
fix npe in mqclientinstance when consumer run info be empty or not
[ java ] generate source identity when create a driver conductor .
added a new file TopTabAction . java that implements the toolbar presenter to provide a visual representation for the top tab in the desktop branding
camel - 16462 : fixed dynamicrouter component to work with multiple recipient mode .
updated imports and modified the class declaration in AggregateItemReaderTests to use JUnit 4 annotations to improve test structure and align with JUnit 4
added generic type parameter to the Procedure constructor in AbstractObjectValueTypeMap . java to enhance type safety and improve code clarity
added functionality to retrieve and display Wikidata edits for a user in AchievementsActivity to enhance user experience by providing insights
added a validation check for ` len ` in ` OfflineSorter ` to ensure it does not exceed ` Short . MAX _ VALUE ` to prevent
do n ' t report uncached bug for constant long . min _ value
renamed multiple dataset classes to improve clarity and consistency to enhance maintainability and readability of the codebase
updated the error message for invalid credential types in ProvisionClusterRequest . java and modified the expected exception in ProvisionClusterRequestTest . java to provide
updated random integer generation logic in TestVectorUtil . java to ensure that the random value is within the valid range of 1 to 100
changed the return type of the compareBy method from int to long and simplified the comparison logic to improve precision and simplify time comparison logic
added SSL property handling in TestUtil and modified test assertions in PGPropertyTest to enable dynamic SSL configuration based on system properties
simonstewart : enable safebrowsing by default for chrome
added null check before cloning oldConfig in BaseMotorMount and RecoveryDevice classes to prevent potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding behavior based on configuration
added handling for empty gherkinRows and raw lists in DataTable and TableDiffer classes to improve robustness by avoiding potential NullPointerExceptions
added a custom ignore tag to the RobustJavaMethodParser class to exclude specific Java code elements from parsing
camel - 16462 : fixed jdbcaggregationrepository to throw optimisticlockedexception instead of a generic runtimeexception
fix ` @ configurationproperties ( ` ` parent ' ' ) ` ` name ' ' and ` @ configurationproperties ( ` ` parent ' '
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added onInsetsUpdated method to improve UI responsiveness and
deleted the ClusterNodeInfo . java file to remove unused or redundant code from the event bus implementation
updated return statement in ShieldedTransferActuator . java to ensure proper functionality of the return statement
added debug print statements for ciphersuite selection in ServerHandshaker . java to provide visibility into ciphersuite selection for debugging purposes
updated the template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single and multiple templates appropriately to improve user experience
added a ` nodeLabelMap ` to store NodeDraftImpl instances and modified the handling of duplicate nodes in ` ImportContainerImpl ` to improve
added a new file R2303044ListSelection . java that tests the selection of a list item to ensure that the selected item is
[ java ] check client timeout rather than keep alive timeout in driver conductor .
added a null check for mWorkspace in the Launcher class to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the ` compound ` property
refactor row count computation in StatsRulesProcFactory . java to use a separate rowCounts list to improve code readability and maintainability by
added path and query parameters handling in SpringBootDocBuildTemplate . java and refactored stream processing in DocUtil . java to improve code
updated logger initialization and refactored notification handling logic in multiple classes to improve code clarity and ensure immutability of logger
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and modified the ` createBuildEngineDelegate ` method to
improve error message when json parse fails
added conditional logging for widget tray filtering in WidgetsModel . java to improve performance by avoiding unnecessary logging when debug mode is not enabled
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a test for discount overlaps in TestSimilarityBase . java to
added checks for the presence of ` send ` method in ` SimpleMailMessage ` and ` MimeMessageItemWriterTests ` classes to ensure proper
added new exit and quit methods with their respective properties to the Global class and removed the old quit method from ScriptingFunctions to streamline the
updated the initialization of the LoanBrokerGateway and LoanBrokerSharkDetectorDemo to use a consistent context variable to improve code readability
rename methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method naming conventions
refactor cookie handling in VmwareContext to use CookieJar instead of String to improve cookie management and error logging for missing cookies
updated assertion statements in ResinAcegiAuthenticatorTests . java for consistency to improve code readability and maintainability
updated bigIntegerToBytes method calls to include a default value of 32 to ensure compatibility with 32 - bit data types
updated the property name from " fml . disabledMods " to " fml . modStates " in Loader . java to improve cl
refactor account selection handling in ReceiveExternalFilesActivity to use a dedicated method for showing the account chooser dialog to improve code readability and
improve error message when fail to connect to the client
added error handling for unexpected empty simulation results in ValidatorContractController to ensure robustness by throwing an exception for unexpected results from the validator smart contract
added null check for the root file before reading JSON fields in TexturePackerFileProcessor . java to avoid potential NullPointerException when reading settings file
removed null check for datasource and JNDI in PooledConnection . java to streamline connection pooling logic by eliminating unnecessary checks
increased TARGET _ MB and WINDOW values from 10 , 000 , and 32 , in TestRefprocSanity . java to optimize
do n ' t try to write to stdout when there be no current console
set credential refresh delay to 100 milliseconds in KinesisConfigUtil . java to improve user experience by allowing more time for credentials to be refreshed
replaced multiple instances of AlertDialog creation with a single method ` showInfoAlert ` to improve code readability and reusability by redu
renamed the loop variable from ' priv ' to ' pack ' and added a package argument to the ' test ' method to improve clarity
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and modified dependency
added a check to ensure dependencies are not provided before adding them to the list to avoid adding unnecessary dependencies to the list
added a HashSet to manage ZipFileInputStream instances and modified the releaseInflater method to ensure streams are properly closed when the ZipFileInputStream is not empty
rename datamatRIX to data _ mat ; fix typo
[ hotfix ] [ table - common ] fix race condition in sequencegeneratorsource
[ hotfix ] [ test ] fix typo in blobservergettest
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java
added support for additional architectures " ppc64 " and " ppc64le " in Bits . java and ByteArrayAccess . java
updated the exception message in RoboMonitoringInstrumentation . java to include a link to the GitHub issue to provide users with information on how to
updated timeout parameters in ` waitWithDeadline ` method to use ` Long . MAX _ VALUE ` instead of ` MINUTES ` to allow for
replaced instances of ` Date ` with ` Instant ` and updated formatting logic to use ` Instant ` instead of ` Date ` to improve date
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a Toast message to inform the user that the YouTube Player does not work on Lollipop and waiting on an update from
added checks for unterminated SQL characters in the parser and corresponding test cases in StatementTest to ensure proper error handling and validation for SQL syntax issues
added a null check for mVibrator in the vibration condition to ensure that the vibrator is not null before proceed
updated table formatting and column background color handling in DotRenderer . java to improve visual consistency and readability of the generated output
added a method ` isEncodedPar ` to check for encoded parameters in ` HiveConf ` and updated ` SetProcessor ` to use it to
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved certificate handling to enhance security and maintainability of certificate processing
fix wavefront uri validation ( # 3903 )
refactor image loading logic in NetworkedCacheableImageView and update related imports in MainActivity and TweetActivity to utilize Networked
removed the ' view ' parameter from the LauncherAnimUtils . ofFloat method calls across multiple classes to simplify the method signature and improve code
added a new variable ` gdxControllersVersion ` and updated dependencies in ` DependencyBank ` and ` BuildScriptHelper ` to include it to
refactor methods in LaunchedURLClassLoader for improved clarity to enhance maintainability and readability of the code
updated DataSourceHealthIndicator to use DataAccessUtils for retrieving the result set and added validation for column count in the result set to ensure that the
add ` ` no - cache ' ' and ` ` cache - control ' ' header to the html response
updated warn message formatting to use Locale . ENGLISH to ensure consistent formatting of log messages across different locales
refactor SolrQueryParser constructor to accept an Analyzer parameter to enhance flexibility by allowing custom analyzer for query parsing
updated copyright year and added licensing information for Universal Gcode Sender ( UGS ) to ensure compliance with licensing requirements
removed an unnecessary semicolon in MainTest . java to clean up the code and improve readability
refactor TypeContributions class to improve code structure to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VectorizedRowBatch with default size
replace templateName with req . getName ( ) in StatementGenerator . java to improve clarity by using the request object ' s name
removed the ` isTypeMatch ` method from ` AbstractConfig ` and updated the ` addConfiguration ` call in ` compositeConfiguration ` to streamline
[ java ] fix sessiondecorator to reset timestamp before write to buffer .
rename ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` methods to ` trustAll ` and
add a new annotation ` ` nobootstrap ' ' and modify ` ` bootstrapinserter ' ' to check for it
hbase - 23226 tabledescriptorchecker should use tabledescriptorbuilder . getvalue ( ) instead of hbase . getmaxfilesize (
replaced ` maxCommits ` with ` requestedCommits ` in the ` BranchGraphServlet ` class to ensure that the number of requested commits does
updated method signatures in bug6794831 . java to include InvocationTargetException and changed invokeLater to invokeAndWait to improve error handling and ensure
added a static final string ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method in ` CachingBuildEngine
removed unused imports from TransactionCapsule . java to streamline code by eliminating unnecessary dependencies
removed duplicate call to markAsDone in HttpProtocol . java to streamline the code by eliminating redundancy
added a default TezConfiguration instance to TezConfigurationFactory . java to facilitate the initialization of TezConfiguration objects for better
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a ` forget ` method to the ` OpenALAudio ` class and modified the ` stop ` method in ` OpenALAudio ` to
update state handling in SimpleBasePlayer and add a test for discontinuity reporting in SimpleBasePlayerTest to ensure that discontinu
added new decimal formats and new number tick units in NumberAxis . java to support additional numeric formats for improved precision
refactor TargetGraphAndBuildTargets to use factory methods instead of builder methods to improve code readability and reduce boilerplate code
removed the IndexFileNameFilter class and modified the file deletion logic in IndexFileDeleter . java to streamline file handling by eliminating
add ` ` fullboundingboxladders ' ' property to control the behavior of ladders based on entity ' s collision bounding
added a compression level parameter to several methods in ApkBuilder and SignedJarBuilder classes to enable customizable compression levels for the ApkBuilder
add a test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify the inclusion of static fields in a class
added support for the BYTES data type in the FieldSpec and related classes to support handling of BYTES data type in the MetricFieldSpec and Single
updated string builder to include a newline character and improved message formatting for multiple failures to enhance readability and maintain consistency in output formatting
replaced direct calls to ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java `
added caching functionality to the JPA join fetch pagination tests and integrated it into the ForumService to improve performance by utilizing a concurrent cache
maryproperties . needproperty ( ) now return null if locale be not set .
simplified the form body builder initialization in SimpleHttp . java and added a new test for null post body in TestHttpPlugin . java
added a dispatcher to the ClientSideSlb class using a cached executor service to ensure graceful shutdown of the HTTP client to improve resource management and
modify texture rendering logic to conditionally apply height adjustments based on flipping orientation to ensure correct rendering of textures based on the flipping
improve error message for unknown discovery strategy
changed contextPath from final to non - final and added a null check for contextPath to ensure contextPath defaults to " NA " when it is null
[ drools - 1640 ] avoid reinitialization of class in kie - container ( # 1649 )
added a B _ TREE _ MAP _ ROOT _ HEADER constant and validation in BTreeMap . java to ensure the root header is correctly
added precompiled header checks and updated related methods in AppleDescriptions and AbstractCxxSourceRuleFactory to ensure proper handling of precompiled headers
added a ` AccWeakReference ` class and modified related references to utilize security context to enhance security by controlling access control during image
made the ` findNextIndex ` method private in ` ObjectSet ` and removed unnecessary imports in ` OrderedMap ` and ` OrderedSet `
changed the assignment of isDirect from true to false in VertexBufferObject . java to correct the logic for determining if the object is direct
fix for ticket : 152 - remove duplicate code in maryclient .
changed return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from ` void ` to ` Vector2
pdfbox - 5764 : use limit instead of capacity , a suggest by valerybokov
added a null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is not initialized
refactor border spacing handling in CellLayout and DeviceProfile classes to improve clarity and maintainability of border spacing calculations based on container type and
refactor value numeric parsing to use a custom ValueNumeric class to improve code readability and maintainability by encapsulating numeric parsing logic
added a condition to check if the response is deferred in the login or error page to ensure that the authentication process only proceeds when the response
updated command - line argument checks from " -- module - startd - ini = " to " -- add - to - startd " to
updated dynamic partition handling in DynamicPartitionFileRecordWriterContainer to use a default partition value to improve robustness by ensuring a default value is used
[ hotfix ] [ stream ] add null check for operatorfactory in streamnode
refactor return statements in DefaultArtifact . java for clarity to improve readability and maintainability of the code
camel - 16462 : kafka consumer should not call staterepository . getstate ( ) twice for the same topic . thanks to j
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor to provide a user - friendly error message when the specified class is not found
change property name to enable _ gmail _ notifications for jabber account registration
doc : generate sample code in the java microgenerator ( # 177 )
updated test assertions in LumberjackMultiThreadTest to use a dynamic concurrency level instead of hardcoded values to improve test reliability by
fix player disappear when player be dead
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
api : updateuser api documentation to clarify usage of secretkey and apikey
refactor switch - case statements to if - else statements in MfaProvider , IdleTimer , JdbcMfaProviderProvisioning , and Saml
updated AbstractMetaDataExportMojo . java file to improve metadata export functionality
added SQLIntegrityConstraintViolationException handling for dropping tables in materialized view definitions to provide clearer error messages when attempting to drop tables due to
corrected a typo in the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to
added a new file ` RoboExecutorService . java ` that extends ` RoboExecutorService ` to mark the class as deprecated to indicate that the
added logic to handle root group addition in GroupTreeView to improve user experience by allowing subgroups to be added and sorted in the group tree
updated method names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check if the path
updated TestDynamicNumberOfGCThreads . java to use predefined arguments and refactored process builder creation to improve flexibility and maintainability
change return types and methods in CxxPlatforms from ImmutableFlavor to ImmutableSet < Flavor > to improve flexibility in handling host flav
updated CreateTable and CreateTableDeParser to use PlainSelect for create operations and parameters to enhance flexibility in SQL creation based on user -
added alpha setting for the background drawable in ChatViewerFragment to improve visual feedback by setting the alpha of the background color
test ( test ) : migrate ctiteratortest to junit 5 ( # 4446 )
added clear ( ) method calls to several tokenizer classes to ensure proper handling of token data to improve code clarity and maintain consistency in token management
added a new test class ASTInitializerTest to demonstrate that the ASTInitializer class does not crash on block statements to ensure that the
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` to use ` Enum < E > ` instead of ` Enum < E >
simonstewart : remove unnecessary check for ` ` link = ' '
add support for max fraction digits in StringConverter for BigDecimal , Double , and Float types to improve formatting flexibility and ensure proper handling of numeric
return the current scope in aggregatelifecyclelifecycle . getcurrentscope ( ) instead of the current unit of work .
replaced ` setTouchableInsets ( ) ` with ` setTouchableInsets ( TOUCHABLE _ INSETS _ REG
removed a conditional check for ' ~ ' in the FencedCodeBlockParser class to simplify parsing logic by eliminating unnecessary checks
added socketTimeout property handling in ConnectionFactoryImpl and BaseDataSource to allow configuration of socket timeout values for socket read operations
added a sleep delay of 500 milliseconds in ElementAttributeTest . java to handle potential interruptions during execution
updated InputStreamReader to use UTF - 8 encoding to ensure proper handling of character encoding in HTTP responses
refactor List class implementation to improve code readability and maintainability
refactor AsyncFileImpl to accept URI and Path parameters and improve error handling to enhance code clarity and ensure proper context management during file operations
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to ensure compatibility with the latest API features and improve code
fix npe when no Nuage VSP device on physical network
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated its implementation to improve clarity regarding the purpose of the method
updated Java version checks from Java 8 to Java 9 in ConstantPoolTagTests . java to ensure compatibility with the latest Java version
fix error message for compile with - xlint
add a method to clear the client header map to provide a way to remove all headers from the HTTP client
replace Vector with ArrayList for handling input and output strings to improve performance and readability by using a more suitable data structure
updated the DEFAULT _ GRID _ COLUMN constant from 4.0 f to 3f in AppPreferencesImpl . java to adjust the grid column
added a condition to check if ' forViewCreation ' is false in the table defined check to avoid defining tables during view creation
updated date pattern pattern in TestHS2HttpServer . java for consistency and clarity to improve readability and maintainability of test assertions
added a try - catch block to handle potential exceptions when retrieving an object from snippetReflection to improve robustness by preventing application crashes due
replaced IE driver with FIREFOX and updated test method names to enhance compatibility and improve test coverage for page loading functionality
updated byteOffset calculation to use Math . addExact to ensure byteOffset does not exceed BYTE _ BLOCK _ SIZE and added a new test for
changed static fields to instance variables in InteractionValueEncoder and modified string formatting to use Locale . ENGLISH to improve flexibility and ensure consistent formatting
improve error handling in tcptransport . onexception ( throwable )
suppress ` ` serial ' ' warning in ` ` papplet . java ' '
refactored ` OcamlDebugLauncher ` to extend ` AbstractBuildRule ` instead of ` AbstractBuildRuleWithResolver ` to simplify
add ` ` discard change ' ' and ` ` return to jabref ' ' for save / discard
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator . java and improved error logging in OAuth20AccessTokenEndpoint
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure proper validation of the buffer index
updated the ` TableMapReduceUtil ` to accept a ` Class < ? extends InputFormat > ` parameter and refactored the ` initTable
updated the ` append ` method call to use ` jrubyClasspath ` and ` testClasspathElements ` instead of ` jrubyClasspath ` to
improve error message when a non - existent language be access to an internal language .
added deprecation check for ' reserve . commit . duration ' in ReplicationHandler to ensure that ' reserve . commit . duration ' is mutually exclusive
corrected a typo in the variable name from ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport . java `
updated ECKeyPairGenerator to use Object [ ] instead of long [ ] for key pair generation to improve type safety and clarity in key pair
[ flink - 11937 ] [ runtime ] restarting should not return a job in cancellation state .
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RecentsAnimationDeviceState . java ` to
[ unifi - 2598 ] fix npe in unifi controller cache ( # 2598 )
updated method signatures and variable names from ' lwp _ id ' to ' unique _ thread _ id ' across multiple classes to improve clarity
remove offer with the same offer id from the offer list if it have the same offer id .
use constant instead of hardcoded value for tl 1.3
updated MockitoMethodInvocationControl and SystemClassUserTest to use ` doReturn ` instead of ` when ` and ` when ` for mock
updated NotLoadedException to include the current instance of NotLoadedException to improve error handling by providing context for the NotLoadedException
added an extra file parameter to the intent in FileDisplayActivity to ensure proper handling of file data in the activity
added error handling and checks for old compaction files in StoreDirect and StoreWAL classes to ensure proper resource management and prevent leaks during file
added a task snapshot execution in AbsSwipeUpHandler and refactored the stopSwipeToHome method call in SystemUiProxy to
added hidden property to CommandArgumentDefinition and corresponding methods in LiquibaseCommandLine and LiquibaseCommandLineDefinition to enable handling of command
change the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct
[ geos - 6641 ] use catalog from stylegroup . getld ( ) instead of resourcepool . getcatalogfromstyle (
added permission checks for launching activities and modified shortcut creation logic to enhance security by ignoring potentially malicious intents
added getId ( ) and getId ( ) methods to TideMapLoader , TmxMapLoader , AnimatedTiledMapTile , and
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection to include version V _ 0 _ 13 in JDBCExample . java and added version specification in SessionExample . java to ensure compatibility
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance change log generation by allowing specification of schemas and include
replaced ` putIfAbsent ` with ` put ` in ` registryCache ` to ensure that the registry is only added if it does not already exist
benchmarker : log warning instead of error for single benchmark failure
changed the ` doPutRecord ` method from final to non - final in ` AbstractCacheRecordStore . java ` to allow for subclassing
fix file selector not work on window
added new test methods for handling large and slow client responses in FastCGIProxyServletTest . java to improve test coverage for response content handling
added a new intent to start the ReadInteractionsService in MarkReadService . java to enable the marking of read interactions in the application
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are logged only when `
added configuration to set the SMTP port to a default value of " 25 " if the server port is not specified to ensure that the email server
add retry to renew sslfactory on file change
updated the date format in ObjectMapperProvider from " HH : mm : ss ' Z ' " to " HH : mm : ss ' Z '
updated assertion message in SpyingOnRealObjectsTest . java to clarify the reason for the private class being mocked to improve test
added functionality to check if the line ends on the line end in the InlineBoxing and LineBox classes to enhance line formatting handling by allowing
updated filePathString to handle null parent cases to ensure robustness by avoiding potential NullPointerExceptions when the parent path is null
removed unused import of DocCollection in TopicStream . java to streamline dependencies and improve code clarity
refactor input stream creation in NinjaServletContextTest and add a new test for Windows - 1250 multipart handling to improve code readability
added a property to exclude certain endpoints from the management endpoints in AbstractCasEndpointTests to enhance security by restricting access to specific endpoints
added a validation check to ensure the current graph is a dynamic graph to ensure that the current graph is a dynamic graph to prevent runtime errors
avoid eager initialization of bean when @ scopeone be not present
added support for suppressing exceptions in JsonPath expressions and updated related classes accordingly to enhance flexibility in controlling exceptions during JSON path evaluation
removed redundant instantiation of ControllerLeaderLocator in HelixServerStarter . java to streamline code by eliminating redundancy
updated usage message in CLHSDB and HSDB classes to include an additional ' - help ' option to improve clarity and usability
refactored ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` to improve readability and maintainability of the
remove deprecate write class and move to sdk . io . write
refactor ` ShadowAccessibilityManagerTest ` to use ` RuntimeEnvironment . application . getSystemService ( ACCESSIBILITY _ SERVICE ) ` instead
add ` ` stick balloon ' ' analytics for usage statistic ( # 3558 )
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed the ` SourcePathResolver ` parameter in several
refactor the ` enumDataTypeHelper ` initialization to use a new ` PostgreSQLEnumDataTypeHelper ` class instead of a lambda expression to improve code
updated log path comparison in LogFileTests to use File . separatorChar to ensure compatibility with different operating systems in log file paths
replaced instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple Java files to ensure consistency in
added support for dropping index tables in HiveMetaStoreClient to ensure proper error handling when attempting to drop index tables
added a condition to check visibility before updating the disabled flags in RecentsView to ensure that scrolling is only enabled when the view is not
added a specific highlighter for syntax highlighting on non - Windows environments to enhance compatibility with syntax highlighting on non - Windows environments
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 645
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` filePathStrings . add ( file .
updated the removal of capture listeners in SelectBox . java to ensure proper cleanup of capture listeners
changed the value of _ metaDataComplete from true to false to update the logic for metadata completion
replaced the return type of ` removeTaskTarget ` to ` void ` in ` RecentsAnimationController ` and modified bitmap handling in
added support for " PLATFORM " and " RELEASE " environment variables in JsBundleGenrule and corresponding tests in JsBundleGenrule
updated type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test method
added tests for handling new line characters in comments and Javadoc in the AddImportTest class to ensure proper formatting of Java source files and improve code
added hubMode property to AbstractLiquibaseChangeLogMojo and updated its usage in AbstractLiquibaseChangeLogMojo
removed unnecessary null check for processedItem in JsrChunkProcessor . java to streamline code by eliminating unnecessary null checks
added a check for the existence of the linkDb file before adding it to the input path in IndexerMapReduce . java to ensure that
simplified the method lookup for setting the indexing thread pool in LuceneTestCase to improve code readability and maintainability by reducing
updated the address format in GameCanvasImplementation . java to remove the ' : 5000 ' prefix to simplify the code for better readability and maintain
added a copy method to serialize and retrieve JobExecution instances in MapJobExecutionDao to ensure that modifications to the JobExecution object do not affect the original state
added a new file ` DownloadTest . java ` that extends ` GdxTest ` to test the functionality of the ` DownloadTest ` class
updated language normalization in multiple classes for consistency to ensure consistent language handling across the application
updated error handling in GenericUDFRound . java to use UDFArgumentTypeException instead of UDFArgumentException to improve type safety and clarity in error
updated version handling logic in ManageDependencies . java to include a null check for selectedVersion to ensure robustness by avoiding potential NullPointerExceptions when
added multiple Ant path request matchers for various media types in SecurityConfig . java to enhance request matching capabilities for various media types
added JUnit @ Ignore annotation to TestConcurrentDpInserts . java to temporarily disable tests that are not ready for execution
added a condition to check if the concrete class name matches the class name before processing the constructor and superclasses in BeanDefinitionInjectProcessor . java
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests that are not ready for execution
[ openwebnet ] use fixed delay instead of scheduleatfixeddelay for energy and thermoregulation
do n ' t use socketeventprocessor for apr so that it do n ' t interfere with apr .
deleted the SunToolkitSubclass . java file to remove unused class to streamline the codebase
replaced direct calls to ` getTranslation ` with a new method ` getTranslation ` in ` DefaultRenderableSorter ` and added a method to check
added a test method to register wrapper handlers before primitive types in TypeHandlerRegistryTest . java to address issue # 165 related to type handler
added a new method to convert a WritableRaster to a RGB image based on the alternate color space to enhance image processing capabilities for PDLAB
updated URLs in CommonsApplication to use BuildConfig instead of hardcoded values to improve maintainability and consistency by centralizing API configuration
camel - 16462 : camel - health - add health check for camel - http to make it easy to see if the health check be
add a null check for the block position before accessing its properties in EntityThornChakram . java to prevent potential null pointer exceptions when
added a test for altering a table with indexes in ` AlterTableWithViewsIT . java ` to ensure correct handling of primary key
updated offset initialization in FileFloatSource . java and added randomness assertions in TestFunctionQuery . java to improve clarity and functionality of document
removed DrillMongoConstants . ID from the fields collection in MongoRecordReader . java to clean up unused fields during data processing
added disposal methods to YeelightHandlerBase and DeviceBase , and improved connection termination in WifiConnection to ensure proper dis
added support for auto _ increment functionality in the InnoDb parser to ensure proper handling of auto _ increment behavior in SQL queries
fix ( kubernetes - client - api ) : add sync period to sharedindexinformerfactory
server : save template detail in private template instead of copy them to the list
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage for better image management to enhance flexibility in image size
removed deprecated constants from LauncherSettings . java and added new constants in LauncherProvider . java to clean up obsolete code and improve maintainability
[ drools - 6642 ] fix classpath issue in broker and brokermain
added legendTop variable and updated offset calculations in PieChart . java to improve legend positioning and ensure accurate offset calculations
added a check to return early if the detination of the renderer ' s world transform is zero to avoid unnecessary processing when the detination is
pdfbox - 4892 : add maryscriptcreator to make it easy to create a script from a file
added a remote host attribute to the flowFile in ListenHTTPServlet . java to enable the retrieval of the remote host from the HTTP request
refactor compaction logger initialization and file deletion logic in LevelCompactionTsFileManagement . java to improve resource management and ensure proper cleanup of compaction
updated license and location URL attributes from " xlink : href " to " href " in ComponentDescription . java to align with updated API standard
camel - 15836 - camel - aws2 - s3 : fix the executor name in s3streamuploadproducer
hbase - 26465 log regionserver state when cluster be shut down ( # 2649 )
added null check before logging span in Slf4jSpanLogger and improved warning message formatting in DefaultTracer to enhance robustness by prevent
trim whitespace from the active options before adding them to ensure consistency by removing leading and trailing whitespace
added preference settings for wallpaper depth effect in DepthController . java to enable or disable depth adjustments based on user preferences
updated the assertion in OverseerTest . java to check the success count of the overseer action to ensure that the overseer
removed the method ` getKernelVersion ( ) ` and modified the return value of ` xattrEnabled ` to always return true to simplify the
refactor ExecConstants class for improved readability to enhance maintainability and facilitate future updates
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for testing purposes
added a method to set scan attributes for paging in ScanUtil . java and updated TableSnapshotResultIterator . java to utilize this method to
added a conditional check before setting the lowRange in Request and RequestV2 classes to ensure lowRange does not exceed 1 , 000 , 000
changed visibility of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and modified cache size estimation calculation in Async
update zoneId assignment in HostJoinDaoImpl . java to ensure accurate zone ID is set for the host response
[ zeppelin - 4892 ] fix utf - 8 encode issue in livy interpreter
updated the remove method to include the zfs parameter to ensure proper removal of filesystems based on the provided zfs reference
replaced the ` obj ` field with a ` json ` field in ` HttpRequestBuilder ` to store JSON data instead of a ` Object `
updated polling duration from 2 milliseconds to 5 and 3 milliseconds in SoftAutoCommitTest . java to improve responsiveness by allowing more time for
do n ' t fail if browser be not on before and after event listener
renamed multiple Java classes related to dial functionality to improve clarity and consistency in naming conventions
reformatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
update RyukContainer to use the latest version from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest
updated BootClassLoaderHook to return additional bootstrap paths instead of bootstrap paths and added a new TestHook class for testing to enhance boot class loading functionality
fix the patchy path in the patchy library so that the patchy library can be load .
[ hotfix ] [ yarn ] remove dependency on yarnclient from yarnitcase
add empty local map stats when no data be include in the partition table
deleted the AllTests . java file to remove obsolete test suite from the project
added support for non - breaking hyphens and zero - width spaces in AbstractWordConverter to enhance character handling in word conversion logic
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that memory does not starve on large
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( nestedResultMap ) ` in ` createRowKey
added a boolean flag ` eventHandled ` to track event handling in ` UIText . java ` to ensure the event is properly handled during
deleted the ` Controller . java ` file and renamed ` Weldby ` to ` WeldModule . java ` to streamline the codebase
ruby flavor : monitor capture group in empty check in tregex
replaced the initialization of ` liquibaseProLicenseKey ` with a protected field ` liquibaseProLicenseKey ` to
mondrian : rename setmemberreader ( memberreader ) to setmeasurehierarchymemberreader ( memberreader )
add - g option to generate debug info
mondrian : fix typo in mondrianproperties . java
added support for handling ` - Xfriend - paths ` and ` - Xfriend - paths ` in Kotlin - related classes
added aliases for " BATK " , " BRAH " , " MANDAIC " , and " MANDAIC
updated equality check in ExecutionCommand to use ` . equals ( ) ` method and added a new utility method in StageUtils for JSON parsing to
updated Mockito library version to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code readability to enhance maintainability and facilitate future updates
added a toString ( ) method to SystemScope class to provide a string representation of the object for better debugging and logging
improve error message when the cmyk ( ) function be invalid
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to ` LocalIndexIT . java ` to verify the correct
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` in ` BaseAndroidTestCase ` and updated test method names in ` BackupHelper
updated toast messages in multiple activities for consistency and clarity to improve user experience by providing more descriptive messages
simplified loop conditions in RendererUtilities . java and updated test assertions in RendererUtilitiesTests . java to improve code readability and ensure accurate
replaced ` Iterator < JsonNode > ` with ` ArrayNode ` for ` askList ` and ` bidList ` in ` Kraken
added error handling when adding the same column in the database schema to improve robustness by logging errors when attempting to add the same column twice during
removed debug print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor and refactored data size computation logic in ConvertJoinMapJoin . java to improve the efficiency of data size calculations
updated the ` buildView ` method to accept ` Context ` instead of ` LayoutInflater ` and added background resource settings for ` selectableItem
added an assertion for authentication in SecurityMockMvcResultMatchers and corresponding tests in SecurityMockMvcResultMatchersTests to enable flexible handling of authentication
vpc : set vpc _ id to null when vpc _ id be not specify
[ hotfix ] [ test ] disable flink savepoint test on java 1.11
fix checkstyle issue in com . google . media . media package
updated loop condition to check for actions size before proceeding to ensure actions are processed correctly based on the size of the actions list
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the new Bitmex exchange structure
add test case to demonstrate the use of parent / child / relationship relationship virtual metadata
added null check for spatial in LodControl . java to prevent potential NullPointerException when spatial is null
updated lastTokenFiltered initialization and added position increment in FixedShingleFilter . java , and modified test cases in TestConditionalTokenFilter . java to
set the state after the node in unsafestorenode and storefieldnode to the state after the node .
replaced ` super . putAddress ( base + offset , value ) ` with ` io . putAddress ( base + offset , value )
added an assertion to check if the CAS event repository is empty to ensure that the event repository is not empty before proceeding with further operations
removed unused parameters from AuthenticationAttrProcessor and its associated classes to streamline code by eliminating unused parameters
added null check for the key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that null keys are properly handled
removed the implementation of the setTypeface method in CodenameOneTextPaint . java to prevent runtime errors when setting a typeface
added an ` open ` method to ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS `
[ java ] remove deprecate ' fail ( string ) ' method from webdriverrunner
simplified the conditional statement in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a private boolean variable ` useConstructorMappings ` instead of a private static class ` ResultObject ` to improve
updated SQL syntax in CreateTableGeneratorTest . java to use double quotes around the table name to ensure consistency in SQL syntax for foreign key constraint
modify the filter handling logic in VectorizationContext . java to include a check for boolean type to ensure correct behavior when processing filter expressions in the
added generic type to the inheritance of moveSelectorConfig in ExhaustiveSearchPhaseConfig to enhance type safety and clarity in configuration management
replaced the instantiation of ` ReorganizeTableStatement ` with a new variable ` modifyDataTypeStatement ` to improve code clarity and maintain
replaced hardcoded string " cluster _ name " with constant CLUSTER _ NAME in multiple files to improve code readability and maintainability by
refactor connection handling in PeerGroup to improve error logging and exception handling to enhance debugging capabilities and provide clearer context for connection issues
added logic to handle multiple style strings based on their value in Nano . java to improve flexibility in applying styled styles based on the
use adventurenbtconverter instead of custom fixtypes in datafixer . fixup ( )
updated the return message from " Use ` ` String ` to " No # toString ( ) on String " to clarify the purpose of
updated JVM memory parameters from 64m to 32m in TestThreadFailure . java to optimize memory usage for improved performance
fix dataprovider . getverdic ( ) to retry if the number of retries be below maxreruntimes
change return value from tokens [ 0 ] to bandwidth [ bandwidth ] in BucketStateIEEE754 . java to improve accuracy of token retrieval
implement webdriverbackedselenium . selectpopup ( ) , deselectpopup ( ) , and capturenetworktraffic ( ) .
updated the ` doPrintEntry ` method to remove the ` printWarning ` parameter and added public key algorithm details to simplify the method signature and
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks for undecorated dialogs and frames in the Dialog and Frame classes to ensure that components cannot be decorated , preventing illegal state
changed the ' state ' variable from non - final to final in DefaultProjectFilesystem . java to ensure the ' state ' field cannot be re
refactor Redis connection factory to use RedisStandaloneConfiguration to enhance configuration flexibility for Redis connections
add a property to track the last received message that have be send to the chat room .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in the ` notifyContent ` method calls to
replaced direct execution of CreateShareOperation with a service for sharing operations to improve code maintainability and facilitate easier management of share
simplify boolean value check in BeanDefinitionInjectProcessor . java and add @ Inject annotation in FieldPropertyInject . java to improve code read
refactor for - loop conditions in ClassicPlotManager . java to use a variable for the starting y index to improve code readability and maintain
added a check for NullPointerException in the SmackIntegrationTestFramework class to ensure proper handling of NullPointerExceptions
added support for interop sub - directories in the EXIFReader class to enhance functionality for reading JPEG files with interop subdirs
added support for ` ENABLED _ LS ` in ` VersionTargetGraphMode ` and updated ` VersionedTargetGraphCache ` to utilize it to
added a condition to check if the child format is a video before proceeding to ensure that only valid video formats are processed to avoid potential errors
refactor AutoMlClient to improve code structure to enhance maintainability and readability of the code
added functionality to load JNLP services and set the library path in LwjglNativesLoader to enable dynamic loading of JN
added support for a new escape parameter in CSVRequestHandler to enhance CSV parsing flexibility by allowing customizable escape characters
added validation for only AuthorizationGrantType . AUTHORIZATION _ CODE in ClientRegistrationations . java and updated corresponding test cases in ClientRegistrations
enhanced error messages in Throwable and SuppressedExceptions classes for better clarity to provide more context for exceptions related to self - suppression
added a new SQL query and assertions in DerivedTableIT . java , modified the OrderedResultIterator instantiation in ClientAggregatePlan . java to
added logic to store and validate the R square value in the RegressionEvaluator and its test to ensure the correctness of the R square
added header handling in ThreadContextMDCServletFilter to enable processing of request headers for improved context management
replaced direct casting of ` work ` with a local variable ` mapWork ` in ` SparkPlanGenerator . java ` to improve code read
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for caching folder images to improve code
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer resolution in JwtIssuerAuthenticationManagerResolverTests to
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for
add a boolean parameter to the function constructor in ` LLVMInteropType ` and update related method calls in ` CxxMethodsTest `
removed duplicate sleep calls in AbstractBasicMockingIntegrationTest . java to improve code clarity and reduce unnecessary delays
added a new file ` KernCrash . java ` that demonstrates font rendering with kerning features to demonstr
added a fail ( ) method call to LinkedHashTreeMapTest . java to ensure the test fails under specific conditions
added a method to retrieve interface IP addresses and optionally add a prefix to enhance network interface configuration flexibility
cancel the housekeeper task when the pool be shut down
updated client address check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to
refactor Assert class for improved readability to enhance maintainability and ease of understanding for future developers
added a new test file ` Issue247Test . java ` to implement unit tests for the ` MapDB ` class to ensure correct functionality
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
updated validation logic in ValidatorTest to check if the person has x year 1 day to ensure that the person does not have x year 1 day
added error handling logic using GrblLookups for alarm and error codes in GrblController . java to improve error reporting for better
updated the return statement in Workspace . java to handle cases where no screens are available to improve user experience by providing a clearer label
removed the ` count ` parameter from the ` getBittrexTrades ` method and related calls to simplify the method signature and improve code read
updated ConsoleReader and MemoryHistory classes to improve line length calculation and output handling to enhance code readability and prevent potential null pointer exceptions
removed the " . jdk " suffix from the jdkPath initialization to simplify the path for better readability and maintainability
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple files to streamline code
refactor JFCModel to accept a Consumer for logging warnings instead of using System . out . println to enhance logging capabilities by allowing for better
added a validation check for the tolerance value in MaximumInscribedCircle . java to ensure that the tolerance value is positive to prevent illegal argument exceptions
added methods to create and drop views in TestUtil . java and a test for view privileges in DatabaseMetaDataTest . java to enhance database interaction
8274188 : nativestringtest . java fail with ` ` no test be run ' ' error if no test be run
added DesktopTaskbarUIController to manage hotseat icon visibility in the taskbar to enhance user experience by ensuring hotseat icons
fix ` ` install ' ' button be disable when the mod be not run
refactor file handling methods in Files . java to improve code readability and maintainability
replaced ` Set ` with ` Collection ` for interceptor management in ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration
refactored DomainAwareServicesManager to extend ServicesManager and removed the implementation of the ChainingServicesManager class to simplify the interface structure and
log mod id instead of mod file name in resourcepackloader . getpackinfo ( )
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
added methods ` grow ( ) ` to the ` Cell ` class for resizing dimensions in the Cell class to enhance flexibility in managing cell
refactor DefaultInputHandler to use generics for better type safety and simplify key binding logic to enhance code readability and maintainability by reducing
[ amq - 6642 ] fix test failure in activemqtestcase
replaced long arrays with byte arrays in MetricsMemoryTester . java and added a memory failure check in TestDockerMemoryMetrics . java to
deleted the JobParametersPrototype . java file to remove unused code to streamline the codebase
added a securityEnabled parameter to the MappingsTable class and updated related methods to handle security checks to enhance the functionality of the MappingsTable
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ EXPORTED _ OBJC _ C
changed DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable temporary files during testing
updated the ` codecNeedsEosPropagationWorkaround ` method to accept ` MediaCodecInfo ` instead of ` codecName ` to enhance codec
[ java ] fix race condition in networkpublication . send ( ) .
added a condition to check if output options are no info when dbInfo is null to ensure proper handling of output options when no info is present
use ssl = false by default in presto driver uri
added DOMOutputOptions to DOMConverter and modified the buildDOMSubtree method to include error output options to enhance the flexibility of output formatting in
refactor Assert class for improved readability to enhance maintainability and ease of understanding for future developers
[ java ] add retain option to event to indicate whether a topic be retain or not .
added " testCaseName " to the JSON serialization fields in EventSerializationTest . java to ensure proper serialization of test case information during serialization
[ hotfix ] [ table - planner - blink ] fix typo in sqlgroupedwindowfunction
updated import statement from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java
improve performance of abstractsessioncontext . settimeout ( )
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and
replaced ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to align with the
change log level from debug to trace for no firmware update handler available for thing with UID
added tests for handling NULL date and timestamp types in GetObjectTest . java to ensure correct functionality of date and timestamp retrieval in the database
refactor string handling in StringSubject and Subject classes for improved readability to enhance code clarity and maintainability by reducing redundancy
added a test for multiple repository permissions in UserModelTest . java to ensure correct permission handling for multiple teams in the user model
added a new file ` Test7088020 . java ` implementing method handle invocation with multiple parameters to ensure proper error handling for method type
refactor audience restriction validation to use a set for audience URIs to improve clarity and maintainability of audience validation logic
refactor cache refresh methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve cache management and synchronization to enhance code clarity
modified the handling of the _ stderr variable to allow for null values and updated print statements accordingly to avoid potential NullPointerExceptions when _ stderr is not
added a new warning constant ` SEPARATION _ ORDER ` in ` Warning . java ` and updated ` BasicEventSimulationEngine . java `
updated the query optimizer to use realtimeTableConfig instead of offlineTableConfig to ensure the query optimizer uses real - time data for improved
updated the SQL statement in ` PhoenixHBaseAccessor . java ` to include split point handling and modified the ` UpgradeCatalog240
updated SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added Bluetooth functionality to ShadowBluetoothDevice and its test to enable testing of Bluetooth class functionality in the shadow environment
rename ` contains ` method to ` containsprofile ` for clarity
[ drools - 770 ] fix npe in sumfunction . sum ( ) when the list be null or empty
replaced graphModel . getGraph ( ) . readUnlockAll ( ) with a direct call to graph . readUnlockAll ( ) to simplify
updated coreNodeName construction to use nodeProps . getCoreName ( ) instead of nodeProps . getNodeName ( ) to ensure the correct coreNodeName is
add backpressure to update the contact list in chat activity .
updated test cases for TaggerParserPosTagCompatibilityITest . java to improve test coverage for tag parsing functionality
added @ LuceneTestCase . SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase . java to suppress SimpleText codec during test
modified the condition in ` elemtype ( t ) . tag < = lastBaseTag ` and added a new class ` T7005671
updated triangle coordinates in DelaunayTriangulator . java and modified test class in LwjglDebugStarter . java to
added @ Override annotation to several ArrayList , HashSet , LinkedList , PriorityQueue , Set , TreeSet , and Vector classes to enhance code clarity and
refactor JWTClaimsSet initialization to use builder pattern to improve readability and maintainability of the code
refactor stack overflow state management in StackOverflowCheckImpl . java to improve clarity and maintainability of the state management logic
added shadow methods for SQLiteDatabase and ContentValues in Robolectric to enhance testing capabilities for SQLite and ContentValues in the Robolect
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced the usage of ` bytesPerDim ` with a ` ByteArrayComparator ` for comparing packed values to improve code readability and maintainability by
updated Locale . java to include a script property and modified locale initialization logic to enhance locale management by incorporating script support and improving
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct alpha value is returned for the last set
corrected the spelling of " Confimap " to " ConfigMap " in the warning message to improve clarity and accuracy of the warning message
replaced specific test class imports with a method from UaaJunitSuiteRunner to streamline test suite management and improve code readability
trim whitespace from token values in GzipFilter . java and update initialization parameters in GzipFilterDefaultTest . java to ensure leading and trailing whitespace is
updated the assignment of the _ outputType variable in Response . java to ensure consistency in output type handling
updated the default implementation from JDK to JONI in RegExpFactory . java to ensure compatibility with the latest Nashorn regex implementation
refactor ` ViewCapture ` to use ` FutureTask ` and ` Consumer < ViewRef > ` instead of ` Handler ` and ` Message
fix for ticket : 216 -- add support for ' / styles ' to the server .
added error handling for folder creation failures in GitBlit . java to ensure that a valid parent directory exists before proceeding with operations
change default node discovery bind ip from 0.0 . 0.0 to 127.0 . 0.1 in Args . java to ensure
camel - 16462 : camel - jbpm - in - camel workitem handler should use camelworkitemhandler instead of camelworkitem
pdfbox - 4892 : remove static import of metautil . jpeg _ native _ format
renamed ` WorkModeToggleContainer ` to ` WorkFooterContainer ` and updated related references to improve clarity and consistency in naming conventions
refactor multiple Java classes related to Dalvik functionality to improve code organization and maintainability
refactor : remove duplicate code in defaultjavaprettyprinter ( # 2329 )
added a call to freeMemory ( bytes ) in OperatorContext . java to ensure memory is properly released during execution
updated string formatting in QueryByExamplePredicateBuilder . java and modified string replacement logic in StringQuery . java to improve readability of error messages
refactor eviction tracking in ConcurrentLRUCache to use AtomicLong for tracking eviction counts to improve thread - safety and ensure accurate tracking of eviction
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
[ java ] do n ' t use inetaddress . getlocalhost ( ) in networkaddressmanagerserviceimpl
set the data root and source root for the main frame to ensure the application uses the correct database configuration
added constructors for MarkedClientEnabled and MarkedServerEnabled in AdminClientBootstrapConfiguration and AdminServerBootstrapConfiguration to enable logging for Sol
[ hotfix ] [ table - common ] fix typo in tableenvironment
removed the ` setStatementTimeout ` method and updated its usage in ` MapperBuilderAssistant ` and ` MappedStatement ` to streamline timeout
refactor method parameters in JSweetTranspiler , TypeScript2JavaScriptTranspiler , and TypeScriptWithTsserverTranspiler
added serialization for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocationResponse
updated ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl ` and improved
tika - 3353 -- fix for tika - 3353 : jxl document should not throw tikaexception
make sure we do n ' t trigger concurrent modification
fix intermittent test failure in tcpnioconnection
added checks to ensure that ` actual ` and ` expected ` values are not false in ` GuavaOptionalSubject ` to improve error reporting for
updated visibility logic in ` BackgroundAppState ` and modified ` ShelfScrimView ` to handle both horizontal and vertical swipe indicators to
added a null check for the navigation variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
mow - 121 : fix for mow - 121 : use corner screen for label rectangle and label rectangle .
refactor ErrorOccuredInOnExceptionRoute for improved error handling to enhance clarity and maintainability of error management logic
replaced scheduleAtFixedRate with scheduleWithFixedDelay in AstroDiscoveryService . java and changed log level from info to debug to improve scheduling
simplified the assignment of irrUnit and pemUnit by removing unnecessary conditional checks to simplify code and improve readability by eliminating
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang due to
updated import statements in GuiceFactoryTest . java to include specific dependencies to improve code clarity and maintainability by explicitly defining dependencies
added ` systemFeatureList ` to track and modify system feature status in ` RobolectricPackageManager ` to improve the management of system
added a new constant PROP _ PATH _ POSTFIX and refactored the path property handling in RCAFrameworkLoader . java to improve path
removed logging of the " Started cancellation watch dog " message to clean up the log output during the cancellation process
added null and empty check for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
updated variable names and logic for handling start and end text in BoxBuilder and InlineBoxing classes to improve clarity and functionality of inline box
added asynchronous collection of Telemetry data and a method to retrieve the remote IP from the Akamai server to improve thread safety and provide
removed conditional database type handling for the UPGRADE _ ITEM _ ITEM _ TEXT column in UpgradeCatalog260 . java to simplify the code
updated error messages for index directory and temp resource directory creation to provide clearer guidance on permission checks for directory creation
updated method signatures in DatasetUtilities . java to improve code readability and maintainability
added a method to append the selector ID with a colon in the key to improve the clarity of selector identification in the key representation
fix checkstyle issue in util / shading / gouraudshadingcontext . java
updated taskbar visibility management in multiple controllers to improve user experience by managing taskbar visibility during device dreaming and waking states
updated the formatting of constants in KeyExchange . java to improve code readability and maintain consistency
added a type check for JdbcConnection before executing the version check in CockroachDatabase . java to ensure proper handling of JdbcConnection instances
updated file index handling in ServerMainTest . java to use a variable for " . log " and " 1 . log " to improve code
added methods to retrieve the media recording MIME type in CodenameOneImplementation , MediaManager , and ImageIO classes to enable retrieval of media
make shaderhelper . useshaders ( ) public instead of confighandler . useshaders ( )
updated the bindable filter condition in DruidAdapterIT . java from " C = 6588 " to " C = 13500 "
removed unnecessary whitespace in the ZkStateReader instantiation to improve code readability and maintain consistency
pdfbox - 4892 : disable external general entity and document reference in xmp meta parser
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional check with a while loop for the " < script > " element in UrlHelper . java to improve code readability and
renamed ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and refactored varargs access checks to improve clarity
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` for clarity to improve code readability and maintainability
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to provide more granular logging without clutter
refactor ` InternalDropAllCommandStep ` and ` HubUpdater ` to return ` HubRegisterResponse ` instead of ` void ` to enhance
replace ` & 0xff ` with ` Byte . toUnsignedInt ` in multiple Java files to ensure proper handling of unsigned byte values and improve
( chore ) camel - opentrace : fix checkstyle violation
changed default caching behavior from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure caching is enabled by default for better performance
changed the rangePannable property from true to false to disable range pannability in the CategoryPlot class
updated the logic for determining the main active page in AllAppsContainerView to ensure proper handling of the work mode switch when the active page is
changed visibility of ` glCaps ` , ` renderer ` , and ` animator ` variables in ` Visualizer2TopComponent . java `
added handling for CancellationException in FunctionTest . java to improve error management during concurrent operations
changed constructors of JarFileResource and JarResource from package - private to protected to allow subclasses to access these constructors for better extensibility
renamed DefaultTrackSelector class to improve clarity to enhance code readability and maintainability
added a sleep delay in LevelCompactionTsFileManagement to wait for unseq merging to complete before proceeding
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the test verifies the correct fee
updated SQL query formatting and refactored test assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to improve code clarity and
refactor Unicode class to improve code readability to enhance maintainability and ease of understanding for future developers
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings based on the service
remove duplicate call to delegate . onComplete ( ) in SendHeadersFirstPublisher . java to improve code clarity and maintainability
[ beam - 10399 ] fix serialization of aws s3 key in aws module ( # 10399 )
added support for handling BIG _ DECIMAL values in RangePredicateEvaluatorFactory to improve error reporting for unsupported value types
rename the ` inner ` variable to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve clarity by
removed debug print statement for annotations in ParameterInfo . java to clean up the code and improve readability
added support for AC3 streaming and improved playback state management in PlaybackController . java and VideoManager . java to enhance playback functionality and
modify the return statement in LocalNode to return a JSON response with a null value to enhance the response by providing a JSON representation of the value
added @ SuppressWarnings ( " deprecation " ) annotation to DelegatingStatement and DiskFileItem classes to address deprecation warnings related to DBCP and File
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` and modified ` DataNodeTemplateSchemaCache
refactor RTimerTree class to improve code readability to enhance maintainability and reduce complexity
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
add test case for issue # 358 and fix gap calculation
added unique names for client threads and scheduler in ClientConnector . java to improve traceability and debugging of client threads and scheduler instances
updated visibility of JScrollPane and JSplitPane in ViewResultsFullVisualizer . java to enhance encapsulation and improve layout management for better UI
added documentation for user phone number and phone number list in ScimUserEndpointDocs . java to provide users with detailed information about their phone numbers
changed access modifiers of classes and methods in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles from package - private to public and added
added null checks for responseMap in JsonHttpPropertyRequest and improved error logging in URLStreamProvider to enhance error handling and provide clearer
refactor SolrRequestHandler to improve request handling logic to enhance performance and maintainability of request processing
do n ' t show the default parallel value in xmlsuite # toxml
updated import statements in TestVmwareMO . java , TestVMwareUtil . java , and TestVMwareContextFactory . java to improve code
added handling for SCARD _ E _ NO _ SMARTCARD in CardImpl . java to improve error handling for card removal scenarios
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output during test execution
camel - 16462 : camel - bindy - add support for multiple list of key - value pair in one - to - many bind
disable owner / timestamp usage by default
updated method signatures in ` runAndCheckException ` to use ` ThrowingRunnable ` instead of ` Runnable ` to improve type specificity and cl
added null checks for ` via ` , ` viaContext ` , and ` pathFromSeed ` in ` CrawlURI . java ` to
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object handling in Liquibase
change default value of proxy . cert . validity from 7 to 90
replaced frame and smoothDelta with smoothDelta and lastDeltaUpdate in ThreadHandler . java to improve smoothness by adjusting frame and delta
added pagination support and updated URL construction logic in HttpBatchReader and HttpScanBatchCreator to improve pagination handling and ensure correct URL construction based on
added null check for the CompactionInfo client in Worker . java and created a test for FindNextCompactException in TestWorker . java to
updated fragment state handling in ShadowFragmentActivity to call onSaveInstanceState method to ensure proper state management during fragment state changes
refactor code formatting in BatchResourceFactoryBean . java for consistency to improve readability and maintainability of the code
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure proper handling of color references in the color resource loader
added error handling for NoResultException in AbstractJPAQuery . java and a new test for null results in AbstractStandardTest . java to
fix a bug in the collection . getcommunities ( ) method that could cause a nullpointerexception .
updated depth preference retrieval in DepthController to use LawnchairApp instead of a static lawnchair instance to ensure compatibility with the
removed duplicate import of ProcessTools in LocalManagementTest . java to streamline the code by eliminating unnecessary duplication
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` and updated its invocation
updated the ` ExtensionStack ` class to handle null values for ` extensions ` and ` ext ` to improve robustness by preventing NullPointerExceptions
2 . x : fix npe in flatmap when inner error occur
added connection timeout settings to MultiGetRequest and updated connection manager initialization in ControllerStarter to improve connection management reliability and provide better error handling
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to update the test class from NewModelTest to
added SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher to fetchers list and modified image handling in BaseImageService to enhance event fetching
updated caching logic in CachingBuildEngine and added a new test for output hash calculation in CachingBuildEngineTest to ensure output hash calculations
camel - 16462 : camel - netty - add option to use bytebuf by default
updated the method call to use the table ' s name instead of the old name to improve clarity and accuracy of the partition alteration process
improve error message when a vertx instance be create with the prefernativetransport option set to true
move enumtypehandlerserializertest to coretypes and add test
refactor StreamEx class to improve performance and readability to enhance performance and maintainability of the code
removed hint settings for JavaEE query and lock timeouts in SessionImpl . java to streamline query execution by eliminating unnecessary timeout settings
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to provide a static logger for testing purposes
[ hotfix ] [ table - common ] remove clone family from familymap . put ( family , list )
added orientation comparison logic in TaskbarManager to ensure proper handling of device orientation changes
unescapes xml escape name ( can display & apos .. for chat room member in the ui )
added a new test class ` Issue265Test ` and modified the ` longStackPut ` method in ` StoreDirect . java ` to ensure
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress unnecessary warnings and improve code clarity
[ drools - 5642 ] fix broken test in executionflowcontroltest
updated conditional checks for audioTracks and subtitleTracks in DLNAMediaInfo . java and modified argument handling in FFMpegVideo .
updated NBWriteServlet and TestWriteListener constructors to accept an unlimited boolean parameter to enhance flexibility in handling unlimited writes
update total difficulty in blockchainimpl and add a test for invalid block total difficulty in importlighttest
modified the action calculation logic in DefaultPlaybackController . java to ensure actions are only set when the player ' s current window is seekable to
replaced synchronized list with CopyOnWriteArrayList for knownLibraries and updated verification cache cleaner to use jceSecurity class to improve thread safety and
added a check for mRollo . mUniformAlloc and updated position calculations in AllAppsView . java to improve memory management and ensure proper
added a check for the presence of a colon in the key in HttpURLConnection to ensure proper validation of the presence of a colon in the key
added PrincipalResolver dependency to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable dependency injection for principal resolution in authentication processes
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve JSON handling flexibility and error handling
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve handling of trailing slashes in string builder operations
added methods for pattern matching in PatternsMatcher and corresponding tests in PatternsMatcherTest to enhance functionality and ensure correct behavior of pattern matching logic
updated error message formatting in LoadIncrementalHFiles . java to improve readability and clarity of error messages
add fire block fade event for water potion ( # 1193 )
fix checkstyle issue in com / sun / swing / plaf / celllayout . java
updated calculation for decreasePercent in ContractStateCapsule . java and improved code formatting in ReceiptCapsule . java and ResourceProcessor . java
refactor AsyncContentProducer and BlockingContentProducer to improve state handling and add a new test for isReadyIdempotent in AsyncIO
added a validation check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField parameter is mandatory to prevent runtime errors
added variable expansion functionality for plist variable substitution in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest . java to
fix turret ' s shooting when the team do n ' t match the team .
change return type of adaptOrder method from OrderCreateApiRequest . OrderCreateApiRequestBuilder to Object to ensure type safety and avoid unchecked cast warnings
added a new file ` PreParseGrammarTest . java ` to facilitate XML schema parsing to facilitate testing of XML
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotation to multiple Java files to suppress warnings related to ` doclint : missing
added font override functionality using FontManager in ExtendedEditText . java to ensure consistent font behavior across different application contexts
added null check for currentUser in AuthorizeTag and implemented a test for unauthorized access to ensure that an empty list is returned when no user is
camel - 7038 : camel - cxf should check for unsafe character at the end of the uri
added a setup method to JDBCGeometryTestSetup that overrides the setUpData method to provide a placeholder implementation for data setup
removed unused import of DumpHandler in MultipartFilterTest . java to streamline dependencies and improve code clarity
[ hotfix ] [ table - planner - blink ] stop restore attempt for already cancel task
add server . rmi . create property to enable rmi registry creation
replace String . join with StringUtils . join for anticompactRanges logging to improve code readability and maintainability by using a consistent utility
added display metrics retrieval and updated test cases for qualifier handling to improve accuracy and reliability of display metrics in the application
[ java ] add cluster member id to service heartbeat to track cluster member id .
added conditional logic to set total thread allocated bytes based on version check to ensure compatibility with different Java versions
modified the evaluation logic to handle negative and positive infinity values and updated the hash code calculation to ensure correct handling of NaN values and improve hash code
updated logging statements in AjaxListener to use placeholder syntax and improved error handling to enhance code readability and provide more informative logging for better
added routes for " / authenticate " and " / authorized " in AuthenticityController and implemented authentication methods in AuthenticityController to enhance
added assertion to check if nextNode is alive in LoweringPhase . java and reformatted code in SnippetTemplate . java for clarity to
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for HttpClientRequestImpl
replaced the existing comparison logic with a new comparison method in DefaultTrackSelector . java to streamline the comparison process and improve code readability
refactor RuntimeSerialization class to improve code readability to enhance maintainability and facilitate future updates
ggb - 220 fix for crop on the screen when it be not crop
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated references in ` WidgetPreviewLoader ` and ` Widget
tika - 3496 : add content - type - name parameter to the resource name in mailcontenthandler
updated the URI construction in ThumbnailsCacheManager to use localId instead of remote path to improve clarity and maintainability of the URL generation
added support for marking and resetting the input stream in the Source class to ensure proper handling of input streams and prevent potential memory leaks
added @ Deprecated annotations to multiple Java files to indicate that these classes are outdated and should not be used in new code
added configuration property to show or hide error stacks on the error page to allow users to control the visibility of error stacks on the server
bug 10363 : do n ' t fail to delete account when cleanup account
remove useless foreign call check in sparcarithmeticlirgenerator . emitforeigncall
[ drools - 5252 ] throw unsupportedoperationexception when use legacy kie - api
added ` waitingForResult ` variable and modified ` onRequestPurchaseResponse ` method to run on the UI thread to ensure thread safety when handling
increase the default timeout for the unboundedsource system test from 100ms to 1000ms
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve clarity and correctness of resource name qualification
deleted files MrefStat . java and MrefStat1 . java to remove unused classes to streamline the codebase
added a check for blank scope in DependencyInsight . java and updated its usage in DependencyInsight . java to ensure that " compile "
added error handling for missing trades and bad status in BTCETradeServiceRaw . java to improve clarity and maintainability of error
replaced JUnit assertions with Hamcrest matchers in multiple test files to improve readability and leverage Hamcrest ' s
bitcoinuri : add getpaymentrequesturls ( ) and add test
planner - 383 : improve error message for illegalargumentexception in abstractfrompropertyvaluerangedescriptor
removed redundant method call to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
do n ' t throw an exception if a jfr write fails .
refactor null value handling in BasicAbstractTuple to use a loop for better readability to improve code clarity and maintainability by using a
refactor LintUtility to use InputResource for reading linter configurations to improve resource management and error handling during configuration loading
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable implementation to ensure backgrounds and padd
fix inventory tick not be call correctly . fix # 2223
added a new case ` OCELOT _ BABY ` to the ` PlayerEvents ` class to handle OCELOT _
added multiple @ PublicEvolving annotations to StateTtlConfig . java to indicate that these classes are intended to be volved as part of
added null handling for parameter ' x ' in PreparedStatement and Array classes to ensure proper handling of null values in database interactions
[ java ] update description of archive tool to include invalidated recordings .
replaced string literal ' \ n ' with a single single quote ' \ n ' in StringBuilder . java to improve code readability and consistency
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class and modified the ` directory ` and ` properties
refactor BroadTest to include a new method for removing transaction and block caches to improve test organization and ensure cache invalidation for transaction and block
added functionality to enable or disable LensMask features in AmcrestHandler and DahuaHandler to manage camera state based on device configuration
removed ` throws NoSuchBuildTargetException ` from ` getBuildTargetForFullyQualifiedTarget ` and ` resolveBuildTarget ` methods in ` BuckConfig
refactor ChangeLogIterator constructor to accept both ChangeSet and RanChangeSet lists as parameters to improve flexibility and clarity in handling change
do n ' t swallow guest exception in polyglot launcher
( chore ) camel - ec2 : use getenvorsystemproperty ( ) instead of getenv ( )
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
refactor whitespace handling in SpacesVisitor to use dropParentUntil for better clarity to improve readability and maintainability of the code logic
# 1193 - enh : add servercacheoptions . copy ( boolean nearcache ) ( # 1193 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` Project
updated KucoinExchange to replace LIVE _ URI with PROD _ URI and added error logging for Kucoin host exceptions to improve
refactor resource loading and search path handling in SpringResourceAccessor . java to improve code readability and ensure correct search path formatting
update unit strings from " μ " to " µ " in SmartHomeUnitsTest . java and SmartHomeUnits . java
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to include
deleted the Tls12SocketFactory . java file to remove unused and redundant socket factory implementations
remove duplicate entry from tex entry resolver ( # 3640 )
added a check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric ' s legacy resource handling
added a check for FirebirdDatabase before returning a new database data type " DOUBLE PRECISION " to ensure compatibility with FirebirdDatabase ' s
added null checks for ` dataSource ` and ` transactionManager ` in ` DefaultBatchConfigurer ` to ensure proper initialization of ` DataSource ` and
test : add package - info . java for unittest . stubs
updated the command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1
no effective change - change ebeanserver _ savealltest to use try with resource
updated TermScorer return statement to conditionally use FREQS or NONE based on scoreMode to ensure correct scoring behavior based on score mode
fix npe in dataflowmetrics when there be no metric
server : fix npe in uservmdaoimpl ( # 5338 )
refactor DynamicPartitionPruner to use a new method for finding target object inspectors to improve code clarity and maintainability by centralizing
added a method to remove build artifacts from the ArtifactFilesystem and corresponding tests to enhance the functionality of the ArtifactFilesystem to manage build artifacts more effectively
added logic to set the row selection interval for the selected row in ThrustCurveMotorSelectionPanel to ensure that the selected row is
add a helper method to assert throw arraystoreexception to make it easy to override
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future updates
added environmentName parameter and user agent handling in HttpClientBuilder and HttpClientConfiguration classes to enable dynamic user agent configuration for HTTP requests
refactor session creation and retrieval logic in MemorySessionStore . java to improve code readability and maintainability by encapsulating session restoration logic
updated assertion message in IssueTest . java and changed the type of results in Reporter . java from String to Object to improve test clarity and
updated ByteArrayDataSource initialization to handle null content type to improve robustness by ensuring a default type is used when the content type is null
send activationrequestdenied event instead of actiationid
updated mathematical calculations and added @ Override annotation in GraphApplet . java to improve code clarity and ensure proper method overriding
added ` updateTaskViewsSnapshotRadius ( ) ` method to ` RecentsView ` and modified visibility of ` updateSnapshotRadius ( )
added logging functionality to generate Swagger schemas for 3rd party services to improve traceability and debugging of swagger generation process
changed the return type of the put methods in ArrayMap from void to int to provide access to the index for further operations
updated KafkaContainerCluster to use a new startup timeout and refactored Kafka container initialization to improve reliability and maintainability of the Kafka container
( chore ) camel - http : / / issues . apache . org / activemq / browse / amq - 2379
modify header checking logic in StaticServerHttpHeadersWriter to ensure headers are only added if they do not already exist to improve header management and prevent
added package access check before loading the listener type in EventListenerList . java to ensure that only package - private listeners are processed to prevent runtime errors
added custom adapter for applications list and image list in ApplicationsFragment . java and refactored onCreateView method in ApplicationsFragment .
added null checks for iconView and task in applyIcon method to enhance robustness by preventing null pointer exceptions
refactor DownloadTracker , DownloadManager , and DownloadStateCursor to use try - with - resources for better resource management to ensure proper resource management
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 641 : add
updated HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursorProjectionItemReaderIntegrationTests
added a new Poller class and modified input stream handling in DataInputStreamWithTimeout . java to improve responsiveness and handle potential interruptions
added ENABLED _ TS ( 0 ) to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance
refactor UpgradeCatalog150 class for improved readability to enhance maintainability and facilitate future updates
rename networkparameters . testnet3 ( ) to networkparameters . oldtestnet ( ) .
do n ' t update selection when only one geos be select
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve null safety and
replaced Apache Commons IOUtils with BufferedIndexOutput and modified HdfsIndexOutput to extend BufferedIndexOutput to improve resource management and error handling
pdfbox - 4892 : avoid npe if clippingpath be empty
simplified the local address assignment logic in SocketChannelImpl . java to improve code readability and reduce unnecessary synchronization
refactor row handling in TemplateTransformer to use a dedicated method to improve code readability and maintainability by reducing duplication
added a utility method ` isWindows ( ) ` in ` Utils . java ` and modified file renaming logic in ` Wallet . java ` to
replaced the use of ALPHABET with a constant CHECK _ DIGIT _ STRING in Code39Reader . java and Code39Writer . java
do n ' t generate unexpected code for generic and void return type .
removed unnecessary conditional check for stored field length in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : fix intervalutils . parsefloorpartialtimestamp ( ) to handle nanoseconds
removed unnecessary conditional check for postRunnableStacktraces in LwjglCanvas . java to streamline the code by eliminating unnecessary
updated description formatting in AbstractGCSProcessor . java to improve code readability and maintain consistency in formatting
replaced ` assertInitialized ` method with ` waitUntilInitialized ` method in ` ConnectionPoolTest . java ` to improve synchronization to ensure thread
changed the default value of the ` get ` method calls in ` CachingDirectoryFactoryTest ` and ` RAMDirectoryFactoryTest ` from `
refactor FaultTolerantChunkProcessor to simplify data handling and add filter count management to improve code clarity and maintainability by consolidating
updated method formatting and improved error handling in FileWithTabs . java and T4994049 . java to enhance code readability and
replaced conditional checks with ` assumeTrue ` for WindowsTerminal in ConsoleReaderTest to simplify test setup and improve
removed unnecessary check for ` userInfo . isAdmin ` in ` GetFeedbackSessionsAction . java ` to streamline session retrieval by eliminating unnecessary
updated calculations for newSelection and adjusted velocity calculations in AllAppsView . java to improve user experience by adjusting selection logic and adjusting velocity
bugfix # 205373 , do n ' t call threadinfo # initialize when there be no profiled app thread
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog . java , modified connection handling in DbConnectionDialog . java
changed ` writeBufferSize ` to ` WRITE _ BUFFER _ SIZE ` and updated references accordingly to improve code readability and maintainability by using a
refactor segment size calculation in DocumentsWriter and add a new test for no documents index in TestIndexWriter to improve code clarity and
add check for dvert = deformVERTices in armaturemodifier to avoid npe
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
added a new UnsupportedOperationException that does not fill in the stack trace to improve error handling by avoiding unnecessary stack trace allocation
updated the calculation of label height in LabelPainter to use average for line height to improve accuracy of label positioning by ensuring a default value is
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` parameter to improve flexibility and
added a check for already quoted strings in the loop to ensure proper handling of quoted strings to avoid unnecessary processing of quoted strings
updated method calls in ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ` instead of ` Long . valueOf ` and modified trace
[ zfs - 1342 ] add test for http / 0.9 and add a test for http / 0.9
updated the assertion in TestSqlEntityProcessorDelta to correctly retrieve the last occurrence of the COUNTRY _ NAME _ s in the query to ensure
refactor Cache class implementation to improve performance and maintainability of cache management
updated variable names from ' e ' to ' ev ' and modified scope settings in ResourceSetRegistrationEndpoint . java to improve clarity and ensure
updated the ` doBefore ` method to include a ` false ` parameter and modified the initialization of ` seenDocIDs ` to improve performance by
added a GUI test class and a data button to the GcodeTable class to facilitate user interaction with Gcode commands in a
updated WEBAPP _ CONNECT _ TIMEOUT to use a configurable connection timeout instead of a hardcoded value to improve flexibility by allowing dynamic configuration of
updated various Java classes to improve code readability and maintainability to enhance code clarity and adhere to coding standards
updated TestMediaService . java for improved functionality to enhance media service testing capabilities
removed the constant ` HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK ` from the messages class to streamline the
add marketsprinttool for print fiat and cryptocurrency
[ s3 ] add hostname validation to endpointaddressinterceptor .
added methods for registering security keys in AccountProxy and HttpAccount classes to enhance security key registration functionality and improve response handling
refactor ServerSpanThreadBinder to improve code readability to enhance maintainability and facilitate future updates
updated user object reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` , adjusted additional
updated the Csv2Shape builder to include " the _ geom " and " number " instead of " Location " and added " number " to
updated ` callGasWord ` to ` gasCost ` in ` VM . java ` and removed unused imports in ` Program . java ` to
refactor parameters handling in the Parameters class to improve code readability and maintainability
added a method to ignore null values in the piePlot to ensure that null values are not included in the plot
refactor loading logic in ResourceBundle . java for better clarity and efficiency to enhance code readability and maintainability by reducing complexity in bundle
changed the character from ' _ ' to ' - ' in TaggedPdfReaderTool . java to standardize the character representation for better readability
add allowduringediting ( ) and allowscriptediting ( ) to be disable by default
added a userModified flag to LoginSamlAuthenticationProvider to track user modification status
added a new file ` TestSealedObjectNull . java ` that tests the behavior of ` SealedObject ` with a null cipher to
renamed the ` onOpen ` method to ` succeeded ` in ` ConnectPromise ` and updated its usage in ` WebSocketClientConnection ` to
added a static set of SNOW materials based on server version to ensure compatibility with newer server versions for SNOW functionality
updated CryptsyAdapters and CryptsyPublicTrade to include an ' id ' field and modified related methods to include it to enhance trade
added error handling when closing the synchronized MSC connection in HiveStreamingConnection to ensure proper resource management and avoid potential memory leaks
fix ( glowserver ) : use random seed instead of system . currenttimemillis ( )
updated icon dimensions and added a new device profile for " Nexus 5 " to enhance the visual appearance of the Nexus 5 interface
2 . x : fix npe in refcount when connect to source ( # 5449 )
replaced the use of ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext .
added support for the SPACE _ AROUND _ TEXTUAL _ OP token in FormatToken and updated FormatVisitor and TokenFormatter to handle it to
added checks for file existence and overwrite behavior in SaveTask and updated related tests in SaveAndLoadTaskTest to improve file handling and ensure correct
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety when accessing shared resources
add support for mutable log event in smtpmanager . add ( logevent )
changed the PADDING property builder from LengthLike to NonNegativeLengthLike to ensure proper handling of negative length values
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` in multiple resource classes to simplify context
refactored methodirbuilder . buildexceptionentries ( ) and methodirbuilder . buildexceptionentries ( ) to be more generic .
updated error message formatting in AndroidPlatformTarget . java for clarity to improve readability of error messages related to Android SDK Manager installation
reduced the cache size from 16 to 8 in OmniNotes . java to optimize memory usage for improved performance
added a condition to check if the start state is zero in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory .
pdfbox - 4892 : fallback to bcfks when load key store fails
update port assignment in UpstreamCheckUtilsTest to use local port instead of a hardcoded value to improve test reliability by avoiding port
ggb - 2266 fix for issue with drag - and - drop in web applet
added conditional checks for OpenGL extensions before setting shader storage limits in GLRenderer . java to ensure compatibility with different OpenGL versions while maintaining
refactor PopulatorContext class to improve code structure to enhance maintainability and readability of the code
do n ' t send save - all notification if project do n ' t match
added UTF - 8 encoding handling and improved JSON serialization in ZQLJobManager to ensure proper handling of character encoding based on system properties
added a check to ensure args length is greater than zero before proceeding to prevent potential ArrayIndexOutOfBoundsException when accessing the last argument
refactor header assignments to use a constant prefix instead of hardcoded strings to improve maintainability and reduce hardcoding of header values
added @ Deprecated annotations to multiple Java files to indicate that the suffix strategy option should no longer be used and may be removed in future versions
removed unnecessary debug log statements in DerbyDatabase . java to streamline logging for better clarity and maintainability
updated test cases to include a timeout parameter in CepEspTest . java and CepJavaTypeTest . java to improve test reliability
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by redu
updated logic to check if ` hubConfiguration ` is empty before updating ` liquibase . hub . mode ` and ` liquib
added new constant values for Java VM versions in Constants . java and implemented a test method in TestDDRExtensionGeneral . java to ensure compatibility
updated font request logging to differentiate between CompositeFont and non - CompositeFont types to improve clarity of request messages for better debugging
updated imports in ALPNNiationTest . java and NegotiatingServerConnectionFactory . java to use HttpVersion . HTTP _ 1 _ 1
added RateControl import and set RateControl to No _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable rate control for
added a new file ` Test6741426 . java ` that demonstrates the use of NimbusLookAndFeel
updated the error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest . java to include the exception message to improve clarity of
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure that managed and external directories are only made
added package declaration for S3CopyObjectRequest to organize object copying functionality within the S3 package
refactor setup methods to remove accentColor parameter and use viewThemeUtils for theme preferences to simplify method signatures and improve maintainability by reducing
updated the error message in TemporaryFolderUsageTest to include the root folder path to improve clarity of the error message for better debugging
updated type information references in MappingMongoConverter to use ClassTypeInformation . MAP and ClassTypeInformation . LIST instead of ClassTypeInformation . from
add check for empty / null address in clientnetworkconfig . addaddress ( string , null )
added a certificate for " keynectisrootca [ jdk ] " to the VerifyCACerts class to enhance the certificate validation process
[ java ] return the size of outputbatch . size ( ) instead of void .
added a conditional check before setting the mode of the menu in ModeToggleMenu . java to ensure the menu is only set when the popup is
pdfbox - 4071 : fix indexoutofboundsexception in memoryttfdatastream . read ( )
added new files ` FinalizerInfoTest . java ` and ` HeapInfoTest . java ` to test the behavior of finalizer and heap
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator `
refactor burningmanservice to use custom address for issuance and issuance
refactor StringSubject class for improved readability to enhance maintainability and facilitate future updates
updated the size of the longData array in BatchValidateSignContractTest . java from 1 , 000 , 000 to 1 , 000 , 000
rename the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to improve
updated the query saving logic to replace " @ " with " from : " to ensure consistent query formatting for recent search suggestions
removed conditional check forRebalance in SimulatorDiscoverer . java to simplify the code logic for better readability and maintainability
added a new POST endpoint for importing YubiKey accounts in the YubiKeyAccountRegistryEndpoint to enable users to import accounts from a JSON
removed multiple shader programs and replaced " texture " with " tex " in multiple files to streamline shader configuration and improve code clarity
added null check for ` cnt ` in ` paintOnTopLoop ` and introduced safe area settings in ` SideMenuBar ` and ` Tool
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the code
added a null check for subName before setting the caption in HierarchyBase to ensure that a caption is only set when subName is not
changed the data flag from DATA _ FLAG _ IMM mobile to DATA _ FLAG _ GRAVITY in EntityItem . java to enable
added null check for sim and updated variable names in CustomExpression . java to enhance robustness by preventing potential NullPointerExceptions when sim is null
replaced the ` requestBlindVoteListFromNetwork ` method with a call to ` sendRepublishRequest ` in ` VoteResultService
added a new test case method ` testCase4 ` in ` PostgresTest . java ` to verify the behavior of a multi - th
replaced string literals with single quotes in SubtitleUtils and RemoteUtil classes to improve code readability and adhere to Java conventions
updated line separator handling in DefaultJavaPrettyPrinter . java and commentTest . java to improve readability and maintainability of the code
replace atomicreference with atomicreferencefieldupdater for singleimplementor snapshot
added null check before adding queries to the qlist in SimpleFacets . java and updated test assertions in SimpleFacetsTest . java to
add bridge to the list of child of the bridge ( # 5336 )
replaced calls to ` printHelp ( ) ` with ` error ( " A command must be provided " ) ` and ` printHelp (
added a check to return the existing output file if it exists to ensure that the output file is not overwritten if it does not already exist
camel - 16462 : camel - xml - bind - allow to parse date with + or minus a part of the date format
added assertions to verify the presence of a specific Post instance in SpringDataJPALockTest . java and implemented a query in PostRepository .
changed the data type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related logic to improve
added a static import for SimpleClientHttpRequestFactory and set connection and read timeouts in ClientRegistrations . java to improve HTTP request handling and prevent
updated SourceTest . java to use a non - foreign variable for file path and file name to improve clarity and correctness of file path
remove graalvm . version system property from graalvmlocator
added validity handling for access token and refresh token in ClientAdminBootstrap to ensure proper configuration of token validity settings for improved client management
updated the return statement to include a conditional check for the Android API version to ensure that the default SDK version is used when the Android API version
refactor references from ' this ' to ' this ' in PropertyPlaceholderHelper . java to improve code readability and maintain consistency in naming con
updated log message format in Resources . java for better clarity to enhance readability of log output for better debugging
solr - 12028 : fix flaky test in zksolrclienttest
added BigInteger type to simpleTypes in MongoMappingContext . java to enable handling of BigInteger data types in MongoDB operations
added a condition to check if the button text matches the button text in the toast display logic to ensure the toast message is displayed correctly when the
updated conditional logic in MEncoderVideo . java to include a check for MEncoder no - out - of - sync configuration to ensure proper handling
increased the maximum number of event loop threads from 10 to 15 in ConfigurationProperties and ConfigurationPropertiesTest to allow for a longer event loop
changed access modifiers of several classes and methods from abstract to protected in CountMin4 . java and updated feedback handling in AdaptiveWindowTiny
added sorting functionality to ` ExternalFileField ` and created ` ExternalFileFieldSortTest ` for testing to enhance sorting capabilities and ensure correct document
updated error message from " Invalid URL " to " Connection Error " in DoiFetcher . java to provide clearer context for connection issues
refactor event handling in OpenRocketSaver , add source ID handling in FlightDataBranchHandler , and RocketComponentSaver
changed the visibility of the check method from private to protected final to allow subclasses to access the check method for better extensibility
added synchronization handling for file transfers in FileActivity to improve user experience by providing feedback on file synchronization failures
updated the URI generation logic in ThumbnailsCacheManager . java to use URLEncoder for the preview image and modified request headers to enhance security by
added a check for the initialization state and a null check for the client property " cn1 $ infinite " in InfiniteContainer . java to
change the initialization of the total variable in IntHashSet from 0 to 1 and modify the addition logic to correctly account for the addition of a value
added a lock check before updating an entry in FeedRefreshUpdater . java to handle potential locking issues during feed updates
refactor conditional checks for ACE flags in SolarisAclFileAttributeView . java to improve readability and maintainability of the
replaced the list of integers with an array for storing edges and refactored the tree creation logic to improve performance and readability of the
added IOUtils import and improved resource cleanup in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix parsing of bib file with non - ascii character
added strict mode handling for property parsing in Main . java and corresponding tests in MainTest . java to ensure that unknown parameters are ignored when strict
add a custom constraint validator for custom constraint ( # 4640 )
camel - 14284 : camel - http4 should use http4 instead of http
added a call to waitForThingsToLevelOut with a timeout of 30 seconds in TestCloudPivotFacet . java to address potential issues with
removed redundant byte length checks for Integer and Long in UBJsonWriter . java to streamline code for better readability and maintainability
updated ApplicationTest . java file to improve test coverage to enhance reliability of application functionality
replace String with StringBuffer for building details to improve performance and readability of the code
refactor : rename type to robostype to make it easy to understand
[ java ] do not return action . abort when a recording be not complete .
added cache key and cache lookup handling in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to improve cache
added a new file PutfieldError . java that throws an IncompatibleClassChangeError to demonstrate handling of incompatible class change errors
do n ' t trigger a connection to the same host if it ' s a public one
add log for memtable _ flush _ after _ mins and memtable _ flush _ in _ millions when enqueue
replaced instances of ` space . build ( empty ) ` with ` Space . SINGLE _ SPACE ` in multiple Java files to simplify code and
move the encodedlength ( ) method to flyweight . java so that it do n ' t get call twice .
refactor TestMethodResultMapBuilder to improve code structure to enhance maintainability and readability of test cases
added error handling for Java Integer methods in FindNullDeref . java to improve robustness by checking if the method size is below Integer
[ hotfix ] [ runtime ] remove unused constructor in tasklocalstatestoreimpl
updated return statements in Utils . java to include formatted time values to improve readability and consistency of time representation in the application
updated conditions for handling DeepShortcutView instances in Utilities . java and FloatingIconView . java to improve type safety and ensure correct drawable retrieval
change the validator type from String to Object in JwtIssuerValidator and add a predicate for validation to enhance flexibility in validating JWT claims based on
renamed methods in Coinmate from " buyQuickRate " and " sellQuickRate " to " getBuyQuickRate " and
added a new CoverageConfig class and modified CoverageController to use it to dynamically load the COBERTURA project data class to improve flex
added a conditional check before registering the sticky event bus in ThumbnailView . java to ensure that the sticky event is only registered if it is
added a check for ASCII characters in the NormalizerBase class and modified return statements to use this check to improve performance by avoiding unnecessary normalization
[ hotfix ] fix typo in jobcoordinationservice . ismigrationallowed ( )
added error handling and assertions for SQL execution in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL fails
camel - 16462 : upgrade camel - cometd to junit4
updated ` HR ` and ` attrs ` parameters in ` HtmlTag . java ` to include ` attrs ( AttrKind . OK , width ,
added a line break tag to the HTML report in HtmlCoreReport . java to improve readability of the report output
updated ramBytesUsed calculation to handle null scores to avoid potential NullPointerException when scores are null
added a custom custom type adapter for ` StringHolder ` and updated imports in ` CustomTypeAdaptersTest . java ` to enhance JSON serialization capabilities
set extra data from mining parameters in MergeCoordinator and add a test for it in MergeCoordinatorTest to ensure that the correct extra data is
added a static map for the number of arguments in the DependencyParser class and updated the argsToProperties method to include the number of arguments to
refactor PathParamServerEndpointConfig class for improved readability to enhance maintainability and facilitate future updates
updated variable name from ' configedThreshold ' to ' configuredThreshold ' in DefaultMigrationAddressComparator . java and introduced a default delay in Migration
updated method parameters from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity and
[ drools - 1641 ] fix twitterbootstraputils to work on window
removed the basic category method from SpanishTreebankLanguagePack to simplify category extraction logic and improve code clarity
hhh - 16462 : deprecate loadbyuniquekey ( ) and loadbyuniquekey ( ) and loadbyuniquekey (
hbase - 24928 fix npe in regionserversnapshotmanager and flushtableproceduremanager when taskpool be empty ( # 24
set size ( width , height ) if width or height be zero in java2d
fix checkstyle issue in com / sun / jdi / pool / hikaripool . java
added ` assureMatchVersion ( ) ` method to multiple filter factory classes and initialized ` luceneMatchVersion ` to ` Version . L
fix proxy proxy generation for interface method ( # 1749 )
make sure we do n ' t consume a comma when parse a drl
refactor multiple subject classes for consistency and clarity to improve maintainability and readability of the codebase
add a check for negative payload length and throw an exception if it be invalid .
move PublishSubscribeChannel from the ' channel ' package to the ' dispatcher ' package to align package structure with the ' dispatcher ' namespace
updated executionId type from String to Long across multiple classes to allow dynamic configuration of execution IDs instead of a hardcoded value
added multiple update calls to digest . update ( byte ) for width and height in ImageProcessor . java to ensure proper handling of dimensions based on
removed logging of overlay version in SolrConfig . java and added imports in SolrConfigHandler . java to improve logging clarity and facilit
updated delay duration in FileSyncAdapter to avoid too many automatic synchronizations to improve synchronization efficiency by reducing the duration of synchronizations
updated the initialization of the ` afterConversionTime ` variable in ` SegmentV1V2ToV3FormatConverterTest . java ` to
refactor path handling in QueryProcessExecutor to use a Path object instead of a String to improve code clarity and maintainability by using a
updated DefaultPackageScanClassResolver to handle URI and improved error logging for URL parsing to enhance robustness of URL processing and provide clearer
[ hotfix ] [ table - common ] [ table - common ] add timestampextractorutils for tsextractor
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` for LDAP authentication handling to provide a structured way to
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager to ensure compatibility with newer Android versions
replace auto suggest dialog with a simple form for custom filename in GenericViewFragment . java to improve user experience by allowing users to choose a custom
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest .
updated the parameter name in the ` stream ` method of ` MongoTemplate ` from ` collection . getName ( ) ` to ` collectionName ` to
refactor zoom calculation and type casting in MapOverviewImageMouseHandler . java to improve clarity and consistency in zoom handling logic
updated KNearestNeighborClassifier to accept a Similarity parameter and modified the checkCorrectClassification method to return a ClassificationResult to improve similarity handling
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve performance
replaced ` lowResourceCheck . toString ( ) ` with ` lowResourceCheck . getReason ( ) ` in ` LowResourceMonitor . java
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the ` requestMtu ` method in ` ShadowBluetoothGattTest ` and ` ShadowBluetoothGatt ` to support
refactor the servlet output stream creation into a separate method to improve code readability and maintainability by separating concerns
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for better debugging
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety and performance in concurrent environments
updated Japanese resource files to include " all " and " " summary " options to improve clarity and accuracy of Japanese resource
updated size condition in JDBCTypeMapping and modified test assertions in JDBCTypeMappingTest to ensure correct type handling and improve test accuracy
added synchronization to the ` addPlayer ` and ` removePlayer ` methods in ` GenshinScene ` to ensure thread safety when modifying player
refactor accessibility handling in TerminalView . java to utilize regex pattern matching for control codes and code matchers to improve code readability and
added support for the SIDE _ NAVIGATION command behavior in the MenuBar and SideMenuBar classes to enhance user experience by allowing
removed the Disposable subscription declaration in PoloniexManualExample . java and added error handling in WampStreamingService . java to stream
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java and modified test assertions in UpdateSettingForEnergyLimit
updated variable names and added protocol handling in PostmanJsonBuilder . java and UrlBean . java to improve code clarity and ensure proper protocol
added getter and setter methods for the namespace prefix reference in SoapJaxbDataFormat . java to enable dynamic configuration of the namespace prefix reference
updated assertions in TestRange . java to use a new method ` isSameDay ` for date comparison to improve code readability and maintainability by
added server restart verification and security verification in BasicAuthIntegrationTest . java and updated security properties in ZkStateReader . java to enhance security
added pricefeed to tradechartsviewmodel so that it can be use
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a local variable
updated the handling of the ` from ` variable and ` end ` variable in ` NativeString . java ` to improve clarity and correctness
added file download functionality using FileDataStorageManager to enable downloading of files for improved data management
refactor RandomAccessFile usage in MappedRawLog . java to improve code readability and ensure log length is set correctly
added methods ` checkIfRegistryRunning ` and ` deleteFileWithRetry ` in ` TestLibrary ` and ` FileUtils ` classes to check if a registry
updated imports in EditTest . java , Quick3dMain . java , and TextureTest . java to use componentPresetDao . startLoading
removed unused variables and added multiple @ SuppressWarnings annotations in multiple Java files to improve code clarity and reduce unchecked warnings during compilation
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
phoenix - 4649 set transaction isolation level to transaction _ read _ committed or transaction _ serializable if transaction be disabled
added transaction attribute handling in ` AbstractStepFactoryBean ` and modified exception management in ` ItemOrientedStep ` and ` ItemOrient
replaced ` CasClient ` with ` DirectCasClient ` and refactored ` CasManagementSecurityInterceptor ` to extend ` DefaultSecurity
removed the visibility and functionality of the add category menu item in ListFragment and NavigationDrawerFragment to streamline the user interface by eliminating
renamed the ` cancel ` method to ` cancelMatchingOperation ` and updated the method name from ` downloadWorkerState ` to ` observeWorker
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve clarity and consistency in font size management
added a validation check before modifying the tmpFact variable in ConstantAnalysis . java to ensure that tmpFact is only modified if the fact is valid
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
change return statement to create a new ArrayList instance instead of returning the original spans to ensure that the returned list is not modified externally
removed unnecessary locking mechanism in Liquibase . java to improve performance by eliminating unnecessary locking mechanism
added a method to set the revision in MicroserviceVersions and updated related classes accordingly to ensure proper handling of revision information during instance cache checks
updated foreignKey and index initialization logic to use unique names for foreign keys and indexes to improve clarity and ensure unique identifiers for foreign keys and indexes
camel - 15836 - add uri - endpoint - override option to all the component - aws2 - s3 component
removed the currencyPair parameter from the getBitstampUserTransactions method in BitstampAccountService . java and added error handling in BitstampAccountServiceRaw
added a try - catch block to handle NoSuchComponentException when retrieving the component instance to improve robustness by preventing application crashes due to
change push ( ) method to return a boolean so that it can return the result of the push operation .
refactor legacy address comparison to use a dynamic file instead of a hardcoded value to improve flexibility and maintainability of test cases
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from outside the class
refactor Snackbar handling in NotificationsActivity to improve code readability and maintainability by encapsulating snackbar setup logic
added logging for channel closure and improved exception handling logic in NettyAsyncHttpProvider . java to enhance debugging capabilities and ensure proper channel closure
updated LDAP password policy enforcement logic to check for empty values and improved method names for clarity to enhance code readability and maintainability
renamed DefaultAnnotationEngine and Stubber files to improve clarity and consistency in naming conventions
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable tests related to PHOENIX - 2840
nifi - 1882 : add timezone attribute to aboutdto ( nifi - 1883 )
refactor splitOwnedRanges logic to use a boolean parameter to improve clarity and control over the split behavior based on the number of tokens
no effective change - remove unnecessary try / catch block
removed redundant synchronization around adding and notifying all active circuits in CircuitManagerImpl . java to improve performance by reducing unnecessary synchronization overhead
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more appropriate exception type
[ flume - 1649 ] [ table - planner - blink ] move pollablerunner . sink and pollabler
updated logging behavior in FastBindLdapAuthenticationHandler to use info level instead of error to improve log clarity and provide more informative error messages
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance user experience by improving focus navigation
change return type of getPointLength ( ) from double to int across multiple classes to allow for more precise representation of point length
updated the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve clarity and consistency in event handling
refactor connection handling in SchemaCrawlerMain and add a new execute method in Executable to ensure proper resource management and logging of database connections
fix for http : / / issues . apache . org / activemq / browse / amq - 2266 - add support for
corrected a typo in the exception message from " labels " to " metadata " in CountersManager . java to improve clarity of
updated audio stop logic and modified ndx calculation logic in MediaManager . java to improve audio playback handling and ensure correct ndx calculation based on
updated debug logging statements in HttpConnection . java to include cancelled connection details to improve clarity of log messages for better debugging
added @ Transient annotation to JpaPersistentPropertyImpl and a corresponding test in JpaPersistentPropertyImplUnitTests to enable handling of transient fields
updated version assertions in UpgradeResourceProviderTest to reflect the latest HDP version to ensure compatibility with the latest version of the HDP repository
trufflevm : make eval return an object , not a symbol .
change the visibility of the isBinaryType method from private to public and update debug logging statements in Proxy . java to enhance accessibility of the
updated the configuration key from " hive . tez . dynamic . parition . pruning . max . data . size " to " hive
refactor JavaProblem to remove priority handling and simplify constructor parameters to improve code clarity and maintainability by eliminating unnecessary priority management
use dictionaryindexconfig . default instead of dictionaryindexconfig . default _ offheap
use system . getlineproperty ( ` ` line . separator ' ' ) instead of hardcoded \ n
refactor DebugHelper class for improved readability to enhance maintainability and facilitate easier debugging
added a boolean variable ` ownsTexture ` to track if the particle effect owns its texture to prevent unnecessary processing when the texture does not exist
added LDAP authentication properties to HiveConf . java to enhance LDAP configuration options for improved security
[ doc ] add miss scope annotation to datacatalog search
updated InputMethodManager usage in DetailActivity . java to include SHOW _ FORCED setting to enhance user experience by allowing more intuitive input
added a new test method ` convert _ to _ map _ of _ primitive _ to _ object ` to ` DataTableTypeRegistryTableConverterTest
updated the size limit in TestFileSystem from 500 to 50 , and added a file deletion for the memFS database to improve memory management and ensure
update error message for M2.4 exception in ContentTypeManager . java to improve clarity of error messages for better debugging
refactored ` dropSequences ` method to be abstract across multiple database classes and added ` @ Override ` annotation in ` CommandLineMigrator `
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
replaced direct assignment of ' f ' to ' binaryField . createField ' with a local variable ' f ' to improve code readability
gather hierarchy style only when the map be active
added a test method to verify the behavior of an upsert operation with a non - existing object in MongoTemplateTests . java to ensure that the
hbase - 26465 fix mid calculation ( addendum )
added methods to record app launch statistics and refactored intent handling in Launcher and Stats classes to improve clarity and functionality of launching
added drawing functionality to the graphics object in JavaSEPort . java to ensure proper resource management and avoid potential memory leaks
update instructor result page data to include current team in response list
added a check for zero inventory IDs in the Inventory class to ensure that a valid ID is returned when the player ' s inventory id is zero
added a conditional check before breaking the loop in ConfigDescriptionRegistry . java to ensure that the loop only continues when the condition is met
updated return type handling in multiple parser visitor classes to include returnTypeAnnotations to ensure correct annotation processing when returnType is null
refactor initialization of blended tiles in TileMapRenderer to handle null values to improve robustness by avoiding potential NullPointerExceptions when b
removed and rearranged the ` sunClasses ` array from the ` @ Classes ` annotation in ` Probe . java ` to streamline
make sure we do n ' t crash if we do n ' t have a segment
[ hotfix ] [ runtime ] remove unnecessary object creation in throttle
update pipeeventbus to use super class . pipeeventbus . addactions ( ) instead of @ pipeeventbus . addactions ( )
removed the timeout from the ZkController instantiation in ZkControllerTest . java to reduce the timeout duration for better resource management
added a new test method ` passcode _ with _ client _ parameters ` to ` TokenMvcMockTests ` to validate the handling of client
added support for broken offsets with LengthFilter and KeepWordFilter in TestRandomChains . java to enhance functionality for handling different input types in the
removed the JUnit Ignore import from RandomPlaneTest . java to enable test execution for the RandomPlane functionality
use int . tounsignedlong instead of int . puti1 , int . puti16 , int . puti32 , int .
refactor btCollisionObjectArray and btRigidBody creation to use btCollisionObject . getInstance method to improve code readability and
added copyright year property and updated copyright URL in AboutDialog . java to enhance copyright information and improve user experience
add ` ` getdistributedobjects ' ' method to jetclientinstanceimpl ( # 2598 )
added debug print statements in FinSet . java and updated expMOI calculations in MassCalculatorTest . java to improve visibility of components and
updated the constant name from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to improve clarity by
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and updated method parameter name in CreateAlignedTimeSeriesPlan . java
burningmanservice : check if burningman be not active before send delayed payout tx
updated JSON string formatting and added exception handling for big integers in JsonLoaderTest . java to improve code readability and ensure proper handling of JSON
updated the capacity check in ObjectSet . java from 1 to 0x40000000 to ensure that the table size does not exceed the maximum allowed
updated import statements and added null and zero check for DATA _ SCALE in ColumnSnapshotGenerator . java to improve code clarity and ensure data scale
removed ` @ AddToRuleKey ` annotations from several fields in ` AppleTest . java ` to simplify the code by eliminating
added exception handling for security exceptions in FileHelper . java and modified content handling in TextHelper . java to improve robustness and ensure proper content
added a new constant ` StyleWithMultipleAttributes ` and implemented tests for attribute resolution in ` ShadowThemeTest ` to enable support for multiple attributes
updated sheet name checks in HSSFWorkbook and modified sheet creation logic in TestHSSFWorkbook to ensure accurate sheet name validation and improve
changed the tint color from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct tint color is used for the
updated ` wrapped ` initialization to conditionally set the handler based on ` replyHandler ` being null or not to improve handler management by preventing null pointer exceptions when ` replyHandler ` is not provided
added binary collation functionality to MariaDbDbmsType , MySqlDbmsType , and AbstractDbmsType classes to support binary collation in
added a method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` based on the type of the
refactor navigation logic in ItemLauncher to use a new method for retrieving user view destination to improve code readability and maintainability by reducing
changed the response type from OK to temporaryRedirect in FeedREST . java to improve user experience by redirecting to the public URL instead of returning
[ flink - 20663 ] [ kinesis ] improve error message for non - serializable deserialization schema
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a try - finally block to ensure the zkClient is closed if it was created to ensure proper resource management and prevent potential memory leaks
rename methods and variables related to icon transitions from ` setIconAndDim ` to ` setIconsAndBanners ` across multiple classes to improve cl
refactor read method calls to use a new ` read ` method to improve code readability and reusability
replaced instances of ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to simplify
fix crash due to send invalid content ( null ) to the multiple upload activity from other
updated comparison logic in AbstractConfigLoader and modified test cases in TestMicroserviceConfigLoader to use Integer . compare instead of direct comparisons to improve
added a new file ` PicOfDayAppWidget . java ` for managing and updating app widgets with image loading functionality to enhance the app widget
change default value of ` _ internalLBServiceOfferingId ` from ` Long ` to ` String ` and add a warning for invalid offering
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` and modified join condition handling in ` HiveParserCalcitePlanner .
added @ Deprecated annotation to multiple Java files to indicate that these classes are outdated and should not be used in new code
added username and password options for remote JMX connections in NodeToolCmd . java to enhance security by allowing authentication for remote JMX connections
removed duplicate initialization of BytesRef in Stemmer . java to streamline code and improve readability
updated widget parameters in AppsCustomizePagedView . java to include mPageViewIconCache and numWidgets per page to improve widget
ggbapplet . getviewforthumbnail ( ) now work for 3d view
updated rotation calculations in GcodeRenderer . java to ensure rotation values are non - negative to prevent rendering issues with negative values
added a new option for setting the workspace directory in the terminal to enable users to specify a custom workspace directory for the terminal
updated the test file path from " target / test - classes / options . apt " to " target / test - classes / options .
updated ScimUtilsTest to use JUnit 5 annotations and assertion methods to improve test structure and maintain consistency with the latest testing framework
refactor OAuthConfirmationController to use a Map instead of ModelAndView for better model management to enhance code clarity and maintainability by using
hhh - 16462 : fix flaky test in hibernateit
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
updated MultiPaintEventTest . java file to improve test coverage for multi - paint functionality
removed final modifier from mNewScale assignment in WorkspaceStateTransitionAnimation . java to improve code readability and maintainability
refactor SyncFactory to improve synchronization logic to enhance performance and maintainability of the synchronization process
added uniqueKey field handling in LukeRequestHandler to ensure unique key information is correctly stored in the schema
added round border color functionality to the BorderEditor and EditableResources classes to enable customization of border colors in the UI
add assertion . neverpartofcompilation ( ) to binaryparserexception .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulertest
added logging for pending requests in GatewayRSocket and modified return values in PingPongApp to improve debugging and ensure proper handling of backpressure
added a toolbar menu item click listener to the RecentChatFragment class to enhance user interaction by providing a toast message when the menu item is
modified ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
refactor scope management methods from ` add ` to ` push ` and ` removeTail ` to improve clarity and consistency in scope management
updated API _ URL , IMAGE _ URL , HOME _ URL , and EVENTLOG _ WIKI in CommonsApplication . java to
refactor index increment logic into a separate method ` setIndex ` and ` updateIndex ` to improve code readability and maintainability by reducing
replace usage of ` Collections . sort ` with ` . sort ` in multiple configuration classes to improve code readability and reduce boilerplate code
added DateTimePatterns to the FormatData _ hr _ HR . java file with various date and time patterns to enhance date formatting capabilities for better
added a call to clear focus on the clickedView in DetailFragment . java to ensure the clickedView reflects the current focus state
updated ` DescriptionsAdapter ` and ` SpinnerLanguagesAdapter ` to use ` setSelection ( position ) ` and ` setSelection ( 0
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple
added native methods for registering global , weak , and access fields and refactored the FastGetField class to improve memory management and access field
added default value handling for UNION and NULL schemas in ReflectData . java and TestReflect . java to ensure correct serialization behavior for union and NULL
increased timeout value for blockWhenFull in SedaBlockWhenFullTest . java to improve test reliability by allowing more time
added null check before remapping resource class in ResourceMerger . java to avoid potential NullPointerException during resource remapping
added constructors to ` HapiFhirDialect ` , ` HapiFhirH2Dialect ` , ` HapiFh
camel - 16462 : camel - http - do not send connection close header if the endpoint do n ' t support it . thanks
increased the socket timeout from 60 seconds to 120 seconds in BasicDistributedZkTest . java to allow more time for connections to
added an assertion to verify that the count of tickets with status ' FREE ' and final _ price _ cts is greater than zero to
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class to improve code readability to enhance maintainability and facilitate future updates
use document . getfirstelementchild ( ) . getfirstelementchild ( ) instead of document . getfirstfirstelementchild ( ) .
planner - 1641 : fix look - up strategy for enum type ( # 1641 )
[ java ] wait for cluster node to shut down .
updated log level from warn to info in ELContextCleaner . java to provide clearer information about the absence of a cached beans field
added a default content type of " application / octet - stream " to the WebdavEntry class to ensure proper handling of binary data in the
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created a corresponding test class ` LazyTraceThreadPoolTask
added distance checks in DistanceOp . java to optimize distance calculations to avoid out - of - bounds errors
rename ' required ' attribute to ' requiredLabel ' in AbstractUITag . java to improve clarity and consistency in naming conventions
removed the next ( ) method and updated the updateProgress ( ) method in PurgingPartitionIterator . java to streamline the code by elim
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide a
added validation to ensure polygons contain at least 3 points and modified localVertices assignment logic to improve error handling and ensure proper assignment of vertices based on
replaced instances of ` ObjectMapper ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to utilize a standardized
added a null check for the coeff variable in GeoImplicitCurve . java to prevent potential NullPointerException when coeff is null
updated ExternalNameRecord to handle multi - byte and multi - byte names correctly to improve handling of Unicode characters in external names
corrected the spelling of " QUEUE " to " QUEUE " in the JMS destination description to improve clarity and consistency in the documentation
added logic to conditionally exclude " username " and " password " prompts based on the return value of ` returnLoginPrompts ` to
updated listener removal logic to check if the listener is equal to the existing listener to improve listener management by ensuring only unique listeners are removed
added a toggle for spinting the chart in the PieChartActivity to enhance user experience by providing a smoother visual representation of the
server : kill vhd process when vhd _ copy _ to _ secondarystorage return null
hbase - 15921 skip normalization for table that have a namespace quota ( chaoyu tang via ashutosh
updated import statements in AndroidInput . java and added a resize method in AndroidInput . java to improve code clarity and ensure proper resizing
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and reformatted the annotation declaration to improve code readability and
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to temporarily disable the test due to blocking PRs
fix the hopperhock not be able to place item in the wrong place
added authentication dialog functionality to the SsoWebViewClient class to enhance user experience by providing basic authentication options
updated TestStressIndexing2 . java to improve handling of termDocs1 and termDocs2 and added delete methods for document deletion to enhance
[ hotfix ] ignore upsertkafkatableitcase until flink - 22559 be fix
replaced ` get ` method with ` computeIfAbsent ` for ` typeList ` and updated variable declarations for clarity to improve code readability
added configuration to allow single value to be deserialized as an array in DefaultEntityMapper to enhance flexibility in handling multiple values as arrays during deserialization
updated the localization message in VersionChangeLogs . java to include " BE " , UK , and SL . " to enhance clarity
updated the SHORTCUT _ CATEGORIES array to use a dynamic resource path for application categories to improve flexibility by allowing dynamic configuration of
[ drools - 770 ] add support for ' instanceof ' and ' instanceof ' operator
nifi - 1641 : add content - type attribute to gethttp . fix nifi - 2693
add to provenance entity to resourcehistorytable so that it can be reuse
renamed ` exitButton ` to ` doneButton ` and changed its click listener from ` mExitListener ` to ` mDoneListener `
refactor NatsConfiguration class for improved readability to enhance maintainability and facilitate future updates
refactor invalidateStalePartition method to accept a MetastoreContext parameter and improve partition cache invalidation logic to enhance flexibility in managing partition data
use circularfifobuffer and unboundedfifobuffer instead of boundedfifobuffer
updated icon resources from ` ic _ group ` to ` ic _ chat _ bubble ` across multiple classes to enhance user experience by providing a more
changed ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to use ` getLongVolatile `
updated method names in MocksCreationTest for consistency and clarity to improve readability and maintainability of the test code
added a constant for the data source name in CSVThirdEyeDataSource and changed the visibility of the generateDetectionConfig method in YamlDetectionConfig
increased the timeout duration from 10 seconds to 30 seconds in the awaiter method calls to allow for a longer wait time before proceeding
simplified the ` publishBuildSlaveFinishedEvent ` method and removed the ` BuildSlaveFinishedStatusEvent ` class to streamline the event
cloudstack - 7038 : fix findbugs encode issue in vmwarestoragemanagerimpl . java
add test for deposit workspace item without workflow
added distinctiation to classpath file processing in ClassLoaderSupportImpl . java to ensure unique classpath files are processed during processing
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to use contains for " - encoding " , " - string " , and " - templateDir "
added a null check for the table before deleting a directory in HiveMetaStore . java to ensure that the directory deletion only occurs for non -
hive - 16462 : add configurable thread pool size and keepalive time for async thread ( sergey shelukhin ,
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for the execution command service and component instead of a hardcoded string to improve code readability and
added a variable ` diff ` to store the current configuration information in ` OperationSetTelephonyConferencingSipImpl . java ` to
add ` ` clear log entry ' ' method to ` ` log tree ' ' ( # 4898 )
updated return statements in ChannelEndPoint . java to include condition checks for channel and socket states to ensure proper handling of channel state and input shutdown scenarios
refactor SetNullableGenerator class for improved nullability handling to enhance code clarity and maintainability
camel - 16462 : camel - example - reportincident should use newfile instead of file
simplified import statements in NettyRoutingFilter . java and updated content type handling in FormIntegrationTests . java to improve code readability
added @ ApiOperation annotation with nickname " hello " and ` helloWithValue ` to multiple service classes and updated method signatures accordingly to enhance API
refactor lifecycle handling in Lwjgl3Application and update method signatures in Lwjgl3Window to simplify method signatures and improve
updated the FG _ FK color from 90 to 200 to improve the visibility of the foreground color in the UI
disable mp3 support by default
make secondaryindexmanagertest more robust by not rely on built index
add ` ` version ' ' and ` ` eclipse version ' ' to preference , and add ` ` pmd version ' ' to the
[ hotfix ] [ test ] use optional < ioexception > instead of throwable . getcause ( )
refactor MediaFormatUtil to improve code structure to enhance maintainability and readability of the code
added an overridden method ` isCellEditable ` to the ` GeneralTab ` class to provide a placeholder implementation for cell editing behavior
added a ` isOnlyPrintCommands ( ) ` method to ` AbstractUnusedDependenciesFinder ` and modified the message generation logic in ` DefaultJava
added a temporary variable ` tmpCount ` and updated the vscales array in ` VocalTractScalingProcessor ` to improve tracking of v
updated import statements for BaseScalarUdfTest in TestUDFRound and TestGenericUDFConcat to ensure consistency in test utility usage across
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper object comparison and hashing functionality
update testskeletoncontrolrefresh to use new animation api
rename ` NodeFilter ` to ` NodeCountFilter ` and update related method names to improve clarity and consistency in naming conventions
updated the condition to check if the size of the sync block to fetch is less than or equal to the defined limit to ensure that the fetch
updated debug expression state from 365 to 366 and modified type assignment in DebugExpressionParser . java to ensure correct type handling for different debugging scenarios
refactor dependency detection in ExcludeDependency . java to use streams for better readability to improve code clarity and maintainability by using streams for
replaced the ` tmp ( ) ` method with ` dst2 ( v ) ` and modified the ` lerp ( target , alpha
initialize the ' args ' array with an empty array to ensure that the ' args ' array has a default value to avoid null reference issues
refactor linker argument handling in RustBinaryDescription and add a new test for linker flags overriding in RustLinkerIntegrationTest to improve
test : add test for travis and appveyor
added a new configuration variable ` hive . query . name ` and modified logging in ` GenericUDTFGetSplits ` to include it to
removed the import of java . io . File from TileAtlas . java to streamline the code by eliminating unnecessary dependencies
[ netbeans - 4892 ] fix gradle daemon shutdown on window .
modified the ` validateQuery ` method to accept an additional ` arguments ` parameter to enhance the error message formatting to allow for more flexible error
updated INDEX _ VERSION from 1 to 2 and refactored the tree retrieval logic in LuceneExecutor . java to improve code clarity and
[ hotfix ] [ test ] add kryoserializerstrategy test
added null check before adding configuration types to prevent potential NullPointerExceptions when removing configuration properties
refactor boolean handling in MetaStoreDirectSql . java to use BooleanUtils for better type safety to improve code readability and maintainability by
added hideCustomizationDrawer ( ) method to Launcher . java to improve user experience by hiding the customization drawer
refactor warning handling in TermVectorComponent to use a constant and improve clarity to enhance code readability and maintainability by centralizing warning
added conditional logging for optimistic types and improved log message formatting in Compiler . java to enhance logging clarity and ensure optimistic types are
refactor Expect class to improve code readability to enhance maintainability and facilitate future updates
added UnixSocketConfigurationStrategy to DockerClientFactory and implemented its functionality to enable unix socket access in Docker environments
added flaky test methods for the ` testEvenLowRateIP ` method in ` CloseableDoSFilterTest ` to improve test reliability
camel - 16462 : camel - reactive - stream : improve error message when stream have no active subscription .
replaced instances of ` MapRedTask ` with ` TezTask ` and updated related methods to use ` MapWork ` instead of `
updated constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to enhance functionality by allowing additional configuration options for string and log
do n ' t update current node when there ' s no gui package .
[ gr - 16462 ] fix linkage . isweak ( ) for weak function .
refactor multiple Java files related to shared functionality to improve code organization and maintainability
no effective change - add test for defaulttransactionthreadlocal . get ( )
added a check for invalid operation handle and logging warnings in HiveStatement . java to improve error handling and provide clearer warnings for server - side
updated command type from ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _
camel - 17836 - camel - aws : add support for default credential generation in camel - aws secret manager
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed exception message from the email sending response in UserREST . java to simplify the error message for better readability
updated the ` fromContent ` method to include a ` subTree ` parameter and modified the ` fromContent ` method to include a boolean parameter
updated the column width calculation in Sheet . java and added a new test method in TestHSSFSheet . java to ensure accurate column width
added configPath parameter to the less command to enhance command functionality by allowing configuration of the configPath
changed method parameters from Set to Collection in DotWriter and GraphExecutable classes to improve flexibility in handling collections of tables and weak associations
update SSHD container image from SHA256 to 1.0 . 0 to ensure compatibility with the latest version of the SSHD container
server : do n ' t throw npe if hostid be null
refactor key generation logic in DefaultGroupKeyGenerator to use BlockSingleValIterator for improved clarity to enhance code readability and maintain
updated test methods in TestMultiMMap to include slice size and improved error handling to enhance test coverage and ensure correct behavior of seeking
refactor BCSiliconRecipes to use a builder pattern for ingredientStacks to improve code readability and maintainability by
fix typo : put ( string , object ) instead of put ( string , object )
updated visibility logic in CellLayout and refactored drag exit handling in Workspace to improve code clarity and maintainability by reducing redundancy
updated ModifyRequestBodyGatewayFilterFactory to handle empty body cases and added a new test for handling empty upstream request bodies to improve the robustness of
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure proper handling of package - related accessibility in type
changed log level from warn to trace for various log messages in LoggingHandler . java to provide more detailed logging for debugging purposes
fix exclusion of wildcard in white blacklist ( # 348 )
added options menu functionality and improved item selection handling in GalleryActivity to enhance user experience by allowing users to view images directly from the gallery
refactor MongoDBServiceFactory to use a singleton pattern for creating instances to improve performance by avoiding unnecessary object creation
added tests for replacing boolean values with their corresponding boolean representations in InlineConstantMutatorTest . java to ensure that boolean values are correctly replaced with their
added a blackhole parameter to the decode method in RecordTest . java to allow for more control over the decoding process during testing
fix : update gapic - generator - java with mock service generation fix ( # 269 )
[ knx ] skip group address / dpt when there be no inbound specification
removed the clearing of witnesses from the database manager to streamline the code by eliminating unnecessary operations
do n ' t swallow exception in jdbcpagesink . abort ( )
replaced the method of setting the " stack " property in ` NativeError . java ` to use ` delete ` instead of ` set `
removed a condition that checks if the path starts with a dot in DrillPathFilter . java to simplify the code by eliminating unnecessary
rename ` onboard ` to ` autoload ` in the ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomaly
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before proceeding with tests
change boldweight _ normal from 190 to 0x190 in hssffont . java
changed ` fThreadGroup ` to be volatile and modified ` fLookForStuckThread ` to be ` final ` in ` Timeout `
changed the access modifier of the getValue ( ) and setValue ( ) methods from final to non - final in ValueResultData . java to allow
updated hash code and equality check in FuzzyQuery . java to ensure proper object comparison and hashing functionality
removed debug print statement for the target variable in PushedResourcesTest . java to clean up unnecessary console output during tests
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile and List < SharedRandomAccessFile > to void to simplify method visibility and
updated the JDBC driver version from 2.5 . 1 to 2.6 . 0 in tests to ensure compatibility with the latest database features and
updated the ` retrievePersonAttributes ` method to accept an empty ` HashMap ` and modified the principal creation logic to improve clarity and functionality by
changed log level from info to warn for connection issues in OpenWebNetBridgeHandler . java to provide a less severe log level for connection issues
rename methods from ` intHash ` and ` intHash ` to ` hash ` across multiple classes to improve clarity and consistency in naming con
added a constructor to ThumbnailGenerationTask that accepts a FileDataStorageManager and a ImageViewReference to ensure that a valid storageManager is
modified the loop condition in GroupSelectionQuery . java to include a limit on the number of tries to improve performance by limiting the number of
added a new file ` Bug1933922 . java ` containing a class for managing program compilation and thread management to demonstrate
removed unnecessary parentheses in comparison and conditional statements across multiple classes to improve code readability and maintainability
updated the validation condition for control characters in FileResolver . java to ensure compliance with character requirements for control characters
added a request focus call to the component in Display . java to ensure the component focuses when needed
update test data in instructorhomepageuitest to match new instructor home page
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated the handling of Crouton cancellation in DetailFragment and modified the notification method in MainActivity to improve user experience by ensuring Crouton
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT ` to validate schema queries
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
replaced the use of ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder ( ) ` for command execution to
updated the local host address to 127.0 . 0.1 in HintedHandOffTest . java to ensure accurate metrics reporting for
refactor controller handling in Metrics . java to use a loop for processing controllers to improve code readability and maintainability by reducing redundancy
added checks for Apple platform availability in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
refactored jvmciversioncheck to use getrequiredproperty instead of validateproperties
updated Mockito library version to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory . java file to improve memory management testing for large pages
updated BinaryParser and PlainTextParser to use context for reading bytes and added charset handling in ParsingExecutionContextView to improve input stream handling and
added support for setting and getting MultiPartFormDataCompliance in HttpConfiguration and created a new class MultiPartFormDataCompliance to enhance flexibility in handling
added JDK version " 7.2 " to GradleDistributionManager . java to support new features and improvements introduced in JDK 17
added a new method ` addType ` for managing database object types in ` SnapshotControl ` to improve code clarity and encapsulate type addition logic
refactor Term class implementation to improve code readability and maintainability
added null and empty check for runWith in ChangeSet . java to ensure that runWith is not null or empty before proceeding
http : / / issues . apache . org / jira / browse / amq - 4892 - add a test to verify that
refactor multiple Java classes related to audio device and codec handling to improve code organization and maintainability
pdfbox - 417 : improve blackbox test case , use blackbox matrix .
replaced direct assignment of ` mTintingAmount ` with a variable ` mTintAmount ` to improve code readability and maintainability by
added a new file ` SumZeroFunctions . java ` that implements the ` SumZero ` function to implement aggregation functions for summing zero values
[ hotfix ] [ table - common ] fix npe in firstvaluefunctionit and nthvaluefunctionit
hbase - 26465 bucketcache . getallocatenotfoundexception should provide more detailed information about bucket allocation failure
added a null check for propName before updating its value in JDBCRoleService to avoid potential NullPointerException when propName is null
added @ VisibleForTesting annotation and modified task removal logic in RecentsView to enhance testing capabilities and improve task management functionality
added logContainerStream method and modified logContainer method to accept a stream parameter to control logging behavior for containers in the Docker client
add a new test class for mvstore cache performance test
changed the long type from " L " to " J " in PrimitiveType . java to ensure consistency with Java naming conventions
changed the method ` delegatingApplicationListener ` from instance to static to allow the method to be called without requiring an instance of ` Delegating
camel - 16462 : camel - rest - remove message body from exchange message . thanks to stuart for the patch .
added FileDeletingTasklet and TaskletJobFunctionalTests classes for managing file deletion in a batch processing framework to facilitate easier
do n ' t update center and orientation when create view ( for plane companion )
updated BitUtil , Int2IntCounterMap , Int2IntHashMap , and BitUtilTest to include comments for out - of - bounds
updated ` sendEventToTest ` and ` goToOverviewUnchecked ` methods to use state ordinal instead of a string tag to improve state
added support for handling video thumbnails in RequestHandler and RequestHandlerV2 classes to improve handling of video playback based on user agent settings
do n ' t scroll to error line in scrolltoerrorline ( )
added conditional logic to set the title area based on the UI theme to ensure proper alignment of menu buttons based on the UI theme settings
updated link and preload attributes in Skia . java to include " libskia " to enhance functionality by allowing loading of additional Skia libraries
added a constant for unit test network ID and implemented logic to retrieve it to enhance network parameter handling for unit tests
added error handling for format arguments in QueryCommand and improved test cases in QueryIntegrationTest to ensure that format arguments are not incorrectly specified in
refactor ` IntIterator ` to use ` length ` instead of ` capacity ` for improved clarity to enhance code readability and maintain
updated the ` walkRuleAndAdd ` method to include ` BuildRule ` as a parameter and added a check for ` srcTarget ` to
add support for override module name in patch module file manager
[ java ] remove unnecessary check for protocol version in election .
update OwnCloudClientManagerFactory ' s default policy based on SAML authentication status to ensure proper client management based on authentication status
add error message when a mappedtableresource ( table ) be miss in readbatch and writebatch
refactored code to use utility . close ( ) instead of try / catch block
refactor AnonymousAuthenticationFilter to use a deferred context for anonymous authentication to improve code readability and maintainability by centralizing authentication logic
updated the ` removeActor ` method to include an ` unfocus ` parameter to control the unfocus behavior when removing an actor from the parent
refactor cloudConfig initialization to use a variable for valid configurations to improve code readability and maintainability by reducing redundancy
added logging functionality to NettyHttpServer and improved response handling in RoutingInBoundHandler to enhance logging capabilities and ensure proper handling of write
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
replaced direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ) to ensure UI updates occur on the Event
camel - 16462 : camel - groovy - optimize to reduce object allocation
use collections . empty _ map instead of project . getmanagedversionmap ( )
[ hotfix ] [ cli ] make cli - client api public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed alias retrieval and certificate chain logging for storage keys in HttpsMessenger . java to streamline code and improve clarity by eliminating
danielwagnerhall : throw a more meaningful exception when an invalid json be convert to a response
changed the visibility of the ` updateImage ` method from private to protected in both ` ImageButton ` and ` ImageTextButton ` classes to
fix block . dropresources not be call in block . dropresources ( ) .
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality for spatial location calculations in the application
refactor multiple Java classes related to community detection and component handling to improve code organization and maintainability
replaced the ` keySet ( ) . isEmpty ( ) ` method with a new ` isEmpty ( _ root ) ` method and added a new
updated foreground and background method calls in AttributedStringBuilder . java to include additional parameters to enhance rendering flexibility by allowing different color settings
added a condition to disable fingerprinting based on system properties in PeerSync to ensure fingerprinting is disabled when fingerprinting is disabled
modified the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
updated event emission logic in MongoTemplate and added a new test class for PersonWithIdPropertyOfTypeUUID in MongoTemplateTests to improve event
fix settransactiontest and add logger to collectioncontainer
close the input stream in tikacli if it ' s not null
updated the API rule configuration to use an array of ` ApiException ` instead of ` ApiBag . ExceptionWithErrObject ` to improve flexibility
removed unnecessary whitespace in the config initialization to improve code readability and maintainability
[ 1.7 ] instructorfeedbackcopyactiontest : fix typo in log message
[ hotfix ] fix checkstyle violation in java . util
updated HmDatapoint and HomematicTypeGeneratorImpl to remove the step parameter and its associated getter / setter methods to simplify the
updated logging messages for shared lock acquisition and exclusive lock handling in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of
updated job scheduling logic in BaseSchedulerServiceImpl . java to ensure job executions are properly scheduled
simon : do n ' t run testgettextcontent if the browser do n ' t support it
refactor logger management to use ThreadLocal for improved thread safety to enhance performance by reducing contention on the main thread
added @ VisibleForTesting annotation to the convertToCompilationUnit method and changed Mockito usage to MockitoJUnitRunner to improve testability and align
added boxed type handling for primitive types and improved subtype checking in type inference to enhance type safety and prevent runtime errors when dealing with primitive
updated the logic for updating child task orientation states in RecentsView . java and removed unnecessary initialization in TaskView . java to improve task
hbase - 22837 fix testflushfromclient . testflushfromclient # testhbase _ region _ flush _ from _ client
added logic to manage the original repository and save contract storage keys in TransactionExecutor . java to ensure proper handling and storage management of contract details during
updated balance calculations to use dynamic properties for asset issue fees instead of a hardcoded constant to improve code clarity and maintainability by using
refactor RealisticRenderStrategy to manage URI - based texture caching to improve texture management by allowing dynamic updates to texture caching based on URI URIs
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code cl
added support for an unselected string width in the Label class and updated related methods in DefaultLookAndFeel to improve text width calculation and
updated ArrayList initialization and refactored action list handling in various classes to optimize memory allocation and improve code readability
removed the ` flags ` parameter from several method signatures in ` ShadowApplicationPackageManager ` and added a new constant ` FLAG _ PRIMARY ` in
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
add test for mp4 asset with increasing timestamps .
[ tradfri ] only log a warning if the gateway have an old firmware .
refactor AjaxElementLocator class to improve code structure to enhance maintainability and readability of the code
updated conditions in BoxLayout and DefaultLayout to include " table - cell " display to enhance layout handling for different display types
updated JsonDecoder logic to handle different token types and added a new test for field reordering in TestJsonDecoder to improve JSON parsing accuracy and
updated the listener signature in BlockCache . java to include removalCause as a parameter to improve clarity and functionality of the releaseLocation method
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable test execution during development
added @ Test annotations to DroolsMvelParserTest . java to enable unit testing for the parser functionality
changed instance variables from non - final to final in ContextRegisterListener . java to enforce immutability for better thread safety and immutability
refactor ObjectHashSet to allow caching of ObjectHashSetIterator and update test cases accordingly to enhance performance by allowing cache iteration and improve test coverage for
added batch byte validation in SparkReduceRecordHandler and ReduceRecordSource classes to ensure that row indices do not exceed defined limits to prevent potential errors
changed context modes from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings and Update
updated logging message to clarify that close ( ) is called after an already closed state or abort ( ) occurs to improve logging clarity
updated workspace animation to set accessibility importance based on the current state to enhance accessibility support for better user experience
changed log level from warn to debug for malformed edits in ProtobufLogReader . java to provide more granular logging for troubleshooting
updated scope handling in UaaTokenServices and added a new test for scope length in UaaTokenServicesTests to ensure that scopes do not
updated import statements and added a toString method in AvailableJDBCDrivers . java , and renamed TestAvailablePlugins . java to TestAvailablePluginsTest .
[ drools - 770 ] add executablecommand interface for kie - api - runtime ( # 2296 )
( chore ) camel - jdbc : remove jdbctableservice which be no longer use
added padding getter methods for left , right , and bottom padding in CellLayout . java and modified bitmap creation in Launcher . java to improve
modify the initialization of the ` cands ` list to conditionally assign ` possible ` based on the ` sb ` length to enhance flexibility
updated import statements and changed the type of ` SamlMetadataUIParserAction ` to ` Action ` in multiple files to improve code clarity
added a method to check the number of open ports in the LdapMockMvcTests class to enhance port validation for LDAP processes
log4j2 - 1349 fix checkstyle issue in log4j - core
updated URL handling logic in Fetcher . java and HTMLMetaProcessor . java to improve redirect handling to enhance robustness and clarity in redirect
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse
updated Karaf Console API usage in TerminalServlet and modified ThreadIOHolder reference in ThreadIOHolder to enhance compatibility with different Karaf
fix a bug in blender ' s meshhelper . getverticescolors when blender compatibility be enable .
added a regex filter to exclude timestamped reports directories during the file copy process to ensure that only timestamped reports are copied , improving data
datavalidatortest : use parameterized test instead of junit 4 test
pdfbox - 4892 : remove unused method , remove unused code
added a null check for bindStatus in FieldUtils . java to ensure proper error handling when binding form expressions using expressions
removed debug print statement from JoglInput . java to clean up the code and improve readability
added a boolean flag ` allowExtractingPrivateFields ` to control field extraction behavior in ` FieldSupport ` to allow flexibility in field extraction
replaced the string " { name } " with the device ' s name in WebDataHandler . java to ensure that the device name is
replaced direct instantiation of Lookup with a conditional lookup constructor using MethodHandles to improve flexibility in obtaining the Lookup instance based on Java 8
replaced the deprecated weights method with a new weightsByDouble method in ZParams . java and updated its usage in SortedSetCommandsTest . java
added a Database parameter to the writeCustomHTML method across multiple writer classes to enable handling of database - specific changes in the custom HTML writing process
updated key deserialization logic in BTreeMap . java to remove unnecessary type casting to improve code clarity and eliminate unnecessary type casting
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to catch specific BalanceInsufficientException and InvalidProtocolBuffer
[ netbeans - 4892 ] fix memory allocation when heap zerofile be false .
replaced ` stream . println ` calls with ` Scope . getCurrentScope ( ) . UI . sendMessage ` for Liquibase Pro license
updated buffer size from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record handling in Hort
added imports for ` ChunkListener ` , ` ItemProcessListener ` , ` ItemReadListener ` , and ` ItemWriteListener ` in multiple
refactor code formatting and improve property retrieval logic in AbstractProviderModule . java to enhance readability and maintainability of the code
replaced direct calls to ` context . reader ( ) . getLiveDocs ( ) ` with direct references to ` liveDocs ` in multiple
updated Test7005594 . java file to improve test coverage for new functionality
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
server : fix npe when vm fail to map to in ip address
fix issue where ctrl - z and ctrl - z be disable in gamepad .
refactor methods in IterableSubject and IterableTest to improve clarity and consistency to enhance code readability and maintainability by using more descriptive
camel - 16462 : camel - http - fix the issue that camel - http do n ' t work with http / 1.1
added unit tests for native SQL queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the SQL query returns zero for various data
added a new ` LargeValueFormatter ` class and updated value formatting logic in ` BarChartActivityMultiDataset ` , ` BarLineChart
commentsparser : fix issue with double slash in
removed the @ SuppressWarnings annotation for incompatible argument types in Platform . java to improve code clarity by eliminating unnecessary warnings
updated printLir statement formatting in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency in formatting
added a TODO comment for the Auto - generated method stub in NullAssertionValidator . java to improve code clarity and maintainability by addressing
added a check for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to append " . buck " to the rule key if the build rule
added a check for the existence of the system profile directory and refactored test setup and teardown methods in DLNAMediaInfoTest
refactor createThreadFactory method to use a dedicated factory method to improve code readability and maintainability by reducing redundancy
refactor message handling in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method for incrementing messages to improve code organization and
added a " accept " attribute to the ImageFileInputDialog to allow image files to be processed as images
replaced NodeBuilder with PreBuiltTransportClient and updated client initialization in ElasticIndexWriter . java and TestElasticIndexWriter . java to improve
added logging of witnesses and their class names in ForkController . java to improve debugging by providing more context about witnesses and their types
added a new test class ` NullPointerAndEmptyArrayTest ` to verify behavior of ` CustomURLClassLoader ` with null and empty arrays to
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` from ` BaseIjModuleRule ` and updated ` IjProjectBuck
updated UaaStringUtils to include a method for constructing wildcard patterns with any character delimiters to enhance flexibility in wildcard matching by allowing users to
refactor alias validation logic in Vectorizer . java to improve clarity and maintainability to enhance error handling for invalid aliases and table scan operators
updated MockitoJUnitRunner import and modified exception handling in WeatherQueryTest . java to improve test clarity and ensure proper exception handling
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging warnings and handling FirmwareSettings
updated the ` getLangs ` method to return a set instead of an array to improve handling of multiple Accept - Language headers to enhance flexibility
updated assertions in LazyTraceScheduledThreadPoolExecutorTests . java for clarity and consistency to enhance readability and maintainability of the test code
hbase - 22864 add prepare ( ) method to takesnapshothandler and disabletablesnapshothandler
[ wasm ] add support for ` ` isnull ' ' to implementfinally via control flow .
added a test for modified HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the explorer correctly updates the HTTP RPC endpoint
added a volatile boolean to track thread suspension state and modified return logic in Thread . java to ensure proper handling of thread suspension
updated JavadocVisitor and ReloadableJava8JavadocVisitor to replace author and since descriptions with hidden and serial descriptions to enhance Javadoc documentation clarity and
camel - 16462 : camel - spring - integration - service - produce should check if camelcontextid be not empty
removed multiple @ Override annotations from multiple security - related classes to streamline code and improve readability by eliminating redundancy
added module import handling in Java2TypeScriptAdapter and modified test assertions in EnumTests to improve module integration and ensure consistency in test assertions
updated the language string from XMLConstants . W3C _ XML _ SCHEMA _ NS _ URI to " http : / / www . w
added content description handling for badged apps in BubbleTextView . java to improve user experience by providing clear notifications when badges are present
added mouse wheel functionality in TestMouseWheelScroll . java to handle mouse wheel orientation changes to enhance mouse wheel functionality for improved user interaction
added closing of PDF documents in VisualTester and a new test for positioning absolute in VisualRegressionTest to ensure proper resource management and
updated currency pair references from BTC _ ETH to XRB _ BTC and refactored related tests to use a new currency pair
refactor VacuumController , VacuumFrame , and VacuumView to use String instead of Object for location
simplified the return statement in BitfinexAdapters . java to directly return the BitfinexSymbol to improve code readability and reduce redundancy
replaced ` Sets ` with ` ImmutableSet ` and updated field handling logic in ` JsonFormat . java ` to improve code clarity and ensure
added handling for array and enum types in JacksonXmlFormatMapper to ensure proper serialization of Byte [ ] values for enum types
added a new constant ` PARKED _ SUSPENDED ` and refactored thread state management in ` VirtualThread . java ` to
updated ` DirectoryTaxonomyWriter ` to include ` catTerm ` as a parameter and refactored cache implementation in ` TestDirectoryTaxonomyWriter `
refactor VetoableChangeSupport to improve code structure to enhance maintainability and readability of the code
adjusted the calculation of the Y - coordinate in BrowserContentPane . java to correct the vertical positioning of the content pane
pdfbox - 4892 : remove unused exception , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
do n ' t show the ' close ' button in the input bar help panel
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced direct sleep calls with ThreadHelper ' s waitUntil method in multiple classes to improve responsiveness to controller state changes and enhance code
updated version checking logic in SwingStartup . java to use ReleaseStatus . OLDER instead of a hardcoded empty string to improve robustness
add ` ` include generated file comment ' ' option to dbmigration
updated usage strings in multiple Java files to include " / player | * " suffix to enhance command usability by allowing multiple players to be recognized
deleted BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filter classes to streamline the codebase
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to enhance clarity and maintain consistency in method naming
added a condition to check for parallel classes in TestNGContentHandler to ensure proper handling of parallel classes in XML processing
updated the logic for enabling the acting master and changed the registration check to use StringUtils to improve code clarity and ensure correct handling of
refactor : remove static import of enums in ctmethodimpl . java ( # 3649 )
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code readability and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to include a constant separator for SHA - 1 hashing to enhance flexibility in hashing by allowing different
added null check for the SYSTEM _ ACTIONS _ ENABLED parameter in Parameters . java and modified the conditional check in TestAction . java to improve
add a new class Person in the org . apache . maven . it0074 package to provide a structure for managing a person ' s name
remove useless call to getlocaladdress ( ) in nodetool start ( )
updated the case - insensitivity check for timeStr in AbstractClient . java to ensure consistent case handling for time strings in the result set
added assertions for ` timeColumn ` , ` timeUnit ` , and ` totalDocs ` in ` SegmentMetadataImplTest . java ` to ensure
updated color imports from java . awt to net . sf . openrocket . util . Color and changed foreground color to DARK _ RED
added a subscription to disconnectEmitters in NettyStreamingService to ensure proper handling of disconnection events
changed the type of the scopeHierarchy variable from List < String > to List < Class < ? extends Annotation > > to improve type safety and
danielwagnerhall : fix click scrolling on element with double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added functionality to retrieve JTA TransactionSynchronizationRegistry based on a custom JNDI location to enhance flexibility by allowing the JNDI location to be
changed the visibility of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the ` Library ` class to simplify the interface by eliminating unnecessary functionality
renamed variable ` enabledCiphers ` to ` result ` and updated its usage in ` JSSESocketFactory . java ` to improve code
[ beam - 14310 ] fix timestamp type in bigquery to storage api ( # 14386 )
replaced repeated null checks with a unified requireNonNull method for buffer and user credentials to improve code readability and reduce boilerplate code
rename input to inputmap in coercionvalueforinputobjecttype ( # 2596 )
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that the indices do not exceed the table ' s row
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user experience by ensuring the selection
fix false positive with unnecessarylocalbeforereturn
replaced ` ScriptEngineManager ` with ` ScriptEngine ` in ` AbstractScriptExecutor . java ` to simplify the code and improve clarity
simplified calculations for distance similarity in EuclideanDistanceSimilarity . java and updated assertions in EuclideanDistanceSimilarityTest . java to
check for null sstables before create backup to avoid npe
updated the relativize method to handle both empty and non - empty paths to ensure consistent path handling and avoid potential issues with path normalization
added null checks for column size and decimal digits in ColumnSnapshotGenerator . java and modified value formatting in DataType . java to ensure proper handling of
modified the filtering logic to exclude the current writer head file " 1 . log . tmp " in DeadLetterQueueWriterTest . java to improve
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpc
renamed ` ErrorHandlerController ` to ` Error403Controller ` and created new ` Error404Controller ` and ` Error403Controller `
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in both UnixTerminal .
updated imports and modified collection conversion logic in Tiny . java to improve code clarity and ensure compatibility with newer Java versions
refactor connection acquisition logic in ConnectionPool . java to improve clarity and efficiency in handling client connection entries
updated method names and references from ` getDateConverter ` to ` getLdapDateConverter ` and ` setLdapDateConverter ` to improve clarity
pdfbox - 4892 : avoid npe if a pdf file do n ' t contain id _ tree
updated error message format in JavassistUtils . java to include classLoader to improve clarity of error messages for better debugging
added exception handling for reader and writer threads and increased timeout duration in LargeStreamletTest . java to improve error handling and ensure proper thread
updated the page navigation logic in HomeFragment to dynamically calculate extra pages based on user preferences to improve user experience by allowing dynamic adjustment of extra pages
added error handling for image processing in AndroidImplementation . java to improve robustness by preventing crashes due to image processing failures
replaced the ` suppressNode ( ) ` method with a direct ` @ SuppressSubnodes ` annotation in the ` BaseParser ` class to
updated FDFParser instantiation to use try - with - resources for better resource management to ensure RandomAccessRead is properly closed to prevent resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to remove unused test file to streamline the codebase
added a shell command to handle input events in AbstractLauncherUiTest . java and removed a test assertion in LauncherInstrumentation . java to
added functionality to convert output file paths to URLs in FileDumper . java to facilitate the storage and retrieval of file URLs for better
bugfix # 206323 , do n ' t synchronize on result notification flag
change texturehelper . loadtexturefromimage ( ) to loadimage ( ) and add feature to blendercontext . loadimage ( )
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to remove the " application : "
updated test cases in RandomizersTest to replace " 9781797745008 " with " 9781797845005 "
updated notification sound setting to use Uri for ringtone instead of a hardcoded value to improve flexibility by allowing dynamic configuration of notification ring
added a method to report loop count in the RootNode class to enable tracking of loop count for better debugging and monitoring
added conditional logic to finalize the version for specific repository type in FinalizeUpgradeAction . java and modified cluster entity merging in ClusterImpl . java to
fix npe in portableipdaoimpl when regionid be null
removed duplicate call to streamManager . open in ItemOrientedStep . java to improve code clarity and maintain consistency in stream management
added a new file ` CountedLoopProblem . java ` that generates a counted loop problem using a random number and checks its hash code to
do n ' t use object [ ] instead of object [ ] . args
graalvm : fix pending _ failed _ speculation _ offset to work with jlong type .
replaced ` TransformerSupplier ` with ` ValueTransformerWithKeySupplier ` in ` KafkaStreamsTracing ` and ` ITKafkaStreamsTracing `
[ 1.0 ] add new ' received ' field to feedbackconstantsumquestiondetails and update test to reflect this change
removed the call to applyToActivitiesIfAvailable ( this ) in BaseApplication . java to simplify the code by eliminating unnecessary method calls
added a method to dump all stack traces and improved thread handling in CloseRace . java to enhance debugging capabilities and ensure proper thread termination
change return value from ' val ' to ' val . intValue ( ) ' in IntPointField . java and add assertions in TestPointFields
changed the arcSize variable from an integer to a double and updated related calculations to improve flexibility in calculating the height based on the width of
increased the width of veryHighWidth from 768 to 640 in AddAndScaleMultiImage . java and updated the ratioWidth
renamed ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` and updated related methods accordingly to clarify the purpose of the
removed redundant calls to waitForStateTransitionToEnd and refactored related logic in WorkProfileTest and AbstractLauncherUiTest to streamline state
added configuration imports for various CAS configuration classes in multiple test files to ensure consistent configuration usage across the application
updated byte reading logic in Volume . java to use DataIO for better performance to optimize memory usage and improve efficiency in reading long values
camel - 16462 : camel - http - optimize to reduce memory usage in camel - http
refactor ClassPath creation in DeclarativeHintsParser to use a builder pattern for module boot paths to improve clarity and maintainability of
[ scoping ] add mediascriptscopeprovider to allow customization of script scope
added methods to get and set the layer manager in AnimComposer and modified event handling in AnimEvent to improve layer management management and ensure
added a check to return early if the queue is empty in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to
added null checks for mapOp and mapWork in MapRecordProcessor . java and changed processingException handling in TezProcessor . java to improve
refactor CylinderRegion to use Vector2D instead of Vector for center calculations to improve code clarity and maintainability by standardizing
replaced static JUnit assertions with JUnit ' s ExpectedException rules in TestBadUseCases . java to improve test readability and maintain
refactor subqueries handling in QueryExecutorImpl . java and add a new test method in StatementTest . java to improve code clarity and
do n ' t customize the security environment if it ' s set to false .
added a new parameter " rctag = android % 20app % 20edit " to the GET endpoint in ReviewInterface . java to enhance
updated test cases in Test . java to improve test coverage and reliability
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity by using a more descriptive variable name
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
add a method to write section definition in the RtfDocumentHeader class to ensure that section definitions are properly written in the document header
added handling for large jump detection and improved accuracy of accuracy checks in GpsLoggingService . java to enhance performance monitoring and prevent unnecessary processing
removed detailed logging statements from TableCellLayout , TableLayout , and TableLayout2 to improve code readability and maintainability
doc : generate sample code in the java microgenerator ( # 174 )
correct the hashcode ( ) and equal ( ) method of insightfilter . ( gr - 40322 )
replaced binary search logic with direct addition of app information to the data and added lists to simplify the code and improve performance by eliminating
refactored SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and removed the ThemedPreferenceActivity class to simplify theme
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
updated assertion syntax in FST . java to improve code readability and maintain consistency
added an assertion to check if the security policy exists or is a file to ensure that the security policy is valid before proceeding with tests
camel - 14263 : camel - olingo2 should override getconfiguration ( ) in olingo2component to avoid npe
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution to complete before
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception context
add a new method to send an image via http .
camel - 16462 : camel - netty : fix npe when channel can not be find .
updated URL _ TEMPLATE regex in BalancedClickhouseDataSource . java and added tests for invalid host names in BalancedClickhouseDataSourceTest .
remove system . setproperty ( org . apache . jasper . compiler . disablejsr199 ) in fragmentactivator . java
added null string handling in CSVRecordReader and CSVRecordReaderConfig classes to support null values in CSV format processing
added LiquibaseService import and annotation to multiple connection classes to enable LiquibaseService functionality in the application
updated cursor type from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` to ensure compatibility with Java
add ` ` / command ' ' and ` ` / state ' ' prefix to event . topics . ( # 5335 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align exception
added deprecation comment for ` zkCredientialsProvider ` and ` zkCredentialsProvider ` case in ` SolrXmlConfig . java ` ,
fix mana tablet not use mana damage . close # 388
added assignment of identifier collection to mCurrentCallEvent in P25P2DecoderState . java to ensure the identifier collection is properly initialized for the
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to streamline the code
updated the thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to simplify the
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the codebase
updated assertion in TypeDefinitionRegistry to include a null definition parameter to improve error handling by providing a more informative assertion message
removed the visibility of the shareWithMeIcon view in LocalFileListAdapter to improve user interface by hiding the share icon when it ' s
updated stylesheet links from HTTP to HTTPS in DefaultLogoutPageGeneratingFilter , LogoutPageGeneratingWebFilter , and DefaultLogoutPageGeneratingFilterTests to
updated imports and method signatures in RouterFilter , RouterServerListFilter , and RouterDistributorTest to improve code clarity and enforce non -
enhanced assertion message in TestIndexWriterMergePolicy to include additional context to improve debugging by providing more context during assertion failures
added @ Deprecated annotation to multiple Java files to indicate that these classes are outdated and should not be used in new development
add a null check for the context variable in the CrawlerSessionManagerValve class and add a new test for context awareness in TestCrawler
added security checks to the ` getJspApplicationContext ` method in ` JspFactoryImpl . java ` to ensure proper access control when security is enabled
refactor length calculation logic in RocketComponentConfig . java to use minL and maxL instead of a fixed length to improve accuracy of
added ` @ Singleton ` annotation to ` NonceService ` and changed ` bind ` method in ` OpenIDAuthenticationProviderModule ` to use ` Scopes
added a lambda expression to update child links in FileWrapper . java to enhance the functionality of the updateChildLinks method to ensure child links are
refactor method signatures and variable declarations in SpringCloudPlugin . java for improved clarity and consistency to enhance code readability and maintainability
increased publishDelay from 100 to 500 milliseconds in RetrievalBlockingMessageStoreTests . java to improve test reliability by allowing more time
added a new boolean attribute ` mShiftCodesAlwaysOverride ` and modified the logic to determine if shift codes should be overridden based on its value
[ hotfix ] [ coordination ] make leaderelectionmanager . isleader ( ) thread - safe
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated identity filtering logic in AbstractKerberosDescriptorContainer . java to use isReference ( ) method instead of name checks to improve clarity and
updated the ` newInstance ` method signatures to accept a ` boolean noop ` parameter instead of ` AbstractCommandOptions ` to enhance flexibility by allowing
added a sleep delay of 3000 milliseconds in TestListenTCPRecord . java to improve responsiveness during network operations
update methodCall ' s arguments handling in PatchExtensionMethod . java to ensure original arguments are preserved during method call execution
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances and modified related methods to improve library management and enhance
int - 1186 add support for ' apply - sequence ' and ' ignore - send - failures ' attribute to the < router / >
added x509 publish URL and x509 view name handling in ClientKeyPublisher , ClientKeyPublisherMapping , and JwkViewResolver classes to
updated the handling of the SolrIndexReader in QueryComponent . java to ensure that a single reader is used when only one readers are present to
replaced the custom MaxFloatFunction with a custom Double2Parser for max and min calculations to enhance flexibility in parsing float values based on
simplified return statement by removing focusable and pointer event checks to improve code readability and maintainability
removed unused variables ` n ` and ` minScore ` from ` Highlighter ` and ` SpanGradientFormatter ` , and modified the ` next
cloudstack - 1343 : fix duplicate uuid in user table
updated ` CasMultifactorAuthenticationWebflowConfiguration ` and ` CasWebflowContextConfiguration ` to use ` ObjectProvider < FlowBuilderServices
updated PostgreSQL connection settings and refactored database setup methods in WriteJdbcPTest . java to improve connection management and enhance database connection handling
simplified the look and feel registration logic in DefaultPlatform . java to improve code readability and maintainability by eliminating unnecessary
replaced calls to ` getStateEntity ( ) ` with direct access to ` stateEntity ` in ` ServiceComponentHostImpl . java ` to
simplified margin calculations for RTL support in FloatingTaskView . java to improve readability and maintainability of the code
added a conditional check in RootFolder . java and updated the status line message in NavigationShareTab . java to improve code clarity and provide
do n ' t increment threadid in cpucallgraphbuilder , it ' s not need anymore .
ggb - 1353 use default toolbar instead of 0 for perspective . probability
added NetworkAddressChangeListener implementation to HomekitImpl and improved log messages for better clarity to enhance network address management and enhance log readability
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of LeaseManager to
replaced the usage of ` Optional . absent ( ) ` with ` Optional . absent ( ) ` for ` prefixHeader ` and ` link
added null check for exception message in ExceptionHandlerRegistryFactory . java and created a test for handling null messages in ExceptionHandlerRegistryTest . java
changed the ` nextID ` variable to be volatile and modified the ` getSize ` method to improve thread safety and provide a clearer error message
make the test more robust against slow machine
added ` HasSourcePath ` interface and implemented it in ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg `
simplified the exception handling by eliminating unnecessary StringBuffer usage to improve performance by eliminating unnecessary string manipulation
added support for custom index field name " tag " and " id " in FacetCounts and updated test cases accordingly to enhance the flexibility of
updated the epoch calculation logic in ` Instant . java ` and added unit tests in ` TestInstant . java ` to ensure correct handling of negative
updated buffer type retrieval from ` vb . getBufferType ( ) ` to ` vb . getBufferType ( ) . name ( ) ` in O
added logic to manage the block of update scripts in the app to ensure that update scripts are marked as blocked when necessary
added a new file TestCMoveLimitType . java with methods for testing byte buffer and character buffer operations to facilitate testing of
reset temporal attributes in ChannelState and enhance audio packet handling in AudioPacketWaveRecorder and OverflowableTransferQueue to improve data management and ensure
camel - 16462 : fix parseexception due to arrayindexoutofboundsexception
updated the vendor name from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor console handling in Main . java and add version printing functionality in VersionCommand . java to improve code readability and maintainability by encaps
refactored token validation logic in InputStreamBinder and removed it from NextcloudRequest to streamline token validation process and improve code organization
improve error handling for eof in http11inputbuffer .
added unit tests for group member deletion in DefaultGroupProviderTest . java to ensure proper handling of non - existent and non - existent group members
camel - 14263 : remove unnecessary object [ ] creation in camel - ftp
deleted the V2ReplicationProtocol . java file to remove unused or redundant code from the codebase
replaced instances of ` BuildRule ` with ` SourcePath ` across multiple classes to align with the new naming conventions and improve clarity
added new files ConstructorArgsDemo . java and StrictDemo . java , and renamed classes StupidFinal . java to FinalDemo . java
[ geot - 6640 ] fix memory leak in directtemplatefeaturecollectionfactory . close ( )
updated the assertion condition in WriteResponseHandler . java to accommodate a different replication factor to ensure that the response count does not exceed the
added a null check for the index number in ItemRowAdapter to prevent potential NullPointerException when accessing index properties
rename ` ` showanchestors ' ' to ` ` showanchestors ' ' and add ` ` showanchest
added a condition to return early if the application width is less than 12 to optimize performance by avoiding unnecessary processing
updated equality check in ChangeLogParameters and added a new test for non - global properties in inner files to ensure correct comparison of change log parameters
changed the loggers map from static to final to ensure that the loggers map cannot be reassigned after initialization
modify return statement to use getBasePlot ( false ) instead of directly returning the current plot instance
updated the ` createUploadDir ` method to include an ` initialCreation ` parameter to control the behavior of the upload directory creation to improve logging
added a boolean parameter to the ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnection classes to enable handling of HTTP status 200
added a condition to check if the comment length is greater than zero in the multi - line comment condition to ensure that multi - line comments are
added imports for BuckFileType and its associated logic in BuckModule . java to manage file type associations based on file extensions to enhance file
replaced multiple import statements with a wildcard import and changed return types of multiply methods from ToLong to ToInt to simplify import statements and align
[ testbug ] add ` ` - xx : + usertrtocking ' ' option for ppc
reformatted code for improved readability and consistency to enhance maintainability and adhere to coding standards
refactor Player class to improve code structure to enhance maintainability and readability of the code
added a mockito package import method for ChannelTypeUID in AbstractModbusOSGiTest . java to enable mocking of ChannelType
fix checkstyle issue in polyglot / polyglot / polyglotexceptionimpl . java
added context management functionality to ` ShadowFontsContract ` and initialized ` systemContext ` to ` null ` in ` AndroidTestEnvironment ` to
added a method to convert long values to milliseconds and adjusted date handling in multiple classes to ensure accurate time granularity calculations and improve query accuracy
refactor control flow analysis logic to handle null values for ` _ try . getFinally ( ) ` and ` _ try . breakFlow
updated array comparison logic in Assert . java and modified test cases in ArrayEqualityAssertTest . java to improve clarity of error messages and ensure
simonstewart : fix switch / cases indentation in windowclicklogic
corrected the bitwise operation syntax for index assignment in MeshBuilder . java to ensure correct indexing by correcting the bitwise operation
nifi - 1742 : remove unused variable from standardprocessscheduler . processcontext
added support for resolving Java annotation processor arguments in KotlincToJarStepFactory to enhance annotation processing capabilities for KAPT3 plugin
updated RESCROLL _ DELAY to use PAGE _ SNAP _ ANIMATION _ DURATION and simplified page snapping logic in Paged
added shortcut permission checks and updated shortcut handling in LauncherModel and DeepShortcutManager to ensure shortcuts are refreshed correctly based on the user ' s
added case statements for HISTORY _ SEARCH _ BACKWARD and HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance user experience by allowing
added null check for core name in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to enhance robustness
added marker selection functionality in NearbyMapFragment to manage bottom sheet visibility to improve user experience by hiding the bottom sheet when the map
added error handling for throwable exceptions in FileSyncAdapter . java to improve error reporting for better debugging
refactor memory test assertions to use OutputAnalyzer for better error handling to improve robustness by catching runtime exceptions during tests
modified FeedQueues . java to filter out heavy load feeds based on application settings to improve performance by reducing unnecessary processing during heavy load
add warn log if defaultdrmsessionmanager be set on wrong thread
updated packageType and resourceCompressionMode to use Locale . US and added a setPackageType method in AndroidBinaryBuilder to ensure consistent case handling
changed the MIME type from " text / xml " to " application / xml " across multiple test files to align with the expected file format for
updated file references in Args . java to use INSTANCE . confFile instead of DEFAULT . confFile to improve clarity and consistency in configuration file
removed " sleep 5 ; exit 1 " from the waitUntilReadyAndTimeout method to simplify the test by removing unnecessary delays
replace IntMath with LongMath and modify the getGroupingIdValue method to use long instead of int to improve precision in grouping ID calculations and
added multiple checks for ` GraphicsEnvironment . isHeadless ( ) ` in ` Toolkit . java ` to throw ` HeadlessException (
updated the condition in ExoflameFurnaceHandler to check if the current recipe matches the furnace before performing smelt checks
add solverconfig . move _ thread _ count _ description to show number of move thread
fix issue with miss resource type when search with revinclude = ' ' include ' '
added a new test file ` Issue582Test . java ` to implement a test case for sorting features in a MapDB database to ensure
[ native ] add e2e test for decimal overflow .
refactor LoadingCache class implementation to improve cache management efficiency
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest to ensure that non - constructor methods with class names are
simonstewart : add a try - catch block to handle staleelementreferenceexception
refactor error handling for view existence checks in ViewExistsPrecondition . java and add hasView method in JdbcDatabaseSnapshotGenerator . java to
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added translation calculations and logging functionality for task view animations in TaskViewUtils and Utilities classes to improve animation responsiveness and facilitate
disable fixed rotation transformation by default
added a static method ` walk ` in ` TempFSTTermsReader ` and modified ` TempTermOutputs ` to handle document frequency comparisons to
added SolrQueryRequest parameter to multiple create methods in various augmenters to enhance query request handling for improved query performance
added new trigger creation and validation checks for Post and Announcement in SingleTableMySQLTriggerTest . java to ensure proper handling of null values
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a new setComparator method to improve code readability and maintainability
updated expected query strings in PhoenixQueryBuilderTest . java to include quotes around column date strings to ensure consistency and prevent SQL injection v
added Spark initialization to the init method in RequesterTest . java to ensure proper initialization before running tests
added methods to retrieve and save total storage pool , limit , and used in DynamicPropertiesStore . java to enhance functionality by allowing dynamic storage allocation
added support for streaming files from a specified source directory in development mode to enhance file streaming capabilities and improve error handling during development
replaced direct access to mapMark with a method call to getMapMarkKey to improve code readability and maintainability by using a consistent key
updated the ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` classes to include a ` TokenRewriteStream ` parameter to enhance
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
updated file loading log messages to use the full file name instead of the file name to improve clarity of log messages by using the full file
updated image file creation logic to use ` . equals ( ) ` instead of ` = = ` for format comparison to improve code clarity and
[ somfytahoma ] fix npe when try to start the http client
[ ci ] disable flaky test on github
added keystore properties and updated SSL context initialization in OpenWireConnectionTimeoutTest . java to enable dynamic configuration of SSL keystore and trust store settings for
added stack trace and nan gauge debug logger in DynatraceExporterV2 . java to improve logging clarity and handle NaN values more
added a method to remove a session ID from the sessionIdToSessionInfo map to ensure that the session ID is not removed from the session info
added logic to set the hostname of alerts if the host name is null in HeartBeatHandler . java to ensure that the alert '
simplify the logic for checking if a ByteBuffer is empty in ChannelEndPoint . java to improve code readability and maintainability by reducing
[ drools - 770 ] fix kmodule xsd test for kie - api
added unit tests for seeking to mode in ShadowMediaPlayerTest . java and modified seekTo method in ShadowMediaPlayer . java to ensure
rename method ` createTask ` to ` createThrowingTask ` across multiple files to improve clarity by indicating that the method creates throwing tasks
added border settings for the CloseButtonTabbedPane based on the AQUA LAF environment to enhance the visual appearance of the Close
added request method and connection timeout settings in TSPTimeStampService . java and refactored test assertions in TestSignatureInfo . java to improve
[ kie - issues # 353 ] add support for wildcard type permission in xstream
added error logging for non - generic diamond types in ` Attr . java ` and introduced a new class ` DiamondRaw .
[ hotfix ] [ table - common ] fix typo in reloptutil
replaced ` | | ` with ` & & ` for setting id and value validation in ` Http2Settings . java ` to ensure that
deleted the test file ` Issue664Test . java ` to remove obsolete test cases that are no longer needed
added error handling for session disposal in SessionsPoolTest . java to ensure that disposed sessions are not executed when a session is created
mondrian : fix a bug in geotoolswmsbuilder that cause jsonwriter . object ( ) to throw exception
replaced the method ` setIndex ` with a direct call to ` selectedIndex . intValue ( ) ` in ` PopupMenuButton . java `
added a check to determine if the application can still unstash to improve stability by preventing unstashing when the app is not in
camel - 16462 : camel - core - route - coverage should not use custom id attribute for route id .
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting on expected events to enhance flexibility in waiting for event mismatch messages
added a new file ` HeaderFixer . java ` to process and write headers from a specified file to ensure that the header file is correctly
added a method to send a broadcast for the first loading completion in the Launcher class to ensure that the first load action is sent when the
deleted the SuperJumperAndroid . java file to remove unused code to streamline the project
updated the return value in SystemTableScan . java to check if the table is distributed and modified the query construction in TestStarQueries . java
removed KeyValuesProviderAware and ObservationConventionAware interfaces from the Observation interface to simplify the interface structure and improve usability
remove remapping of miss block and item from registry ( fixes # 389 )
update return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index to long to ensure type safety and prevent potential overflow
added caching mechanism for date format retrieval in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the query parameters in RemoteAuthenticationEndpointTests to filter users by username to ensure that only unique user names are processed in the response
replace ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java ` to
updated logging method to include container information and workspace information to enhance logging clarity by including workspace and page index information
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
remove deadlocktest . java which be no longer use
added null check for newInput in BugContentProvider and improved marker handling in BugGroup to enhance robustness by preventing null pointer exceptions
added a menu item to open the server in the browser and refactored server opening logic to improve user experience by providing quick access to the
added a new error message ` OUTPUT _ SPECIFIED _ MULTIPLE _ TIMES ` and improved semantic checks in ` SemanticAnalyzer . java
added null checks for the addEntryListener method in BasicTest . java to ensure proper exception handling when adding an entry listener with a null predicate
fix coordinatearrays . reverse ( ) to handle edge case
modified the setOpen ( ) method call in ToolbarPanel . java to correct the logic for setting the open state
added a new boolean variable ` first ` and initialized it to ` false ` in TestPayloads . java to track the state of the first
replaced the method ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` to streamline the overview mode display logic
added a line to set the destination of the message dispatch in NetworkRouteTest . java to ensure the correct destination is used for message dispatching
update return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of maximum
pdfbox - 4071 : fix checkstyle violation in amd64floatconvertnode . java
updated the logic for adding pending chunks and buffers in HttpClientRequestImpl . java and improved test assertions in HttpTest . java to enhance buffer
updated artifact replacement logic in GetMavenDependenciesTask . java to include " ( ? < ! solr - ) analysis - " to ensure correct
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to simplify code and improve readability
fix : expose the query type in the field visibility predicate .
added configuration options for Solidity JSON - RPC HTTP port and enabled them in CommonParameter to allow dynamic configuration of Solr Solr port and enable
added a check to ensure the folder is an instance of DropTarget before removing it to prevent potential ClassCastException when removing the drop target
refactor stub jar creation logic into a separate method to improve code readability and maintainability by reducing duplication
added new features for setup wizard , probe module , and workflow helper in StartPageTopComponent . java to enhance user engagement by providing
replaced the existing scheduleWithFixedDelay ( new MeteredFlusher ( ) ) with a new scheduleWithFixedDelay ( new Metered
simplified the logic for checking the availability of a fixture in OnlineTestCase . java to improve code readability and reduce unnecessary type
changed return attributes from NONE . value ( ) to ALL _ USER . value ( ) in LdapUserGraphicalAuthenticationRepository . java to ensure
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener in HttpChannelTest . java to improve error handling and ensure
changed the CreateEndPoint class from implementing Runnable to extending Invocable . NonBlocking to simplify the class structure and improve thread safety
updated TABLE _ HEADER _ SEPARATOR regex and added new test cases for one - column headers in TableBlockParser and TablesTest to improve header parsing
updated return value from 32.0 f to 31.5 f to adjust the camera ' s camera quality
added a preference to disable the start on boot setup in GpsSettingsActivity and modified return statements in Utilities to streamline the application ' s
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to optimize client secret generation for improved security
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to specify that ` ParameterRegistration # enablePassingNulls ( true ) ` is
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race conditions
refactor PinotFS handling in SegmentGenerationAndPushTaskExecutor to use PluginManager and improve file URI scheme initialization to enhance flexibility and
added locale - specific date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is applied correctly for non - English locales
added MetalLookAndFeel to the UIManager in bug8032878 . java to enhance the visual appearance of the UI
added synchronization and refactored ping task management in the Bot class to improve thread safety and ensure proper shutdown of scheduled tasks during session destr
removed exception message from error handling in GlobalErrorHandler . java to streamline error reporting by eliminating unnecessary message retrieval
rename parameter ` module ` to ` from ` in ` addReads ` and ` addExports ` methods across multiple files to improve clarity and
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and marked the ` hashCode ( ) ` method as
updated variable types and method signatures in CustomPlaybackOverlayFragment and ImageButton classes for consistency and clarity to improve code readability and maintainability
change zoom level minimum and maximum values from 10 and 20 to 0 and 24 in BasicMapViewer . java to adjust zoom level settings for impro
refactor admin user and group retrieval logic in DrillRoot . java to utilize ImpersonationUtil for better management of user and group
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider ` and ` Windows
added ArgumentExtractor to the DelegatedClientAuthenticationAction class and updated service resolution logic to enhance argument extraction capabilities in the authentication process
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure immut
refactor tile size changer to create tile cache instead of destroy the cache
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the code by eliminating redundancy
refactor cleanFeedsWithoutSubscriptions method to improve clarity and structure to enhance code readability and maintainability by encapsulating the cleanup logic
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with direct variable ` auth ` in ` ImmutableAssertionTests . java `
nifi - 1641 : use temporaryfolder in filebasedclusternodefirewalltest to avoid file deletion
fix for conic -ive point problem with c = = 0
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
refactor CImage to use a new method for converting images to integers and improve code organization to enhance image handling flexibility and maintainability by
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to improve performance by using a more suitable data type
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` and update related references to improve clarity and consistency
replaced manual null checks with ` Objects . equals ` for better readability and consistency to improve code readability and leverage built - in
updated method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and added nullable annotations to improve clarity and
added verification for various HTML error and bad request locations in NinjaDefaultTest . java to ensure correct handling of various scenarios in the Ninja
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
updated ` timestampsViewPaddingBottom ` calculation and modified ` REQUEST _ CODE _ DETAIL ` and ` REQUEST _ CODE _ CATEGORY ` constants
updated exception handling and logging in ZkStateReader . java to include the current thread ' s interrupted status to improve error handling and provide clear
added null checks for fields and headers in HttpFields . java and implemented a new test for empty headers in RequestTest . java to ensure that
do n ' t log error message if static nat service be not support in the specified network id
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added a call to remove an extra empty screen from the workspace to improve user experience by removing unnecessary empty screens
added a fixedWidth flag and modified glyph positioning logic in BitmapFont . java to improve glyph positioning based on fixed width settings
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored the ` createArgs ` method in ` ChangeLog
added methods for preEvent , postTransition , and stateMachineError in AbstractStateMachineFactory to enhance state machine management with interceptor functionality
refactor ConfigDescriptionProvider to improve code readability to enhance maintainability and facilitate future updates
updated role creation and added Windows path handling in StorageBasedMetastoreTestBase and TestStorageBasedMetastoreAuthorizationDrops classes to
refactor facet sorting logic to use a boolean variable for clarity to improve readability and maintainability of the code
updated properties handling in CheckstyleReport . java to use a variable for overriding properties and modified cache file path to improve code clarity and ensure
added logic to stop Jetty in DeleteInactiveReplicaTest to ensure Jetty is stopped when it is not found to improve test reliability by
added a filename parameter to the newInstance method in FileActionsDialogFragment to allow users to specify a file name for the file actions dialog
added a constant for INVALID _ DIRECTION and modified order direction checks to include MODE _ ON _ DROP _ EXTERNAL to ensure proper handling of
updated field names from ` payAccountId ` , ` recAccountId ` , ` from ` , and ` to ` to ` String ` , and
fix failure of sinkstresstest . testfailjob _ withnontransientexception in writejdbcptest . testfailjob _
added a new annotation ` EnableAdminClient ` to the ` org . noear . solon . admin . client . config ` package to
replaced specific imports with a wildcard import and modified the visitIdentifier method to include marker handling for fully qualified types to streamline import statements and
added a method to set the action text color to the primary dark color to improve the visual appearance of the authentication activity
added a new ` find ` method with ` ComparableField ` and implemented it in ` StreamSupplierComponent ` , ` AbstractManager ` , and
rename methods from ` addTestStepsForPickleSteps ` and ` getBeforeStepForAfterHooks ` to ` createTestStepsForPick
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests `
updated the ` startDriver ` method to include a ` cancelClient ` method in ` RpcServer ` and modified its implementation in ` SparkClient
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller ` ,
initialize lastDisplayedUser to Optional . empty ( ) to ensure lastDisplayedUser has a default value to avoid null reference issues
added a new method ` findAll ` to the ` QueryDslMongoRepository ` class and updated the ` createQueryFor ` method to accept an
added null checks before stopping consensus instances in DataNode . java to prevent potential NullPointerExceptions during consensus operations
planner - 1642 : make defaultplannerbenchmark more resilient to failure .
add xread ( ) and xreadgroup ( ) method to pipeline , use redis client . xread ( ) instead .
updated methods in LinkedBufferInput and StreamInput classes for consistency and clarity to improve code readability and maintain consistency in naming conventions
added WebSecurityCustomizer to CasWebAppSecurityConfiguration and refactored HttpSecurity configuration in CasWebSecurityConfigurerAdapter to improve web
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to the ` TestJdbcWithDBTokenStore ` class to
added a method to register content providers in ShadowContentResolver and modified ContentProviderController to handle ProviderInfo to improve the registration process for content providers
updated the type of the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to ensure compatibility with the new
added a method to set keep alive configuration in SingleConnectionManager to enhance connection management by allowing configurable keep - alive behavior
[ java ] rename flow control supplier to flow control supplier in driverconductor .
g3d : fix npe on locus with no point in 2d
added error handling for IOException in HttpServerTestBase and modified WebSocket connection logic in WebSocketGeneratorD13 to improve robustness and ensure proper resource management
updated FirefoxDriver initialization and added screenshot functionality in HttpWebClient . java to enhance flexibility in handling different selenium driver types and improve screenshot management
replaced JUnit ' s ` assertEquals ` with AssertJ ' s ` assertThat ` in multiple test files to improve assertion readability
remove trufflelanguage . getcontextreference ( ) , deprecate .
modified exception handling in StubberImpl and added tests for UninstantiableException in StubbingWithBadThrowablesTest to improve robustness
updated exception handling in Actor and Group classes to improve clarity of error messages to enhance code readability and provide clearer error messaging for invalid
added location permission handling in LocationPickerActivity and modified camera position animation in ContributionController to enhance user experience by enabling or disabling location
http : / / issues . apache . org / jira / browse / amq - 4898 - add a test case for http
added CookieSpec import and set cookie specification to STANDARD in GetHTTP . java to ensure consistent cookie handling in HTTP requests
refactor intersection logic in Intersector . java to use overlap method to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to optimize audio processing by using a more
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel classes to enhance monitoring capabilities by allowing users to access monitoring URLs
[ hotfix ] [ config ] remove ` ` kubernetes . service . create - timeout ' ' config option
added a switch statement to handle different place descriptions in NearbyListFragment to set appropriate icon resources based on the place ' s description
added a null check for the type ' s package before processing its package to avoid potential NullPointerExceptions during package scanning
added a new file ` PrintInlining . java ` containing a main method that prints " Passed " to indicate a successful execution of
fix ( javadoc ) : check for nested brace in javadoc tag ( # 3353 )
[ java ] remove unused publicationid and publicationstarttermid from archive test .
updated EdgeDataTable to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) to ensure the model uses both edges and meta edges
removed unnecessary import of ClassPathResource and ResourceLoader in SpringResourceProperties and PasswordManagementConfiguration to streamline dependencies and improve code clarity
updated logging statements from ` % d ` to ` % f ` for playback speed in VideoManager . java to improve clarity of log messages
do n ' t send muc room removal event when cluster start
change the variable name from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to improve clarity by accurately reflecting the
added flipY , generateMips , and key settings in TextureHelper . java to enhance texture functionality by enabling mip generation and
refactor PythonDslProjectBuildFileParser to utilize CloseRecordingProjectBuildFileParserDecorator and update event handling to improve resource management and
[ j2kt ] add support for librarynormalizationpass in j2cl transpiler
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory `
[ hotfix ] [ test ] make memorysegment visible for test
added @ Temporal annotation to ConsoleSessionVO class to ensure proper handling of timestamps in session management
added new files Hbs . java and HbsTest . java to implement a template engine for Handlebars in the application
updated chat message handling to check for null or empty hints and refactored message setup logic to improve code readability and maintainability by redu
replaced keySet ( ) with values ( ) for each measurement in headerNameMap to improve performance by avoiding unnecessary iteration
simonstewart : move the confirm test to alerttest . waituntildialogappears ( ) .
added a null return for cases with less than 2 distinct columns in ReduceSinkDeDuplication . java to ensure that a null return is
updated MiscUtils . java to improve handling of jar file paths and added checks to enhance robustness by preventing duplicate entries in the manifest
regenerate client with updated copyright year ( # 4382 )
updated the artifact ID for the WebSocket server and client from " websocket - server " and " websocket - client " to " jetty - websocket
change return type of identity . getAttributes ( ) from unmodifiableMap to unmodifiableMap in SAMLAuthenticatedUser . java to ensure immutability of the
fix issue with setmodified ( ) not be call when change state of sketch .
replaced instances of creating new Double and Float with direct return statements across multiple classes to simplify code and improve performance by eliminating unnecessary object
replaced ` getDate ( ) ` with ` getTimestamp ( ) ` in ` JdbcDataSource . java ` to ensure the correct timestamp is used for
added a check for " javax . naming . Context " in the JndiTreeReport class to ensure proper handling of context binding in addition to
refactor database option handling in StorageUtils . java and improve logging format in Manager . java to enhance code readability and improve logging clarity
changed edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual
removed the FLAG _ SLIPPERY constant from StatusBarTouchController . java and added an import for FLAG _ SLIPPER
fix truffleconstantfieldprovider . getarraydimension ( ) to work with array field .
added Google Drive folder path preference functionality and updated related classes to utilize this new folder path to improve user experience by allowing dynamic folder path
simonstewart : add an option to shuffle suggestion in the av
added @ Nullable annotation to multiple assertThat methods in Truth . java to enhance null safety and improve code clarity
update return statements in ArrayUtil . java for better clarity to improve readability and maintainability of the code logic
added a new test file ` ApiExceptionTest . java ` and modified ` ClassInstrumentor . java ` to check if constructors can be instrumented
added a synchronized multimap for waiting for Anticompaction in StreamInManager and updated related classes accordingly to manage and manage the state of
added a boolean field ` isKeyguardSecure ` and its getter / setter methods in ` ShadowKeyguardManager ` , and refactored
added serialVersionUID fields to StringDialog . java to ensure compatibility during serialization and deserialization processes
updated string handling in GrblUtils to replace ' > ' with ' > ' and added a conditional check for the length of overrideParts
updated the method name from assertEmptyThrowsMutipleFailureExceptionForManyThrowables to assertEmptyThrowsMultipleFailureExceptionForManyThrowables to improve cl
modified the checkDrained ( ) method in AsyncFileImpl . java and added a new test in FileSystemTest . java to ensure that
reduced LIGHTS _ NUM and LIGHTS _ INTESITY from 4 to 8 and changed shader parameters from " light " to
replaced instances of ` TestProjectFilesystems ` with ` workspace . getProjectFileSystem ( ) ` in multiple integration test classes to utilize the
replaced instances of ` String ` with ` PathWithLines ` in ` RuntimeOptions ` and ` CucumberFeature ` classes to improve
refactor Gson , JsonArray , and JsonObject classes to improve code organization and readability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to address issue 2022 . 1 related to null handling
added a call to close the ParcelFileDescriptor using Shadow ' s directlyOn method to ensure proper resource management by closing the ParcelFile
added a method to reset the prefix index in the BasisLibrary class and replaced it with a thread - local implementation in BasisLibrary to
added logging configuration for HTTP connection in TestDistributedStatsComponentCardinality . java to facilitate debugging by indicating that the HttpConnection is
added ` throwIfImmutable ( ) ` method calls to ` IntList . java ` to ensure that modifications to ` IntList ` are not
added @ NotNull annotation to the onApplicationEvent method in GrpcServerRunner . java and modified the GrpcClientBuilder to use PluginEnum
move graal demo to jline - demo - graal
invalidate the function array when an insight do n ' t invalidate it .
added platform - specific handling for writing manifest files in GenerateManifestStep . java to ensure proper formatting of XML files on Windows to improve compatibility and
fix for sf bug 3531161 . never _ redundant _ nullcheck _ of _ nonnull _ value .
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry . java and modified null checks in ThingResource . java to improve null safety and
change return type of createcancellationexception from throwable to runtimeexception
pdfbox - 4892 : do n ' t init the crop box when there be no crop
refactor ManagerBase class to improve code structure to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable the enabling of
refactor FragmentTestUtil to use Robolectric ' s ActivityController for creating and resuming FragmentActivity to improve test reliability by
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ( ) ` in `
rename classes from ` ABCase ` to ` TestABCase ` across multiple files to clarify the purpose of the class for testing purposes
renamed the parameter ` num ` to ` value ` in the ` saveEnergyPriceHistoryDone ` method and added a null check for
refactor handler initialization in OpenRocketViewer to use doSimsChanged ( ) method to improve responsiveness by ensuring simulations are
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to implement a recipe for changing Maven dependency groupId and artifactId to enhance the
refactor file path handling in IndexingJob . java and add segment validation in SegmentChecker . java to improve code clarity and ensure only
updated condition in GCObjectHeapIteratorAddressOrderedList _ V1 . java to use ' lte ' instead of ' lt ' to ensure
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source path mappings to improve efficiency and error handling during header processing
rename JsonExamples class to Examples and update package - info . java file to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java to improve traceability and debugging of the extraction process
refactor FindsByLinkText class implementation to improve code readability and maintainability
added a new file ` Main . java ` containing a main method that prints a message about the Java oop entry point hit to provide a
fix sipregistration wizard so that we do n ' t have to throw an operationfailedexception in sipregistrar .
removed duplicate continue statements in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unnecessary
refactor dependency resolution logic to use memoization for better performance to improve code readability and reduce boilerplate
replaced the count method from ` remoteContainsResults . stream ( ) . count ( ) ` to ` remoteContainsResults . size ( )
added content encoding handling in ExtractingDocumentLoader to ensure proper content encoding is included in metadata
updated SQL insert and select statements in DatabaseConfig . java to use prepared statements instead of string concatenation to improve code readability and maintainability by
added a check to return early if the slot is - 1 in WindowListener . java to prevent further processing when the slot is not available
add -- ignore - transitive - repositories option to maven execution request
removed duplicate injection of BackgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating redundancy
updated ` ColorsActivity ` to extend ` AppCompatActivity ` instead of ` Activity ` to enhance compatibility with modern Android features and improve app
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when selection is null
added a condition to break the loop if the index and matcher starts at the end of the string to improve performance by avoiding unnecessary processing when
updated the integration test annotation to include a port configuration to ensure the integration test runs with a specific port of zero
added a new user - defined function " reverse " in FunctionRegistry and implemented its functionality in UDFReverse to support reverse operations in Hive queries
updated context path retrieval methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity and consistency in
refactor Tracer class implementation to improve code readability and maintainability
[ hotfix ] [ test ] disable flaky rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java to improve code readability and maintainability
added synchronization and buffer clearing functionality in StarTreeRecordStoreCircularBufferImpl . java and a corresponding test in TestStarTreeRecordStoreCircular
updated the forecast time values for minutes , hours , and days in OpenWeatherMapOneCallHandler . java to improve the accuracy of forecast
added timeout annotations and updated fetch time handling in AbstractPageOperationTemplateTest . java to improve test reliability by allowing more time for fetch operations
updated RemoteTargetGluer and FloatingHeaderView classes to improve handling of split task IDs and enhance user experience with a smoother transition
updated ` CucumberPropertiesParser ` to use ` splitAndThenFlatMap ` and modified the return type of ` parseRerunFile
added multiple item to the creative tab in the BotaniaCreativeTab . java file to enhance the functionality and usability of the creative tab
updated assertion statements in TestRadioButtons . java for consistency to improve readability and maintainability of the test code
added functionality to track uncompressed and compressed file sizes in RCFileCat . java and implemented a method to get the number of rows in RCFile
updated multiple Java classes related to clustering and consensus to improve code organization and maintainability
added checkndarray ( ) method in jnautils to prevent npes from be close
[ hotfix ] [ javadoc ] fix typo in blobserver
fixed bug 1382727 - unusedprivatemethod no long report false positive for anonymous inner class
rename lexicalScope to lexScope for consistency and clarity to improve code readability and maintainability by using a more descriptive variable name
added a test method ` testAutoStartup ` to ` InboundChannelAdapterParserTests ` to ensure that the ` SftpInboundAutost
added methods to retrieve level , root , and itemBoundables in Node , Quadtree , AbstractNode , AbstractSTRtree , and STRtree
modified version parsing logic to handle both digit and non - digit version numbers to ensure correct parsing of version strings based on the version number
added a check for empty tags before adding them to the ActiveItem and changed log level from warn to debug to improve robustness by avoiding
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a new ` fromDateTime ` method in ` DateTime
refactor disassemble method to use a dedicated dedicated method for caching to improve code readability and maintainability by reducing dependency on SharedSession
refactor Log4j2ConfiguratorServlet for improved logging functionality to enhance performance and maintainability of the logging framework
replaced multiple instances of creating HiveException and AuthorizationException with a single return statement to simplify the code and improve readability by eliminating
updated the command prefix handling in CGoCompileStep . java and added a new test for C++ prebuilt dependencies in GoBinaryIntegrationTest
fix : add @ buildable annotation to sundr builder
removed the @ Override annotation from the Only class to improve code clarity and maintainability
added a constant for the socket timeout in HttpClientFactory to set a default value of 3 hours to improve connection reliability by allowing more time for
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
simonstewart : add support for enable all but trace method - omissions
added the @ Singleton annotation to the ApplicationController class to ensure that the ApplicationController is only instantiated once
updated username retrieval logic in ShareActivity to use OwnCloudAccount and handle potential exceptions to improve user experience by providing a default username based on
added import for BatchStatus and implemented a test for resuming a paused job instance in SimpleJobLauncherTests to ensure proper handling of paused job
added null check for cacheConfig in HttpSyncDataService . java and refactored data refresh logic in DataRefreshFactory . java to improve
simonstewart : make dockersession public to allow access to docker session
fix compilationunitcontext to use default package name instead of java . lang .
pdfbox - 2468 : switch fdfdocument to nonsequentialparser , enable fdf support within nonsequentialparser
mahout - 1212 : fix checkstyle violation in testdistributedlanczossolvercli . java
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate easier debugging
portportletemplatemaptest : fix test to work with java 11
added tests for handling nested bean lists with null values in BeanTableSchema to ensure correct behavior of nested bean lists with null values
added a new interface ` RedissonAutoConfigurationCustomizer ` and integrated it into ` RedissonAutoConfiguration ` to enable customization of Redis
fix an off - by - one error in the indicator . todouble ( ) method .
added methods to exec containers with user credentials in ContainerState and ExecInContainerPattern classes to enhance user experience by allowing users to launch containers with
replaced direct assignment of ` interestedInByteMessages ` and ` interestedInTextMessages ` with a single assignment for both ` interestedInByte
added unit tests for semantic graph attributes in SemgrexTest . java to ensure correct handling of different attribute patterns in the semantic graph
added a broadcast intent to clear pull unread notifications to enhance user experience by removing stale notifications
removed conditional checks for Android SDK version in TouchImageView . java to simplify the code for better readability and maintainability
added flush ( ) and destroy ( ) method to defaultprofilevalidationsupport so that it do n ' t interfere with test
camel - 15836 : camel - core - optimize the startup process of camel context
added FloatingActionButton functionality to manage the visibility and interaction of the main FAB menu to enhance user experience by providing quick access to the
added support for parsing inline strings in the ToDateTokenizer class and updated related tests to enhance date parsing functionality and ensure proper handling of special characters
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated error messages in multiple files to include " toppniv " and " token " instead of " tecken " to improve clarity
added a check to ensure the server is checked before binding to the operations service to improve error handling by preventing auto - check when the server
updated the Position constructor to use getEndLine ( ) instead of getEndColumn ( ) to ensure accurate position representation for node boundaries
added waitFor method calls for processor , outputProcessor , and errorProcessor in CxxPreprocessAndCompileStep . java and managedThread . java
added a new boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented the ` mergePersonAttributes ` method in `
make mapcontainer . getapproximessizemaxsize ( ) public and remove checkifloaded ( ) .
added support for enabling SSL protocols in the Netty web server to enable configurable SSL protocols for improved security
replaced ` AtomicBoolean ` with ` AtomicReference ` for thread - safe setting of a ` T ` instance to improve thread - safety and
updated the method to handle null property cases in QueryDslMongoRepository and added a new test case in SpringDataMongodbSerializerUnitTests
updated assertions for RoundRectBorder in RoundRectBorderTest . java to clarify equality checks for RoundRectBorder to ensure correct behavior of
added a check to ensure the node ' s genesis configuration is not empty before proceeding with node verification to prevent errors when attempting to verify an
remove ` ` parallel ' ' test , it ' s no longer use .
updated CountDownLatch and futures initialization to use ' min ' instead of ' cnt ' and added a validation check for the sign length to ensure
updated conditional check from ' if ( ! windows ) ' to ' if ( ! windows ) ' in ProcessInformationsPanel . java to ensure
refactor methods in MoreCollectors for improved clarity and consistency to enhance code readability and maintainability by standardizing method names
updated BitmexStreamingExchange , BitmexStreamingMarketDataService , BitmexStreamingMarketDataService , Bitmex
added validation checks for latitude and longitude in GeoPointField . java and corresponding test cases in TestGeoPointField . java to ensure that invalid
refactor workflow file handling methods in OozieProxyImpersonator and WorkflowFilesService to improve clarity and consistency in naming conventions
refactor ResponderId class to improve code structure to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to include a ` withDependents ` parameter to control the behavior of the ` getTableDocument ` method to
added a check to reset the number of consecutive uploads without coordinates in UploadActivity and updated related logic in UploadPresenter to improve user experience by prevent
added caching mechanism for profile data retrieval in ProfileResources . java and modified profile data retrieval logic to improve performance by reducing redundant data retrieval and
refactor JpaMetamodelEntityInformation to improve property value extraction and handling for nested entity information to enhance code clarity and maintainability while
phoenix - 5287 : upgrade should bootstrap last ddl timestamp for index and table ( jonathan )
move default exception mapper from dropwizardresourcelocator to jersey .
added a boolean parameter to the method call in EntryEditor . java to control the behavior of the storeFieldAction functionality
updated the ` nativeCreateNSWindow ` method to include an ` owner ` parameter to enhance window management by associating the NS window with an
updated SQL command from ` FILE _ REMOTE _ ID ` to ` FILE _ TABLE _ NAME ` in ` FileContentProvider . java ` to
added a new " STOCK " tile with animated and animated options to the Tile class to enhance the visual appearance of the Stock
fixed - rbucket . set ( ) and rbucket . get ( ) method do n ' t work correctly if codec be set . #
add @ detectorundertest ( findunrelatedtypesingenericcontainer ) to detect unrelated type in generic container .
refactor back animation handling in LauncherBackAnimationController to utilize BackProgressAnimator for better state management to improve animation responsiveness and
modified the ` _ initialPageNo ` variable to be non - final and added logic to adjust the content limits based on the initial page number
fix ( jedis ) : increase total operation to 100k
updated the comment parsing logic in FormattedSqlChangeLogParser to correctly process and set comments based on the group count to enhance change log parsing
replaced the instantiation of ` JarArchiver ` with a direct assignment in ` MavenArchiver ` and set it in ` AbstractJarM
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing more specific
simplified conditional checks in TSServiceImpl . java and added a new multiAggregationTest method in DaemonTest . java to improve code read
added input validation for UNSIGNED _ BYTE and RGBA types in GwtGL20 . java to ensure compatibility with GWT backend and improve error handling
updated test method names and added a new debug info test in OutputMemoryTest . java , and refactored method invocation in PrintR .
replaced UnmodifiableClassException with a more general Exception handling in InlineBytecodeGenerator . java to improve error handling and provide clearer error
add trace for class initialization trace
updated parameter name from queryLevelTimeoutMs to queryTimeoutMs in BaseBrokerRequestHandler . java to improve clarity and consistency in parameter naming
replaced Google Commons Cache with Caffeine Cache for loading topic route data to improve performance and maintainability by utilizing a more
mbtiles : make data source read - only by default
updated the regex pattern for invalid source and target release in FindBuildToolFailures . java and added a fatal error message in FailureLogAnalyzerTest
updated URI construction in DetailFragment . java to check for availability before creating a location intent to ensure proper URI formatting and avoid potential null pointer exceptions
added a null check for the ` getInheritedParameterContexts ( ) ` method in ` StandardParameterContextDAO . java ` to avoid potential
refactor ClassLoader class to improve code readability to enhance maintainability and facilitate future updates
added origin response headers to ProxyRequestHelper and its corresponding test to ensure correct handling of response headers in the proxy request processing
added a new ProfileSettingDrawerItem instance to GpsMainActivity to enhance user experience by providing a visual representation of profile settings
added support for XML validation in multiple Java files to enable dynamic configuration of XML validation behavior based on application context
simonstewart : fix the firefox driver to work with the firefox driver
modified fetch size handling in IoTDBStatement to allow maximum rows to be specified to improve query performance by limiting the number of rows processed
refactor ` isCountOptimizable ` and ` isCountOptimizable ` methods to ` allActionsAreOptimizableFilters ` for clarity
added node and mouse event handling for node and mouse click events in StandardVizEventManager to enhance user interaction by enabling node and mouse
refactoring - extract to method to make intention clearer , remove unnecessary integer . value
[ drools - 7 ] add getter / setter for xorgroup in terminalnode
removed redundant methods ` getHeight ( ) ` and ` getWidth ( ) ` from ` LCDUIImageMonochromeBitmapSource ` to stream
refactor SourcePathResolver to use helper methods for path resolution to improve code readability and maintainability by reducing duplication
fix ( dstu2 ) : add attribute name and value to dstu2 attribute
modified the ` changeSchemeIfIsWebSocketUpgrade ` method to check for encoded URLs and updated the URI building logic to ensure proper handling of encoded
rename test suite to be consistent with other test suite
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to improve code readability and maintainability by encapsulating platform retrieval
added imports for ` IndexReader ` , ` Searchable ` , and ` Similarity ` in multiple Java files to utilize the Lucene
added null check for current node in ConcurrentLinkedStack and refactored test methods in ConcurrentLinkedStackTest to improve robustness and clarity
added methods ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` to ` BinaryHeapQueueTest ` and ` BaseQueue
added null check for mDirectories before initializing mDirs to prevent potential NullPointerException when mDirectories is null
updated gesture handling logic in RecentsView . java to check if overview state is enabled and first layout is not active to improve user experience
added multiple package - info . java files for various Lucene packages to provide package - level documentation for better code organization and clarity
added a line to set the text of the visible auto leveler in AutoLevelerTopComponent to improve user experience by providing a localized text
added post - optimize callbacks in DirectUpdateHandler and DirectUpdateHandler2 , and implemented post - optimize functionality in UpdateHandler to enhance the optimization
updated the Inflater instantiation and variable handling in CompressionMode . java to set a dummy byte to zero to ensure proper handling of compressed data
removed the check for user data in Shaderc . java to streamline the shader processing process by eliminating unnecessary checks
added a check for local meta store in the retry limit condition to ensure retries are only attempted when the local meta store is active
do n ' t log connectioncloseexception and timeoutexception in helios solo log service
refactor Subject class to improve code readability to enhance maintainability and facilitate future updates
add weak and STRONG reference type to the typeMap map ( # 2598 )
updated colorDistance calculation to use absolute values and added minColorDistance assignment in HSSFPalette . java to improve accuracy of color distance calculations
doc : fix broken link in license year
danielwagnerhall : fix elementfindingtest . testfindelementsbynumericid and elementfindingmultipleelementsby
added a flags parameter to the registration methods in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation classes to enhance flexibility by allowing specification
update ffmpegtest to use mockito instead of mockito
refactor OggInputStream and OpenALMusic classes to manage previous input streams to ensure proper resource management and avoid potential memory leaks
added a constant for a null response response message and updated the failureMessage assignment to use this constant to improve code readability and maintainability by
[ te ] fix anomalies when there be no anomaly
refactor Toast handling in BaseActivity and DetailActivity to use a dedicated showToast method to improve code readability and maintainability by
updated the method call in TracingFeignClient to use the delegate ' s HTTP method and request template to enhance request creation by incorpor
added name validation and refactored LDAP referral handling in LDAPCertStore . java to improve robustness by ensuring valid names and referr
refactor code to encapsulate the retain logic into a separate method ` retain ` to improve code readability and maintainability by reducing duplication
rename ` AdapterViewTest ` to ` ListViewTest ` and add a new test for item click event handling to improve clarity and ensure
[ hotfix ] [ test ] use classrule instead of setup in checkpointfailuremanageritcase
remove itemuiprovider since it be no longer use .
added method to set and get the selected object in the sipcommselector
added JUnit @ Isolated annotation to the FileSystemPool method in MetaInfConfigurationTest . java to ensure proper access to the static method of
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to set the server ' s host to ensure the server connects to the
updated token validity settings for client registration based on heart mode to improve token management for different grant types in heart mode
added a CloverInstrumentationFilter class to determine if a class is a candidate class and updated the filter in SplitLogCounters to enhance class
added support for Smartmi Evaporative Humidifier in MiIoDevices . java and updated comment in ReadmeHelper .
fix break - to - break not break if mining duration be less than cot _ inf
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari - 20663 . ambari should log a warning if ambari be not able to manage the repository list ( dlysn
modify the return condition in the IntHashSet class to use a logical OR instead of logical AND to improve clarity and correctness of the return
added java . io . Serializable to the RuleAdministrator class to enable serialization support for RuleAdministrator instances
updated ` CrossOriginFilter ` to use ` Set ` for allowed origin and timing origin patterns instead of ` List ` and ` List ` to
updated test cases in BaseG3dHudTest . java and NewModelTest . java to reflect new model features and improvements
added error handling for solidified position updates in Manager . java to ensure robustness by logging errors and preventing invalid updates
hbase - 26400 fix npe in execresult . getclass ( ) when value be null
added a new method ` hasAccess ` and modified error handling for unauthorized users in ` HttpServer . java ` to improve access control checks and enhance
replaced the ` writeTo ` method with ` getStubClassBytes ` in ` ClassMirror ` and refactored the ` StubJar `
added functionality to display the share internal link text based on whether the file is a folder or a file to improve user experience by providing clearer
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent string formatting across different locales
change the condition from checking if the day is SATURDAY equal to checking if the day is SATURDAY is not equal to
refactor input hiding logic in AllAppsContainerView and log IME events in LauncherAllAppsContainerView to improve user experience by
[ ci ] use in - memory event storage in test
refactor BsdFileStore to use BsdNativeDispatcher for retrieving the mount name to improve performance by leveraging BsdNativeDispatcher
add test case for issue # 1599
added x , y , and z parameters to the spawn command in SpawnCommand . java to enhance command functionality by allowing additional parameters for spawn
added a constant MIN _ CONTENT _ DIMEN and refactored methods to use this constant to improve code readability and maintainability by
remove debug scope from hotspotcompilertest and make graph final
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check classes to the failedChecks list and modified the addColumnsToUpgradeTable method in UpgradeCatalog280 to improve error handling and
refactor Environment class to improve code readability to enhance maintainability and facilitate future updates
added LuceneTestCase import and annotation to RecoveryAfterSoftCommitTest . java to address a known issue related to SOLR - 7421
updated home path construction in CodenameOneImplementation . java and removed warnings in HashtableContent . java to ensure proper path formatting and improve error
changed the flag from FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS
refactored resource access in LiquibaseEntityResolver and updated XMLChangeLogSAXParser to use CompositeResourceAccessor to improve resource
added import for Security and set TLS disabled algorithms property to an empty string in ComHostnameVerifier and JavaxHostnameVerifier classes to ensure that
updated CxxDeps to use ` CxxDeps . of ( ) ` instead of ` CxxDeps . EMPTY ` to improve immut
renamed expectedDirectory and actualDirectory to expectedStubDirectory and actualFullDirectory , and updated related references to clarify the purpose of the
updated the visibility of the resizeThreshold variable in Int2ObjectHashMap . java to ensure proper initialization of the resizeThreshold variable
updated folder name suggestion logic to check if the title is empty before setting the hint to improve user experience by providing a clear hint when the title
updated test cases to include " uaa " as a parameter in loadClientByClientId method calls to ensure the test uses the correct client ID
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to these methods for better encapsulation
updated string concatenation to return - 1 for closed state in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to improve clarity of
refactor MimetypeIconUtil class for improved readability to enhance maintainability and facilitate future updates
renamed method ` supportsViewFor ` to ` supportsViewsFor ` across multiple provider classes to improve clarity and consistency in naming conventions
added a new test method ` negateInstanceOf ` in ` UnnecessaryParenthesesTest . java ` and updated the ` UnwrapParenthes
added a ` teleport ` method to the ` Location ` class and modified the way ` bukkitLocation ` is instantiated to enable teleportation
replaced custom Base64 encoding implementation with Spring ' s built - in Base64Utils for better URL safety to enhance security by ensuring proper URL
updated imports and modified statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the annotation
added a null check for the ' getId ( ) ' method in ObjectIdentityImpl to ensure that the ' getId ( ) ' method returns a
refactor the handling of retweeter and muffled tweet logic in TimeLineCursorAdapter . java to improve clarity and functionality of
updated UserProfileActivity to conditionally display the verified text based on the addon theme settings to enhance user experience by allowing customization of verification text
remove unnecessary static instance of abucoinsdigest .
camel - 14850 : camel - mongo - allow to configure mongo connection via spring boot configurer
added a sourceIndex attribute to the AttributeMapping class and updated related classes to utilize it to enhance attribute mapping functionality by allowing dynamic source index
add log when hive _ corrupted _ column _ stats be hit when alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 6641 ] escape email in geoserver home page ( # 5649 )
fix ( modulemanagerimpl ) : do n ' t enrich the reflections with the subsystem .
updated JoinModeller to use the number of features instead of a hardcoded value to improve clarity and maintainability of the code by using
added a check to ensure the command string is not empty before processing it to prevent potential errors when processing invalid input
added debug and trace logging checks before logging messages in SingleNodeKafkaResumeStrategy . java to improve performance by avoiding unnecessary logging when debug
replaced hardcoded constant ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET
removed deprecated ' automatic ' separation warnings and updated motor event handling in multiple classes to improve code clarity and ensure proper initialization of motor instances
tika - 1343 -- improve error message when ascii name be the same as the unicode name length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to temporarily disable tests on JDK versions 1.8 and
refactor lock file creation into a separate method ` createLockFile ( ) ` in ` MavenDependencyResolver ` to improve code readability and
updated shared preferences from version 5.3 to version 5.3 . 1 and added multiple sync interval entries to ensure consistent synchronization settings across different
added a check to return null if the username is the FEDERATION _ USER to ensure that the authentication process does not attempt to authenticate
do n ' t convert truffleobject to truffleobject if the parameter type be not a truffleobject
refactor JakartaClientShutdownWithServerWebAppTest to use toList ( ) instead of collect ( Collectors . toList ( ) )
use warnstatus instead of errorstatus in logbackvalve
refactor Collection and Map classes to improve code readability and maintainability
removed the import of the Version class from CreateIndexTask . java to streamline the code by eliminating unnecessary dependencies
added logic to handle missing primary key changes for Oracle and AbstractDb2 databases to ensure correct handling of missing changes in different database types
added ` MetastoreException ` to exception handling in ` MsckOperation ` and introduced a new test for invalid partition names in ` Test
[ hotfix ] [ kafka ] retry commit if committable be already commit
[ rocketmq - 2590 ] add receipthandleprocessor to forwardmessagetodlqactivity ( # 5371 )
added support for a list of services in DockerComposeContainer and created a corresponding test class for its functionality to enhance the DockerComposeContainer to allow
fix : use collectionutil . copyset ( ) to avoid concurrentmodificationexception
removed unused imports and simplified XML processing in FeedParser . java to streamline XML processing and improve code readability
removed conditional check for ` AppsCustomizePagedView . DISABLE _ ALL _ APPS ` in ` Launcher . java `
changed data types of several variables and methods from int to double in MeterRealtimeBodyDataDTO . java to allow for more precise energy calculations
added a new file ` bug4150029 . java ` that implements a JApplet with a file chooser to create a temporary directory
added a boolean flag ` isSparkConfigUpdated ` and modified methods in ` HiveConf ` , ` SparkClient ` , and ` SparkSession
added ` getLongPressIndicator ` method to ` AppIcon ` and ` AppIconMenuItem ` classes and modified ` Launchable ` and ` Workspace
fix wkbwriter to handle empty polygon
refactor UnflavoredBuildTarget creation to use a builder pattern to improve code readability and maintainability by using a standardized builder
added a new file MultiplyByMaxInt . java that implements a method for multiplying an integer by maximum to implement a test for integer
updated file display behavior in OCFileListFragment to enable the drawer indicator when the current file is active to improve user experience by ensuring the navigation
removed unused imports from TestRAMDirectory . java to streamline the code by eliminating unnecessary dependencies
replaced instances of FixedBitSet with BitSet in Automaton . java and Operations . java to simplify code and improve performance by using a
danielwagnerhall : danielwagnerhall : use daniel ' s message instead of string
replaced instances of ` @ ContainerFor ( AC ) ` with ` @ Repeatable ( AC ) ` in multiple test files to align with
updated the console message to include the duration of the file being sent to improve clarity by indicating the duration of the file being sent
updated class reference in OpenMBeanAttributeInfoSupport to use safeGetClassName ( ) and added package access check to enhance security by ensuring proper package
fix readresponseresolver to respect the number of replica
update freeSize calculation to use a rounded value to optimize memory usage for improved performance
refactor touch handling in AnyKeyboardView and AnyKeyboardViewBase to accept MotionEvent as a parameter to improve touch event management and enhance touch
updated SslContextFactory instantiation in HttpServer , RESTServer , and ThriftServer classes to use the Server class instead of the default SslContextFactory to improve compatibility
removed the ` PrivilegedSocket ` class and simplified the connection initialization in ` PG _ Stream . java ` to simplify code and improve readability by
updated InputTest . java for improved test coverage to enhance reliability of input validation tests
updated methods in AbsSwipeUpHandler to accept a Runnable parameter for the finishRecentsAnimationOnTasksAppeared ( ) method to
added a null check for curLatLng before adding the current location marker to prevent potential NullPointerExceptions when curLatLng is null
updated the removeSecret method to retrieve client ID from clientDetailsService instead of the client object directly to ensure the correct client ID is used for
updated SQL query formatting from \ n to \ n and changed test setup method to use @ BeforeEach instead of @ BeforeAll to improve test
fix for http : / / issues . apache . org / activemq / browse / amq - 2372 - wait for the
added tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure proper error handling for unknown column and row key scenarios
added null checks and improved stream filtering logic in ShenyuTrieRuleListener . java and ZookeeperSyncDataService . java to
add clone field to lightcontrol so that it can be clone .
updated the handling of the ` _ hideStacks ` variable and improved formatting in ` StdErrLog . java ` to enhance code clarity
refactor HttpSessionEventPublisher to use a dedicated method for context management to improve code clarity and ensure context is not null before publishing events
added a semantic exception to indicate that the CREATE CQ statement has changed from v0.14 to ensure compatibility with the new CQ syntax
[ hotfix ] fix checkstyle violation in flinkiotdbsink
modified custom simplification logic in CanonicalizerPhase . java to include a counter to track the number of simplified nodes to improve clarity and
updated the fileIcon drawable setting to include a context parameter to ensure the correct context is used for file type icon display
updated ` readIdentifierWithSchema ( ) ` to use ` schema . getName ( ) ` instead of ` schema . getName ( ) ` to
[ beam - 13434 ] support timestamp in bigquery reader ( # 13434 )
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding tests in ` ViewGroupTest ` to
replaced explicit type casting with Enumeration < String > in multiple Java files to enhance type safety and eliminate unchecked cast warnings
updated imports in IndexTool and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants and modified enum value retrieval logic to enhance annotation handling and improve clarity in enum value retrieval
do n ' t try to load jar file if it ' s a jar .
updated CUDA constant names in cublas . java and cudnn . java from CUDNN _ PATCHLEVEL to CUDA _ PATCHLEVEL and
refactor ResourceLoader to support multiple layout directories to improve resource loading flexibility by allowing multiple layout directories
fix redstone torch not work with simple attachable material data . close # 143
added support for VARBINARY case in RelToStageConverter to enhance type handling for binary data processing
removed unused import of DateHelper from NoteAdapter . java to streamline dependencies and improve code clarity
updated backup handling logic to differentiate between success and failure states to improve user experience by providing clearer feedback on backup creation success or failure
ggb - 1353 fix position of invisible element in web
simplified the creation of a temporary file in ShadowParcelFileDescriptor . java to improve code readability and maintainability by using a
replaced calls to ` getStackForThread ( ) . poll ( ) ` with ` getStackForThread ( ) . removeFirst ( ) `
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to accurately reflect the
added tests for bitwise operations in IntegerEqualsCanonicalizerTest and modified logic in IntegerEqualsNode to handle both AddNode and BinaryNode types to
added a constant STRING _ ARRAY to the TypeFactory class to provide a specific type representation for string arrays in the type system
refactor keyboard hiding logic into a separate method ` hideIme ( ) ` across multiple classes to improve code readability and maintainability
force bit density to fix network issue
updated assertions in TimelineMetricCacheSizingTest to include expected values and improved test method formatting in TimelineMetricCacheTest to enhance
add an optimization to getmaxtexturesize to optimize texture size calculation
[ java ] call trystoplogrecording ( ) before trystoprecording ( ) .
added a condition to reset startPosn if isInTransform is true to ensure startPosn is reset when processing transformations
add querycontext . isskipstartree ( ) to disable star tree by default
added a boolean flag ` lockNearbyView ` and modified the ` refreshView ` method to check if the nearby places need to be
add maptransformer . of ( map ) and maptransformer . inverse ( ) .
refactor EmeddedObjects and EmbeddedObjects classes for improved code organization to enhance maintainability and readability of the code
added ` launcherWidgetSpanInfo ` to ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` classes to manage and retrieve launcher widget span
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to utilize the new `
added methods to get and set calling UID and pid in ShadowBinder and implemented corresponding tests in ShadowBinderTest to enable proper management and resetting of
replaced the AutoValue class with a final class and modified the ExpectationFailure class to use Nullable and Objects for message and cause to improve
removed warning log for unsupported message deserialization in BitcoinSerializer . java to streamline logging by eliminating unnecessary warnings
simplified variable assignments for target dimensions and added conditional calculations for target dimensions to improve code readability and maintainability by reducing redundancy
added support for special characters ' \ t ' and ' \ n ' in Markdown rendering logic to ensure proper handling of escaped characters in Markdown output
added a neutral button to the SharePasswordDialogFragment and refactored the password sharing logic to improve code readability and maintainability
refactor MAP _ ADDRESS , UNMAP _ BUFFER , and MAP _ BUFFER to use a dedicated MappingMethods class to improve code modularity
changed access modifiers of methods and variables in AbstractAssert _ describedAs _ printed _ to _ console _ Test from public to package - private to
added new slider configuration options and updated existing keytab settings in LlapOptionsProcessor . java to enhance user experience by providing additional configuration options for
modified the tearOutGraphViewContainer method to accept a JFrame parameter and added animation handling to improve UI responsiveness during graph view
added functionality to manage and assert workspace loading state in LauncherModel . java to ensure shortcuts are added only when the workspace is fully loaded and
change data and isFinished fields in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator to be final and simplify
updated methods in IssueInterface and ValidationReport to include additional parameters for type and guid , and added a new JsonValidationReport class to enhance functionality
added a method ` safeProviderName ` to retrieve the cipher provider name and updated exception handling in ` RSAClientKeyExchange . java ` to improve
replaced instances of ` getDynamicConfiguration ( ) ` with ` getFlinkConfiguration ( ) ` across multiple files to standardize naming conventions
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity for non - critical issues
removed conditional formatting in AggregateLifeCycle . java to streamline output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to these constants from outside the class
removed the @ Ignore annotation from CovariantOverrideTest . java to indicate that it does not implement it covariant override
replaced the ` curly ` method with a ` qtype ` method and refactored related logic to improve code readability and maintainability
camel - 16462 : camel - core - optimize reloadstrategy to load route definition from xml . thanks to benjamin
set the minimum and maximum spaces of the X - axis in ScatterChart to a maximum value of 0.5 f to improve visual
modified the formatting of the " as INTERVAL " string in ExpressionStringBuilder . java to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` RecentsView ` , and
added a check for the presence of the " UTF8 " key in the properties file to ensure proper error handling when the UTF8 key is
updated print statements in TestReproduceMessage . java and modified test runner annotations in LuceneTestCase . java to improve test output cl
added event logging for long - pressing an AllApps item in StatsLogManager and updated ItemLongClickListener to log it to track user interactions
added a null check for the log variable in StoreWAL . java and created a new Issue112Test . java file with a test for
added a condition to conditionally display sector land info based on the presence of a sector preset to enhance user experience by allowing toggling of
updated generic type declarations to use wildcard generics in various classes to enhance type safety and prevent unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
updated the ` buildNearbyRandom ` method to accept a ` randomSelection ` parameter and added error handling for missing nearby random parameters to
remove temporary cache removal from server
added visibility control for SQL view and WMS layer import containers in NewLayerPage . java to improve user experience by preventing unnecessary UI elements
initialize Availability _ availability to UNAVAILABLE to ensure availability is set to UNAVAILABLE when no availability is available
updated methods in FetchInvDataMsgHandler , PbftDataSyncHandler , PeerConnection , and SyncService to use BlockCapsule instead
feat : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
replaced the boolean ` _ freeSpaceReclaimDisabled ` with an integer ` _ freeSpaceReclaimQ ` and modified its implementation to
changed KDC _ OPT _ PROXIABLE , RENEWABLE _ OK , and FORWARDABLE from public to private static final and
refactor JsonWriter initialization to improve clarity and ensure proper assignment of the writer variable
updated variable names and method calls in ProfilePager . java for consistency and clarity to improve code readability and maintain consistency in naming conventions
renamed the method ` paintBackground ` to ` paintComponentBackground ` in the ` Slider ` class to clarify the purpose of
added a method ` valueFromClassConstant ` to retrieve a value from a class constant in ` Configuration . java ` to improve flexibility in
added error logging for service initialization failure in KafkaService . java to improve debugging and error tracking during service initialization
updated the ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` set to include " usr / share / zoneinfo / tzdata "
camel - 16462 : camel - core - add auto - create channel support for message bus .
added support for keywords in the HTMLDocument class and a corresponding test case in TestDemo to enhance document indexing functionality by allowing keywords to be indexed
update SDK version check from S to R in FileUploader . java to ensure compatibility with the latest Android SDK version
added an else clause to the assignment of the _ addresses list in the MemcachedSessionDataMapFactory . java file to ensure that the _ addresses list
replace instances of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall . class
refactor Builder class to improve code structure to enhance maintainability and readability of the code
improve error message for isbn2bibtex fetcher
improve keep - alive timeout for polyglot context .
added null check for text before firing data change events to prevent potential NullPointerExceptions when text is null
simplify the sentimentmodel by add an option to make it easy to use
added line trimming in SuffixURLFilter . java to ensure leading and trailing whitespace is removed from the input line
added a check to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when the player is in the
ggb - 1353 remove register / unregister of popup in checkbox creation dialog
removed the boolean parameter from LinkedHashMapCache and BoundedLinkedHashMap constructors in CacheType . java and added statistics configuration in TCache . java to
removed unnecessary line breaks in ChannelEndPoint . java to improve code readability and maintainability
added null check for keyIndex in FixAcidKeyIndex . java and modified KeyIndexBuilder instantiation in OrcOutputFormat . java ,
added Locale import and modified exception handling in DirectUpdateHandler2 . java to ensure consistent exception handling across different locales
make store check guard optional in writenode . setstorecheckguard ( ) .
make bciblockmapping more resilient to exceptiondispatchblock
add a method to calculate the disagreement of a specific bug instance in the cloud class to improve accuracy in detecting disagreements
replaced ` BuildTarget . copyOf ( ) ` with direct assignment of ` unstrippedTarget ` and added ` @ JsonIgnore ` annotation
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and updated related methods
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` to improve clarity and
use confidenceprogressindicator instead of progressindicator in createofferview
updated HTTP header checks from " Cling / " to " UMS / " in RequestHandler , RequestHandlerV2 , and UPNPControl classes
make blockindex . iteratebpt ( ) a bit more flexible and allow for a force iteration .
added constants for message types and modified the onCreateViewHolder method to handle different message view types to improve flexibility in handling different message types
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in both LinuxLibrary . java and MacOSXLibraryDL . java
mondrian : fix an off - by - one error , a suggest by valerybokov
removed the canvas parameter from the insert and write methods in TexturePacker . java to simplify method signatures and improve code readability
replaced the getVisitors method with a default apply method in RefactorModule . java and refactored the stream processing logic in AddGrad
added methods ` getChildByName ` and ` getChildByNameRecursive ` to retrieve child elements by name to enhance functionality by allowing retrieval of child elements by
added " Content - Charset " header to HttpSolrServer and its corresponding test in BasicHttpSolrServerTest to ensure proper handling of character encoding
updated SystemUiController and AllAppsTransitionController to use SystemUiControllerFlags instead of static UI _ STATE _ ALLAPPS to improve UI
removed the private ClientConfigurationService field from IntrospectingTokenService to streamline the code by eliminating unnecessary dependencies
updated exception message format in HiveRecordSet . java to provide clearer context for the error when attempting to open a Hive split
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary fields
updated backup snapshot configuration from BackupSnapshotAferTakingSnapshot to BackupSnapshotAfterTakingSnapshot to clarify the purpose of the backup
added score calculation to the merge method in TextFragment . java to ensure the score does not equal the fragment ' s score
removed the private Digester field from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added validation to ensure ` maximumUnimvedStepCount ` is greater than or equal to 0 to ensure that the property ` maximumUnim
added a check to return early if there are no currently open editors to optimize performance by avoiding unnecessary processing when there are no open edit
replaced calls to ` Mockito . verify ( ) ` with ` Mockito . verify ( ) ` in ` BDDMockito .
updated ClassLoader initialization to use PathScanner ' s class loader instead of the current thread ' s context class loader to ensure compatibility with the current thread
updated the ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a direct string to enable asynchronous execution of the
make abstractsplitbraintest . testsplitbrainprotectiontest able to run in parallel
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check if LogoutConfigurer is not null before adding the logout filter to
[ giac ] do n ' t use degree ( ) in gbasis ( ) .
added logging consumer functionality to DockerComposeContainer and created a corresponding test class to enhance logging capabilities for DockerCompose containers and ensure proper handling of logs
updated the type parameter of the testMapping method from ` Class < ? > ` to ` Class < ? > ` to improve type safety and
removed unnecessary import statements from AmbariMetaInfoTest . java to streamline code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to facilitate the creation of ` ThrowingSupplier
replaced ` break ` statement with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure the method returns a boolean value
camel - 18131 fixed the issue that camel - platform - http do n ' t properly handle the body of type buffer
added methods to handle platform - specific path separators in MorePaths . java and updated references in CopyStep . java and AarWithLibs
added a null check before processing parameters in AuditEvent . java to avoid potential NullPointerException when authorizationContext is null
replaced the loadLibraryOnlyIfPresent check with a new throwExceptionIfFail method to enhance error handling by verifying if the library file exists
updated SDK version from " 4611349 " to " 4514284 " and added new test cases in ShadowTextToSpeechTest to
add a transactionlogkey class to make it easy to identify
added a boolean property ` enableSqlWithoutProfile ` and its corresponding getter and setter in ` JdbcEnvironmentProperties ` , and updated ` JdbcEnvironment
added a try - finally block around the write method call in ConnectHandler . java to ensure that the _ data is reset in a finally block
use eventgenerator instead of lambda in modloadingstage . createregistry ( )
updated the date parameter from ' date ' to ' calendar ' in DateUtils . java and modified the test assertion in FontParsersTest . java
updated ` loadValue ` and ` getThreadInfo ` methods in ` CachedThreadStatesGaugeSet ` to use ` super . getThreadInfo ( )
added a new protected field ` prevTlogOnPrecommit ` and modified the ` LeaderTragicEventTest ` to improve transaction log
updated job file path from " . net / net / job / FastAsyncWorldEdit - P2 - V6 / " to " .
added directory creation and null check for input path in SegmentGeneratorConfig . java to ensure that the output directory exists before creating a new file to
added calculateNormalVector and calculateNormalNewell methods in ObjUtils . java and updated TriangulationHelper . java to use this method to
updated the ` find ` method to include ` IdentityZoneId ` as a parameter in the ` find ` method to include the identity zone ID
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future feature additions
added a null check for the current session in the authorization filter to ensure that the session manager is not null before proceeding
refactor TransactionIsolationLevel class for improved readability to enhance maintainability and facilitate future updates
rename ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to improve
added thread name setting for forwarding to the remote URL in TestSession . java to improve debugging by providing clearer context about the current thread
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
replaced the creation of an ArrayList of ComponentKey with a direct return of an empty ArrayList to simplify the code and improve performance by elimin
added OverviewToAllAppsTouchController to the list in RecentsUiFactory to enhance user experience by providing quick access to all apps
replaced the method ` scaleHotseatWithWorkspace ( ) ` with ` getHotseatScaleAndTranslation ( Launcher launcher )
added a check for JUnitRule in ` DefaultStackTraceCleaner ` and a corresponding test in ` StackTraceFilterTest ` to ensure that only
replaced instances of ` dstNull ` and ` srcNull ` with ` dstByteArray ` and ` srcByteArray ` in ` MappedResizeable
refactored balance listener management in DepositListItem . java to improve code readability and maintainability by encapsulating balance listener logic
modify color conversion logic based on edge mode in RealisticRenderer . java to ensure correct color values are applied based on edge mode status
added null check for httpClientResponse and updated log initialization in multiple test files to improve robustness by preventing potential NullPointerExceptions and ensure consistent logging
fix ( gl200 ) : remove patternutil . checkpattern ( pattern _ inf , sentence )
updated playback timing logic in FullDetailsActivity . java to improve accuracy of playback detection based on last playback event and refresh time
refactor SpanishXMLTreeReader to improve handling of elliptic nodes and introduce MWE - PHRASAL detection to enhance
added a check to clear the ISO language if it is empty in the InstallItem class to ensure that the language is cleared when it is empty
updated the ` ReactiveLoadBalancerClientFilter ` to correctly override the scheme based on the server ' s security status to ensure that the scheme overrides correctly
http : / / issues . apache . org / jira / browse / amq - 4892 - fix memory leak in defaultm
changed the access modifier of the fullFilePathFromClassName method from final to non - final in NativeImageDebugInfoProvider . java to allow for
replaced the custom ` Correspondence ` implementation with a lambda expression in ` ShadowBackupManagerTest . java ` to improve readability and
updated references from " US " to " EN " for non - English language support in JRELocaleProviderAdapter and LocaleDataMetaInfo to
remove unnecessary null check for redeemData in LocalTransactionSigner . java
add minecraftforgeclient for tessellator to render block with custom texture .
added a return statement to the TxCacheDB class to prevent further processing during execution
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal . org . objectweb . asm
refactor FastDictionary class to improve performance to enhance efficiency in data processing
do n ' t call closeconnection ( ) if the session have be close , close it instead .
updated the values of the FlightEvent instances in FlightEventsTest . java to use fixed values instead of fixed values to improve accuracy of
[ beam - 1p26p0 ] update java and python dependency ( # 1p26 )
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure namespace declarations are correctly
update instructorfeedbackresultspage . java to use instructor ' s courseid instead of instructor ' s name
added shortRules list and updated defaultRules initialization in DefaultPasswordValidator . java to allow long passwords that exceed 20 characters
simonstewart : change the default value of ` ` capturelastremotecontrollogs ' ' to ` ` capturescreenshottos
removed the JUnit Test annotation from ProxyClassSerializationTest . java to streamline the test code by eliminating unnecessary dependencies
updated string concatenation syntax in DLNAMediaInfo . java to improve code readability and maintain consistency in formatting
replace speculative guard movement phase with new speculative guard movement phase .
added checks for multiple authentication managers and disabled bean definition overriding in the AuthenticationManagerBeanDefinitionParser to ensure that multiple authentication managers do not throw exceptions
updated handling of forwarded request fields in ForwardedRequestCustomizer and added new test cases in ForwardedRequestCustomizerTest to improve robustness
added a line to clear the StringBuilder in ConsoleReader . java to ensure that the StringBuilder is reset before further operations
changed access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access and override the roles list
update OpenIDE - Module - Specification - Version values from 1.31 . 0 to 1.32 . 0 in multiple files to reflect the
hbase - 26905 add support for hbase . server . netty . tls . wrapsize to configure the size of the tls
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to use JUnit 4 annotations and added tests for incorrect line length exceptions to improve test coverage and ensure proper exception handling
refactor protocol binding handling in OpenSamlAuthenticationRequestFactory and add unit tests for protocol binding validation to improve flexibility in protocol binding configuration and
updated DepthController to use AttachedSurfaceControl for applying transactions to improve rendering performance by ensuring transactions are applied only when the root surface control is
update version check from " main " to " 2.5 . x " in AsciidoctorConventions . java to reflect the
hbase - 15827 addendum fix bulk load pre - pre - pre - load and pre - cleanup bulk load ( addend
updated unSeqMergeList initialization to use zero for maxOpenFileNumInEachUnseqCompaction to ensure unSeqMergeList does not
camel - 16462 : camel - core - allow fileinputstream to be convert to inputstream . thanks to benjam
added login functionality to the DefaultShardManager and its builder to enable conditional login based on the login parameter
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity and consistency
modified response completion handling in HttpSender . java to check if the completion is marked to ensure proper termination of responses only when the completion is marked
updated condition in FeedbackResponseCommentsLogic to include a check for user student status to ensure that only users with the giver can see comments
added support for linked color profile management in BMP processing to enhance security by ensuring proper handling of linked color profiles on Windows platforms
updated location parameters for ` setSimpleCuboid ` method calls in ` ClassicPlotManager . java ` to correct the positioning of the
added a wait message to prompt users to check the status of PMD files in the specified package to improve user experience by informing users of
refactor gridPresenter initialization and add a new method to set grid sizes based on poster size settings to improve code readability and maintainability
changed return values from false to true in ContributionsListFragment . java to reflect the correct functionality of the method
added a test for skipping range queries in DistinctPrefixFilterIT . java and modified the limit handling in BaseResultIterators . java to
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file to provide functionality for determining the last modified time of a file
added a condition to check for metadata tables in HiveIcebergStorageHandler to ensure that only valid metadata tables are processed in the file format
allow select a currency other than the country default currency in cashdepositform
changed exception handling from IOException to Throwable in WriteFlusher . java to improve error handling by catching all throwable types
refactor animation handling in IconRecentsView . java to improve clarity and control over animation state management
added a new public String field ` activeKeyId ` to the ` UaaConfiguration ` class to provide a way to track the active key ID
updated action labels and methods in SendMailActions to use " @ text / " prefix instead of " send a text mail " to improve cl
changed the visibility of the isActive variable from private to private volatile to ensure visibility of the isActive variable across multiple threads
replaced ` isDesc ( ) ` method with ` isAsc ( ) ` in ` OrderByExpressionContext ` and related tests to ensure correct
make sure we do n ' t have to cast to charsequence to avoid classcastexception
added a condition to check if the application name matches the OWNCloud app name in DisplayUtils . java to ensure compatibility with the application '
hbase - 26465 allow hbase . rootdir . perms to be set when kerberos be enable
update locale retrieval from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` Javax
refactor Instant class implementation to improve code readability and maintainability
added a default state format of " 2 " and changed the return type of ` getStateFormat ` from ` int ` to ` String ` to
removed the type parameter from the logger statement in CentralAuthenticationServiceImpl . java and modified the ticket type check in AbstractTicket . java to
pdfbox - 4892 : ignore illegalargumentexception , a suggest by valerybokov
updated the condition to check if the file name ends with a slash to ensure that the file path is validated correctly before proceeding
added pathTranslator parameter to the PluginParameterExpressionEvaluator constructor and updated its usage in the DefaultPluginManager and its tests to enhance path handling and
move protobuf coders to beam - sdk - coders module ( beam - 1.1 . 1 )
updated JpaQueryParsingToken instantiation to include a boolean parameter to enhance query parsing flexibility by allowing signed numeric literals
updated LaunchLugHandler and RailGuideHandler to include parent length in the creation of LaunchLug and RailButton components to enhance
removed the ` getNonceFactory ` method from ` BitmexStreamingExchange ` to provide a placeholder implementation for future implementation
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] set default value for timer interval in driverconductortest .
changed the default value of the ` initializeLoadedClasses ` variable from ` true ` to ` false ` in ` ScanSpec . java ` to
added focus to the search field in FullTextSearchPanel to ensure the search field is focused when needed
refactor NioParams initialization in TlsConnectionLogging . java to improve readability and maintainability of the code
replaced assertEquals with a comment in StatementTest . java to clarify the test ' s purpose for better understanding of the test
updated assertion logic in TestSolrConfigHandler . java to improve clarity of test failure messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests . java ` to
updated density handling in FilterResourcesStep . java to include a default value for NO _ QUALIFIER to ensure accurate filtering of drawable resources based
added a method to retrieve the button UIID and refactored UIID updates to use this new method to improve code readability and maintain
removed the import of DisplayMetrics and modified the condition for display rotation in RecentsAnimationDeviceState . java to simplify the condition checks for
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java for testing array cloning
added an import statement for LuceneTestCase . AwaitsFix and annotated the class with @ AwaitsFix to address issue SOL
fixed - rexecutorservice . execute ( ) method throw npe if nextstartdate be null
simplified the condition for updating credentials in FileDownloader and FileUploader to improve code readability and maintainability by reducing redundancy
added null check and closing logic for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
replaced calls to ` get ( iface ) ` with ` getOrDefault ( 0L ) . doubleValue ( ) ` in multiple lambda expressions to
added a nonce parameter to the TokenMvcMockTests class to validate the claims for the token to ensure that the nonce is correctly validated for the
refactor ChartEditor and related classes to improve code organization and maintainability to enhance maintainability and readability of the chart editor components
added methods to set the width and height of the formLayeredPane and set the layout should not be displayed to improve layout management and ensure
updated the ` maxY ` method in ` BrowserContentPane ` to include a height calculation based on the owner ' s height to ensure proper height
modified the ` openDatabase ` and ` openSharedDatabase ` methods to return a boolean indicating whether the database connection was successful to ensure proper resource
replaced hardcoded ` DOCKER _ COMMAND ` with a reference to ` Platform . DOCKER _ COMMAND ` in ` DockerTest
added null check for input files in TestIsartorValidationFromClasspath . java to improve robustness by handling cases where no input files are
updated the drawLeaveBehind method to accept a color parameter for the folder leave behind color to enhance flexibility by allowing customization of the
report canary version incompatibility for android studio ( # 4338 )
added null check for idProxy table name before retrieving it to handle potential null pointer exceptions and log a warning if the table name is invalid
removed modulePersistEnable and modulePersistDisable lists and their corresponding getter and setter methods from StartArgs . java to streamline the handling of module
updated argument validation logic in GeminiMarketDataService . java to allow for more than one argument and improved error message clarity
replaced HashSet with LinkedHashSet for storing questions in the request flow scope to maintain the insertion order of questions
add a test to verify that the realm do n ' t have a role
updated exclusion statements in AuthCheckFilter . java to include specific JSP files to enhance security by excluding unnecessary JSPs from the setup setup
refactor scheduling logic to manage runnable execution order to improve efficiency by avoiding redundant execution of scheduled runnables
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to accept a variable - length argument list to improve flexibility in
refactor XML parsing logic to handle end - of - stream condition to improve error handling and prevent potential null pointer exceptions
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address overflow issues in
update arrow positioning logic in DeepShortcutsContainer . java to ensure proper positioning of the arrow when the icon is above its icon
remove printstacktrace ( ) from catch block and change log level to debug
updated the updateThumbnail method to include a refreshView parameter and modified related logic in AbsSwipeUpHandler . java and RecentsView
pdfbox - 3033 : reference correct package , a suggest by ben
added a boolean parameter to the InternetAddress constructor and modified hostname validation logic in HostnameFormatSpecifier . java to improve error handling and provide clearer
replaced instances of ` AuthenticatorActivity . this ` with ` this ` in multiple activities to simplify code and improve readability by eliminating
updated the ` SizeBasedDocIdIterator ` and ` FilterBlockDocIdSet ` classes to use a consistent ` _ maxDocId `
updated the ` promptToOpenFile ` method to accept an additional ` exts ` parameter and modified its usage in ` FilePanelEntry ` to
updated widget span and page count settings in AppsCustomizePagedView . java and removed unused methods in AppsCustomizeTabHost
refactor ` FlightConfiguration ` to use ` InstanceMap ` for managing instance contexts and adjust bounding box calculations to improve the accuracy of component
polish ` ` use direct : prefix instead of seda : prefix ' ' in test
updated DateTimeFormatter to use Locale . ROOT for date formatting to ensure consistent date formatting across different locales
[ ds - 4892 ] filter out hidden metadata field in the rest response ( # 4893 )
added a new test method ` testMissingRequired ` to ` TestStarTreeConfig ` to validate the behavior of ` StarTreeConfig `
camel - 16462 : camel - spring - route - builder - add support for dynamic recipient list
refactor inline layout retrieval and repaint logic in InlineLayoutBox and HoverListener classes to improve layout handling and ensure proper repaint behavior based on
replaced ` DetectAuthenticationMethodOperation ` with ` ServiceConnection ` and ` OperationsServiceBinder ` in ` AuthenticatorActivity ` to streamline authentication
