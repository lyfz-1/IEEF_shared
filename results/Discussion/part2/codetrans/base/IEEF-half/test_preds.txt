socketappender now set the remote host and port in the constructor instead of create a new one .
refactor code to use a new method for setting prompt headers to improve code readability and maintainability by reducing duplication
updated method call from RecordDescriptor . msgLengthOffset to msgLengthOffset in ManyToOneRingBuffer . java to ensure consistent retrieval of message length
cloudstack - 4892 : fix npe when compute cpu / ram overcommit ratio of cluster
added flags field and constructor to ShadowPaint , and updated PaintTest to use isAntiAlias ( ) and setDither ( ) methods to
updated the title of the MassSetFieldsDialog to use localization to improve user experience by providing a more descriptive title
do n ' t fail test when there be no bug in eclipse
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 640 , http : /
added a new interface ` RemoteInputListener ` and modified ` RemoteInput ` to accept a listener for connection and disconnection events to enhance the functionality
refactor conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
added isEnabled ( ) check to the filtering logic in HomeConnectBridgeHandler to ensure that only enabled things are processed in the HomeConnect thing handler
fix npe in authorizeadminservlet when bs be null
updated JSON assertion in tests to use ` matches ` instead of ` isEqualTo ` for various Java versions to streamline tests by eliminating redundant checks for Java
added JSON serialization and logging for DAG information in TezTask . java to enhance debugging capabilities by providing detailed dag information
updated time calculation in ComputedSummary and added methods to retrieve and retrieve heap tag time in HprofHeap to improve accuracy in time tracking for heap
replaced RxJava2Tasks with CommonsApplication for fetching upload count and removed unused RxJava2Tasks class to streamline upload count retrieval
removed redundant conditional checks for lock mode in MVTable . java to simplify the code and improve read - committed handling
[ issue # 117 ] ensure max message size do not exceed the minimum offset .
added logging for folder status when a folder is marked as open to improve debugging and ensure proper folder state management
added a test for sorting PGProperty names in ascending order to ensure that property names are correctly sorted in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common . java to provide a clear
updated parameters and logic in UninstallDropTarget to use ItemInfo instead of AppInfo to improve type safety and simplify intent retrieval logic
updated assertions in RequestBuilderTest to use isIn instead of hasMessage for improved clarity to enhance test readability and maintainability of the test case
refactor NearbyActivity to use NearbyListFragment instead of " RetainedFragment " and update related tag constants to improve clarity
renamed the parameter ` status ` to ` sessionStatus ` in the constructor of ` FlatProfileContainerFree ` to improve clarity by using a more de
added a configuration option to send a zero anomaly email in EmailConfiguration and updated EmailReportJob to conditionally send it to enhance email sending
[ hotfix ] [ kafka ] fix deserialization bug in kafkaconsumerbase
added methods to retrieve user and geofence objects in the DataManager class to enhance data retrieval capabilities for users and geofences
added a constructor to BlockingResponseListener that accepts a maximum length parameter to enhance flexibility in handling large requests and improve request handling
refactor mcastservice . memberbroadcastsreceived to accept a byte array instead of a thread name
[ iotdb - 4892 ] fix resource leak in multileaderserverimpl . sendsnapshotfragment ( )
updated URL formatting in assertions in LoginSAMLAuthenticationFailureHandlerTest . java to improve readability and maintain consistency in URL formatting
[ hotfix ] [ test ] fix typo in configmetadataprovidertest
updated import statements and modified the method signature of ` updateNoteReminder ` to use ` noteToUpdate ` instead of ` note ` to improve code
refactor directory stream filtering in Files . java and WindowsDirectoryStream . java to improve code readability and maintainability by centralizing directory filtering
refactor JdbcTestDataSet class to improve code organization to enhance maintainability and readability of the codebase
throw noclassdeffounderror instead of classnotfoundexception when classnotfoundexception be throw in hotspotjvmciruntime
added DockerImageName validation in GenericContainer . java and created corresponding test cases in DockerImageNameTest . java to ensure Docker image name adheres
updated error message from " login failed username " and " login failed password " to " login _ failed _ wrong _ credentials " to improve user feedback
added ` setAutofocus ( " autofocus " ) ` method to multiple form classes to enable auto - focus functionality for better user experience
added unit tests for SAML configuration in SamlIDPRefreshMockMvcTests . java to ensure correct handling of SAML properties in the IdentityZone configuration
added checks for empty lists in ComparableVersion and updated test cases in ComparableVersionTest to ensure correct handling of empty lists and validate versioning functionality
updated Sheet . java to use bottomRightMode and topRightMode , and updated preferred dimensions retrieval to ensure that the sheet ' s dimensions are
refactor package structure and imports in RobolectricTestRunner , ParallelUniverse , and ParallelUniverseTest classes to improve organization and clarity of the
use nodefactory . invoke ( ) instead of nodefactory . invokeexact ( ) .
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to
added functionality to draw self loops from the graph in ProcessingPreview . java to enhance the visualization of self - loops in the graph
updated ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 and ALLOW _ TVM _ SOLIDITY _
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
added drag handle translation to the drag handle indicator in AllAppsTransitionController to improve user interface responsiveness during app transitions
removed unnecessary log statements from CollectionViewer , CommunityViewer , and ItemViewer classes to streamline logging for better readability and maintainability
updated error messages for query optimization in HiveConf . java to provide clearer guidance on filter management during query optimization
updated the assumption in ScanningAppProviderRuntimeUpdatesTest to check for OS X compatibility to ensure tests are only executed on non - OS X build
added Maven bundles for Jetty ALPN client and debug diagnostics in TestJettyOSGiAnnotationParser . java to support A
use commandexecutor to execute retryasyncjob ( ) in case of failure
refactored Transaction class to improve code structure to enhance maintainability and readability of the code
replaced @ CustomFieldBehavior with @ ExcludeFromRuleKey annotation in GenruleBuildable . java to exclude Genrule execution from artifact caching to
simonstewart : add a method to find firefox executable in asyncexecute . java and use it in firefoxcustomprofilelauncher
added a check to avoid adding duplicate entries to colFamToDynamicColumnsMapping to improve performance by avoiding redundant operations
[ hotfix ] [ runtime ] fix warning in hadoopoutputcollector and hadooptupleunwrappingiterator
added logic to handle view types in the MetaDataEndpointImpl class to ensure derived columns and indexes are added correctly based on the client version and view type
add updatestudentcascade ( ) method to update student cascade if the email already exist
updated import statements for TestCellReference from org . apache . poi . xssf . util . TestCellReference to utilize the correct
added block hardness check for the piston ' s physic lens .
added a new file LongPointerPressTest3049 . java to implement a testing framework for pointer press events to ensure proper handling of network errors and
truffle : do not inline if the inlining plan be too big .
refactor code to use a single statement for null checks in BaseBuilder and XMLConfigBuilder to improve code readability and maintainability
removed the condition checking for ` matched instanceof ` in ` ListBlockParser ` and added a test for deeply indented lists in ` SpecialInputTest
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it to improve code organization and maintainability by
added JUnit @ Ignore annotation to WebfluxNotIncludedTests to temporarily disable tests due to issue # 1070
fix testcaselogger . savemessage to use string . nativestring instead of string . nativestring
[ hotfix ] fix checkstyle violation in routestartuporderlasttest
added a condition to check if the video format is video in the web subtitle configuration to ensure that subtitles are only processed for video formats
disable tls algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing sensitive algorithms from being enabled
server : do not create vms in managed zone if storage pool be in managed zone and local zone
updated cache entry retrieval and logging format in Driver . java and QueryResultsCache . java to improve readability and maintainability of cache entry logging
added a ` maybeUpdateModel ( ) ` option and modified dependency checks in ` AddManagedDependency ` , ` ManageDependencies ` , and `
added a test for ` lastIntentSenderRequest ` in ` ShadowActivityTest ` and implemented ` send ` method in ` ShadowPendingIntent ` to
updated OpenGL rendering to enable FBO and disable FBO settings in RocketFigure3d . java to improve rendering performance and ensure proper rendering
HydrawiseAccountHandler : synchronize access to controllerListeners and improve resource management to ensure thread safety during concurrent access and prevent potential memory leaks
solr - 9893 : skip EasyMock test on java 9 because EasyMock does not work with Java 9
updated year retrieval logic in TimestampUtils and added local date formatting in SetObject310Test to improve accuracy in determining the year of the local date
do n ' t try to disconnect jabber connection if it be already close .
updated the string concatenation in TxnHandler . java to include the ' cur _ ws _ commit _ id ' variable to ensure consistency in naming convention
replaced ByteChunk with ByteBuffer in BufferedInputFilter . java to improve memory management and handle BufferOverflowException more effectively
added a new method ` toSync ` in ` AsyncUtils ` and created corresponding unit tests in ` AsyncUtilsTest ` to enable synchronization of asynchronous
added ActionGraphBuilder to multiple compiler factory classes and updated method signatures accordingly to utilize the ActionGraphBuilder in the compilation process
simonstewart : add a test case for upload with invisible file input
removed redundant try - catch block for creating tables in SQLManager . java to improve code clarity and handle potential SQLExceptions gracefully
added a check to return the local Maven directory if the file does not exist to ensure the method returns a default location if it does not exist
do n ' t show the algebra label if the new label start with hidden _ prefix
fix : fix npe in ctelementimpl . getmetadata ( ) when getmetadata ( ) return null
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _
added a condition to check if the cached object is sorted by when reordering is disabled to ensure that reordering only occurs when the cached entity is
updated error message for missing method call in Reporter . java to improve clarity of error reporting for missing method calls
added a null check for backupFolder before logging the expiration date to avoid potential NullPointerExceptions when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating an instance of ` void ` using reflection to demonstrate the use
added @ AddToRuleKey annotation to ToolType field in ClangCompiler and GccCompiler classes to ensure toolType is included in rule key
replaced hardcoded timeout values with a constant PINCODE _ TIMEOUT to improve maintainability and readability of the code
add issampled ( ) method for prometheusmeterregistrytest and prometheusexemplarssample
removed the @ Ignore annotation from multiple test classes to ensure tests are executed without requiring the mongodb server
fix flaky test consumeuncompressedcompressedmessagetest . testconsumeuncompressedcompressedmessagetest
updated condition in MetaDataSource . java to check if the table is an abstract table to improve code clarity and maintainability by using a more descript
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor session attribute handling in MongoSessionManager to improve clarity and correctness to enhance code readability and maintainability by using more descriptive
replaced ` setFixedSize ( 320 , 240 ) ` with ` setSizeFromLayout ( ) ` in ` CameraSurfaceView . java ` to
refactor stopping handling in AbstractConnector to use a local CountDownLatch variable for better readability to improve code maintainability and prevent potential NullPointerExceptions
updated method signature of WebSocketClientHandshaker and WebSocketMessageHandler in HuobiStreamingService . java to improve code readability and maintain consistency in method
camel - 16263 : camel - core - use system . currenttimemillis ( ) instead of stopwatch in defaultmessagehistory
[ java ] use subscribe ( ) instead of doonerror ( ) in monopublishertest
updated assertion logic in WebsocketTest to check for WebSocketHandshakeException to ensure that the assertion correctly differentiates between expected and actual exceptions
updated AllAppsTransitionController to implement View . OnLayoutChangeListener directly instead of using an anonymous inner class to improve code readability and maintainability
refactor variable name from ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability
int - 145 : add default channel attribute to xpathrouter parser ( default - output - channel )
updated cacheSeconds from int to String and added DurationCapable annotation to MessageBundleProperties and CasCoreWebConfiguration to improve cache duration handling and
updated JSON format from " openapi : ' 3.0 . 0 - rc1 ' " to " openapi : ' 3.0 . 0 ' ' in multiple Java
replaced append ( buffer , true ) with append ( buffer , true ) in ByteBufferPool . java to improve performance by avoiding unnecessary buffer additions
added a check for the presence of the alt - rt . jar file in the boot class path to avoid processing of unsupported alt - rt jars
updated username and email handling in JdbcScimUserProvisioningTests to use upper case identifiers instead of lowercase to ensure consistency and correctness in user identification
replaced ` Arrays . asList ` with ` ArrayList ` and modified option handling for ` UnlockCommercialFeatures ` and ` DebugNonSafepoints `
added a method to check if the stream is empty in WebCamInputPanel and modified the image drop event handling in WebcamInputDialog to
added a condition to check if ` _ contentView . hasContent ( ) ` before processing the buffer in ` HttpParser . java ` to ensure
camel - 14284 : fix typo find by codespell on fossies . org
added support for " printf " and " print " method in Java2TypeScriptAdapter to enhance method handling for different output formats
added a new test class ` TestCapacityUntilGCWrapAround ` and native method ` incMetaspaceCapacityUntilGC ` in ` WhiteBox
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
[ hotfix ] [ table - common ] remove unnecessary stampedatstart check from samplingstatcalculator
added unit test base on user forum issue
imageio : fix ' icc - single - chunk - bad - sequence ' error message
fix the rod of the terraform and rod not be able to be use with the current item .
removed binding for Config and Environment classes in JoobyModule and SpringModule , and added a conditional check for ignored entry types in SpringModule to
do n ' t use context . getparentclassloader ( ) for digester . addobjectcreate ( )
bug 60832 - add support for additional nameupdater . properties file to the namemap
added initialization of ' started ' variable in EllipsoidRegionSelector . java to ensure proper state management for ellipsoid operations
updated URLs from HTTP to HTTPS in JavaSEPort . java to use secure connections to improve security by using secure connections instead of hardcode
[ geos - 6357 ] wfs - validate sortby = ' ' sort ' ' attribute in getfeature
updated the null check for grantTuple [ 0 ] from ` . equals ( null ) ` to ` . equals ( null ) ` to simplify the
updated image processing in DiagramGenerationTest to use compatibleImage instead of expectedImage to ensure the test correctly verifies the correct color of compatible images
throw a runtime exception if the sideddelegate be null when attempt to install fml .
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
test : fix flaky testlocktest . testlocklockeventually
added methods to tokenize whole and join tokens in StringUtil . java to improve tokenization functionality for better user experience
refactor : use response . senderror ( ) for not find request
refactor command handling in SystemHighlighter to use a commandIndex variable for better clarity to improve code readability and maintainability by centralizing command index
updated version to " 1.0 . 1 - SNAPSHOT " and version date from " 2012 - 07 - 14 " to " PENDING " to reflect
updated buffer position assignment from ` idx ` to ` dimensionSize ` in ` StarTreeRecordStoreCircularBufferImpl . java ` to improve clarity by
added support for drag - and - drop functionality in the SystemUiProxy and related classes to enhance user experience by allowing drag - and - drop functionality
[ java ] fix socketappendersocketoptionstest and securesocketappendersocketoptionstest on java 7
added a new cipher type " PSK - AES256 - GCM - SHA384 + TLSv1 . 2 " to the TestCipher
update description text from description to long description in NearbyMapFragment to improve clarity by using a more descriptive variable name
added JSON property annotation for field ' value ' in ScimGroupMember . java to enable JSON serialization of group members in JSON format
updated HqlQueryRenderer to handle reserved word contexts and added new test cases for schema scoping to enhance query parsing capabilities and ensure correct
[ hotfix ] [ runtime ] fix typo in subscriptionhelper
refactor Parser class to improve code structure to enhance maintainability and readability of the code
updated the ` offsetStreamIndex ` method to include a new parameter ` indexStartsAtOne ` and adjusted its logic accordingly to enhance functionality by
updated byte decoding logic in MagicDetector . java and added a new MIME type test in TestMimeTypes . java to ensure correct decoding of byte arrays
[ hotfix ] [ table - common ] remove redundant getmonotonicity method from flinksqloperatortable
added equals , hashCode , and toString methods to OneTimeTokenAccount and OneTimeToken classes to ensure proper object comparison and hashing functionality in the
added a condition to check if the assistant has not been launched when flinging to ensure fling only occurs when the assistant has not been launched
added a new file SolarisShortDSA . java to implement Solaris - specific key pair generation to verify the validity of DSA signatures on
added a call to toggleSearchLabel ( false ) in ListFragment . java to disable the search label functionality for better user experience
cloudstack - 5292 : lock the volume before backup it on primary / secondary storage when create a snapshot
refactor ` FileDetailActivity ` to use a separate ` DetailsServiceConnection ` class instead of a single instance to improve code organization and maintainability
refactor SSLPeerUnverifiedException handling in HttpClientTLSTest . java to improve error management and ensure proper handling of SSL peer verification exceptions
pdfbox - 4071 : remove unneeded equal ( ) method from conjunctionscorer
added a null check for the item before binding to prevent potential NullPointerExceptions when removing colliding items
make cpmemberaddremovetest more tolerant to race condition
updated cache shrink logic to use a fixed value of desiredSize instead of a fixed value to ensure cache size does not exceed a specified limit and improve
updated API version from " / api / 2 " to " / api / v3 " and modified related methods and properties accordingly to ensure compatibility with
added a method ` empty ( ) ` to check if the size of the collection is zero to provide a way to check if the collection is empty
added optional handling for page data in AsyncPageReader and updated test cases in TestEmptyParquetReader and TestDrillParquetReader to ensure
updated method signatures and logic in SerumStreamingService and SerumStreamingService to support additional argument types and improve error handling for invalid market data types
add a config option to disable the animation when an item be charge on top of a mana pool .
[ java ] add more logging for timeoutexception in clusternoderestarttest .
updated catch block to handle InterruptedException and log the exception message to improve error handling and provide clearer error logging
do n ' t use filesystem . ensuredirexists ( ) for test
removed redundant calls to openScreenStyle ( ) in ResourcesInjectorFull . java to streamline code for better readability and maintainability
updated ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for ` changeLogFile
fix blockworldvector . equals ( ) to use getx ( ) and gety ( )
updated methods in LongConcurrentLRUMap to use final modifiers and removed TODO comments to improve code clarity and enforce immutability
replaced singleElement ( args ) with regexElement ( args ) and added regex to resourceConfiguration to improve resource configuration handling by escaping escaped strings
updated KRB5CCNAME retrieval logic and improved argument handling in EmptyCC . java to ensure proper retrieval of the KRB5CCNAME environment
corrected the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to ensure
[ p2p ] increase fast sync peer count to 3 minute
[ java ] fix checkstyle violation in webdriverservlet .
do n ' t expand ' AreEqual [ x , y , z ] ' format expression in geosegment
added a check to clear pending rendering operations only when minimized state is met to ensure pending rendering operations are cleared only when minimized is met
fix ( hazelcasttestsupport ) : fix time - to - live test
fix a bug in coalescedwritebehind queue and add a test for writebehind writedelayseconds
added a line to remove the icon from the JLabel in GroupTreeCellRenderer to improve UI consistency by removing unnecessary icons
updated test methods for strict matching in TestBlacklistAwareRedirectResolver to use non - strict mode instead of strict mode to improve test clarity and maintainability
added socket closing in ShutdownMonitor and refactored test methods in ShutdownMonitorTest to improve resource management and enhance test coverage for Shutdown
updated the calculation of ` moveSize ` and refactored chunks fill rate logic in ` RandomAccessStore . java ` to improve memory management and
updated references from ` object . getClass ( ) ` to ` type ` and added a new method ` readFields ( Object object , ObjectMap <
[ hotfix ] [ coordination ] move componentclosingutils to common
vm : do n ' t allow volume to be destroy when vm be in error state
server : fix npe in configurationmanagerimpl . getvlan6rangefromcidr ( )
rename ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` and update references accordingly to improve clarity and consistency in naming conventions
increased the timeout duration for leader retry in CollectionsAPIDistributedZkTest from 15 seconds to 30 seconds to allow more time for the leader to complete
refactor error message method signatures in AbstractParam to remove the input parameter parameter to simplify error handling by eliminating unnecessary parameters
updated drawImage parameters in URLImage . java from ( 0 , 0 ) to ( - x , 0 ) to correct the positioning of the image
corrected a typo in the variable name from ' solrDocument1 ' to ' solrDocument2 ' in the condition check to ensure the correct
refactor code to extract the check for item zero high card dimensions into a separate method to improve code readability and maintainability by reducing complexity
[ hotfix ] [ stream ] add exception to streamtaskexception in streamconfig
refactor the tag processing logic in Preprocess . java to improve readability and maintainability of the code
removed unnecessary whitespace in the read method of MessagePack . java to improve code readability and maintain consistency
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a placeholder annotation for type - specific
fix : jsonparser do n ' t encode empty extension list .
updated string split to use backslashes instead of dots in Artifact . java and added checks for external meta and internal name in LibraryManager . java to
added alias " node _ popup _ scripting " to the entryNavigator in ScriptingMenuEntryVisitor to enhance user experience by providing access to scripting
removed unused constants and added animation controls in OverviewActionsView and RecentsView classes to improve code clarity and ensure proper animation behavior based on device
camel - 14263 : camel - jms should use getout ( class ) instead of getout ( object ) in jmsproducer
removed unnecessary ` throws IOException ` declaration from multiple Java files to simplify method signatures and improve code readability
deleted deprecated classes AbstractDelegatedVerb and FailureContext from the codebase to remove obsolete or obsolete components from the codebase
updated GzipHandlerTest to include micro - encoded content and added MicroServlet for handling micro - encoded ETag to enhance testing capabilities for micro -
[ java ] use backpressureutils . getandaddrequest instead of consumercapacity . getandadd ( ) in onsubscriberedo .
added logging functionality and improved error messaging in SpeedmentImpl . java to enhance debugging capabilities and provide clearer error messages during component termination
[ dspace ] add support for load dspace - config from servletcontext . xml
updated StoreScanner and TestWideScanner classes to improve row matching logic and enhance debug logging to enhance robustness and provide clearer debugging information during scan
camel - test - infra - jmx : enable jmx by default for camel - Nagios test
replaced hardcoded ' / ' with a constant for the package separator in SourceLineAnnotation . java to improve maintainability and readability of the
added methods to find YARN and HDFS binary paths and print application IDs in RemoteSparkJobMonitor to enhance the configuration options for Spark
added support for " maria " database type in DbConnectionManager to ensure compatibility with both mysql and maria database types
[ hotfix ] [ masterwal ] fix splitlogmanager . splitlog ( ) to handle empty dir gracefully
added a new file ` ExecuteAndReturnStringTest . java ` for testing UI components with network error handling to facilitate testing of UI interactions with
added a new file ` InvokespecialInterface . java ` implementing an interface with a default method method and a dynamic method to demonstrate the use of a
[ hotfix ] [ runtime ] fix typo in evictionboundedlist javadoc
do n ' t use edge _ based _ 2dir if turncosts = true
added validation to ensure selection is valid to prevent illegal argument exceptions when disabled
hbase - 24499 rpcserver should not throw nullpointerexception when method name be null
updated hotseat cell size calculation to use border spacing instead of cell width to improve layout consistency and maintainability of hotseat icon positioning
updated the construction of ` valString ` to use ` values . get ( " partitionColumnIndex " ) ` instead of ` partitionName ` to
add versioned support for namedtask and taskdefinition in v4
updated the directory path from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure the
updated the ` equal ` condition in ` DisplayModeTest . java ` from ` false ` to ` true ` to ensure the ` isDisplayMode
added support for high - codepoints in UnicodeToLatexFormatter and updated HTMLUnicodeConversionMaps to include high - codepoint Unicode characters to
[ java ] make oaidccrosswalk . value and dcv . value non - null to avoid npe .
simonstewart : do n ' t select an empty window if the value be null or empty .
added a button to manage the visibility of the bookmark file extension in StringSearchPanel and updated condition checks in BookmarksPanel to improve user experience
replaced manual port setting with a utility method for building the base URL to improve code readability and maintainability by utilizing UrlUtils
updated date parsing logic and error messages in SoftAssertionsTest . java to improve accuracy of date comparisons and enhance error message clarity
updated the ` adaptOrders ` method to include a ` reverse ` parameter and modified order adaptation logic to improve order order handling and support for reverse
refactored variable type printing logic in Delombok . java and added a new Java11Var . java file with a test method to
simonstewart : fix the issue that sendkeys ( null ) throw an unimplemented exception
updated the initialization of Configuration to set the default value to false and removed the conditional check for the configuration to simplify configuration management and eliminate unnecessary logging for
removed the call to ` super . drawChildren ( batch , parentAlpha ) ` in ` WidgetGroup . java ` to streamline the drawing process
added unit test base on user forum issue
use context . getcatalinabase ( ) instead of system . getProperty ( org . apache . catalina . globals . conf )
added unit tests for the best date pattern retrieval in ShadowICUTest . java and modified the skeleton return logic in ShadowICU . java to
add more color code to plotsquare style to make it easy to read
added ZuulProperties to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance configuration flexibility for Zuul properties
tika - 264 - fix unit test for font metadata with utc timezone .
added a new file ` SampleApplication . java ` in the ` org . test ` package and modified ` BuildInfoMojo . java ` to include
updated the calculation of ` xDist ` to use ` Math . abs ( xDist ) ` instead of ` calculateFinalX ( ) ` to
deleted the GUIRWTester . java file to the test class is no longer needed in the project
removed null checks from method signatures in LazyMessage and StandardSubjectBuilder classes to simplify method signatures and improve code clarity
updated error message format in TestStream . java to include a space character to improve readability of the error message
updated package structure for template parser classes and constructors from ` org . thymeleaf . templateparser ` to ` org . thyme
added a new test method ` testXPathString ` in ` XPathTest . java ` and modified string evaluation in ` XPathTest . java ` to
added @ Nullable annotation to FutureUtils . java to indicate that the method may not be null
add warn message when invokedynamic be not resolve during call graph construction .
updated email addresses in ContextTest from " myfakeemail @ gmail . com " to " myrealemail @ example . com " to
updated the encoding response format in HttpConnectionTest . java and modified URIUtil . decodePath in URIUtil . java to improve code readability and
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultTableResultSet ` , and ` ResultTableResultSet ` classes to provide
add default implementation of serviceclientconfiguration ( ) so that it do n ' t need to be static .
refactor HSSFPictureData class to improve code organization to enhance maintainability and readability of the code
updated time handling from long to Instant in Statistics . java to improve accuracy of time measurements and enhance logging clarity
added version handling for ` File _ TestContinuousFileNames ` and ` Option _ Version ` options in ` LibMediaInfoParser . java ` to
added reflection - based proxy handling for IdeaDependency and DefaultIdeaSingleEntryLibraryDependency to enhance functionality for managing IDEA dependencies in the project
added a new class ` SerialHeap ` and updated references in ` Universe ` and ` GenCollectedHeap ` to use it to provide a
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types . java to suppress warnings related to serialization in the code
update mousewheelevent to use mouse position instead of mouse . getposition ( )
updated MongoQueryCreator to handle null parameters in findByFirstNameIgnoreCase and added a new test for findByFirstNameIgnoreCase with null to improve robustness
[ hotfix ] [ table - common ] add multisettypeinfo to maptypeinfo
added a method to retrieve an identity provider by its issuer in XOAuthProviderConfigurator . java and corresponding tests in XOAuthProviderConfiguratorTests . java
updated CMapParser to improve handling of delimiters and added a test for parsing nasty CMap files to ensure proper parsing of CMap files with
refactor ContactsBackupJob to use OperationsService for service management to improve reliability and maintainability of the service management system
refactored type constraints and added new classes T6938454a and T6938454b to improve type inference logic and enhance type inference
added a new method ` isConfigHidden ( ) ` in ` AccountID ` and implemented it in ` ProtocolProviderFactory ` to enhance account visibility
added error logging for inconsistent display bounds sizes in DisplayController . java to improve debugging by providing clearer diagnostics for inconsistencies
updated schema removal logic in PMetaDataImpl . java and added a test for schema removal in PMetaDataImplTest . java to ensure correct removal of
ggb - 132 passivelogin : do n ' t call loadhandler for passive login .
added a new file ` Box2DTest . java ` and modified ` GDXTester . java ` and ` Box2DTest .
fix localbypartionertype to return hex string instead of null for cfm . cfname
updated the default buffer request timeout from milliseconds to minutes in HybridShuffleConfiguration . java to allow for a longer request time for improved performance
added default generator name and version to the SpeechSettings and related classes to enhance clarity and maintainability of the generator configuration
added a help button to the OpenOfficeIntegration class to provide user feedback during integration tests
[ java ] use child option for tcp _ nodelay instead of option in acceptor .
updated method signatures to use generics for keepAliveUserDataStream , closeUserDataStream , and checkWapiResponse in Binance classes to enhance type safety
refactor class loading logic to improve readability and maintainability to enhance code clarity and ensure proper type casting during class loading
refactor error handling and stream processing in DecodeServlet . java to improve code readability and maintainability to enhance maintainability and ensure proper response handling
datajpa - 282 - querydsl - add integration test for nullhandling .
added null checks for the actor in ParallelAction and refactored conditional checks in SequenceAction to improve robustness and prevent potential NullPointerExceptions
fix ( test ) : fix checkstyle violation in cttypetest
added synchronization to the collection of sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and its implementation ` JJ ` and ` JK ` in the ` org . map
added a command to revoke an existing SSL certificate in CertificateManager . java and created a test for it in CertGenerationTest . java to ensure
added a test for handling no - body responses with no body codes in AbstractHttpTest . java and modified the condition in HttpServerTestBase . java to
dataconfig : improve error message when < script > tag be miss
updated connection pooling type in HiveConf and added support for Hikari configuration in TxnHandler to enhance compatibility with different database types and improve
replace instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to standardize
added filterLock method to manage file lock states in FileMenuFilter . java and updated OCFileListFragment . java to improve user experience by
refactor Version class to improve code organization to enhance maintainability and readability of the code
clear the endpoint cache when create a new keyspace . patch by jbellis ; review by brandonwilliams for cassandra - 1454
refactored thread state wait logic into a separate method ` waitForState ` to improve code readability and maintainability by reducing duplication
refactor methods in SkylarkDescription , SkylarkDescriptionArg , and SkylarkRuleContext to utilize SkylarkRuleContext
simonstewart : refactor the localstorage and sessionstorage interface to extend the html5 storage interface
added null check for existing views before checking view new row types in PlanExecutor . java and modified test cases in CreateViewStatementTest . java to
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error reporting for segment generation failures
updated query string retrieval logic in SpellCheckComponent . java to ensure query string is not null to avoid potential NullPointerExceptions during query execution
added validation for header values to ensure valid characters and whitespaces are present to improve error handling for invalid header values
refactor instance size handling in HybridLayout and HostedInstanceClass to use arrayBaseOffset instead of instanceSize to improve code clarity and maintain
[ apex ] make the setcontainscomment method in apexcommentcontainernode non - experimental
hhh - 14499 log warn about join join with lazy fetch type
refactored filter classes to extend from AbstractSpecFilter instead of implementing SwaggerSpecFilter to improve encapsulation and maintainability of the
added assertions to verify database and table names in TestCompactionTxnHandler and set them in TxnHandler to ensure correct retrieval and setting of database and
camel - 14263 : fixed timer consumer to not throw exception on graceful shutdown .
added a conditional check before adding traces to the worklist to ensure traces are only added when the block is processed
updated ProviderManager to use CollectionUtils for null element checks and added unit tests for null elements to ensure proper handling of null elements in the ProviderManager
simplified the database version check in InsertOrUpdateGeneratorPostgres . java to improve code readability and maintainability
added LOCAL _ INDEX _ LIMIT constant and modified scan filtering logic in BaseResultIterators , BaseResultIterators , and BaseScannerRegionObserver
added validation to ensure collections with the same name and type have already be use in the past to prevent invalid requests when adding collections with the same name
updated cursor handling logic in VDUBuffer . java and vt320 . java to improve accuracy of screen positioning and redraw behavior
removed the constant USE _ RETRIES from HttpShardHandlerFactory . java to streamline code by eliminating unnecessary constant usage
updated regex pattern for VERSION _ NUMBER in JavaVersion . java and added a new test case in TestJavaVersion . java to ensure compatibility with Java
[ hotfix ] [ runtime ] do n ' t run streamtask if there be no gate
added a JUnit test method to the TestReceivingMessageSourceParserTests class to ensure that the test method behaves as expected in the
added null check for properties before retrieving the value to avoid potential NullPointerExceptions when properties are null
[ hotfix ] [ runtime ] use initCause ( e ) instead of throw an exception
updated error messages in ClusterStackVersionResourceProvider and RepositoryVersionResourceProvider for clarity to correct the spelling of " rolling " to " stack "
add txconfidencelistener to make it easy to update tx id
bugfix : add support for ` ` g1 perm gen ' '
removed unused imports and simplified return statements in NearbyController . java to streamline code and improve maintainability by eliminating redundancy
pdfbox - 4071 : make clonefornewdocument public , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activities in swipe up gestures
renamed DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and updated related constants to improve clarity and consistency in naming conventions
updated method names and formatting in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency in country ISO handling
removed the setUnfreezeAmount method call from UnfreezeBalanceV2Actuator to streamline the code by eliminating unnecessary method calls
[ java ] : fix typo in conferencescheduledxlsxfileio . java
simonstewart : use commons - io for copy directory instead of com . google . common . io . files
refactor assertion classes and their implementations for improved consistency to enhance code maintainability and readability
refactor Observable class implementation to improve code readability and maintainability
updated the ` Update ` class to use ` addMultiFieldOperation ` and added tests for multiple collections in ` UpdateTests ` to enhance functionality and
added a null check for randomUUID before setting it in MockHubService to avoid potential NullPointerException when randomUUID is null
added hover event handling in InputConsumer and modified InputConsumerProxy to handle hover events to enhance user interaction by allowing hover actions to be handled appropriately
added a sleep delay before retrieving the boostrap configuration in the CoreContainer class to ensure proper synchronization during the startup process when the configuration is not specified
add label to the default value for max - headers - size
hbase - 26105 increase hbase hbase client retries to 35 ( brock review by stu hood )
updated file path handling in SourceSnippetHelper . java to ensure consistent file path formatting across different operating systems
fix encodedgraphcachetest . testdecodedgraph . iscached ( ) to fail on slow machine .
updated the query command from " customer _ count " to " all _ tables " and added a new test for querying over output to ensure accurate
added handling for all Kraken asset codes in KrakenAdapters . java to enhance currency metadata management for better asset management
added a ` toString ` method to ` AnyOf ` class and created a test class ` AnyOf _ toString _ Test ` for its functionality to
[ hotfix ] [ alert ] add dimension to email to alertconfig ' s subject
[ influxdb ] add check for non - blank measurement and database
rename the ` doTransform ` method to ` downcast ` in multiple converter classes to improve clarity and consistency in method naming
[ hotfix ] [ network ] fix check for unique local address in netutils
added a method to quote column names in the DataTextFormatter to improve column name handling by ensuring they are correctly formatted
added methods to set properties and remove empty strings in WrapSystem and StrUtils classes to enhance functionality for managing system properties and improve code readability
added a constructor to the UpdateRequest class that initializes with a POST method to ensure proper handling of POST requests in the UpdateRequest class
removed the static modifier from the EnumSerialization enum in ProtoTypeAdapter . java to allow access to the EnumSerialization class from other packages
added experimental format warning handling in DataImportHandler , ReplicationHandler , and RequestHandlerUtils to enhance user awareness of experimental response formats
refactor jpmsutil . printmodulenames ( list < string > ) to use string . format ( list < string > ) instead of
fix : hardcoded default font size to 5 / 4 in some case
[ hotfix ] [ broker ] fix checkstyle violation in heartbeat manager
[ hotfix ] [ table - common ] fix mean _ partition _ size and split _ count in cqlinputformat
remove test image check from junit4shouldincludeassertrule
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to ensure proper comparison and hashing functionality for RuleTerminalNodeLeftTuple instances
added a new import for StageIDsRearranger and modified TezCompiler to use it if HIVESTAGEIDREARRANGE is set to
change the mbean name of messagingservice from concurrent - service - pool to net . patch by jbellis ; review by jbellis for cassandra
updated memory consumption logic in LotsOfOutput . java to use a variable for total memory to improve memory management and provide better insights into memory
added import statements for Document in multiple Java files to enhance documentation clarity and maintain consistency across the codebase
updated LdapAutoConfiguration , LdapProperties , and LdapAutoConfigurationTests to improve the management of anonymous read - only properties to enhance configuration flexibility and maintain
refactor DatabaseMetaData class to improve database metadata handling to enhance code maintainability and readability
[ hotfix ] [ test ] make exampleechopipelinetest # testechoinputdofn private
added a ` finishMocking ` method and modified its implementation in ` DefaultMockitoSession ` and ` StubbingWarningsTest ` to improve error
removed the ` withoutExtraDeps ( ) ` parameter from the ` withDeclaredDeps ( ) ` method in ` GoTestDescription . java ` and
replaced the ` buffer ` variable with ` readBuffer ` , ` writeHandler ` , and ` writePending ` in ` SPDYAsyncConnection
change getstaticblock ( ) to getflowingblock ( ) in blockliquidwrapper .
updated location intent handling to use HTTPS instead of an extra key for backgroundClass to improve security by restricting access to the background location directly
refactor : fix typo in aprendpoint javadoc
[ hotfix ] [ cli ] fix classcastexception for streaming plan in clifrontend
make craftingmanager # getcraftedrecipe ( ) more robust .
flume - 264 . fix testfilechannelrestart and testsyslogtcpsource . testfilechannelrestart . testfilechannelre
removed redundant condition checks for newline and new suffix in TabsAndIndentsVisitor . java to simplify code logic for better readability and maintain
added a regex pattern for matching temporary files in NeuteredLinesFilter to enhance filtering capabilities for temporary files
doc ( regen ) : update sample code to set total timeout , add api client header test
added conditional logic to handle " INTERVAL " data type in DataTypeFactory and updated NCLOB handling in UnknownType to ensure correct handling of
[ wavefront ] do n ' t publish histogram if not publish .
updated the handling of ` DivideUpstreams ` and modified the build method in ` DivideUpstreamUtils ` to include a warmup timestamp to
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to provide a mechanism for registering sensors with specified parameters
added tests for handling overloaded HTTP methods and headers in SelectChannelServerSslTest . java to ensure proper response handling and logging for overtook
camel - 14263 : camel - ignite should close the feature if it be not null .
added checks for empty line numbers and modified isReachEnd logic in AbstractClient . java to ensure proper handling of empty and reach end scenarios and
pdfbox - 4892 : catch exception instead of ioexception , a suggest by valerybokov
added tests for HdrCapabilities and display capabilities in ShadowDisplayTest . java to ensure correct handling of HdrTypes and minLuminance
added a finally block to release classLoader reference to ensure proper resource management and prevent potential memory leaks
updated error messages to include source and target parameters in SemanticAnalyzer . java and added toString method in SemiJoinHint . java to improve debugging information
added a default constructor to the Message class to ensure proper initialization of the Message class
do n ' t report a bug when an object be an instance of java . awt . component
updated ` PhoenixDecimalObjectInspector ` constructor to accept ` PrimitiveTypeInfo ` and modified precision scale handling to improve type safety and enforce precision scale for decimal
updated ` CompressionResponseStream ` to use ` OutputStream ` instead of ` GZIPOutputStream ` and modified the handling of ` CompressionServletResponseWrapper ` to improve
corrected the spelling of " WWWAuthenticate " to " authenticateHeader " in the Authenticator class to improve code readability and maintain
added a condition to check if the file names start with " EJS " or " org . omg " or " org . netbeans . com
added a method to retrieve the thread group name in ThreadLeakTest . java to improve clarity and maintainability of thread leak test information
added logging functionality to MethodInvocationPrivilegeEvaluator for better debugging to enhance debugging capabilities for unauthorized access decisions
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and maintain
kvm : fix the problem that user vms do n ' t have the correct iso when create a storage pool .
removed redundant handling of signal handlers in SigInt . java and updated test method names in SigIntTest . java to streamline signal handling
replaced static import of ArrayUtils with direct usage of ArrayUtils in NodeTool . java to improve code readability and leverage existing utility methods
updated imports and annotations in AxonAutoConfigurationWithSpringCloudTest . java to use EnableAutoConfiguration and HibernateJpaAutoConfiguration
added multiple @ Override annotations in ColorRGBA . java to enhance code clarity and ensure proper transformation of ColorRGBA to Vector3f
remove deprecate resetinitializedplanningentities from planningentityselector
added ` setBuildTimeMs ` method to ` TwoLevelArtifactCacheDecorator ` and modified method signatures in ` ManifestRuleKeyManager ` and `
updated the handling of field types in GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) to improve clarity and ensure accurate row size
added null check for the block parameter before adding block appearance to the transaction to avoid potential NullPointerExceptions when adding block appearance
added CNC _ BTC and FTC currency pairs and updated ticker ticker retrieval to support both Chinesecoin and BTC currencies
updated the ` skewAllowance ` value from 5 to 15 and refactored related methods to utilize ` CasConfigurationProperties ` to improve
updated sorting logic in SongListActivity to use ItemSortBy . SortName instead of null to ensure consistent sorting behavior across the application
removed unused imports and refactored the readBodyToBytesIfNecessary method in Utils . java to improve code clarity and ensure proper handling of request bodies
move baseblock to legacybaseblockwrapper so that it can be refactored
replaced Optional with a direct retrieval of snapshot references for tags in IcebergBranchExec . java to improve error handling for non - existent tags in
replaced newArrayList with Collections . singletonList for setting external groups whitelist to simplify code and improve readability
photon mapping demo : fix bounce count and frame count
updated password change validation and logging in IdentityProviderEndpoints . java to ensure proper handling of password change requirements to improve error handling and provide informative logging
added notInitializedInConstructors . removeAll ( assumeReflective ) to notInitializedInConstructors to ensure that non - reflective constructors are
updated DatabaseException to include a URL based on the closed connection state to improve error reporting by providing a clearer error message when the database connection is
cse : add test case for require body of a microservice
updated user and password regex patterns in CredentialInjector . java and modified jdbcUrl in CredentialInjectorTest . java to ensure correct identification of user
added a new menu item " Item4 " and a key binding for the ' Enter ' key in ActionListenerCalledTwiceTest . java to
updated print statements in TestCoreParser . java to conditionally check for produced results to improve clarity of test output and ensure results are only printed when
updated equality check in SimpleNode . java to use ' id ' instead of ' id ' for consistency to improve code readability and maintainability by using
removed the public modifier from the PopulatorContextStackItem class to restrict access to the class for better encapsulation
changed the type of ` numDocs ` from ` int ` to ` long ` in ` MoreLikeThis . java ` and added a new test
reformatted code for better readability in QuestManager . java to improve code clarity and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated the query appending logic in MongoSessionDataStore . java to include the upper bound to ensure that the upper bound is correctly validated before querying
make compilerdirectivessubstitutions . unsafegetlong a native method to get long value .
updated time zone name for " Asia / Amman " from ARAST to EET across multiple language files to standardize time zone representation for better
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of logging functionality
hhh - 11824 - handle jdbcexception in sessionimpl . getlock ( )
fix bug when try to download bibtex link that have no extension
set apple . laf . usescreenmenubar to false on macos
test : add piecewise integration test for g ( x ) in ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods from private to protected
added a ` modWhiteListPattern ` assignment in ` HiveConf ` and a test for config whitelisting in ` TestJdbcWithSQLAuthorization `
added a key - value pair to invalidClasses in EntryLoader . java to ensure proper handling of invalid classes during entry loading
fix mobileinput . findclosepoint to use player . team ( ) instead of team . sharded
update cookie domain from " comp1 " to " hostname " in CookieImplementationTest . java to ensure the test uses the correct domain for the cookie
added a method to check if column should validate nullable is not null and updated nullable validation logic to improve validation logic for columns based on search condition to
refactor multiple security - related classes to improve code organization and maintainability across the security package
updated CustomCollectionTest . java to delete and add documents and changed separator variable to static final in CompositeIdRouter . java to improve test coverage and
updated ` ExecutablePreparedStatementBase ` to use ` SnapshotGeneratorFactory ` and ` Column ` for binary stream generation in PostgreSQL to improve
updated conditional checks for cache and cache size conditions in DefaultServlet . java to ensure proper handling of cache sizes and avoid potential null pointer exceptions
added drag event handling for drag - and - drop functionality in JabRefFrame . java to enhance user experience by allowing users to drag files and
updated description creation and assertions in ExecutionUnitRunner , CucumberTest , and ExecutionUnitRunnerTest classes to improve clarity and maintainability of test
replaced ` isEmpty ( ) ` and ` isEmpty ( ) ` with ` StringUtils . isNotEmpty ( ) ` for string validation to improve code readability and
changed access modifiers of several methods in TimeUtils from public to static for better encapsulation to enhance encapsulation by restricting access
removed the initialization of " jdk . reflect . useDirectMethodHandle " and refactored class name checks in RefectionMHTests to improve
updated file extension check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure correct file name format is used
[ gr - 26144 ] fix debug info provider to use getclassname ( hostedmethod ) instead of format ( )
added ` getIcon ( ) ` methods to ` Data ` class and updated ` ClassDisplayed ` initialization to use ` Icon ` from ` ImageUtilities `
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46165
updated the regex replacement logic in FindAndReplace . java and added a test case in FindAndReplaceTest . java to ensure proper handling of dollar
do n ' t cast the debugger connection to xmppconnection , since it ' s not a xmppconnection
refactor SchemaExtractionProcessor class to improve code organization to enhance maintainability and readability of the code
added a new ` copyDir ` method in ` IO . java ` and updated ` SpecWebAppTest . java ` to use it to enhance
added exception handling for unknown datum classes in JacksonUtils . java to improve error handling for unknown datum types
replaced multiple calls to buildAbiFromClasses ( ) and buildAbiFromSource ( ) with a method to retrieve class and source ABI
simplified the height calculation in SelectBox by removing unnecessary adjustments to improve code readability and maintainability
added normalization of database and table names in ObjectStore . java to ensure consistent identification of database and table names
updated schema handling for postgres and oracle databases in DbSqlSession . java to ensure correct schema is set for both postgres and oracle database
removed the logout call from the activity activity in HomeFragment . java to simplify the logout process by directly closing the activity
[ hotfix ] [ test ] fix typo in mockstreamingruntimecontext
fix npe in fastimportaction due to nullpointerexception .
updated the logic for managing bean instances in ContainerLifeCycle . java and added assertions in ContainerLifeCycleTest . java to improve clarity and accuracy of managed state
rename iexecutionattributesdialect to iexecutionattributedialect
added clearing of unsafe metadata in AlterTest . java to ensure proper resource management and prevent potential memory leaks
fix npe in gettime ( ) when loc be null
added null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueue with a new DisruptorQueueExceptionHandler class to
deleted the Session2Token . java file to the class is no longer needed in the media package
cloudstack - 4892 : when fail to create a volume , the destination volume can be remove .
added a new ` Install ` class and integrated it with ` PopupDataProvider ` and ` InstantAppResolver ` to enhance the system shortcut functionality for
added null authority populator functionality to LdapAuthenticationProvider to ensure proper role retrieval when null authorities are provided
updated the retrieval of the retrolambda jar path to use a system property instead of a hardcoded value to ensure compatibility with different Android versions
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the code and improve readability
updated the ` sortLiveDocs ` method to accept a ` Bits ` instead of a ` FixedBitSet ` to improve handling of IO exceptions and
added null result handling in JMESPathExtractor . java to improve robustness by handling null results gracefully
added null and empty checks for currentUser ' s authorities in AuthorizeTag . java to ensure that the method handles cases where no authorities are provided
updated assertions in multiple test files to use Java ' s Date class instead of DateTimeUtils to ensure consistency in date handling across test cases
vmsnapshotmanagerimpl : correct typo in vmsnapshotexception message
updated configuration retrieval logic to use methodClassConfig instead of classConfig and changed ArrayList to Set for shadows in Config . java to improve clarity and
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize SocketConnector instead of SelectChannelConnector for improved functionality
added a method to compare partial partition keys in HiveAlterHandler and updated test cases in TestHiveMetaStore to ensure accurate comparison of partial
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to control the visibility of the icon in
updated method call syntax in SimulationStatus . java to improve code readability and maintainability
replaced SharedBlockingCallback with Callback in multiple classes to simplify code and improve readability by using getHandlers ( ) instead of _ handlers
added workspace listener functionality to PreviewControllerImpl and modified PreviewUIController to build the graph when the workspace changes
updated conditions in ReflectionFactory and ReflectUtil to check for anonymous classes and modified class name detection in ReflectUtil to improve handling of anonymous classes and enhance
refactor TransportHelper to improve code structure to enhance maintainability and readability of the code
updated file path construction in CatalinaAcegiUserRealm . java from " file : / / " to " file : / / "
updated log messages for server start and manager initialization in AmbariServer . java to improve clarity of server startup process and enhance debugging information
added null checks and improved handling of node initialization and modifications in JSONWriter . java to enhance robustness by preventing potential NullPointerExceptions
refactor methods in SliderAppsViewControllerImpl to accept a FileSystem parameter and update user authentication logic accordingly to improve code clarity and ensure correct user
added a check to ensure backgroundManager is attached before attaching it to avoid potential race conditions when attaching the window
updated tab management logic in AllAppsTabbed , Launcher , PagedView , and Workspace classes to improve UI responsiveness and ensure
added null check for the URL in BaseDataSource and implemented a test for Postgres URL validation to ensure proper error handling for invalid URLs and validate
added JUnit 5 annotations and modified PebbleTemplateEngine instantiation in PebbleModuleTest . java to ensure compatibility with JRE versions and
added EditNameDialog to handle directory creation and deletion in FileDisplayActivity to improve user experience by allowing users to create directories with a new name
added a case for ToggleBarBorders in multiple classes to update bar border widths to ensure consistent behavior across chart components
updated the SSL URI and host from " www . okcoin . com " to " www . okex . com " to ensure compatibility with the
[ jbrules - 3131 ] fix invalid score comparator in acceptedforagertest . testpickmove
replaced FileChannel with SeekableByteChannel in Files . java and modified file reading logic in BytesAndLines . java to improve file handling efficiency and ensure correct
refactor getFlattenFieldTransferPair method to accept FieldReference as a parameter to improve code readability and maintainability by reducing duplication
rename the ` MockHandler ` class to ` MockHandlerImpl ` and update related imports and references to improve clarity and consistency in naming conventions
refactor conditional checks in SerializationConfigurationParser . java for clarity to improve readability and maintainability of the code
added imports for ActivityManager and Utilities , and set watch heap limit in QuickstepProcessInitializer to ensure that memory limits are set for debug devices
updated the sumWithCompensation method to store the result of applying the application as double to ensure correct handling of double values in the collector
[ log4j2 - 1078 ] fix broken test in abstractloadbundletest . testimportbundle
fix bug in precompactedrow . serialize ( ) when the top level deletion time be not live
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to ensure proper rendering intent
added MeterRegistryLifecycle to manage meter registry lifecycle in MetricsAutoConfiguration and its tests to ensure proper resource management and lifecycle management for meter registry components
change log level from warn to info for unknown config center exception
added error handling for generating a certificate with byte array in CertificateFactoryTest to ensure that the application correctly handles certificates with invalid byte arrays
camel - 12626 : simpleparser now correctly parse binary operator with ambiguous binary operator .
removed the editor view check in the onTabUnselected method and added focus handling in IDEEditor to streamline the tab selection process and ensure
added user . name to log message when valve open fails
updated scaling parameters in SkeletonModelGpuSkinningTest and added null check for getSubmeshnames in OgreXmlLoader to improve rendering
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should not be used in new code
added functionality to generate declaration files along with the JavaScript output directory in the JSweet transpiler to enable users to specify which files to generate
[ flink - 26458 ] [ stream ] add default value for kinesis fetch timeout in streamconfig
[ hotfix ] [ stream ] fix typo in streamingdataflowworker
increased the default value of the METASTORESERVERMAXTHREADS configuration from 100 , 000 to 1000 to increase the maximum number of metastore server
changed the return type of the onTaskSnapshotChanged method from void to boolean to allow the method to return a boolean indicating success
updated the shadow radius setting from mMaxShadowRadius to shadowRadius to improve clarity by using a more descriptive variable name
add test for chainnesting and aggregation
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` and added a failure message
[ polyglot ] use isinteractive ( ) instead of isinternal ( ) for source . isinteractive ( )
updated conditional check in CreateKeytabFilesServerAction . java to use a null check for previousCachedFilePath to ensure proper handling of cached file paths
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to utilize DisplayController for better display management in the launcher
added a check for the root directory in MetalFileChooserUI and SynthFileChooserUIImpl to determine the tool tip text for the root directory to
replaced getToolkit ( ) with Toolkit . getDefaultToolkit ( ) for retrieving screen size to ensure compatibility with the current platform platform platform
updated the return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > to enhance type
added unit tests and refactored entity retrieval methods in JPASQLBase . java to enhance testing capabilities for fetching and managing pet entities in
removed drag index and point removal logic from FreeformFinSetConfig . java to streamline drag index handling and improve code clarity
updated the MOE version from " 1.1 . 2 " to " 1.1 . 0 " in DependencyBank . java to ensure compatibility with the latest features
updated error message from " constant canot set call value . " to " constant cannot set call value . " and added spending functionality to improve error
updated error message formatting in ElementsShouldSatisfy and ZippedElementsShouldSatisfy classes to use newline character
mark the Weights class as deprecated to indicate that the class is outdated and should no longer be used
amd64graphbuilderplugins : move registerplatformspecificunsafeplugins to a separate method to reduce duplication
added ` @ Hint ( isDep = false ) ` annotation to ` AndroidAppModularityDescription ` and ` AndroidGraphEnhancerArgs
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable vertical page layout for better user experience
[ hotfix ] [ migration ] fix duplicate call to migrationinfo . doneprocessing ( )
[ konnected ] use baseurl instead of ip address in test config
updated the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy `
added database - specific table creation and processing for non - ASCII queries in TestJdbcWithMiniLlap . java and LlapBaseInputFormat .
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate SQL parsing and deparsing for case
refactor ConsoleActivity to use a dedicated method for starting the copy mode to improve code readability and maintainability by centralizing copy mode logic
updated imports and refactored the ` writeXmlOutput ` method in ` TestCommand . java ` to use XML parsing for XML output to
camel - 14263 : fixed npe in abstractaggregationstrategy when exchange be null .
log the cause of camelexchangeexception in the exception handler instead of use the exchangehelper
move logback - basicconfigurator from logback - core to logback - classic
dataflow analysis : do n ' t check if targetnumber . pi _ node be non - negative
added import statement for SharedStringSource in TestXSSFRichTextString . java to utilize SharedStringSource for improved functionality
added a static method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to provide functionality for invoking a method with additional parameters
rename multiple classes related to box and whisker calculations and statistics to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
updated ` NormUpdate ` class to be static and modified field equality checks to use ` . equals ( ) ` instead of ` = = `
changed the access modifier of the singleton instance variable from public to private to restrict access to the singleton instance to enhance encapsulation and restrict instantiation
refactor ifstatementtest to use testplugindefinition instead of testplugindefinition
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure consistency in
removed the TypeAdapter . nullSafe method and its usage in GsonBuilder to simplify type adapter handling and improve code clarity
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of instances in the test
added a new file EXIFReader . java to handle EXIF metadata processing to provide functionality for processing and processing EXIF images to enhance image processing
return ` ` unknown _ to _ sdk _ version ' ' instead of ` ` unknown _ to _ sdk _ version ' ' in cloudwatchmeter
[ drools - 139 ] fix apply pmml apply parameter not work with parameter type
added newline to the string representation of the countercurrencytransferstartedmessage in FluentProtocol . java to clarify the expected case for repeated messages in the
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bar is not visible
[ gr - 32258 ] fix for branchtargetoutofboundsexception in substrateaarch64backend
added a try - finally block to ensure initPending is set to false in JDKXRLogger . java to ensure proper resource management and
added a ` find ` method to ` TicketCatalog ` and updated logging statements in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry `
reformatted code for better readability and maintainability in TestSSL . java to improve code clarity and maintainability
[ hotfix ] [ table - common ] fix memory leak in sortmergeresultpartition
use long . max _ value instead of long . max _ value in jmsio . read ( )
updated PluginHandleController , PluginHandleVO , and PluginHandleDO to include a type parameter and modified related query methods to enhance functionality by allowing sorting
added ` start ( ) ` method to ` DefaultSpanCreator ` and modified span creation in ` SleuthAdvisorConfig ` to ensure span
added new drawable format and depth format configurations to IOSApplicationConfiguration and IOSGraphics classes to allow configuration of different drawable formats for improved flexibility
refactored login test to use attemptlogin ( ) instead of webdriver . findelement ( by . name ( ) ) .
[ pytorch ] fix ` ` real ( ) ' ' and ` ` complex ( ) ' ' not support .
removed unnecessary condition checking for interruption in SynchronizationStatistics . java to streamline thread state checks and improve performance
refactor Implements and ShadowPicker classes for improved organization to enhance code maintainability and readability
refactor HttpClientOptions to utilize a new method for creating HTTP / 2 client options to improve flexibility and maintainability of HTTP / 2 configurations
[ Solidity ] add support for dynamicarray and struct .
updated method calls in InlineLayout and FontUtil to include a default value of true to ensure consistent behavior when retrieving text alignment and size from CSS properties
added constructors to ` CopyStep ` to handle both ` Path ` and ` Path ` parameters to enhance functionality by allowing recursive path copying
fixed - rsemaphore . acquire ( ) and redissonsemaphore . publish ( ) method in rsemaphore
camel - 16265 : camel - dsl - fix the test error of camel - core
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code organization
replace ` String ` with ` ByteString ` in multiple methods in ` WitnessScheduleStore . java ` to enhance data handling capabilities by using byte buffers
added a check for non - empty resultsMeta before printing to avoid printing empty result metadata messages
refactor ConcurrentLinkedQueue to improve item removal logic and introduce a new RemoveLeak class for testing to enhance performance and maintainability of the concurrent queue
added ` addSpecialTokens ` parameter to encode and batchEncode methods in ` HuggingFaceTokenizer . java ` to enhance token decoding capabilities by allowing
[ hotfix ] [ runtime ] use collections . nCopies instead of arraylist
loadsingletsfilenode : update chunkdata . addvaluechunkdatasize ( ) to use alignedchunkdata . addvaluechunkdatasize (
added session storage context key and updated view state handling in DuoSecurityMultifactorWebflowConfigurer . java to enhance session management functionality and improve user
http : / / issues . apache . org / xml / features / xmlvalidation / testjspdocumentparser . java fails due to miss schema
added a default constructor to TypeAdapter and marked the @ Ignore annotation as ignored in Java17RecordTest and Java17RecordTest to ensure proper initialization
refactored event dispatching and added kill preparation logic in SuspendedEvent . java and modified exception handling in Debugger . java to improve event
refactor AntPathRequestMatcher class implementation to improve code readability and maintainability
remove unused parameter from createresourcepolicy ( )
added null check before releasing ` _ deflaterEntry ` in ` GzipHttpOutputInterceptor ` and modified test assertions in ` BlockingTest `
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper teardown of tests after each test execution
updated the CheckSum class to normalize Unicode characters in line endings to ensure consistent formatting of MD5 checksums by removing unknown Unicode characters
refactor command handling by replacing ` descritionGenerator ` with ` cmd ` for clarity to improve code readability and maintainability by standardizing command
make ` keyListener ` final and add miss @ override annotation
updated MongoTemplate to use DBObject instead of objectToSave and added a new test for saving JSON strings correctly to improve type safety and ensure correct
added remote address handling in RequestUtils and corresponding test cases in RequestUtilsTest to ensure correct handling of multiple remote addresses in the request
updated ` getJobArgs ` method signatures to return ` ObjectBuilder ` instead of ` String ` and added flavors to ` JsUtil ` to
updated CookieManagerTest and UnmodifiableMaps to use NO _ PROXY for retrieving the host address and modified related code to improve proxy handling and
modified glyph wrapping logic in GlyphLayout . java and added a test case in BitmapFontTest . java to ensure proper handling of wrapped runs and validate
added pauseOrResumeSplits method implementations in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase classes to allow
added configuration for HIVESCRIPTIDENVVAR in HiveConf and updated ScriptOperator to use it to enhance script operator functionality by integrating ID
refactor getListedTermCounts method to utilize a stream for term counting based on facet sorting to improve code readability and maintainability by
added a new action class ` UseSeparateStepSizeAction ` to manage step size menu items to enhance user experience by allowing customizable step sizes
updated FileMenuFilter to use final fields and introduced user ID for locking functionality to improve code clarity and ensure immutability of member variables
hbase - 13276 fix roundrobintableinputformat to handle empty regionserver split
updated HTTP headers from " false " to " 0 " and changed PARENT _ SPAN _ ID from Long to Long in HttpClientRequestAdapter and
pdfbox - 4071 : use ioutils . closeallcloser to close subdoc
added fullscreen support and fullscreen handling in GwtGraphics and GwtApplication classes to enhance user experience by enabling fullscreen mode functionality in the application
updated WebfingerIssuerService to use URI instead of String for issuers and modified normalizeResource method to handle resource URIs more effectively
add unit tests for ` SoulApacheDubboClientConfiguration ` in the ` SoulApacheDubboClientConfiguration
replaced Gdx . files . internal with resolve for asset paths in SkinLoader . java to improve code clarity and maintainability by using a more
updated logging levels from warn to info for attribute releases and changed log level from warn to info in OidcDefaultJsonWebKeystoreCacheLoader
updated locking mechanism to use ` lockInterruptibly ( ) ` instead of ` lock ( ) ` in multiple files to ensure that locks are
modified the package declaration of the Compiler class to ensure proper organization and clarity of the code structure
fix : nullderefandredundantcomparisonfinder do n ' t report exception in redundant branch
fix dashrendererbuilder to use httpdatasource instead of contentid
added a configuration property for the maximum number of prepared statements cached per database connection to control the maximum number of prepared statements cached per database connection
change return type of ` set ` method in ` DelegatingConfiguration ` and ` ReadableConfigToConfigurationAdapter ` from ` WritableConfig ` to
removed the checkErr method from AutoScalingHandler . java to streamline error handling by eliminating unnecessary error checks
refactor CombinedDataset class to improve code structure to enhance maintainability and readability of the code
replaced ` buf ` with ` b ` in ` InflateIn _ DeflateOut . java ` to simplify the reading process by using a more
added a method to remove cryptography restrictions and a check for restricted permissions to enhance security by restricting access to specific security settings
fix teleportation of entity position when the event be cancel .
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to ensure that long text transform
added null check for vContext before initializing it in Vectorizer . java to ensure vContext is initialized before use to avoid potential NullPointerExceptions
fix speed value of wialon position ( fix # 102 )
hbase - 13277 disable user metric if user _ aggregate be not enable ( sergey shelukhin )
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if the
updated variable names from ` mUserPresent ` , ` mVisible ` , and ` mVisible ` to ` mAttached ` and modified the unregister
refactor AsyncFile , HttpClientResponse , and NetSocket classes for improved code organization to enhance maintainability and readability of the codebase
added params parameter to zadd ( ) method call to ensure that the correct data is added to the collection
[ scb - 2690 ] fix unit test and add utf - 8 encoding
renamed ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` and removed the @ Ignore annotation to clarify the purpose of the test class for performance
added a method to retrieve an Optional < TargetNode < ? , ? > > and refactored related logic in ` VersionedTargetGraphBuilder
updated the thresholds for epoch seconds in TimeZoneProvider to improve accuracy in time zone validation
updated the return value in EscherBlipRecord . java and added a new TestOLE2Embeding . java file with a test case
removed redundant initialization of row and column variables in JSONParser . java to streamline code and improve readability
replaced ` JavaType . ShallowClass . build ( ) ` with ` Pattern . compile ( fullyQualifiedTypeName ) ` and refactored type
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added functionality to retrieve local trailers for playback to enhance user experience by
added a method to remove glyph information from the cache in CStrike . java and implemented it in CStrikeDisposer . java to improve
fix issue with end event not be delete when process end event
camel - 14265 : camel - xml - dsl - should use @ xmlrootelement . name ( ) instead of @ xmlrootelement .
updated the endpoint URL in the test from " http : / / www . apereo . org / scottb . html " to "
add ` ` prdef ' ' option to clear all default preference
changed access modifiers from private to protected for several fields and methods in ThriftMetrics and ThriftServer classes to enhance encapsulation and allow subclasses to
removed deprecated channel handling for manual fan speed in the DanfossAirUnitHandler class to clean up the code and improve maintainability by eliminating
use hamcrest assertion instead of junit in integrations / cdi / jupiter
removed duplicate code for stopping expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null - checks and equals methods in PartitionPanel and PartitionFactory classes to ensure proper object comparison and hashing functionality for PartImpl instances
server : set disk size in custom parameter if it do n ' t exist
updated PredictionRowView to conditionally show suggested apps in the drawer based on user preferences to improve user experience by ensuring suggested apps are visible based
[ geos - 5131 ] add bboxcrs parameter to apibboxparser . tofilter ( string , coordinatereferencesystem ) method
added validation methods for value and position parameters in LibrustzcashParam . java and updated test cases in LibrustzcashTest . java to
deprecate ithrowableentity in favor of the new ithrowableentity interface
added variables ` x ` and ` y ` to ` NodeDataImpl ` for random positioning to ensure consistent positioning of nodes based on their
renamed the ` validateRefreshToken ` method to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to improve test clarity and
refactored the initialization of ` declaredDepsBuildResult ` , ` firstOrderStdout ` , and ` returnedStderr ` to conditionally
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the release of a new version with enhancements and improvements
added a condition to check for DEEP _ SHORTCUT item type in LoaderCursor . java to ensure proper handling of DEEP _ 
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hash code generation for object comparisons
changed access modifiers of classes from private to protected in BooleanQuery . java and DisjunctionMaxQuery . java to allow subclasses to access these classes
added a boolean flag ` useProxyResponseCode ` to control NTLM proxy behavior in ` HttpURLConnection ` to ensure proper handling of NT
aarch64move : add miss scratchregisters for aarch64
server : do n ' t account for reserved / secondary vms when start vms
added a condition to include a score if the maximum score is not null in JSONResponseWriter . java to ensure that the score is included only when
update new audio recoder number from 22050 to 44100 to improve audio quality during testing
modify the calculation of newOriginX to account for subject bounds to ensure correct origin positioning based on the subject ' s bounds
[ calcite - 2489 ] fix druid query - based input format to handle empty data source .
added a new constant ORIGINAL _ TYPE and updated regex patterns in CustomProperty . java , along with a corresponding test in CustomPropertyTest .
added a static factory method to create an Index instance using a parent table and data map to provide a way to create an instance of the Index class
removed redundant variable ` isBetweenGivenPeriod ` in ` Dates . java ` to streamline code by eliminating unnecessary variable declaration
updated schema compatibility handling to include location in the getCompatibility method to ensure accurate compatibility checks for different reader types
[ jbrules - 2424 ] fix queryutils to handle both collection and many - to - one and many attribute
added synchronized blocks to manage spans in TestSpanHandler . java to ensure thread safety during concurrent access to spans
change the parameter type of getText methods from List < Object > to List < ? > across multiple classes to allow for more flexible argument types in the
updated exception handling in ViewContextImpl to catch InvocationTargetException and added debug logging for authentication failures to improve error handling and provide clearer debugging information for
refactor OAuth2AccessTokenEntity class to improve code organization to enhance maintainability and readability of the code
updated error messages in SCBEngine and related classes to use " STATUS = UP " instead of " STATUS = DOWN " to provide clearer
added new project files for iOS data and moe resources in GdxSetup . java to ensure compatibility with the iOS MEC framework
updated import statements and set the ConcurrentMergeScheduler in TestSearcherManager . java to enhance merge performance by utilizing a concurrent merge scheduler
modified conditional checks and improved list handling in QTestUtil , GenericUDTFInline , and LazyBinaryArray classes to enhance code robustness and
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
do n ' t call preventDefault ( ) twice in spreadsheetkeylistenerw
hhh - 11824 - fix osgi osgi test case
use connectiontimeout instead of elapsedtimems ( ) in hikaripool timeout calculation .
[ voice ] move component . xml into non - packaged resource directory
updated file path handling in ` Compat . java ` and ` FileOpener . java ` to ensure consistent file path formatting across different operating systems
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to simplify the method ' s
check if multiple port number be specify multiple time
added null mask functionality to WebSocketClient and updated connection creation logic to handle null masks to improve flexibility in WebSocket mask generation based on null values
refactor genUDTFPlan method to return a Pair < RelNode , RowResolver > instead of a single instance to improve code clarity and
added stats tracking for bucketed preferred and non - preferred node selections in multiple classes to improve tracking and tracking of node selection states for better monitoring
add a new class ` Person ` with a private ` name ` field and its getter / setter methods to provide a mechanism to set and get the
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to ensure proper handling of the owner
added clock handling and updated logo fade - in and fade - out functionality in PlaybackOverlayFragment to improve user experience by providing smoother transitions
remove unnecessary call to world . updatecomparatoroutputlevel ( )
changed the ` IMPL ` variable from static final to non - static and modified exception handling for loading the ` SegmentReader ` class to improve flexibility
replace direct call to fireCellUpdatedEvent with SwingUtilities . invokeLater for thread safety to improve responsiveness by ensuring the event is fired on the UI
refactor type adapters to use Class < T > instead of InetAddress for type hierarchy to improve clarity and maintainability of type adapter registrations
added methods for retrieving double , long , boolean , and string values in the Series class to improve error handling and provide clearer diagnostics for null
updated option name from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java to
updated GeoRelationUtils and TestGeoPointQuery to use Math . max ( min _ lon _ INCL , MAX _ LON _ INCL
server : fix npe in getdiskofferingbydiskofferingserviceoffering
shutdown all hazelcast instance before each test to avoid test failure .
added error handling for AES / 2 / NoPadding algorithms in BlockCipherTest . java to ensure robustness by reporting specific error messages for
added filter for operation logs in QFileClient . java to enhance logging functionality for better debugging
fix aop proxy generation for type argument
do n ' t set currentconnectionaddress if proxysocketaddress be null
replaced Math . addExact with MathUtils . cappedAdd for demand calculation to simplify error handling and improve code maintainability
replaced direct exception handling with try - with - resources for ImageOutputStream to ensure proper resource management and prevent potential memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct calls to ` SearchActivity ` in multiple files to
updated the initialization of ` schemaCrawlerOptions ` and modified the ` toString ( ) ` method in ` GrepOptions ` to ensure consistent usage of
http : / / issues . apache . org / jira / browse / amq - 4892 - add osgi support to web console
added a @ Autowired annotation for PersonRepository in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for PersonRepository in the test class
fix testvertxuimanual . testvertxuimanual . testvertxuiauto . testvertxui manual
fixed switch / cases indentation in BlockCactus . java to improve readability and maintainability of the code
refactor mouse event handling in ThemeSelector . java to use MouseMotionAdapter for mouse events to improve code readability and maintainability by encap
[ java ] add flow control flow control rhspadding to prevent overflow in multicast flow control .
added vertical alignment parameter to the ` editStringAt ` method in ` IOSImplementation . java ` and ` IOSNative . java ` to
add check for null tokenization in stattokedannotator constructor to avoid npes
added distinct query handling and modified group column generation logic in ClusterIntegrationTestUtils and QueryGenerator to enhance query performance by avoiding unnecessary counting for distinct queries
[ gr - 17499 ] add string similarity option to native linkage .
bug 60497 - fix typo find by codespelling .
added null check for children before iterating over its elements to avoid potential NullPointerException when children is null
added new fields for token position and current position in MessagePackParser and updated exception handling in MessagePackParserTest to improve parsing functionality and ensure correct
added locale management in AbstractSolrMorphlineTestBase . java to ensure consistent locale settings during test execution
removed unnecessary conditional checks for ` DrawerActivity ` in ` LauncherFragment . java ` to streamline code for better readability and maintainability
added a new test class ` MetricsReporterTest ` to validate metrics registration and registration functionality to ensure that the MetricsReporter correctly registers and registers
camel - 14284 : camel - osgi - remove unused serviceregistry . typecachemap from camel - osgi
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for the Rectangle class
[ hotfix ] [ test ] use unique name for sink list in streamkafkaptest
refactor DSAParameterGenerator to use BigInteger . ONE instead of a static final BigInteger for prime size validation to improve code readability and maintainability
added support for FQDN configuration in LLAP daemon settings and updated related methods in LlapUtil and LlapTaskCommunicator to
fix clientoutofmemoryhandlertest to wait for the client to be shutdown
added ` getCmoObjectId ` method to multiple shape classes and updated related calls to use it to ensure consistent retrieval of object IDs across shapes
added a new test method ` testWithDistinctScalarQuery ` in ` DistinctTest . java ` to verify the functionality of a distinct query with
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
fix : remove unused reference to extensionadapters in managedkubernetesclient
updated subtitle text setting in DetailsDescriptionPresenter to use a new utility method for handling media items to improve code readability and maintainability by centralizing
updated JUnit imports and annotations to use the newer JUnit 5 API in TestAuthHandlerBoot , TestRSAProviderTokenManager , and
do n ' t swallow ioexceptions when generate summary html
replaced multiple instances of ` intPool . reset ( false , false ) ` with a single call to ` bytePool . reset ( ) ` to
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated the API level check from ` S _ V2 ` to ` TIRAMISU ` and added a new ` WindowSessionDelegateU
added port check for the request scheme in UrlHelper . java and updated test cases for port addition in UrlHelperTest . java to ensure correct port
added support for MSSQLDatabase in AddForeignKeyConstraintGenerator to ensure proper handling of foreign key constraints for MSSQL databases
hbase - 26144 fix checkstyle violation in hbase - server
fix neptune emzuli pipe not be able to extract item from pipe .
simonstewart : add a logging option to the htmlidentifier to allow the htmlidentifier to be inject in debug mode
updated references from ` getProducedTableSchema ( ) . getFieldDataTypes ( ) ` to ` getTableSchema ( ) . getFieldNames ( )
add thread verification to listenerset to make sure that the current player be use the correct thread
added import for CatalogAndSchema and updated sch . SCHEMANAME to use it to improve schema name handling and ensure correct schema name is used
updated color calculations in SpriteBatch and SpriteCache , replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugStart
fixed - ` ` tocompletableFuture ( ) . join ( ) ' ' method should be call from asyncfuture . join ( ) method . #
added logic to replace HTTP and HTTPS URLs with HTTP and HTTPS in SolrLoggerServiceImpl . java to ensure unique statistic year cores
refactor ` launchTask ` method to ` launchTaskFromView ` and update task handling in ` TaskActionController ` and ` TaskAdapter `
updated MorfologikFilter to include new dictionary resource handling and modified import statements to enhance dictionary resource management and improve code clarity
updated sorting options in GridFragment from " Stars " and " CriticRating " to " CommunityRating " and " CriticRating "
added imports for ViewKt and ListRow , and modified visibility check for ListRow header item to ensure proper UI behavior for non - List
refactor client type handling in StressAction . java to use a try - finally block to ensure proper resource management and prevent potential runtime exceptions
refactor HttpClient class to improve code structure to enhance maintainability and readability of the code
replaced calls to ` isCaseSensitive ( ) ` with instances of ` DB2Database ` in multiple files to improve type safety by ensuring compatibility with
standardjsr310 : disable write _ dates _ as _ timestamps for javatimemodule
[ hotfix ] [ log ] use slf4j instead of log4j in logutils
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code clarity
removed unnecessary line breaks in CoinbaseTransactionStatusDeserializer implementation to improve code readability and maintainability
added a method to retrieve the build target list from BuckConfig and updated ProjectCommand to conditionally force builds based on passed targets to improve build
removed redundant initialization of BusySpinIdleStrategy in Ping . java to ensure proper resource management and avoid potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and related classes to utilize ` ContentResolver ` instead of `
removed redundant state change checks in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] make testinglogicalslot . slotowner non - null
added a new file ` RemoveCallsToSystemGc . java ` to implement a recipe for removing calls to ` System . gc ( ) `
replace duplicate call to super ( ) with super ( ) in exception class
added an override for the setUIID method in ScaleImageLabel to ensure proper icon handling for the ScaleImageLabel
updated variable names from foundEntry to update in FeedUpdateService . java to improve clarity by using a more descriptive variable name
added support for " - cp " argument in command - line arguments in Main . java to enhance flexibility in command - line argument handling
updated the compiler configuration in avutil . java from options to compiler to ensure compatibility with the latest Av utilities
[ hotfix ] fix checkstyle violation in storageservice
refactor Test7196045 . java for improved readability to enhance maintainability and facilitate future updates
LightShaft : change default density and decay from 0.5 f to 0.5 f to allow for light shaft decay .
added support for state management in the Oidc configuration by introducing ` withState ` and ` stateData ` variables to enhance the flexibility of state
ddl : add support for inline unique constraint with null value
added support for federated share types in UsersAndGroupsSearchProvider and EditShareFragment to enhance security by restricting access to federated share shares
added a method ` needsDocValues ( ) ` to ` TestBBoxStrategy ` that always returns true to ensure that the ` needsDocValues
updated BufferAlignmentAgent and BufferAlignmentInterceptor to improve alignment handling and error messaging to enhance code readability and provide clearer error messages for unalign
added an ` intForEach ` method to ` Int2ObjectHashMap ` and modified the ` SpecialisationGenerator ` interface to include specialisations
fix scoreboard sharing in multi world . close # 1188
changed return type of count ( ) methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository
refactor MManager to simplify MTree snapshot creation logic and improve logging clarity to enhance readability and maintainability of log messages during snapshot creation
updated the dot product calculation in VectorUtil to use a denom variable instead of a direct return value to improve accuracy of the dot product calculation in
added THRESHOLD constant and methods to manage the latest confirmed block number in DynamicPropertiesStore to enhance functionality to manage and retrieve the latest confirmed block number
replaced the manual locale setting method with a call to Systems . setLocale in GpsMainActivity and MainPreferenceActivity to streamline locale management
added functionality to check if a new database was created in the LauncherClings and LauncherProvider classes to ensure that the new database is
refactor code to improve readability and maintainability to enhance code clarity and maintainability
added a null check for ` datamodel ` before setting ` is64Bit ` to ensure proper initialization of the ` is64Bit ` variable
added a check to ensure the current thread is not equal to the current thread to prevent potential deadlocks during deletion operations
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the closeDatabase method
updated imports in FullDetailsActivity , SeriesCastAdapter , and BaseRowItem to use ModelCompat ' s asSdk method to ensure compatibility with
added functionality to store and process imported XML attributes in BatikSVGDrawer to improve XML processing for SVG elements
refactor exception handling in ConsoleKeys . java to use try - catch block to improve code readability and maintainability
added support for " WaitForResult " extra in AndroidImplementation and CodenameOneActivity to ensure proper handling of the " WaitForResult " condition in the
modified the constructors and methods in HitQueue , SpanPositionQueue , and SpanPositionQueue classes to utilize a Supplier for sentinel object
replaced instances of ` WidgetImageView ` with ` TextView ` and added a description field in ` WidgetCell . java ` to streamline widget display by
added maximum attribute count validation in Attribute . java to ensure that the attribute registration limit does not exceed a defined limit
move predicatestest to impl package and fix checkstyle issue
camel - 14265 : camel - core - add caseinsensitive option to defaultheaderfilterstrategy
updated inline calculation logic and variable names in InlineLayout and Breaker classes to improve code clarity and maintainability by using more descriptive variable names
added null checks and improved view inflation logic in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
updated the ` shouldInstrument ` method to include additional Android SDK packages and excluded specific classes to streamline the instrumenting logic and enhance compatibility with Android
added a condition to return the index of the last column in the table if the association is an insert destination before the source to ensure accurate column index
updated memory limit handling in CmdModifierTest . java by introducing a method to retrieve the maximum Cgroup memory limit file to ensure compatibility with different C
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` and added a check for empty dependencies
added error handling for null rule cases in JavaTestRule . java to improve error reporting for invalid source under test dependencies
fix proxy loading for botania 1.10 . 2 and 1.10 . 2 .
updated index initialization logic in StringUtils . java to ensure atIndex is non - negative to prevent potential index out - of - bounds errors
updated BuckBlockJUnit4ClassRunner ' s timeout duration from 100 milliseconds to 500 milliseconds and adjusted sleep duration from 1000 milliseconds to 5000 milliseconds to
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to improve flexibility in managing assist content requests
updated the method for creating and checking the witness address in VoteWitnessProcessor . java to ensure the witness address is correctly encoded for better security
updated DefaultMethodRegressionTests . java file to improve test coverage for method implementations
refactor WorkloadManagerMxBean . java to improve code structure to enhance maintainability and readability of the code
updated Kafka exception handling in KafkaOutboundAdapterParserTests from KafkaProducerException to KafkaException to improve clarity and consistency in exception handling
added container . closeLoader ( ) method call to DesktopGeneratorController . java to ensure proper resource management and prevent potential memory leaks
added a ` clear ( ) ` method to ` ExceptionThrowingTaskletStub ` and corresponding tests in ` FaultTolerantExceptionClasses
updated error messages in ConfigBuilder to include specific instances of BeamJobCoordinatorRunner and BeamContainerRunner to improve clarity of error messages and provide
updated the applyTunerConfigs method to include an extraProperties parameter across multiple classes to enhance tuner configuration flexibility by allowing additional properties to be
added handling for in - progress partition instances in PinotRealtimeSegmentsManager to ensure only active segments are added to the list of segments
added a conditional check to return null if the touchable is disabled to ensure that the method does not proceed when the touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` in ` PrecompiledHeaderIntegrationTest . java ` to ensure support for
throw a retryablehazelcastexception if cacheconfig have not be create yet
added a method to check if a module is installed and updated logging messages to improve clarity and maintainability of module installation checks
added ManagedObject annotations and operations annotations to MBeanContainer and Destroyable classes to enable monitoring of MBean registrations and operations for the component that registers
updated conditional check from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in ` LongClickableSpan . java `
updated string comparisons from ` . equals ( " 0 " ) ` to ` . equals ( " 0 " ) ` for better readability to
updated the condition in ` mmm Types . java ` and added new classes ` ppp T6558559a ` and ` T65585
update worldeditlistener to print the size of the first and second position .
camel - 14284 : camel - kafka - should shutdown the consumer when the consumer be stop .
removed the default implementation of the examples ( ) method in Schema . java to streamline the code by eliminating unnecessary complexity
modified the loop condition in AgentRunner . java to continue until the thread is alive to ensure that the thread is terminated before proceeding with further operations
remove time column from dimensions in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure correct handling of time columns in aggregation
reformatted the condition for checking shards in FacetComponent . java to improve code readability and maintainability
replaced direct linker retrieval with CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibraryDescription . java
added ' name ' property with their respective getters and setters in JaasAuthenticationProperties , AbstractLdapAuthenticationProperties , and NtlmProperties
do n ' t swallow runtime exception in idealgraphprinterdumphandler . run ( )
updated scan threshold handling and configurations in BaseQueryPlan and QueryServices classes to improve flexibility and maintainability of scan threshold configurations
updated the string construction in RetryGatewayFilterFactory to include the route ID to improve the clarity of log messages related to the retry configuration
replaced direct calls to ` redisplay ( ) ` with calls to ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
replaced the ` onOverviewShown ` method with ` DiscoveryBounce . showForOverviewIfNeeded ( ) ` in multiple files to streamline the handling
refactor conditional checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a test for deleting all point documents in
updated the publish method to use updateLastState instead of true to ensure the state updates correctly during state updates
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper formatting of string list IDs in SQL queries
removed the first element from the exp list in SpliteratorCollisions . java to simplify the code by eliminating unnecessary complexity
simonstewart : add support for case sensitive text condition in the ` ` text ' ' attribute
replaced ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve readability and maintainability of
# 118 - support queryengine . forwardonlyfetchsize ( ) for mysql
added a check for ClosedChannelException before handling exceptions in HttpServerMultiplexChannelHandler to improve error handling and logging for closed channels
pdfbox - 4071 : initialize pdobjects arraylist with the size of beads
added support for rounded corners on Windows in QuickstepAppTransitionManagerImpl to ensure correct window radius calculation based on resource support
refactor background drawable handling in DesktopTaskView to use View instead of ShapeDrawable to improve layout consistency and maintainability of background drawables
added initialization of ` UpstreamCheckService ` in ` UpstreamCheckServiceTest . java ` to ensure proper initialization of ` UpstreamCheckService
refactor logging statements in AbstractSession and AbstractSessionManager for cleaner code to improve code readability and maintainability by reducing redundancy
zookeeperhivelockmanager . getlocks should return locks instead of throw exception
[ hotfix ] [ javadocs ] fix typo in javadoc
added a check for custom data before generating the mipmaps in FileTextureArrayData . java to ensure mipmap generation only occurs when
fix defaultmaskingformattertest to use single quote for key
added selectable property and methods to manage selection state in the List class to improve user experience by preventing touch events when not selectable
removed a condition that checks if the first vector value count is zero in LlapArrowBatchRecordReader . java to simplify the code by eliminating unnecessary
added file separator support and improved logging in PolicyContext . java to enhance debugging capabilities and ensure consistent file separator handling
replaced Set with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance by using a more efficient data structure
updated TLSRestrictions . java file to enhance security configurations for secure connections
( chore ) camel - kafka : use a daemon thread to close the producer
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance flexibility in node state verification by allowing specific values to be
added lock file deletion in RocksdbMavenPomCache . java to ensure the temporary file is deleted if it exists
testhquarumpeer : use getclientportaddress ( ) instead of getclientport ( ) in minizookeepercluster
added a new method ` getResponse ` to handle IOException and log the web service connection to improve error handling and logging for better debugging
updated the method call from ` toString ( ) ` to ` toArray ( String [ 0 ] ) ` for segmentTarURIStrs to improve
updated loginStudent calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to
added a null check for mCurrentItem in EnhancedBrowseFragment . java and StdBrowseFragment . java to prevent potential NullPointerExceptions during
increased the number of strings from 500 to 100 in TestSpecialOperations . java to optimize resource usage and improve performance
replaced the ` ByteArrayInStream ` class with an empty ` ByteArrayInStream ` and removed the ` hexToBytes ` method from ` WKBAttribute
rename method from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in method naming
added a check to return early if a transition is a direct substate in AbstractStateMachine . java to improve performance by avoiding unnecessary processing of transitions
added checks for ListMultimap and SetMultimap types in MultimapSubject . java and corresponding unit tests in MultimapTest . java to ensure correct equality
[ hotfix ] [ table - common ] make postjoinoperation implement joinoperation
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify the functionality of Post
http : / / issues . apache . org / jira / browse / amq - 5035 - fix test failure
refactor AvaticaDatabaseMetaData class for improved readability to enhance maintainability and ease of understanding for future developers
updated MongoDbConnectionPoolProperties , MongoDbConnectionFactory , and MongoDbConnectionFactory to use DurationCapable for lifeTime , idleTime , and
use sipservice . getmediafactory ( ) when create audiomediaformat ( )
updated handleDomainChanges ( ) and handleDomainChanges ( ) methods to return a boolean indicating filtering applied to improve the handling of domain changes and ensure
[ hotfix ] [ network ] add option to disable timeout when write idle
refactor mQuickStepStartingRotation initialization to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability
camel - 14263 : camel - xpath - add some more logging to the xquerybuilder and deprecate the old code
[ java ] use dataresource . class for read csv file in nnndataset .
pmd : fix # 1751 escape back slash in gotokenizer ( # 1751 )
added a validation check for the ' atlas ' property in the AtlasTmxMapLoader class to ensure the ' atlas ' property is present
camel - 14284 : camel - core - remove propertyplaceholdershelper since it be not use anymore .
close leveldb in blockchaintest and remove unused test
refactor CoreMarkdownNodeRenderer to use a new method for extracting lines from a list to improve code readability and maintainability by centralizing
int - 1569 fix the unit test error of webserviceinboundgatewayparsertests
replaced ` ImmutableList . Builder ` with ` List < Object > ` for bindings in ` ProjectableSQLQuery ` , ` AbstractSQLClause ` ,
added a check for the " OpenJDK " Java VM type in addition to the existing vendor check to ensure compatibility with OpenJDK
added a keepAlive ( true ) method call in ReactorClient . java to ensure thread safety during client operations
replaced hardcoded " a _ position " and " a _ normal " string with a constant ShaderProgram . POSITION _ ATTRIBUTE and "
camel - 14284 : fixed potential npe in camel - jbang when use camel - core
refactor account retrieval logic in UnfreezeBalanceActuator . java to improve null safety to avoid potential NullPointerExceptions
update version number to 3.18 . 1 ( alpha only ) .
updated type handling in ` Types . java ` to use ` unannotatedType ( ) ` instead of ` t ` to improve type safety
updated assertions and configuration handling in StorageGroupProcessorTest . java to improve clarity and maintainability of the test code
updated ` DumpableCollection ` to include ` Environment . getAll ( ) ` and added a method to retrieve all environments to enhance debugging capabilities by
added a parameter ` waitbeforestart ` of 2500 in ` FFMpegVideo . java ` to ensure that the video parameters are
removed the ` skipCorrupt ` boolean parameter from the constructor of ` OrcEncodedDataConsumer ` and related classes to simplify the constructor and eliminate unnecessary
updated import statements and modified test methods in AccessorsTest . java to improve code clarity and ensure correct behavior of list indexing functions
make lirgenerator . framemap ( ) public so that it can be use by other lir generation .
replaced ` @ Ignore ` annotations with ` @ ConditionalIgnore ` annotations in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequestRiskCalculator
fix bauble not be able to place water in the item ' s y - coordinate .
updated the ` toString ( ) ` method in ` Directory . java ` and implemented ` getLockID ( ) ` method in ` RAMDirectory
removed the method ` allowExperimentalOptions ( ) ` from the ` experimentalOptions ` check to simplify the condition for better readability and maintainability
added new ` then ` and ` then ` methods to ` BDDAssertions ` class to enhance assertion capabilities for better testing capabilities
rename variable ` hp ` to ` hostField ` for clarity to improve code readability and maintainability by using a more descriptive variable
updated log level from debug to warn for multiple Kubernetes config files and added warning for file exporting KUBECONFIG on Windows to
added file upload status handling in UploadListActivity and FileUploadService to enhance user experience by allowing users to cancel and manage file uploads effectively
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use it instead of ` ProviderInstaller ` to improve code organization
replaced references to ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and its tests to improve encapsulation and
updated SelectFromDatabaseChangeLogStatement to use a ColumnConfig with computed status to improve flexibility in selecting database change log entries
hhh - 14499 postgresqldialect should select current _ schema ( ) from dummy database
fix divide by zero error in internalpartitionserviceimpl and internalpartitionservicelitemembertest
added error handling and scheduler state checks in ExecutionScheduleManager , ExecutionScheduler , and ExecutionSchedulerImpl classes to improve robustness and provide clearer logging
simplified the initialization of InlineBox by removing unnecessary string conversion to improve code readability and maintainability
reformatted error messages in StatisticMap . java for consistency to improve code readability and maintainability
updated the return value of getStagedRectSlideEnd ( ) from 383 to 500 in TabletSplitToConfirmTimings . java to
updated WaveInfoDialog and PlacementFragment to use localized strings instead of hardcoded strings to improve maintainability and readability of the code by
updated conditional logic to include plotArea ' s owned plotAbs in KILL _ ROAD _ ITEMS check to ensure proper handling
added tests and modified touchexploration state listener handling in ShadowAccessibilityManager to ensure touch exploration functionality works correctly across different Android API levels
pdfbox - 5328 : fix cmapsubtable . getcharcodetocharactercodelookup for unicode bmp and full bmp
replace ` getPropertyAsString ( TestElement . NAME ) ` with ` getName ( ) ` in multiple gui classes to simplify code and improve readability
testnpoifsfilesystem : replace npoifsfilesystem . writefilesystem ( ) with poifsfilesystem . create ( )
added imports for PS and PlotArea , and modified return statement in Move . java to utilize PlotArea for plot retrieval to enhance functionality by
updated regex pattern in TestWebHCatE2e . java for version matching to ensure compatibility with the latest version specifications
updated the boundary condition for count from 0 to 1 in Filters . java to ensure the logic correctly handles cases where the count is less than one
add client id to kafka consumer config if consumerthreads > 1
added error handling for Java compilation failures in JavacCompiler . java to improve error reporting and provide clearer error messages during compilation failures
ggb - 204 repaint only if the selection have change .
camel - 14284 : fix checkstyle violation in camel - spring - batch
added a method ` isAnimationFinished ` to check if an animation has finished to improve animation handling by providing a way to determine if an animation has
added a new test for custom favorite icon with line breaks in LoginInfoEndpoint . java and updated import statements in LoginMockMvcTests . java to
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified the refreshing text setting in ` HomeFragment .
add space to the stopediting method to make it easy to read
refactor ObjectHashSet class implementation to improve performance and maintainability of the code
refactored null checks and simplified equality comparison logic in DataUtilities . java to improve code readability and maintainability by reducing redundancy
add a patch to allow for deletion of enchanted book , mc - 12770
add unit test for async resource ( get / put / ) and asyncget / put / put
updated header map suffixes from " target - flat " to " target - user " in ProjectGenerator . java to align with the new user header
add more logging to mail service to catch sendfailedexceptions
replaced the method ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` and introduced a constant for the empty UI label
added unit tests for Hive Hive ' s getPartitionsByNames method with different batch sizes to ensure correct functionality of Hive ' s partition retrieval
added a closing brace to the FileListListAdapter class to improve code readability and maintainability
changed ArrayList to List for file and sharees fields in OCFile . java and OCFileListAdapter . java to improve data handling efficiency
corrected the index used in removeViewInLayout from getChildAt ( getChildCount ( ) - 1 ) to getChildAt ( getChildCount ( ) - 2 ) to
removed unused imports from JavaxWebSocketConfiguration , JettyWebSocketConfiguration , and module - info files to clean up the code and improve maintainability
changed the ` expiresSeconds ` parameter from ` true ` to ` false ` in the ` S3Request ` constructor to ensure that the ` expires
fix issue with jfxradiobutton not update animation when timeline be null
updated condition checks for splits in DeweyNumber . java and added a test for zero splits in DeweyNumberTest . java
updated category set string handling in MwVolleyApi . java to remove " Category : " prefix from the returned string to improve clarity and maintain
corrected the spelling of " Invalid close control status code " to " Invalid close code " in the WebSocketClientTest . java file to ensure
added null check for classLoader in WebappLoader . java and modified assertions in TestVirtualWebappLoader . java and TestVirtualWebappLoader .
fix persistentattributetransformer . collectinheritpersistentfields for non - mapped superclass
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
added a new test class TestPorterStemFilter to verify the functionality of the PorterStemFilter to ensure that the PorterStemFilter behaves correctly
add postbatchmutateindispensably ( if successful ) to indexer
updated package names from ` org . springframework . batch - core . exlore . support ` to ` org . springframework . batch -
fix concurrentmodificationexception in chatwindowmanager . close ( )
removed Sys . touch ( ) calls from multiple Java files to streamline the code by eliminating unnecessary synchronization
updated the ` untrackedFiles ` command to include " - mardu " and modified the untrackedFiles method implementation across multiple classes to
camel - 14263 : camel - netty - should use netty timer in camel - netty to avoid concurrentmodificationexception .
made several ` direction ` , ` position ` , and ` range ` fields of ` Directional ` , ` PointLight ` , and ` 
added width and height calculations using Math . max ( 1 , 1 ) in X11GraphicsConfig . java and WGLGraphicsConfig . java to
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and corresponding tests to ensure
added a AnnoFilterTreeSet to manage annotation classes in ClassFinder . java to enhance the class finder to filter out inner classes based on annotations
updated logic for handling integer overflow in BytesColumnVector . java to maximize size of next smallBuffer to ensure proper handling of overflow scenarios and avoid
fix flaky test testwritebehindmapstorewithevictionstest . testwritebehindmapstorewitheviction
updated the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and XText
[ core ] add a method to check if two geofunctions have the same poly function .
added null check for the table before retrieving the column class to avoid potential NullPointerExceptions when the table is not initialized
added error handling for class loading in CustomChangeWrapper to improve robustness by catching potential ClassCastExceptions
updated ` DistBuildConfig ` and related classes to use ` DistBuildConfig ` instead of ` ConfigPathGetter ` to improve configuration management
updated the ` isDoubleEntryEnabled ` method to accept a default value of ` false ` and modified the return logic in ` ExportDialogFragment ` to
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable a test that needs to track down and fix
modified the ` doJoin ` method to return a boolean indicating success or failure to improve the handling of join operations by indicating success or failure status
removed the Optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription . java to streamline the code by eliminating unnecessary dependencies
added FLAG _ ACTIVITY _ NEW _ TASK flag to Intent flags in LauncherTimelineCursorAdapter . java to ensure proper task management during sending
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance query sorting functionality for better query handling
updated assertions in RepositoryConventionPluginTests to check for the first MavenArtifactRepository in the list to ensure the test correctly identifies the correct repository URL
[ openfire ] add new affiliate task to pubsub cluster .
do n ' t use requestutil in taglibraryinfoimpl if the uri be invalid .
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array - based update handling in CacheKey . java and refactored test cases in CacheKeyTest . java to improve code readability and
refactor file type detection to utilize FileSystemProvider for improved compatibility across different file systems to enhance file type detection capabilities across different operating systems
added wsSession . close ( ) method call to TestWsWebSocketContainer . java to ensure proper resource management and prevent potential memory leaks
updated ShadowVirtualDeviceManager to include new methods for retrieving VirtualSensorCallback and DirectChannelCallback to enhance functionality for handling sensor callbacks in the virtual device
added a condition to check if the context is not equal to the contextBeforeExecution in HttpSessionSecurityContextRepository to ensure that the context is removed from
updated the handling of loopback addresses in NetUtil . java to improve address validation and ensure correct retrieval of loopback addresses
updated variable names from BUF _ SIZE to DEFAULT _ BUF _ SIZE and modified deflate _ tmpbuf initialization to improve code readability and ensure
updated KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , ResolverLocalFilesystem , and ResolverLocalFilesystem classes to enhance security handling and improve error
added a boolean flag to track if the icon change listener is already installed before setting and removing it to improve performance by avoiding unnecessary method calls when the
added Russian language support in Language . java to enhance language support for Russian users
hhh - 13636 use nanosecond instead of second for sqm duration converter
disable frame state verification for substrategraphkit
added system property resets for enabled and alwaysIncludeVariantMarkersInTestName in RobolectricTestRunnerTest and TestUtil to ensure consistent
added support for loading " org . slf4j . " from the web application context to ensure proper loading of the SLF4J logger framework
updated conditional checks in ChangePackaging . java and added a test for removing the default packaging in ChangePackagingTest . java to ensure proper handling
updated file download method calls to use withExtension ( " txt " ) instead of download ( ) to ensure tests use the correct file extension for file
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear command buffer
refactor JogService and Settings to replace defaultUnits with preferredUnits in JogService and JogStatusLineService to streamline unit management
updated the expected date format in the pattern converter test to use UTC timezone to ensure accurate date formatting based on daylight saving time
removed unnecessary return statements in Terminator . java to improve code readability and maintainability
added detailed error messages for invalid file URIs and improved error handling in FileSystem and DistributedFileSystem classes to enhance clarity of error messages for invalid file
make java fx thread more responsive by give it a little more time to complete
updated FtpReconnectAttemptServerStoppedIT to use awaitility for disconnecting sessions and added a method to count connections to improve test reliability and ensure
change keyedproperties to extend concurrenthashmap instead of concurrenthashmap .
added the ` ignore ` method to multiple log classes and implemented it in ` LoggerLog ` , ` Slf4jLog ` , and `
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary casting for item and contents in BukkitWorld . java to simplify code and improve readability
removed the call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to streamline image processing by eliminating unnecessary
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to handle directory creation and unmaping in Solr to ensure compatibility with MMapDirectory and
added null check for the ic parameter before initializing cleanUpColor to prevent potential NullPointerException when ic is null
updated the query equality assertion in QueryEqualityTest . java to use ` field1 _ s ` instead of ` field1 ` to ensure the correct
refactor ExtendedOperatingSystemMXBeanImpl for improved functionality to enhance performance and maintainability of the operating system management code
added ` installLeftCommands ( ) ` method to handle left commands in ` SideMenuBar ` to enhance the functionality of ` SideMenuBar ` by allowing
added a new boolean variable ` advanceWindowed ` in ` AppSettings ` and integrated it in ` TweetActivity ` and ` UserProfileActivity
added support for SybaseDatabase in the DropPrimaryKeyGenerator logic to enhance compatibility with Sybase databases
refactor Client class to improve code structure to enhance maintainability and readability of the code
[ java ] reset the lastrecordingposition when the leader be ready .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and implemented delayed child state methods in Cell
added a return statement in NearCachedClientMapProxy . java to ensure proper termination of the method execution
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added exception handling for server startup in ListenHTTP . java to ensure graceful shutdown of the HTTP server if an exception occurs
stream upload : fix npe in stream upload
[ hotfix ] [ taskmanager ] rename parameter _ tm _ id to key in taskmanagermetricshandler
drop key that do n ' t exist in 226 to 227 upgrade
added a new test class TestThriftCLIServiceSecurity and modified the password handling logic in TOpenSessionReq to ensure that the password field is not
added maxEnergyLimit field and updated its assignment logic in VMActuator . java to ensure energy limits are set correctly based on constant calls and
added maxInMemorySize property and its getter and setter methods in HttpClientProperties . java , and updated WebClientPluginConfiguration . java to utilize
refactor caching logic in Cache . java to improve performance and reduce memory usage
added new Cucumber test and step definitions classes to the project to facilitate testing of Cucumber - related functionalities in the application
added error handling for parsing double values in TypeJsonUtils and updated test cases for sqrt and pow functions in TestArrayOperators to improve robust
removed duplicate lines in Utf8StringBuilderTest . java to streamline test code for better readability and maintainability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49537
camel - 15836 : camel - jbang - add maxnumberofoutputs option to loadbalancer to limit the number of output
updated the maximum buffered documents configuration and modified the assertion in TestIndexWriterExceptions . java to ensure that the test accurately reflects the maximum document count
replaced calls to ` putUnencodedChars ` with ` update ` method for APK , primary debit hash , string assets , and text symbols to
[ asm ] remove unused method in asmruntime
added new biome tag ( mangrOVE _ SWAMP , is _ overworld , is _ drilly , is _ terrain ) . close #
change asyncimageloader to use an executorservice instead of an asyncimageloader
changed access modifiers of fields in BaseTableUpsertMetadataManager from private to protected and refactored preloadSegments method to improve encapsulation and
updated "              
replaced ` getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( vn ) ` in ` AbstractSunSecureRule . java
camel - 14263 : camel - jbang - run - use -- repos = true to allow to specify -- repos = true
added handling for NaN scores in CrawlDbReader to ensure accurate processing of NaN scores during processing
added cleanup method in OnStartupTriggeringPolicyTest . java to ensure files are deleted after each test to prevent memory leaks during test execution
fix focus issue with filter condition editor and find action
[ hotfix ] [ checkpoint ] improve synchronization of checkpointscleaner
added a new file ` XPathWhiteSpaceTest . java ` to validate XML schemas using a specified XSD file to ensure proper validation of XML schemas
added a check to ensure the trie log is only persisted if it does not already exist to prevent potential errors when persisting the trie log layer
refactored FilledNewArrayInstruction class to improve code readability to enhance maintainability and facilitate future updates
[ java ] add timeout annotation to simplenetworktest
updated the method to check if the parent path ends with a slash instead of substring to improve clarity and correctness of file path handling
added a log statement to indicate failure to load the skin file to improve debugging by providing feedback when the skin file loading fails
added dirty flag to lgogroupedlevel2update to track if the accumulator be valid
added a static final Result constant UNDEFINED in Result . java and updated the return statement in TestStep . java to improve code clarity and maintainability
changed the exception type from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure that a null pointer exception is thrown instead of a Persistence
refactor uploadjobmultipartoperation so that it do n ' t hang forever
[ flink - 26414 ] [ runtime ] do n ' t ignore missing journalfiles when recover from the job journal
make vertical node view layout strategy ignore child node in case of fold
modified the ` pos ` and ` ensureAvail ` methods in ` DataOutput2 ` to use a new ` sizeMask ` to enhance size
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to temporarily disable tests that are
fix indexoutofboundsexception in storageproxy . getmessages ( ) .
updated the declaration of ` bufferedIo ` and ` advertiseUri ` in ` FileManager . java ` to improve code readability and maintainability
updated TransformFunctionType and TransformFunctionFactory to include additional transformation functions to enhance code readability and maintainability by centralizing function implementations
added methods ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` in ` VariableElement ` and updated package - info . java ` to
updated RFC 5280 from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compliance with RFC 5280 standards for
updated version number from 2.27 . 3 to 2.27 . 4 in Recaf . java and changed type cast from int to Character in SearchAnnotation
replaced HashMap with SparseBooleanArray for selected items in ListActivity and NoteAdapter to improve performance and memory management during item restoration
refactor conditional statements in DirectUpdateHandler2 . java for clarity to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL checks to improve compatibility and maintainability of resource management
updated PreviewPositionHelper initialization to accept a Context parameter and modified device insets handling based on multi - window mode to enhance flexibility in handling device insets
[ java ] use termentry . gettermentry instead of recordlog . gettermentry ( ) for newleadershipterm
pmdcoveragetest : add test case for output to stdout
refactor ByteArrayInputStream and add a new Skip class for testing to improve readability and facilitate testing of skipped byte cases
reformatted conditional checks in UpdaterTask . java for consistency to improve code readability and maintainability
changed the access modifier of MAX _ HEADERS from final static to public static in HeadersMessage . java and added a conditional check for block headers in
add rt . jar to the list of modclassloader . standard _ libraries .
[ java ] do n ' t send hello message if local node be not ready .
updated method signatures and parameters to use constants from Utils to improve code readability and maintainability by using defined constants instead of hardcoded strings
added a check to ensure the response is committed before sending a 500 error to avoid sending an error 500 when the response is already committed
updated conditional checks for pending elements and connection queue size in HttpSession . java to improve code readability and maintainability by simplifying conditions
updated fadeOutFakeTaskView from true to false and added functionality for showing and hiding hotseat icons based on feature flags to improve user experience by
update prefab serialization log to warn instead of error
removed redundant ScimGroupExternalGroupMembershipManager initialization and simplified the configuration of external group mappings to streamline the code and improve maintainability by eliminating
updated formatting of ` thirtyDays ` in ` FreezeBalanceActuator . java ` and added validation in ` TransferActuator . java
updated lastIndexOf method to use File . separator instead of a hardcoded ' / ' to improve compatibility with different operating systems
do n ' t show input help panel when there be no error message
updated the method to retrieve the session description in GpsMainActivity and modified the service intent handling in AnnotationViewFragment to improve user experience by providing
updated JsoupNonVisualRegressionTest . java to include a conditional check for the number of pages to ensure that the test correctly verifies the number
add androidnativebufferallocator and deprecate androidbufferallocator
added handling for flag names starting with a " ! " in Main . java and modified flag comparison logic in PrimaryItem . java to ensure accurate flag
added a NOPMD comment to the ResultSet initialization in JDBCHistoryCache . java to improve code clarity and maintainability
updated the string comparison from " ITEM _ USE _ GRANT _ SELECT _ REWARD " to ItemUseOp . ITEM _ USE
[ hotfix ] [ test ] fix test failure in priorityelement
fix affinity api unit test and remove unused test
added a null check for the main . command and modified the condition to check for help instead of verbose to ensure help is displayed when the argument is
increased the output stream size in multiple Java files to optimize memory usage and improve performance
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a new class T8032819 and modified conditional logic in ClassWriter . java , and created a test class T8032819
added an assertion to verify the length of the sn field in the Person class to ensure the correctness of the sn field in the Person class
added a null check for the file extension before checking if it is blacklisted to improve robustness by avoiding potential NullPointerExceptions
contact right button menu : do n ' t close the contact button when the contact be cancel .
[ hotfix ] [ runtime ] simplify slotsharinggroupassignment and simpleslot
simplified the calculation of the screen index in InstallShortcutReceiver . java to improve code readability and maintainability
refactor PlainSocketImpl binding and closing logic in PlainSocketImpl . java to improve resource management and ensure proper closure of socket implementations
added functionality to manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve item management in BookmarkPicturesFragment and Media
updated log message to reference element ' s in - view center point instead of the element ' s in - view center point to improve clarity of log
added a new file ` bug4865918 . java ` implementing a GUI test for the ` TestScrollBar ` class to address bug 486
replaced the initialization of VelocityEngine with direct usage of Velocity . evaluate to simplify the code and improve maintainability by reducing complexity
replaced specific imports with a wildcard import and added a new command for group triggers in QuestCommand . java to improve code readability and
refactored file selection functionality in AccountsActivity and removed unused imports in DatabaseAdapter and AccountsActivity to improve code clarity and maintainability
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to improve code readability and maintainability by using Lomb
added a constant CONFIG _ URI for the cloud service configuration to improve code maintainability and readability by centralizing the configuration URI
removed setViewportComponent and setJScrollPane methods from BrowserPanel . java to streamline code by eliminating redundancy
updated key code handling in LwjglInput and added a new constant KEYCODE _ FORWARD _ DEL in ParticleEditor to improve
updated MoreIndexingFilter to conditionally retrieve MIME type parts based on configuration to improve flexibility in handling mime type parts based on configuration settings
added a pattern for extracting author information from the comment text in JSDoc . java to improve code readability and maintainability by centralizing author
updated metrics constants from " delta _ total _ databases " and " delta _ total _ count _ dbs " to " create _ total _
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig instead of a list of table names to
updated oauth2LoginLinks method to accept queryParams as a parameter and added error handling to improve error reporting based on query parameters
updated the calendar name from " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar " in TC
added support check for Firefox in WebAudioWrapper . java to ensure compatibility with both IE and Firefox browsers
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the empty constructor in ` InterceptorConstants ` to enhance functionality by
added default character set to the CREATE TABLE statements in Parser . java and updated test cases in TestCompatibility . java to ensure compatibility with the new database
refactor methods in WriterRecordBatch and StreamingAggTemplate for consistency and clarity to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in executiongraph . getexecution ( )
added a boolean flag ` hasFrom ` and modified SQL table appending logic in ` Delete . java ` and ` DeleteDeParser . java `
replaced success status checks with a multi status check in SynchronizeFolderOperation . java to improve clarity and functionality of synchronization logic
refactor recipe matching logic to use a new utility method for applicable tests to improve code readability and maintainability by reducing duplication
updated regex pattern in LogAnalyser . java to exclude colons from timestamps in log lines to ensure accurate parsing of timestamps with colons
camel - 16265 : camel - spring - boot - integrate - cloud - aws2 - camel - aws2 - camel - aws2 -
fixed - rsearch . setmaxexclusive ( true ) and rsearch . setmaxexclusive ( false ) method be n ' t call . #
add option ` ` select change ' ' and ` ` no change ' ' to cclicensestep
added a null check before storing global IDs in IfcModel to avoid potential NullPointerExceptions when accessing global IDs
replaced direct equality check with comparison strategy comparison in OptionalAssert . java to improve readability and maintainability of the code
pdfbox - 4071 : do n ' t allow linebreaks to be add to the last margin , a suggest by valerybokov
added a new file TestArrayCopyToFromObject . java implementing a test method for ArrayCopyToFromObject functionality to verify that ArrayStoreException
updated path escaping in ` BuckPythonProgram . java ` to use ` Escaper . escapeAsBashString ` directly to ensure consistent Python path
fix race condition in ajp / ajp / nio and ajp / ajp / ajp / ajp
make craftinghelper . findfiles ( ) use visitallfiles instead of visitallfiles
added JUnit Ignore annotation to TestLlapSignerImpl . java to mark the test as ignored due to unstable state
updated exception handling in TestInternalInputBuffer to check for null exceptions before calling doRequest ( ) to improve robustness by preventing potential NullPointerExceptions
refactor autoloadCall method to accept a lower name parameter and update lock management to improve flexibility in autoloading classes based on their lower case
removed unnecessary server version comparison logic from CustomPlaybackOverlayFragment and PlaybackController to streamline server version comparison logic and improve code clarity
updated KDC and OneKDC classes to use canonical host names instead of hardcoded " localhost " to ensure compatibility with different environments
updated the Jsr250Voter to conditionally return ACCESS _ DENIED based on the presence of the Jsr250
updated import statements in MP4Parser . java for improved clarity and consistency to enhance code readability and maintainability by standardizing import statements
added HS2 _ PROXY _ USER constant and modified session parameter handling in ConnectionFactory . java to improve session parameter management and ensure proper user
camel - 15836 - camel - hdfs - support snappy compression for bzip2 and snappy
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper synchronization during test execution
[ bug - 64627 ] fix bug # 24447 - fix for multi - cell array formula
updated glyph positioning logic in GlyphLayout . java and modified test message in BitmapFontTest . java to improve glyph positioning and enhance test coverage
refactor Fabric8IstioIT to use direct reference to ISTIO _ BIN _ PATH and simplify image loading in the container
updated PlaybackController . java and Utils . java to use TvApp . getApplication ( ) . getPlaybackManager ( ) . reportPlaybackStart
simpleauthority : do n ' t hit the disk on every invocation . patch by jbellis
putfromloadallbackupoperation , putfromloadallalloperation , recordstore . existinmemory ( ) should not throw npe if maploader
updated the bitwise operation from ` LENGTH _ BIT & ERROR _ BIT ` to ` LENGTH _ BIT | ` to ensure
fix default policy not work when no read policy be find
replaced SoftReference with ConcurrentHashMap for managing CompositeFont instances to improve memory management and prevent memory leaks in concurrent scenarios
set prefHeight to 0 instead of subtracting the height of the node to ensure proper height adjustment for tree nodes
dmn feel : improve error message in case of miss variable
removed unused import statements across multiple Java files to improve code clarity and reduce unnecessary dependencies
changed the access modifier of ` finishRunningRecentsAnimation ` method from private to public and modified the execution mechanism in ` NavHandleLongPressInput
added null checks and improved edge handling in ElementFactoryImpl , ImportContainerImpl , and ImporterGDF classes to enhance error handling and ensure proper
[ beam - 10220 ] fix npe in fnapicontrolclient and beamfnstategrpcclientcache
nifi - 145 : fix bug where bin file be not create when size exceed the bin limit .
replaced the method of finding the closest core in the enemy ' s cores to improve code clarity and maintainability by utilizing a loop for finding
added a check to skip content - length in RestTemplateCopyHeaderFilter and implemented a test for it in TestRestTemplateCopyHeaderFilter to ensure
added handling for STRING and CHAR literals in Java2TypeScriptTranslator , modified transpile method in SyntaxTests , and updated test assertions in
updated filter parameters and adjusted sample sizes in FilterFactory , ChannelizerViewer , and PolyphaseChannelManager classes to improve code clarity and ensure consistent
hbase - 11824 add - allregions option to canary ( jesus camacho rodriguez , review by ashut
[ hotfix ] [ cassandra ] remove unused import of nodemodule in cassandraconnectorfactory
[ kahadb ] reset cursor position in order index when store be close
callpanel : set minimum size to match the size of the call dialog .
fix blockfalling not lose state information during world gen .
updated TestHTTPSamplersAgainstHttpMirrorServer to use static fields and modified test setup and teardown methods to improve memory management and simplify test
added KerberosPrincipalDAO dependency and modified entity removal logic in KerberosPrincipalDAO to improve data management and ensure proper removal of Kerberos principals
removed the boolean parameter from getTableSnapshot method call in StatsOptimizer . java to simplify the method call by removing unnecessary parameter
do n ' t wait for the poller to stop if the poller can not be run
updated the error message for android . licenseKey to include a description for Monetization setup and paste the Base64 - encoded RSA public key to
updated ` fileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` in ` DLNAResource `
[ drools - 107 ] fix package name resolution for spring - boot - inf . classes
added an assumption to skip CheckIndexTest when the runtime version is 19 to ensure compatibility with older versions of the test
removed context parameter from assignTargetsForSplitScreen method and streamlined target assignment logic to simplify method signature and improve code readability
[ hotfix ] [ doc ] fix typo in leaderlatch javadoc
added methods for initializing zk parameters in SolidityNodeHttpApiService to enable dynamic initialization of zk parameters for better resource management
move getdepthinblocks ( ) method into transactionconfidence . getdepthinblocks ( ) so it can be call multiple time .
renamed ` longtitude ` to ` longitude ` and updated related methods and methods in ` CodenameOneImplementation ` , ` Location ` , and
initialize platformName to " ios " to ensure platformName defaults to " ios " for compatibility
refactor PageEditClient to improve code organization to enhance maintainability and readability of the code
do n ' t use ` ` if ' ' for moz and webkit line dash
refactor CreateVisibleSignature class for improved clarity to enhance maintainability and readability of the code
added error handling around the next outgoing frame execution in AbstractExtension . java to ensure that failure notifications are written when an exception occurs
refactor classloader retrieval logic in ContextHandler . java to use PrivilegedAction for better security to improve code readability and maintainability by utilizing privileged
added logic to clear parent and child categories in the FeedCategoryDAO to ensure that only child categories are updated to prevent duplicate entries
add miss title for update mode , tool , and library in contribution manager dialog
added a new ` vwap ` field and its associated getter and builder methods to the ` Ticker ` class and updated the constructor accordingly to
added support for a noWidgets view and updated related methods in SearchAndRecommendationsScrollController and WidgetsFullSheet to improve user experience by
added rendergraphapi to worldrendererimpl to allow tinting of the output to the screen
added a color setting for the primary theme in NCFirebaseMessagingService to ensure the messaging color reflects the current theme theme
updated ShadowUsbManagerTest . java to improve test coverage to enhance reliability of the ShadowUsbManager functionality
add log to help track down test failure
added a call to update the selectedConfiguration in Rocket . java to ensure the selectedConfiguration is correctly updated during configuration updates
updated bitmap dimensions calculation to use Math . max ( 1 , bounds2 . width ( ) ) and bounds2 . height ( ) to ensure that
replace instances of HashMap with LinkedHashMap in multiple classes to maintain insertion order to improve performance and maintain consistency in data structure
replaced ` NativeClosureManager ` with ` ClosurePool ` for managing closures to improve memory management by utilizing a dedicated closure pool
test : migrate camel - spring - boot to junit 5 ( # 4963 )
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , for testing WebSocket integration to ensure proper
[ dsm ] remove deprecated method getservicebyconfig from dsm
refactor authentication comparison logic into a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by centralizing
added a conditional check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to
refactor code to replace calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` to improve code clarity and maintain
added a new ` @ Insecure ` annotation and modified the ` MessageBuffer ` class to implement secure access methods to enhance security by restricting access
added new Hive configuration variables to HiveConf . java to enhance configuration flexibility for different Hive configurations
initialize scopes and policies with a HashSet in ResourceSet . java and add null check in DefaultResourceSetService . java to ensure that scopes and policies
made the ` decrefOnClose ` variable final and updated constructor to accept ` ReaderFinishedListener ` as a parameter to enhance immutability and
refactor multiple socket channel and test classes for improved consistency to enhance maintainability and readability of the codebase
simonstewart : fix flaky test by use setvalue instead of sendkeys
replaced calls to ` $ Gson $ Types . getFirstTypeArgument ( type ) ` with ` getFirstTypeArgument ( type ) ` across multiple classes to
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet < Integer > and Collection < Integer > to
added duration property and updated background color handling in FlipTransition . java to allow dynamic adjustment of the transition duration based on user input
removed trace logging for validating subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary trace logging
bump forge version to 9.10 . 0 - rc1 and 9.0 . 0
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages in ` StackLocator . java ` to improve
[ java ] add support for java 16 and java 16 in the parser .
updated background padding logic in ExpansionViewHelper to handle different index scenarios to improve layout responsiveness for different response scenarios
[ hotfix ] [ backupreplica ] call callback on partitionbackupreplicaantientropyoperation when cluster version be below 3.0 .
added metadata management functionality to SeedUrl and SeedResource classes to enhance the functionality of metadata management in the application
added a null check for declaration before cloning the pattern in PatternBuilder . java to avoid potential NullPointerExceptions when declaration is null
refactor TestCoprocessorWhitelistMasterObserver . java for improved readability to enhance maintainability and facilitate future updates
ww - 3434 add package name to annotation validator ( # 3434 )
updated null handling in ` containsAllOf ` and ` containsExactly ` methods to use ` ( Object ) null ` and ` ( Object [ ]
added ` stream ( ) ` and ` parallelStream ( ) ` methods to ` MapIterable ` , ` PrimitiveObjectMap ` , and ` Map
modify return statement to clone the notifInfo object to ensure that the original notifInfo object remains unmodified
appw : fix nullpointerexception in case sensitive key comparison
refactor AEADBlockCipher class to improve code organization to enhance maintainability and readability of the code
add isvariablelocal ( ) method to ilocalvariablesmap , add isvariablelocal ( ) method to webvariablesmap and ilocalvariablesmap
added a null check and initialization for resource IDs in PackageResourceTable . java and changed default resource mode from best to legacy in Robolec
added a condition to check if the UL size is zero before retrieving the table buffer to ensure accurate metrics are set based on the current UL
updated SignPlugin to accept a list of message readers and modified constructor to accept it to enhance flexibility in handling multiple message readers in the plugin
refactor Int2ObjectCache class for improved performance to optimize performance and reduce memory usage
added validation check for MavenDeployer in StandardMavenAuthenticationProvider to ensure proper handling of remote repository validation
refactor AudioNode class to improve code structure to enhance maintainability and readability of the code
added SSL context initialization and improved cookie handling in LinkyHandlerFactory and EnedisHttpApi to enhance security and error handling during HTTP connections
refactor HiveFunctionRegistry to use Stream for function replacements instead of an array of strings to improve code readability and maintainability by utilizing a
http : / / issues . apache . org / jira / browse / amq - 4663 - fix javadoc and add javadocs
modified the ` getBuildTargetForAlias ` method to handle possiblyFlavoredAlias and adjusted its logic accordingly to improve handling of alias strings and ensure
[ odata2 ] fix infinite loop in odata2consumer . getresultsprocessed ( )
added support for equivalent Hive versions in MetaStoreSchemaInfo to ensure accurate version retrieval based on available versions
server : fix expunge for vms that do n ' t expunge
added @ Deprecated annotations to multiple locations in AbstractDateAssert . java to indicate that these elements are outdated and should not be used in future development
updated ONDashClockExtension and AlarmReceiver to use context - based alternative title retrieval instead of text parsing to improve code readability and maintainability
updated GoogleAuthUserConfigTable to use " nvarchar / varchar " instead of " varchar " and modified assertions in TotpEndpointIntegrationTests to ensure
replaced calls to ` editor . commit ( ) ` with ` editor . apply ( ) ` in multiple files to ensure changes are applied to the shared
added a new ` TestIdleListener ` class to the ` StandardSession ` initialization in ` AsyncTimeoutTest . java ` to enable tracking of idle
fix bigqueryio integration test to work on window
added background resource setting and reset functionality for icons in HotseatPredictionController and BubbleTextView to enhance visual feedback by resetting the background for better
corrected the casing of the method name ` getFlushAfterQuery ` to ` FlushAfterQuery ` to improve code readability and maintain consistency
[ native ] add unit test for native worker query
fixed bug in lime explanation . getactivefeatures ( ) . getalloutputs ( ) .
added a new parameter " - r " to the InstallCommand class and modified related method signatures to allow users to pass arguments for build failure messages
fix infinite loop in lineselection . getcurrentlineendinparagraph ( ) .
added a check for the state of the pipeline in ContainerBase and StandardContext classes to ensure that the manager ' s state is available before proceeding
added clipping to outline to the background view in QsbWidgetHostView to improve visual consistency of the QSB background view
added flag processing tracking and logging in SQLManager and modified string splitting in PlotArea and BlockTypeListFlag to improve tracking and logging of flag conversion
updated FloatingTextRenderer . java to conditionally enable or disable depth tests based on whether the floating text is opaque to improve rendering accuracy based on
add miss ' var ' in getisolated _ global and getRTLD _ GLOBAL method in libffifficontextposix .
added getter / setter for transaction propagation behavior in jdbcaggregationrepository
added support for l1 and l2 regularizations in the base layer to ensure proper initialization of layers based on their regularization contexts
added exception handling for read / write operations in AbstractChecker . java to improve robustness by catching potential exceptions during execution
changed the visibility of the ` colorStack ` variable from static to instance variable to allow subclass access to the ` colorStack ` array directly
updated method calls in ` getMappedStatement ` and ` hasStatement ` from ` false ` to ` true ` in ` Configuration . java ` to
convert the ` tradableIdentifier ` and ` currency ` parameters to lowercase in ` BTCEPollingMarketDataService . java ` to ensure consistent handling
updated expected values in ChannelStateTests for MQTT publishing values and adjusted expected values to ensure accurate representation of channel state values in tests
remove the ` versionedhash ` parameter from the ` enginenewpayload ` test
fix issue with empty triggerprice field in mutableofferview
student feedback submission edit : do n ' t redirect to home page if error occur
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 13211 addendum fix a bug in hstore . getresult ( ) .
# 118 - fix entitybeanintercept . setchangedproperty ( ) and savemanybeans . savemanybeans . savemanybean
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator ` to control the URI saving behavior based on
added static methods ` nSetLayerType ` and ` nSetLayerPaint ` to ` ShadowRenderNode ` for setting layer types and paint to
updated import statements and modified popup menu visibility logic in LWChoicePeer . java to improve code readability and ensure proper visibility of popup menus
modified the initialization of the ' insert ' variable in StressProfile . java to ensure that the ' insert ' variable is properly initialized and lowercased
use scala . collection . asscalaiterable ( ) instead of scala . collection . javaconversions . asscalaiterable (
added null check for requests and improved logging messages in MockServerEventLog and HttpForwardObjectCallbackActionHandler to enhance robustness and provide clearer
added a warning log for properties file loading failure in DefaultEnvironment . java to improve error handling and provide visibility into configuration issues
[ hotfix ] [ table - common ] fix resource leak in clientmain
added support for multicast NICs in SetOutgoingIf . java to ensure proper handling of non - multicast NICs during network operations
modified the instantiation of sqlCommand to include a length parameter to enhance flexibility in handling command lengths
updated consume time and energy consumption times in UnDelegateResourceActuator and removed redundant method calls in BandwidthProcessor and EnergyProcessor to streamline
added a method to set an invalidSessionStrategy and updated its usage in the SessionManagementConfigurer class to improve session validation by allowing a customizable invalid
improve error message in ProtobufAnnotationSerializer to include empty index details to improve debugging by providing clearer context for token retrieval failures
added a new test class ` _ containsKeys _ Test ` for testing the ` containsKeys ` method in the ` MapAssert ` class to ensure
added JDBC4TemporaryPreparedStatementMethods interface and modified JdbcProxyGenerator to utilize it to enhance JDBC support for temporary prepared statement methods
added a ensure method to ServerWebSocketContainer and modified DirectUpgradeTest to use Handler instead of ContextHandler to improve WebSocket container management and ensure proper resource
changed the return type of ` toLanguageFlags ` and ` getLanguageFlags ` methods from ` ImmutableMultimap ` to ` ImmutableListMultimap ` to improve code
pdfbox - 4071 : use point2d . float instead of point2d . float , a suggest by valerybokov
replaced the initialization of the hooks array with a static final instance of MethodHook . EMPTY to improve code readability and maintainability by reducing redundancy
added a boolean parameter ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the return statement in ` MockAuthenticationManager ` to allow
updated the afterJob method signatures in JobListener , JobListenerSupport , and CompositeJobListenerTests to include JobExecution as a parameter to enhance job
added a check for ` canExecute ( ) ` in the ` canWrite ( ) ` method in ` SharedLibraryLoader . java ` to ensure
update protoc to v3.15 . 3 : update protoc to v3.15 . 3
bug 60497 - fix for sampleevent parameter in saveservice and resultcollector
added constant strings for battery level , annotation , time zone , and profile name in BundleConstants . java and updated CustomUrlManager . java to util
searchexpression : make applyrule ( ) return a map instead of a hashmap , a suggest by valerybokov
ggb - 1010 use absolutescreenlocateable instead of geowidget
updated resize method and texture settings in ProjectiveTextureTest . java and modified texture handling in ProjectiveTextureTest . java to improve image resizing
modified the return type of setResourceToDelegate ( ) from void to File to ensure the output file is writable to ensure that the resource is writable
camel - 14284 : fixed property component intercept uri to resolve property placeholders .
updated condition from " greater than or equal to " to " greater than " in ActionScheduler . java and modified test assertions in TestActionScheduler .
updated the path for dbg _ zip to use a temporary directory and added null check for debug _ log before replacing it with a new one to
add ` ` hide hidden ' ' event to ` ` notificationoverlay ' ' for rendering debug config
add resetgate ( ) method to pipe so that it can be use by other pipe .
replaced direct instantiation of TestSupplementary with a try - finally block to ensure locale settings are restored to prevent resource leaks during test execution
updated random color value in the Team constructor from 0.5 to 0.4 to improve the visual quality of team colors
[ java ] use collection instead of set in sequencematcher to prevent concurrent modification exception .
updated the condition to check for null and empty expectedExceptions in SoftAsserts . java to improve clarity and correctness of exception handling logic
updated error handling in StorageResources and added logging for InvalidTypeIdException and UnrecognizedPropertyException in StoragePluginRegistryImpl to improve error reporting and
[ hotfix ] [ table - common ] move call tree csv to csv file
added null checks for the note variable and updated related logic in DetailFragment . java to improve robustness by preventing potential NullPointerExceptions and ensure
added peakTasks tracking and adjusted the loaded calculation logic in AssetManager . java to ensure accurate tracking of loaded assets based on the peak tasks
simonstewart : make the default firefox driver enable native event on window
added support for custom score and fetch interval metadata in the Injector class to enhance the flexibility and usability of the CrawlDatum initialization
updated import statements to use ` org . apache . commons . collections4 . map ` instead of ` org . apache . commons . collections ` to
added a method ` isShareSchema ( ) ` to ` CoreContainer ` and implemented schema sharing functionality in ` TestCoreContainer ` to improve schema
updated sizeInBytes method to accept a boolean parameter for sizeInBytes ( true ) across multiple classes to ensure accurate measurement of segment sizes for
updated assertions in VersioningTest . java to check for null before parsing the Version1 _ 2 object to ensure that the test correctly verifies that the
updated SQL query in Field . java and added tests for not null domain columns in AbstractJdbc2DatabaseMetaData . java and DatabaseMetaDataTest . java to
[ java ] return true instead of false when append new leadershiptermevent to consensusmoduleagent .
removed the buildMediaType method from WebClientPlugin . java to streamline media type handling and improve code clarity
replaced calls to ` fillUsingLengthPrefix2 ` with ` fillSlice ` in multiple classes to improve clarity and functionality of term byte filling operations
added validation for compacted base and visibility transaction validity in AcidUtils . java and implemented a test for cleanup after major table compaction in Test
fix npe in ptableimpl when immutable storage scheme be null
added two new files : PojoProducersCustomized . java and RestProducersCutomized . java to define component components for Pojo
replaced hardcoded values for " cache " with a constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintain
added a call to AesGcmSivProtoSerialization . register ( ) in AesGcmSivKeyManager . java to ensure
fix wooden slab not be replace in OreDictionary . java
refactor multiple session management classes for improved consistency to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class hierarchy by
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14199 fix test failure on oracle
corrected the position of the spriteBatch drawing in HelloWorld . java to ensure the spriteBatch draws the correct position of the texture
refactor PlayerFunctions to simplify y - coordinate calculation and add toString method in PlotId and WorldGuardListener to improve code readability and maintainability
added a deprecated version constant for Lucene 8.6 . 0 to signal that the version is outdated and should no longer be used
updated print statement formatting in SSLSocketImpl . java to improve readability and maintain consistency in logging output
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure
refactor dependency type handling from String to SemanticGraphCoreAnnotations . DependenciesType to improve code readability and maintainability by consolidating dependency
refactored ` NoSuchBuildTargetException ` and ` ParseContext ` methods to utilize ` parseContext ` for constructing build target descriptions to
updated the method call from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to ensure proper
updated the initialization of ` configBlocks ` from an array of ` Block . blocksList . length ` to a new array of ` 256 ` to
updated logging statements to use ` System . out . println ` and modified version checks in ` PlotSquared ` and ` CraftBukkit ` to
removed escaping Postgres questionmark operators from SQL statements in AbstractSQLChange . java and its corresponding test in AbstractSQLChangeTest . java to ensure
added ` ofAll ` and ` withAll ` methods to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to enhance
pdfbox - 4071 : add html escape code to buildnavandpdfbody for adoc file
updated MqttBrokerConnection instantiation to set the client ID to false to ensure that the connection parameters are set to false for better reliability
updated the method for retrieving the change set to use the root change log if it is null to improve robustness by ensuring the correct ChangeSet object
[ minor ] fix checkstyle violation in plugin . xml
added HiveMetaStoreClient initialization and logging in TestHiveMetaStorePartitionSpecs . java ; added logging in TestObjectStore . java to
added an " order _ currency " parameter to the BithumbAuthenticated class and updated its usage in BithumbAccountServiceRaw to support additional parameters for
deleted the SSEFluxWebConfig . java file to the functionality was no longer needed in the project
updated method checks from ` getFullyQualifiedName ( ) ` to ` getReturns ( ) . isVoid ( ) ` across multiple files to improve code
added a new endpoint to list YAMLs and updated variable names for clarity in YamlResource . java to improve code readability and add a new endpoint
removed public access modifier from equals and hashCode methods in Marker class to enhance encapsulation by restricting access to these methods
refactor thread factory to use a lambda expression instead of an anonymous class to improve code readability and maintainability by reducing duplication
added unit tests for adding a list with a simple and mapping converter in MongoTemplateTests . java and created a new PersonWithAList class to
ggb - 118 fix for size of applet in web
replaced direct visibility setting of toolbar with a delayed update using a Handler to ensure toolbar is hidden after a delay to improve UI responsiveness by preventing
[ iotdb - 4892 ] fix the issue that the first page reader do n ' t exist any more .
server : do n ' t save password for vms when router be not run
initialize usingOutputStream , usingWriter , and isCharacterEncodingSet to false in Response . java to ensure proper handling of output streams and character encoding settings
added a warning check for assignment side effects in GroupDialog . java to ensure that assignment side effects are properly handled and prevent potential errors
refactor JSON and JSONObjectConvertor classes for improved readability to enhance maintainability and facilitate future updates
updated the icon width and height check from maxWidth to maxWidth in FileUploadApiController . java to ensure that the application does not exceed the maximum size
refactor methods in RegisteredServiceProperty and JwtTokenCipherSigningPublicKeyEndpoint to improve code readability and utilize JcaPEMWriter for
added file checks for MIME types on Windows and implemented content type checks in Basic . java to ensure compliance with Unix file systems and improve error handling for
[ netty ] implement jzlib compression in nettyconnection . iscompressed ( ) .
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and removed it from ` MethodHandles . java ` to stream
removed the ` doConnect ` method parameter from the ` connect ` method in ` ChannelProvider ` and ` ProxyChannelProvider ` to streamline the
drill - 164 : fix bug in textreader . writecsvheader ( ) for empty final column
added compass gravity settings and margin margins in NearbyMapFragment . java to improve map rendering by using compass margins
added a new test method ` testInterpolation ` in ` GeoPathTest . java ` to verify the interpolation functionality of ` GeoPath ` to ensure
added exception handling and modified method signatures in LeafFilterFactory , ParquetFilterPredicateConverter , and TestParquetRecordReaderWrapper to improve error handling
added logic to set the language for video streams in LibMediaInfoParser . java to ensure correct language handling for audio tracks
added a warning log for schemas in the microservice version before incrementing the microservice version to improve clarity of warnings and ensure compatibility with the
replaced direct size adjustment with a call to ` addAll ` for various array types to improve code readability and maintainability by reducing redundancy
reformatted code for better readability in DataSourceProxy . java to improve code clarity and maintainability
added null and empty constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository classes to ensure proper handling of null and empty client registration
added a new method ` resetUIState ( ) ` to ` SchemaUpgradeHelper ` to reset the UI state of the database to ensure the database
added a new boolean field ` failedStep ` and modified conditional logic in ` JUnitReporter ` , along with new test cases in ` JUnit
allow . in entity selector . fix # 82386 ( # 82389 )
implement Closeable interface in Selector class to enhance resource management and prevent potential memory leaks
added MultiplexConnectionPool initialization and modified connection pool initialization in MaxConcurrentStreamsTest . java to enhance connection management and improve test reliability
added multiple calls to stringType ( ) in CoreOptions . java to ensure consistent handling of string types in the options
updated HqlQueryRenderer to handle character and parameter contexts in HqlQueryRenderer and updated file names in EclipseLinkUserRepositoryFinderTests
updated HTTP status codes in HttpGenerator , HttpChannel , HttpChannelState , and Response classes to use HttpStatus . NOT _ SET _ 000 and
pdfbox - 4071 : fix typo and improve code readability
fix flaky test due to slow creation of mock data source .
refactor ParquetFormatPlugin and ParquetGroupScan to improve file selection handling and metadata caching to enhance performance and maintainability of Parquet metadata
updated the ` isSuccess ` variable to always true and modified the compilation process in ` Jsr199Javac . java ` to ensure
added a baseTableModelListener to handle table changes in DefaultSortedTableModel to enhance UI responsiveness by allowing listeners to respond to table changes
do n ' t limit server number to a maximum of 65535
added SDK version checks for Android KITKAT in AuthenticatorActivity and AccountRemovalJob , and modified storage map initialization in DocumentsStorageProvider to
removed the call to Log _ OC . startLogging in MainApp . java to streamline logging process by eliminating unnecessary logging
added ThrowableAnalyzer to handle wrapped RequestRejectedExceptions in FilterChainProxy . java to improve error handling by ensuring wrapped requests are properly handled
updated StringBuilder ' s arraycopy method to use ' this . length ' instead of ' length ' for improved clarity to enhance code readability and maintainability
added a check for an empty filterList in Filter . java and created a corresponding test in TestFilters . java to ensure that an IllegalArgumentException is
added a new class ` TbStopWatch ` that extends ` StopWatch ` and integrates ` StopWatch ` functionality to provide a centralized way to
fix a typo in pliststore . setinitialized ( true )
added @ Deprecated annotation to multiple continuation classes to signal that these classes are outdated and should not be used in new code
[ zeppelin - 3131 ] set the current thread ' s context class loader so that it can be use by remote interpreter
fix typo in commandsourcestack . getentity ( ) - > source . source . source
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with newer Android
corrected a typo in the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` to improve code readability and maintain
# 118 - add beandescriptor . getsimplename ( ) and beanpropertyassocmany . getelementdescriptor ( ) . getname ( )
updated URLs from " wro / all . js " to " static / all . js " and added a new WroSassProvider
[ iotdb - 4892 ] fix issue with show latest timeseries
corrected the spelling of " appContextLocation " to " contextConfigLocation " in multiple files to ensure consistency and accuracy in configuration naming convention
refactor exception handling in OCSPChecker to check for CertPathValidatorException to improve clarity and maintainability of error reporting
benchmarker : add writeoutputsolutionenabled property to allow configuration of output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 51 )
added a new test class ` Issue _ 815 ` to validate the functionality of ` SortedTableMap ` to address issue # 815 related to
added shapeless recipe for slime and slime . close # 118
mahout - 132 : fix infinite loop in sequentialaccesssparkvector . getelements ( )
added functionality to manage the ownerplot metadata for Shulkers in BukkitMain and EntitySpawnListener to enhance entity management and ensure proper cleanup of plot
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
updated import statements and added methods to manage maximum file name lengths in IOHelper . java and MultiKahaDBPersistenceAdapter . java to
replaced direct instantiation of UpToTagChangeSetFilter with a new instance and added a method to check if a tag is seen to improve error handling and
[ beam - 10220 ] fix checkstyle violation in javac
[ hotfix ] [ doc ] fix typo in brokerroutingmanager
updated volumePaint and upPaint to Color . GRAY and Color . GREEN to ensure consistent color representation for candlestick rendering
refactor layout parameter handling in InsettableFrameLayout to use TypedArray instead of FrameLayout . LayoutParams to improve code readability and maintainability
added a new ` duration ` property and updated related tests in ` BuildTargetDurationListener ` and ` BuildTargetTest ` to include the duration in
updated profile annotations to use System . getProperties instead of Spring ' s Profile annotation to ensure tests are only executed when the db profile is set to be
added null check for the user object before processing claims in OAuthConfirmationController to prevent potential NullPointerException when the user is null
add replaceroutefromwith ( ) method to camel - test - support for replace route from endpoint
replace ConcurrentSkipListSet with NonBlockingHashSet for statements in CassandraConnection to improve performance and prevent concurrent modification issues
server : add networkid parameter to listpublicipaddresses api command
added tests and implementation for ignoring battery optimizations in ShadowPowerManager to ensure proper functionality and behavior of battery optimizations in the PowerManager implementation
updated the version property retrieval to use ` __ buildProperties . getProperty ` instead of a hardcoded value to improve flexibility and maintainability of the
added unit tests for verification of invocations in NumberOfInvocationsInOrderVerifierTest . java to ensure correct behavior of verification behavior when verifying
tregex : do n ' t debug regexresult . getnomatchinstance ( ) in debugforceevaluation ( )
[ hotfix ] [ runtime ] add foreground profile option to newprofileextensionconnection
updated variable names from ' executor ' to ' executorLauncher ' and ' executorCloser ' for better clarity to improve code readability and maintainability by
changed ` parseFieldnames ` from a ` Map < String , String > ` to a ` String [ ] ` in ` MetadataIndexer ` to
fix issue with remove action list in editortextactionwindow
update skippedEntries to include exception message in ClassFileReader . java and JdepsTask . java to improve error reporting and provide clearer context for
updated Fetcher and FetcherTask to utilize LuceneStorage for document storage to improve link management and enhance document retrieval efficiency
updated the ` populateBubble ` method to accept an additional ` existingBubble ` parameter and adjusted the bubble creation logic accordingly to enhance bubble management by allowing
[ hotfix ] [ runtime ] throw illegalargumentexception when route policy have no stop / suspend / resume time
refactor methods in MotanServiceBeanPostProcessor , TarsServiceBeanPostProcessor , and MotansRpcExt to simplify method signatures and
[ java ] use feedbackdelaygenerator for multicast destination .
updated Gson initialization to use JsonObject instead of GsonBuilder and added additional properties to ClientInformationResponseView to enhance the JSON response by including client details and
added a check to ensure the order ' s average price is non - negative before adding it to limitOrders to prevent unnecessary calculations when adding orders
removed the ` rawExecutionReports ( ) ` method from the ` BinanceStreamingMarketDataService ` class to simplify the code by eliminating unnecessary method
added a ` fail ( Exception e ) ` method and updated error handling in ` LdapTimeoutTest . java ` to improve error handling and provide more
log a warning if the installed folder do n ' t exist
added a check for blank password file or credential store alias in AmbariServerConfigurationHandler . java and updated test cases in RootServiceComponentConfiguration
added SegmentChecker class to check if a segment is already parsed before proceeding to improve performance by avoiding unnecessary parsing of already parsed segments
[ hotfix ] [ yarn ] [ yarn ] make attemptfailuresvalidityinterval configurable
ignore classnotfoundexception on startup if h2 driver be not include
[ flink - 26258 ] [ table ] add default readtype to tablesnapshotinputformatinputformat
added fixed height and width parameters to LoginInstanceRequest to allow dynamic adjustment of the login dimensions based on user settings
added a cornerRadius parameter to multiple methods in ActivityControlHelper , ClipAnimationHelper , LauncherLayoutListener , and TaskLayoutListener classes to
updated COMMANDS _ TO _ REMOVE constants and added new filter conditions in QFile . java to improve command handling and enhance filtering capabilities for
refactor connection handling in TxnHandler to use a retry mechanism based on the connection pool ' s configuration to improve robustness by allowing retries on
add txncheckbackupserve ( ) and txnpreparebackupoperation . txnpreparebackupreserve ( ) to queuecontainer
added a public final char [ ] array to the FirstOfStringsMatcher class to allow external access to the strings array for better resource management
updated DELETE statements in CostBasedDecisionIT , DeleteCompiler , and DeleteCompiler to use " ROWS SERVER SELECT " and " CLIENT SELECT
add retryable to socketexception and insufficientdatawritten exception in baseserviceexception
added rapidInstallTypes parameter to AdbHelper , AndroidDevice , and RealAndroidDevice classes and updated related classes to utilize this list to enhance
updated the seed pattern in SortTest . java from " - srand " to " - ? " to allow for a negative number in the seed
refactor MultimapSubject to use a new method for value retrieval and improve type safety to enhance code clarity and maintainability by standardizing variable names
adjusted the return value of ` waitForLauncherObject ( " hotseat " ) . getRealDisplaySize ( ) . y - 1 ) ` to
added support for a new ` transmux ` parameter in the ` Transformer ` and ` TransformerInternal ` classes to control the transcoding behavior based on
added localization functionality to strings in Picker . java to ensure consistent localization of values in the picker
camel - 14265 : camel - cxfrs - fix the issue that camel - cxf - client can not find the customer service
hhh - 11824 - postgresqldialect should throw a jdbcexception when a lock acquire or not available
added null check for queryId in TestJdbcDriver2 and modified annotation visibility in HiveStatement to enhance test reliability by ensuring queryId is correctly initialized
[ hotfix ] [ test ] add usesunboundedpcollections category to pardotest
updated HTML tags for filename text in GpsSimpleViewFragment . java to improve readability and maintainability of the code
[ java ] remove unused leadershiptermid parameter .
updated the initialization of the HttpExchange variable in HttpSender . java to ensure consistent access to the HttpExchange instance
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit 5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and its associated tests to
added null check for the tree in Recipe . java and modified marker handling in Markers . java and SearchResult . java to improve robustness and
change xwpf font size from float to double , since it ' s not possible to set the font size .
addressbookdocomo : use string [ ] instead of string [ ] for email match
refactor exclusion handling in RawMavenResolver to use a HashSet instead of a stream to improve performance by avoiding unnecessary processing of exclusions
added DSX exchange info handling and updated currency pair initialization in DSXAdapters , DSXPairInfo , and DSXBaseService to improve
renamed multiple test classes for consistency and clarity to improve code organization and maintainability across the testing framework
[ drools - 90 ] make sure incremental build do not fail on invalid kiemodule
updated the initialization of ` copy ` to use ` finale - k ` and added a conditional check for ` sobj . has ( k )
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
do n ' t throw unknownidentifierexception when unreflecting a field .
added a new annotation for " CompletionStage " in DefaultNullnessAnnotations . java to enhance nullability support for CompletionStage in the database
updated mFreezeCheckPoint calculation from 9000 to 10000 to adjust freeze threshold for better playback performance
removed unused imports and added Whitebox ' s internal state setting in AbstractCommonPowerMockRunner . java and PowerMockRunner . java to streamline
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure the correct type is
updated indentation logic for method invocations in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced LuceneTestCase with TestCase in TestSingleTokenTokenTokenFilter class to ensure compatibility with the latest test framework framework
updated the write method to include a wrapped text element in HtmlProcessInformationsReport . java to improve the visual representation of the wrapped text in the
refactored JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository to manage execution context to improve code clarity and maintainability by
added a condition to check if the new media folder is hidden before adding it to the child to ensure that the child is only added when the configuration
added null checks for the actor before setting the first and second widgets in SplitPane to ensure proper handling of actor interactions and prevent runtime exceptions
added support for processing parameterized Java types in the typesByPackage map to improve type safety and prevent potential null pointer exceptions
updated logging statement to use the current instance of ` modInfoList ` instead of ` getModInfos ( ) ` and added null and empty checks
changed the logger variable from instance - level to static in TicketGrantingTicketImpl . java to improve memory efficiency by ensuring the logger is static
updated the SNAPPY . RLE . 1 / 2 . SNAPPY . RLE . 81 + 12 attribute in the SQL string to
added a method ` isValue ( String value ) ` to ` AttrData ` and modified exception handling in ` Converter ` to improve value validation and
added support for checking character modifiers in the US International PC locale in CPlatformResponder . java and LWCToolkit . java to ensure proper handling
[ java ] add aeron _ publication _ connection _ timeout environment variable to ctestmediadriver .
added a check to return false if the request URI starts with " / css " , " / images " , and " / favicon " to
added assertion to verify the installation of the wellbeing test APK to ensure that the device is rooted before proceeding with the installation process
no effective change - code cleanup - remove oracleansisqlrowslimiter
added a MultiMap mock and updated secure transport protocols in TestSimpleBodyHandler , TestVertxTLSBuilder , and TestVertxTLSBuilder
updated Java library paths in DiffRuleKeysScriptIntegrationTest . java to use fc76b6367ddddc08ff2fb46c95be
added a boolean flag ` mIsDismissHapticRunning ` and modified the condition in ` TaskViewTouchController . java ` to ensure that
fix explosion cause not work with projectiles .
removed unused imports and implemented getItemId method in SymbolInputAdapter to improve code clarity and ensure consistent ID retrieval
updated query parameters in ` Bitfinex ` and ` BitfinexPollingMarketDataService ` to use ` 50 ` instead of ` 10 ` to
added a check to replace single quotes with double quotes in the result string to ensure proper handling of special characters in the output
[ hotfix ] [ runtime ] add ` ` tostring ( ) ' ' to ` ` zookeeperleaderelectiondriver ' '
refactor SqlSessionFactoryBean to improve code organization to enhance maintainability and readability of the code
[ 3.0 ] TripleInvoker . java : fix TripleInvoker . java to handle null invocations more gracefully
replace error handling in PolygonRegionLoader to throw a GdxRuntimeException instead of a generic error message to improve error handling by providing a more specific exception
added a method to check if the current deadline is started in Deadline . java and implemented timer initialization in RawStoreProxy . java to improve timer
[ hotfix ] [ network ] add close channel exception message to nettyrequestexecutor
updated genre handling in ItemListActivity to check for null before joining genres to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] fix reset call in checkpointcoordinator . restorestatetosubtasks
fix protobuffer serialization for json format with collection of mapped container
[ hotfix ] [ table - common ] do n ' t try to get cost of active memtables in walnode
fix : http endpoint . handle ( handler ) should retry same host on callback failure
add miss license header to tutorial - background . html and tutorial - background . html
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL query character escaping to ensure correct handling of question characters in SQL queries
fix potential npe in camel - spring and camel - jbang
replaced synchronized block with utility ' s wait method in JavaFXSEPort . java to improve code readability and maintainability by utilizing a more
updated the package of ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaffl
refactor CropperUtils to separate BitmapCropBehaviour and BitmapCropBehaviour into a separate method for handling different image types to improve code clarity and maintain
removed appName parameter from several methods in InputRC and related classes to simplify method signatures and improve code readability
component - installer : add test for uninstall and install - ignore dependency
[ java ] use -- headless = chrome instead of setheadless = true
replaced direct assignment of value with interning of the value to ensure that the value remains unmodified after assignment
added support for " MOVE " status in the connection status check to ensure proper handling of MOVE commands in the status
updated ISO8601 _ MONTH _ DAY _ YEAR2 _ TIME and ISO8601 _ MONTH _ DAY _ YEAR4 _ TIME constants
updated import statements for Lists from ` org . apache . curator . shaded . com ` to ` com . google . common . collect `
[ hotfix ] [ runtime ] refactored hsbuffercontext # startspillingbuffer to return boolean instead of void
added permission checks for untrusted visit flags in the Visit class to ensure only authorized users can access untrusted visits in plots
do n ' t attempt to register jabber if it ' s already register .
updated URL normalization logic to handle curly braces to ensure correct normalization of URLs with curly braces
changed access modifiers of methods from protected to private in QuickstepTransitionManager to enhance encapsulation and restrict access to methods within the Quickstep
added a check to determine if ' res ' equals 0 based on clock rate to ensure correct handling of clock rate comparisons in EncodingConfiguration
added a method to get the project path and modified the generateProjects method to return an ImmutableSet < Path > instead of void to improve project generation
do n ' t try to get the calendar type from calidtoldml if the calendar be invalid .
added a new file ` MSwingUtilities . java ` that implements utility methods for scaling images to facilitate image processing and error handling in the application
camel - 16265 : mailproducer should call callback . done ( true ) instead of call callback . done ( true )
added @ RefreshScope annotations to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration to enhance configuration management by allowing refresh scope changes
added unit test base on user forum issue
added two new Java files , Main . java and ScriptRenderer . java , to implement script rendering functionality in the scripting framework
added a condition to check if ` _ inputState = = __ NONE ` before processing ` FORM _ ENCODED ` in ` Request .
updated BitmapFont , Group , FlickScrollPane , SelectBox , and BitmapFont classes to ensure glyph dimensions are valid and improve touch focus handling
replaced ` reportFailure ` with ` context . runCloseHooks ` in ` DeploymentManager . java ` and added a new test in ` DeploymentTest
lexicon : fix lexiconrecipemappings . tostring ( itemstack , boolean forceignore ) to be consistent with other recipe .
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve responsiveness during interruptions
updated import statements and added a check for non - blank shortName in LoincHandler . java to improve code clarity and ensure only non - blank
do n ' t use classpath for holiday xml url , so use the class loader instead
added a new file FieldUtils . java with utility methods for getting field names , type , and protected fields to provide utility methods for accessing fields
removed unnecessary conditional check for speculative type mode in DeferredAttr . java and added a new DoubleStaticImport . java file with a test method to simplify
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added default padding for widgets to improve layout consistency and ensure
add a method to update the last xmpp account setting when an invalid token be load .
added a new method ` setvar ` to handle variable setting in a command - line argument to provide users with help instructions for setting variables in a
fire animaltameevent . onanimaltame ( ) on catentity not fire . close # 829
[ java ] use h2 . value . null when sort by unsigned range .
pdfbox - 4071 : add a unit test to verify that there be a HELV font in the widget appearance
set the app mode to the current app mode in PageListController to ensure the application mode reflects the current application mode
added support for custom Docker file arguments in ImageFromDockerfile and created corresponding test cases to enhance the functionality of ImageFromDockerfile by allowing custom
added a null check before initializing threadInfos [ threadId ] to prevent potential NullPointerExceptions when accessing thread information
updated the condition in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of a hardcoded value to improve code readability and
[ hotfix ] [ runtime ] add more logging to singleinputgate and singlecheckpointbarrierhandler
added new schema constants for SYNONYM , ACCEL _ ONLY _ TABLE , INOPERATIVE _ QUERY _ TABLE
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors and tests accordingly to enhance flexibility in FuzzyQuery and tests by allowing
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to improve clarity
logback - 13232 : allow layoutinsteadofencoder to set ` ` immediateflush ' ' property in outputstreamappender .
added new auto configuration classes for Zipkin Auto Configuration in ZipkinAutoConfiguration . java to support additional auto - configurations for Rabbit and Kafka
modified the condition in JLayer to handle null components correctly and added a new test class for bug6875716 to ensure proper removal of null
updated import statements from ` avro . shaded . com ` to ` com . google . common . base . Function ` in multiple Java files to
improve handling of return and unwind block in bciblockmapping and add some getters / setters in graphbuilderphase
added legacyrenderer property and getter / setter to label for legacy icon .
replaced the ` intToFourBytes ` method with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJ
added null check for mObserver before calling isHomeAndOverviewSame ( ) to prevent potential NullPointerException when mObserver is null
changed the generic type of the ` thenComparing ` method from ` Comparable < ? super U > ` to ` Comparable < U > `
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
updated the end time setting in UserRuleAnomalyResult from null to currentKeyMillis to ensure the end time accurately reflects the current bucket '
added error handling for parsing integers in VisualScoreTagTest . java to ensure robustness by handling NumberFormatException gracefully
added a classloader to the enhancer in MockFactory . java to ensure proper initialization of the enhancer based on the class loader
added a new class ` OriginalFormat ` to handle enum values in ` ConverterWithEnumFormat ` to enhance custom formatting capabilities for enum values
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM to improve maintainability and read
refactor JAWTRenderer class implementation to improve performance and maintainability of the rendering process
camel - 15836 - camel - aws2 - lambda : enable autowire on the lambda endpoint - aws2 - lambda component
server : add validation to ensure mac address be generate for a nic in the network
removed the check for " Authorization " header name in ProxyServlet . java to ensure proper handling of " Authorization " header in HTTP requests
replaced ` submit ` with ` execute ` in ` TraceableExecutorService . java ` to ensure proper execution of tasks based on context checks
added ` getDetails ( ) ` method to ` Authentication ` , ` AbstractAuthenticationToken ` , and ` UsernamePasswordAuthenticationToken ` classes , and
updated the initialization of randUsePoints to use a fixed probability to improve the randomness of the randUsePoints variable
use sb . endsentence ( ) instead of sb . appenddot ( )
updated ` formatForConsole ` method to include ` Locale . US ` in multiple files to ensure consistent output formatting across different locales
groovy : do n ' t print the first named argument if the argument be a mapexpression
added boundary checks for top , bottom , and right inset positions in Border . java to ensure borders do not exceed screen boundaries
refactor GestureState initialization and introduce DEFAULT _ STATE in TouchInteractionService and GestureState classes to improve code readability and maintainability by
updated imports from Joda Time to Java ' s Instant and replaced DateTime . now ( ) with DateTimeFormatter . BASIC _ ISO _ DATE
refactor ` openblas ` and ` openblas _ nolapack ` classes to improve code organization and maintainability
replace commons . io . closewith try - catch with try - catch
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction management
increased SO _ TIMEOUT from 120 to 480 milliseconds in AbstractDistribZkTestBase and AbstractFullDistribZkTestBase to improve recovery
added a new class ` SearchResults ` to manage search results to enhance the application ' s ability to handle multiple search results efficiently
refactor CPU refresher initialization in CPUSamplerSupport . java to improve code readability and maintainability by reducing redundancy
bytecodenode : initialize body if there be no primitives available .
updated TestBackwardsCompatibility . java to include new versions " 8.6 . 0 - cfs " and " 8.6 . 0 - nocf
changed the feature flag for enabling two - line labels from DISABLED to TEAMFOOD and modified the return statement in AppIcon to improve
added a new API endpoint to retrieve tenant pool information to provide users with information about tenant pools for the current instance
[ carrotsearch ] fix flaky testtopfieldcollectorearlytermination
updated the ` to ` method in ` InlineBytecodeGenerator ` to include ` isToString ( ) ` and modified imports in ` InlineByte
added logging statements to CxxCompileStep and CxxPreprocessStep for better error handling and processing to improve traceability of compilation and preprocess processes
add util . removecharacter ( string , charToRemove ) method to stringutil . removecharacter ( string , string )
[ 3.0 ] fix issue with metadata service protocol attachment ( # 11824 )
[ drools - 139 ] add datatransformer interface to support compile ( ) and transform ( )
updated type declarations in DistributionGraph . java to use ` Number [ ] [ ] ` instead of ` Object ` to improve type safety and compatibility with
simplified the conditional check in FormatStringChecker . java by removing unnecessary boolean variable to improve code readability and maintainability
removed unnecessary whitespace in ElectionContext . java to improve code readability and maintainability
refactor ITestDbTxnManager class implementation to improve code readability and maintainability
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and prevent potential memory leaks
[ scb - 2078 ] add test case for remote codefirstpojo client
pdfbox - 4071 : avoid unnecessary null check , a suggest by valerybokov
updated selection handling logic in ScaleDialog . java to ensure proper selection state management and prevent potential null pointer exceptions
rename itemtravelbowelt . updateplayerstepstatus ( ) to tickbelt ( ) to improve code readability and maintainability
pdfbox - 4071 : do n ' t throw an exception if there be no appearance stream
replaced SortedSet with LinkedHashSet for the keys variable in ExecuteSqlCommandStep . java to maintain the insertion order of keys
updated TIME _ BETWEEN _ AND _ DRAG constant value from 1500 to 1000 in CancelEventTimer . java and PagePreview
updated the preload libraries from " libdc1394 - 22 " to " libdc1394 - 25 " to use the latest version of the
added a conditional check before setting all constructors to public in MainMockTransformer . java and created unit tests for static methods with private constructors in
pdfbox - 4071 : do n ' t add duplicate entry to the list if it be already present
fix for bug # 49348 - use sun . awt . x11 . xtoolkit . getapplicationname ( ) for window title
updated depth calculation logic in XRSurfaceData . java to handle different pixel sizes to ensure proper transparency handling for 32 - bit image sizes
added error response body handling in OkHttpDataSource to improve error reporting when reading response bodies
added a static method ` exit ` in ` TopLogging ` and replaced ` Thread . sleep ( ) ` with ` TopSecurityManager . exit ( )
modified the initialization of the ` start ` variable to check if the regexp is not global to ensure that the correct index is used for regular expressions
disable flaky test due to optaplanner - 468
corrected the variable name from lowAllocation to highAllocation in DefaultAllocator . java to ensure the correct allocation is allocated based on available allocations
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO classes to improve data management by allowing deletion of entries without feeds
changed the return type of the appendToLabel method from void to AtomicCounter to allow method chaining within the AtomicCounter class
[ java ] move idlestrategy to lowlatencymediadriver instead of busyspinidlestrategy
added handling for NOT _ MODIFIED status in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper handling of not - modified responses
[ fix ] instrumentationpartialevaluationtest : rename constantvalueinertspliceinstrumentlistener to constantvalueinerttoolevalnode
modified the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to handle tab area rendering to ensure proper rendering of tab areas based
modified the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional ` Object ` parameter and adjusted
camel - 14263 : camel - jbang - allow file separator to be set to the same a the file separator .
added a new ` build ` method to ` JavaProvenance ` and modified ` MavenProjectParser ` to use it to enhance the build process
added trace logging and enhanced deterministic checks in HiveFunctionRegistry and a corresponding test in TestInbuiltHiveUDFs to enhance debugging capabilities and
increased loop iteration from 100 to 200 in CloudStateUpdateTest . java to increase test coverage for state updates
handle unknowncolumnfamilyexception more gracefully . patch by jbellis ; review by brandonwilliams for cassandra - 1454
added error handling for writable output files in NativeErrors . java to ensure read - only tests are skipped when the output file is writable
added package - info validation in LauncherModel . java to ensure that the component ' s package info is enabled before proceeding with operations
cloudstack - 4892 : do n ' t swallow runtime exception when database upgrade fails
added fault tolerance checks and refactored exception handling in AbstractFaultTolerantChunkOrientedTasklet and FaultTolerantStep
replace ` startsWith ( completed ) ` with ` regionMatches ( completed , 0 , completed . length ( ) ) ` in ` LineReaderImpl . java
added imports and refactored data table handling in Recipe . java to improve code clarity and maintainability by centralizing data table creation logic
added import for Overview and implemented task dismissing logic in TaplTestsTaskbar to ensure all tasks are dismissed when the overview is active
bug 111400to41500 : add dbupgradesystemvmtemplate interface for the db upgrade process
removed redundant null checks for the connection variable in LdapClient . java to simplify code and improve readability
refactor code to use a local variable for action index to improve readability and maintainability of the code
add set _ keyspace ( utf8 keyspace ) method to cassandraserver
added a check to skip synthetic fields in ReflectUtils . java to ensure that synthetic fields are excluded from processing
added a LoggerProvider class to manage SLF4J Logger instances to enable better logging capabilities in the application
updated the type of ` ImmutableMap < String , String > ` and ` ImmutableMap < String , Integer > ` to ` ImmutableMap < String , Object >
added deprecation warning for multiple glue classes in SpringFactory to ensure users are notified about the deprecation of spring context configurations
added a deepStart method to Startables that accepts multiple startables to enhance functionality by allowing deep start operations
removed the deprecated ` reservePrimitiveExtensionArray ` method from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the code by eliminating
fix laser table not be able to use a laser target .
updated the condition to return false if the objectName contains a " ( " ) " prefix to simplify the logic for determining if the objectName contains
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
added a call to setExpireMessagesPeriod to zero in MemoryLimitTest . java to prevent potential memory leaks during test execution
removed null checks and simplified handler name handling in RequestHandlers . java to improve code clarity and reduce unnecessary null checks
updated servlet name handling to remove hyphens from servlet names to ensure consistent naming conventions for servlet names
updated PYTHONPATH environment handling in ProjectBuildFileParser . java to improve clarity and functionality to enhance the handling of Python module search paths based on
updated audio frame size handling in DirectAudioDevice and Toolkit classes to improve audio data validation and error handling to enhance robustness and ensure correct frame size
added null check for enums in ElasticSearchStringLookupService to ensure safe handling of null values and avoid potential NullPointerExceptions
[ hotfix ] [ commit ] fix commitlogreader error message
added initialization of the policy from containerScope to ensure the WebSocket session uses the correct policy from the container scope
simplified the condition for initializing static fields in Java to TypeScript translation to simplify the logic and improve readability of the code
updated UserService to use a dynamic webroot variable instead of a hardcoded value to improve flexibility by allowing users to specify a custom webroot
test : migrate unit test to junit 5 ( # 4704 )
[ netbeans - 14157 ] remove reflection from isattachable ( ) method
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation logic
replaced multiple specific imports with a wildcard import for trade - related classes and added a placeholder method for placing stop orders to streamline import statements and
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is properly reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when setting foreground and background
updated comparison operator from " < = - 3 " to " < - 3 " in FloatingDecimal . java and added a new ToString . java
updated the property type check from ` ! = params [ 0 ] ` to ` ! = params [ 0 ] ` in ` PropertyDescriptor . java
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to streamline version retrieval process by eliminating unnecessary maxVersion
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46165 - set origin
updated animation behavior in RecentsView and TaskView to incorporate alpha changes for overlay modals to improve visual feedback during task animations in the UI
updated error messages to include field information in unsupported single - value and single - value field types to improve error reporting by providing more context on unsupported fields
add demo for clearhls of steel and bipbop 4x3
removed unused imports and simplified interface names in PersistenceProvider . java to improve code clarity and maintainability by eliminating redundancy
hbase - 26105 fix log path for hbaserpc and execrpcinvoker
added diagnostic logging for compilation warnings and updated file handling in TestSpecificCompiler . java to improve error and warning reporting for generated Java files during compilation
do n ' t close websocket session if user be not login
[ java ] increase delay in daostatemonitoringservice to 10 second and make daostatestorageservice more intuitive .
[ xwork ] update the default xwork dtd mapping for the new xwork version
added conditional logic to stop video tracks based on the stream ' s stop state to ensure proper resource management and prevent potential memory leaks
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
geot - 4892 : update geotools example to use geotools . data . collection . listfeaturecollection
[ java ] use skip instead of substream in targettype58 .
hhh - 10956 - fix npe in entityuplizer when no identifiergenerator be find
rename findfulltextaction to downloadfulltext and rename findfulltextaction to downloadfulltext
updated URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl to enhance the registration process by adding host and port information to the URI register
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for blank OSDB hash before retrieving information from the OSDB to avoid potential NullPointerExceptions when the hash is absent
added transferToken method and validation for token values in RuntimeImpl and MUtil to enhance token transfer functionality for smart contracts
camel - 14263 : camel - ftp - do not change the current directory when delete a file .
updated method call from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure consistency in
added validation for joinResult and improved join result validation in MapJoinOperator and HybridHashTableContainer to enhance join functionality and ensure proper handling of
updated HTTPSPDYAsyncConnectionFactory to accept an ` EndPoint ` parameter and modified its constructor to utilize it to enhance flexibility by allowing
added extra intent extras for tweet IDs in multiple adapters to enhance user experience by allowing unique IDs in the intent
added handling for proxy authorization in HttpURLConnection and refactored disconnectInternal ( ) method to disconnectWeb ( ) to improve code clarity and maintainability
replace ` int ` with ` AtomicInteger ` for tracking number of children in ` TraceContext ` to ensure thread - safe incrementing of trace IDs
refactor multiple Java files for consistency and clarity to improve code readability and maintainability
disabled the test for NullPointerExceptions in ValueTypeTests . java to temporarily disable the test due to potential issues with null values
resolve split - packages : move everything from kieresources into kieresources
replaced instances of ` IN ` and ` IN _ IN ` with ` NOT _ IN ` in multiple predicate classes to improve clarity and consistency in predicate
updated exception handling to catch a general Exception instead of AccountNotFoundException and refactored account creation logic to improve error handling clarity and streamline account
added null check for witnessService before validating witness permission to avoid potential NullPointerException when witnessService is null
updated the way tagged column names are formatted by using getExprString ( ) method to improve clarity and ensure correct expression string representation
added a check to ensure the Javadoc item is not present before setting it to avoid setting the JavaDoc if it is already present
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and add new interfaces and tests in ` Redefine
replaced direct calls to revalidate ( ) with revalidateWithAnimationSafety ( ) in Tabs . java to improve UI responsiveness by ensuring animations
[ hotfix ] [ connector ] return unregisteredmetricsgroup instance instead of throw unsupportedoperationexception
refactor calculation of y - coordinate in Polygon . java to use oldX variable to improve code readability and maintainability
updated cache creation method to use Configuration < Object , Object > instead of null to ensure proper type handling for cache configuration
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a
refactor ShadowCookieManager to improve code structure to enhance maintainability and readability of the code
added a new authorization flag for checking external tables and modified related methods in multiple classes to enhance security by restricting access to external tables before dropping them
added a brace to the conditional statement in Stage . java and corrected the drawing position in ProgressBar . java to improve code readability and correct
llvm : cache bytearraysupport to improve performance
update PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers .
refactor initWebViewLogin method to accept a base URL parameter and set web view headers accordingly to improve flexibility in handling web login flow based on server
corrected the spelling of " Parameter " in the ExecutorException message to ensure accurate error reporting for JDBC type requirements
updated the ` @ DateTimeFormat ` annotation to accept a ` ` after ' ' parameter in the ` AuditEventsMvcEndpoint ` to ensure that the
rename ` ExponentialTimer ` and related classes to ` PreciseThroughputTimer ` and update references accordingly to improve clarity and consistency in naming
added logic to delete soft bodies and set softBody to null in SoftBodyTest to ensure proper cleanup of soft bodies and prevent memory leaks
[ hotfix ] [ table - common ] make interface public
[ zeppelin - 1175 ] fix log in zeppelinhub and zeppelinhub
add test case to make sure it do n ' t have duplicate namespaces
add a check for redplasma and fix a bug where redplasma can not be load .
added support for HTTP / 2 headers in BareResponseImpl and updated the HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
updated condition checks from ` uuid = = EVERYONE ` to ` getTrusted ( ) . contains ( uuid ) ` and ` removeD
updated delimiter parameters and modified formatting in SimpleReport . java to improve readability and maintainability of the output format
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68637
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to simplify the class structure and eliminate
removed unnecessary try - catch blocks and added null checks for contract creation and address retrieval to improve error handling robustness and provide clearer error messages for
ggb - 164 fix : do not create input3d for applets that do n ' t support it
added an @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw parserexception in scripttagpayloadreader , just return false
changed the method name from getRepositoryFactoryClassName to getRepositoryFactoryBeanClassName in JpaRepositoryConfigExtension to enhance clarity and maintain consistency in naming conventions
changed return types of getExecutableCommand methods from String to List < String > across multiple rule classes to enhance flexibility and maintainability of executable command retrieval
replaced instances of ` this . x ` and ` this . y ` with ` IOSGLES20 . x ` and ` IOSGL
deleted ` UploadPathActivity . java ` and modified ` ComponentsModule . java ` to remove ` UploadPathActivity ` to streamline upload path
modified return statements to conditionally return - 1 for totalTermFreq and sumTotalTermFreq based on indexOptions to ensure that total and sumTotal
fix ( jdttreebuilder ) : set ` ` implicit ' ' flag on constructor
added a ` Database ` parameter to multiple ` populateValidateIfNeeded ` methods in ` ColumnSnapshotGenerator . java ` to ensure proper handling of Oracle database
refactor Database class to improve code organization to enhance maintainability and readability of the code
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the application configuration
removed the ` indexOptions ` field from ` DefaultIndexingChain ` and updated the iterator assignment in ` PointInSetQuery ` to improve code
removed substring extraction from rawName in SchematicHandler . java to streamline code by eliminating unnecessary substring operations
added case handling for specific collection types in AbstractCollectionAssert . java and updated test cases in CollectionAssert _ isUnmodifiable _ Test . java
changed the enum declaration from static to non - static in ProcessExecutor . java to allow access to the Option enum from other classes
added a confirmation dialog for posting with Twitlonger in Compose . java and removed it from ComposeActivity . java to enhance user
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ) . syncFile ( ) ` in
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 ` in ` ImageUtil . java ` and added unit tests in `
added two new files , ControllerCounter . java and DBCallback . java , to the datastore package to provide functionality for managing controller counts and methods in
added ' final ' modifier to the parameter ' ticketId ' in the deleteTicket method to enhance code clarity and enforce immutability of the method
added a new file FlywayMigrationRunner . java to create a main method for running flyway migrations to facilitate the execution of flyway migrations
replaced calls to ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap ` and introduced a new ` NotEmptyHashMap ` class
updated the version number from " 0.6 . 0 " to " 0.7 . 0 " in TsFileDBConstant . java to reflect the latest version
updated the method signature of ` modify ` in ` CompressionCodec ` and added null checks in ` WriterImpl ` and ` ZlibCodec ` to
added null check for mainClass and improved error handling in LauncherHelper and Arrrghs to ensure robustness by preventing NullPointerExceptions during
reformatted test class names for consistency to improve code readability and maintainability
make methoddata . setcompiledgraphsize ( ) and methoddata . getcompiledirsize ( ) consistent with other ir type
make xssfsheet . cellcopypolicy constructor public , so that it can be use by other class .
added a static method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and invoked it in ` FloatingIconView `
fix entitycapsmanager to use raw value char sequence for form field
updated layout handling in IconRecentsView to account for landscape orientation to ensure proper item decoration behavior based on device orientation
deleted the AddAdapter . java file to the functionality is no longer needed in the project
[ minor ] make nonstatic lifter more robust .
modified the method signature and logic in OpTraitsRulesProcFactory . java to streamline the processing of sort columns to enhance code readability and
refactor TestLogWatcher to use a looper method for message verification to improve clarity and error handling when a new watcher is registered
added a print statement to print an empty string in Java2TypeScriptTranslator . java to improve output formatting for better readability
updated the SDK version from " 4799589 " to " 4913185 " in the SdkConfig . java file to reflect the
removed conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor . java to ensure proper proxy
removed singletonLock initialization in TypeCachingBytecodeGenerator . java to simplify the locking mechanism for better maintainability
add example for request . when ( ... ) and request . when ( ... ) . withcallbackclass ( ... )
refactor file writing methods to include an option to control whether the file should be appended to a specified output directory to enhance flexibility in generating output
updated MavenExecutionContextView , MavenRepositoryMirror , and MavenRepositoryMirror classes to improve handling of Maven settings and repositories to ensure accurate retrieval of mirrors
added a name parameter to several constructors and methods in BuildRuleSourcePath , PathSourcePath , and SourcePathTypeCoercer to
updated the OAuth20CallbackAuthorizeEndpointController to use ` matches ` instead of ` getRegisteredOAuthServiceByRedirectUri ` and added a test for
refactor empty annotation array retrieval to use a new method ` AnnotationParser . toArray ` to improve code readability and maintainability by centralizing annotation
updated method calls to use ` getBadgedIconForUser ` instead of ` getBadgedDrawableForUser ` and ` getBadgedLabel
updated the default line separator from OS default to CRLF for output to ensure consistent line formatting across different operating systems
[ cmu ] add test for doubledata class that be subclass of doubledata .
sanitize input to avoid null pointer exception
chore : update java and python dependency ( # 8 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added tests for file names to ensure that the
refactor CountersReader class for improved readability to enhance maintainability and ease of understanding for future developers
updated method signatures and variable assignments in AllAppsRecyclerView , UserEventDispatcher , DeepShortcutsContainer , and DeepShortcutsContainer to improve code
hbase - 26105 deprecate the old ipc . server . allocator . max . buffer . count config key in bytebufferfal
[ native ] add window query for lineitem in native mode
refactor method name from ` getGenericParameterTypes ( ) ` to ` getAllGenericParameterTypes ( ) ` for improved clarity to enhance code readability and maintain
refactor TestFSTs class for improved readability to enhance maintainability and ease of understanding for future developers
ggb - 264 fixed draw for latex string in latex text
hbase - 24105 increase incubatorregionsplitpolicy ' s initial size to match max file size limit
removed model state reset and startLoader calls in LauncherClings . java to streamline loading process by eliminating unnecessary state management
refactor managedselector to initialize keys , updates , and updatesAt separately to improve code readability and maintainability
added support for excluded datasources in SpringDataSourceBeanPostProcessor to improve data source management by allowing exclusion of specific datasources
store undo info in table value view to prevent npes
( chore ) camel - aws : make it possible to create kinesis client with different user agent
[ velbus ] fix velbus sensor not trigger on channel 8
disable unfavorable benchmarks in LocalCacheSelectorCode . java and adjust delayable logic in BoundedLocalCache . java to improve performance
[ iotdb - 4892 ] fix illegalpath exception for partialpath when no node be specify .
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly reset during garbage collection
renamed ` desiredWorkspaceLeftRightMarginPx ` to ` desiredWorkspaceHorizontalMarginPx ` and refactored related calculations to improve clarity and
refactor code for improved readability and consistency in CharTokenizer . java to enhance maintainability and maintainability of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 102 )
api : fix typo find by codespell on fossies . org
updated libGDX version strings from " 1.5 . 5 " to " 1.5 . 6 - SNAPSHOT " and libGDX nightly
added a private Set < String > metricNames and a method to retrieve it to facilitate retrieval of metric names from the SolrCore class
replaced URI usage with Path in MavenManifestFactory . java to simplify path handling and improve code readability
replaced hardcoded system property check with a static final boolean variable to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
added slotList . clear ( ) and slotList . addAll ( other . slotList ) method to Frame . java to ensure proper handling of slot
initialize m _ predCount to - 1 in PredicatedNodeTest . java to initialize the predicate count for testing purposes
added property merging functionality to ConfigurationSpringInitializer to ensure proper configuration handling by merging properties from the configuration instance
updated the ` setupLogging ` method to accept an ` org . slf4j . Logger ` instead of a generic ` Logger ` to ensure compatibility
[ flink - 20686 ] [ table - common ] fix order of alias to work in order
added inheritance handling for Class types in TypeHandlerRegistry to ensure proper retrieval of JDBC handler mappings based on type type
added debug logging statements to various item writer classes for Hibernate , Jpa , and Jms to improve traceability and debugging capabilities during item writing
updated the way the language range is parsed by removing the last semicolon from the wellformed string to ensure proper parsing of the last semi
added context handling in Http2ServerResponseImpl and modified startServer method in Http2Test to ensure proper context management during server shutdown and improve test
improve performance of xssfevaluationworkbook . gettable ( string ) by cache xssftable
updated SchemaTextDetailType from VERBOSE to BASIC and refactored conditional statements in BaseSchemaTextFormatter . java to improve clarity and maintain
replaced MongoFactoryBean with MongoClientFactoryBean in MongoNamespaceReplicaSetTests . java to ensure compatibility with the latest MongoDB framework
replaced HashSet with LinkedHashSet for roots and leaves collections in SparkWork . java to maintain insertion order and ensure consistent iteration order
added a check to ensure the table scan operation tree is cloned before proceeding to avoid potential errors when the join operator tree is not properly cloned
added a null check for the client ID before processing it in DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to handle cases where the
added a patch to the AchievementList class to clear the achievement list ' s entries to ensure that the achievement list is cleared before further operations
initialize userName , productName , driverClassName , and connectionUrl variables to an empty string in MutableDatabaseInfo and MutableJdbcDriverInfo to ensure default
corrected the spelling of " link _ share _ read _ only " to " link _ share _ view _ only " in multiple files to
added support for reading a long array of longs using LongBuffers in ByteBuffersDataInput . java to improve performance and maintainability of the
updated UnixFileAttributes to include millisecond and microsecond fields , and introduced a utility method to calculate file time to improve accuracy in calculating file timestamps
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior with humongous references to
added functionality to conditionally hide the search bar based on user preferences to improve user experience by allowing users to toggle search visibility based on user preferences
[ hotfix ] [ core ] fix envrouterfeature to use route instead of router
added null checks for cur and next in LineChartRenderer . java to improve robustness by avoiding potential NullPointerExceptions
added a new action to reload the current displayed page in the menu to enhance user experience by allowing users to navigate to the current displayed page
change log level for ` Entry # info ` to ` warn ` for non - existent entries in ` plot _ * ` and ` plot _
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest security features and improvements
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to avoid runtime errors
[ geot - 4892 ] use serviceloader instead of factoryregistry to load extension point from geotools
added a finalize method to handle table closure in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added stopStatementExecutor ( ) method to JdbcConnector and HiveViewImpl , and updated logging in HiveViewImpl to ensure proper cleanup of statement executor
updated feature settings and improved type safety in DocumentFactory , XMLSAXHandler , and ComplexElementHandler classes to enhance code clarity and maintainability by
updated JdbStopThreadidTest to use OutputAnalyzer instead of command for exiting the application to improve test reliability by ensuring the application exits
added a method ` getType ( Uri uri ) ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to provide functionality for retrieving
updated the variable name from ` runnable ` to ` entry ` for clarity to improve code readability and maintainability by using a more descriptive
updated the default HTTP port configuration from the system property " port " to " vertx . httpPort " to allow dynamic configuration of the HTTP port based
replaced ` addCaptureListener ` with ` addListener ` for ` buttonTable ` to improve listener management for better responsiveness
increased the default batch size from 10 to 3 in NewSessionQueueOptions . java to improve performance by optimizing batch size based on available processors
[ hotfix ] [ runtime ] catch exception when establish resource manager connection in taskexecutor
initialize ` classFile ` to null and modify the return logic in ` LambdaRewriter . java ` to handle potential ` CannotLoadClassException `
updated IllegalArgumentException message to include min and max parameters to improve clarity of error messages for better debugging
updated message handling methods to include owner and telegram information to enhance state management and improve logging for delayed message processing
added new interface ` Cursor ` , ` Database ` , and ` Row ` classes to the ` com . codename1 . db ` package to
refactor ` AbstractIterableAssert ` , ` AbstractPathAssert ` , ` InstanceOfAssertFactories ` , and ` InstanceOfAssertFactories ` classes
add setbeanid ( ) method to ebeanserver so that it can be use by ebeanserver
updated the XSLT transformation method in RuleSetToDocs . java to use a new method to improve code readability and maintainability by using a dedicated
added a private List < RequestMatcher > matchers to manage request matchers to improve the management of request matchers for improved security
added hashCode and equals methods to ContactResource class to ensure proper object comparison and hashing functionality for ContactResource instances
move getrequest ( ) to abstractprocessor so that it can be use by other processor .
update the log message to reflect that the saved Persistable can be read again
added tearDown method to TestIndexSearcher and reset mockControl in TestJdbcDataSource to ensure proper resource management and prevent potential memory leaks
updated method calls in SyntaxTests . java to use LambdasWithInterfaces instead of direct method calls to improve clarity and maintainability of the code
refactor ConnectionModel and ModeledConnection classes for improved organization to enhance maintainability and readability of the codebase
add support for multiple parser and use fallback parser instead of parserdecorator
fix security manager check for dedicated server and client . fml .
removed redundant declarations of variables in AccountUtils and IndexedForest classes to streamline code and improve readability
updated the parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME endpoint in CoreApi
added a new test method ` testJsxComment ` and refactored conditional checks in ` Parser ` , ` DumpingVisitor ` , and
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for test cases
added environment handling for missing Buck configuration in BuildEndToEndTest and CxxEndToEndTest to improve error reporting when Buck configuration is missing
added physical memory management checks in TestStringBufferAndBuilderGrowth . java to ensure tests do not exceed required physical memory limits
removed deprecated conversion methods and added a constructor to MapToLocalDateConverter to improve code clarity and ensure compatibility with the new conversion service
added a success flag set to true in HiveMetaStoreClient . java to indicate successful execution of the Hive meta store operation
updated comparison from ` = = ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and changed the type
updated conditions for checking video links from " vine . co / v / " to " amp . twimg . com / v / " to
mark the AreaReference class as deprecated to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes to improve code organization and maintainability
added assertions and modified reference kind handling in MemberName . java to improve error handling and ensure correct reference kind management
change the default value of ` __ submitKeyUpdates ` from ` false ` to ` true ` and synchronize the ` runChange ` method to ensure
fixed bug in editnodetextfield where mouseevent be n ' t properly handle .
camel - 14263 : fixed bean method to work with static bean . thanks to krisztian for the patch .
[ java ] update license year for license year
[ java ] suppress unchecked warning in agentrunnertest . testclosedbyinterruptexception
added getDescription ( ) method implementations in multiple Maven classes to provide clearer descriptions for Maven project properties and properties in the pom
refactored face addition logic in ObjLoader . java to streamline face management to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ runtime ] fix typo in processengine javadoc
replaced instances of ` reentrantLock ` with ` lock ` in multiple Java files to improve code readability and maintainability by using a single
updated the ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBom ` methods to
updated back ( ) method to use evt . getComponent ( ) instead of evt . getComponent ( ) to ensure proper navigation to the correct component
do n ' t try to verify server - to - server certificate if verify = true
updated generic type annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to enhance type safety and improve code clarity
replaced ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple files to simplify configuration retrieval by removing unnecessary dependency on
do n ' t remove board pane when select a stub
simonstewart : add the getsessionid ( ) method to the remotewebdriver class
added null check before setting time interval for node and edge in ImportContainerImpl . java to avoid potential NullPointerExceptions when setting time intervals
[ hotfix ] [ test ] fix test failure in mockservercontainer
updated error logging to include the exception message to improve debugging by providing more context in error messages
replace RobotsHonoringPolicy with CrawlMetadata in DispositionProcessor . java to improve handling of CrawlMetadata in the DispositionProcessor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
camel - 14265 : camel - test - infra - maven - plugin should work on window
added imports and implemented an alternative path method in ExpectNewDemo . java to provide a fallback mechanism for reading alternative files and handle potential runtime exceptions
replaced input . init ( ) with input . getFirstFilter ( ) . init ( ) in LogEntryParseTester . java to ensure proper initialization of
added ` protectionDomain ` parameter to the ` BufferAlignmentAgent ` method to enhance security by associating protection domains with the builder
added dispose method to clean up mesh , batch , and texture resources to ensure proper resource management and prevent memory leaks
added configuration to disable unsafe external table optimizations in Hive to enhance performance by avoiding unnecessary optimizations on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
change wallpaper offset from - 30 to 0 in Launcher . java and Workspace . java to adjust wallpaper behavior based on scroll range
updated return value from false to true in SybaseASADatabase and modified sequence retrieval logic in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure correct
nifi - 10219 : fix putsql auto commit and rollback behavior when driver / database be disable
added directory creation logic for parent directories in SnapPuller . java and implemented assertions in TestReplicationHandler . java to ensure necessary directories are created
updated the AppTarget ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to align the AppTarget identifier
refactored frame method to accept an output ByteBuf parameter across multiple classes to improve message framer functionality and enhance message handling
refactor constructor signatures in OAuth2AuthorizationRequestRedirectFilter and OAuth2LoginAuthenticationFilter to remove unnecessary parameters to improve code clarity and maintainability by
added extended description for splitting text into key - value pairs in GenericUDFStringToMap . java to improve clarity and usability of the
updated ` PlainFormatter ` to truncate ` Instant ` to ` ChronoUnit . MILLIS ` and removed the unused ` formatInstance ` method to improve
updated timeout handling and refactored the close method in AgentRunner . java to improve resource management and ensure proper timeout handling during agent closure
hhh - 14219 avoid use reflection in classloadingstrategyhelper . usinglookup
updated Mockito library version in the project to ensure compatibility with newer versions of Mockito
updated debug log message from " Closing proto event file " to " New proto event file " to provide clearer insight into the event per file
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily skip tests that require at least one sample result
updated the exception message from " Then zero " to " Rows and columns must be greater than zero " in GridLayout . java to provide clearer
make sure we do n ' t fail on exception in wagoncART
alexeibarantsev : fix xls2csvmra to print the sheet name
updated thrust calculations in ThrustCurveMotor . java to use startThrust and endThrust instead of averageImpulse to improve
fix niftyjmedisplay to pass inputmanager to inputsystemjme constructor
add an assertion to ensure that the hashcode field offset be non - negative .
remove block . getmesh ( ) , deprecate in favor of block . getstandalonemesh ( )
[ hotfix ] [ yarn ] fix typo in yarnapplicationmasterrunner
added EMPTY _ WORD _ OPTIONS configuration and modified matcher logic in LineReader and LineReaderImpl classes to improve handling of empty words and enhance
[ hotfix ] [ table - planner - blink ] add writecommitlog flag when push view replica update
added functionality to open the web browser in CaptureActivity and defined a default button ID in PreferencesActivity to improve user experience by enabling automatic opening of the
added a test method for batching in JoinedTableTest . java to ensure that batching behavior works correctly for Board and Post instances
do n ' t log duplicate timestamp when persist item
removed deprecated ` -- format ` option and replaced its usage with ` -- plugin ` in the ` CucumberOptions ` and related classes to ensure
removed the save ( ) method call from PMS . java to streamline the code by eliminating unnecessary method calls
simplified the back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new ` Capacity ` class for testing to ensure correct
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve code clarity
xwpf : add endnotes to xwpfdocument to support xwpf footnote reference
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event tracking by associating client information with the event
added a test method for verifying the version of an OGR library in BridjOGRDataStoreTest . java to ensure that the version
added a new file ` Lifecycle . java ` to manage network lifecycle events to provide a mechanism for managing network errors and crash protection in the application
modified the ` addURLToDownload ` method to use ` getDACookie ( ) ` and added a retry mechanism for handling 404 responses to improve
removed unused imports from BodyTubeShapes . java and RocketFigure . java to clean up the code and improve readability
added support for scaling surfaces based on the RETINA flag in PJOGL . java to improve rendering performance by allowing dynamic scaling of
add a method to set the initial value of createprojectoffline checkbox to make it easy to configure if the pub be unavailable .
replaced the PackedInts library with a custom BlockPackedWriter and added unused imports to streamline the code and improve readability by eliminating
( chore ) camel - core : change defaultstatusroute to use a sortedset instead of a collection
removed unnecessary data list and stream data handling in GoAwayTest . java to simplify the code and improve performance by eliminating unnecessary data processing
added property handling for FluentSetterBean in ReflectionUtils and created a test for it in EasyRandomTest to ensure fluent setters are correctly populated and
updated ` BlockingHttpEndpoint ` and ` HttpEndpoint ` to return ` HttpResponse ` instead of ` ListenableFuture < ? > ` to improve response
updated fileUrl and header handling in FileSortByExpressionTest and added folder preparation method in FileSortByIgnoreCaseExpressionTest to improve test clarity and
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity and consistency in logging output
pdfbox - 4071 : add option to write image scaling information , a suggest by valerybokov
added logic to handle aggregate function name in the TSServiceImpl class to improve the flexibility of column addition based on SQL parameters
updated Nested2 and Base classes to extend WithNestedTests . AbstractNestedTest instead of LuceneTestCase to improve test structure and ensure proper cleanup of system
fix : set the value of xcapserveruri when register a presence .
add support for handle exception in web application . fix # 118
added methods to stop text editing in various implementations to improve user experience by ensuring that text editing is stopped correctly
nifi - 145 : fix npe when no group attribute be set on a flowfile
updated method signatures and logic in ` ComponentConfigDialog ` and ` RocketComponentConfig ` classes to improve clarity and functionality of component configuration dialogs
added error handling and logging in ChatAnnotation . java to improve error reporting and ensure thread safety during message sending
added a check for Windows OS before executing a test in HTMLDataFlavorTest . java to ensure the test is only run on Windows to avoid potential
added SQL _ SERVER _ SNAPSHOT transaction level to IsolationLevel . java to support SQL Server snapshot functionality
replace direct insertion of new recids with a loop that waits for the new recids to become available to ensure proper resource management and prevent potential
replace jrecompat . getinstance ( ) . jarfilenewinstance ( ) with java . util . zip . zipfile ( )
added a null check for the command class before processing commands in RegisteredServiceSimpleFormController . java to ensure proper handling of service commands and prevent
set disk _ failure _ policy to ignore instead of best _ effort
removed public access modifier from method declarations in RipperInterface . java and RipStatusHandler . java to enhance encapsulation by restricting access
peerdiscoveryagent : do n ' t try to connect to an ip address that do n ' t match the ip address .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the code by eliminating unused method
updated import statements and modified method call in PinotSegmentRebalancer . java to use ClusterDataCache instead of AutoRebalanceStrategy to enhance
simonstewart : enable auto - remove of the docker container delete operation
fix defaultselenesecommand to parse pipe - separated command argument
attempt to make createlossarytests more robust by retry
modelresolver : use component . schemas _ schemas _ ref instead of ` ` anyofref . getName ( ) ' '
refactor EntityDeletedEvent to utilize JsonUtils for JSON serialization and deserialization to improve code readability and maintainability by utilizing a centralized
added support line validation for " gop " format in FormatConfiguration . java and updated media info parsing in LibMediaInfoParser . java to enhance
added a new file TestProfileReturnTypePrinting . java that implements a loop with multiple iterations to implement and test the return type printing functionality of the
[ hotfix ] [ config ] use lock in parseconfigutils to ensure thread safety
added handling for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management for AcquireReleaseColumnsSegment
simonstewart : fix the flaky firefox profile test
updated method signatures and return types in HasAndroidDeviceDetails . java and added new return statements in getSystemBars ( ) to enhance code clarity and
remove redundant call to projectstats . addbug ( ) .
bugfix # 21792 , use disabled shadow for gtk label
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added logic to return a date in the future for scheduled actions without week days to ensure scheduled actions are executed in the future when no days are set
refactor upload button handling in ShareActivity to use a menu item instead of a button to improve code readability and maintainability by consolidating
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to load exchange metadata from an input stream
added a custom serializer for ` Writable ` objects in ` CrawlDbReader ` to enable JSON serialization of ` Writable ` objects for better data handling
testjaspicbasicauthenticator : remove unused test class
added a service configuration pid to the MDNSDiscoveryService component to ensure proper service configuration for MDNS discovery
chat : fix nullpointerexception if messageitem be null
updated the ForkJoinPool instantiation in TestBPIndexReorderer . java to use a custom ForkJoinWorkerThread to improve thread management and enhance performance during index reordering
updated assertions in RoleCommandOrderTest to check for DATANODE and NAMENODE roles to ensure that dependencies contain blocker roles for datanode and name
added a new method ` restoreLocalInfoFromTableInfo ( ) ` and modified the existing ` writeObject ` method to include it to ensure that the
standardized spacing and formatting in multiple Java files to improve code readability and maintain consistency
added transformations to the sprite batch and modified the opacity of the verdana image in BitmapFontTest . java to ensure the sprite batch reflects
[ hotfix ] [ python ] exclude builtin aggregate from python aggregation in streamphysicalpythongroupwindowaggregaterule
fix race condition in server . send statuschange . statuschange . up and server . connectiontracker . send ( )
add gossiper . getunreachabletokenowners ( ) method to get the list of unreachable member
fix geosymbolic multiplication to not change to multiplication
added content type handling to FormAuthenticator and SavedRequest classes to ensure correct content type is set based on saved request state
changed static fields to private static final and added null checks for localEnvironment in XToolkit . java to ensure immutability and prevent potential NullPointerException
refactor RecommenderJob and AbstractJob classes for improved organization to enhance maintainability and readability of the codebase
replaced ` Object ` with ` ReentrantReadWriteLock ` for locking mechanisms in ` EnvironmentImpl . java ` to improve concurrency support and ensure proper resource
added unit tests for read identity providers in different zones using a token to ensure correct functionality of identity provider creation in different zones
[ hotfix ] [ runtime ] fix npe in pointintimetrigger when timestamp be null
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ rocketmq - 4246 ] update heartbeat to all broker with lock
added support for detached directory modes in Cairo configurations to enhance directory management capabilities across configurations
[ java ] add test to make sure clustermessagetoslowdownservice behaves correctly when there be a follower to restart .
fix author name and year pattern in preference
updated DBinaryDescription , DLibraryDescription , DLibraryDescription , DLibraryDescription , and DLibraryDescription to utilize CxxPlatforms for
add dispose ( ) method to googlettsservice so we do n ' t leak voice object .
camel - 14265 : camel - core - file on completion should not delete dynamic file name if the file name contain a ` ` { file
added a boolean flag ` reopenReaders ` in ` SolrConfig ` and modified the canonical file comparison logic in ` SolrCore ` to allow configuration
[ freeplane ] add dialect attribute to mapwriter .
added methods to handle the currentDate and currentTimestamp operations in the Update class to enhance functionality for managing date and timestamps in the database update
added a dup method in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest . java ` to
refactor Condition and related classes to implement interfaces instead of extending it to simplify code structure and improve readability
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java and changed expected value type from float to int in TestFacetsCollector .
removed multiple unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
renamed the method ` providesUploadController ` to ` direct _ nearby _ upload _ prefs ` and added a method to retrieve the local SharedPreferences to
added support for the " SYSDUMMY1 " database mode in Parser and Mode classes , and implemented tests for DB2 , Derby ,
refactor logging statements and improve formatting in TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration to enhance code readability and maintainability by standardizing
pdfbox - 4071 : fix npe in poixmlproperties . getproperty ( )
fix ( geotiffreader ) : check for negative infinity instead of nan
removed unused imports and refactored method calls in CliDriver . java and SessionState . java to improve code clarity and ensure proper resource management
updated MockRestAdapter to use Scheduler instead of Executor and replaced Subscriber with Observable . just ( ' nothing ' ) for asynchronous operations to improve performance
added a default method for selecting rule ID sets in RuleConditionMapper to enhance flexibility in selecting rule conditions based on specified rule IDs
added a new method ` addExitDescription ` to ` ExitStatus ` and updated its usage in ` AbstractJob ` and ` AbstractStep ` to
fix multiblock render not work if the player be the multiplayer
rename columnfamily to columnfamilycolumn in slicereadcommand to make it easy to use
updated the range length comparison logic in PlotConfiguration . java to ensure accurate range comparison for range lengths
replace UIAlertViewDelegateAdapter with UIAlertController in DefaultIOSInput . java to improve user interaction by providing a placeholder UIAlertController for
replaced params . getBuildTarget ( ) with nativeLinkable . getBuildTarget ( ) in PythonUtil . java to ensure correct build target retrieval
renamed the parameter from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more descriptive
added assertion to verify that the service ' s message is not null to ensure that the service does not return an error message
updated key handling and conversion logic in MappingMongoConverter . java to improve clarity and correctness of key conversion logic
updated Timber logging statement formatting in NearbyMapFragment . java to improve readability and consistency of log output
camel - 14284 : camel - jbang - use the deprecated key instead of the javatype key in camel - jbang
updated FuzzyLikeThisQuery to use Terms instead of a direct Terms reference in FuzzyLikeThisQuery to improve robustness by avoiding
modified the ` writeApplicationsLinks ` method to accept a boolean parameter for the tabular list to enhance flexibility in managing application links based on the
[ dspace ] remove dependency on dspace from createmissingidentifiers
replaced bytes . length with bw . getLength ( ) for assignBytes calls in VectorColumnAssignFactory . java to improve code clarity and maintainability by
changed the return type of getDisplayScript from abstract to a non - abstract method and added a return statement to provide a default implementation for the method
simonstewart : fix the order of key to release and keytopress
pdfbox - 4071 : initialize arraylist with size of list to avoid allocation
fix a race condition in the networkconfigurationwatcher when there be no active interface .
added unit test for hssfworkbook . getallembeddedobjects ( ) and hssfworkbook . getallembeddedobjects
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve maintainability
updated variable names from ` hostParams ` to ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity and consistency
pdfbox - 4071 : do n ' t use font symbol , a suggest by valerybokov
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to improve OpenGL rendering
updated LiveTvGuideActivity to use a new variable for the current guide start time and modified related logic to improve clarity and maintainability of the
updated method invocation from ` getDeclaredMethod ` to ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test classes in ` Common
added calls to dlopen libraries for " libfreetype . so " , " libfontmanager . so " , and " libfontmanager .
[ hotfix ] [ core ] fix parsing of multi - variable function
fix loop safepoint elimination when guard allow .
refactor method calls in TypeFrameModelingVisitor . java for clarity and efficiency to improve code readability and maintainability by reducing redundancy
added a new ` LocalizedString ` class and updated methods in ` Formattable ` , ` Attr ` , ` Resolve ` , and ` Resolve
add server config option to disable classpath search
made several fields and methods in DataLine . java final and simplified array creation to improve code readability and ensure immutability of AudioFormat arrays
change default retries from 0 to 2 in Reference . java and update corresponding tests in AnnotationPropertyValuesAdapterTest . java to increase the number of retries
added functionality to read and process settings from a file in TexturePacker . java to enhance functionality by allowing customizable packing settings
updated AchievementsFragment to replace progress bar text format patterns with text views for uploaded images and wiki text views to improve code readability and maintain
added multiple calls to ` beginEnter ` , ` logger ` , and ` endEnter ` methods in ` TranslatingJavacPhaseTracerTest
added a new ` CategoryInfo ` class and modified the ` MwQueryPage ` to include it as a query parameter to enhance functionality by providing
removed redundant " username " and " password " assertions in AuthzAuthenticationRequest . java to streamline error handling for empty credentials
added accessibility support and modified taskbar timeout handling in TaskbarStashController to improve user experience by ensuring accurate timeout settings for taskbar visibility
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46537
updated access flag handling in ClassVisitorDriverFromElement and added new test cases in StubJarTest to ensure correct stub behavior for generic interfaces , enum
updated IntervalFilter to ensure ' in ' is not null and added null check in LowpassIntervalsSource to improve robustness by preventing null pointer
added unit tests for iterating over entries in a map using iterators to ensure correct functionality of iteration over entries in the map
added a serialVersionUID field to TreeMap to ensure proper serialization compatibility for the TreeMap class
updated the creation timestamp from milliseconds to seconds in ImageData . java to ensure accurate timestamp representation for image creation
[ svm ] add support for ` ` f2m ' ' a synonym for ` ` grobcov ' '
added imports for EncryptionUtils and modified key deletion logic in AccountRemovalJob . java to utilize the PRIVATE _ KEY and PUBLIC _
refactor keep - alive header creation to use a utility method to improve code readability and maintainability by centralizing keep - alive logic
postjoinmapoperation : do n ' t create map if there be no interceptor
removed multiple inlining cdata section processors from StandardDialect to streamline code for better readability and maintainability
[ hotfix ] remove unused parameter in binaryhashtable
refactor environment variable handling to use Optional for better null safety to improve code readability and maintainability by consolidating environment variable retrieval logic
ww - 4892 fix typo in defaultactionmapper
added SerializableMode import and imported Mockito . mock . SerializableMode in Mockito . java to enable serialization support for Mockito in tests
do n ' t set field value in field injection point if it be null .
added support for isolation level in select statements in database mode to enhance database compatibility handling and improve test coverage for different database modes
added constants for HIVE _ SERVER2 _ TRANSPORT _ MODE and HIVE _ SERVER2 _ THRIFT _ HTTP
added a method ` isCacheable ` that always returns false in ` GlobalOrdinalsWithScoreQuery ` to ensure that the query does not cache
added a new file ` TestStrangeControl . java ` that implements a thread - safe test for the ` StrangeControl ` class to demonstrate
updated generated paths from " . json " to " . jsfile " and " . jslib " in JsFile and JsLibrary classes
added selectionStart and selectionEnd fields with their respective implementations in ShadowEditText . java to enhance functionality for managing selection states in the ShadowEditText
close grpc server on shutdown to prevent resource leak
refactored the use method in Jooby to accept a path parameter and updated related bindings in Router and tests to enhance flexibility in route usage
added null check for fst in FreeTextSuggester . java to ensure that lookup is not supported at this time to prevent runtime errors
updated line ending handling in T4975569 . java and modified URL verification in T6729471 . java to ensure consistent line endings
added ABI writer class loading functionality in JavacInMemoryStep . java to ensure proper initialization and handling of ABIWriter classes
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to boolean methods
added a check for the shutdown state before scheduling scheduled tasks in PullMessageService to ensure that scheduled tasks are only executed when the service is not stopped
[ hotfix ] [ doc ] fix typo in energyendpointer javadoc
refactor ComponentPresetChooserDialog to use a list of displayed columns instead of an array to improve efficiency and readability of the code
removed unused imports from BazaarRepository , CVSRepository , and IndexDatabase classes to improve code clarity and reduce unnecessary dependencies
camel - googlesheets : fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated related references in ` CxxLibrary
deleted files Constants . java and DistanceUtils . java to remove unused files to streamline codebase
replace diskDelimiter splitting logic with direct substring extraction to simplify code and improve readability
[ gr - 32266 ] fix build - time initialization of native image class .
added a new test method ` testCreateInline ` in ` RoleBindingTest . java ` and modified ` RoleBindingOperationsImpl . java ` to
added debug logging for session cookie configurations in UaaSessionCookieConfig . java to improve traceability and traceability of session cookie configurations
updated file name calculation in HotseatFileLog . java to use Calendar . DAY _ OF _ YEAR instead of LOG _ DAYS to ensure
corrected a typo in the variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve code readability and
added error handling for invalid options in JavapTask . java and created a new test class T8033711 . java to improve error reporting
replace usage of ` Collectors . toList ( ) ` with ` . toList ( ) ` in multiple Java files to improve code readability and
updated logging level from error to warn and modified error handling logic in TaskDriver . java to improve log clarity and handle shutdown scenarios gracefully
[ flink - 20536 ] [ network ] add enabletieredstorage parameter to singleinputgatespecutils # geteffectivemaxrequiredbuffer
email sender , sendgrid , mailgun , sendgrid : remove response . statuscode constant
added OpenGL configuration to Cuboc and modified LwjglApplication initialization to enable OpenGL 2.0 functionality for improved rendering performance
remove unnecessary check for voidtype in jimplebody . getlast ( ) .
refactor OutputMacroExpander to use Arg instead of DefaultSourcePathResolver and add a new method for appending to command line arguments to improve
fix flaky test in simpletestinclustersupport by use ' lightjob ' instead of ' job '
added a condition to check if the file path contains the " / build / " prefix to ensure that duplicate words do not contain the " / build
[ fix # 829 ] instructorfeedbackresponsecomments : change return type of getresponsecomments ( ) method to map < string , list < 
removed unnecessary whitespace in the Container class to improve code readability and maintain consistency
added a new file ` TestEscapeThroughInvoke . java ` implementing a class that tests escaping and saves objects to ensure proper handling of object escapes
replaced manual stream skipping with IOUtils for reading bytes to improve code readability and maintainability by utilizing Apache Commons IO
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 511 : jdbc interceptor
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of exceptions
hbase - 26105 add test for lrublockcache . getcurrentsize ( ) and lrublockcache . getblockbyhfile
removed a conditional check for taskCount in RecentsView . java to simplify the code by eliminating unnecessary checks
added a instance config change listener to the HelixManager and increased sleep duration from 1000ms to 5000ms in HelixServerStarter to improve
added new interface ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` , and implemented ` remoteInit ` method in ` CoinmateExchange
add warning for $ { basedir } / $ { project . basedir } / $ { basedir } $ { basedir }
pdfbox - 4071 : update object key in coswriter . getobject ( ) to avoid duplicate key
add setdisplaydata ( ) method to ptransform to allow to set displaydata
replaced DefaultSubject instantiation with assertThat for null checks and added fail ( ) assertions to improve test clarity and ensure proper handling of null values
removed the JSSE certificate path property for disabled algorithms in ClientJSSEServerJSSE to enable proper certificate validation for improved security
added checks for SUB _ COMMAND and SUB _ COMMAND _ GROUP types in OptionData . java to ensure that sub - commands and subcommand groups
updated module - info . java files for mmm and ppp modules to improve module structure and maintainability
added error handling for unknown server errors in IOSImplementation . java to improve robustness by ensuring proper exception throwing for unknown server errors
updated the initialization of sCheckingEvents and added a finally block in LogEventChecker . java to ensure proper resource management and prevent potential memory leaks
replaced exception handling with logging for exceptions and refactored exception handling in FileSinkOperator . java to improve error logging and ensure proper resource closure during
added diagnostic output to SchemaGenerator for better debugging to improve debugging capabilities by providing detailed diagnostic information
replaced RuntimeException with OptiqSemanticException in SemanticAnalyzer . java to improve error handling by providing a more descriptive exception type
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a set to track loaded resource paths before scanning to prevent duplicates in the scanning process
updated the method to retrieve the test instance from ` extensionContext ` instead of ` get ( ) ` and added null check for ` testInstance `
added null check for the input object and updated response handling in RoutingInBoundHandler . java to improve robustness by preventing null pointer exceptions and ensuring
add natip to ekey configuration to allow use of ip address in debug log
updated various classes to use ArrowByteBufAllocator instead of BaseByteBufAllocator to enhance memory management and improve code clarity
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
modified HttpConnection to conditionally set the state of the parser based on header and body buffer conditions to ensure correct parsing behavior when headers or bodies are
[ java ] : fix multitimeout to use deferredsetonce and deferredsetonce .
add a compaction counter to leveledmanifest to track the number of level with overlapping sstables
added a test annotation to the TestOrcTimezone1 class to ensure tests are executed as expected in the current implementation
refactored metric and timer parsing logic to use a new method for finding matching metrics and timers to improve code readability and maintainability by
added error handling for JSON processing in PinotSegmentRestletResource and simplified return statements in TraceContext and TraceContextTest to improve robustness by
refactor JTable to handle null class for the superclass and add a new Test6888156 class for testing to improve robustness of the JTable
added conditional check for the existence of the SHELL environment before adding it to the arguments to ensure proper command - line arguments are passed based on
updated the parameter from 10 to 1 in the deleteWithoutSubscriptions method call to ensure that the deleteWithoutSubscriptions method returns the correct number of
updated MockitoExtension to use LinkedHashSet instead of List for testInstances and introduced InjectMocks annotation in JunitJupiterTest to improve performance and
refactor FieldMonitor class to improve code organization to enhance maintainability and readability of the code
removed the call to deleteFilesAfterClose ( ) and updated fileMmapEnable ( ) method in BTreeMapTest . java to streamline
modified the iterator initialization in SortedIntList and added a reset method in SortedIntListTest to ensure proper allocation of iterators and ensure
added unregister method call in DefaultRemoteProxy . java and modified exception handling in JMXHelper . java to improve resource management and improve error handling clarity
[ hotfix ] [ rocksdb ] increase rocksdb default writebuffer size to 64mb
removed the ' true ' parameter from the constructor of Style class to simplify the constructor call for better readability and maintainability
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message encoding in the request
removed JSON graph rendering logging and configuration setting in SamzaRunner . java to clean up the code and reduce unnecessary logging during pipeline execution
fix a bug in helloaudio , set the sound gun ' s position to false
refactor LoopRotateBadNodeBudget class to improve code readability to enhance maintainability and facilitate future updates
added a new ` convertToMongoType ` method to ` AbstractMongoConverter ` and updated related methods to include ` TypeInformation ` to enhance type conversion
[ geot - 4892 ] fix inputbox renderer for imaginary unit in linked geos
[ java ] fix sendkeytoactiveelement copyright year and add unit test
added methods to convert a BufferedImage to a scaled instance and reduce its dimensions in AddAndScaleMultiImage . java to improve image scaling efficiency and prevent
removed the ` extendArgumentCheck ` method and the ` extendWrapStore ` method from the ` DBMaker ` class to streamline the code by
added updateshiftstatenow ( ) method to anysoftkeyboard to ensure that the shift state is updated when the keyboard is pressed
removed the ` DETECTED _ ACTIVITY ` constant and its retrieval from ` SerializableLocation ` to simplify the code and improve backward compatibility by
updated import statements to reflect the new package name from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty .
removed an unused import statement for Buildable in AaptPackageResources . java to clean up the code and improve readability
added comments to various method calls in CodeException , ConstantInvokeDynamic , ConstantMethodHandle , and ConstantMethodType classes to improve code readability and
updated exception message to include the status code of the upgrade protocol to provide clearer feedback on the upgrade process ' s status
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
updated Mockito library version in the project to ensure compatibility with newer versions of Mockito
removed redundant code for plot owner checks in Merge . java to streamline code for better readability and maintainability
removed deprecated ` getConversationID ( ) ` methods from ` HttpContentResponse ` , ` HttpResponse ` , and ` Request ` classes to clean up
updated import statements in DummyFreeTTSVoice . java and modified PhoneSetImpl initialization in DummyFreeTTSVoice . java to utilize the
refactor stripQuotes method in BaseSemanticAnalyzer and PlanUtils to use a new utility method in PlanUtils to improve code maintainability and reduce
refactored rendering methods in DLNAResource to improve clarity and structure to enhance code readability and maintainability by encapsulating rendering
[ mng - 5686 ] fix plugin manager to use project ' s remote artifact repository instead of resolution repository
camel - 14265 : camel - cxf - cxf - client - factory cache test need to close applicationcontext
updated PhysicsClient . java with new method implementations to improve functionality and maintainability of the PhysicsClient class
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failure
added initialization of the file variable in ZipFile . java to ensure the file is created with the correct file name
added a deprecated method handleAll to the TryType class to indicate that the method should no longer be used in favor of a new implementation
[ core ] make channel non - nullable by default
added StackTraceUtils to manage stack traces and updated imports in GenericDAOImpl , ForumServiceImpl , ReflectionUtils , and ForumServiceImpl
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the code and improve readability
refactor unparseList calls in FunDefBase , ParenthesesFunDef , and BasicQueryTest to handle different argument types to improve
refactor SQL query construction and error logging in CheckDatabaseHelper . java to improve code readability and maintainability by using a more descriptive
[ hotfix ] [ runtime ] rename ` ` supresswarnings ' ' to ` ` suppresswarnings ' ' for jdk 11
refactor JsonTreeReader to improve error handling for unexpected JsonElement types to enhance code clarity and maintainability when reading JSON elements
added support for handling dash arguments in the TestCommand and a corresponding test case in ExternalTestRunnerIntegrationTest to improve test runner functionality by allowing users to specify
added ` dedup ` method to ` SolrDeleteDuplicates ` and ` indexSolr ` methods in both ` SolrIndexer ` and ` Solr
[ flink - 20536 ] [ table - api - java ] use flink planner in streamsql example
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is cleared during integration tests
updated progress handling in Progress . java and RSSReader . java to incorporate a showPercentage parameter to improve user experience by allowing dynamic visibility control of
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added utility methods for writing POI documents and closing streams in IOUtils . java to ensure proper resource management and prevent resource leaks
updated print statements to include newline characters for runOptions and exportClassPath to improve output formatting for better readability and maintainability
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` _ dotsPerPoint ` to
added custom user search functionality in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to improve user authentication handling
added support for default ports in the router to enhance routing flexibility by allowing dynamic port configurations
updated SnmpTargetHandler to conditionally update online status and refactored related tests to ensure online status is correctly verified and improve test reliability
add instructors with submit privilege to edit session to allow instructor to submit session
added @ Incubating annotation to AvailableSettings . java to indicate that these settings are outdated and should no longer be used
refactor FileResolverImpl to handle both " . jar ! " and " . war " paths more efficiently to improve path extraction logic and ensure correct
updated the format of newFlushedSize in DocumentsWriterPerThread . java to include the included docstores parameter to improve clarity of the output
change dirt . getunlocalizedname ( ) to getunlocalizedname ( ) in examplemod
corrected the spelling of " stripWhitespaceX " to " stripWhitespaceY " in ImageProcessor . java to improve code readability and maintain
increase the maximum number of threads in the locks variable from 1 to 1000 to optimize performance by reducing the number of concurrent threads
update TsFileSequenceReader to use exactSearch parameter in MetadataIndexNode . deserializeFrom and add a test for it in MeasurementChunkMetadata
removed the ` DateFormat ` parameter from the method signature of ` makeResultFromDelimitedString ` in ` CSVSaveService . java ` to simplify method
added a preferred size to the pane in NavigationShareTab . java to improve layout responsiveness by adjusting the pane ' s preferred size based
replaced OffsetAttribute with State in BeiderMorseFilter and added a test for custom keyword attribute in TestBeiderMorseFilter to
updated Upnp Upnp handler and handler classes for consistency to improve code maintainability and readability across the Upnp implementation
fix miss pos in lenswarp . setcollidedat ( )
added unit tests for ` toJson ` and ` dynamicTest ` methods in ` JsonTest . java ` to improve test coverage and ensure proper exception
updated the implementation of MutableContextDataSupplier to improve performance and maintainability of context data handling
change exception handling from throwing a SolrException to catch a Throwable and log a warning instead of throwing an exception to improve error handling and provide clearer
updated KubernetesMockServer initialization to use HTTPS instead of true to ensure compatibility with https in the Kubernetes server
fix wrong stamp computation in defaultjavaloweringprovider .
updated response handling in DefaultServlet to use POST instead of METHOD _ NOT _ ALLOWED _ 405 and modified test assertions in DefaultServletTest to
tika - 264 : use locale . us for decimalformat for lat _ long _ format in tika - extractor
refactor error handling in ShowFileRequestHandler to return exceptions instead of throwing SolrException to improve error reporting and provide more context in response
added exception handling functionality to the ReflectorClassWriter class using try - catch blocks to improve error management and ensure proper stack trace retrieval
added a ` clamp ` method to the ` Vector2 ` class and implemented it in the ` Vector ` class to enhance vector clamping functionality to
added imports for ClientDetailsEntity and OAuth2Utils , modified token creation logic in ChainedTokenGranter . java to ensure requested scopes are
refactor BC _ instanceof class for improved clarity to enhance code maintainability and readability
replaced setSaveFlags ( SAVE _ ALL ) with setSaveFlags ( SAVE _ ALL ) in EditorBottomSheetBehavior . java to improve
updated UaaUrlUtilsTest to use JUnit 5 annotations and added pollution prevention extension to improve test structure and enhance compatibility with newer JUnit
hhh - 14499 make nativequery . addscalar ( string , type ) return basicdomaintype
added AAT tracking functionality to the SunLayoutEngine class to improve caching and retrieval of font - related aat values
use intarraylist instead of intbigarray for block position calculation
simonstewart : fix the handling of the window handle for the ie driver
[ hotfix ] [ doc ] fix typo in brokerrequestutils
refactor instance handling in InjectorBuilderImpl to use a map for injectables to improve clarity and maintainability of the code
updated the method calls in ` BuildTargetToRawTargetNodeTransformer ` to use ` getBasePath ( ) ` instead of ` getAbsolutePathToBuildFile
added null check for the input value before parsing to avoid potential NullPointerExceptions when the input value is null
add keepalivemanager to jabber connection so that it can be reuse by other jabber connection
updated the DEFAULT _ LOAD _ FACTOR constant from 0.07F to 0.07 in IntHashSet . java to ensure consistent load factor usage across
added methods to retrieve all data types and their physical variations in VectorizationContext and VectorPTFDesc classes to enhance data handling capabilities for better
updated package names from ` com . google . zxing ` to ` com . google . zxing . client . j2se `
refactor layout condition checks for overview actions in OverviewState . java to improve clarity and maintainability of the code logic
added JPA @ Entity annotation to BaseActivityEventEntity . java to enhance entity management capabilities in the application
added TraceHelper trace sections in NavBarSwipeInteractionHandler , TouchInteractionService , and modified SYSTEM _ TRACE constant in TouchInteractionService to improve
added a new file ` InvalidOptions . java ` with methods to validate Java options to ensure proper error handling and validation of Java options in the application
added error logging for inconsistent display bounds sizes in DisplayController . java to improve debugging by providing clearer diagnostics for inconsistencies
refactor ` getClientIdAndClientSecret ` and ` getClientIdAndClientSecret ` methods into ` OAuth20Utils ` for better encaps
updated the ` _ unwrapServletException ` variable from ` false ` to ` true ` in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` to
added a condition to set the status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure the shortcut status is correctly set based on
camel - 14263 : fixed issue with seda endpoint with default queue size of 0 .
added batchUpdateStart and batchUpdateEnd methods to Kernel and App classes to enable batch updates for the application during batch updates
added HttpClient configuration to ThirdEyeApplication . java to enable customizable HTTP client usage in the application
added sorting functionality to JobInstanceFetchRequest and updated batch size retrieval in JpaJobPersistenceImpl to improve data retrieval efficiency by allowing custom sorting options
updated CryptoFacilitiesTradeService to use a CurrencyPair for canceling cryptoFacilities orders to improve order cancellation logic and ensure
ggb - 202 hide the keyboard when click in algebra view
[ gr - 32258 ] use nfi . memcpy instead of byte [ ] and byte [ ] .
reformatted code for improved readability in BindLdapAuthenticationHandler . java to enhance maintainability and clarity of the code
added a ` blockToolTip ` property and its getter and setter methods in ` ToolTipManagerW ` , and modified ` ModeToggleMenu ` to disable tooltip
updated DefaultDateTypeAdapter to accept a DateFormat parameter and modified GsonBuilder to use it to enhance flexibility by allowing dynamic date style and time style configuration
updated playerSet string formatting in ListCommand . java to improve code readability and maintainability
added a check for ` isEmpty ( ) ` in ` List . java ` to ensure that ` isEmpty ( ) ` returns ` List < Z >
added exception handling for InvocationTargetException in ParametricCallable . java to improve error management by throwing a specific CommandException
updated the getLikeExpression method to include a boolean parameter and modified related logic based on whether the expression is like to enhance the functionality of the Vector
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide functionality for starting and stopping
added locale handling in the runChild method of LuceneTestCase to ensure proper locale management during test execution
rename multiple Java files for consistency and clarity to improve code maintainability and readability across the project
refactor context handler initialization to use a dedicated method to improve code readability and maintainability by encapsulating context handler logic
camel - 14246 : camel - osgi - add camel - test - bundle to camel - test - blueprint
nifi - 14545 : fix test to pass on window .
removed the ` Warner . noWarnings ` parameter from the ` returnTypeSubstitutable ` method and updated related logic to streamline the method
add a throttletype enum to make it easy to configure the type of throttledtemplateprocessor
removed unnecessary variable assignment in ColorBleedEffect . java and added a conditional check for blendSrcFunc and blendDstFunc in SpriteBatch
refactored Annotation and AnnotatedElement classes for improved clarity to enhance code maintainability and readability
added a new interface ` Model ` and modified ` Sheet ` , ` Workbook ` , and ` Workbook ` to implement it to enhance model functionality
camel - 14263 : remove dependency on apache from header filter strategy . thanks to jbellis for the patch .
added a ` clearEntityManager ` feature to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control the clearing of the
added null checks for ShortcutInfo and intent before displaying a toast message in InstallShortcutReceiver , Launcher , LauncherModel , and Workspace to
[ hotfix ] [ core ] make twodimensionalcollectionvaluedmap optional in coremapnodepatterntrigger
updated exchange specification from " BTC - e . nz " to " Wex " and corrected a typo in the error message to
added null checks in OrcEncodedDataConsumer and improved null checks in EncodedTreeReaderFactory to enhance robustness by preventing potential NullPointerExceptions
added null check for files in SegmentInfos . java and a test for opening the IndexReader in TestIndexReader . java to ensure robust error handling
fix test case for elastic search with elastic search
modify return statement to handle negative and negative percentage values to ensure correct handling of positive and negative percentage values in DeviceHandler
updated condition checks from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java ` to
camel - 18199 : camel - core - optimize to reduce log verbosity
fix position calculation in hlschunksource . getnextchunk ( ) and hlchunktracker . getnextchunk ( ) javadocs
updated package names from ` junit . framework . TestCase ` to ` TestNumericRangeFilterBuilderTestCase ` and ` TestNumericRangeQueryBuilderTestCase ` to
[ flink - 24158 ] [ runtime ] fix stateful operator to correctly set next input in outputhandler
removed null check before setting bitmap shader shift in Area and Line classes to simplify code and improve readability by eliminating unnecessary null checks
removed the dbExists ( ) method from Blockchain . java and updated BlockchainTest . java to use ArrayList and HashMap instead to streamline database
trim whitespace from group values in SQLPlusSupport . java to ensure consistent formatting of input values
disable async socket in http11aprprotocol for now .
fix issue with divider position on the right side of the screen
added health check metrics for good and bad broker calls to PinotController health checks to enhance monitoring capabilities for controller health status
hide shared avatars view in LocalFileListAdapter to improve user experience by hiding the shared avatar view
web : remove duplicate @ clientbundle . source annotation for scss
[ java ] use ' < = ' instead of ' > = ' in argument check .
[ log4j2 - 1342 ] fix log interceptor to execute command on non - debug level .
replaced CountDownLatch with assertWaitUntil for checking finished spans to simplify code and improve readability by using a more descriptive assertion method
replaced the static locale variable with a default locale variable and added getter / setter methods for locale to streamline locale handling and enhance encapsulation
fixed bug in entrycustomizationdialog , use linkedhashset instead of arraylist
[ jbrules - 3021 ] fix bug in builder . bindcolumn ( ) and builder . bindcolumn ( ) .
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` in ` OCSPResponse . java
added serverState variable and modified sleep duration logic in SSL . java to ensure proper handling of server state transitions and improve error handling
added a new connection count counter and related methods for managing the number of open connections to improve monitoring and tracking of connection status in the source server
[ hotfix ] [ runtime ] make executionstrategy . execute ( ) public .
refactor ` createDefaultJavaPackageFinder ` method to return ` ImmutableSet < String > ` instead of storing paths to improve code readability and maintain
updated the Writer initialization to use PrintWriter instead of OutputWriter to improve output stream handling for better debugging
updated file creation logic to use UUID for temporary file names to ensure uniqueness of temporary files during testing
added support for DataTable in JRubyStepDefinition to enable support for handling DataTable instances in JRuby execution
updated visibility settings and refactored API calls in SearchImagesRenderer , ApacheHttpClientMediaWikiApi , and ApacheHttpClientMediaWikiApi classes to improve
refactor ReadSentimentDataset class to improve code structure to enhance maintainability and readability of the data structure
updated FormulaParseException to include detailed error messages for parse errors to improve error reporting for better debugging and debugging
added getter and setter for the bind address in WebSocketClient . java to enhance the flexibility and encapsulation of the WebSocket connection
[ java ] : fix checkstyle violation in consensusmoduleharness . java
refactor width and height assignment logic in WidgetGroup . java to streamline size management to improve code readability and maintainability by consolidating
updated session fixation attribute comparison to use Boolean . valueOf for better readability to improve code clarity and prevent potential NullPointerExceptions
updated switch statement in LALogicLinesFragment . java to use digitalChannel . mode instead of params [ 1 ] to improve clarity and functionality of channel
added methods to reset exponential backoff in ChromeBinary and invoked them in ChromeDriver to improve responsiveness by managing exponential backoffs
updated the ` ClientResponseWrapper ` constructor to include ` HttpMethod ` and ` httpRoute ` parameters to enhance the client ' s request handling by assoc
precompactedrow : default to integer . min _ value to avoid nullpointerexception .
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes and added a new test class for invalid rendering intents to ensure proper rendering intent
add check for ` ` on ' ' question in contribution question edit form
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] remove serializable interface from kafkarecord
added support for PostgreSQL ' s PGConnection in PooledConnectionImpl . java and created a test for it in BaseDataSourceTest . java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log messages in TokenAuthenticationHandler to use info level instead of warn for missing token encryption secret to provide clearer guidance on configuration options for token
[ hotfix ] [ hazelcast ] remove deprecate code in hazelcast . java
ambari - 24419 . enable kerberos when enable kerberos by default . ( swagle )
added ITERATOR and END tags to NamedListCodec and modified readIterator methods in NamedListCodec to improve the handling of iterators and enhance
fix npe in migrationcommit when assigncompletelylostpartitions be call without exception
added a schema inclusion rule to the options in ApiExample . java to allow public access to the schema within the API
updated the expected value in the assertion from 30.0 to 7.0 in StreamExpressionTest . java to ensure the correctness of the mean and
fix createxy _ polygon ( ) and createxy _ polygon ( ) with non - valid coordinatesequences
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to retrieve base name and dimension count in ` ConstantPool . java ` to
added a method to set debug evaluation output in HSSFFormulaEvaluator and XSSFFormulaEvaluator classes to improve debugging capabilities for formula evaluations
refactor test to use junit 5 annotations and update test assertions to use @ DisabledForJreRange for compatibility to ensure tests are executed in
removed unnecessary parameters from ExoPlayerProfile instantiation in LegacyMediaManager . java and modified the playback condition in PlaybackController . java to simplify the
added a return statement in DynamicStyleBar . java to ensure proper exit from method execution
added logging statements for setting and resetting replication properties in Utils . java to improve traceability of repl dump properties for better debugging and monitoring
refactor ReactiveAuthorizationManager for improved authorization handling to enhance security and maintainability of the code
updated the condition to promote both object and boolean types in MethodEmitter . java to ensure proper handling of boolean types in the code
rename llvmobjectnuller to llvmaddressnuller and move it to llvmfunctionstartnode
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add unit test to verify transaction - aware cache manager proxy
added a method to calculate the bounding box based on position attributes in Mesh . java to improve bounding box calculations for collision detection
added a new option ` targetHashFunction ` to determine the hash function for target hashes to enhance flexibility in computing target hashes based on user - defined
refactor DefaultConfigurationProperties to improve code readability to enhance maintainability and facilitate future updates
added high light color settings and improved highlighting logic in ListViewMultiChartActivity and BarChart classes to enhance visual consistency and visual feedback during chart rendering
updated pgSgPathPlanMap to include tmpPg in ClusterPlanRouter . java to ensure correct mapping of security group paths in the cluster
[ hotfix ] [ test ] fix test failure in infinispanremoteproducerit
added file locking mechanism to MavenArtifactFetcher and modified MavenDependencyResolver to use it to ensure locking during artifact fetching to prevent concurrent modification
added ` # ifdef gl _ ES ` conditional to the ` fragmentShader ` string in ` SpriteBatch . java ` to ensure compatibility with
changed the type of ` SortedSet ` from ` SortedSet ` to ` Set ` in ` RSGroupInfo ` and related classes to improve performance and
added error handling for loading JSPPage class and changed log level from warn to debug to improve logging clarity and reduce log verbosity when no Tld
added support for DummyVersionAwareTokenFilterFactory in CustomAnalyzer and TestCustomAnalyzer to enhance token analysis capabilities for different lucene versions
added a test for reading package archive information from setPackageArchiveInfo in ShadowPackageManagerTest to ensure accurate retrieval of package archive information from setPackageArchive
replaced direct method invocations with MethodUtil . invoke for improved security and access checks to enhance security and ensure proper access control during method invocations
updated imports and added progress event handling in GradleBuildService and Main classes to improve task and configuration progress tracking in the tooling framework
removed synchronization block from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization overhead
[ hotfix ] remove unnecessary initializationfailfast check from hikariconfig
removed the unused parameter ` timeOut ` from the ` getResult ` method and added a new method ` error ` in ` Net . java ` to
changed the ` isNative ` field from a boolean to a transient boolean and updated the method call to use a default value of ` false ` instead
updated error message format in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ruleenablehandler to ruleenablementactionhandler to avoid confusion
refactor parent and values in TagSupport . java for consistency to improve code readability and maintainability
updated logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity and debugging during authentication processes
replaced instances of ` getBasicSourceOptions ( ) ` with ` getBasicSinkOptions ( ) ` and ` getModifiedOptions ( ) ` in
added null check for the repository owner in UsersPanel . java to improve robustness by handling potential null values gracefully
added support for . otf and . OTF file extensions in SunFontManager to support additional font file formats
refactor annotationmatcher to use argtype instead of matchtext . endsWith ( )
updated error message from " OFF " to " SEVERE " in Grep . java to improve user experience by providing a more informative error message
added a check for debug level before logging debug messages in FaultTolerantChunkProcessor . java to improve logging efficiency by avoiding unnecessary string concatenation
[ hotfix ] fix npe in SurefirePlugin when plugin name be not specify
added methods to handle the move to the default screen on home intent in the Launcher class to improve user experience by ensuring the home screen is correctly
updated maximum bitrate from 110 to 30 in PMS configuration to improve bandwidth management for better user experience
simplified the iteration over options in CommandLineParser . java to improve code readability and maintainability
trim whitespace from the return statement in MutableDatabaseProperty . java to ensure consistent formatting of the returned description
updated filename concatenation syntax in XOMParserTest . java to ensure correct file path handling for output files
[ hotfix ] [ log ] remove pid from log message
added getter methods for loaded music and sound in MusicLoader and SoundLoader classes to improve encapsulation and provide access to loaded music data
removed unnecessary imports and updated type declaration in OnBeanCondition . java to streamline code and improve readability
added ScreenRecordRule imports and annotations to RequestPinItemTest . java to enable screen recording for debugging purposes
added a check to set the selected state of the lrPauseButton in CPUFeature . java and MemoryFeature . java to ensure the pause button is
replaced ` PreferenceMultiline ` with ` PreferenceCategory ` and refactored account preference handling methods to simplify preference management and improve code readability
do n ' t send ` ` available ' ' presence if it ' s already send .
updated StringBuilder initialization to use a defined initial capacity based on utflen to ensure that StringBuilder is only created when utflen is less than or equal to
set spring . metrics . export . statsd . enabled = false to disable statsd export by default
rename InterruptedException class to improve clarity to enhance code readability and maintainability
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the codebase
refactored SSL connection handling to use a boolean variable for success and failure checks to improve code readability and maintainability by reducing duplication
fix argument array conversion for map of type ` ` foo = bar ' '
[ ds - 4078 ] fix test failure for xmlworkflowfactorytest and itemowningcollectionupdatetest
updated PasscodeManager to use Intent . FLAG _ ACTIVITY _ REORDER _ TO _ FRONT instead of sExemptOfPasscode
refactor : remove deprecate patternparameterconfigurer in favor of template
modified the ` beginDraggingWidget ` method to return a boolean indicating success to ensure that the widget is only dragged when the image is not null
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable the test due to LUCENE - 4488 issue
added null check for the root variable in DynamicStyle . java to prevent potential NullPointerExceptions when root is null
add an option to write the confusion matrix to the . confusion file
fix last sample ok variable name and fix error handling
added unit tests for Bluetooth headset functionality in ShadowBluetoothHeadsetTest . java to ensure correct behavior of device state management and connection state
corrected the spelling of " # autowired " to " # autowired " in PropertyBindingSupportTest . java and PropertyBinding
updated the ` objectMethods ` set to include " clone " and " finalize " methods and added a new constant ` FINALIZE _ METHOD `
added null checks and logging for counters in IntegrationTestBigLinkedList . java to improve error handling and provide clearer feedback on insufficient YARN configuration
[ jdwp ] add support for objectreference . referringobjects ( ) in jdwp
updated the service filter logic in SamlIdPServicesManagerRegisteredServiceLocator to include serviceId matching to ensure correct filtering of service instances based on the
added a null check for the activity before running the UI thread to prevent potential NullPointerException when the activity is not initialized
corrected the spelling of " LOGGER " to " logger " in multiple files to improve code readability and maintain consistency in naming conventions
added string type handling in DatabaseAdaptor and changed access modifiers in JDBCSessionDataStore from private to protected to allow external access to string types in the database
updated assertions in UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " and modified exception handling
refactor thread name handling by introducing ` updateThreadName ` method in ` SessionState ` and ` CliDriver ` to improve code readability and
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
dmn - 2200 dmn refactoring ( dmnruntime ) and dmnruntime . evaluateall ( ) - fix dmnruntime
change default value of splashprogress default to true on mac
added tooltip text for showCGCP checkbox in RocketPanel . java to improve user experience by providing context - sensitive tooltips
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
add text and description to hot reload action ( # 1196 )
[ geot - 4892 ] spreadsheet : use default template for getlabel ( ) instead of islabelsimple ( )
changed the conversion from ` intValue ( ) ` to ` doubleValue ( ) ` for BRIGHTNESS _ FACTOR ` from ` intValue ( )
[ sscm ] fix parsing of sscm history entry for branch
added isAdmin parameter to createUser method and implemented listUsers method in HomekitAuthInfoImpl . java to enhance user creation functionality by allowing admin
added checks for non - void return types in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and introduced a new test class Test67234
updated logging statements to use placeholder syntax for better readability to improve code clarity and reduce potential null pointer exceptions
updated method names in Context , Request , and Response classes for consistency and clarity to improve code readability and maintainability by standardizing method names and
added setcapabilitiesfromspongebuilder ( ) method to mixininventory # setcapabilitiesfromspongebuilder ( )
[ hotfix ] [ test ] fix test failure in lifecycleutilstest
added validation for smart contracts and improved contract creation logic in Wallet . java and GetContractServlet . java to ensure only valid contracts are created and
added package - info . java files in the com . ibm . dtfj . image , com . ibm . lang . management , and com
refactor the add method in DocumentsWriterDeleteQueue to use a loop for updating the tail node to improve performance by avoiding unnecessary synchronization
added duplicates handling to the trees list in JavadocTool . java and refactored argument passing in T7091528 . java to improve
updated the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable IPV6
refactor LoginServerTokenEndpointFilter to accept a list of user parameters and update login info handling to enhance flexibility in token processing by allowing multiple user
[ cpp ] fix parsing of cpp cpp token .
refactor ` MoreFutures ` to utilize a new ` MoreExecutors ` class instead of a separate ` ThreadPoolExecutor ` to improve code
added cache control and expiration headers in LoginService and FormAuthenticator classes to improve response handling and ensure proper caching behavior
add exception message to log when a voice can not be connect
updated HSSFTests class to replace AllHSSFUtilTests with TestAreaReference , TestCellReference , TestSheetReferences , and TestEmpty
refactor tests in FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTPTestBase to improve code organization and maintainability
added null check for the output file before retrieving classDirectory to avoid potential NullPointerExceptions when accessing the output file
added external resource control priorities for URI access in Java2DRenderer . java to ensure proper handling of access control during the rendering process
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure that JDK fails gracefully on some platforms
modified the access modifier of ` mbean ` and modified the main method in ` GetInternalThreads . java ` to improve thread management and enhance error handling
added a check for ` getComments ( ) . isEmpty ( ) ` before verifying if ` lastWhitespace ` is not empty in ` Tabs
updated assertions in TestTriggerIntegration to use maximum values greater than 100 instead of varying from 5 to 100 to improve test accuracy by adjusting collection rate
updated equality checks from ` equals ` to ` equalsIgnoreCase ` for case - insensitive comparison to ensure case - insensitive comparison for change set values
added a method to retrieve a string value from the map to improve the handling of null values in the ShadowBundle
added support for military time formatting in TweetActivity to ensure consistent date and time display across different locales
[ java ] fix processsession . getconnections ( ) to return empty list instead of null
refactor keyboard focus handling in DetailFragment by extracting focus request logic into a separate method to improve code readability and maintainability by central
updated the way the extra classpath is set by adding quotes to the canonical path to ensure proper handling of file paths that contain single quotes
fix a bug in solve ( ) and make sure matrix [ ] [ ] be thread safe
added import statement for Message class in GenericMessage . java to enable the use of Message class for better message handling
refactor SQL query construction in PostgresConnector and introduce a join method in TaskAttempt to improve code readability and maintainability by centralizing join
updated file filter handling logic in AquaFileChooserUI . java to ensure the correct file filter is selected based on user preferences
[ java ] synchronize on the wrapupsyncroot to prevent concurrentmodificationexception .
replace ` toString ( ) ` with ` booleanValue ( ) ` in ` ArrayPtg ` and add a test for the ` toFormulaString (
updated import statements in PGtokenizerTest . java to use specific assertions instead of wildcard imports to improve code readability and maintainability by reducing
refactor Java2TypeScriptTranslator to improve type handling for anonymous class types to enhance clarity and maintainability of type translation logic
added a sequence creation statement for auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s auto - increment feature
updated byte reading logic in DataInput . java to handle negative and negative byte values more effectively to improve accuracy in reading UTF - 8 encoded data
added assertions to check for " Dimension VerticalPhysicalPixelSpacing " and " Dimension HorizontalPhysicalPixelSpacing " in ImageParserTest . java to ensure
changed the method call from ` getParent ( ) ` to ` getParent ( ) ` in ` mmm Component . java ` to ensure the parent component is
reformatted import statements in multiple Java files for consistency to improve code readability and maintainability
replace ` ENGINE _ finish ( engine ) ` with ` ENGINE _ free ( engine ) ` in ` NativeCryptoTest . java ` to
added iteration functionality to the InterleaveControl , RandomController , UserParameters , and IterationListener classes , and refactored fireIterEventAs
fixed memory leak in fileupload and formdataprocessor
added a call to deleteLogs ( ) in TestRecovery . java to ensure proper cleanup of logs during recovery tests
modify URL loading logic to handle " twitter : / / " format to improve user experience by providing a direct URL view when the URL contains " twitter
[ java ] wait for host to be up before run deployment group test .
changed logResult from false to true in VisibilityController . java to enable visibility tracking for list labels
increased the maximum retry attempts from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of retries for better test reliability
remove system . out . println statement from TranslatorSupportTest . java and add @ Override annotation in StandardTypeMapperComponent . java to improve code
added support for the ' fraction ' resource type in the resource loader and associated classes to enhance the resource loading capabilities for fraction resources
removed confirmation check for file writing in BasicFrame . java to simplify the code by eliminating unnecessary complexity
updated UpgradePluginVersion to retrieve groupId and artifactId from POM instead of groupId and artifactId from the resolution result to ensure that groupId and artifactId are
hbase - 20536 throw quotaexceededexception instead of donotretryioexception when the total number of table be exceed
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class for improved readability to enhance maintainability and ease of understanding for future developers
added a check to ensure f0 is non - negative in HTSVocoder . java to ensure that f0 is non - negative
added null checks for pkColumn and fkColumn before processing them in SchemaRetriever and TableRetriever classes to improve robustness by avoiding potential NullPointerExceptions
add a getcharset ( ) method to the b2cconverter so that it can be use by a stack .
added SharedPreferences support for allowing empty screens in Workspace . java to enhance user control over empty screens in the application
added a warning log for deprecated cucumber - needle in NeedleFactory . java to inform users to use cucumber - cdi instead of cucumber - c
updated theme handling in ShadowThemeTest and ShadowArscAssetManager to utilize Resources . newTheme and implement native object registry in ShadowVMRuntime
updated failure messages to include ` Arrays . toString ( expected ) ` and ` Arrays . toString ( byteArray ) ` in VerifyFast . java to improve
no effective change - remove unused dbmigration
updated conditional checks for PROTO _ PROPERTY _ NAME and introduced new methods for getting and setting prototypes in ScriptObject to improve code clarity and maintain
replaced ` Collections . shuffle ( readers ) ` with ` Collections . shuffle ( readers , random ( ) ) ` in ` TestFilterDirectoryReader .
added conditional logic to determine the display name based on the shareWith value to ensure accurate display of user information based on the shareWith value
updated the path formatting in CookieRetrievingCookieGenerator to ensure a default value is used when the path is blank
removed unnecessary closing braces in multiple Java files to improve code readability and maintainability
[ java ] use totalbackupcount instead of getbackupcount ( ) in abstractcacheservice . getcachename ( ) .
updated page number comparison logic in ValidationResult . java to ensure correct comparison of page numbers
added a condition to check if the focused widget equals the current widget before proceeding to ensure that highlighting only occurs when the focused widget matches the current
reformatted method signatures in SoundUtil . java for improved readability to enhance code clarity and maintainability
refactor ApplePackageDescription and AbstractKnownBuildRuleTypes to use the new ` AppleCxxPlatformsProvider ` for retrieving platform flavors to
[ clickhouse ] add test case for sql query with name and type
changed method names from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to improve clarity and consistency in method naming
refactor EnglishPTBTreebankCorrector class for improved clarity to enhance maintainability and readability of the code
added a new file ` TestGetLoggerNPE . java ` to test the behavior of ` Logger . getLogger ` based on permissions to ensure that
[ jsweet 2 catch - up ] fix npe in scriptedprocessor and scripteddeciderule
use compilerdirectives . castexact instead of unsafe . getobjecttimout . getunsafefield and unsafe . getobjecttimout
updated NextValExpression to include a regex pattern for next value retrieval and modified related methods to enhance flexibility and maintainability of next value handling in SQL
improve error message when access resource bundle be not pre - cached
updated BoundedLocalCache to improve handling of pending writes and added a new test for clearing pending writes to enhance cache management and ensure pending writes exceed
added " Leverage _ Level " parameter with value " netout " in QuoineExchange and updated QuoineNewMarginOrderRequest
added binding checks for properties in PropertyDescriptor and created a new test class Test7192955 for property change listeners to ensure proper initialization and validation
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` LwjglGraphics `
added logic to set buttonsAwatingRelease to null if it is already present in the parent form to ensure proper handling of releasing buttons when the
refactor wrap width calculation to use a dedicated method for better encapsulation to improve code readability and maintainability by centralizing wrap width
updated error message formatting in XSLTErrorResources _ it . java to improve readability and consistency of error messages
replaced HashMap with LinkedHashMap for paramValues in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain insertion order for better performance
replace use of ` getName ( ) + ` with ` String . format ( ) ` in multiple text - related classes to improve performance and readability
simplified namespace retrieval in StaxXmlPullParser to improve code readability and maintainability
added support for the " NESTED _ JOINS " configuration in multiple test classes to enable the configuration of nested joins based on configuration settings
fix : root admin can not be specify by normal caller
added JavacFileManager caching and modified constructor parameters in SourceFileManager and CompletionProvider to include a cursor parameter to enhance the completion process by allowing
added Hive configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
updated import statements in KuduIOIT . java and XmlIOTest . java to use MatcherAssert . assertThat instead of Assert to streamline assertions
use util . createhandler ( ) instead of new handler ( ) in metadatarenderer
[ hotfix ] [ network ] fix offsetmemsize calculation in symbolmapreaderimpl
removed debug print statements for termFilter and otherTermFilter to clean up the code and improve readability
removed the Reflection class and its associated methods from the internal package to streamline codebase by eliminating unnecessary dependencies
added getter and setter methods for finished state and waiting state in ThreadlessExecutor to improve code readability and maintainability by encapsulating state
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter and added tests for optionalStart ( ) and optionalEnd ( ) in TestDateTimeParsing to improve
[ hotfix ] [ runtime ] rename chunk _ length option to chunk _ length _ kb
added a new case for WILDCARD in Types . java and created a new class T7034495 . java with multiple generic interfaces to
replaced ` do { } while ( key ! = null ) ` with ` while ( key ! = null ) { while ( key ! = null
fix a bug in the transclusion decide rule that cause an exception .
[ micronaut ] fix version print for micronaut .
added tests for the ` Area3DPtg ` class in ` TestBugs . java ` to ensure correct handling of ` Print _ Area
updated the return statement in MindIconFactory to include a description variable to improve the clarity of the icon ' s description for better user experience
modified the ` onHomeIntent ` method to accept an ` internalStateHandled ` parameter to enhance functionality by allowing state management during home intent callbacks
replaced direct calls to ` getPreferDependencyTree ( ) . orElse ( false ) ` with a local variable ` preferDependencyTree ` to improve
added ` showDetails ` method implementations across multiple activities and updated ` FileDisplayActivity ` and ` FolderPickerActivity ` to utilize it to
updated function names from ` $ apply ` and ` $ applyStatic ` to ` apply ` and ` apply ` across multiple files to standardize function
updated MinimalEncoder and HighLevelEncodeTestCase to adjust state sizes based on the minimum symbol size and modified test assertions accordingly to ensure consistent state
updated append append calls in SourceBuilder . java to include additional newline characters to improve readability and maintainability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter reflects the latest data changes
added a method to set the default WAL sync mode in ShadowSQLiteConnection to enhance synchronization handling in SQLite connections
updated type checking in RemoveJavaDependenciesAdapter and added assertions in Collections . java to improve type safety and ensure correct erasure of the target expression type
[ s3 ] remove unused getters from defaults3crtasyncclient
updated test cases in ParserTest . java to validate stream lengths to ensure accurate password validation for corrupted streams
fix hazelcasttestsupport error message in case of miss collection
do n ' t throw bailout in case of internalerror
ggb - 204 fix for npe in pen ( )
refactor SQLXML class to improve code organization to enhance maintainability and readability of the code
added a limit parameter to the getOrderBook method in YoBit and YoBitMarketDataService classes to allow users to specify a limit on the order
stresshierarchy : move gotwrongoomeexception to vm . share . gc
standarddataflow : set maximum string length to max value of integer . max _ value ( int )
updated the retrieval of the engines string to use a default value of an empty string to ensure that the engines string is always initialized with an empty string
corrected the spelling of " FullIterator " to " WheelIterator " in TimerWheel . java to improve code readability and maintain consistency
do n ' t crash if a bug pattern can not be find .
[ hotfix ] [ test ] increase wait chunk is ready timeout in localchunkprovidertest
changed the visibility of the menu item from true to false for the uncomplete checklists option to ensure the checklists menu item is not
refactor DefaultResultSetHandler to improve result map resolution and add a new Contract class with corresponding test cases to enhance clarity and functionality of result map handling
added null check for defaultHome and updated unregisterReceiver logic in OverviewComponentObserver . java to improve robustness by preventing potential NullPointerExceptions and
removed the import and annotation for VertxGen in PumpImpl . java to eliminate unnecessary dependency on VertxGen for code generation
removed unnecessary type casting in sendDownloadedFile calls in FileDetailFragment and OCFileListFragment to simplify code and improve readability by
[ config ] fix bug in configattributeeditor . setastext ( ) when trailing / leading space be present
refactor ClassUsingAnotherAuxiliary and SelfClassWithAuxiliary classes to improve code organization and maintainability
make singlemodulereference public and add @ targetelement ( onlywith = jdk9 ) to dynamichub
modified DatabaseMetaData to conditionally set the relKind to " TABLE " based on the presence of " pg _ " prefix to ensure correct table type
[ ci ] deprecate agent _ enterprise _ plus _ value in favor of agent _ enterprise _ plus _ value .
updated the RQST _ FIELD _ DESC value from ( short ) - 1 to ( short ) 1 in ThriftHiveMetastore .
added a new module - info . java file to define module exports and dependencies for the core module to define module exports and improve modularity and
added logic to manage flush state and interest state handling in SslConnection . java to improve connection management and ensure appropriate flushing behavior
updated Log4j2LogDelegateFactory to implement Log4j2LogDelegateFactory and added a new LoggerFactory test class to enhance logging functionality and
updated ExecutionEnvironment and Test7029048 to handle server VM dependency more effectively to improve compatibility with Solaris and ensure tests depend on server VM
refactor ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability across MongoDB operations
added " org . postgresql . ssl . LibPQFactory " to the list of supported PQ factories to ensure compatibility with Postgre
disable interprocess semaphore test until we can fix it
added sorting functionality to the theme keys in EditableResources . java to ensure consistent ordering of resource files based on case insensitivity
added a new file ` OSvTerminal . java ` and updated ` TerminalFactory . java ` to handle OSV terminal flavor management to enable proper
added support for additional file extensions in the ClassType class to ensure compatibility with multiple file extensions
replaced HashMap with TreeMap for combinedVectors and modified test method calls to use TreeMap to ensure consistent ordering and improve test reliability
added a check for the size of ` values ` in the loop condition to ensure that the loop does not exceed the size of ` names ` and
refactor WebSocketPolicy implementation to improve code readability and maintainability
changed access modifiers of ` readPhoneStatePermissionGranted ` and ` setAccessWifiStatePermissionGranted ` from static to instance in ` ShadowWifiManager
standardmessageresolver : add ` ` performtemplatebasedresolution ' ' and ` ` performdefaultbasedresolution ' ' flag to the resolvemessage method
updated the instantiation of MethodVisitor to use subclasses of Class < ? extends ClassVisitor > instead of Class < ? extends ClassVisitor > to improve type
added LoggingAuditService to handle user authentication and logging to improve auditing capabilities for users
[ tado ] add temperature range check to airconditioningzonesettingsbuilder
fix : do n ' t generate bean definition for abstract class
camel - 14263 : added support for proxy host and port in http endpoint . thanks to sergey shelukhin for the patch
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.1 " to ensure compatibility with the latest encoding standards
added a call to jdkSerialFilter ( ) in System . java to enable serial filtering functionality in the system
camel - 14265 : camel - core - log the pool size of the extendedcamelcontext to help debug the issue
removed the parameter from the forceFinishScroller method across multiple animation classes to simplify the method signature for better readability and maintainability
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to include ` rawRealtimeTableConfig ` using ` ConfigUtils ` to
added error and success methods to ValidationReport and updated status handling in DisallowValidator , RefValidator , and TestValidator classes to improve error reporting and
refactor inline QSB handling in InvariantDeviceProfile to use the closestProfile ' s inlineQsb variable to improve code clarity and maintain
updated the ` createClassPath ` method signature and added exception handling for URL decoding to improve error handling and ensure proper URL decoding for better compatibility
updated the regex pattern in the Given annotation from " 10 " to " ( . * ) " in TransformSteps . java to allow for more flexible
fix a nullpointerexception cause by a nullpointerexception when set the retina property
[ hotfix ] [ test ] use a configurable timeout in faulttolerancetest
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to ensure the correct URL is used for docker operations
[ hotfix ] [ test ] use system . gc ( ) in knowledgeagenttest
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replace createhardlink ( ) with copyfile ( ) and add logfile ( ) method to snapshottaker
renamed methods ` appendToDescription ( ) ` to ` getDescription ( ) ` across multiple files to improve clarity and consistency in method naming
[ djl ] fix lsTM and mxndmanager . checkdevices ( ) .
fix auto - detection for xml . document
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` and added JUnit 4 tests in ` NotesHelperTest ` , ` ReminderHelper
added GasLimitRule and ParentGasLimitRule to the list of rules in CommonConfig . java to support additional gas and gas limits in the
refactor setupData ( ) method visibility from public to private in BaseAssRunnerTest . java to enhance encapsulation and restrict access
renamed the ` autocommit ` variable to ` runInTransaction ` in ` ChangeSet . java ` and updated related logic accordingly to improve clarity and
refactor TripleServerStream . java to improve readability and ensure proper closing of streams to enhance code clarity and prevent potential null pointer exceptions
[ hotfix ] [ core ] update restart strategy doc to include site . url
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to address issue
refactor Common class to improve code structure to enhance maintainability and readability of the code
refactor Launchable . java to use a context layer for launching apps to improve code clarity and ensure proper resource management during app launch
[ hotfix ] [ stream ] fix typo in streamexecdeduplicate
[ hotfix ] [ kafka ] add warn log when send kafka message to topic
added PersistentPropertyAccessor and PersistentPropertyAccessorFactory methods to SimpleElasticsearchPersistentEntity and implemented isImmutable method in SimpleElasticsearchPersistentProperty to enhance property management
make sure we do n ' t call setundefined ( ) when setcoord ( ) return false
added swipe gesture logging for scroll gestures in AskGestureEventsListener . java to improve debugging and tracking of swipe events in the user interface
mondrian : fix stackoverflowerror in ngramestimator . compareto ( object , object ... )
updated the import statements for ScenarioScoped from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` in multiple Java files to
updated parameters in StatsLogCompatManager to retrieve folder icon properties to ensure accurate representation of folder icon states for better debugging
updated method call from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to improve clarity
added a new file ` TestSkeletonPredicates . java ` to implement a test for skeleton predicates to ensure correct behavior of skeleton predicates during
refactor SelectionHighlighter to improve handling of TransferHandler and enhance equality and hashCode methods to enhance code clarity and maintainability by centralizing handler management
added a new class ` StringResultConverter ` that implements ` FromNativeConverter < String , Pointer > ` for converting native values to string values to
camel - 19751 : use @ disabled instead of @ ifsystemproperty ( ) for camel - account - producer and camel - market - data -
updated the condition from ` WaitForSingleObject ( console , 100 ) ! = 0 ` to ` WaitForSingleObject ( console , 100 ) = =
added buffer limit and capacity adjustments to the setInBuffer method in BufferUtils . java to ensure proper resource management and prevent potential memory leaks
updated the expected value of the dataDir property from " data / " to " data " File . separator " in TestSolrDiscoveryProperties . java
updated platform detection logic in AutoUpdaterServerProperties . java to support both Windows and Mac OS versions to ensure compatibility with pre - 10.15 for
updated the Lock class to use a String instead of a File object for the lock file to improve flexibility in specifying the lock file ' s purpose
replace appIcon with allApps in the waitForLauncherObject method to improve UI responsiveness by focusing on the top position of all apps
updated references from Invocable . InvocationType to ClientDatagramEndPoint . this for consistency and clarity to improve code readability and maintainability by
updated the SQL query in the GET _ STEP _ EXECUTIONS string from " oreder " to " order by " to
updated button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and adjusted event button assignment accordingly to improve
added tests for approving and rejecting claimed tasks in TaskRestRepositoriesIT . java to ensure that claimsTask submits and rejects are validated as
replaced ` logger ` with ` LOGGER ` in ` OpenIdServiceResponseBuilder ` , ` GoogleAccountsServiceResponseBuilder ` , and ` GoogleAccounts
modified the access modifiers of methods and tests in SsoAccessTokenProvider and SsoAccessTokenProviderTest to enhance encapsulation and improve test coverage
do n ' t run test on macos by default
added new methods to GreetResourceMockedTest and OciMetricsCdiExtensionTest , and updated OciMetricsCdiExtensionTest to
reformatted conditional checks for defaultCloseOperation in JFrame . java to improve code readability and maintainability
refactor MediaDatabase connection handling in LibraryScanner to check for null connection before executing the ANALYZE SAMPLE _ SIZE 0 analyzer to
updated metrics initialization in SuggestComponent to use solrMetricsContext directly to improve clarity and consistency in metrics handling
refactor file list output logic in OCFileListFragment . java to improve clarity and structure to enhance readability and maintainability of the code
change return type of keypairprovider . loadkeys ( ) from array to iterable < keypair >
[ hotfix ] [ javadoc ] fix typo in sourceversion
added a new test class ` ThreadFactoryTest ` for testing the ` MyThreadFactory ` functionality to ensure that the ` MyThreadFactory ` functionality
refactor lock period retrieval in DelegateResourceActuator to use a dedicated method to improve code readability and maintainability by centralizing lock period
added a new instance of TicketModel in EditTicketPage . java to enhance ticket management functionality in the application
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss apps in the predicted list
updated constructors in multiple assertion classes to include a selfType parameter to ensure correct instantiation of assertion classes based on their type
added a new menu item for quote functionality in TweetActivity to enhance user experience by allowing easy access to quote information
bug 60497 - jmeterthread . interrupt ( ) do n ' t need interruptlock . lock ( )
rename codecpassthrough to decryptonlycodecformat for direct playback
added a conditional check for the result before accepting failure in ServerHTTP2StreamEndPoint . java to ensure that failure handling occurs only when the result is
updated German and French error messages in XSLTErrorResources to correct the spelling of " Stiller " and " Silent - Modus " to
added @ ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during concurrent operations
updated MockRestAdapter , RestAdapter , MockRestAdapterTest , and RestAdapter to use Subscriber instead of Observer to improve subscriber handling and ensure
reformatted code for better readability in ComponentPresetManager . java to improve code clarity and maintainability
added a new configuration property ` HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES ` in ` HiveConf ` and updated
remove the ' firsttime ' flag since it ' s not need anymore .
added a check to throw an exception if the session is invalid to ensure that an exception is thrown when the session is not valid
hhh - 13636 remove exceptionhelper . java from hibernate - testing - orm
change keypairgenerator initialization from 256 to 255 to ensure consistent key pair generation across different domains
added codec settings for Lucene41 postings format in TestBlockPostingsFormat3 . java to ensure compatibility with the latest postings format
[ hotfix ] [ log ] add debug log for empty checkpointrange header
add support for rsa / ecc / oaeppadding to support rsa / ec / oaep
[ gr - 17499 ] use mman instead of darwin _ aarch64 .
added error handling for URI resolution in DebugSourcesResolver . java to improve robustness of the source resolution process
updated conditional statements for returning transport values in AbstractTest . java to ensure correct retrieval of transport values based on the Linux platform
change the default value of ` JERSEY _ ADMIN _ IS _ PRIMARY ` from false to true and modify file handling in `
updated BufferUtils to use ` BufferUtils . newUnsafeByteBuffer ` instead of ` BufferUtils . newDisposableByteBuffer ` and added native memory management to
change the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable PIPELINE _ DOWNLOADER by default
updated SimpleDateFormat . java to use DST _ OFFSET directly and added a new test class Bug7130335 . java to ensure correct
refactor code to use a local variable instead of accessing mRollo . mState directly to improve code readability and maintainability by reducing
server : fix npe in virtualnetworkappliancemanagerimpl . getdefaulthypervisor ( )
refactor StringBuffer class implementation to improve code readability and maintainability
added rule UID assignment to RuleResource . java to ensure uniqueness of rules in the rule resource
added null check before unsubscribeing and removing service configuration listeners in RegistryProtocol . java to prevent potential NullPointerExceptions when the listener is null
added a new property PRETTY _ PRINT to JoltTransformJSON and updated the conversion logic to use it based on a context property to
[ gr - 17499 ] make the access table of truffleinstrumentblocks public to allow external access to the truffle compiler .
updated error messages from " Resource not found at location ' does not exist . " to " No resources were found at location ' " to improve clarity
refactor the transport . run ( ) method so that it can be override by subclass .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a new parameter ` effectiveClusterVersion ` and ` isUpgradeSuspended ` in the ` AmbariManagementControllerImpl ` class to enhance
added copyright year to FindsByCssSelector . java to ensure copyright year is accurate for the current year
removed the final list of fields from the writer in Resolver . java to streamline the field retrieval process by eliminating redundancy
added default key size settings for encryption and signing keys in OAuthProperties to ensure consistent key size settings for improved security
hbase - 26105 use getcolumnfamilycount ( ) instead of columnfamily . length ( ) in hbase - master
replaced AllowedResourceAliasChecker with a lambda expression for alias check to simplify alias check logic for better readability
refactor ObjectInputStream , ObjectOutputStream , Serializable , and package - info classes to improve code organization and maintainability
[ java ] add idlestrategy to cluster and add reset ( ) method to clusteredserviceagent .
[ flink - 22166 ] [ table - planner - blink ] fix chunkedwriter . writeto ( file , config )
added a new abstract class AbstractJobExecutor in the batch processing package to provide a concrete implementation of JobExecutor for managing job executions
replaced replay ( core ) with replayFuture assignment and modified break statement in RecoveryStrategy . java to improve future replay handling and ensure proper control flow
corrected the spelling of " huge " to " static " in multiple locations to improve code readability and maintain consistency in naming conventions
( chore ) camel - consul : implement getserviceids ( ) in abstractconsulclient if discovery be disabled
replaced random number generation with SecureRandom for hashSalt in catPut calls to improve security by preventing collision attacks
log stack trace when runtime compilation error occur during parsing
updated currentStart and baselineStart calculations to include aggTimeBucketMillis to ensure accurate start values for comparison purposes
added support for abstract methods in ` CallsRealMethods ` and implemented tests for abstract methods in ` CreatingMocksWithConstructorTest ` to
refactor checkPackageAccess methods to accept Class objects instead of String names to improve encapsulation and enhance security checks for class access
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and modified ` ContextPathPluginTest ` to extend ` AbstractPluginData
change contribution list to use bold font instead of de - derive font .
added REQUEST _ HAS _ TIS handling in multiple handler classes and refactored related conditional checks in LauncherInstrumentation to improve code readability and
removed try - catch block around the connectWithNewInfo method call and added Mutex . EVENT . writeAccess for thread safety to improve code read
updated the data type of ` showRulesResult ` and related methods from ` String ` to ` BuildTarget ` to improve type safety and compatibility with
added new classes for ` ArrayHelper ` , ` Asserts ` , ` Enums ` , ` NativeRegExp ` , and ` Objects `
added support for HOME and END operations in the terminal operations to enhance functionality for displaying home and end operations in the terminal
simplified the iteration over connected plots by removing synchronization to improve performance by avoiding unnecessary synchronization
refactor intent creation in Utilities . java to use Intent . createChooser for opening views to improve code readability and maintainability by consolidating
removed the public modifier from the constructor of the Roster class to restrict access to the constructor for better encapsulation
added basic constraints extension to certGen in TestUtils . java to ensure compatibility with basic constraints in certificate generation
added a new test method ` testFixedNestedTransform ` to the ` TextVisualRegressionTest ` class to handle cases where the wrong transform offsets are
replaced calls to ` field . multiValued ( ) ` with direct assignment of precisionStep in ` TrieDateField ` and ` TrieField `
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to streamline the codebase by eliminating unused components
added a new file ` ArrayLength . java ` to test the behavior of ` getField ( ) ` and ` getDeclaredFields ( ) ` for array
try to fix flaky testhzstartit . testhzstartit . testhzstartit . testhzstart
updated ApplicationSettingsService to use @ ApplicationScoped annotation and refactored the save method to use @ ApplicationScoped instead of @ Singleton to improve code
updated assertion to ensure value is greater than zero and adjusted newValue assignment accordingly to improve validation logic and ensure correct value handling
replace charArrayToString with stringOopToString for thread name field retrieval to improve compatibility with Java ' s string representation for thread names
updated the DEFAULT _ RAND _ SEED from ` System . currentTimeMillis ( ) ` to ` 42 ` in ` Lucene90Hnsw
fix for stroke ( ) and font ( ) bug in pgraphicsjava2d
refactored the logic for expanding dynamic star expressions into a separate method to improve code readability and maintainability by reducing duplication
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class for finding interested children records to enhance the functionality of
added import for Messages and set a status code warning in HTTPServer . java to enhance user feedback by displaying a warning icon for status codes
use event . getmodifiersex ( ) instead of nativeevent . getmodifiers ( ) , a suggest by valerybokov
[ amd64 ] increase count trailing zero node ' s size from 6 to 3 .
camel - as2 : fix nullpointerexception in as2 client when disposition notification be not set
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added a clearLog method and a clearLog ( ) method to ErrorConsoleController , LogMessages , and ErrorConsoleViewModel classes to enable clearing log
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the controller state
refactored Debug and DummyCaptionMap classes to improve locale handling and message sending to enhance code clarity and maintainability by standardizing locale handling and
added connection pooling functionality to ConcurrentBatchIdentifierTest , SequenceOptimizerIdentifierTest , and AbstractTest classes , and updated execution count from 10 to 50
simonstewart : add the ability to set the selenium driver for the opera driver
updated exception handling in ManageJournalsPanel to provide a user - friendly error dialog when downloading fails to improve user experience by providing a clear
added new Lifx product entries to the LifxProduct class to support additional color formats in the application
added asynchronous handling for replica creation in OverseerCollectionProcessor and updated related requests in CollectionsHandler and CollectionsAPIAsyncDistributedZkTest to improve
refactor ` PostgresDatabase ` and ` PostgresDatabaseTest ` to use ` assertPrimaryKeyName ` method for consistency to improve code readability
updated LogPage , SummaryPage , and LogPanel to use getRepositoryModel ( ) . HEAD instead of null for objectId to ensure correct
fixed an issue where the parent tail of a bone would not be add to the bone ' s position .
added a new method ` browserDestroy ` and reformatted the ` destroy ` method in ` AndroidImplementation . java ` to improve code readability and
added a waitForActiveCollection call to readApiTestViolations in AutoScalingHandlerTest . java to ensure proper validation of API test violations in the
refactor ScreenTerminal and Tmux classes to improve handling of terminal indices and foreground attributes to enhance code readability and maintainability by consolidating
updated SoftResetAction . java to use ControllerState instead of backend . isIdle ( ) and backend . isPaused ( ) for state checks to
disable on - disc texture pack cache to speed up texture pack reload
added a conditional check for the parentFolder assignment in Request . java and RequestV2 . java to ensure proper retrieval of the DLNA resource
fix typo in networkofferingvo . getpersistent ( ) return value
replace the deleteOnExit ( ) method with a custom close ( ) method for FileOutputStream to ensure proper resource management and prevent memory leaks
added error handling for 403 response in StandardGitHubRepository . java to improve robustness by catching specific exceptions during HTTP requests
added getoriginal ( ) method to messagefactory2adapter and updated test to use it
added @ SuppressWarnings ( " BanSerializableRead " ) annotations in DataSizeTest , DurationTest , SizeTest , and SizeTest classes to suppress
updated regex from " ( 0 - 9 ) { 1 , 2 } " to " ( 0 - 9 { 1 , 3 } ) " to
added initial and dismiss delay settings for tooltips in ExtractionModelFrame . java to improve user experience by providing quick feedback during tooltip interactions
refactor the handling of passed targets in ProjectCommand to use a unified set of passedInTargetsSet to improve code readability and maintainability by
updated timezone handling in TimeTest . java to ensure correct representation of timezone in tests
refactor MediaSessionConnector class to improve code organization to enhance maintainability and readability of the code
use http11nioprocessor . getsslsupport from the endpoint ' s handler instead of create a new jssefactory
updated the accuracy display string in GpsLoggingService . java to ensure accurate location accuracy display based on user preferences
added support for future futures enabled in BinanceExchange and removed client order ID handling in BinanceAccountService to streamline future account handling and improve
updated AdminAccountManagementHelper and AdminAccountManagementServlet to use new data structures for managing instructor courses and courses to improve code clarity and maintainability by
added connector . setAcceptQueueSize ( maxWorkerThreads ) to ThriftHttpCLIService . java to increase the accept queue size for better performance
refactor property retrieval in PathWatcherService to use a static final string to improve code readability and maintainability by centralizing property retrieval logic
added ssl scheme check in jmsfactory . isenabled ( ) to handle ssl connection .
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindowFunctions . java
gcinspector : do n ' t assert that duration be zero for a really fast collection
fix nodewithcompilation on method with linecomment
replaced usage of Unsafe with a method for reading reserved memory on macOS to simplify memory management and improve compatibility with macOS
added calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of region
hbase - 13232 hbaseadmin . getprocid ( ) should return the full table description ( sergey shelukhin )
camel - 14265 : camel - cxf - allow to configure the service class for the WSDL service .
updated YamlChangeLogSerializer to include a container map and modified the serialization process to improve the structure and readability of the YAML change log output
updated print statements in SchemaPrinter to include newline characters to improve output formatting for better readability
removed road regening logic and updated message handling in DebugRoadRegen . java and SchematicHandler . java to streamline road regeneration
replaced ` getContext ( ) ` with ` getActivity ( ) ` for ` nowPlaying ` and ` footer ` in ` HomeFragment . java ` to
updated @ GeneratedValue annotations to include a ` @ GenericGenerator ` annotation with a ` strategy = " native " name in multiple Java files to enhance
removed the country parameter from the getSystemTimeZoneID method call to simplify the method signature and improve code readability
added position and remaining parameters to the write method in BZip2Codec . java and modified ByteBuffer allocation in TestBZip2Codec . java to
appwapplet : move startlogger ( articleelement ) from appwapplet to appwapplet
added a new constant VALUE _ TYPE _ EMPTY in Type . java and modified the create method in Value . java to handle the case when the type
change string comparisons from ` = = ` to ` . equals ( group ) ` in ` GroupManager . java ` to improve readability and
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code organization to enhance maintainability and readability of the code
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetGraph ` to enhance the functionality of ` Target
fix typo in nodecmd . getmaxrowsize ( ) method name
fix json deserialization of modmetadata . modmetadata . parentmod , modmetadata . autogenerated
added logic to handle current and previous elements in NativeArray based on their presence to ensure proper management of elements based on their presence and previous state
updated file handling in FileUploader . java to use parent file IDs directly to improve clarity and maintainability of file management logic
added a new file ` UTF8ReaderBug . java ` that tests XML parsing for supplementary characters to ensure correct handling of supplementary characters in
added unit test base on user forum issue
updated subscription depth from " @ depth " to " @ depth20 " in BinanceIntegration , BinanceUsIntegration , and BinanceU
added resetAllocation ( ) method to Wrapper class and updated initial and max allocations in SimpleParallelizer to improve memory management by resetting allocation variables
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
refactored property handling in mmm Agent . java and added a new test class AgentCMETest . java to ensure thread safety when accessing
refactor ModelUtils to improve code readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the codebase
updated width and height calculations in Legend . java to ensure proper alignment of the legend based on the index of the labels array
added methods ` testDelay ( ) ` and ` testAbort ( ) ` in ` CodeFirstSpringmvcIntf ` and ` TestResponse
replaced direct access to ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` in ` MoreLikeThis . java
replaced CxxLink with BuildTargetSourcePath in Omnibus . java to simplify the code by directly using BuildTargetSourcePath
fix : disable versioning command if versioning be disabled
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` field in ` MediaFolder ` ,
added " - b " argument to the arguments in AidlStep . java and modified the format string in GenAidlTest . java to
fix # 79 : delete result set from comparison ( # 79 )
updated TODO comment in FakeHttpLayer . java to improve code clarity and maintainability
[ hotfix ] [ runtime ] remove errorhandler . errorhandle ( cause ) call from embeddedleaderservice
refactor the instance reduction logic in CompositeDiscoveryClient to use Array . fromArray instead of Flowable . toList ( ) to improve performance and
replaced calls to ` applySystemConfiguration ` with ` applyQualifiers ` in multiple files to streamline configuration handling and improve code clarity
[ hotfix ] [ doc ] improve description of jobmanager . restartsfromtaskfailure
replace ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` and improve visibility handling for the RecyclerView to enhance user experience by providing clearer
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49497
refactor ` AuditAliasCommandIntegrationTest ` to initialize ` workspace ` before each test to ensure proper initialization of ` ProjectWorkspace ` before test execution
removed logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and improve performance by eliminating unnecessary
camel - 14265 : camel - cxf : disable test that do n ' t pass in the parent class
added a try - catch block around the update ( ) method call to handle potential exceptions during periodical refresh
updated ` ChainingAuditPrincipalIdProvider ` to use ` @ RequiredArgsConstructor ` and modified provider handling in ` CasCoreAuditConfiguration `
fix for bug # 49348 - cell style should not use custom color for transparent color .
updated ZonedDateTimeFormatterBenchmark . java for improved formatting to enhance performance and maintainability of the benchmarking process
refactor DistributedUpdateProcessor to improve update buffering logic and add a new test class for update processing to enhance code readability and ensure correct
added a condition to check if the rocket ' s stage is not null before proceeding with motor validation to ensure proper handling of the rocket ' s
add ` ` toreplaceid ' ' parameter to ` ` / editreplace ' ' command .
[ hotfix ] [ doc ] fix typo in extendedmastersecretextension
changed the processor variable declaration to be final in AndroidInput . java to ensure the processor cannot be reassigned after initialization
added a listener call to notify listeners when a write fails to ensure proper handling of end - of - stream scenarios during writing
added " CUBE " to the MySQLDatabase class to support compatibility with MySQL databases
[ hotfix ] [ test ] catch exception in testreplicationhandler . testreplicationhandler
rename ` ExperimentalRobolectricTestRunner ` and related classes to ` MultiApiRobolectricTestRunner ` and ` TestRunnerForApiVersion `
replaced reflection - based access to ` getField ` with direct method calls for ` httpClient . connectTimeoutMillis ( ) ` and ` httpClient . hostnameVerifier
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the ' os ' variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 224 fix for wrong width when draw text in av
modified the ` jailerMain ` method to include a ` fromCli ` parameter and modified the exception message to conditionally include a progress listener to
refactor HttpRequest class to improve code structure to enhance maintainability and readability of the code
added a method to update the pull unread status in SharedPreferences to ensure that the notification is marked as read from the shared preferences
added a conditional check for object kind before checking for replaceFirstInput in IsNullNode . java to ensure correct handling of object types in the code
updated memory steps and memory calculations in Box2DTest , modified camera initialization in Pong , Pong , and Pong classes to improve memory
refactor layout manager initialization and padding handling in ViewPostDetailFragment . java to improve code readability and maintainability by reducing redundancy
changed log level from trace to warn for background operation aborted exception to improve log clarity and reduce log verbosity
do n ' t generate interface method if it ' s not abstract .
ggb - 118 : make sure textfield be focus on ie 10 +
added ` deviceId ` parameter to ` getNotificationUsers ` method and modified ` CacheManager ` to filter users based on their device IDs to
updated the base URL in CGIARProvider from " http : / / droppr . org / srtm / v4 . 5 _
updated MotifFileChooserUI to remove property change listeners and added a new test class bug6520101 to improve UI responsiveness and
make doget ( ) return boolean instead of void to prevent infinite loop .
refactor ` getRuleOptional ` methods to return ` Optional < BuildRule > ` with type casting and exception handling to improve type safety and
hide transport spinner based on shortcut status in HostListActivity to improve user experience by hiding the transport spinner when shortcut is active
added null check for attributes _ field in Attr . java and created two new classes T7073477A . java and T70734
updated backPressed ( ) method to return a boolean indicating success or failure in multiple activities to improve user experience by preventing unintended behavior when the back button
added support for long view indexing in QueryServices and QueryServicesOptions to enable or disable long view indexing based on configuration settings
updated string appending syntax in SDRTrunk . java to improve code readability and maintain consistency in formatting
updated the method to clean the path of the private key path in PrivateKeyParserTests to ensure a clean path is used for testing purposes
removed the unused ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the current Lucene version in
hbase - 25836 disable column family check when import tsv ( sergey shelukhin )
[ java ] rename channel to subscriptionid so archive can be reuse .
use ` ` onClickvoicebutton ' ' and ` ` startapplicationdetailsactivity ' ' instead of ` ` startActivity ' ' , and hide the voice
added a conditional check to return early if the first element of the JSON node is " i " to prevent processing of invalid JSON nodes
refactor Procedure class to improve code structure to enhance maintainability and readability of the code
added Locale . getDefault ( ) and System . getSystemClassLoader ( ) parameters to ResourceBundle . getBundle ( ) method in Toolkit . java and Window . java
[ j2kt ] add kotlin normalization pass for array creation
faceting : fix bug in persegmentsinglevaluedfaceting when count be zero
fix potential npe in modmetadata # getauthors
added a new test class ` OSGiTest ` and modified ` mmm module - info . java ` to include ` requires static jdk . unsupported
fix controllerserviceserviceprovider . isdependentserviceenabled ( ) and controllerservicelookup . iscontrollerserviceenabling ( ) . isdependentservice
hbase - 13278 htable . setautoflush ( false ) should be setautoflushto ( false )
fix : fix compiler warning : annotation be not apply on any element in annotation
added a method ` hasUserData ( ) ` in ` SimpleFeatureImpl ` and a corresponding test in ` SimpleFeatureImplTest ` to check user
removed unnecessary exception declarations from method signatures in DDLPlanUtils and ExplainTask classes to simplify method signatures and improve code clarity
refactor RelyingPartyRegistration class implementation to improve code readability and maintainability
added a method to enable logging in the JavaCompiler class to ensure proper logging behavior for Java compilation
added a new file ` InJavaSourceSet . java ` to search for Java source sets and updated ` UsesJavaVersion . java ` to
testgdalparser : do n ' t run test - documents / WFPC2u5780205r _ c0fx .
added a static method ` createGetter ` to the ` ReflectionHelper ` class to provide a way to create getters based on object attributes
removed the conditional check for useExtStorage in DirectUpload . java to simplify the conditional logic for better readability
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated related classes to utilize it to
cloudstack - 6492 : createvolume api : make diskofferingid optional when use snapshotid
updated the content assignment in ToHtml . java and modified the assertion in BaseTestCellComment . java to ensure correct handling of non - empty cells
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to
added a new file ` Issue382 . java ` to handle specific error types in HTTP requests to ensure proper exception handling for specific error types in
replaced RuntimeException with static import of Integer . signum and simplified return statement in PositionUtils . java to improve code readability and maintainability by reducing
added a condition to hide the text field in the holder if the condition is met to improve user experience by hiding the text when not needed
fix : check for non - null field / field in class when there be no field in the class .
simonstewart : improve performance of firefoxdriverservice . getprofile ( )
add miss hook for liquidblock , fixes # 54688
http : / / issues . apache . org / jira / browse / amq - 2902 / issues / detail ? id = 480
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure consistent time zone representation for
[ java ] refactor distincterrorlog to simplify error handling .
updated systemPropertyAsBoolean calls to include annotation settings for various test groups to ensure compatibility with different test groups in the system
renamed the method ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and updated logger initialization logic to improve clarity and ensure proper initialization of
[ gr - 12499 ] deny access to reflective interface in graalcontext .
refactor BufferedImage method calls to use getRaster ( ) and setDataElements ( ) methods instead of getRGB ( ) and setRGB ( ) for better
updated the property verification to use the partition ' s SD instead of the table ' s SD to ensure accurate transactional properties are added for
added a new variable ` mLastOverlaySroll ` and refactored scroll logic in ` Workspace . java ` to improve code readability and
hhh - 14105 add new unmodifiablebatchbuilderimpl and unmodifiablebatchbuilderinitiator to allow custom batchbuilders to be use
refactor analysiserror . shouldnotreachhere ( ) to use a more descriptive error message
added a new test class MockWithStaticStateDemo and modified PartialMockingRetainsStateTest to verify that spying on a class retain
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing with brackets and
added null check for ugi before calling action . run ( ) to handle potential IOException and exceptions to improve robustness by handling potential null pointer exceptions
added error code identifying the audio buffer allocation error in OpenALMusic . java to provide clearer error reporting for better debugging
camel - 14263 : camel - core - deprecate reslovestringparameter ( ) method in favor of the new reslovestringparameter
updated precision and scale handling in RexNodeConverter . java to improve precision and scale handling for SQL types
replace direct calls to ` getVendorProperties ( ) ` and ` getDeviceProperties ( ) ` with ` Optional . ofNullable ( ) ` for
updated the expected value of the ` updateAccount ` method in ` WalletTestAccount003 . java ` to use ` Long . toString (
replaced AxialStage with RocketComponent in BasicFrame . java and refactored selection handling in DesignPanel . java to improve code clarity
added a longRunningTime parameter with getter and setter methods in Args . java to allow configuration of the long - running time in the application
updated ` PriorityAdjustment ` from ` AT _ MOST _ MEDIUM ` to ` AT _ LOW ` in ` FindRefComparison `
updated import statements and modified service loading methods in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to improve code clarity and utilize ServiceLoader
fix xsdecimalbinding to return decimal . toplainstring ( ) instead of decimal . tostring ( )
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
updated the condition to check if referenceDatabase equals referenceDatabase to ensure unique constraint validation only occurs when referenceDatabase equals comparisonDatabase
removed the ` addAndroidConstants ` method and streamlined asset path handling in ` IjProjectTemplateDataPreparer . java ` to streamline
replaced assertEquals ( 0 , s1122 . getRequests ( ) ) with await ( ) . until ( s1234 : : getRequests , Matcher
added additional parameters to ChromeTraceBuildListener to include user arguments and daemon status to enhance trace output for better debugging and monitoring
svm : fix resourcebundle . getbundle to work with java 11
updated log message from " match limit " to " match order " in HepPlanner . java to correct a typo in the log message
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata from the TheRockExchange to provide a demo for displaying exchange
changed FloatingDecimal , FormattedFloatingDecimal , and FormattedFloatingDecimal classes to strictfp access and added a test for parsing double
replaced unparseIdentifier ( columnName , conf ) with a direct columnName reference to improve code readability and maintainability
added a test for replacing a field in Java variable declarations and updated method parameters in BlockStatementTemplateGenerator to ensure proper handling of variable declarations and improve
added a check for synthetic classes in InstantiateStaticClass and implemented a test for ISC _ INSTANTIATE _ STATIC _ CLASS to
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify path retrieval
added handling for pending rescues in IkStepDefinition to improve the management of rescue conditions in the IkStepDefinition
refactored equals and hashCode methods in AbstractType , BigintType , BooleanType , DateType , TimestampType , and TimestampType classes to
added a static method to retrieve the SyncLevel from a string to improve code readability and maintainability by encapsulating the SyncLevel enum
test : fix flaky testcontrolcommandstest . testclientpause ( )
added a condition to check if the slice state is not RECOVERY before proceeding with recovery logic to ensure that the recovery process does not
removed unnecessary whitespace in the create method call to improve code readability and maintain consistency
added sdkPath field to AppleBundle and SwiftStdlibStep classes , and modified the makeProcessExecutorParams method to accept an ExecutionContext parameter to
[ hotfix ] [ runtime ] refactor transientblobcleanuptask to use a biconsumer instead of a lock
server : fix typo in comment in createstaticnat command
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion for row type in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct data type handling during sorting and
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
updated the method to use the class loader for the proxy retrieval to ensure the correct class loader is used for proxy retrieval
updated version handling to use ` isNightlyBuild ( ) ` instead of ` autoConnect ( ) ` for clarity to improve code readability
added OracleDatabase support and improved statement processing logic in LoggingExecutor and JdbcExecutor to enhance compatibility with Oracle databases and ensure correct line endings
added a new boolean constant for UNKNOWN _ VALUES _ ARE _ NSP in IsNullValueAnalysisFeatures . java to provide configuration options for handling unknown
fix flaky test : set default port to 12345
ggb - 118 fix for duration and duration in audio
added a multifactor authentication provider bypass configuration to DuoSecurityMultifactorProviderBypassConfiguration to enhance security by allowing users to bypass multifactor authentication
reformatted method calls in MaxRectsPacker . java for consistency to improve code readability and maintainability
[ hotfix ] [ k8s ] fix checkstyle violation in kmodule
add a help page to show the help page in the help screen .
added two new files , GeocodeProviderFactory . java and Constants . java , along with a new interface for managing geocode provider configurations and
removed the import of ` org . apache . lucene . analysis . util . CharArraySet ` from ` LuceneAnalyzerUtil . java ` and `
replaced ExpectedException expectations with direct exception assertion in OptionTest . java and ResourceManagerImplTest . java to streamline exception handling and improve test clarity
[ py4j ] allow memorycommand to delete object that be not in default _ jvm _ object _ id
updated conditions and variable names in SegmentsInfoRequestHandler . java and added new test cases in CollectionsAPISolrJTest . java to improve code clarity
updated the calculation of ` numPredictiveAppCols ` to use ` isPhone ( ) ` instead of ` numColumns ` to ensure accurate
added a static method ` hasScalarSubqueryInput ` in ` JoinUtils ` and refactored related logic in ` DrillJoinRelBase
add blockbuildcraft to make it possible to remove the craft item from the inventory .
updated gravity and height settings in DeviceProfile . java to use layout parameters directly from the search bar to improve layout consistency and ensure proper layout management for
replace ` run ( ) ` method with ` start ( ) ` method in ` YahooSession . java ` to ensure proper execution of the session
set ` ms ` to null in ` HiveMetaStoreClient ` and modify the conditional check in ` HiveMetaStoreClient ` to ensure proper
updated getDisplayScript method to accept a DISPLAY category parameter and added a test for bug 7079486 to ensure correct display script retrieval in the
updated references to ` BASE _ URL _ PROP ` and ` CORE _ NAME _ PROP ` in ` Replica . java ` to ensure consistency
replaced ThreadLocalRandom with a custom Random instance in StoreDirectTest . java to improve performance and readability of random number generation logic
added a check for launcher readiness before backup operations in LauncherBackupHelper . java to ensure backups are only executed when the launcher is ready to
Updated exception messages to include context in exception messages to improve debugging by providing more context in exception messages
added resilience pooled route ok unit test base on user forum issue
rename ` mBodySpace ` to ` mBarSpace ` across multiple files to improve clarity and consistency in naming conventions
refactor ShadowProcess class implementation to improve code readability and maintainability
( chore ) camel - jbang - test - filemessagehistorytest : use temporaryfolder for test
added debug logging levels for various express , quartz , and mongodb loggers in Grasscutter . java to ensure that all loggers are properly
changed the visibility of ` highlightCnstScrngRngQuery ` and related methods from instance to static in ` SpanScorer `
updated state checks in Launcher and added a getState method in Workspace to improve handling of workspace states and ensure proper state management
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
added a conditional check for cacheable before notifying the new template notification to ensure that notifications are only sent when cacheable is enabled
added new core scope constants and updated session handling in multiple files to enhance code clarity and maintainability by standardizing scope management
updated the primary key constraint in DatabaseMetaDataTest . java to ensure the database schema correctly identifies the measurement table
update pantheoncommand to use -- permissions - config - file instead of -- permissions - config - path
refactored session management logic in HttpSessionContextIntegrationFilter . java for improved clarity and maintainability to enhance code readability and ensure proper handling of
added a new file ` TestIfWithDeadRegion . java ` with a class that utilizes a ` Supplier < String > ` for obtaining
corrected the spelling of " English " to " English " in multiple files to ensure consistency in the codebase
replaced ` testConcurrentAccess ( ) ` with ` testConcurrentAccess ( ) ` and added ` HighResolutionTimer . disable ( ) ` to ensure
added a static UI setting to AppSettings and modified MainFragment to conditionally hide the toast bar based on user preferences to enhance user experience by allowing
refactor Privilege implementation to use a lambda expression for cleanup to improve code readability and ensure proper resource management
replaced ` setParameter ` with ` setParameterIfAbsent ` and introduced ` putIfAbsent ` in ` SamlRedirectLogoutHandler ` and ` WhitelistLogout
updated JOptionPane message formatting to use localized messages instead of hardcoded strings to improve localization support and maintain consistency in the user interface
tika - 279 add mimetypes for x - tika - ooxml and xpt - xlsx . xlsx
updated logging mechanisms in Runner , FeaturePathFeatureSupplier , and tests to use FixJava for improved type safety and clarity to enhance debugging capabilities
camel - 14263 : camel - eip - document - enricher - improve the output of camel - documentation - enricher
add - dcassandra . skip _ schema _ check = true to skip this check .
added debug logging for audio notification and playback device settings in DeviceConfiguration . java to improve debugging visibility and ensure proper handling of audio playback devices
[ type : refactor ] allow configuration of max frame payload size for websocket client
added support for ` ISuiteListener ` in ` CacheValidationListener ` by implementing ` ISuiteListener ` and implementing ` IInvokedMethodListener
updated the method to trim the content length before adding it to the document to ensure that the content length is only added if it is not empty
fix concurrentmodificationexception in defaultsolverjob # solveterminated ( )
[ iotdb - 4892 ] ignore pathalreadyexistexception when concurrent insert
added a method ` check ( boolean result ) ` to return a boolean value to provide a way to check if a boolean is returned
changed access modifiers from public to protected for several methods and methods in Shadow classes to enhance encapsulation and restrict access to these methods
server : do n ' t terminate the account if it ' s in reserved state ( ipaddress . state . reserved )
removed compliance check for RFC2616 and initialized _ valueString to an empty string in HttpParser . java to simplify value string assignment and improve test
refactored initialization logic in J9VMInternals . java to use a static method for thread initialization to improve code readability and maintainability
added a method to create an external storage public directory and created unit tests for its functionality to improve directory management and ensure proper functionality of external storage operations
[ jbrules - 3141 ] add test case for mvel type coercion
reformatted code for consistency and readability in LoggingConfig . java to improve code readability and maintainability
add exception message to log when construct fail
add support for ` ` tel : ' ' in number that start with ` ` tel : ' ' .
refactor visibility logic for shared file icon in FileListListAdapter to improve readability and maintainability of the code
deprecated the deprecated HiveOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java
refactor ` ExecuteStatementOperation ` and ` Operation ` classes to utilize log keys for ` SESSIONID ` and ` QUERYID `
updated method calls and imports in BTCMarketsStreamingAdapters , BTCMarketsStreamingService , and BTCMarketsWebSocketSubscription
fix flaky test by use gettypename ( ) instead of getname ( )
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to streamline error handling by eliminating unnecessary functionality
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 16265 : camel - netty - fix the issue that camel - netty - http be n ' t set the charset properly .
replace system . out . println with log . info in testnonblockingapi
added a boundary check for the ` row ` index in ` DbConnectionDialog . java ` to prevent potential index out of bounds errors
[ java ] add rule for method with the same name as an enclosing class .
added a new class ` ExtendedPlatformComponent ` and modified ` ManagementFactory ` to utilize it for managing platform mbeans and proxy instances to enhance
added double quotes to SQL string manipulation in BasicQueryTest . java to ensure proper handling of special characters in SQL queries
updated the URLs in the ` parse ` method calls to include " org / knowm / xchange / bleutrade / dto / " in
refactor TextEscapeUtils class to improve code readability to enhance maintainability and facilitate future updates
added a filter parameter to the FilteredQuery class and updated the FilteredQuery instantiation in AbstractSpatialFieldType . java to allow dynamic filtering based on
added progress message display in GpsLoggingService and post method in AutoEmailHelper to improve user feedback during email sending processes
replaced ArrayList with HashSet for storing inlinks and refactored iterator methods in Inlinks , LinkDb , and LinkDbReader classes to improve performance
added a synchronized method to stop the scan and updated the removeOlderResults method to use the current timestamp to ensure that older results are removed during
updated testFilterForPartition method to accept a boolean parameter for blocking mode to enhance flexibility in partition filtering behavior based on server mode
added a new ` Abandoned ` status to the workflow statuses in the ` TicketModel ` and ` TicketsPage ` classes
no effective change - columnaliasprefix should always be null
updated LlapRowRecordReader and LlapInputFormat to use BytesWritable instead of Text for data type to improve type safety and compatibility with BytesWritable
[ terasology ] avoid run on a 32 - bit jvm on a 64 - bit jvm .
fix a bug in the pdfcopy . copy ( ) method that do n ' t copy the b value .
added support for a new option ` DAEMON ` in the ` OptionEnum ` class and integrated it into the ` TerminalClient ` class to
added a new file ` FlushIndexTask . java ` to implement a performance benchmark task for flushing the next buffer in the index writer to facilitate
fix estimate size of memtable to account for bmt threshold
added ` SEASONS ` to the expected output conditions in MediaLibraryFolder . java to support additional scenarios in the expected output
added a new file LocalSocketAddress . java to test IPv6 address availability to ensure proper handling of IPv6 addresses in the socket context
updated grid size points in GridSizeMigrationTask . java to correct grid size coordinates to ensure correct grid sizes are utilized during migration
replaced calls to ` getClass ( ) ` with ` getName ( ) ` and ` getFields ( ) ` in ` SerializerPojo . java ` to simplify
added read - only context options and modified context initialization logic to ensure proper context handling and prevent transactions in read - only scenarios
refactor LookAndFeelCommand class to improve code organization to enhance maintainability and readability of the code
updated the calculation of lastRunEnd from ` floor ` to ` ceiling ` in ` BlockBoxing . java ` and modified the condition in `
added imports for EOFException , EofException , and EOFException to the exception matcher in GracefulStopTest . java to ensure proper exception
replaced lock - based locking with direct access to connections and listeners in NetJavaImpl . java to improve code readability and maintainability by reducing
fix typo find by codespell on fossies . org
added conditional logic to set allowAccountAssetOptimization based on CommonParameter to ensure account asset optimization settings are applied correctly based on the current configuration
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to disable garbage collection during runtime
added error handling for invalid contract protos in TransactionCapsule . java to ensure proper handling of InvalidProtocolBufferException during transaction processing
[ core ] remove exceptiontypechecking since it be n ' t use
updated resource path in HelpContent . java to use " en / " instead of hardcoded string to improve localization handling and provide clearer error
added a new file ` ProcessorInfo . java ` with methods to determine available processors and determine CPU bits to enhance CPU monitoring capabilities in the application
add - html option to printbugreporter to generate html output
make logbackloggingsystem ' s logbackxmllocation final and deprecate it
updated HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to use final fields for cluster IDs and events to improve code clarity and ensure immut
updated SleuthTagPropagationAutoConfiguration and modified test methods in SleuthTagPropagationAutoConfigurationTests to ensure the handler is created
refactor dependency type assignment logic in RustCompileUtils . java to use a switch statement to improve code readability and maintainability by consolid
updated oauth2LoginLinks method to accept queryParams as a parameter and added error handling to improve error reporting based on query parameters
hbase - 26105 fix halfstorefilereader . seekbefore ( ) to return the first key if it fail to seek before the first key
hhh - 13636 add miss @ deprecate annotation . when ( ) . isalways ( )
add a new parameterized test for layer norm computation in TestLayerOpValidation . java to enhance testing capabilities for ND4j ' s ND
replaced direct calls to ` showShareFile ` with calls to ` getFileOperationsHelper ( ) . showShareFile ( ) ` across multiple activities to
added a new file ` LiquibaseUpdateMojoExecutionTest . java ` to implement unit tests for Liquibase update execution to ensure proper functionality
convert the proxy type to uppercase to ensure consistent handling of proxy types across different environments
add mod _ minecraftforge . java to make sure we load the dungeon lootTries
refactor JdbcDatabaseSnapshot to improve caching and filtering logic based on table and column names to enhance performance and maintainability of the database snapshot ' s
added a container with a CSS border and a label to the CSSBorderTest class to enhance the visual appearance of the container in the UI
added a new ` RetryAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` classes , modified ` RetryLoadBalancerAutoConfiguration ` , modified ` RetryLoadBalancer
updated constructor parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure proper behavior of layout constraints
updated the construction of ` parentTaskName ` to use ` System . nanoTime ( ) ` instead of ` System . nanoTime ( ) ` to ensure
added error handling for parsing AddServiceRequest in ServiceResourceProvider . java to improve robustness by catching unchecked exceptions during request parsing
refactor the return logic for versioned files check in IndexDatabase . java to improve readability and maintainability of the code
[ giac ] fix arrayindexoutofboundsexception when x = = 2
refactor AnonCipherWithWantClientAuth class implementation to improve code readability and maintainability
[ hotfix ] [ producer ] deprecate unused method in producertemplate
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fix flaky test evictiontest # assertopeneventually - sleep at least 5 second
replaced the ` encodeInternal ` method with a direct reference to ` saltedPass ` in ` Md5PasswordEncoder . java ` to streamline
replaced local variable ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` in ` IconRecentsView
refactor Response class to improve code structure to enhance maintainability and readability of the code
[ flink - 20536 ] [ table - planner - blink ] use long . max _ value instead of long . min _
set the preferred size of the callparticipantpanel so that it would well reflect the current size of the call panel .
added null and empty checks for non - empty replies before processing to prevent potential NullPointerExceptions when processing replies
added custom ` toString ` and ` hashCode ` methods to ` HitbtcBalance ` class and updated test cases accordingly to improve object comparison and ensure
fix ( sql ) : fix ` ` where ' ' clause in query with timestamp ( ` ` order by ' ' )
updated return statement in RetriesExhaustedWithDetailsException . java to use addrs . toString ( ) instead of s to improve clarity and
use opencookie instead of create a context aware object for open file .
updated Apache HTTP imports from Apache HTTP to Apache HTTP5 in JsonToGrpcApplicationTests . java to utilize a newer version of HttpClient
pipepowerwood : use the maximum of requested energy instead of the requested energy when receive energy .
added a check to delete the temporary output file if it exists to ensure that the output file is properly deleted if it exists
changed the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for retrieving trades
added time limit check in ReplayProcessor and ReplaySubject classes and corresponding test cases in ReplayProcessorTest and ReplaySubjectTest to ensure
updated the expectedCitation string in CitationStyleGeneratorTest . java to ensure correct formatting of the expectedCitation string
updated MediaTableFiles . java to use static final SQL insert statements and added video hDR format setting to improve code readability and maintainability by
ggb - 132 show only definition for equation in exam ( not in exam )
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions when the component is not initialized
hbase - 26105 set meta scan caching to 100 when there be no startrow .
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes for improved consistency to enhance maintainability and readability of the codebase
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable transient taskbar functionality in the feature
refactor accessexecution , archivedexecution , and archivedexecutionvertex classes to improve code readability and maintainability
added a conditional to set density based on scale to 3 in IOSGraphics . java to ensure density is set to 3 when scaling equals 3
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 13236 add exception to log message when regionstatestore . getstate ( ) return null
[ hotfix ] [ test ] fix flaky testclusterupgradeutils # testmemberstoupgrade
updated warning message in AsyncHttpConnection and refactored test class names in AsyncContextTest to improve clarity of warning messages and enhance test structure to
added a boolean parameter ` showArrow ` to the method in ` SearchUiManager ` to control the visibility of arrows in the search functionality
added lock mode handling for MVStore in Database . java and removed the testSetMode method from TestRowLocks . java to ensure proper
skipBigEndiantest for linux / amd64 only test .
refactor input value retrieval to handle both String and Integer types to improve type safety and clarity in handling input types
updated primary key validation logic in CreateTableStatement . java to ensure that only one primary key is required to prevent invalid requests when multiple primary keys are
added conditional checks for LMP ( ) in CellLayout , Hotseat , Launcher , and WidgetButton classes to ensure appropriate drawable resources are applied
fix npe in vmservicemanager when no isolate to query for flutter view .
added new header - based methods for content type options , xssProtection , and frame options in HeadersConfigurer . java to enhance header configuration capabilities
refactor ObjectEnumerableAssert class implementation to improve code readability and maintainability
[ grid ] move selenium - cdp test to distributed cdp module
[ hotfix ] [ test ] add type attribute to @ aggregateroot annotation
added support for handling prebuilt libraries in Python binary descriptions to enhance compatibility with prebuilt libraries in Python execution
added client authentication handling in NetServerOptionsConverter and refactored related methods in HttpServerOptions to improve flexibility and maintainability of client authentication configurations
updated REPLDIR and REPLCMDIR configurations to use " / user / hive / $ { system : user . name } / repl
refactor task view removal logic to use primary and secondary task views to improve code readability and maintainability by reducing redundancy
add timeouts to the AmqpTransformerTest class to allow more time for the test to complete
removed the clearAll ( ) method from DataTableTopComponent . java to streamline code by eliminating unnecessary method calls
[ java ] rename controller variable to flowcontroller in decreasecontextlevelprocessable and simplemodelprocessable
[ flink - 24105 ] [ runtime ] fix the issue of set exchangesumnum in operatortreegenerator
added use of ClassLoaderHandler in module - info . java to enhance class loading capabilities in the application
do n ' t try to solve the best solution if it ' s not in event thread
added JsonIgnore annotation to ApplicationSettings . java to exclude sensitive fields from JSON serialization
changed the condition from checking if throwable is null to checking if it is not null to ensure that throwable is not null before proceeding
refactor query info retrieval to use a local variable for clarity to improve code readability and maintainability
fix auto workbench crash when there be no gui .
fix gl200text protocol decoder ( fix # 102 )
rename timeColumnName and timeFieldSpec to incomingTimeColumnName and incomingTimeFieldSpec in AvroRecordToPinotRowGenerator . java to
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ` in ` HttpShieldTrc20Token004 . java `
ww - 4076 add initializable interface to the containerbuilder
[ micrometer ] add longtasktimer sample for active timer
changed the type of ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and updated related calculations to improve
add warn log for deprecated fragment expression in thymeleaf
changed the type of ` _ attributes ` from ` HashMap ` to ` ConcurrentHashMap < String , Object > ` to ensure thread - safe access to
http : / / issues . apache . org / jira / browse / amq - 4892 - fix regression with duplicate delivery message
added fallback color constants and refactored extractInto method to handle fallback color extraction to improve color extraction logic and ensure correct handling of dark text hints
added access check for the data folder in SketchBuilder . java to ensure srcFolderPathList is only added for accessible data folders
modified the ` appendContent ` method to accept a boolean parameter ` includeTitle ` and replaced ` TextUtils . isEmpty ( ) ` with ` StringUtils .
removed unnecessary instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the sessionRegistry initialization process
added logging for reconnection completion and failed connections in NettyStreamingService . java to improve error handling and provide clearer logging for connection failures
updated ProxyFactory from Net sf . cglib . proxy . Factory to javassist . util . proxy . Proxy across multiple test files
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve performance and compatibility with Jetty ' s concurrent
updated SocketExceptions . java and ExceptionText . java to enhance exception handling by including address information in exception messages to improve clarity of exception messages and
added a method to check if the view directory is under the repository directory to improve error handling for views under the specified repository
remove drag - and - drop functionality from tab header
added additional ` - XX : + UseCompressedOops ` and ` - XX : + UseCompressedOops ` flags to multiple Java
peersync : do n ' t log error when update log be not in active or replay state .
deleted the ConnectionHook . java file to the functionality is no longer needed in the project
removed the ` waitForReplicasInSync ` constant and its usage across multiple test classes to streamline the code by eliminating unused constants and improving maintain
camel - 14284 : camel - swagger - api - fix array - type assertion in swagger - api
updated ApexLanguageModule to use the current Apex version instead of a hardcoded " 45 " to ensure compatibility with the latest Apex
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactored AggregateEngine to use a separate thread pool for aggregate threads to improve thread management and maintainability by centralizing thread pool management
updated WebSocketAsyncConnection to accept a ByteBufferPool parameter instead of using a standard byte pool to improve memory management for WebSocket connections
added scroll position adjustments for thumbnails in UploadActivity to ensure proper scrolling behavior for better user experience
fix ( sql ) : fix bug where timestamps be overwrite by other column alias
refactor animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation classes to improve code readability and maintainability
added a conditional check to disable the default user agent in the HttpClient configuration to ensure proper user agent management during HTTP requests
added a check for pubsubhubbub in the FeedRefreshUpdater and ApplicationSettings classes to ensure that pubsubhubbub settings are only processed when
changed the access modifier of the finalize method from public to protected to allow subclasses to access and override the finalize method
updated method to check for synthetic classes instead of anonymous or local classes to ensure correct identification of anonymous or local classes in the code
dspacewebapp : make it easy to configure the rest web interface .
added null check for leftTableAlias in CalcitePlanner and implemented getTableAliasContainingColumn method in RowResolver to ensure that a semantic exception is
updated the trigger key format in JobGenerator . java to include a space to improve clarity and consistency in the identity generation process
updated logging messages in Wallet . java for improved clarity and consistency to enhance log readability and maintainability by providing more descriptive log messages
basicmaptest : remove timeout from map . put ( key , value ) call
updated the configuration of rcfileOptimizedWriterEnabled and rcfileWriterValidate in HiveClientConfig . java and TestHiveClientConfig . java to ensure
added an enum TlsClientCertPolicy and refactored related logic to utilize it to improve code readability and maintainability by centralizing
removed the asynchronous subscription handling for " alert " events in KrakenFuturesStreamingService to simplify the subscription process and improve clarity in log output
added support for Sec - WebSocket - Protocol in the ProxyWebSocketHandler and WebsocketRoutingFilter classes to enhance WebSocket handling capabilities by allowing custom headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of query result fetch requests
updated dimension formatting in HolidayEventFormatter . java to improve clarity and consistency to enhance readability and maintainability of the code
updated methods in ` FinalizePrivateFieldsTest ` and ` FinalizePrivateFields ` to use ` InnerStaticClass ` instead of ` Outer
[ hotfix ] [ runtime ] fix typo in unexpectedjobexecutionexception javadoc
removed the method ` shouldUseOpaqueButtons ( ) ` and simplified the ` buttonShouldBeOpaque ` initialization in ` AquaLookAndFeel . java `
updated DrillSidewaysQuery and DrillSidewaysScorer to use maxCost instead of maxFreq for better handling of termsEnum
added a new classRegsitry entry for GeoDegeneratePath in StandardObjects . java to support GeoDegeneratePath functionality in the application
removed the preFill parameter from constructors in multiple pool classes to simplify constructor parameters and improve code readability
updated taskbar state handling in TaskbarLauncherStateController and added system UI flags in TaskbarStashController to improve taskbar state management and
added null check before comparing default styles in CascadeDeleteVisitor . java to avoid potential NullPointerException when accessing default styles
make the marqueelabel width configurable , so that it do n ' t appear in the status tab .
refactor icon selection logic in FileTreeViewHolder . java to improve clarity and functionality to enhance user experience by providing appropriate icons for different file types
replace ` isEqualTo ` with ` contains ` for qualifier comparisons in ` ParallelUniverseTest . java ` to improve readability and consistency of assertions
added synchronization to synchronize access to the results map to ensure thread safety when accessing shared resources
[ native ] add test for probability function in nativeworker
added ShutdownThread deregistering method to ClientContainer to ensure proper resource management and prevent potential memory leaks
added a method to drop temporary tables after use in Sybase dialect to provide a mechanism for removing temporary tables after use
simonstewart : make the htmlunitwebelement . getcolor ( ) return the value instead of convert it to rgb
refactor SolrCore , XMLWriter , FunctionQParser , and QueryParsing classes to improve code organization and maintainability across the project
refactor LinksIndexingFilter class to improve code readability to enhance maintainability and facilitate future updates
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve clarity of reserved memory addresses for testing purposes
do n ' t refresh ad playback state when there be no ad group
refactor equality check in MultimapSubject to use a boolean variable for better clarity to improve code readability and maintainability
updated the Wave frequency value from deg _ text to unit _ hz in fetchPropertyValue calls to ensure the correct frequency value is fetched for the Wave
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
replaced the use of ` putAll ` with a direct assignment of ` includedLabelSets ` in the TreeMap to simplify the code and improve readability
[ fix ] add normal element to the vertex format in the lighter .
added span visibility tags to various interceptor classes for better tracing management to ensure accurate span visibility during message sending and receiving processes
replaced ` ZoneId . of ` with ` toZoneId ( ) ` in ` ScheduledTrigger . java ` and updated test cases in ` Scheduled
added AsyncBucket and InMemoryExtension classes , and modified Bucket and ConfigurationBuilder methods to use this new InMemoryExtension class to enhance functionality and support for asynchronous
updated command - line argument handling in resexhausted003 . java to use regex pattern matching for class directory determination to improve error messaging and
removed unnecessary whitespace in AbstractConnector . java to improve code readability and maintain consistent formatting
updated OngoingStubbing . java with new method implementations to improve performance and maintainability of ongoing stubbing operations
added a new parameter ` webServerToReuse ` and modified the ` getValidWebServerPort ` method to conditionally reuse the web server based
solr - 14545 : fix testcasej4 to set defaulthttpclient in solrclient
log an error if the allowlist be clear but not empty
updated the method call from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the
dmndtanalyser : skip findgaps if the hitpolicy = cassandra . collect ( ) be set
added a new test method ` testSlidingWindowsCombine ` in ` CombineTest . java ` to verify the combined window combine functionality to ensure correct handling
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure apps are only bound
[ hotfix ] [ test ] remove unused attribute in managedfilewatcherreloadstrategytest
removed unnecessary whitespace in the Solution class to streamline the code for better readability and maintainability
refactor access control logic in AquaMenuBarUI . java to use GetBooleanAction for boolean property retrieval to improve code clarity and maintainability by
fix entity and item to not fall when set raw location .
updated the query construction in SimpleJpaRepository . java to use CriteriaQuery and apply repository method metadata to improve query accuracy and ensure correct result retrieval
added details for genesis block parameters in BlockUtil . java to enhance the block configuration options for better transaction processing
move safepointinsertionphase to loopsafepointinsertionphase so that it do n ' t generate loopsafepoints
added null and empty checks for children in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by handling potential null
changed method visibility from package - private to public in ArtifactResolver class to allow access to these classes from other packages
fix thread . stop ( ) not be call when the reactor be shut down .
added a validation check for maxBufferedDocs to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions during indexing operations
added functionality to save and restore login state in LoginActivity to improve state management during login process
added null checks for source and valueExtractor in Pump . java and implemented a test for ordering UUIDs in PumpTest . java to ensure
updated access modifiers of methods and classes from private to protected in HttpShardHandlerFactory and LBHttpSolrServer to enhance encapsulation and
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy and added
added Jetty server configuration and handler management in TestJNDI . java to improve server management and context handling in the application
updated formatting and improved operator removal logic in SortedDynPartitionOptimizer . java to enhance code readability and ensure proper validation of child operators
filestreamchannel . iseventloop ( ) now return true for non - ioeventloops
updated the calculation of ` newNumNulls ` to use ` newNumRows ` instead of ` oldNumNulls ` for better clarity to
camel - 14263 : camel - kamelet - support to export camel - kamelet from the dependency downloader
replaced OkHttpOAuthConsumer with AuthState and AuthState , and modified task handling in OSMJob . java to improve authorization checks and ensure proper
refactored multiple Java files for improved clarity and functionality to enhance readability and maintainability of the codebase
added client authentication configuration to IoTDBRestServiceConfig and updated related classes to allow configuration of client authentication settings based on configuration
removed unnecessary variable ` mocksToBeInjected ` from ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParent
refactored BloomUriUniqFilter and BloomUriUniqFilter to implement InitializingBean and updated related methods for expected inserts and hash
changed ` getCursorAdapter ( false ) ` to ` true ` in ` HomeFragment . java ` and added preference refresh functionality in ` Tweet
updated the intermediate header height ratio from 1f to . 75 f in ProfilePager . java to improve UI responsiveness by adjusting header height
updated import statements and introduced a new class ` RecompilationEvent ` for handling compilation exceptions to improve code organization and maintainability by centralizing
added support for host - level system pre - installed configuration in ExecutionCommand and related classes to enhance the management of host - level configurations for better
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a new
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46165 -
added StaticPipeline for handling entities and scores in the StaticPipeline class to enhance the pipeline functionality to support scores based on specified properties
refactor filename extraction and enhance file path handling in Frame . java , Utils . java , and WhoopsModule . java to improve code clarity and
[ geos - 8427 ] catalogrepository . getdatasetbyname ( string localName ) should return null if datastore name can not be find
refactored assertions in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new test cases for multi - line text handling to improve test
camel - 10254 : camel - core - use the same test for camel - core and camel - jms
replaced instances of ` IMeasurementSchema ` with ` MeasurementSchemas ` in multiple files to streamline the measurement handling process and improve code clarity
reformatted for - loop syntax and adjusted memory calculation calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to
updated the log4j jar file name from " slf4j - log4j12 - . jar " to " slf4j - reload
updated the assertion in HueBridgeHandlerOSGiTest to use waitForAssert instead of asserting the status detail to improve test reliability by ensuring
updated package structure for AboutActivity , CrashHandlerActivity , PreferencesActivity , TerminalActivity , IDEApplication , IDELanguageClientImpl , and
[ drools - 1276 ] ignore flaky test due to drools - 1276
added a constructor to PullRequestMergedEventsStream that reads Pinot schema from a file to enable thread - safe reading of Pinot schema files and
refactor AbstractExpressionPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ doc ] fix typo in taskslot
replace ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and related tests to improve
added error handling for lock release in MoveTask . java to ensure that locks are only released when they are already removed to prevent runtime exceptions
refactor JRubyBackend to use ResourceBundle instead of Properties for GEM _ PATH and RUBY _ VERSION to improve code clarity and maintainability
transaction . equals ( ) : use empty _ byte _ array instead of zero _ address
removed unnecessary null initialization for ClassInfo in ClassGraphClassLoader . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] fix test failure of jobmanagerstartuptest
chore : [ clouddatastream ] fix ruby namespace for eam . v1a and eam . datastream . v1a
added an extra Bundle instance and set it in the builder to enhance the functionality by allowing customizable extras
changed the loop condition from break to continue in ParticleEmitter . java to ensure the loop continues only when the particle is not null
ambari - 20519 . increase the expected number of test call in ambarimanagementcontrollerimpltest . testrestartclusterrequest
removed nullable annotation from the SERVICE column in TransientSessionTicketImpl . java and added exception handling for NoResultException in JpaTicketRegistry .
updated Bug4823811 . java to include new test cases to improve test coverage for bug 4823811
updated RmStep to use a function for path relativization of patterns to improve flexibility and maintainability of the code
do n ' t request full state if thing discovery be already complete .
refactor ShibbolethCompatiblePersistentIdGenerator to improve attribute handling and access methods to enhance code readability and maintainability by centralizing attribute
reformatted the @ Inject annotation in RequestValidationService . java to improve code readability and maintainability
added a new ` STATS _ LOGGER _ KEY ` constant and modified keyboard handling in ` UiThreadHelper . java ` to improve logging functionality
updated formatting in FileNodeProcessor , MManagerBasicTest , and MTreeTest classes , and added metadata clearing in MManager and MTreeTest
refactor NavigableMap and NavigableSet classes for improved clarity to enhance maintainability and readability of the codebase
add slurpfile ( ) test to make it easy to run testslurpfile ( )
updated visibility of methods and added @ FunctionalInterface annotations across multiple classes to enhance encapsulation and ensure method visibility for functional interfaces
refactor span retrieval logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
added support for DateWritable in ETypeConverter and Hive schema converters to enhance date handling capabilities in the data processing framework
updated the split method in StyleConverter to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve readability and maintain
ggb - 171 validate start / end value and add positive value for step
refactor column comparison logic in SemanticAnalyzer for better clarity to improve readability and maintainability of the code
updated score update logic in WANDScorer . java to improve accuracy and correctness to ensure scores are updated correctly based on the document ' s
refactor correspondence class to improve code organization to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java for improved clarity to enhance code readability and maintainability by using specific AWT classes
initialized ` curPixVal ` to a default value of ` 0xFF000000 ` and added a new test class ` WhiteTextColorTest ` to ensure
add a supertype to the biome dictionary , instead of a single subtype .
rename variable ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintainability by using a more descriptive variable
updated TaplTestsLauncher3 to use @ Stability annotation with flavors = LOCAL and PLATFORM _ POSTSUBMIT to enhance test stability handling
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure ` logFileSuffix ` is not empty before processing to avoid potential null pointer exceptions when handling log file suffixes
refactor PythonBuckConfig class to improve code organization to enhance maintainability and readability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of system shared library names in the package manager
[ meiligao ] fix meiligao protocol ( fix # 102 )
fix npe in powerdiode when tile be null
added asynchronous cache trimming functionality in PrefFragment to improve performance and user feedback during cache management
terasology : update dependency com . google . api . client : com . google . common . collect . lists to v2
replaced return statements with exceptions for HTTP 401 status codes in multiple classes to improve error handling by throwing NotAuthorizedException instead of returning 403
[ hotfix ] [ runtime ] add scheduleperiodically ( ) method that accept a scheduler parameter .
replaced refreshListOfFilesFragment ( false ) with onItemClicked ( ) method to improve code readability and maintainability by using a dedicated method
updated StreamUtil . java to handle multiple file paths and log a warning if multiple files match to improve error handling and provide clearer logging for file
refactor ` create _ table _ with _ environment _ context ` method to accept ` CreateTableRequest ` instead of ` EnvironmentContext ` to simplify
added a volatile boolean field ` aborted ` and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker `
added indentation checks to multiple block parser classes to ensure correct parsing of HTML and fenced block statements
docilealligator : add ability to set autoplay on wifi connection .
removed unnecessary check for FIN frame type in FrameGenerator . java to simplify the control frame validation logic
set the visibility of the collapse handle in the WidgetsBottomSheet to VISIBLE to ensure the collapse handle is visible for better user experience
added two new files , Issue475 . java and XSS . java , to handle HTML and JavaScript requests to ensure proper handling of special characters
added a check to return early if the unit to scroll is zero to prevent unnecessary execution when there are no units to scroll
updated the condition from checking if contract list size is greater than one to checking if it is not equal to one to ensure accurate validation of contract list
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes , along with corresponding tests in ` JsonArrayTest ` and
added hashCode method to IPPPrintService and created TestRaceCond class for testing to ensure consistent hash code comparisons for print services
no effective change - remove redundant getiversion ( ) and getzversion ( ) from db2zdialect
added platform fee check before executing isConnectEnabled method in BaseStripeManager . java to ensure that connection checks only occur when the platform fee is
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
[ java ] reset clear data first subsample when buffer encrypted .
removed the ' public ' access modifier from several classes and constructors in the codebase to enhance encapsulation by restricting access to these
added import statement for Retrofit in Part and PartMap classes to utilize Retrofit functionality in the application
refactor JSON and parameters handling in JsonBuildHelper and ParamsBuildHelper , and add API parameter handling in ParamsBuildHelper to improve code
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the AbstractFloatingView class to enhance the functionality of the taskbar
fix : update gapic - generator - java with mock service generation fix ( # 530 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on task
removed the second parameter from the createRenderScript method in AllAppsView . java to simplify the render script creation by removing unnecessary parameters
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor PluginListCellRenderer and PluginManagerActivator to use a new method for checking if a Bundle is a system bundle to improve code readability and
updated import statements and formatting in IntegrationTestSparkBulkLoad . java for consistency to improve code readability and maintainability
keychaingrouptest : use a low false positive rate instead of a hardcoded value
updated variable names and logic in Overview . java for better clarity and functionality to improve code readability and maintainability by using a more descript
server : fix findattache ( ) method to return true if the return value be null
fix nullpointerexception in defaultrecordstore when value be null
cloudstack - 4892 : throw discoveryexception instead of null when host creation fails
updated constant strings for no name and value to use constants from NAME _ ATTRIBUTE and VALUE _ ATTRIBUTE to improve readability and maintainability of
refactor constructors in BaseStubbing and ConsecutiveStubbing to accept an Object parameter instead of InvocationContainerImpl to improve flexibility and
added a method to strip method parameters from method names in LocationOpener to improve method line formatting by removing unnecessary parameters
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the latest release and ensure versioning consistency
use set instead of list to prevent concurrentmodificationexception
[ geot - 5131 ] fix typo in style options in symbolmblayer
ggb - 221 fix for popups with overlap feature .
updated error messages in ValidationSuite . java to use " - " prefix instead of " - " to improve clarity and consistency in error reporting
added a new ` StartingWindowListener ` class and modified the initialization of ` mStartingWindowListener ` in ` QuickstepTransitionManager ` to improve
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to clarify the inheritance of MBeanServerConnection from MBeanServerConnection
updated exception message from " SecurityException not thrown " to " PackageAccess SecurityException not thrown " and added handling for PackageDefinition SecurityException to improve
increase timeout in threadsafetytest to allow for more time to terminate the executor service
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check for it to ensure logging is enabled only
added @ JsonIgnore ( true ) annotations to Schema . java to allow serialization of fields in JSON format
increased test timeout from 5000 ms to 10000 ms in TestNonTxIndexBuilder . java to allow more time for the test to complete
refactor train method signatures and update likelihood and log likelihood calculations in SimpleNaiveBayesClassifier . java to improve clarity and accuracy of training calculations
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to enhance module structure and improve dependency injection for audit logging
updated mmm Prototype . java and ppp Prototype . java files to improve code organization and maintainability
added a null check for tableIsTransactional and initialized it if it is null to ensure consistent behavior when determining if a table is transactional
[ java ] : replace writefragment with onblock and onfirstwrite in replaysessiontest .
[ cea ] fix cue format when time > = 0
add miss alias to datastore . getgroupbytypeandtag ( ) to fix test .
updated the currency pairs in VaultOfSatoshiBaseService from BTC _ CAD to BTC _ USD to reflect the new
updated EntityManagerFactory handling in multiple test files to ensure proper resource management to improve resource management and prevent potential memory leaks
updated KafkaSender import from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and tests to align with the latest Kafka
added GwtBinaryIntegrationTest . java and A . java files to implement GWT binary build integration tests to ensure that GWT client builds correctly and
added visibility to ` loadingCauseLabel ` and modified mouse event handling in ` BrowserContentPane . java ` and ` SQLConsole . java ` to
refactored randomizer initialization and test cases in EnhancedRandomImpl and EnhancedRandomImplTest to improve code clarity and maintainability
refactor XMLSecurityPropertyManager usage in DTDConfiguration , NonValidatingConfiguration , and SAXParser to utilize a dedicated XMLSecurityPropertyManager to
added a new file ` InlineDefaultMethod . java ` implementing ` InterfaceWithDefaultMethod1 ` and its subclasses to implement ` InterfaceWithDefaultMethod1 `
updated SQL regex patterns in SqliteFieldPredicateView . java to use " GLOB ( " * \ " ) " instead of " LI
[ drools - 1060 ] make getdmnprofiles ( ) protect to allow subclass access to it
fixed - scriptload command should be execute on slave node instead of slot
move staticobject . setwordfieldvolatile ( ) to a static block so that it can be use by other class .
updated debug log statements to print the number of entries instead of just string representations to improve log readability and provide more detailed debugging information
fix a race condition when send a proxy packet to the client .
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and modified the thread pool initialization in WebServer to allow configuration of
replaced the handling of shortcuts to remove duplicates and added checks for empty shortcuts to improve shortcut management efficiency and prevent potential null pointer exceptions
removed unnecessary type check for String in DefaultHttpClientBinderRegistry . java to streamline code for better readability and maintainability
removed the case for ` android . R . id . home ` in ` DetailFragment . java ` to streamline the navigation process by eliminating
added a condition to check if the AndroidMarket is present before including PlayServices to ensure that PlayServices and AndroidMarket are only included when available
refactor TableBlockParser and TablesTest to improve handling of spaces after the header to ensure proper parsing and validation of pipes after the header
added support for bridging header in the NewNativeTargetProjectMutator and AbstractAppleNativeTargetBuilder classes to enhance the flexibility of native target
refactor PotentiallyDeadCode to use a Set for unused methods and improve path handling to enhance code clarity and maintainability by standardizing method
added diamond finder functionality and introduced new classes for handling diamond redundant arguments to enhance type safety and warn users about redundant diamond arguments
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` onStartSendRequest ( ) ` in multiple filter classes
removed import of Utils and added debug log statement in SolrCacheHolder . java to streamline code by eliminating unnecessary dependencies
added a catch block to handle AuthenticationException in LdapCtxFactory . java to improve error handling for authentication failures
updated the condition to check for negative values in the floating - point comparison to ensure accurate validation of floating - point comparisons
added " logback . dev . xml " to the list of logback configuration files in JoobyMojo . java and modified path handling in
added a new class JaasEventCheck to handle Jaas authentication events to improve event handling for Jaas authentication failures and success
refactor animation logic in QuickstepTransitionManager to use a list of views to animate to improve code readability and maintainability by reducing duplication
updated comparison logic in ConjunctionSolrSpellChecker and added unit tests for ConjunctionSolrSpellChecker to ensure correct comparison of StringDistance values
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve performance and
[ hotfix ] [ log ] remove unused constant in defaultleaderelectionservice
removed the public modifier from the setAuthentication method in AuthenticationException . java to restrict access to the method for better encapsulation
cloudstack - 6263 : add ready . command . wait property to allow user to configure script timeout
added JDBC _ SCHEMA parameter to the table parameters in AbstractJDBCConnectorProvider . java to ensure proper configuration of JDBC schema and table parameters
corrected the spelling of " UPDATE " to " UPDATE " in multiple files to ensure consistency in SQL syntax and improve code readability
refactor schemaTypeCache to use computeIfAbsent for concurrent access to improve performance and readability of schema type caching
refactor header addition logic in StaticServerHttpHeadersWriter to check for duplicates instead of disjoint to improve efficiency by avoiding unnecessary header additions
added JUnit @ Ignore annotation to LatticeDemo . java to mark the test as ignored due to files available only from CMU
added a call to mkdirs ( ) on the storage directory in TestCollector . java to ensure directory structure is created for testing purposes
added chunked streaming mode to the HTTP request in StarTreeJobUtils . java to improve performance by reducing request processing time
[ jsonschema ] add support for multiple and single type syntax check .
hbase - 26105 addendum fix the import of com . google . protobuf in hbase - test
added a test to ensure that recursive structure and nodes do not cause stack overflow exceptions to improve robustness of bean population and prevent stack overflow exceptions
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure proper handling of IO exceptions during method execution
added IllegalArgumentException to the exception handling in UserAccountManagerImpl and refactored client creation in ClientFactory and ConnectivityServiceImpl to improve error
updated WebSocketConnection and ExplicitDemandTest classes to improve WebSocket connection handling and enhance test coverage
added support for AspectJ in GlobalMethodSecurityBeanDefinitionParser by introducing AspectJMethodSecurityInterceptor based on the " mode " attribute to enhance
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by managing hostname verification settings more effectively
added a ` remove ` method to ` OHLCSeries ` and a corresponding test case in ` OHLCSeriesTests ` to enhance functionality
updated invocation method from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService . java
removed redundant joint removal logic in World . java to streamline code by eliminating redundancy
serverchatroomquery : do n ' t search for phone number when search for room
[ hotfix ] [ test ] make sourcereadertestbase public
removed multiple redundant null checks for documents in DocumentsStorageProvider . java to improve code readability and maintainability by reducing redundancy
added a new interface ` HookDefinition ` and its implementation in ` JavaHookDefinition ` , along with a corresponding test class ` JavaHookTest `
refactored the flushIfDeadlockRisk method into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability
updated setExoOptions method to accept a boolean parameter for allowTs to enhance flexibility in setting EXO options based on device state
remove user and role from the identifier collection in DMRDecoderState . java to clean up unused identifiers and improve code clarity
added a static Color constant INVISIBLE and refactored the toString method to use it to improve code clarity and maintainability by centralizing color management
update null handling logic in CountAggregationFunction and add a new test for total count with null handling option to ensure correct handling of null handling for function
added a new variable ` deep ` initialized to - 1 in ` InternalTransaction . java ` to reset the transaction ' s deep state to - 1
escaped the XML name in the buffer when appending to the name in StreamInitiation . java to ensure proper handling of XML characters in the buffer
updated workDir initialization to use a configuration property instead of a hardcoded value to improve flexibility by allowing users to specify a default work directory
add support for ` ` deprecated ' ' attribute to a ruleset in the rulesetfactory
amd64directcallop : use codebuffer . position ( ) instead of create a dummy label .
added static final constants MIN _ TIME and MAX _ TIME to TimeRange and updated their initialization logic to ensure consistent initialization of minStamp and maxStamp
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
[ iotdb - 4892 ] fix the issue that http : / / issues . apache . org / jira / browse / amq
updated MIME type checks in DetailFragment . java and added touch event handling in GalleryActivity . java to improve code clarity and ensure proper handling of
fix tank not be able to remove fluid from tank if not in use .
updated the handling of ` RuleAnalysisLegacyBuildRuleView ` to differentiate between ` RuleAnalysisLegacyBuildRuleView ` and ` PrebuiltDotnet
added support for iq . get ( ) and iq . get ( ) in the iqpephandler
added a null check for the runtime variable before processing intrinsicGraph to ensure that intrinsicGraph is only processed when runtime is not null
updated condition to check if ' active ' is not empty before refreshing active work in MetricTrackingWindmillServerStub and StreamingDataflow
pdfbox - 4071 : do n ' t search object key if there be no eofmarker
added constructors to LwjglApplet and modified LwjglNativesLoader to initialize LwjglAppletApplication with
( chore ) camel - docker : remove duplicate code in environmentandsystempropertyclientproviderstrategy
refactor LDAP authentication handling to apply password policies based on account state to improve clarity and functionality of password policy handling in the authentication process
refactor Int2ObjectCache class for improved performance to optimize performance and reduce memory usage
added a private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to set the resolver ' s resolve
refactor Readable class to improve readability to enhance performance and maintainability of the code
make jsoupnonvisualregressiontest use testsupport . with _ font instead of builder
updated the icon resource for the share menu item in CaptureActivity . java to improve user interface by providing a more appropriate icon
updated JVM version checks from Java 8 to Java 9 to ensure compatibility with different Java versions
added handling for NoSuchMethodError in PoolUtilities to determine if the network timeout is valid to ensure proper error reporting for non - JDBC 41 compliant
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for the filtered list in Enclosed . java to improve performance by using a more efficient data structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasView classes to ensure proper method overriding and improve code clarity
removed unnecessary whitespace in ChartProvider . java to improve code readability and maintainability
fix : set bibtex _ db extension to bibtex _ db .
modified the return statement in JavacParser . java and added a new class ExtraSemiTest . java for testing with semi - colon functionality to
added support for finder methods for users by createdAt and createdAt in the User repository to enable users to retrieve users based on their created timestamps
modified Test15FloatJNIArgs . java for improved functionality to enhance performance and maintainability of the code
updated imports and modified string formatting in the plugin . java file to enhance clarity and maintainability of version and author information
fix stringindexoutofboundsexception in mockprocesscontext . encrypt ( ) .
[ java ] ensure not reentrant call be not permitted during archive callback .
refactor dependency merging to check for null before merging to improve robustness by avoiding potential NullPointerExceptions
added timeouts to @ Test annotations in SslBytesServerTest . java to ensure tests are executed within a specified time frame
updated Peer class to improve functionality to enhance performance and maintainability of peer - related code
updated RealtimeIndexingCoordinator , StreamProvider , StreamProviderConfig , and StreamProviderConfig classes to improve clarity and functionality of realtime indexing
updated FailureWatcher to check if exportedData is not null before calling writeTo method to avoid potential NullPointerException when exporting exported data
updated popup positioning logic in RecyclerViewFastScroller . java to use scroll thumb radius instead of maximum width and height to improve popup positioning accuracy
updated tool window instantiation logic and added a method to check if the project is instantiated to improve user experience by ensuring the tool window is properly initialized
added a conditional check for Windows before creating the preventSleep checkbox in GeneralTab . java to ensure that the checkbox is only displayed on Windows devices
updated import statements from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to align with the latest Jakarta EE
updated window cropping logic to account for vertical bar layout to ensure correct window dimensions are calculated based on device profile
added fullscreen exclusive mode functionality to XWindow and its peer classes to enhance user experience by allowing access to sensitive windows in full - screen mode
fix stringutil . playeddurationstr ( ) and add unit test
added methods to handle credentials in DagUtils for MapWork and ReduceWork to improve the management of URIs for credentials in the DAG
camel - 14265 : camel - jbang - use entryset instead of keyset in camel - core
trim whitespace from the current thread name in SessionState . java to ensure consistent thread name formatting for better readability
updated the error message in GpsMainActivity from " Not yet " to " Not yet " to indicate that the description cannot be added to a
refactor Job class to improve code organization to enhance maintainability and readability of the code
added a new abstract class ` Unused ` and a test method ` testUnusedType ( ) ` in ` Main . java ` to facilitate testing
updated the key used for " hbase _ master _ host " from " hbase _ master _ host " to " hbase _ master _ hosts " and
deleted the EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused XML deserialization and serialization interfaces
updated ` performJoin ` method to return a list of ` GenericRecord ` instead of a generic record to enhance data handling by allowing multiple output records
updated the maximum delegate lock period from 0 to 10512000 and adjusted related logic to accommodate a new configuration parameter to ensure that the maximum delegate lock
nicto : use integer instead of int for network rate in nicprofile . getnetworkrate ( )
removed initialization of CmcExchange and overridden applySpecification method in CmcExchange to streamline initialization process and ensure proper initialization of exchange specifications
gossiplocalnode : use seed . node . ip . list instead of config . json
set ` ` hazelcast . client . tpc . enabled ' ' property to false if ` ` hazelcast . client . tpc . enabled ' '
upgrade swagger - ui from 2.18 . 10 - 1 to 2.18 . 2 in admin apis
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality of division operations
modified the key initialization logic in NamedObjectList . java to handle blank names gracefully to improve robustness by ensuring a default value is used when
updated method names from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple classes to improve clarity and consistency in naming conventions
refactor AsyncCache and Cache classes for improved performance to enhance cache management efficiency and maintainability
added RCFileInputFormat import and registered it in SerializationUtilities . java to enable support for RCFileInputFormat in the serialization process
added methods to retrieve Java type and category from a column in TypeMapperComponent to enhance type mapping functionality for better usability
added error handling for invalid host port parsing and improved test cases in Request . java and RequestTest . java to enhance robustness and provide clearer
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` for reflection to improve compatibility with Robolectric
standardop : remove unused method addoutgoingvalues ( ) and forEachoutgoingvalue ( )
changed variable declarations from final to private in SegmentCoreReaders . java and updated return statements in SegmentReader . java to improve encapsulation
added ` hasMainThreadProfile ` method implementations in ` AggregateDao ` , ` AggregateRepository ` , and ` TransactionCommonService ` classes to
improve error message when annotation definition in non - required rule fail .
updated NAME constants in GreekLowerCaseFilterFactory , IrishLowerCaseFilterFactory , and TurkishLowerCaseFilterFactory from " greekLowerCase " to " lower
refactor HSSFSheet and Sheet classes to improve code organization and maintainability
use discoverysearchrequestprocessor in advancedsearchservlet , opensearchservlet , simplesearchservlet , and webuiui
update datetime . datetime . parsedate ( ) to remove specific time zone id
added a parameter " TaskBarController " to the SurfaceSyncGroup instantiation to specify the name of the SurfaceSyncGroup for better context
updated GridFsTemplate and GridFsTemplateIntegrationTests to use getId ( ) directly instead of getObjectId ( ) for file deletion to
added tests for querying column indexes and total size and bytes in ShadowDownloadManager to ensure accurate retrieval of total size and bytes in the download manager
refactor the character handling logic in TextField . java to improve readability and maintainability of the code
added a check to return early if the target is equal to the current instance to prevent unnecessary processing when the current instance is the same
refactor ` afterSetStatements ` method to improve statement handling in ` BlockLexicalContext ` to enhance code readability and maintainability by reducing redundancy
added hashCode methods to IntervalXYDelegate and updated XYSeriesCollection to utilize HashUtilities to improve hash code generation for better object comparison and ensure
fix checkstyle violation in clientqueuedisruptiontest . testclientqueuedisruptiontest
updated formatting in CloudWatchAppender . java and refactored test method names in CachingAttributeFilterTests . java to improve code readability and
updated Gson serialization method from serializeSpecialDoubleValues ( ) to serializeSpecialFloatingPointValues ( ) to ensure proper serialization of floating - point values
added calls to ` waitToProduceOneBlock ` in ` HttpTestZenToken007 . java ` and ` WalletTestZen
added checks for non - empty language tags before canonicalizing them in Locale . java and updated language tag handling in LanguageTag . java to improve robust
add an option to allow kvm . ssh . to . agent to be disable by default
[ hotfix ] [ runtime ] fix checkstyle violation in schedulerwhen
replaced the import of ` PagerSlidingTabStrip ` from ` viewpager . extensions ` to ` astuetz . PagerSlidingTab
added a condition to check if the filter does not contain a hyphen in the filter string to ensure that the filter does not contain a hyphen in the
updated the text in ` sortColumnsLabel ` from " natural order " to " Natural column order " and replaced ` UISettings . s1 `
removed the use of ` Arrays . copyOf ( in , 6 ) ` from ` Utils . java ` to optimize memory usage by eliminating unnecessary array copying
updated the write method to use HTML encoding for remote addresses to ensure that remote addresses are properly formatted and not empty
updated topic check from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to correct the topic format for better
removed unnecessary synchronized block in FastHttpDateFormat . java to improve code readability and maintainability
added multi - threading support for moving files in Hive to improve resource management by allowing concurrent file operations
added two overloaded ` trigger ` methods in ` WrapTimer ` to handle a specified period parameter to enhance functionality for triggering tasks with configurable time intervals
added support for additional SQL _ DATE , LOCAL _ DATE , and LOCAL _ DATE _ TIME types in TypeStringUtils . java and corresponding tests in TypeString
[ hotfix ] [ runtime ] fix verbose error reporting in abstractstatusreporter
do n ' t toggle menu when the menu be unbundled .
s2s vpn : do n ' t allow vpn connection between account ' s vpn gateway and customer gateway
removed error handling in CursorReadingTask and added unit tests for error handling in CursorReadingTaskUnitTests to improve error management and ensure error handling is
pdfbox : log error if pdf be encrypt and can not extract text
use a single thread executor to shut down the curator watcher thread
updated AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code organization and maintainability
updated variable names and method implementations in HostsList . java for consistency to improve code readability and maintainability by standardizing variable names and
refactor Java6Assertions and Conditions classes for improved clarity to enhance maintainability and readability of the codebase
changed the return type of the replaceOrderBulk method from ` BitmexPrivateOrder ` to ` List < BitmexPrivateOrder > `
refactor enterDefault method to enterIdentNode and enterFunctionNode in FindScopeDepths . java and add enterFunctionNode method in Lower .
added a new file ` J9ConstantHelper . java ` that utilizes reflection to retrieve a long value from a class to enhance field access
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for concurrent invocations with multiple threads to ensure that concurrent modifications
add notifyrosteroffline ( ) and removeresource ( ) method to transportsession so that offline roster item can be remove .
added a method ` getOverlayedProperties ( ) ` to retrieve overlayed properties in ` MapOperator . java ` and ` PartitionDesc . java
updated method call formatting in CodeGenerator . java and FunctionObjectCreator . java to improve code readability and maintain consistent formatting
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerException when extTypeCustomDesers
removed the system property " mockserver . logLevel " from Main . java to set the mock server ' s logging level to WARN to improve debugging
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code
updated scoreMap and termScoreMap to use generics and introduced termScoreMap for better type safety to enhance code readability and maintainability by
updated conditional checks from bitwise AND to negative and added an ` eq ` method in ` U64 . java ` to simplify comparison logic and enhance
added a headline style to the MainViewModel to improve text styling for better user experience
added a boolean variable ` didSupportDarkText ` and modified the notifyChange condition to include it to ensure that the notification only occurs when the text
[ hotfix ] [ checkpoint ] remove the ontooe early logic in checkpointrequestdecider
updated the maximum parallel pool size from 2 to 8 minutes and added new configurations for keep alive time and core pool sizes to improve performance and
replaced ` . filter ( input ) . count ( ) > 0 ` with ` . anyMatch ( input - > input . matches ( input )
[ ci ] fix opencvimagefactorytest failure on window
fix for http : / / issues . apache . org / activemq / browse / amq - 4037 - add prefetch info to base
[ hotfix ] [ python ] make getreturnvalue ( ) throw throwable instead of null
added a Repeatable annotation and a Repeatable annotation to the Issue class to provide a list of issues related to issue types and methods
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and updated test
updated socket connection logic to use a fallback address if the " socksProxyHost " property is not set to improve flexibility in establishing socket addresses based on
[ hotfix ] [ runtime ] fix typo in slotstatus javadoc
added import statement for ClassUtils in ReflectionUtils . java to utilize utility functions for better compatibility with Apache Commons Lang
replaced instances of HashSet with LinkedHashSet for selected protocols , ciphers , and ciphers in SslContextFactory . java to maintain insertion order and
added a static variable ` systemResource ` and a check to return it if it exists to improve resource management and prevent potential null pointer exceptions
[ java ] optimize memory allocation in streamingaeaddecryptingchannel and streamingaeadseekabledecryptingchannel .
updated circuit breaker URI from " / anything / gatewayfallback " to " forward : / / anything / gatewayfallback " to ensure proper handling of
added SSL connection factory and modified CloseableHttpClient initialization to use SSLContexts and AllowAllHostnameVerifier to enhance security by allowing hostname verification during HTTP connections
added a size limit and removed the call to resetBytesReadCounter in PerformanceTest . java to ensure proper memory management and prevent potential memory leaks
removed the ` preferAES ` boolean field and its getter / setter methods from ` ProtectionPolicy ` and ` StandardProtectionPolicy ` to streamline the
camel - 14265 : camel - opentelemetry - use logger instead of system . out
[ hotfix ] [ test ] remove unused testloadbalancerinstanceoperations from elbintegrationtest
rename the method ` setAlarm ` to ` setRingtone ` to improve clarity by using a more descriptive method name
added error handling for file creation in DiacriticTest . java to provide clearer feedback when the locale or file system is configured in a
hhh - 13636 fix followonlockingtest failure on oracle 11
updated texture file handling and error reporting in TextureUnpacker . java to improve error handling and ensure accurate file access for image processing
added locking mechanism for service write operations in AmbariManagementControllerImpl . java to ensure thread safety during service state changes
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource files to improve code organization and maintainability
added unit tests to verify that ResultSet is not closed to ensure proper resource management and prevent potential resource leaks
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48497
added functionality to handle pre - deleted databases in the ClusterSchemaManager to improve data integrity by ensuring only pre - deleted databases are processed
do n ' t flush the chunkedwriter if it ' s already present in the pipeline
updated EnhancedBrowseFragment and FullDetailsFragment to use mBaseItem ' s getBaseItem ( ) instead of mItemId and added a delete
refactored RuleFinder and related classes to use a new RuleBank interface to improve code organization and encapsulation of rule management in CSS
add a try - catch to catch exception and throw a tlsfatalalert if an exception occur .
added two new files , TestMonomorphicObjectCall . java , and Object . java , to implement a test for monomorphic object calls
moved removeMetaDataSource method calls to toFront ( ) in DataBrowser . java and Desktop . java to ensure proper navigation to the front of the
hbase - 26265 scanquerymatcher should get timerange from columnfamily when seek to scan .
[ hotfix ] [ runtime ] remove unused field in taskmanagerservices
[ timeseries ] add alter _ logical _ view to the alter _ timeseries statement
fix condition . matchtext ( ) to match whole string and substring
added exception handling around the retrieval of routingTableBuilderKey in HelixBrokerStarter . java to improve robustness by preventing application crashes due to
refactor ` httpClientIntroductionAdvice . java ` to improve handling of ` Map < Object , Object > ` entries in ` paramMap `
[ hotfix ] [ test ] use char [ ] instead of string in camel - jms
server : fix bug in apiservlet when search for domain with child domain
removed unused equals and isUniformDistribution methods from Counters class to streamline code and improve readability by eliminating unnecessary complexity
modified the ` initialize ` method in ` BasicTumbleStepper ` to include warnings from the original ` SimulationStatus ` object to improve the
[ gr - 24158 ] fix compilation error when use system . currenttimemillis ( ) in type .
replace direct reference to ` tree ` with a variable ` var ` in ` PrettyPrinter . java ` to improve code readability and maintainability by
added null check for indexToNode [ currSize ] in LRUDictionary . java to avoid potential NullPointerExceptions during node creation
refactor socket filtering logic in DatagramSocket . java and DatagramChannelImpl . java to improve code clarity and maintainability by centralizing filtering logic
testquerydns : migrate testquerydns test to junit 5 ( # 4523 )
added a new class NutchServerInfo in the package org . apache . nutch . service . model . response to provide server - related metadata
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource for token attributes to simplify attribute handling and improve code maintainability
added timestamp support for CQL , Thrift , and SettingsColumn classes to support timestamps in SQL queries based on user settings
refactor DSAParameterGenerator to use BigInteger . ONE instead of a static final BigInteger for prime size validation to improve code readability and maintainability
updated the ` floatToIntBits ` and ` doubleToLongBits ` methods in ` NumberUtils ` , modified the ` doubleToLongBits ` method in ` Numbers `
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for various
added handling for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of constraint violations and improve error
[ hotfix ] fix checkstyle violation in remotebrokeroffsetstore
added a new method ` addTab ` and refactored the ` createTab ` and ` insertTab ` methods in ` Tabs ` to
replaced size ( ) method calls with zero - length toArray ( new Object [ 0 ] ) in multiple files to simplify code and improve performance by eliminating
[ hotfix ] [ runtime ] expose taskmanagerruntimeinfo in mockenvironment
refactor MavenVisitor logic to improve readability to enhance code clarity and maintainability
replaced instances of " MOCK _ APP _ SECRET2 " and " MOCK _ NAME2 " with " MOCK _ NAME _ UPDATE
added a new test class FormatCheckingTest to validate Java class name format errors to ensure proper error handling for illegal class names in Java processes
updated line number assignment logic in CodeGenerator . java to ensure correct line number is used for method execution
added a try - catch block around the method call in ConfigHelper . java to handle potential exceptions when retrieving configuration properties
added static factory methods for creating RadioButton instances with different parameters to improve flexibility and usability of the RadioButton class
updated LRUCache initialization to use cacheSize parameter and increased CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 to improve cache
int - 1196 , int - 1196 , int - 1196 , int - 1196 , int - 1196 , int - 1196
added null check before quoting symbolicName in OsgiManagementNameStrategy . java to avoid potential NullPointerException when symbolicName is null
add -- usemode option to papplet and use it in papplet
added error handling for adding and removing the shutdown hook in IOManager . java and improved logging in YARNSessionFIFOITCase . java to
renamed ` projectRoot ` to ` androidManifestPath ` and updated related methods in ` RobolectricTestRunner ` to improve clarity and consistency in
updated conditional logic in AbstractMessageProducingHandler and added a test for notPropagatedHeaders in AbstractReplyProducingMessageHandlerTests to ensure
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests interface implementation to RustBinaryDescription and RustLibraryDescription classes to enable testing targets in Rust binary and library descriptions
updated drawable resource references for recent image placeholders in FileMessageVH . java to improve clarity and consistency in image handling
refactor OnExitTest class for improved readability to enhance maintainability of the test code
added onuserpreferencechanged ( ) method to recreate taskbar when user preference change
updated HeapDump . java to handle IBM - specific heap dump methods to improve compatibility with IBM VMs and enhance heap dump functionality
camel - 14284 : camel - mybatis producer should close the current session if a commit fails .
simonstewart : add a method to switch to the window in the ie driver , and close the ie driver in the i
updated import statements and modified constraints in IteratorToFor . java for compatibility to ensure compatibility with Java 5 and improve code clarity
added a method to set the application state to UNAVAILABLE to ensure the application reflects the current state of the application
updated position handling in ByteBufferAs - X - Buffer and Heap - X - Buffer classes to use limit ( ) instead of remaining ( ) to
updated method call from ` toUri ( ) . toString ( ) ` to ` toString ( ) ` in ` ConditionalResolverMergeFiles . java `
updated array deletion logic and added setEmpty methods across multiple classes to improve array handling and ensure proper handling of empty elements
made enums public in VirtualAuthenticatorOptions . java to allow access to the Protocol and Transport enums from other classes
replaced instances of ` doc4 ` and ` doc5 ` with ` doc6 ` and added a new document in ` TestMultiPhraseQuery .
do n ' t allow ticket with offline payment to be assign to reservation
added a timeout thread and improved error handling in HttpChannelState . java to ensure onTimeout method is invoked only once to prevent potential deadlocks
replaced printStackTrace ( ) with a warning log statement and added debug logging for exception messages to improve logging granularity and provide more informative information
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
fix read ( ) method to use local _ quorum when consistencyforaxos = = SERIAL
added support for " Home " model in HeosDiscoveryParticipant and updated HeosPlayerHandler to include serial number property to ensure proper handling of Home
added a new ` Wait ` class and its corresponding getter and setter methods in ` PlainSelect ` , and implemented functionality in ` SelectDeParser `
added Neo4j imports and refactored property handling in node and edge data to improve code organization and maintainability by utilizing AttributeController
added a null check for the ' serverName ' variable in the SessionManager class to ensure proper validation of the ' from ' and ' serverName ' values
nifi - 10219 : deprecate rocksdb module and move rocksdbmetronome to controller module
updated the method to retrieve the " IS _ GRANTABLE " value from a results object to ensure the correct retrieval of the " IS _ 
updated the condition to check if the URL starts with " javascript : " in JavascriptContext . java to ensure proper handling of URLs that start
added a conditional check for Mac OS in CxfMtomConsumerTest . java to ensure compatibility with MacOS environments
hbase - 13257 loadtesttool should not modify a new column if it be already create
implemented the Disposable interface in the Texture class to ensure proper resource management and prevent memory leaks
updated WebappRegistrationCustomizerImpl to handle null tldBundleLocation and modified WebAppContext references to enhance robustness by preventing potential NullPointerExceptions
fix goquorum compatibility check on mainnet if -- goquorum - compatibility - mode be enable
replaced IOException with Throwable in HttpInput . java to improve error handling by using a more general Throwable type
added a check to skip the " JP " country in the locale test to address issues related to the era change in Thailand
updated ` ApiOperation ` annotations to use ` HostResponse . HostResponseWrapper ` instead of ` Wrapper . Wrapper ` across multiple services to ensure consistency
added boost equality check in FilteredQuery . java to ensure correct equality and hash code generation based on the boost value
removed unnecessary whitespace in the constructor of FileMenuFilter to improve code readability and maintain consistency
texteditadvendedpanel now use a symbol table for text edit , not a listbox
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that the CMS class unload
fix itemtossevent not fire when there be no entity .
updated ` ColumnMapKeyMappingPreparedStatementSetter ` and ` MultipleColumnJdbcKeyCollector ` to implement ` ItemPreparedStatementSetter ` instead of `
fix flaky test : use bound instead of range for sstables
added error handling for invalid ' type ' attributes in MiniAapt . java and a corresponding test case in MiniAaptTest . java
added SPEL to the OperatorEnum and implemented a new SpELJudge implementation in OperatorJudgeFactory to enhance expression manipulation capabilities in the soul
[ hotfix ] [ table - common ] fix ordinalitytype check in localexecutionplanner
bugfix # 21951 - use eventdispatcher . lookup instead of sun . misc . service . providers
refactor Conscrypt - related classes to improve code organization to enhance maintainability and readability of the codebase
updated variable types from Integer to Long for start _ offset and length in AttributeResolution9 . java and ShadowArscAssetManager9 . java to
updated the source and target options in the fullOptions from 1.5 to 6 to ensure compatibility with newer Java versions
[ calcite - 2431 ] pushprojectintotablesourcescanrule should only rewrite project column when the tablesource support metadata
updated the way localized names are retrieved in AboutActivity by using a sorted list instead of a direct access to the language look up table to improve code
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
modified the refresh delay logic in HomeFragment to conditionally refresh shared preferences based on user settings to improve user experience by allowing conditional refresh based on the
added exception cause to the MappingException in AuditConfiguration . java to improve error handling by providing more context in exception messages
[ flink - 11824 ] [ test ] increase wait time for rollback event to avoid test failure
updated generic type parameters in ` SchemaLoader ` , ` DynamicCompositeType ` , and ` CompositeTypeTest ` classes to use wildcard generics to
added transport support check in ` GitClientApplication ` and refactored ` RepositoryUrlPanel ` to utilize it to improve the handling of transport
added delegation and logging functionality for various input consumer classes to enhance debugging capabilities and provide clearer delegation names for input consumers
changeparentpom : fix npe in case of null mavenmetadata
added a check for " Large Page Support " output and updated logging parameters in TestLargePageUseForHeap . java to improve handling of large page
cloudstack - 2576 : skip event migration if usage db do n ' t exist
added IOException handling and modified file path handling in BrokerXmlConfigStartTest . java to improve error reporting and ensure correct path formatting for Windows environment
added a new test class ` TestObjectStreamClass ` and modified ` ObjectStreamClass ` to include serialization tests to ensure proper initialization and deserialization of ` Object
removed redundant checks for ` myself . getDataCenterInfo ( ) ` in ` ZoneAwareDiscoveryFilter . java ` to simplify the code and improve read
update log level from error to warn in OpenTracingTracer . java to provide clearer feedback on data capture failures
added a toString ( ) method to the Generator class to provide a formatted string representation of the number of registered generators
refactor URI handling in mmm URI . java and add multiple test cases in mmm Test . java to improve code clarity and ensure correct parsing of URI
added a null and empty check for resource existence in ClusterControllerImpl . java and created tests for resource retrieval in ClusterControllerImplTest . java to
refactor response handling in AccepttoApiUtils for improved clarity and error logging to enhance error handling and provide clearer logging for response extraction failures
added a conditional check for Android version in VertexBufferObject . java to ensure proper byte buffer allocation based on application version
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the code
[ flink - 11824 ] [ table - common ] fix hashjoininfo backward compatibility issue
added a method ` getStringDistance ` to return the ` sd ` value in ` SpellChecker . java ` to provide access to the ` sd `
added FLAG _ ONE _ SHOT , FLAG _ IMMUTABLE , and FLAG _ IMMUTABLE constants , and updated PendingIntent creation logic to
added methods to set and append read column ID strings in HiveFileFormatUtils and HiveInputFormat to improve code clarity and maintainability by centralizing the
corrected the method name from ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` in the UPNPHelper
added a temporary toast display and multiple instances of DisplayTemporaryToast ( ) in SavedExperiments . java to enhance user experience by displaying relevant
added null check and version assignment for ServiceInfo in ServiceModule . java and a corresponding test in ServiceModuleTest . java to ensure correct handling of
added a new test class ` RawSerializationTest ` for Gson serialization tests to ensure correct serialization and deserialization of different types in Gson
replaced SeleniumServer with SslCertificateGenerator in multiple classes to enhance SSL certificate generation functionality
updated loop structure in ExpansionViewHelper to use index - based access instead of enhanced for - loop to improve code readability and maintainability by
increased the timeout duration in the ` ExpiringUrlCacheTests ` from 3 seconds to 60 seconds to allow more time for the test to complete
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to validate payload processing in the NGram
refactor AclImpl class for improved readability to enhance maintainability and ease of understanding for future developers
added a new test method to verify different array sizes in EasyRandom class to ensure that different array sizes are correctly generated when using EasyRandom
xenserver : make sure we catch exception when stop a vm
added thread - local handling for writing operations in SslConnection . java to ensure proper execution of write operations in a concurrent environment
refactor the actor hierarchy handling and add ancestorsVisible method to improve clarity and functionality to enhance the logic for determining if an actor is visible
[ hotfix ] [ log ] add log for rolling - update step failure
[ hotfix ] [ table - common ] fix checkstyle violation in flink - table - api
added handling for BadCredentialsException in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to enhance error reporting for user authentication failures
refactor AtMostXVerificationTest class to improve test coverage to enhance reliability and maintainability of the verification process
updated default QTYPE assignment to use QParserPlugin . DEFAULT _ QTYPE instead of a hardcoded value to improve maintainability and consistency in
updated SimpleDateFormat instantiation to include Locale . US in WeekDateTest . java to ensure consistent date formatting across different locales
added an ` isInitialized ( ) ` method to ` ILanguageServer ` and modified its implementation in ` JavaLanguageServer ` , and created a
updated the parameters of the ` shouldHaveIdToken ` and related test methods in ` ClientAPITokenIntegrationTest . java ` to enhance test clarity and
added transaction handling methods in DatabaseAdapter and improved error handling in GncXmlHandler to enhance database transaction management and ensure data integrity during operations
replaced byte array handling with ByteArrayOutputStream in MimeType . java to improve performance by avoiding unnecessary array creation
added multiple @ Override annotations and simplified exception handling logic in MessagingTemplate . java to improve code readability and maintainability by reducing duplication
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if a source file is an instance of ` J . CompilationUnit
set maximumBufferedDocs to Integer . MAX _ VALUE and setRAMBufferSizeMB to 100 in TestIndexWriterMergePolicy . java to improve document handling
added WitnessCapsule handling and corresponding unit tests in Manager and NodeDelegateImpl classes to enhance witness management functionality and ensure correct functionality of witness
added error handling for NoSuchElementException in CopyOnWriteMap to improve robustness by preventing NoSuchElementException during iteration
flume - 136 . replace apache log4j . level with log . info in flumenode and flumeshell
added reindexing and updated authentication metrics assertions in BasicAuthIntegrationTest . java , modified daemon stream handling in DaemonStream . java , and modified
changed the implementation of the ` nodes ` variable from ` HashMap ` to ` LinkedHashMap ` to maintain the insertion order of the nodes collection
add weld . core . impl to handle internal error in jersey module
refactor header validation logic into a separate method for clarity to improve code readability and maintainability by centralizing header validation logic
added handling for specific Java properties in System . java to improve property management and support specific Java versions
changed method parameters from String to CharSequence in StringSubject . java and added corresponding test cases in StringTest . java to improve type safety and ensure correct
fix checkgraalIntrinsics . istoinvestigated ( ) compilation error
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory to use a default DataSource instance if forCompactor is true to ensure the correct datasource is used when using a compactor connection
refactor DeploymentOptions class for improved organization to enhance maintainability and readability of the codebase
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable ` directly instead of using ` Drawable . ConstantState ` to simplify drawable handling
refactored try - with - resources in XmlParser . java and YamlParser . java to use StringReader instead of ByteArrayInputStream to improve resource management
added support for ` coalesce ` function in ` RexNodeConverter ` and registered a new function for it in ` SqlFunctionConverter ` to enhance
camel - 14263 : camel - hl7 - simplify the unmarshal test so it do n ' t fail on slow machine
updated the context class loader handling in JavassistProxyFactoryFactory . java to ensure proper context class loader is used for proxy factory creation
refactor DefaultDateTypeAdapter to remove unnecessary constructor and add final modifiers to improve code clarity and ensure immutability of constructors
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
updated HttpClientRequestBase to set and parse the URI directly instead of storing it as a newQuery to simplify query parsing logic and ensure consistent URI handling
removed the ` filterOldEntries ( ) ` method from ` FeedRefreshUpdater . java ` to limit the number of entries to 50 to ensure that
[ hotfix ] [ log ] change log level from fatal to warn for append failure
refactor NodeMap to improve the structure and structure of the Iterable implementation to enhance code readability and maintainability by consolidating related functionality
updated the route definition to use a subPredicate instead of a predicate in DiscoveryClientRouteDefinitionLocator . java to improve clarity and functionality of the route
added a check for non - empty fields before adding projects in MongoRecordReader . java and modified the return value in RexToMongoTranslator .
do n ' t add admin to the admin list if there be no admin
replaced the use of MultiFields with SolrIndexSearcher for term retrieval to improve performance by avoiding unnecessary multi - field access
updated the return statement in ConstantBeanHolder . java to include class name and identity hash code to improve clarity of the output of the bean ' s
refactor GroovyParserVisitor to simplify primitive type handling by removing line number checks to improve code readability and maintainability by reducing redundancy
[ gr - 26144 ] fix frameinfoqueryresult . hashcode ( ) and frameinfoqueryresult . hashcode ( ) .
increased timeout values in the SedaBlockWhenFullTest . java file from 100 to 200 milliseconds to allow more time for tests to complete
added a new package - info . java file for the ppp package to provide package - level documentation for the test resources
updated the logic for determining the read length in MessageUnpacker . java to ensure that the buffer size does not exceed the expected size of the
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core . lang . Nullable `
added a user column to the IconDB query to include the user identifier to enhance the query to include user information for improved icon retrieval
http : / / issues . apache . org / jira / browse / amq - 4892 - fix typo in defaultmqproducerimpl
scan : do not whitelist module - info . class if whitelisted
ambari - 13232 . db upgrade for baremetal dhcp device do n ' t correctly drop foreign key ( dsen )
removed the IJava2DRenderer interface from the Java2DRenderer class to simplify the class structure and eliminate unnecessary complexity
added onTearDown method to ensure offload buffer is empty when the audio sink is stopped
refactor UpstreamCacheManager to utilize a scheduled thread pool for managing divide upstreams to improve performance and maintainability of upstream task management
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion message in Recording . java to include additional context to improve debugging by providing more context on expected output expectations
updated FilestorePage . java and RootPage . java to use RequiresAdminRole and added user authentication checks to enhance security by restricting access to
camel - elasticsearch - rest : ignore fail test for now
expressioncontrolbusfactorybean : do n ' t check if the declaring class of the method be the class of the method .
updated button text messages from " leftButtonAltcoin " and " rightButtonFiat " to " sellAltcoin " and " sellWithFi
camel - 14263 : restlet - fix path validation for invalid uris .
allow block . createnextblockwithcoinbase to be call with a non - final coinbase value .
removed Serializable interface from BTreeMapJava and updated method names in ConcurrentSkipListMapTest and JSR166Test to improve serialization handling and enhance test
added null check for getCause ( ) before logging error in RuleEngineImpl . java to improve robustness by preventing null pointer exceptions during execution
reformatted conditional check for command mode in Main . java to improve code readability and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter . java
deleted the PlainVerifier . java file to the verifier class is no longer needed in the project
added a condition to close system windows when triggered fromAltTab is true to ensure proper resource management by closing system windows when triggered fromAltTab is
updated DialogFragmentIT . java and OCFileListBottomSheetDialog . java to use BottomSheetBehavior and improve dialog behavior management to enhance
updated the parseCharset method to use UTF - 8 encoding in RestAdapter . java to ensure proper handling of character encoding in MIME types
added a call to the superclass ' s deinitialize method in TextField . java to ensure proper initialization of the TextField class
updated the ` testSerialization ` method to use ` TestUtilities . serialised ` for ` LogFormat ` serialization to improve code maintainability and reduce
updated the previous clause handling in LogicalGenerator and modified the PreviousFill constructor in GroupByFillDataSet to improve clarity and functionality of the fill logic in
added handling for negative array sizes in JAXWSExceptionBase . java to ensure proper exception handling for negative array sizes and improve robustness
test : migrate ctunresolvedimporttest to junit 5 ( # 4523 )
updated join time from 10 seconds to 60 seconds in T6567415 . java to allow more time for threads to complete
[ hotfix ] [ runtime ] change default scheduler factory to pipelinedregionsschedulingstrategyfactory by default
added title field and its getter / setter methods to ShadowActivity , ShadowAlertDialog , and ShadowToast classes , and updated imports in Shadow
use poilogger instead of commons - logging , a suggest by valerybokov
updated alarm code and code handling in InstarHandler . java to use single quotes for alarm codes and object codes to improve code readability and maintain
increment remove latency for local map stats ( # 11486 )
simplified enum declaration in Option . java and modified status return logic in Response . java to improve code readability and maintainability by using a switch statement
refactor resource location retrieval in CheckResourceKeys . java to use a dynamic Javac location to improve code clarity and maintainability by centralizing location
add project - name option to command - line args for stable channel
added a new test class ` DeprecatedStubbingTest ` to validate the use of deprecated stubbing methods to ensure that stubbing functions correctly and
updated import statement from ` org . eclipse . jetty . server . DispatcherType ` to ` javax . servlet . DispatcherType ` to ensure compatibility with
add nml and nx to the list of allowed part modifier for the nml and nx
add a configuration option to allow rsa key exchange in fips
replaced occurrences of ` output _ reader ` with ` reader ` in multiple classes to ensure proper resource closure to prevent memory leaks
refactor OAuth service creation and deletion methods to use a shared OAuthFactory instance to improve code clarity and maintainability by centralizing OAuth service handling logic
updated the animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to improve
added handling for UpdateRegionLocation in ConfigPhysicalPlan and improved logging messages in various classes to enhance monitoring and logging clarity for region migration events
added a new file ` FileDialogLeakTest . java ` to test garbage collection of ` FileDialog ` instances to ensure proper resource cleanup and prevent potential
hbase - 26105 move testopentableincoprocessor to the correct package ( addendum )
trufflefeature : skip uninterruptible implementation method .
[ flink - 20536 ] [ protobuf ] remove unused split method from pbcodegenrowserializer and pbcodegenrowserializer
added a null check for the disi variable in DrillSidewaysScorer . java to ensure proper handling of non - null disi
updated ExoPlayerTest , DynamicConcatenatingMediaSourceTest , FakeMediaSource , and FakeMediaSource to use a Handler for source info
added support for checking JVM version in Constants . java to ensure compatibility with Java 9 and above
updated the constructor of FileReporter to accept String and File types instead of null to improve type safety and prevent potential NullPointerExceptions
update end - to - end encryption key existence check to use istrue ( ) instead of isfalse ( )
added menu item handling for the home button in DirectMessageConversation to improve user experience by allowing easy navigation to the home screen
added support for retrieving user information and updated protocol version from 5 to 6 in RpcServlet and RpcUtils to enhance user management capabilities and improve error handling
added an @ Enabled annotation for OS architecture in TestJdbcPluginWithMSSQL . java to ensure compatibility with different operating systems
updated variable name from ` startClass ` to ` originalStartClass ` for clarity to improve code readability and maintainability
fix a bug in dexbody . getlocals ( ) and add a local for parameter register .
replace calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContext
fix planner example look and feel to use look and feel
fix version number format for version number in web
refactor animation listener handling in LauncherAppTransitionManagerImpl to use final variables for alpha and translation to improve code readability and maintainability by
updated AddressFormatException to include the network version instead of the base58 to provide clearer information about the network version used
fix editofferdatamodel to use newofferpayload instead of offerpayload
updated milestoneParameters initialization to conditionally use open tickets or repositories based on the milestone state to improve clarity and functionality by distinguishing between open tickets and
change the pipe item pipe ' s battery size from 640 to 800 to allow more space for item pipe .
added a new method ` getClusterKey ` to retrieve cluster keys with blueprint names and revisions to enhance the method ' s functionality to include blueprint
initialize downgradeAllowed to true in UpgradePack . java and add a test for it in UpgradePackTest . java to ensure downgrade functionality is
replaced instances of ` NameType . ATTRIBUTE ` with ` NameType . ELEMENTSTART ` and ` NameType . ATTRIBUTENAME ` in multiple
[ add ] configuration . emulatesystemloadlibrary to emulate system load library
fix issue where all apps / widgets be sort in the same locale
modified entry and output stream handling in DefaultPlatformManager and FatJarStarter to ensure proper resource management and prevent potential memory leaks
enhanced assertion messages in TestSecretKeyCredentialHandler . java for clarity to enhance readability and maintainability of the test assertions
camel - 14284 : camel - spring - boot - optimize routebuilderfinder so it can be use by spring - boot
[ hotfix ] [ doc ] fix typo in metric option description
hbase - 16457 make testfulllogreconstruction more resilient to slow ci server
added a new boolean variable ` reuseAddress ` to ` DatagramSocketOptions ` and updated constructors and methods accordingly to enhance flexibility in configuration options for DatagramSocket
update serverconfig . shutdown - message to match server . shutdown - message .
removed the deprecated Locatable interface from the org . openqa . selenium . interactions . internal package to clean up the codebase
updated error messages to clarify that the field must be either indexed or not stored and not multi - valued to improve clarity of error messages for better debugging
replaced equalityPredicateColumns with predicateColumns for improved clarity to enhance code readability and maintainability by using a more descriptive variable name
removed unnecessary whitespace in HandshakeHandler . java to improve code readability and maintainability
updated closing brace formatting in Navigator . java to improve code readability and maintain consistency in formatting
updated access modifiers of constants in RecordReaderFactory and added a new test class for ParquetRecordReaderFactory to enhance encapsulation and ensure
added case for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL criteria in MongoQueryCreator and corresponding unit tests
refactor group expression validation logic in CalciteSqlParser . java to use a new utility method to improve code readability and maintainability by
refactor MappedByteBuffer and FileChannelLinesSpliterator to utilize AtomicInteger for buffer management to improve memory management and ensure proper cleanup of resources
refactor validator retrieval to use a local variable for better readability to improve code clarity and maintainability by reducing repetitive method calls
[ hotfix ] [ circuitbreaker ] fix circuit breakertest timeouts
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags to simplify intent flags for better readability and
rename ` ` ajax ' ' to ` ` webui . submit . upload . progressbar ' '
added JUnit 5 @ Disabled annotation to TableExtRetrieverTest to allow retrieval strategy for column privileges to allow for retrieval strategy for column privilege
entitygraph : synchronize addexportedcount and getexportedcount to avoid race
updated import statement for ` requireNonNegative ` from ` requireNonNegative ` to ` requireNonNegative ` in ` MetricsImpl . java ` to
updated HttpParser to handle spaces correctly and modified character appending logic to improve error handling and ensure correct handling of special characters
updated the activity view from trends _ activity to configuration _ activity to ensure the correct layout is used for the configuration activity
updated print statement to include the position of the SLWT in the document to provide clearer insights into the location of the SLWT
updated ForceLeaderTest to conditionally use Tlog replicas and added a new ForceLeaderWithTlogReplicasTest class to improve test reliability
refactor Thread class to improve code readability to enhance maintainability and facilitate future updates
[ j2kt ] add forcetemplatemode = true to allow template to be re - generated by the template resolver
camel - 14263 : fixed the issue of set the xmlns attribute in camel - cxf
removed unnecessary line breaks in YamlRepresenter . java to improve code readability and maintainability
updated ToChar . java to use String . format for day and month retrieval and added new SQL statements in TestFunctions . java to improve readability
added support for valid transaction and write IDs in GenericUDTFGetSplits . java to enhance transaction management capabilities in the Hive database configuration
updated logging statements and initialized collections for columnNames , column types , and types in JsonSerDe . java to improve logging clarity and ensure empty
add picture . hasnodata ( ) and picture . hasnoinitialimage ( ) method to check if the book path exist before open it
refactor SSTDeserializer and its methods for improved readability and structure to enhance code clarity and maintainability by ensuring proper handling of SST record
updated grid column retrieval logic in AppPreferencesImpl and modified scale initialization in ExtendedListFragment to improve grid column handling and ensure consistent scaling behavior
updated the field description in Platform . java and ComparisonFailureWithFieldsTest . java to include line - break characters to improve clarity and accuracy of
added ` waitingForKeys ` boolean to ` DecoderInputBuffer ` and updated related conditions in ` ClippingMediaPeriod ` and ` SampleQueue `
updated API path annotations in OkexV3 . java from " / api / margin / v3 / accounts / borrow " to " / margin
refactor conditional statements in LineUtilitiesTests . java for clarity to improve readability and maintainability of the code
added error logging for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java and
log a warning if defaultdrmsessionmanager be access on wrong thread
added METHOD context and updated index handling in VariableContext . java and added corresponding test cases in TestVariableContext . java to enhance variable context management and
add test cases for invalid compilation unit and profile string in ExperimentParserTest to ensure robust error handling for invalid compilation unit and profile strings
fix buffer limit calculation in piece and share peer
added HttpClientProperties to manage response timeout in NettyRoutingFilter and NettyRoutingFilter to allow configuration of response timeouts based on configuration properties
updated ` NativeLinkTargetGroup ` and ` CxxLibraryFactory ` to use ` NativeLinkTarget ` instead of ` NativeLinkTargetGroup `
added unit test base on user forum issue
added handling for ` RexFieldAccess ` in ` ASTConverter ` and modified ` RexNodeConverter ` to convert ` ExprNodeFieldDesc
replaced the direct usage of QueryLogEntry . values ( ) with a static final array variable QUERY _ LOG _ ENTRY _ VALUES to improve code
fix webclientrequestbuilderimpl . relativizeuri ( ) for proxy . noproxy ( )
updated PKCS12KeyStore to handle null certificate chains and certs more efficiently to improve robustness and prevent potential NullPointerExceptions during certificate processing
added reflection access checks and refactored related methods in Bootstrap , ReflectionCheckLinker , and NativeObject classes to enhance security by ensuring proper access
removed the public access modifier from constructors in CollisionMap class to restrict instantiation to package - private for better encapsulation
marked the ` getRawInputFromTransactionInput ` method as deprecated and added a null check for the ` input ` parameter to indicate that the method should
refactor log level handling to use a switch statement to improve code readability and maintainability by consolidating logic into a switch statement
remove region _ id from the database insert statement in configurationserverimpl . java ( # 4576 )
[ bug - 65284 ] oldexcelextractor should throw an exception if encryption be not support
make basemicronautbenchmarksuite use all - unnamed jdk .
modified the visibility of the image holder in TimeLineCursorAdapter to ensure the holder ' s image is hidden when the condition is met
increased the scheduler timeout from 10 seconds to 50 seconds in ` BatchingStateChangeUploadSchedulerTest . java ` to allow more time for tests to complete
refactor directory creation and deletion logic in ShadowContext and ContextTest classes to improve code clarity and maintainability by centralizing directory creation logic
refactor ExceptionFactory to use Class . forName for better exception handling to improve clarity and maintainability of exception handling logic
updated WAIT _ TIME _ MS constant from 10000 ms to 60000 ms in LauncherInstrumentation . java to increase the wait time for
added support for " aud " extension in ConnectOAuth2RequestFactory and refactored JWT claims initialization in ConnectTokenEnhancer to enhance
camel - 14284 : camel - kafka - make breakonfirsterror configurable
added a new constant ` selectableItemBackground ` to the ` R ` class to provide a background color for selectable items in the application
replaced multiple specific imports with a wildcard import for trade - related classes and added a placeholder method for placing stop orders to streamline import statements and
updated event type assignment logic in TxnSetOperation . java to ensure correct event type is assigned when the record is null
added a new class ` ResumableRandomAccessFileListener ` and refactored references from ` ResumableRandomAccessFileHandler ` to ` Resumable
change accesslogvalve from accesslogvalve to abstractaccesslogvalve to ensure compatibility with the abstract accesslogvalve
added iterator to handle format records in HSSFDataFormat . java and updated assertions in TestWorkbook . java to improve data format handling and ensure
[ hotfix ] [ kafka ] mark flinkkafkaproducer and flinkkafkaproducer a deprecate
updated the condition to check if the compressed chunk length does not exceed the maximum compressed length to ensure proper handling of compressed chunks based on the maximum compression
datajpa - 480 - add redisstringidempotentrepository to allow idempotent value to be reuse by idempot
fix container repair not use metadata . close # 77952
update legacylocalrepositorymanager to only use local repository if layout be local
[ hotfix ] [ runtime ] check if taskmanager be initialize before start it
add - dclassifier and - dfile option to abstractartifactresolutionexception to make it easy to use
updated temporal path retrieval to use ` getInternalTemporalPath ( mContext ) ` instead of ` getTemporalPath ( ) ` and
added a method ` findByEntries ` to retrieve ` FeedEntryStatus ` based on a list of entries to enhance functionality for fetching feed entries by
added thread execution logic based on DISABLE _ TIMINGS and renamed depolymentOptions to deploymentOptions in BlockedThreadCheckerTest to
updated FormatterConverter to accept a String formatter string instead of a Class < ? extends Formatter > and added null check for the constructor argument to improve flexibility
updated file loading logic to handle different Android SDK versions to ensure compatibility with newer Android versions and improve compatibility
replaced ` setRemoteAddress ` and ` setRemoteHostname ` methods with direct assignment of ` remoteAddress ` and ` remoteHostname ` to improve code clarity
added null check for realClass and shadowClass in Robolectric . java to ensure that a valid shadowClass is annotated with @ Implements to
added support for tlsMutualAuthenticationRequired in NettySslContextFactory and ExampleNettySslContextFactory to ensure that tlsMutualAuthenticationCertificate
updated character encoding to ISO _ 8859 _ 1 and added a test for requesting plain HTTP endpoint over HTTPS to ensure proper handling of SSL
[ hotfix ] [ kafka ] expose kafka consumer and producer in abstractkafkaresumestrategy to allow subclass access
fix a bug where the sitemapwidgetevent be not add to the list when the item be add to the sitemap
updated log warning message from " email " to " SMS " in CommunicationsManager . java to correct the spelling of " from " to " SMS
no effective change - add draftqueryoptimise ( ) method to beandescriptor and beandescriptordrafthelp
added error handling for resource temporarily unavailable exceptions in MultipartBody . java to improve robustness by handling potential IOException during resource transfer
refactor : fix typo in executablefactory and zipfolder
updated EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters classes to improve code organization and maintainability across the project
fix wrong initial directory when attach file
added LoadOptionsBuilder with maximum SchemaInfoLevel configuration in AccessTest . java to enhance schema loading options for improved flexibility
updated package and import statements in TestLoadLegacyLibrary . java and added a new test method for loading legacy libraries to improve code organization and ensure proper
replace exception throwing with returning null for unknown operation names to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties for prototypes to improve project property management for better user experience
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources for better resource management to ensure proper resource management and prevent potential
[ hotfix ] [ runtime ] fix typo in datastreamjob javadoc
replaced the try - with - resources statement with a try - with - resources statement to handle ErrnoException to improve resource management and prevent potential resource
camel - 14284 : camel - cxf - do n ' t set the serviceclass when the instance be a string
added a conditional check for the " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure proper connection validation based on protocol
updated LambdaToMethod . java to store parameter symbols in a ListBuffer and modified conditional checks in ReflectionVisitor . java to improve clarity and functionality of
update sbarq to use what < wp > instead of what < wp
increased the timeout duration for the copyURLToFile method in DL4JInceptionV3Net . java from 5000 to 60000 milliseconds to
added a method to set the phrase Slop in mpq to ensure the query parser correctly handles phrase slops
increased sleep duration in LongPressMouseListenerTest from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow for more time for
updated the default port from 8188 to 6188 for metricsServers in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to ensure consistent
make screengrabber and screengrabber more tolerant to parallel scheduling
updated visibility conditions for compound view to include both ` canEdit ` and ` areEditOptionsAvailable ` to ensure that only available edit options are displayed
updated progress calculation in DepthController . java to ensure progress is within defined limits to improve accuracy of progress tracking
removed the packetReceived method from ClientSession and ComponentSession classes to simplify the codebase by eliminating unused methods
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve error handling
added null checks for the service parameter in SamlIdPMetadataServiceSelectionStrategy and refactored related code in SamlIdPMetadataUI
add ` ` hidden = true ' ' to command to disable account level permission
added doNotInstrumentClass for " androidx . room . CoroutinesRoom $ Companion " to prevent instrumentation of specific classes in the
added synchronized keyword to the isSupported method in NegotiateAuthentication . java to ensure thread safety when accessing the context class loader
removed the ` setInitScript ` method from ` InitializingDataSourceFactoryBean ` to streamline the initialization process by eliminating unnecessary methods
camel - 14263 : camel - jbang - set the bean name for persistent and temporary queue reply manager to make it easy to configure
refactor AuthenticationProvider and TargetObject classes for improved clarity to enhance maintainability and readability of the codebase
added conditional flush and close methods for tagged images in PdfDocument . java to improve handling of image content when tagged elements are present
log4j2 - 1080 add a test case for the patternselector .
simonstewart : allow selenium to run test in hta mode with selenium core
added MwThankPostResponse class and updated Service . java to use it to improve the API ' s functionality by integrating Mw
implemented the ` SocketBased ` interface in ` ChannelEndPoint ` and introduced a new interface ` SocketBased ` in ` SslConnection ` to enable
removed redundant declarations of revokingStore and adjusted the max size setting logic to streamline the code and improve clarity by eliminating redundant code
added test case for implicit join in hql collection
updated assertions to normalize line breaks in NonVisualRegressionTest . java to ensure consistent line endings across different operating systems
added functionality to track and assert unreferenced files in IndexWriter and MockDirectoryWrapper to improve file management and ensure proper cleanup of unreferenced
updated method signatures in BaseError . java to remove the ' final ' modifier from several method signatures and added a @ Final annotation to improve method clarity
added validation for consume user resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the consume user ' s resource percentage is
added a condition to check if the legacy login is displayed based on resource settings to enhance user experience by enabling legacy login display based on user preferences
rename the class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in class naming
updated the response page in EditTeamPage . java to use UsersPage . class instead of EditTeamPage . class to improve user experience by providing
updated debug log message to include exception details to improve clarity of error reporting during plugin initialization
refactor error handling in ConnectionManager to ensure proper shutdown of resources to improve resource management and prevent potential memory leaks
refactor Rocket class to improve performance to enhance performance and maintainability of rocket operations
refactor code to encapsulate the logic for creating dynamic partition specifications in a separate method to improve code readability and maintainability by reducing duplication
refactored round hack logic in ` StringTemplate ` and ` Kernel ` , ` StringTemplate ` , and ` StringTemplate ` classes to improve
added a visitDirectory method to JarDirectoryStep and implemented directory traversal logic in DirectoryTraversal to enhance directory traversal functionality and prevent duplicate entries in the jar
added a new file JWKSetEditor . java that implements a JWKSetEditor class to handle JWK text settings using JWKSet to
refactor the ` finish ` method in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to utilize ` 
fix partial evaluation of method in invokeespressonode . toespressonode
change default value of fetcher . threads . per . host . per . host . per . host . by . ip from true to false to
updated the conditional check for queryTimeout in StatementUtil . java to improve readability and maintainability of the code
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and implemented target configuration hashing in HaskellGhciRuleIntegrationTest to
refactor ReplicaPosition class to improve code organization to enhance maintainability and readability of the code
server : fix initial delay for network usage stats update task
updated animation interpolators to use a constant FINAL _ FRAME instead of a hardcoded value to improve maintainability and readability of the
adjusted swipe length calculation in Background . java to improve UI responsiveness based on display density
added a new module - info . java and adjusted formatting in multiple Java files to improve code organization and maintainability
updated value handling in JsonType and introduced new constants in JsonTest to improve code clarity and maintainability by using named constants instead of string literals
removed unnecessary null check for the context variable in ResourceResolverBean . java to streamline code for better readability and maintainability
[ hotfix ] [ runtime ] fix default value for tolable _ failure _ number in checkpointconfig
updated InnerClassesTable to use Element instead of TypeElement for reporting inner class references to improve type safety and compatibility with top elements in the code
updated the command string concatenation to include " test . tool . vm . opts " in the System . getProperty ( " test . tool . vm .
replaced FluentIterable with Java Streams for collecting files in ChromeTraceBuildListenerTest . java to improve performance and readability of the code
[ 3.0 ] allow dubbo register to be pass a parameter to serviceconfig .
do n ' t close all session if security otr mode be disable
added outline size , transparency , and transparency properties to NodeLabelRenderer and updated renderProcessing method to include additional outline properties to enhance label rendering flexibility by
refactor ProxySelector , URL , and URLStreamHandler classes for improved consistency to enhance maintainability and readability of the codebase
updated the return value of the method from false to true in Win32FontManager . java to ensure compatibility with the latest font management features
added null check before visiting the TreeVisitor class to avoid potential NullPointerExceptions when v is null
fix error handling policy for jdt compilation when no classpath
added content and text alignment points to the LabelBlock class and updated related tests to ensure correct rendering of labels with specified alignments
refactor Class and Parameter classes for improved consistency to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code structure to enhance maintainability and readability of the code
fix npe in networkinterface . isloopback ( ) if networkinterface be null
added a Locale parameter to the ` fromRfc1123DateString ` method and updated its usage in ` Rfc1123DateDeserializer `
fix test that fail on window due to miss . pdf file extension
nifi - 145 : add option to output no hit flowfile even if there be no hit
cloudstack - 4892 : remove aggregationratio parameter from updatequotarunningvmusage and updatequotarunningvmusage
[ java ] fix switch / cases indentation see switch / cases / debugger / election . java
fix readfilesp . onfirstnull ( ) and streamfilesp . onfirstnull ( ) - > close ( )
simplify the logic of pagechangelistener . getitem ( ) in order to be consistent with the rest of the code
fix bug # 45363 - add iswriteprotected ( ) method to hssfworkbook and hssfworkbook
added a try - catch block around the unregisterInvalidatedSessions method call to handle potential exceptions during session validation
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the status message from " reachable = false " to " not reachable " in the HueLightHandler class to provide clearer feedback on the
add isloading ( ) method to fmlclienthandler , and make fmlclienthandler non - loading .
use ` ` unit . millions ' ' instead of ` ` k ' ' to get unit number
replaced Preconditions with a switch statement for handling BYTES and STRING types in MessagePackParser . java to improve code readability and ensure proper handling of
added parameterized test for query transformations with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure correct handling
added tests for serializing and deserializing a map using Gson to ensure correct functionality of map serialization and deserialization
added checks to ensure x2 and y2 are within the bounds of offset in GeometryUtils . java to prevent out - of - bounds errors
updated ` SORT _ ORDER _ DIALOG _ TAG ` to use ` SORTING _ ORDER _ FRAGRMENT ` and refactor
make sure we do n ' t crash if a testplan can not be find
updated method names from " dbmsName " , " schemaName " , " getTableName " , " getSchemaName " , " getColumnName " , "
modified the argument identification logic in the parser to handle both strict and non - strict identifiers to ensure proper handling of null values and prevent potential NullPointerException
change default protocol from " SSL - HTTP / 1.0 " to the server ' s protocol to ensure the correct protocol is used for SSL connections
set default value of displayVolume to true in VolumeVO . java to indicate that the volume should be displayed by default
updated version method to accept a boolean for full version and modified version retrieval logic to improve version handling and enhance user experience by providing accurate version information
refactor condition checks and update result assignment logic in ChangeLogParameters . java to improve clarity and ensure correct handling of global change log parameters
changed log level from warn to debug in JtaTransactionManager . java to improve logging granularity for transaction failures
hhh - 13636 skip test that fail on oracle
removed redundant calls to startHandshake and setSoTimeout in the SSLSocket implementation to streamline the handshake process and improve code clarity
refactor method calls to use a separate method for calculating the status bar height to improve code readability and maintainability by reducing redundancy
change the default value of CHA from false to true in EspressoOptions . java and change class visibility from non - final to final
http : / / issues . apache . org / jira / browse / amq - 4617 - fix regression in camel - activemq
updated import statements and refactored test methods in JodaTimeRangeRandomizersTest . java to improve code clarity and maintainability by consolid
updated resource loading logic in WebDescriptor . java to conditionally redirect resources based on the servlet version to ensure compatibility with newer Jetty EEE
add readiness . isready ( ) method to check if the item be a node
replace liveEndpoints with handler . endpoints in StorageProxy . java to improve clarity and consistency in endpoint iteration
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions when processing creation statements
update RPC version from 1 to 2 in DataRpcConfig and UserRpcConfig to reflect the new version of RPC functionality
added security checks using System . getSecurityManager ( ) in ObjectStreamClass . java and ObjectStreamField . java to ensure package access checks only occur when security
updated utility methods in Utils . java and changed the visibility of UGSCommandCount in XLCDCommunicator . java to private to enhance en
( chore ) camel - metrics : remove dependency on guava in defaultmetricstagprovider
added a test suite for MockBrowserTest in ClientDriverSuite . java to ensure the MockBrowserTest class is properly added to the suite
changed the default logging level from OFF to ERROR in the opt2 options to ensure the application uses the appropriate error level instead of the off level
changed member variables to be final in IconNormalizer . java to enforce immutability and improve code readability
added support for ` firstCallPrepareDo ` and modified method invocation logic in ` PrepareInterceptor ` , along with corresponding test cases to enhance flexibility in
refactor workspace handling and state management in Launcher and AppsCustomizePagedView classes to improve code clarity and maintainability by standardizing
replaced ` asEagerSingleton ( ) ` with direct binding in ` Auth . java ` and removed dependency on ` asEagerSingleton ( ) ` to
updated the ` incomingAssociations ` method to accept a boolean parameter ` ignoreInvisibleAssociations ` to enhance flexibility in handling invisible associations during data
pod : remove the private ip from the capacity table when remove pod from the database
add more command to async profile page
refactor ModelResolver to improve the handling of required properties and add a new RequiredRefFieldModel class to enhance code clarity and maintainability by consol
updated class names from CasCoreMultifactorAuthenticationAutoConfiguration and CasCoreStandaloneBootstrapConfiguration to CasCoreConfigurationWatchAutoConfiguration and Ca
refactor FeatureFlags class for improved readability to enhance maintainability and ease of understanding for future developers
updated UUID unique identifier handling and introduced a new test for large hue IDs to improve uniqueness and accuracy of hue IDs in the application
added a check to set the picture icon in TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the image icon is only updated when the
updated configuration descriptions for major compaction and insert - only compaction in HiveConf . java to clarify compaction behavior for insert - only tables
added a null check for mStoragePath in the isDown ( ) condition to ensure that the check for storage path is not null before proceeding
refactor resize threshold checks in VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesMultiSet , VectorMapJoinFastBytesHashSet , and
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connections
[ hotfix ] [ schema ] deprecate ` ` required = true ' ' in aggregatedefinition
removed debug tracing logs from TouchInteractionService and RecentsAnimationDeviceState classes to clean up the code and improve performance by eliminating unnecessary debug logging
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated expected hits length assertions from 4 to 4 and 3 in TestMultiSearcher . java to reflect the correct number of hits in the test
added a new file ` LucenePackage . java ` with a class that retrieves the Lucene package to provide a way to construct and retrieve the package
corrected the calculation of sizeInBytes in RAMDirectory . java to ensure sizeInBytes is subtracted from existing . sizeInBytes
add estimation to the bloomkfilter and make some field final
added a null check for the drawer toggle before animating to prevent potential NullPointerExceptions when accessing the drawer toggle
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress warnings related to unused subject parameters
added logic to determine scanModules based on classloader override conditions to ensure correct scanning of modules based on classloader type
fix msbib export format test for corporate author
added a method to cancel core recovery processes in CoreContainer . java to ensure proper handling of core states during recovery operations
replaced direct calls to ` System . currentTimeMillis ( ) ` with direct calls to ` System . currentTimeMillis ( ) ` and added a method to
updated conditional logic in RepoEditView to check for a single found item instead of a null and size to improve code readability and maintainability by
[ hotfix ] [ table - common ] fix typo in javadoc
added trust resolver , role hierarchy , and permission evaluator configurations to SecurityEvaluationContextExtension and its tests to enhance security evaluation capabilities by integrating
added a check to set exponentSize to primeSize - 1 if it is zero to ensure the exponentSize is correctly set based on primeSize
replaced calls to ` getSavePath ( ) ` with ` getUsableSpace ( mAccount . name ) ` in multiple classes to improve
[ flink - 20519 ] [ sql - client ] fix distinct sql aggregation . combine ( ) to call accumulate ( object ) on each
added a test for post - login activities functionality in UserServiceTest . java to ensure that post - login activities execute correctly for successful user authentication
extractorframesrare : fix extractorspanishstrippedverb to be able to extract spanish verb
refactor CharArraySet and TestCharArraySet to simplify string handling and improve test coverage to enhance code clarity and maintainability while ensuring proper functionality of
updated error messages and variable checks in MuxerWrapper . java to improve clarity and consistency in track type validation
updated JsBundleGenrule and JsBundleGenruleDescriptionTest to use AndroidPackageable instead of JsBundleAndroid for required packageable
fix ( pinot - client ) : add support for encode utf - 8 character
updated the case of " Logical Analyzer " to " Logic Analyzer " and replaced multiple drawable resource references with a single string resource reference to
added instanceClassName and instanceClass variables in AbstractVector . java to improve performance by avoiding unnecessary instantiation of Vector instances
removed the syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary synchronization calls
show no response message if there ' s no response
added TestLoggingExtension to DiagramRendererTest to enable logging functionality for better debugging
updated method signatures to include a boolean parameter for camel case mapping in multiple wrapper classes to enhance mapping functionality by allowing underscores to be mapped
added support for the VIOMI Internet electric water heater 1A ( 60L ) in MiIoDevices . java to enable compatibility with the
replaced calls to ` getSslSessionData ( ) ` with direct access to ` SslSessionData ` in ` SecureRequestCustomizer . java `
added a new file ` CreateNewSpreadsheet . java ` for creating Excel sheets using Apache POI to facilitate the creation of new Excel spreadsheets
configuring redis cache entry ttl should default to 15 minute
updated CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION and modified content URIs in LauncherBackupHelper , LauncherModel , and
updated the wiremock version from 2.14 . 0 to 2.17 . 2 in the SwaggerResolveTest . java file to ensure compatibility with the
replaced ` synchronized ( lucidaFontName ) ` with ` this ` in ` SunFontManager . java ` to improve thread safety by using
updated condition to check for ' < ' in addition to ' < ' in DocClassUtil . java to ensure correct handling of tag lengths in
removed the use of String . format for formatting the workspace scroll format string to simplify the string retrieval process and improve code readability
added import for Scope and a message in ValidateCommandStep . java to inform users about missing validation errors to improve user feedback during validation processes
updated imports and refactored resource loading logic in IntegrationTestContextLoader . java to improve code organization and enhance resource loading for web applications
updated method calls from ` getResponderAt ` to ` getComponentAt ` for better clarity and consistency to improve code readability and maintainability by using
updated formatting of conditional statements in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated multiple classes to use it instead of ` Long ` and ` String ` for client IDs to
updated string replacement logic in CellContentConverter . java to use line breaks instead of patterns to improve readability and maintainability of the code
updated regex patterns in SeleneseTestCase . java for regex processing and improved output formatting to enhance regex functionality and ensure accurate matching of glob strings
mondrian : fix typo find by codespell on fossies . org
added stack trace printing and improved error handling in ProcessTools . java and CustomLauncherTest . java to enhance debugging capabilities and ensure proper permissions are enforced
remove tumblr ripper test for embedded image
added a condition to check if the symbol has a slot for the store type before converting it to ensure that conversion occurs only when there is a slot
[ java ] initialize extractor wrapper in chunk when nextloadposition = 0 .
updated imports and refactored IndexWriter initialization in BaseLockFactoryTestCase . java to utilize PrintStreamInfoStream to improve code readability and
tika - 1078 : add support for tika - config service loader in tikaconfig and add a dummy parser to tikaconfig
updated imports and enhanced type safety in DocLint . java and DocLintTester . java , and added new package - info . java files to
added a new constant IMPORT _ CMD in DataImportHandler and modified conditional checks in DataImporter to support additional command handling for data imports
added a test to verify that inner classes are not modified when the ignoreDefinition flag is set to true to ensure that inner classes are not modified when
removed unused import of android . util . Log from JettyService . java to clean up the code and improve readability
updated the ` checkItemPlacement ` method to accept an additional ` ArrayList < Long > workspaceScreens ` parameter and adjusted related logic accordingly to enhance
simonstewart : add a servlet for / quitquitquit to kill the jvm
refactor the handling of transformed rows in LLRealtimeSegmentDataManager to improve clarity and efficiency to enhance code readability and maintainability by
added a check for Windows OS to skip processing if Teredo is present to improve compatibility handling for Teredo devices
add contact : show a warning if the contact be not connect to the protocol provider .
replace bean registration for USER _ DETAILS _ SERVICE _ FACTORY with a bean component definition to improve clarity and maintainability of the registration process
updated drawBitmap method to use null parameters instead of left and top parameters to ensure proper rendering of bitmaps with null dimensions
fix meitrack and totem protocol decoders ( fix # 102 )
changed access modifiers of getFontPath and getPlatformFontPath methods in SunFontManager and X11FontManager classes to enhance encapsulation and
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
[ hotfix ] [ test ] add check for executionexception in clientmapstoretest
add a config option to keep empty sentence
updated the ` createArtifactSubdirectory ` method to return a boolean indicating success and improved error messages to enhance error handling and provide clearer feedback on
refactor ` ReusableCompiler ` by removing ` IDELazyTreeLoader ` and simplifying the ` JavaLanguageServer ` and ` JavaCompiler
[ java ] fix nullpointerexception in directagentattache when return null answer .
modified the ` sendEmail ` method to throw ` MessagingException ` to improve error handling and logging for email sending failures
fix nullpointerexception in itempipeitemsobsidian , close # 296
updated DateFormatEvaluator to accept a Locale parameter and modified FileListEntityProcessor to use it to ensure consistent date parsing across different locales
added a boolean flag ` includeDecals ` to the ` StorageOptions ` class and integrated it into the ` StorageOptionChooser ` class to
modified the ` generateDocumentation ` method to accept a null parameter and added a suppression warning in ` LiquibaseTest ` to enhance functionality by
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to enhance performance logging functionality and improve test coverage to enhance performance tracking and ensure accurate timing
updated assertWarnOrFail statements in StopFilterFactory , SuggestStopFilterFactory , DocExpirationUpdateProcessorFactory , and DocExpirationUpdateProcessorFactory
updated class file version check from 58 . 65535 to MAJOR _ VERSION in ignoreRecordAttribute . java to ensure accurate verification of class file version
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP password authentication to ensure proper handling of user passwords in LDAP operations
replaced OrcInputFormat with BasicStatsNoJobTask in TaskCompiler . java to utilize BasicStatsNoJobTask ' s ability to use footer
fix the issue of reload not be able to save all project
refactor methods in VisibleAdvance . java for improved clarity to enhance maintainability and readability of the code
fix ( reflector ) : allow reflector . start ( reconnect ) to be call without reconnect
added support for dynamic number columns in EdgeDataTable and NodeDataTable to ensure compatibility with dynamic number columns in the data table
added null checks for groupId and version in ResolvedGroupArtifactVersion to ensure that null values are not null to prevent potential NullPointerExceptions
added null check for apiInfo before assigning it to api to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added glLighting function to PhotoPanel and implemented shader disposal in FlameRenderer to improve lighting control and ensure proper resource management during texture loading
updated scene coordinates and added context menu functionality for local variables in multiple classes to enhance functionality and ensure proper context menu functionality for empty local variables
updated conditional checks in CSSParser . java to ensure valid characters are processed to improve error handling and prevent potential ArrayIndexOutOfBoundsException
added logic to set the default look and feel for the JFrame based on the " isLookAndFeelDecorated " property to ensure consistent look and feel in the
updated SQL query syntax and removed redundant ' this ' keyword in HostRoleCommandDAO . java to simplify code and improve readability
updated constants in LJ1200Message . java from F5 _ UNKNOWN to F5 _ TRANSPONDER _ TEST and F6
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and functionality to enhance swipe detection logic for better user experience
replaced ` HostDatabase ` with ` ColorStorage ` in ` ColorsActivity . java ` to utilize the new color storage implementation for better integration
refactor String class implementation to improve code readability and maintainability
removed unused SLF4J Logger imports and updated logger initialization in various classes to improve logging functionality and maintainability across the codebase
added a method ` getGlobals ( ) ` to retrieve global map entries to enhance functionality by providing access to global map entries
added assertions for sending coins in the PublicMethed class to ensure correct functionality of the sendcoin method calls
test : migrate CUFilterTest to JUnit 5 ( # 4540 )
replaced hardcoded " ; " with a dynamic path separator in JavadocReport . java to improve flexibility by allowing different path separators
changed the access modifier of augmentSuccessViewModelObjects method from static to instance to allow access to the method from other classes
hhh - 14499 add test case for presence of person field in metamodel
removed the ` getConf ( ) ` parameter from the ` Outlink ` instantiation in multiple parser classes to simplify the code by eliminating unnecessary configuration parameter
removed the ` LexicalContext ` parameter from several methods in ` Lower . java ` and ` RuntimeCallSite . java ` to simplify method signatures
added imports and updated type expression handling in UseLambdaForFunctionalInterface . java and TypesInUse . java to ensure unused imports are removed
removed the appendClassSelector method call from the classFilesets collection to simplify the code by eliminating unnecessary method calls
removed support for handling Aggregate inputs in HiveCardinalityPreservingJoinOptimization to streamline cardinality optimization by eliminating unnecessary logging for unsupported input types
fix registryevent . getmappings ( ) not work when there be no registry .
swapped the assignments of x3 and y3 with x4 and y4 in the Intersector class to ensure consistent assignment of coordinates
[ java ] add default methods for sbedecodedlength and sbelimit to messagedecoderflyweight .
updated ElasticsearchContainerTest to use a constant for the Elasticsearch version and added a test for client cluster health to ensure compatibility with the latest Elasticsearch version and
peermessage . parse ( byte [ ] , torrent ) should copy the buffer before parse it .
added version ID handling and updated cluster properties in ClusterDefinition and GSInstallerClusterProvider classes to support version - specific information in cluster versions and improve
camel - 14284 : camel - ftp - remove unnecessary configuration method from ftpendpoint
[ zeppelin - 4841 ] interpreter setting should not load dependency
updated local handling in ` Gen . java ` and added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest .
added a check to return early if target cert constraints are - 2 in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java
added a new method ` initAfterFirstDbConnection ` to ` JdbcPostgresqlDAO ` to handle database initialization with same time to ensure compatibility with
added maxMessageSize configuration to SimpleEchoClient and improved buffer size handling in AbstractWebSocketConnection to enhance WebSocket message handling and ensure minimum buffer size is
replaced the ` undeleteAll ` and ` rollbackUndeleteAll ` boolean variables with an assertion for ` pendingDeleteCount ` to improve clarity and
added null checks for scopes in ClientRegistration and updated corresponding test cases in ClientRegistrationTests to ensure robustness by preventing potential NullPointerExceptions and improve
camel - 14284 : camel - chart - fix npe in cartesianproductstream when orderBy be null
updated import statement from ` Assert . assertThat ` to ` MatcherAssert . assertThat ` in ` ClusterEntrypointTest . java ` to utilize the
vmsnapshotmanagerimpl : do n ' t try to restore vms in backedup state if vm be in backup state
hive - 14545 : hiveserver2 should log debug message when hivelog4j be initialize ( sergey shelukhin ,
added a check for non - empty tasks before executing asset cancellation logic to avoid potential null pointer exceptions when processing assets
change the return type of the deletenode method from void to boolean to allow the deletenode ( ) method to return a boolean .
fixed nullpointerexception in jparelationdao and relationcompositeentitydao for relationtypegroup
added checks for empty resultString in Code128Reader and Code39Reader , and implemented null check in FalsePositivesBlackBoxTestCase to improve error
replaced TreeSet with LinkedHashSet for storing CipherSuites in SSLContextImpl . java to maintain insertion order for cipher suites
added a check for control characters in Escaper . java and updated InternationalizationTest . java to ensure proper handling of control characters in the Escaper
refactor SqlSource to use StringBuilder instead of String for type checking and update test method return type to StringBuilder to improve code clarity and ensure proper SQL
updated import statements and improved null checks in InternalMNode . java to enhance code clarity and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a specific page in PagedView to improve scrolling behavior for better user experience
renamed variable ` synthetic ` and ` printedTemplate ` to ` pruned ` for clarity and consistency to improve code readability and maintainability by standard
added setAccessible ( true ) to the method in WidgetInterceptor . java to ensure the method is accessible for accessibility
added a condition to check if the field is not equal to " database . server . id " before setting the literal initializer to ensure that the initializer
updated browser version from " Mozilla / 5.0 " to " Mozilla / 537 . 36 " in AbstractRipper . java
added a menu item to browse the web interface using the PMS server to enhance user experience by providing access to the server ' s web interface
refactor value initialization and generation logic in HandleGetter . java to improve code clarity and maintainability by reducing duplication
added null check for Record creation in EncryptedSlideShow . java to handle ArrayIndexOutOfBoundsException and prevent potential null pointer exceptions
[ hotfix ] [ table - common ] improve logging in queue
call loadbattlepassmanager before avatar postload to avoid null pointer exception
updated Docker image version from 1.0 . 0 to 1.0 . 0 and added SSH rsa support options in the PortForwardingContainer to ensure compatibility with the
added a bigObject array and forced garbage collection in ThresholdTest . java to ensure proper resource management and avoid potential memory leaks
updated logger level checks in StdErrLog . java and added test cases in StdErrLogTest . java to ensure correct logging behavior and improve test
fixed - rremoteservice . getremoteserivce ( string name ) method do n ' t allow name parameter
added method ` isSelected ( ) ` and ` setSelected ( boolean b ) ` for ` RadioButton ` and ` CheckBox ` to manage selection state for
replaced UpNextActivity with NextUpActivity in CustomPlaybackOverlayFragment . java to align with the new navigation functionality
( chore ) camel - http : / / issues . apache . org / jira / browse / amq - 4637 - fix the
updated RedisHealthIndicator to ensure Redis connections are properly closed to improve resource management and prevent potential memory leaks
updated background color handling in ProgramGridCell and Utils classes to utilize a new method for retrieving theme colors to improve code clarity and maintainability by
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and
removed multiple type adapter registrations from the ToolingApiLauncher to streamline the code by eliminating redundancy
removed an unused variable from TestPayloadCheckQuery . java to streamline the code for better readability and maintainability
refactored character printing logic in ConsoleReader and added a test for readline with mask in ConsoleReaderTest to improve code clarity and ensure correct
added user information to the command output in BaseCommand . java to provide visibility into the user context during the command execution
move test class to ` org . graalvm . compiler . api . test ` instead of ` org . graalvm . compiler
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
updated StreamExInternals . java to conditionally use Java9Specific and modified hasDropWhile logic to enhance compatibility with Java 8 and improve test
updated texture file references from " data / wheel . png " to " data / sys . png " and adjusted song duration from 22 to 183
updated the registration and unregistering of the system dialogs receiver to ensure the receiver is properly unregistered to prevent memory leaks
updated import statement for Cluster in HostsRemovedEvent . java to ensure proper functionality of cluster state management
added support for introspection in ClientDetailsEntity and modified token validation logic in ChainedTokenGranter and IntrospectionEndpoint to enhance token introspection
replaced direct calls to ` write ( remoteUser ) ` and ` write ( sessionAttribute . getName ( ) ) ` with HTMLEncode ( sessionAttribute
added a new link for phrase prefix queries in the Query class to enhance query functionality by providing additional span queries
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter . java ` and ` CommentsParser
simplified the condition for checking string literals in binary string concatenation to improve code readability and maintainability by reducing redundancy
updated method signatures in AbstractAssert , Assert , DateAssert , and Descriptable classes to use Object instead of A to simplify method signatures and improve
updated the ` ThrowingFunction ` interface to use ` exception . ThrowingFunction ` instead of ` Object ` to improve type safety and clarity in
added ` getUploaderBehaviour ( ) ` and ` setUploaderBehaviour ( int uploaderBehaviour ) ` methods in ` AppPreferences ` , `
fix ( typefactory ) : initialize final field in constructor
updated BitmapDrawable instantiation to use Robolectric to ensure compatibility with Robolectric ' s Bitmap implementation
corrected a typo in the method name from ` isValidSEnding ` to ` isValidEnEnding ` and added a char variable to
updated PageMarkerResources from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` in ` Workspace . java ` to
add ` ` reinvocations ' ' counter to keep track of the number of backup complete
updated calculations for topPadding in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) for better layout handling
added a break statement in the Recognize . java file to ensure proper termination of a switch statement
added preference handling for locking the home screen in multiple classes to enhance user experience by providing feedback when interacting with the home screen
updated ExcelBatchReader to handle string formulas and added a new test for text formulas in TestExcelFormat to improve handling of different cell types
fixed bug 1325757 - immutablefield no longer ignore assignment in anonymous inner class
added a private ` userAgent ` field in ` CommaFeedConfiguration ` and modified ` HttpGetter ` to initialize the user agent based on application settings
added ` required = true ` to the ` @ XmlAttribute ` annotation in ` AvroDataFormat . java ` and ` BarcodeDataFormat
changed log level from info to debug for file not found messages to improve logging granularity for better debugging
rename QueueTest class to QueuedPipeTest to improve clarity and specificity of the test class
replaced the checkVersion method call with a direct method call to retrieve the unique ID to ensure compatibility with the latest version of the OfflinePlayer
camel - 16265 : camel - core - optimize defaultroutescollector to handle false include pattern
added vertex color functionality in PShape3D . java to enable customization of vertex colors based on graphics properties
updated the ` printForeignKeys ` and ` printForeignKeys ` methods to include a ` isPkColumnFiltered ` parameter and modified related logic to
replaced ShadowMatrix with matrix . getValues in ShadowMotionEvent . java to simplify code by eliminating unnecessary shadow extraction
changed the package declaration of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser `
GroovyEngine . java : simplify class definition handling and improve error handling to enhance code readability and maintainability by reducing redundancy
change package name of hawtio - plugin so that plugin can be configure via servletcontextlistener
removed redundant print statements from NativeCodeGenerator . java to streamline output for better readability and maintainability
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve code clarity and
updated ThrowableAssert _ hasCause _ Test to use ExpectedException and added a new test method for handling different exception types to improve test clarity and ensure
removed flattened and pack string assignments from AutomaticDependencies . java to streamline dependency management by eliminating unnecessary variables
rename ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to improve clarity and consistency in scope handling
simonstewart : add unit test for firefoxdriver . setprofile ( ) and firefoxoptions . setcapabilities ( )
added a ` getDescription ( ) ` method and updated related classes to utilize it to enhance route description functionality and improve code clarity
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of the edge in the ImporterCSV class to ensure the edge ' s weight is correctly set for processing
updated QuotaManagerImpl to use a new method for calculating the cost per hour based on the current month to improve code clarity and maintainability by
updated SQL queries to include adsrc and column default values in DatabaseMetaData . java and adjusted tuple initialization in DatabaseMetaData . java to enhance database metadata
added a null check for binarized sentences in SentimentAnnotator . java to ensure that the parser correctly handles cases where binar
added detailed user information to the ` toString ( ) ` method in ` User . java ` and updated tests in ` UserTests . java ` to
update messagehelper . extractbodyasstring to use message . getbody ( ) instead of extractbodyasstring ( )
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to taskdeploymentdescriptorfactory . fromexecution
fix group visibility check in rosteraccess . cansubscribe ( ) and isgroupvisible ( )
added reference to " maven . test . classpath " in AbstractJRubyMojo . java and removed unchecked suppress warnings in CucumberMojo . java
refactor MethodHandleImpl and MethodHandlesTest to simplify type checking and add user method tests to improve code clarity and ensure correct handling of method handles
added imports for StopFilterFactory , AnalysisSPILoader , and NamedSPILoader , and updated LegacyHTMLStripCharFilterFactory to enhance functionality and
updated width and height comparison logic in URLImage . java to ensure consistent comparison between different image dimensions
added a condition to check if the name starts with " META - INF / " before processing class names to ensure proper handling of class names that
added final modifiers to method parameters and introduced Display imports in ImageDownloadService . java to enhance code clarity and enforce immutability of methods
updated assertions in StackWalkerTest to use a specific expected value based on VersionCheck version to ensure that the test correctly verifies the expected number of values
changed the access modifier of the addViewportJob method from protected to public to allow external access to the addViewportJob method
remove unused parameter ` ` num - output - partitions ' ' from simplewordcount
updated server configuration settings in TestDatabase . java to ensure proper server shutdown behavior during server shutdown
added null and empty checks in NodePathsConvertOperator and modified next method logic in SchemaQueryMergeOperator to improve robustness by handling null or empty
g2m : add harvest time to g2m and g2m so that it ' s easy to understand .
updated font drawing parameters in ParticleEditor . java from fixed framesPerSecond to fixed framesPerSecond and count values to improve rendering accuracy for particle components
added support for " hadoop - env " configuration with a default value of " keyserver _ port " in UpgradeCatalog240 . java to
added a transparent background color to the SvgViewerFactory to improve the visual appearance of the Svg viewer
updated import statements and annotations in ShadowKeyguardManagerTest and ShadowKeyguardManager to ensure compatibility with API level M in ShadowKeyguardManager and
refactor ` containsExactly ` method to accept ` varargs ` instead of ` rest ` to simplify parameter handling and improve clarity in the method
updated Bucket4jFilterFunctions to use ` refillGreedy ` and improved key resolution logic to enhance bandwidth management and ensure valid key
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance functionality for german language analysis and loading of text files
added support for post - execution hooks in the Generator and SemanticAnalyzer classes to enhance functionality by allowing hooks to evaluate lineage based on query properties
handle NoClassDefFoundError by setting supported to Boolean . FALSE to ensure proper handling of NoClassDefFoundError during runtime
refactor TraceWebFilter to use SpanAndScope for span management to improve clarity and maintainability of span management in the application
updated exception handling to check for null cause before setting the exception message to prevent potential NullPointerException when getCause ( ) is null
updated SolrServerException instantiation to include the base URL in addition to the original exception to improve error handling by providing additional context for the original exception
modified the landscape setting logic in HSSFPrintSetup . java to correct the logic for returning the landscape state
modify return statement to handle null object case to ensure safe handling of null values in JavaVoidObjectInspector
added validation to ensure argument names do not contain tabs or spaces to improve error handling for invalid argument names
added a background listener for location updates and modified location request logic to utilize it to enhance location update functionality by allowing customizable background classes
changed the condition from checking primitiveType to checking if it ' s equal to GL10 . GL _ POINTS to ensure proper handling of primitive
trufflestring . toindexablearray ( byte [ ] , byte [ ] ) now handle zero - length array correctly .
added a method to set the command list based on the current state of the ComboBox to ensure the correct command list is used in the ComboBox
nifi - 10237 : escape tls alias filenames with forward slash and back slash
updated ZkCLI command execution commands to use localhost instead of hardcoded values to improve flexibility and maintainability of the command execution process
updated equality checks in ` FirmwareUpdateProgressInfo ` , ` BridgeHandler ` , and ` WemoLightHandler ` to use ` getStatus (
added a conditional check for remoteGrpcStatus before posting console events to ensure events are only posted when the remote GRPC status is OK
refactor method parameters in XYItemRenderer and related classes for consistency to improve code readability and maintainability
fix tick entity not be add to the chunk if they do n ' t exist
[ scene2d ] add support for error code from gl10 . egl10 .
added a method to retrieve supported locales and updated error handling in InfoRequestHandler to ensure that only supported locales are processed and improve error messaging for unsupported locales
updated the server URI format in RFC2616BaseTest . java to use " http : / / myhost : 1234 / tests / " instead
added a call to addToHelperList ( ce ) in Construction . java to ensure proper addition of elements to the helper list
added a condition to handle cases with an empty escape sequence in GlyphLayout . java to ensure proper handling of empty escape sequences in the layout logic
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security management and improve code readability
modified ` populateDirectoryList ( ) ` and ` browseToRoot ( ) ` methods in ` ReceiveExternalFilesActivity . java ` to handle null
added null check for m _ serviceLoaderClassLoader before loading ITestListener to avoid potential NullPointerExceptions during ServiceLoader loading
removed debug log statement from BarrowmanCalculator . java and adjusted deltap calculation in TubeCalc . java to streamline code by eliminating unnecessary
updated column assignment logic in TimelineControllerImpl to handle Node and Edge cases to ensure correct column retrieval based on object type
( chore ) camel - core : add hook to register extra component in basebrokerstarter
added a test case for bug4658 in MultiCfQueryExecIT . java to verify the behavior of query execution with different column types
peergroup : do n ' t filter peer that do n ' t support witness
fix the builder not be able to generate cycle . close # 118
removed getter and setter methods from ConfigNodeConfig and updated retry attempts in RatisClient to streamline configuration handling and improve retry logic for consensus snapshot
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a conditional check for the ManagedService annotation before unregistering the object to ensure that the JMXHelper is only unregistered when the annotation is
tika - 2019 : fix packageparser to detect non - unicode entry name .
added a new file ` TestSplitThruPhiDivMod . java ` with multiple test methods for mathematical operations to ensure correct behavior of division operations
added methods to lookup generic interfaces and superclass types and updated method names for improved type handling to enhance type safety and maintainability of generic type lookups
updated the default byte size from 512 to 1028 in ByteArrayOutputStream . java to optimize memory usage and improve performance
added TODO comments to the languagesExcluded array in PlayerSettingsScreen . java to indicate potential issues with translated entries and improve code clarity
updated byte array initialization and handling logic in TransferCompletionHandler . java to ensure that the array does not exceed the expected size of the transfer data
move windowfocuslistener from addwindowfocus ( windowevent ) to addwindowactivated ( windowevent ) .
refactor error handling in SemanticAnalyzer to check for null source before throwing an exception to improve robustness by preventing potential NullPointerExceptions
added scaling functionality for aabb in the SkeletonRenderer class to improve the rendering of AABB in the skeleton
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to provide a default
added SpringWebConfig . java with @ ComponentScan annotation to enable component scanning for Spring Web applications
removed the getAccount ( ) method from UserListItem . java to streamline account retrieval process for better maintainability
updated ShadowPackageManager and ShadowApplicationPackageManager to handle null values for processName and packageName to ensure proper handling of null values and prevent potential NullPointerExceptions
refactor AvailableSettings class to improve code organization to enhance maintainability and readability of the codebase
added ReceiptCapsule imports and methods to TransactionTrace class for transaction management to enhance transaction processing capabilities and improve code organization
add client property ` ` hazelcast . client . shuffle . member . list ' ' to control the number of member in the cluster
replace Text with CrawlDatum in SegmentReader . java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
updated ` CONFIG _ NAME ` to " tsfile - engine . properties " and replaced ` int fetchSize ` with ` ThreadLocal ` for thread
corrected a typo in the error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java
removed unused import of ExecutionContext from TaskletStep . java to clean up the code and improve readability
initialized the title variable to an empty string to ensure that the title variable is always initialized to an empty string
fix ( okhttp ) : fix npe when no body be present in response
deprecate the old discovery interface in favor of the new one
change macadapter to register macevents ( instead of create a new instance ) .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity and functionality of
added a return statement to the toEnum method in HandlerLibrary . java to ensure proper handling of enum types in the code
made the ` hideUnprivilegedObjects ` variable final to ensure immutability of the ` hideUnprivilegedObjects `
change log level from info to fine for scoring thread , and add test for concataudiofiledatasource in audiodatasourcestest
added a conditional check for Android Q in IOUtils . java to save the video URL for compatibility with Android Q
fix issue with setvariable ( ) be not update correctly when setvariable ( ) be call
refactor EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , and SamlCompliantUniqueTicketIdGenerator classes
replaced manual logger retrieval with computeIfAbsent in MavenLoggerFactory . java to simplify code and improve readability
hbase - 20536 hbaseobjectwritablefor96migration remove outputstreamoutputstream since it be not use anymore .
updated the configuration for " hive . stats . column . autogather " in the TestAcidOnTez . java file to ensure
changed log level from info to debug for enhanced class logging to improve logging granularity for better debugging
added a static method to retrieve the default provider name in the Platform class and updated StandardNames to use this method to improve encapsulation and
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to enhance testing capabilities by excluding annotated fields from the instance
added error handling for missing class and method names in TestSuiteBuilder . java to provide clearer error messages when onlyRun and testMethodNames are
updated GroovyAutoComplete and GroovyLanguage classes to improve handling of empty and empty identifiers and prefix computations to enhance code readability and maintainability by ensuring
import : use graphhopperosm instead of com . graphhopper . reader . osm . graphhopper . graphhopper so that it can be
simonstewart : add retry - based configuration to the clientclient
removed the ` final ` modifier from ` mHideSysUiScrim ` and added logic to manage the ` mHideSysUiScrim `
updated method signatures and added cancellation logic in OkHttpCall . java to improve code clarity and ensure proper cancellation of requests
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and functionality to enhance swipe detection logic for better user experience
updated the RequestMatcher interface to extend org . springframework . security . web . util . matcher . RequestMatcher to ensure compatibility with Spring Security '
updated ` DeferredAttr . java ` to include ` IF ` in the list and added a new abstract class ` ImplicitLambdaConsideredFor
[ j2kt ] fix compilation error in j2kt integration test .
added unit tests for ` applyQualifiers ` method in ` DeviceConfigTest ` and updated ` setDimensions ` method in ` DeviceConfig ` to
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated Timestamp initialization in PinotDataTypeTest . java to improve error handling and ensure
updated the icon resource in RootCursor . java to use mipmap . ic _ launcher instead of drawable . logo to improve visual representation of the
added content text to errorBuilder in FileUploader . java to improve error handling by providing clearer error messages
refactor ConcurrentHashMap class to improve thread safety to enhance performance and maintainability of the code
added methods for adapting user trades and trades in AbucoinsAdapters and AbucoinsTradeService classes to enhance trade processing capabilities
updated claimPlot method calls and added new case handling in Delete , Delete , and SetBlockFast _ 1 _ 8 . java to improve plot claim
[ java ] : fix htmlunitdriver for firefox and ie .
added handling for VARBINARY data type in BlobType . java to ensure correct data type is returned for VARBINARY definitions
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56026 - fix cookie
added synchronization to the language . simpletypemap cache to prevent concurrentmodificationexception
updated context handling in InboundBuffer to use ContextInternal instead of Vertx to ensure proper context validation for operations on the correct Vert . x
added a new test method ` deadServerNoTimeout ` and modified timeout settings in ` LdapTimeoutTest . java ` to improve timeout handling and ensure
corrected the spelling of " UniocdeData . txt " to " UnicodeData . txt " in the usage message to ensure consistency in
camel - 14263 : camel - cxf - add inout header to the in message header relay test
refactor multiple UI component classes to improve code organization to enhance maintainability and readability of the UI components
added handling for BoosterSet in ComponentAssemblySaver and changed return value from true to false in BoosterSet to ensure proper handling of Boo
add proxy authentication to jabref by default
renamed ` BLOCKCHAIN __ FORK _ COUNT ` to ` BLOCKCHAIN _ FORK _ COUNT ` and updated related methods accordingly
replaced InternalError with a return statement in Class . java to ensure compatibility with JEP 359 support and improve error handling
updated logging imports in TestIPCUtil . java to use Apache Commons Logging instead of Mortbay logging to improve logging consistency and maintainability
removed chunked transfer handling from the request handling in NettyRoutingFilter . java to simplify the code and improve performance by eliminating unnecessary chunked transfer
added clearAttributes ( ) method in PatternTokenizer . java to ensure consistent attribute clearing in the tokenizer
added a polling period parameter and improved error handling in VerificationAfterDelayImpl and After classes to enhance the verification process by allowing a longer polling time
added a compaction feature to the table masking and filtering logic in the SemanticAnalyzer and SessionState classes to enable better control over table masking
refactor DockerInterpreterProcess to use intpGrpPath instead of zeplIntpPath and introduce FileFilterUtils for file filtering to improve
hbase - 26105 fix typo in hbaseadmin . gettableregions ( )
added an @ Ignore annotation to the PartialEscapeAnalysisTest class to temporarily disable the test during development
updated the ` calcXBounds ` method calls in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
simple sax parser now properly release the contenthandler and errorhandler
added buffer release logic in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to include a recipe
added a null and closed check before closing the result set to prevent potential NullPointerExceptions when the result set is closed
updated driverVersionMajor and driverVersionMinor values from - 1 to 6 to ensure compatibility with the latest Derby versions
fixed bug 1260606 - stringbuffer . isliteral ( ) return false if there be no literal
removed error logging from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary error logging
updated the return type of createDb ( ) from void to Connection and added connection closure to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code organization and maintainability
hbase - 24119 add max _ compaction _ max _ size _ offpeak option to disable off - peak compaction
updated BitstampDepositAddress to handle both " address " and " response " attributes and added JSON unmarshalling tests to improve the handling of deposit addresses
replaced IllegalStateException with response . abort ( new IllegalArgumentException ( " Buffering capacity exceeded " ) ) in BufferingResponseListener . java to improve
updated link path handling in ProjectView . java to ensure correct path resolution for deleted directories
updated InvocationFinishedEvent to implement MetricsEvent and modified related methods to use InvocationType instead of operationType to enhance event handling capabilities and improve thread safety
fix test that fail if networkinterfaces do not support multicast .
refactor conditional check for valid checksums in ChangeSet . java to improve code readability and maintainability
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to ensure that the clone method does not throw an UnsupportedOperationException
updated Circle . java to use radius * y instead of sqrt to improve accuracy in circle calculations
updated frequency band assignment logic in P25Channel . java and added overrides in P25ExplicitChannel . java to ensure correct handling of frequency band
replaced the ` tapSquare ` variable with ` tapRectangleWidth ` and ` tapRectangleHeight ` in the ` GestureDetector ` class to improve
modified the DEFAULT _ REPLICATE _ ON _ WRITE constant from true to false to disable replication during write operations
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` class and implemented date formatting in ` Util ` to
added ` getDelegate ( ) ` methods to ` TraceCallable ` , ` TraceRunnable ` , and ` TraceRunnable ` classes , along with corresponding
updated error handling in FileActivity and added a broadcast receiver in FileDisplayActivity to enhance user experience by providing clear feedback on synchronization events
added error handling for writing to the QUIC connection stream in ForeignIncubatorQuicheConnection and JnaQuicheConnection
added a boolean parameter to the method call in JavascriptContext . java to enhance functionality by allowing additional configuration options
removed the Align parameter from TableCell constructors in BaseTextFormattingHelper and TableCell classes to simplify the TableCell instantiation by removing unnecessary parameters
added a new file ` TracingAutoConfiguration . java ` for automatic tracing configuration to enhance tracing capabilities in the application ' s tracing features
pdfbox - 4892 : fix typo , a suggest by valerybokov
( chore ) camel - server : decrement all queryable segment before return them to the tabledatamanager
refactor VertxBufferTest . java for improved readability to enhance maintainability and facilitate future updates
[ bug - 66157 ] fix bug in hsmf submission chunk that contain hyphen .
changed the access modifier of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports for SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation to improve code clarity and reduce unnecessary dependencies
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it to improve exception handling for MongoDB data integrity violations
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice
updated the ` bitsToHumanReadable ` method to use a mapping for MIME type to human readable strings to improve clarity and functionality of MIME type mapping
remove unnecessary check for instance of TieredMergePolicy in TestUpgradeIndexMergePolicy and add a test method in TestMergeOnFlushMergePolicy
added a check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
updated error logging link in CpuNDArrayFactory . java for clarity to improve user understanding of CPU CPU usage instructions
modified the ` loadSettingModels ` method to accept an ` InputStream referencePropertiesInputStream ` parameter to enhance flexibility by allowing the loading of configuration properties from
added null checks for ` incoming ` fields , ` DocsEnum ` , and ` LeafReader ` constructors in ` FilterTermsEnum ` to
added support for default key size in jcecrmfencryptorbuilder and add test for keysizes
removed unused constructors and improved exception handling in NetSocketReader and SocketUtils classes to enhance code clarity and reduce redundancy in exception handling
removed @ Inject annotations from multiple Java classes to clean up unused dependencies to improve code clarity and reduce unnecessary dependencies
updated the expected size in BundledDistributionTest and added tests for database users in PostgreSQLTest to ensure tests reflect the correct number of
[ hotfix ] [ stream ] add pipeline . name configuration option to streamexecutionenvironment
refactor scale calculation to differentiate between two - panel layouts to improve layout responsiveness based on device profile type
fix ice plains biome not be able to generate snow .
removed DateTimeZone dependency from getMinTime method calls in StorageUtils . java to simplify method signatures and improve code readability
[ j2kt ] make ` ` isqualified ' ' field optional for this reference .
[ xhamster ] fix xhamster ripper to work with xhamster .
fix infinite loop bug in glowworld . getentities ( ) .
fix oracle dialect to use ` ` . ' ' instead of ` ` . ' ' .
fix a typo in the condition check for the end of the path
added a variable ` mNumberOfAllFiles ` to the ` FileMenuFilter ` class and modified its constructor and methods accordingly to improve flexibility in file
[ java ] : fix termoffset calculation for network publication .
refactor GuildUpdateOwnerEvent class to improve code structure to enhance maintainability and readability of the code
fix inportalticks not work in creative mode
added compression functionality and improved layout handling in ClusterMonitorTileSkin and ClusterMonitorTileSkin to enhance visual consistency and support compressed data display in the chart
codectemplate : update copyright year to reflect recent change
replaced ` int ` with ` long ` for length calculations in ` Base64 . java ` to ensure proper data type handling and prevent potential overflow issues
removed unnecessary null check for header in RendererConfiguration . java to simplify the code by eliminating unnecessary null checks
cloudstack - 4892 : do n ' t allow vm scaling cpu and memory in same vm with same service offering .
replaced wildcard imports with specific imports for Hitbtc - related classes and refactored order builder instantiation to improve code clarity and maintainability
corrected the spelling of " idleCount " to " consecutiveIdleCount " in LLRealtimeSegmentDataManager . java to improve code
updated the service description in JRubyScriptEngineFactory from " jruby " to " jrubyscripting " to clarify the purpose of the service
updated the variable name from ' name ' to ' displayName ' for clarity to improve code readability and maintainability by using a more descriptive
updated the condition in ParticipateAssetIssueActuator to include a check for negative exchange amounts to ensure correct handling of negative amounts in
removed a loop condition that increments 10 times in FeedUtils . java to streamline code by eliminating unnecessary loops
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF4 parsing functionality to ensure
[ calcite - 6092 ] do n ' t cast time value in sqloperatortest if cassandra - 6092 be false
remove unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistent formatting
added methods to quiet close multiple AutoCloseable instances in CloseHelper . java to improve resource management and prevent potential null pointer exceptions
updated the confirmation message from " confirmation " to " common _ yes " in the RemoveFileDialogFragment class to improve user experience by providing a clearer
added null checks before drawing the image in Pixmap . java to prevent potential NullPointerExceptions when the dimensions are not valid
replaced reflection - based reflection calls with reflection - based method invocation in UnsafeAccess . java to improve code readability and maintainability by utilizing
fix fqdn regex pattern and add unit test
replaced boolean conflict variable with long conflicts in CachedRowSetWriter . java to improve code clarity and maintainability by using a more descriptive variable
add support for pubspec . yaml file in sdkutil and versionprovider .
added a conditional check before assigning the reference value in ReferenceMemory . java to ensure the reference is only assigned when the reference is the current instance
added seed file validation and logging in Injector . java to ensure that non - file inputs are injected correctly and improve error handling
added a condition to check if ` hideOriginal ` is true before showing the original view to ensure the original view is only visible when explicitly hidden
updated maxNodes calculation and condition checks in DefaultLoopPolicies . java to ensure that maxNodes is non - negative to prevent potential index out of bounds
added logging for unsupported UVCoordinatesType and introduced a method to check if the UVCoordinatesType is supported before processing to improve error handling and
added error handling for file deletion in EncodeActivity and improved validation in SupplementalInfoRetriever to enhance error handling and ensure valid input parameters
add seek ( ) and close ( duration ) method to tracingconsumer and tracingproducer
updated the substring method in HandleDAOImpl . java to adjust the handle length to ensure correct retrieval of the handle set based on its length
replaced the manual addition of elements to the convertedValsList with a direct addition to the collection to simplify the code and improve readability
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used
added nightly version warning for Universal Gcode Sender in MainWindow . java to inform users about potential issues related to nightly builds
update feedbacksessionresultsbundle to sort response by team name by recipient email
updated return statement in UnnecessaryThrows . java to improve clarity to enhance readability and maintainability of the return statement
renamed ` CacheController ` to ` cacheData ` in multiple files to improve clarity and consistency in naming conventions
replaced instances of ` realObject . getApplicationContext ( ) . startService ( ) ` and ` realObject . getApplicationContext ( ) ` with `
refactor StatisticsServlet class to improve code organization to enhance maintainability and readability of the code
updated configuration update logic for systems running KitKat and above to ensure compatibility with devices running KitKat and above
added a new constant for the default stack repo update link and a corresponding test case to ensure that the latest URI exists before updating the repository ' s
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to prevent potential NullPointerExceptions when handling index names
added package imports for XML resolver helpers and readers in CheckPackageAccess . java to enhance access control for XML resolver services
renamed methods ` save ` and ` persistExecutionContext ` to ` add ` and ` updateExecutionContext ` across multiple classes to improve clarity and consistency in method
graphutil : replace loopbegin with loopbegin for loopexitnode
replaced RecyclerView with WidgetsRecyclerView and updated related methods in SearchAndRecommendationsScrollController and SearchAndRecommendationsRecommendationsScrollController to utilize
added a conditional check for terminal support in ConsoleReader . java to ensure that terminal functionality is only enabled when supported
changed the data type of ` timeAllowed ` from ` Long ` to ` Integer ` in ` CloudExitableDirectoryReaderTest . java ` and
updated session validation logic in AbstractSessionCache and added session validation test in RemoveSessionTest to ensure sessions are valid and improve test coverage for session management
added null check for columnNames before processing in ChangedIndexChangeGenerator . java to prevent potential NullPointerException when columnNames is null
replaced Vector with ArrayList for managing RadioButton instances to improve performance and simplify the management of RadioButton instances
updated UserManagerCompat to extend UserManagerCompatVL and introduced a new UserManagerCompatVM class to enhance user management functionality for different Android versions
added ` getDatabaseMajorVersion ` and ` getDatabaseMinorVersion ` methods to ` MockDatabase ` , ` AbstractDatabase ` , and ` HibernateDatabase
updated the handling of mismatched ActionGraphs and improved error messaging in ActionGraphCache . java to enhance clarity and maintainability of error reporting for
added two new classes , LockDatabaseDesc . java and UnlockDatabaseDesc . java , to the plan package to provide a description of LockDatabase and
refactor RankingTopComponent , RankingUIModel , RankingToolbar , nodeTransformer , and edgeTransformer properties to improve code
added handling for disconnect messages in ` HandshakeHandler . java ` and updated logging in ` NodeImpl . java ` to ensure accurate disconnect statistics are logged
added a test method ` testSetDeleteSG ` and ` testDeleteSG ` in ` IoTDBAuthorizationIT . java ` to verify the
chore : [ document ] update documen namespace to match the one in the documen api
added type validation for named variables and improved type checking for missing types to enhance type validation and provide clearer error messages for missing and malformed variable types
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to enhance test class lifecycle management
replaced specific buffer imports with a wildcard import and modified constructor and error handling in CountersManager . java to enhance code readability and maintainability
removed the ` toString ( ) ` method and updated logging statements in ` MultiSteps ` and ` SendEmail ` classes to simplify logging and improve read
added logic to clone joinKeys from joinDesc in JoinDesc . java to ensure joinKeys is correctly initialized and cloned from joinDesc . joinKeys
updated WebAuthnConfiguration to use PrincipalResolver for authentication handler registration to enhance flexibility in principal resolution during authentication process
modified the ` addSettingsFromFile ` method to accept an additional ` ImmutableList < Path > ` parameter and updated related tests accordingly to enhance functionality by allowing
changed variable declarations from non - final to final for several fields in Oracle . java to enforce immutability and improve code safety
[ hotfix ] [ runtime ] disable unaligned checkpointing until rescaling of unaligned checkpoint be complete
[ hazelcast ] [ sql ] do n ' t throw unsupportedoperationexception for unsupported order by
refactor CompileTheWorld to use static println methods for better encapsulation to improve code readability and maintainability by reducing duplication
added a check for instance of LocalVariable before throwing CannotDelambaException to ensure proper exception handling for local variable types
added support for MySQL database ' s timestamp column in CreateTableGenerator to ensure correct handling of timestamps in MySQL databases
added class loader management in EnvConfiguration . java to ensure proper context class loader management and avoid potential memory leaks
added a conditional check for stageNr and set ejection delay based on motorConfig to ensure proper motor configuration when stageNr is zero
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related method calls to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
refactor the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance the issuer resolution
updated the handling of null ` coll ` in ` ClusterState . java ` to improve clarity and handle cases where ` coll ` is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in ` TextArea .
added support for ` foreignDatabaseName ` and ` foreignSchemaName ` in the ` ForeignKeyColumn ` class and updated related methods accordingly to enhance flexibility
[ java ] throw timeoutexceptions on election failure .
replaced static import of Shadows . shadowOf with a private method Shadow . extract for PackageManager in ShadowActivity and ShadowBluetoothDevice to
added error handling for null or empty selection root in FileSelection . java and created corresponding test cases in TestBugFixes . java to improve robust
deprecate item . oninventorytick ( ) in favor of item . oninventorytick ( )
fix ( io ) : write the generated zip file in the wrong place
added null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when the activity is not initialized
updated widget binding logic in AppsCustomizePagedView and Launcher classes to handle widget options more effectively to improve widget management and ensure correct
added new CAPABILITY constants for air pressure , air quality , and voc ppm in EcobeeSensorThingHandler . java to enhance sensor
fix checkstyle violation in the facebook api .
added environment variable " AAPT " and " AAPT2 " in Genrule . java and updated tests in GenruleTest . java to include
truffle : do n ' t dump access table if truffleinstrumentbranch = true .
added null check before disposing of the message to prevent potential NullPointerException when message is null
updated the visibility of the ` db ` variable and made the ` init ( ) ` method public in multiple classes to enhance encapsulation and
[ hotfix ] [ log4j ] fix logwatcher not implement for log4j
replaced printStackTrace ( ) calls with return statements in CategoryPlotTests . java to improve error handling and simplify assertion logic
replaced ` ByteArrayOutputStream ` with ` SmallByteArrayOutputStream ` in ` IOSImplementation . java ` and introduced a new ` SmallByteArrayOutputStream ` class
[ jsweet 2 catch - up ] refactor shader . getAttribute to use intmap instead of stringmap .
updated JDBC connection string from " territory = en _ US " to " shutdown = true " in AbstractDIHJdbcTestCase . java to ensure proper
do n ' t print the last exchange completed date if it ' s null
updated TestHtmlTag and TestUseOption classes to include default language handling and improved HTML output validation to enhance documentation clarity and ensure correct language handling in
modified the condition to check if the result is incomplete and has more items to improve completion logic to handle incomplete results gracefully
updated command - line arguments to use ` timeColumnName ` instead of ` TimeFieldSpec ` to improve clarity and functionality of the integration test command
updated output format handling to use a consistent file extension based on the output format to ensure compatibility with different output formats in the application
modified the condition to check if minQsbMargin does not exceed hotseatBarBottomSpace to ensure proper handling of QSB spacing when the
use objects . equal ( ) instead of object . equal ( ) in animationlist and gltfmodelkey
added a ` _ date ` field and its setter in ` AbstractGenerator ` , implemented date handling in ` Generator ` , and modified ` HttpConnection
replaced ` Adler32 ` with ` CRC32 ` in the ` Store . java ` file to improve code clarity and maintainability by using a
make xen . heartbeat . interval default to null so that it ' s easy to configure
added warning for zero area and modified conditional logic in FinSetCalc . java to improve clarity and functionality of geometry warning handling
updated JSON serialization in ElasticsearchIO . java to use StdSerializer for DocumentMetadata to enhance data integrity by ensuring proper serialization of DocumentMetadata objects
hhh - 13636 add trunc function to commonfunctionfactory for h2 and oracle
[ hotfix ] [ runtime ] add memory pool error message for gauge conversion
added useJavaScript flag to UserContext and modified return statements in UserContext , FileAccess , and FileTreeNode to enhance JavaScript usage and improve error handling
[ hotfix ] [ runtime ] improve error message for @ runtimetype . prototypedby annotation
updated the BACKFILL string from " / generateAnomaliesInRange " to " / replay " to align the BACKFILL
updated DataWord instantiation to include an ID of 1 in PrecompiledContracts . java to ensure accurate identification of the latest proposal number
updated the handling of child views in AllAppsContainerView to use getChildCount ( ) instead of AdapterItem to improve code readability and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated comments in ResourceHandlerTest . java to clarify the correct behavior of ContextHandlerCollection in ResourceHandlerTest . java to improve code readability and
removed the conditional check for WORKSPACE _ CUSTOM in Cling . java to simplify the code by eliminating unnecessary checks
remove assertion that be n ' t need .
added @ ignore annotation to test to make it work for unshadowed class .
updated import statements to use the latest version of ItBit library across multiple demo files to ensure compatibility with the latest ItBit library versions
ww - 4071 use isDefined ( ) method to get profiling parameter
changed class declarations from ` public ` to ` public final ` and added private constructors to ` Utils ` , ` ApplicationUtils ` , and `
fix potential resource leak in useraccountvo . getuseraccounts ( )
replaced instances of ` o . getClass ( ) . getName ( ) ` with ` " java . util . Vector " ` and ` java . util
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to provide more context about the table ' s retention time
added trim ( ) method to fragmentList condition in QueryExecutorImpl . java to ensure proper handling of empty string inputs in the condition
fix modfileresourcepack . getfilepath ( ) to use modfile . getfilepath ( ) instead of path
removed unnecessary TransformerBuilder . Node and TransformerBuilder . Edge references and streamlined the handling of TransformerBuilder instances to improve code clarity and maintainability by
added checks for task view focus and visibility in RecentsView . java to improve user experience by ensuring only focused tasks are processed
updated the ` calculate ` method to return a ` BMIViewObject ` instead of a ` Map < String , String > ` across multiple classes
removed the Comparator dependency from the thenComparing method in QueryCommand . java to simplify the comparison logic for better readability
fix a bug where you could get a block that do a lot of damage .
[ openj9 ] fix for ` ` jdk _ java _ command _ line ' ' not work in window
added support for custom plugin properties in the OptionsParser and corresponding tests to enhance the functionality of the OptionsParser to support custom plugin properties and ensure correct
updated null check for hashTable in HashJoinBatch . java to use isEmpty ( ) method to improve code readability and prevent potential NullPointerExceptions
fix test for java . sql . timestamp . of ( ) and java . sql . timestamp . ofepoch ( )
[ java ] remove unused variable in clusteredserviceagent . connect ( ) .
added a condition to check if the compilation threshold is not compiled before proceeding to ensure the code only executes when the compilation threshold is zero
test : add db2 , h2 , and db2 online test
refactor TogglableFlag to replace getInitialValue with getOverridenDefaultValue and add a change listener for feature flags to improve default value
updated logging statements in DockerClientFactory . java to use placeholders instead of hardcoded strings to improve readability and maintainability of log messages
added a platform check to prevent execution on Android in SnapshotScreenListener to improve user experience on non - Android devices
refactor assertions in RoutesTest to use Hamcrest ' s assertThat method to improve readability and maintainability of the test code
added new functional interfaces for BytePredicate , FloatPredicate , ShortPredicate , and ShortToLongFunction in the common function package to enhance functionality for
updated the ` getSubsColor ` method to return a string instead of an integer and modified its return type to allow for more flexible subs color
added a conditional check before deregistering the invocation registry to avoid unnecessary deregistering of the invocation registry if the future completes
replaced queue . append ( frameBytes ) with output ( null , null , null ) in AbstractWebSocketConnection . java to simplify the code and improve
added a check for the " redirected " flag in LoginActivity and set it to true in SignupActivity to ensure that the activity launches only
added ShadowCheckedTextView class and integrated it with Robolectric to enhance testing capabilities for CheckedTextView in Robolectric
added Serializable interface to ParserState and changed variable types to transient in AccessorProperty , AccessorProperty , and Property classes to ensure proper serialization of
added " identrustdstx3 [ jdk ] " to the VerifyCACerts class to support verification of the identrustdstx
removed redundant setting of TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline code by eliminating redundancy
fix incorrect occupant ' s nick in multiuserchattest .
updated session initialization to accept a Map < String , Object > instead of a volatile Map < String , Object > for context to improve session management and
replaced instances of ` writer . setMergeScheduler ` with ` writer . getConfig ( ) . getMergeScheduler ( ) ` in ` CreateIndexTask
refactor code to use ` pageWidthValue ` and ` pageHeightValue ` instead of direct calls to ` Character . getType ( ) ` to
added imports for ComputedDateValue and ComputedNumericValue , and refactored error handling in AddDefaultValueChange , AbstractDatabase , and
updated NbtScoreboardIoService . java file to improve functionality and maintainability of the service
updated SAML2Configuration , SAML2FileSystemMetadataGenerator , and SAML2ServiceProviderMetadataResolver to check if the resource is writable before storing metadata to improve
make graphprinter and idealgraphprinter public so that it can be override by subclass .
added BigDecimal import and modified order ' s average price calculation in HuobiAdapters . java to ensure accurate calculation of order ' s average price
updated ProjectionOperation and TypeBasedAggregationOperationContext to use the target field instead of the name and changed the type of fields from String to Field to improve
simplified the viewer addition logic in FakePlayer . java to improve code readability and maintainability by reducing redundancy
added constant state management to FolderAdaptiveIcon , ShiftedBitmapDrawable , and Workspace classes to improve code robustness and maintainability by util
refactor connection handling in SPDYClient to use controller instead of compression factory to improve clarity and maintainability of connection management
fix : serialize protostuff object with null value ( # 11824 )
pdfbox - 4071 : fix formatting , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code structure to enhance maintainability and readability of the code
do n ' t show axis axis if they do n ' t exist
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` to improve memory management by
[ hotfix ] [ runtime ] fix checkstyle violation in xmlworkflowserviceimpl
added SSL trust manager functionality to CustomUrlJob and created a new CustomUrlTrustEverything class to enhance URL security by certifying connections based on
use mediaformat . getrealusedclockratestring instead of mediaformat . getclockratestring for g722
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
updated the method to return the module name instead of the product name in ProjectGenerator and added a method to set the module name in AppleLibraryBuilder
[ hotfix ] [ runtime ] fix lock issue in testslot
# 118 - add support for findids ( ) method in findids ( )
updated WebSocketServletRFCTest . java to replace closeFrame with rbuf and modify parsing logic to improve readability and ensure correct buffer handling during
[ wasm ] fix nullpointerexception in wasmfunctionnode .
add ` ` ttl ' ' to log table creation query ( # 11486 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomChangeWrapper , CustomPreconditionWrapper , and XML
updated DeploymentExceptionTest . java to use Jetty ' s Server and HandlerCollection instead of Java ' s QueuedThreadPool to improve server management and
added error handling for initialization in CommonsApplication and modified VectorDrawableCompat initialization in NearbyController to improve robustness by catching exceptions during initialization
added null and empty check for objectName before returning it to avoid potential NullPointerExceptions when objectName is null or empty
updated error message for file access in Command . java and TestPrint . java to improve clarity of error messages for file access issues
[ hotfix ] [ table - common ] use static final string for plannerclass and executorclass in environmentsettings
updated variable names for subject and issuer in KeyTool . java and modified subject assignment logic in Resources . java to improve code clarity and handle null values
added a deprecated annotation to RuntimeOptions . java to indicate that the option is outdated and should no longer be used
replaced manual byte buffer encoding with a direct string conversion method to simplify code and improve readability
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism for evaluating permissions based
added option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and modified ` LineReaderImpl ` to
masterfilesystem : do n ' t ignore server that do n ' t exist in the online server list
updated exception types in P2pException and related classes to use BLOCK _ MERKLE _ ERROR instead of SIGN _ ERROR to improve
refactor file handling in ExpandWar . java for improved clarity and consistency to enhance code readability and maintainability by reducing redundancy
do n ' t swallow exception in defaulthttpclient . onerror ( )
changed the center method from ' center ' to ' centerAbsolute ' in the Picker class to ensure the component is centered relative to its absolute position
[ hotfix ] [ network ] fix npe in networkbufferpool . requestmemorysegments
updated MBeanServer initialization and release logic in TestJmxIntegration . java to ensure proper resource management and prevent memory leaks
replaced AndroidJUnit4 runner with a RetryTestRule for test execution to improve test reliability by allowing retries on failed tests
refactor querystatemachine constructor to use transactionmanager . isautocommit ( session . getrequiredtransactionid ( ) ) .
fixed checkstyle issue in generator / csv module
added support for " javax . microedition . khronos . opengles . GL " in the InstrumentationConfiguration to ensure proper acquisition of
[ hotfix ] [ test ] fix checkstyle violation in streamtasktimertest
refactor URI handling in Request . java and add a new test for CONNECT method in RequestTest . java to improve request URI handling and ensure
updated ` MainApp ` and ` WhatsNewActivity ` classes to use ` getLegacyAvailableStoragePoints ` instead of ` getAvailableStoragePoints
added sessionavailable and sessionunavailable methods to the SessionManager class to improve session management by notifying listeners when a session is available or unavailable
added a method to add the " liquibase . pro " package to the package scan in ServiceLocator . java to facilitate package scanning for Liquibase
replaced the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` and removed the ` syncedFolderList ` parameter to
updated the ` loadWithNewGlobal ` method to accept an additional array of arguments to enhance functionality by allowing more flexible argument handling
updated the handling of the startIndex variable in FastPathResolver . java to correctly increment the startIndex value to ensure correct index indexing based on
updated weigher method calls to use getRetainedSize ( ) instead of length ( ) for footer and stream to ensure accurate representation of retained size
rename method ` hasRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple files to improve clarity and consistency in naming conventions
drill - 3596 : add support for ` ` lead ' ' and ` ` lag ' ' function in window frame
added a line to clear headers in the proxy request to ensure proper handling of request headers during processing
added a check to skip tests if SA attach is not expected to work to ensure tests are skipped when SA attach is not expected to work
added null check for bgColor in GraphicsDevice . java and created a new TranslucentWindow class for testing translucency support to ensure safe
added null checks for phone , email , and webpage in UserInfoActivity to ensure that user information is only displayed when necessary
added custom field serialization for Boolean values in PrecompiledHeaderData to ensure boolean values can be used on different machines
[ hotfix ] [ table - common ] fix append mode not work in kafka source sink
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the use of named outputs in a scenario to ensure that named outputs can be
updated regex pattern in FileSettings . java and added logic to append a new line to the content if it equals the old value to ensure proper formatting
[ stateless ] fix flow versioning in stateless controller
replaced ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java
added a taskbar mode switch annotation in TaplTestsQuickstep . java to enable persistent taskbar mode switching for improved performance
added new device status entries for " leaving - dock " and " energy - save - mode " modes in DeviceStatus . java to enhance user interface
add more logging when a model fail to load from the blockstate .
removed unused imports and added JUnit @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to
fix getcurrentsurfacescale ( ) to return 1 for 2x graphics
rename RussianLowerCaseFilter class to improve clarity to enhance maintainability and readability of the codebase
updated CsvBulkLoadToolIT and QueryUtil to use empty properties instead of server and client properties to streamline configuration handling and improve code maintainability
replace file separators with underscores in displayName to ensure consistent formatting across different operating systems
add resettableinputstream to wavloader so we can use it
added a ` repeatFirstLineIndent ` property and updated the ` setIndent ` method to accept it as a parameter to enable control over the indentation
cast the ` oid ` to ` Object ` in the ` equals ` method of ` Oid ` class to ensure type safety and prevent potential ClassCast
make sure metrictrackerfactory and healthcheckregistry be set before initialize connection
[ gr - 24158 ] fix controlflowanchornode to controlflowanchored in loopex .
added a call to setFocusPainted ( false ) on buttons in WindowsPlacesBar . java to disable focus painting for better user experience
added support for UniqueConstraint and ForeignKey in DatabaseSnapshot to ensure proper handling of backing indexes for unique constraints and foreign keys
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and implemented it in ` AccountAPI ` to
[ ds - 2690 ] check for dc . title in communityadmingrouprest when create a communityadmingroup
fix potential nullpointerexception in gapinsertiondetector when there be no word
added unit test base on user forum issue
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater ` and added a new ` databaseUpdateThreads
updated the FASTSCROLL _ THRESHOLD _ MILLIS constant from 40 to 10 milliseconds to improve user experience by allowing more time for fast scrolling
fix hotspotresolvedjavafield . getsystemclassname ( ) to return a string .
hhh - 13644 fix npe throw by getresultlist ( ) in procedurecallimpl
added null check for getApiProperties ( ) before initializing it to a HashMap to prevent potential NullPointerException when accessing API properties
added two new files , BinaryFrameGenerator . java and TextFrameGenerator . java , for generating WebSocket frames to facilitate the generation of binary and text
simonstewart : replace findelement ( by . id ( " peas " ) with wait ( presenceofelementlocated ( by
refactor random coordinates and radius calculations in RandomGeo3dShapeGenerator . java to use random ( ) . nextBoolean ( ) for better random
added a keepAlive method to the ResourceBundle class to ensure resources are kept alive for better resource management
changed return value from false to true in SQLiteDatabase . java to ensure the method always returns true
fix jsr166lockmonitorenter bug report by findbugs . java
added MkdirStep imports and modified steps in FatBinary and AndroidAar , AppleBundle , and FatBinaryTest to include a parent
updated variable names and error handling in MeshLeveler . java for consistency and clarity to improve code readability and provide clearer error messages for invalid
drools - 145 : skip applypmmlmodelcommand execution if jpmml lib be available on classpath
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure accurate validation of thermal status in the application
[ test ] make testcontainers / testcontainers / testcontainers / testcontainers / testcontainers / mountablefile . java
PrjFileReader and CatalogManager use MEMORY _ MAPPED _ BUFFERS flag to prevent memory leaks on Windows
added a null check for the organization of the Plugis model in the pom . xml file to ensure that the Plugis model has a
removed unused contributor license agreements from SepPostingsWriterImpl . java to clean up the code and improve readability
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the web flow
updated ` executeChildProcess ` to use ` System . getProperty ( " java . class . path " ) ` instead of an empty string to ensure
replaced usage of ArrayUtils with direct byte arrays for cryptKeyInit , cryptKeyPriv , and md5Salt in KM200Device . java
added JUnit Pioneer annotations and a test method to verify Javadoc changes to address issue # 3198 and ensure correct Javadoc generation in
change LAUNCHER3 _ PHYSICS from false to true in FeatureFlags . java to enable the LAUNCHER3 _ 
added a ` ` noPrint ' ' div class to the ` HtmlThreadInformationsReport ` class to provide a visual indication of no - printing
update LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and update TEST _ VERSION from LUCENE _
added macosx symbolicator and task handles to BsdDebuggerLocal . java and updated PlatformInfo . java to include MacOS X support
fix potential memory leak by use a weakreference
do n ' t log an exception when a network be reset by peer
[ java ] initialize client conductor buffer in case it be null .
added a break statement in the TouchImageView class to ensure a break statement is followed by a break statement
chore : [ gapic - generator - java ] update gapic - generator - java to 2.1 . 0 and update gax - java to
remove feedablebodygenerator . flushonsslhandshakecomplete ( ) from filter chain
added type checking for Object type in TypeUtils . java to ensure correct assignability of types in generic type variables
replace nonblockinghashset with concurrentset in memtablespendingflush
added null check for tree . errs before calling memberEnter and updated error handling logic in JavaCompiler . java , and created new classes ParseErrors .
changed the browser type from NO _ BACKGROUND to NONE in BugInfoView . java to improve the visual appearance of the browser
updated the method for setting the negative button ' s button from ` finish ( ) ` to ` cancel ( ) ` in AboutActivity . java to
updated calculations for ` lowerBound ` and ` upperBound ` in ` IntegerStamp ` and added unit tests in ` IntegerStampTest ` to ensure accurate division
added a method to read an InputStream from an InputStream in ITextUserAgent . java to improve efficiency by reading from an InputStream into a byte array
updated SwitchCompiler , ExprGenerator , ExprGenerator , ExprGenerator , and CaseStmtToken classes to enhance variable handling and scope management to improve code clarity
refactored the failover logic in RSAClientKeyExchange to handle InvalidKeyException and UnsupportedKeyException more gracefully to improve error handling and
added psapi . lib to the list of additional dependencies in WinGammaPlatformVC10 . java to ensure compatibility with the psapi library in the
updated StringUtils and StringUtilsTest to use line separator instead of a newline character to ensure consistent line endings across different operating systems
updated TemplateEngineFreemarker to use UTF - 8 encoding and modified JavaScript alert message to include special characters to ensure consistent character encoding and improve user experience
updated the deserialization process in CRDGeneratorTest to use a byte array instead of a ByteArrayInputStream to improve clarity and output output during deserialization
make variable final in samplesenderfactory so it can be override by subclass .
added a conditional check for the ` testngEmailableReporter ` property before adding the ` EmailableReporter ` class to ensure the reporter is only added
added a boolean flag ` quoted ` and updated test cases for quoting in ` CommandLineBuilder ` to ensure proper handling of escaped characters in command line output
removed the ` public ` access modifier from multiple interface declarations and classes to enhance encapsulation by restricting access to these classes
added a call to setNumReduceTasks with numFetchers in FreeGenerator . java to ensure the job has the correct number of reduce tasks
[ flink - 24105 ] [ table - planner - blink ] fix nullpointerexception in schemagen
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the new version of the save service
corrected the extension name from " texture _ float " to " GL _ ARB _ texture _ float " in FloatTextureData . java to
add write ( ) and close ( ) method to fileserver so that it can be reuse
added a null check for outputDirectory and jarStream before setting it to ensure outputDirectory is set correctly when jarStream is null
updated ` ShadowSQLiteConnection ` to use ` PerfStatsCollector ` for performance measurement to improve performance monitoring for SQLite connections
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeap
[ geos - 7306 ] add resourceerrorhandling enum to make sure we do n ' t crash the server
updated buffer position calculation in RAMInputStream and added a test for EOFException in TestRAMDirectory to ensure correct buffer size handling and improve test coverage
updated error handling in DefaultServlet and JspServlet to provide localized messages for missing resources to improve error reporting and provide clearer context for missing resources
updated ForkJoinPool and ForkJoinWorkerThread to accept a boolean parameter for innocuous thread creation and added AccessControlContext class for permission testing to enhance thread management
updated memory check logic to use a constant for CHECK _ EVERY _ N and added logging for hard reference caches to improve memory management and
hbase - 14545 testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction . testsplittransaction .
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test for the JaasDemo integration in DemoModulesTests . java to ensure that the JAASDemo functionality behaves as expected
added checks for spanX and spanY in the canCreateFolder method and adjusted the return calculation to improve layout accuracy by considering both spanX and
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
check if a table have a higher id , prevent the database from be re - opened
added validation for row and column values before parsing in TiledLoader . java to prevent potential index out of bounds errors and log a warning for corrupt
tilecache : synchronize setworkingset ( ) to avoid race condition
added a new Java class to calculate the number of steps based on two integers to implement functionality for determining the minimum and maximum steps of a stone in
added AddressChecker interface and modified TrackerRequestProcessor to handle invalid addresses to improve address validation logic for tracker requests
fix rendertype . gettranslucentmovedblock ( ) not work in multilayermodel .
add ` ` [ default : ] ' ' to remove default tag from config element ' s comment
[ netatmo ] change thingtypeversion value from int to string
added null check for recieptents before sending a message to prevent potential NullPointerException when recieptents are null
refactor issingle logic into a separate method to improve code readability and maintainability
( chore ) camel - docker : use slf4j instead of profiler
added a resourceMode parameter to the AndroidMetadata constructor and updated related methods to support dynamic resource mode configuration for improved resource management
fix memory leak in HistoricProcessInstanceQueryImpl by use calendar . settime ( ) instead of dateutils . truncate ( ) .
updated the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure that the project is
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for better debugging
refactor TreeMap class to improve performance to enhance performance and maintainability of the code
display : add option to turn off async stack trace
added a method to set the glow color in BubbleTextView and set the focused outline and pressed outline color in Folder to enhance user experience by allowing
added style class settings for link and description elements in LinkedFilesEditor to ensure consistent styling of file row text in the editor
added a test for the " alltypes " table in ResultSetMetaDataTest . java and modified the return statement in AbstractJdbc2ResultSetMetaData . java
removed unnecessary try - finally block from the write method in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify the
added null check for ` _ info ` before checking if ` status ` is ` SWITCHING _ PROTOCOLS _ 101 ` to avoid
added a constructor to ShadowLocation that initializes the provider to ensure proper initialization of the provider instance
updated the condition to set maxRAM based on deviceRam size to ensure maxRAM does not exceed 2048 RAM limits
add miss check for map with no data include in the stats
add log to fileprofileactivator so it can be enable
updated the error message in addToBody from " noname1234 " to " invalid _ " to provide a more descriptive error message for invalid
changed the order of roles from a list to a set in GuildImpl . java to ensure consistent handling of roles in the Guild implementation
updated the return value in ExpandableUploadListAdapter to use MAX _ NUM _ UPLOADS _ SHOWN instead of a fixed value to
added unit tests for the ` delete ` method in ` DashboardUserMapperTest ` to ensure correct behavior of the ` delete ` method across multiple
rename recipienttogivertoresponsemap to primaryparticipantid and primaryparticipanttoresponsemap in instructorfeedbackresultspage
improve handling of derefhandles by use truffleobject instead of asnative
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
added usagehelpautowidth = true and updated command line descriptions for " terasology " to improve command - line help clarity and provide
removed unnecessary whitespace in DrawerActivity . java and added a check for oldInteractions setting in DrawerActivity . java to improve code readability
updated test cases in CommandLineParserTest . java to improve test coverage for command line parsing functionality
updated animation scaling thresholds in PortraitStatesTouchController and modified access modifiers in QuickstepAtomicAnimationFactory and PortraitStatesTouchController to improve
updated method call from ` toUnderscoreSeparated ` to ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to ensure
removed unused native methods from CWrapper . java to streamline code by eliminating unused native methods
added constant value checks in mmm Checker . java and created a new ValueTest . java file for testing to ensure proper handling of constant declarations and
refactor multiple test classes for improved clarity and organization to enhance maintainability and readability of the codebase
[ hotfix ] [ core ] remove unnecessary null check in pojoutils
refactor JiraConfiguration class to improve code organization to enhance maintainability and readability of the code
updated error and coverage message formatting in UploadBuild . java to improve clarity and consistency in error reporting
update bounds calculations in DeviceProfile . java to correctly account for search bar offset to improve layout responsiveness based on search bar positioning
updated log messages in PulseAudioAudioSource and PulseAudioSimpleProtocolStream to use ' to ' instead of ' to ' for better clarity
refactor OverviewCommandHelper to run on the UI thread before starting the RecentsActivity to improve responsiveness by ensuring the RecentsActivity
added a method to retrieve the source group as an Optional < Pair < String , ImmutableList < AppleSource > > > in AppleSource . java to
increased the timeout duration for triggerFiredLatch from 220000 milliseconds to 320000 milliseconds to allow more time for trigger firing to complete successfully
[ hotfix ] [ stream ] fix typo in floatselectivereader
added a check for null values in the bestSoFar array and modified the return logic in AbstractNodeCostSearch . java to improve robustness by
added a conditional check to skip processing for specific component types in ResourceEditorView . java to avoid unnecessary processing for specific component types
replaced ` UiThreadHelper ` with ` LauncherModel . getWorkerLooper ( ) ` in ` DragView . java ` and ` Float
added a null check for commitPoint and retrieved its latest commit if it is null to ensure the correct commit point is used when not already set
added unit tests for ` getImei ` and ` setImei ` methods in ` ShadowTelephonyManager ` and implemented corresponding methods
added debug logging for HTTP requests in SimpleHostRoutingFilter . java to improve debugging capabilities for request processing
added ` destory ( ) ` methods to ` OfflineResourceDataManager ` , ` IndexSegment ` , and ` BitmapInvertedIndex
[ hotfix ] [ test ] fix broken integration test
replaced Charset with StandardCharsets for encoding in OutputStreamWriter initialization to improve code readability and maintainability by using standard Java standards
hbase - 26265 bulkload should throw a more specific ioexception when multiple family be miss ( sergey shelukhin )
added a commission parameter to the DefaultWithdrawFundsParams and updated RippleWithdrawFundsParams to utilize it to enhance
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve maintainability
refactor catch blocks in LoadSolrBuilder . java and SolrLocator . java to use a unified exception handling mechanism to improve code readability and maintain
added error handling for method overloaded methods in Java2TypeScriptTranslator . java to improve robustness by throwing an error for invalid abstract overloaded
replaced direct call to sweepDisk with StacklessLogging using a try - with - resources statement to improve resource management and prevent potential memory leaks
updated ` MutableColumnDataType ` , ` SqlDataType ` , ` Entities ` , ` HTML32 ` , and ` HTML40 ` constructors to
updated test cases for SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added null check for claimRequestString before parsing to avoid parsing an empty string to improve robustness by avoiding potential NullPointerExceptions
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of the code by utilizing
updated UpdateMapper to handle null values for nested documents and added unit tests for null values in UpdateMapperUnitTests to ensure correct mapping of null values
updated CoreAdminRequest to use CoreStatus instead of CoreAdminResponse for retrieving core status to improve clarity and functionality of core status retrieval
fix bug in moddirtransformerdiscoverer . transformers and locators
corrected formatting of error messages in AbstractQuerydslProcessor . java to improve readability and maintain consistency in error reporting
make pegraphdecoder . getcallstack ( ) method accessible from the frame
rename methods from ` setOf ` to ` copiedSetOf ` for clarity to improve code readability and maintainability by using a more descript
camel - 16265 : camel - mail - should use objecthelper to get identity hash code of mailmessage
http : / / issues . apache . org / jira / browse / amq - 4892 - fix npe in prefetchsubscription
updated the return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure proper handling of property names in the identifier parsing process
re - open wave generator activity instead of toast message
added null checks and logging for sheet references in KeyedProperties . java and SheetOverlaysManager . java to improve error handling and provide clear
( chore ) camel - test - kubernetes : add integration test for log and exec
added a test method ` testNoWriter ` to ` TestReplicationHandler ` for detecting no index and creating a new one to ensure that the
added a conditional check to dispatch methodKernelOkra in GraalKernelTester . java to ensure proper handling of Kernel Okra methods in the kernel
updated DefaultDnsClient , DefaultMxRecord , DefaultMxRecord , and DefaultMxRecord classes to implement Comparable interface and sort the records
refactored thread creation in XToolkit to use a privileged action for better encapsulation to improve code readability and maintainability by reducing
added validation call in SelectBox and selected " Linux6 " in UITest to ensure proper functionality of the dropdown for Linux6 environments
replaced ` IllegalStateException ` with ` Collector . printStackTrace ( e ) ` in ` JobGlobalListener . java ` to improve error handling by printing stack
updated the createState method to include a parentSplit parameter and modified state creation logic accordingly to enhance state management by associating split states with their parent
changed the connectionState variable from a method call to a volatile variable to ensure thread - safe access to the connectionState variable
change default polling period from 10 to 1000 in AbstractPollingEndpoint . java and add test for periodic trigger in EnableIntegrationTests . java to improve polling
refactor memory allocation and encoding methods in MemoryStack and MemoryUtil for improved readability to enhance code clarity and maintainability by centralizing memory allocation
added exception handling for ` DocletAbortException ` in ` HtmlDoclet ` , ` AbstractDoclet ` , and ` AbstractBuilder ` to
[ java ] unusedmodifier - fix false positive with unused modifier
refactor logging statements to use method references instead of lambda expressions to improve code readability and reduce boilerplate code
updated the parameterized parameter name from " ssl = { 0 } " to " ssl = { 0 } " in AbstractHttpClientServerTest . java to
transformhelper : catch illegalformatexception in case transform exception be throw
updated method from ` userPermissions ` to ` getActiveConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to ensure correct access to active connection
replaced direct equality check with an EqualsBuilder implementation in Point . java to improve readability and maintainability of the code
updated the process method to handle null outputRoot gracefully to improve robustness by preventing potential NullPointerExceptions
pdfbox - 4071 : add a filter interface to allow to filter out pdannotation
refactor StackTraceCleaner class to improve stack trace cleanup functionality to enhance performance and maintainability of stack trace handling
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure proper content type is set for both CSS and JavaScript files
hhh - 14274 skip test that fail on oracle
modified the ` upgrade ` method to use ` slotSize ` instead of ` slot ` and improved null handling for ` stats ` to enhance code clarity
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` , ` ContextImpl ` , and ` DocBuilder ` classes ,
[ scb - 2690 ] add a long polling option to the kie client ( # 2690 )
refactor gesture handling in ` BaseOverview ` and ` LauncherInstrumentation ` to use ` scroll ` method to improve code readability and maintainability
replaced the initialization of UnlocksDialog with a direct assignment in UI . java and added a button in PausedDialog . java to enhance user experience
added a line to clear the drops list in PlayerEventListener . java to ensure the drops list is cleared before processing new events
added a constant for the default input name in StreamResult . java to improve code readability and maintainability by centralizing default parameters
updated exception type in testNormalizeOrder method from MalformedURLException to IOException to ensure proper handling of input / output exceptions
updated printlnBoth method to include chunk type in TsFileSketchTool . java and added strBuffer flip in LocalTsFileInput . java
added functionality to exclude Swift header files from being processed in UmbrellaHeader . java to improve header management by excluding specific Swift . h files
fix typo in grizzlyasynchttpprovider . onhttperror ( )
added encode ( ) method to RequestPlugin . java to ensure proper encoding of request data
mondrian : fix mondrian - 1076 , mondrian - 1076 , mondrian - 1076 , mondrian
added validation for LDAP user password in LdapAuthenticationProviderImpl . java to ensure that a valid password is provided to prevent authentication failures
pdfbox - 4071 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper management of complex writers when conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java files to suppress warnings related to serialization in these classes
refactor ClassGraphClassLoader to improve null safety and error handling to enhance code clarity and prevent potential NullPointerExceptions
added error handling for " _ errors " in ErrorResponseException to improve error reporting and provide clearer error messages
added a constructor to ` EventSourcingRepository ` that accepts ` EventStore ` and ` SnapshotTriggerDefinition ` to ensure that the ` eventStore
refactor symbol handling in binary nodes for improved clarity to enhance code readability and maintainability by reducing redundancy
updated search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to correctly append " @ " to the search text to
[ minor ] add standby mode support .
tiff : fix default value of planarconfig _ chunky in tiffimagereader
added a close ( ) method call to ItemListTag . java to ensure proper resource management and prevent memory leaks
fixed an issue with the laser table not be able to change the recent energy .
added two new files , SigInt . java and SigIntBarrier . java , implementing signal handling for the " INT " signal to facilitate
refactor graph model handling in ExporterGEXF . java to utilize HierarchicalGraph instead of Graph to improve compatibility with hierarchical graphs
replaced byte buffer with Text and updated internalWriteString method to use Text class to improve data handling and ensure compatibility with Java ' s Text class
feedback rubricquestiondetails : initialize subquestionindex and subquestionchoices
replaced DB2Database with CatalogAndSchema . ORIGINAL _ CASE in CatalogComparator . java to improve code clarity and maintainability by using
simonstewart : clean up the browsermobproxy server and set the browsermobproxy to null
updated the formatting of criticalErrors to use Integer . toString for better readability to improve code clarity and maintain consistency in string formatting
removed redundant calls to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline code by eliminating redundancy
[ gr - 24166 ] fix javadoc error in internalbytearray and trufflestring .
[ hotfix ] [ table - common ] use tuple2 instead of tuple3 for foreachedge
refactor Java assertion classes for improved clarity and consistency to enhance maintainability and readability of the assertion framework
deleted the file ClassA \ 314 \ 201 . java and created a new DiacriticTest . java file for macOS X
[ java ] use barrier instead of CountDownLatch in clustermembershiptest . assertexecutionsdone ( )
updated workspace reader handling and improved type safety in DefaultMaven . java and DefaultGraphBuilder . java to enhance code readability and ensure proper handling of
updated SSL handling in ServiceRegistryConfig and modified test assertions in TestServiceRegistryConfig to ensure correct IP port retrieval and improve test coverage for dynamic configuration
updated Mockito library version in the project to ensure compatibility with newer versions of Mockito
removed unnecessary whitespace in the constructor of Jdbc3Connection to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to improve thread safety when accessing the servlet instance
[ hotfix ] [ binance ] add deltaservertime log to binanceexchange and binancebaseservice
added support for non - stop ( tm ) servlets for JavaServer Pages ( tm ) in Tomcat85ContainerAdapter and Tomcat90
updated the deregisterAnimated method to use the current component form if it is null to ensure animation is deregistered only when the component form is not present
updated ` decodeResource ` and ` decodeResource ` methods to accept ` BitmapFactory . Options ` as a parameter and modified method implementations accordingly to
[ java ] use executor instead of executor to create aeron . run ( ) in example .
added functionality to prevent next click actions in the TimelineArrayAdapter to enhance user interaction by preventing unnecessary clicks during the timeline
added " text " to unmodifiable data types in PostgresDatabase and updated related logic in NumberType and ColumnSnapshotGenerator to enhance data type flexibility and
fix flaky entryprocessorbouncingnodestest ( # 3683 )
updated state checks from HARDELETABLE to REMOVABLE in AmbariManagementControllerImpl . java and State . java to ensure
[ mielecloud ] fix createbridgeservlet crash when reconfiguration fails
refactored method names and logic in PreconditionEnforcer and CrawlServer classes for improved clarity and consistency to enhance code readability and maintainability by
added null check for the display name of interfaces in Equals and IndexTest classes to avoid potential NullPointerExceptions when checking for " Teredo " in
modified the SpriteBatch constructor to accept a ShaderProgram parameter and updated shader creation logic accordingly to enhance flexibility by allowing custom shader creation based on the
added synchronous commit option to properties in TestUtil . java to enable asynchronous commits in the application
added element type coercion functionality and updated test cases in SortedSetTypeCoercer and TypeCoercerTest to improve element
updated message string assignments in RemoveFileDialogFragment and AddFilesDialogFragment for better clarity and functionality to enhance user experience by providing clearer alert messages based on
added a condition to check if the character index is less than or equal to 256 in URLPathEncoder . java to ensure that only valid characters are
updated the port assignment in the registerFragmentStorage method to use a dynamic port variable instead of a hardcoded value to ensure that the port is
updated the expectation in HostResourceProviderTest to return an empty map instead of an empty map to ensure the test correctly verifies the expected behavior of cluster
[ hotfix ] [ yarn ] remove unused logger parameter in yarnentrypointutils
[ sipcommFrame ] initialize some variable and call validate ( ) instead of call validate ( )
removed the ShadowHtml class and updated test assertions for Html text to streamline codebase by eliminating unused shadows and simplifying test assertions
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface to provide a
updated logger names to include " org . eclipse . jetty . http3 " and " org . eclipse . jetty . quic " to improve clarity
changed the visibility of the addListeners method from private to package - private and added a test for listener validation to enhance encapsulation and ensure
[ hotfix ] [ doc ] fix typo in statehandlestore
updated import statements in HttpAuthMethodPriorityTest , HttpBasicAuthComponentConfiguredTest , and HttpBasicAuthTest files to ensure compatibility with the Jetty HTTP
[ # 11424 ] instructor : add team info to student page ( # 11424 )
use try - with - resources to avoid resource leak
camel - 1145 : fix the test error of camel - 1145
added libraryTarget parameter and refactored jar parameter retrieval methods in JarBuildStepsFactory to improve code clarity and maintainability by centralizing library jar
remove ` ` validating - cerficates ' ' from the message in trusteverthingtrustmanager . java
[ te ] listcapacitycmd : remove unused method getpagesizeval ( )
added a case for CLOSED in the IteratingCallback class to ensure proper handling of closed states in the callback process
added a new boolean field ` isAuthorized ` and updated related method signatures in ` AccessControlContext ` and ` ProtectionDomain ` to ensure proper access control
modified event sending logic in OSGiDeployer . java to handle non - OSGiApp instances more gracefully to improve robustness by
added handling for " tiff " type in DLNAMediaInfo . java to ensure correct MIME type is used for TIFF files
optimize calltarget : fix thread safety issue in profilearguments ( )
added a new file ` CubocDesktop . java ` and modified ` Map . java ` , ` MapRenderer . java ` , and modified
updated the path for PolicyMonitor to use a file object instead of the resource directory to ensure that the test resource is located in the correct directory for
added a call to removeAllFiles ( ) in the trashbinListAdapter to ensure all files are removed from the trashbin list
updated import statement for allConnectors ( ) method from org . eclipse . jdi . Bootstrap to com . sun . jdi . Bootstrap to
[ gr - 30813 ] make checkglobalvariablestoragenode return a boolean instead of a boolean .
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted the launch source event hashing logic to enhance event handling by
update max burn amount calculation to use a constant value to improve code clarity and maintainability by centralizing max burn amount logic
replaced specific imports with a wildcard import and modified the snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake . java to streamline import
updated SQL select statement logic in DMLTransformer . java to handle empty select statements to ensure correct SQL syntax when no named values are provided
updated import statements and changed URLs from " http " to " https " in ServiceValidateControllerTests . java to enhance security by using a wildcard
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added logic to hide the default name based on the ` is
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated generics in multiple classes to use generics for better type safety to enhance code readability and maintainability by using generics
gTalk : do n ' t send hole punch packet to the transport manager if it ' s not a call peer .
added a test method for updating a PGobject in ResultSetTest . java to ensure proper functionality of PGobject updates in the database
updated password reset endpoints to handle non - UTA origins correctly to improve error handling and provide appropriate status codes when email is not found
replaced the retrieval of the first child of the document with a direct retrieval of the root element to improve performance by avoiding unnecessary type casting
refactor caching logic in Cache . java to improve performance and reduce memory usage
rename timeInSec to timeMillis in Isochrone and SPTResource classes to improve clarity and consistency in time representation
fix the light relay not be able to bind if the bindy be invalid
added a new ` Chainer ` class and refactored the ` contains ` method in ` CollectionSubject ` to utilize it for chaining
refactor Model class to improve code readability to enhance maintainability and facilitate future updates
updated recordedTime calculation to include a new value of 619315200000L to ensure accurate tracking of recorded time in the application
added a check to resize status if the terminal type starts with Windows to ensure proper resizing behavior for Windows terminals
do n ' t set ' all host version ' state if it ' s not require
[ gr - 17499 ] remove unnecessary dependency on java _ src / jre _ java _ library . jar .
[ mng - 6078 ] fix the problem of maven cli not read the global and user location .
removed exception handling for Operation creation in OperationServiceImpl . java to simplify code by eliminating unnecessary try - catch block
updated method call formatting in KnativeEnvironment . java to improve code readability and maintain consistent formatting
rename ` commitlog _ archiver ` thread pool name to ` commitlogarchiver `
added tests for uploading configurations in CloudSolrClient and MiniSolrCloudCluster in TestCloudSolrClientConnections to ensure proper error handling and validation
[ gr - 17499 ] synchronize allbindings in debuggersession and breakpoint .
updated file handling and cache management in Robolectric and ShadowContext classes to improve code clarity and maintainability by centralizing cache management logic
added linkedhashset and linkedhashset to securexstream , and fix a bug in xstreampersistertest .
[ drools - 4892 ] add kiehelper . withkiemodulemodel ( ) to allow to configure kiehelper . withkiemodel (
updated BlockEventListener to check for Farmland ' s new land type before processing soil dry conditions to ensure soil drying only occurs when the new farmland
added a default implementation of the ` getLocalIp ( ) ` method in ` FinishedSpan ` class to provide a default implementation for retrieving the local
updated JdbcStepExecutionDao to use SerializationUtils for deserialization and added a test for storing integer values to improve serialization handling and ensure correct handling of integer
pdfbox - 4071 : fix typo find by codespell on fossies . org
[ hotfix ] [ python ] [ tensorflow ] add support for python37 and mkldnn
added a refresh button to the PluginTab class for managing plugins to enhance user experience by allowing users to refresh the plugins list dynamically
updated log level from info to warn in DefaultHistory . java to improve log granularity for better error reporting
vmware : fix npe in getvmvm ( ) if vm be not find in hyperhost .
[ hotfix ] [ test ] fix the test failure of sftpservertestsupport
refactor ExperimentalMockitoJUnitRunner class for improved readability to enhance maintainability and facilitate future updates
updated ` GpsSettingsActivity ` , ` Session ` , and ` HttpUrlLogger ` to use ` GetBuildSerial ( ) ` instead of
refactor SwapGBuffers class for improved performance to optimize memory usage for better performance
fix npe in animcontrol when spatial be null .
added smartReplies functionality to ShadowRanking and replaced ReflectionHelpers with Reflector for setting notification channels to enhance the testing capabilities for smart replies in
[ java ] do n ' t add segment to the archive if it ' s already in the archive .
replaced resourceLoader . getConfigDir ( ) with initParams . LEXICAL _ RESOURCES _ DIR in CarrotClusteringEngine . java
added null check for testRect in WindowsTreeUI and created a new class bug8004298 to address bug8004298 to ensure robust handling of
updated the ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with new
replace returning null with throwing TasteException for loading column vector and vector in RecommenderMapper . java to improve error handling and provide clear
added client information retrieval and setup method in SurrogateAuthenticationEventListenerTests to enhance test reliability by providing client - specific information during setup
added a new boolean variable ` isUserView ` initialized to false in ` CardPresenter . java ` to reset the user view state for better user
updated method names from ` isGraphvizJavaAvailable ` to ` isGraphvizJavaAvailable ` across multiple files to improve clarity and consistency
refactor histogram creation to use a variable for clarity to improve readability and maintainability of the code
added a new module - info . java file for the sqlite connector to define module dependencies and exports for SQLite integration
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " web . type " from permissionsManager initialization to simplify permission management logic for better readability
refactor DateParser and TestDateParser classes to improve code organization and maintainability
added a new method ` getDepth ( Context context ) ` to ` SpringLoadedState ` that returns a default depth of 0.5 f to ensure consistent
replace manual byte array manipulation with a constant for minimum size to improve code readability and maintainability
[ hotfix ] [ doc ] fix typo in executiongraph
removed unnecessary swipe animations and added click listeners for notifications in NotificationRenderer . java to streamline notification handling and improve user interaction with the bottom layout
updated exception handling logic in DefaultExceptionConverter . java and modified test assertions in ExceptionsTest . java and EndpointTest . java to improve clarity of
fix npe in glowcontainer when lock be empty .
replaced MethodHandle with reflection method for setting a field to improve code readability and maintainability by using reflection instead of reflection
fix flaky test : cast bitand ( int , int ) to integer
updated the return statements in BaseEmailContentFormatter to include metrics and datasets from templateData to simplify the output for better readability and maintainability
added logic to manage the display and display of the layout provided panel in LayoutPanel . java to improve user interface responsiveness by ensuring the layout
added null check for location in ServerCallable . java to ensure robustness by preventing potential NullPointerExceptions
updated BuilderFactory , Pipeline , and PipeliningTest classes for improved code organization to enhance maintainability and readability of the codebase
added a null check for DSAPublicKey parameters and simplified return statement in BasicChecker . java to ensure key parameters are present before generating the public key
refactor MediaTypeRequestMatcher to use a new shouldIgnore method for checking ignored media types to improve code readability and maintainability by centralizing media
refactor task number handling in LlapBaseInputFormat for improved clarity to enhance readability and maintainability of log messages
added properties to SpringBootTest annotation to allow bean definition overriding to enhance flexibility in test configurations
added null check before closing indexReader to prevent potential NullPointerException when indexReader is null
changed package declarations from ` service ` to ` package - private ` for multiple classes to improve encapsulation and maintain consistency in package structure
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to validate rendering behavior to ensure that
added a new file ` CompatibilityTest . java ` to test the compatibility of Java DTD properties to ensure that the DTD properties are correctly
added two new utility classes , PushUtils , SecurityUtils , and VariantComponentsModule , for push - related utility functionalities to enhance the
[ flink - 24158 ] [ table - planner - blink ] fix the bug in tablerebalancer
bump version to 2.7 . 0 and tidy release note
log4j2 - 1331 use line break instead of \ r in unit test
ajp / ajp / ajp / ajpprocessor now throw a sockettimeoutexception if the read time out or timeout
added default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure default values are set to zero
[ te ] add anomalyfunctiondto to the anomalyclassifier , and fix fetchsaclingfactoringfactor ( #
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to handle potential IOException during broadcast idle operations
added unit tests for font and link tags in ResourcesTest . java and modified the offset calculation in ResStringPool . java to ensure correct handling of
fix typo in guistatscomponent patch file
added permission handling for CALL _ PHONE calls in Launcher . java to enhance user experience by ensuring necessary permissions are granted
updated return values in SimulationPanel and modified method signatures in PlotDialog and related classes to include FlightData as a parameter to enhance user experience by
updated GeoEncodingUtils to change BUF _ SIZE _ LONG from public to private and simplified the fromBytes method to improve encapsulation and
added a synchronized method ` isDockerAvailable ( ) ` to the ` DockerClientFactory ` class to ensure thread safety when accessing the Docker client
added a new constant VPX with the value " vpx " in CodecTypes . java to enable support for VPX encoding in the
added a ` coordinatorAddress ` option to the ` DistBuildFactory ` and updated the ` DistBuildRunCommand ` to use it to
added a new method ` match ` in ` FsUtils ` and refactored timer usage in ` WrapTimer ` to improve path matching functionality
added a conditional check to ensure that the entry ' s value is non - negative before adding it to labelValues to avoid adding empty entries to the
ggb - 145 fix for null return value of geobooleanrelation . istrue ( )
removed the @ Test annotation from TestPerfBenchMarkDriver . java to eliminate unnecessary test annotations
added materialization time setting in ObjectStore and created a test for creation metadata updates in TestObjectStore to ensure correct handling of materialization times in
added handling for UnsatisfiedLinkError in VoskSTTService methods to improve error reporting and logging for missing native dependencies
fix a bug in the jmssampler gui and add response code ok to the sampler
updated break weight logic in GlyphView . java to use ' equal ' instead of ' greater than or equal to ' to ensure correct break weight behavior
refactor synchronization logic in RCFile . java to utilize a configurable checksum to improve efficiency and maintainability of the synchronization process
removed the @ AwaitsFix annotation from AutoAddReplicasPlanActionTest . java to address issue SOLR - 13028 related to the
refactor data storage to store unsorted - by - counts entries in a LinkedList to improve clarity and maintainability of the data structure
removed the ` flavorToNativeMap ` parameter from the ` keysToSortedDataFlavorArray ` method in ` ClipboardTransferable ` and simplified
hbase - 13211 testthriftservercmdline should use random free port
added a check for EOF in the RegExpScanner class to ensure proper handling of end - of - file scenarios
replaced the boolean check for metrics and timers with a static set of enabled properties to improve code readability and maintainability by reducing redundant checks
fix nullpointerexception in chatroomjabberimpl . equals ( msgfrom . getresourceOrThrow ( ) ) .
fix nullpointerexception when try to load a sketch with an empty filename .
refactor token creation logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
updated error message format in BuckConfig . java to include the source path to improve clarity of error messages for better debugging
[ hotfix ] [ yarn ] remove dead code in yarnflinkapplicationmasterrunner
added a synchronized method nativeGetHardwareBuffer to ShadowNativeImageReaderSurfaceImage . java to facilitate the retrieval of the HardwareBuffer from the native
updated BTCChinaMarketDataService initialization to set the SSL URI to ensure compatibility with the BTCChina API
pmd : fix CPDTask to write cpd output in the correct directory
added OauthController and Oauth2PluginTest classes to implement OAuth2 integration testing to facilitate testing of OAuth2 functionality in the application
refactor Semgrex pattern implementation to improve code readability and maintainability
added flatMap methods to AbstractStreamEx , StreamEx , and StreamEx classes , and removed duplicate methods in EntryStream and StreamEx classes to
updated error logging message in RestCodec and added exception handling in ExceptionToProducerResponseConverters to improve logging clarity and handle potential exceptions gracefully
added a comment to clarify the purpose of the boolean condition in RobolectricClassLoader . java to allow Maven projects with mixed scala \ java tests
inverted the condition for checking audio encodings in MediaControl . java to ensure correct handling of audio encodings
updated ` CreateTableGenerator ` to handle ` DatabaseFunction ` instead of ` SequenceNextValueFunction ` to ensure proper handling of ` DatabaseFunction `
added tests for the " st _ gml31 " and " st _ gml32 " stations in the NormalizedMultiValuesTest class to
added a volatile boolean flag and updated HTTP response handling in NetworkTestUtils and UaaHttpRequestUtilsTest to track the wasInvoked state to improve
added checks to ensure regexMapping is only applied when configured before invoking expandRegexMapping and updated return statements in RowProcessor and ColumnarDataSource to improve
updated CustomSeekProvider to use a constant SEEK _ LENGTH and refactored splitIntoThirtyParts and getPositionsArraySize methods
added XLCDCommunicator and XLCDController classes to handle XLCD command handling in GrblCommunicator and FirmwareUtils to enable
[ drools - 139 ] move schema loading into kiemodulemarshaller to use the system class loader
[ flink - 24165 ] [ runtime ] fix flaky test in eventquery .
refactored thread state handling in WorkerProcessPoolTest to use a constant for waiting for test threads to improve code readability and maintainability by
added hashCode and equals methods to DelegatingMethod and created corresponding unit tests to ensure proper equality and hash code generation for the DelegatingMethod class
updated constants for FREEZE _ V2 , UNFREEZE _ V2 , and DELEGATE _ RESOURCE from 20000
updated the ` command ` method signature and added exception handling for ` ConfigurationException ` to ensure configuration is properly saved and reloaded during command execution
deleted the SpringTransactionHooks . java file and updated the SpringTransactionHooksTest . java file to use AbstractSpringTransactionHooks instead to streamline the
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the codebase
added a new file ` GetUninitializedStringValueTarg . java ` to test the functionality of ` GetUninitializedStringValue ` from a
added support for provided dependencies in AndroidLibraryDescription and updated related tests in GraphEnhancementQueryEnvironment to enhance dependency resolution and improve test coverage for provided
added a new BooleanFlag ENABLE _ KEYBOARD _ TRANSITION _ SYNC in FeatureFlags . java to control keyboard synchronization during
added a static boolean variable ` sSavedBugreport ` and modified the logic for saving the system anomaly message to improve performance by avoiding unnecessary
added support for " cinepack " format in FormatConfiguration and LibMediaInfoParser to enable support for " cinepack " format in media
added camera bobbing animation and modified positioning logic in the Player class to enhance user experience by providing smoother transitions during hand movement
replace ` data . describe ( ) ` with ` b . digest . toString ( ) ` in ` GrpcCasBlobUploader . java `
deleted HSQLDBServerFilesFilter . java and updated TestUtility . java to use FilenameFilter instead to simplify file filtering logic and improve code maintainability
added check for restoreFromSeed and restoreFromKey before proceeding to ensure that restoreFromSeed and restoreFromKey are not null before proceeding
updated the method from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` and added logging for missing titles
added a method to check if a method invocation is already present in the HasTypes class to ensure that method invocations are processed correctly based on the
replaced hardcoded array sizes from 6 * 3 to NUM _ VALUES in AmbientCubemap . java to improve code readability and maintain
profiler : display ` ` current mode ' ' in profile dialog if profiling mode be not configure properly .
[ flink - 20586 ] [ table - common ] fix masking of zero value when generic udf mask be empty
fix derbyblockstoretest to use absolute path
add isitemstackdamageable ( ) and gethassubtypes ( ) to itemstack # isitemstackdamageable ( )
fix mc - 167447 : use linewidth instead of alpha
simonstewart : set the browser . startup . page preference to 0
updated the condition for handling HTTP responses in Http1xClientConnection . java to ensure proper handling of CONNECT , GET , and Upgrade requests
updated the task accept from " compile " to " process - classes " in JoobyMojo . java to ensure that the task executes the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46165 - use close
added a check to ensure the aggregate function suffix is not present before processing metric keys to avoid unnecessary concatenation of metric keys when the metric name does not
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to use it to improve fullscreen handling by utilizing 
added a new Java class named Solution that counts the number of frequencies from an input stream to provide a solution for counting the number of freq
initialize socket channel to null in clusteredagentmanagerimpl . close ( )
updated MutisignOperationerGodicTest . java file to improve test coverage for the Mutisign operationer functionality
added error handling for NoSuchElementException in StaxEventItemReader and implemented a test for restarting at the end of the file to improve robustness
replaced specific TextPaint imports with a wildcard import and modified return statements in ShadowTextView . java , and added null check in TestAttributeSet . java
updated JSON imports from ` com . nimbusds . jose . shaded . json ` to ` net . minidev .
updated Linux name checks to include " AIX " family handling to ensure compatibility with AIX systems in the system
do n ' t expose private ip to router in virtualnetworkappliancemanagerimpl # getaccessdetail
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class that calls ` RunnableWithResultSync ` to facilitate
remove presencemessagecombotests since it be no longer in use
replaced integer calculations with Math . round for width and height in PortraitPagedViewHandler . java to improve code readability and maintainability by
updated method calls in KMeansDriver and FuzzyKMeansDriver for consistency to improve code readability and maintainability
hbase - 24419 fix classsize calculation in keyvalue . get ( )
camel - 16265 : camel - core - add service to camel - defaultcamelcontext to make it easy to add type converter to the
added support for conditional tasks in SparkCrossProductCheck to enable task dispatching based on the current task type
updated action handling for managed profile updates in Launcher and LauncherAppState classes to ensure consistent reload behavior for managed profile updates
updated conditional logic in LoginInfoEndpoint and added unit tests for passcode prompts in LoginInfoEndpointTests to ensure passcode prompts are present
hbase - 13236 add todescriptivestring ( ) method to describe region state and server
rename ` message ` to ` msg ` and introduce ` result ` in ` HuobiAccountInfo ` and update related methods accordingly to improve clarity
added support for the " PERIOD " column in MariaDBDatabase and created a test for it in AddColumnGeneratorTest to ensure compatibility with Maria
[ beam - 11486 ] update portablepipelineoptions documentation to reflect new default environment setting
added descriptions for Android 7.0 compatibility to VersionChangeLogs . java to indicate support for launcher shortcuts and fixes for compatibility with Android 7
updated the access modifier of NUM _ MILLIS _ IN _ DAY from private to public and changed NUM _ MILLIS _ IN _ DAY from private
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] do n ' t invoke aeron client if it do n ' t have one .
updated validation logic for implicit lambda parameters and added a new test class NoWarnOnImplicitParams to improve parameter validation and ensure correct handling of implicit lambda
refactor menu item visibility and visibility methods in FileMenuFilter and FileDetailFragment for improved encapsulation to enhance code readability and maintain
updated BTCETransHistoryResult to include additional reserved entries and modified the type assertion in BTCETransHistoryJSONTest to ensure accurate tracking of transaction
refactor RetryFilterFunctions to use Set instead of List for series and exceptions , and update method signatures accordingly to improve performance and maintain consistency in data
mark the PluginLoader class as deprecated to indicate that the class is outdated and should no longer be used
updated condition in LastQueryExecutor and added a new test for last with unseq time larger than sequence time in IoTDBLastIT to ensure
removed unnecessary line breaks in reqStr append method to improve code readability and maintain consistency in formatting
added a static block to set the system property " org . apache . http . wire . org . apache . http . wire " to " ERROR
added a line to set the title bar safe area to ensure the title bar is displayed in safe areas for better user experience
modified the loop structure to iterate backwards from the first element of the TimeSeriesChunkMetaDataList to ensure correct retrieval of the last element from the list
added SQL syntax for renaming a column in the AlterTest class to ensure the correct parsing and deparsing of columns in SQL statements
make abstracthikariconfig . copystate public so that it can be use from other package .
fixed - rexecutorservice . executeasync ( ) method do n ' t return asyncfutures . # 4243
add a constant for file suffix split in the filelister and use it in the filelister
rename multiple Orc - related classes for consistency and clarity to improve maintainability and readability of the codebase
refactor conditional statements in CompareFunctionsProcessor . java for clarity to improve code readability and maintainability
fix checkavailablediskspace to correctly estimate expected disk space for compaction
removed redundant ` toString ( ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to
added checks for invalidated state in AbsSwipeUpHandler and unregistered task stack listener in TaskAnimationManager to ensure proper handling of state transitions
added methods to get and set lock timestamp in AppPreferences and refactored preference handling in PassCodeManager and DrawerActivity to improve code clarity
updated the artist assignment logic in MediaInfoParser to use a helper method for retrieving the " ARTISTS " string to improve code readability
added null check for remoteMessage before accessing its data to prevent potential NullPointerExceptions when remoteMessage is null
nifi - 145 : fix npe in splittext when no header be available
updated keystore type handling in HttpsConnectorFactory to support Windows - specific key store management to ensure compatibility with Windows - specific key store configurations
change default check timeout in resttemplatesendertest and webclientsendertests from 400 to 1 second
added a condition to check if the result code is not FILE _ NOT _ FOUND before proceeding to improve error handling for file not found scenario
added animation functionality to the Slider class to enhance user experience by allowing dynamic animation effects
updated assertions in LineSeparatorProcessorTest to use lineSeparator instead of eol to ensure correct comparison of expected and actual line separators
increased maxWidth and maxHeight values from 512 and 512 to 1024 in TexturePacker . java to increase the maximum size for better performance
added a test for negated tangentary not unwrapped in UnnecessaryParenthesesTest . java and updated the return condition in
camel - 14284 : fix camel - hazelcast queue consumer poll timeout issue .
added TextFeedbackTest to the AllTests and TestRunner classes , and created TextFeedbackTest for testing to ensure that the TextFeedback functionality works correctly
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter to improve accuracy of score comparisons
updated DPI case handling from DENSITY _ HIGH to DENSITY _ 7 and refactored resource saving logic to use try -
add a method to get the array class element offset in HotSpotReplacementsUtil . java and use it in ArrayCopySnippets . java to
[ meterinvocation ] skip the first line of the default log if there be no log line .
added support for remote SCM systems by introducing a boolean flag and related getter / setter methods to enhance flexibility in enabling or disabling SCM
added support for additional states such as STATE _ END and STATE _ RINSE _ HOLD in MieleApplianceHandler . java to
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging events to streamline logging functionality by utilizing the new SysUiStats
[ hotfix ] fix typo in localzookeeper logger name
added tests for project generation event handling in EventSerializationTest . java to ensure correct serialization and deserialization of ProjectGenerationEvents
ggb - 118 : add selection _ points feature for prerelease
refactor JavaCompiler class to improve code organization to enhance maintainability and readability of the codebase
[ flink - 24497 ] [ test ] increase the test execution time when there be no time to execute random reads
updated test class names for consistency and clarity to improve maintainability and readability of the codebase
added additional LDFLAGS to the ldflags list in NdkCxxPlatform . java to enhance support for GC section and copy reloc
updated URI expansion logic in SpringCloudCircuitBreakerFilterFactory and added a new test for uri fallback controller in HttpBinCompatibleController to improve URI
simonstewart : update the license year for the java driver to 2015
bugzilla 49497 - fix for bugzilla 66662 - the xssf usermodel do n ' t work with
added a new method ` getAccountNet ` to the ` HttpMethed ` class and a corresponding test case in ` HttpTestAccount001
added a check for non - positive availTextWidth before returning clipString in SwingUtilities2 . java and modified GTKLookAndFeel setup in Test6635
refactor FlatteningIterator to use a single instance of FileResourceIterator instead of a single instance to improve code readability and maintainability by
removed HTML color tags from title and body in NotificationUtils . java to ensure proper HTML formatting for better user experience
doc : generate sample code in the java microgenerator ( # 144 )
add test to make sure to delete an existing question
updated return values in HSSFSheet . java and BaseTestSheet . java to correctly reflect first and last row numbers to ensure accurate row number
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and PackageManagerHelper classes to enhance security by preventing malicious intents from being
[ java ] do n ' t send cluster session ' s ` ` ok ' ' event when start the cluster .
parquet : implement equal ( ) and hashcode ( ) in abstractparquetmapinspector
added a condition to flush the buffer if remotelyClosed is true to ensure the buffer is released when the remote connection is closed
added AutoCloseable interface and modified SplitReader interface to extend AutoCloseable to improve resource management and prevent potential memory leaks
removed unnecessary properties from the deepCopy method in GsonBuilder to streamline the code by eliminating unnecessary object creation
sulong : do n ' t cache llsourcemaps when there be no llscanner
refactor file handling in RestClientRequestImpl to use a for - each loop instead of an array to improve code readability and maintainability by
updated dispatchStatusString method call syntax in GrblController . java to improve code readability and maintainability
added a new ` SearchingClassLoader ` class and modified ` MockFactory ` to use it to combine multiple class loaders to improve class loader management
add a test to verify that the simpleupdate ( ) and simpleinitapp ( ) work with the inbetween node
added support for LEFT _ SEMI _ JOIN type in the ConstantPropagateProcFactory to ensure proper handling of left - sibling joins in the join
updated response completion logic in HttpReceiver and HttpSender to check for CONTINUE _ 100 status instead of a boolean variable to ensure proper handling of
rename arraylengthoffset to arrayoopdesclengthoffset in hotspot - related classes
http : / / issues . apache . org / jira / browse / amq - 4676 - add default policy to allow test to run
renamed BadKdc classes and updated their imports for consistency to improve code organization and maintainability across the project
do n ' t call appctx . stop ( ) if it ' s not run
changed the return type of the drawItem method from void to GlyphLayout to ensure the drawItem method returns a GlyphLayout object instead of void
refactor SpringmvcClient to use MetricsPublisher for metrics retrieval to improve metrics management by utilizing a dedicated MetricsPublisher instance
removed the static final date from SAFE _ ACCOUNT _ AGE _ DATE and simplified the return statement in AccountAgeWitnessService . java to
refactor code formatting and improve readability in StructureHeader and StructureReader classes to enhance code readability and maintainability
added ResourceUrlProviderExposingInterceptor to the interceptors in CasWebflowContextConfiguration and related tests to enhance the handling of resource URL
add dexpler to handle dexreturn inlined return statement .
[ automation ] fix enrich rule dto to include property
removed NOFOLLOW _ LINKS option from the isDirectory method in PathResource . java and updated test arguments in AliasCheckerSymlinkTest . java to
[ hotfix ] [ table - common ] [ table - common ] remove dialect property from executionentry
replaced ` ImmutableSet < String > > ` with ` Supplier < ImmutableSet < String > > ` for rDotJavaPackages and added a boolean flag to
pmd : add test case for deprecate package name
added a configuration property for the minimum cross compaction unseq file level in IoTDBDescriptor . java to allow dynamic configuration of the cross compact
[ hotfix ] [ runtime ] move activeresourcemanager and activeresourcemanager to correct package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify that
updated URI creation in ZipResource . java to handle URISyntaxException and added a new test class ZipResourceTest . java to improve error handling and ensure
updated ExpandableUploadListAdapter to improve thumbnail generation logic based on upload status to enhance user experience by ensuring thumbnails are only created when necessary
refactor RobolectricTestRunner to use a hierarchy for configuration retrieval to improve the handling of test classes by merging parent classes and method configurations
filter block and item registry by name instead of use gamedata . typesafeiterable ( )
removed the ` abstract ` modifier from several methods in ` AbstractDataChangedListener ` and replaced ` SyncDataService ` with ` Session ` in `
updated JSONPojoConvertor to handle enum types and modified test cases for color handling to enhance type safety and improve test coverage for enum values
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the ` --
refactor originalPayload from String to byte array and streamline data processing to improve performance and reduce memory overhead during payload processing
added orientation correction functionality and updated mouse event handling in GyroControl . java to enhance sensor interaction and improve handling of orientation corrections
updated BIOME _ LIST _ SIZE to use biomeGenBase . getBiomeGenArray ( ) . length instead of a hardcoded value
updated function calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and changed interface declarations to be public to improve clarity
removed duplicate declaration of the Environment variable in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a mechanism for collecting byte -
added a preload parameter to the MMapDirectoryFactory to control the preload behavior based on user preferences
added custom metrics for various component configurations in BukkitPlatform . java to improve monitoring of component metrics based on user settings
refactor QuickConnectREST class implementation to improve code readability and maintainability
added aspect ratio and default card image drawable in CardPresenter . java to enhance card presentation by using a specific aspect ratio
do n ' t attempt to login if the current authentication method be implicit
added checks for non - positive length before cloning longValues , doubleValues , decimalValues , byteValues , and byteLengths in VectorHashKeyWrapper
[ hotfix ] [ test ] add test for system . nanotime ( ) in timechangetest
trim whitespace from the input string before processing in MultiPartFilter and add a print statement in MultipartFilterTest to ensure that the input string is
fire livingexperiencedropevent for entityplayer . dropexperience ( entityplayer ) , not entityplayer . dropexperiencedrop
updated error messages and status handling in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity and accuracy of error messages related to configuration issues
remove unsupportedutilizersvisitor since it be no longer need
added RdepsFunction to GraphEnhancementQueryEnvironment and introduced a new test for RdepsFunction in GraphEnhancementQueryEnvironmentTest to
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added logic to scale entire rocket components in ScaleDialog to ensure proper scaling behavior for different rocket types
replaced instances of ` Arrays . toString ( ) ` with ` rs . getBytes ( 4 ) ` in ` UpdateableResultTest . java ` to
added time boundary info retrieval and attaching logic for offline and realtime queries in BaseBrokerRequestHandler . java to ensure proper handling of time boundary information
do n ' t poll the poller if it ' s already in the poller .
updated regex pattern and modified image title extraction logic in EightmusesRipper . java and added logging for downloading image titles to improve accuracy in
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple files to improve code readability and
added a condition to check if the profile is not a phone and not in landscape mode to ensure proper layout behavior for phone devices in landscape orientation
hhh - 14199 unwrap the queryimpl class in parttreejpaqueryintegrationtests to avoid reflection
refactor method to read matching lines from the subsystem directly to improve code readability and maintainability by encapsulating line reading logic
added a dynamic check for the " getResultStream " method in JpaQueryExecution . java to ensure that the " getResultStream " method is invoked
update null check for entity type in PhysicsProcess . java to ensure proper handling of null values to avoid potential NullPointerExceptions
add a test that clears the map when predicate ` ` attribute > = 0 ' ' be use .
add support for jitsi - meet - room header to sip call .
updated color calculation in Utils . java and modified HTML message in UtilsTest . java to improve code readability and maintain consistency in color representation
disable text input in defaultmenu and editormenus when normalize name be empty
updated the scratch path format in Aapt2Link . java to include a new RmStep for linking the link tree to improve clarity and
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and
ggb - 260 do n ' t update selection when click on av
do n ' t catch emptystackexception in ysld validation
implement call . iscancelled ( ) to check if the call be cancel .
refactored ` isAnnotationPresent ` methods across multiple classes to use a default implementation in ` AnnotatedElement ` to improve code readability and maintainability
added a default implementation of the removeAllWidgets method in UILayout . java to indicate that the method is not implemented yet and provide a clearer
[ hotfix ] [ yarn ] fix test failure of yarnsessionfifoitcase and yarnsessionfiftcase
opensslcipher . getoutputsizeforfinal ( ) should use the maximum of outputsizeforupdate and outputsizeforfinal
added logic to force transcoding of high - res video content in PlaybackController . java to ensure proper transcoding of high - res video content
[ beam - 11436 ] fix the issue of miss datasource . show ( ) in mock datasetsource
updated import statements and modified listener preference handling in GpsLoggingService . java to improve code readability and maintainability by using wildcard imports and
updated the ` putString ` method to return a ` byte [ ] ` instead of a boolean array in ` vt320 . java `
added support for BaseItemDragListener in FolderIcon . java to enhance drag - and - drop functionality for better user experience
added a method ` createEmptyArtifact ` to handle empty artifact values in ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , and ` FileSystemConnector
fix checkstyle issue in camel - rabbitmq .
removed the check for the calendar date from the video loading condition in VideoViewerActivity . java to simplify the condition for determining if the video link matches
added compactPath method call to SftpOperations . java to ensure consistent file path handling for SFTP connections
camel - 16265 : camel - weather - fix test failure on slow ci server
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by using a more de
fix double plant not be able to place large plant in the same block .
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to enable focus
added exception handling in VirtualMachineManagerImpl . java to ensure that exceptions are properly propagated to the caller
removed the DB2TestSystem ' s requireLicense method and adjusted conditional checks in DockerDatabaseWrapper and TableIsEmptyGenerator to streamline license handling
bugfix : optimization parameter combo do not update the best value unit when the parameter be change
added a new constant BTC _ ZMW in the CurrencyPair class to support trading operations for BTC and ZMW currencies
added logic to set the number of samples based on context settings in TestPBRLighting . java to ensure that the correct number of samples is
updated the order of parameters in assertTasklet calls in StepWithSimpleTaskJobParserTests . java to improve code readability and maintainability by
made variable ` cred ` and ` svc ` final in ` CentralAuthenticationServiceImplTests . java ` to ensure immutability of these variables to
fix ggbabs ( ( ( ) ) ) - > ggbabs ( ( ) ) - > ( ( ( ) ) )
added multiple calls to ` addServiceOutput ( ) ` and refactored the task addition logic in ` DDLSemanticAnalyzer . java ` to
[ jbrules - 3131 ] fix bigdecimal type coercion in drlx
added " org . eclipse . jdt . " to WebAppContext . java to hide the jdt used by Jetty in the web application
modify the return value from super . useAuthCache ( ) to false in NegotiateAuthentication . java to simplify the authentication process by removing unnecessary
updated namespace assignment to capitalize the first segment to ensure the namespace is capitalized for better clarity and usability
camel - 14263 : add a new exception class for directconsumernotavailableexception to make it easy to see if consumer be unavailable .
added null check for ZooKeeper before setting it to null to prevent potential NullPointerException when accessing the ZooKeeper instance
corrected spacing in the progressBar step message to improve readability and maintain consistency in the logging output
replaced direct calls to ` mVibrator . vibration ( ) ` with calls to ` runOnUiHelperThread ( ) ` to
added a call to updateLastRemoteStreamId in HTTP2Session . java to ensure the last remote stream ID is updated for improved tracking
added text anti - aliasing setting for Graphics2D in EditorHeader and EditorToolbar classes to ensure proper rendering of text in the UI
[ java ] : use termwindowsize instead of nextoffsetposition in term publication .
fix ( core ) : remove static import of enums in ctannotationimpl . java ( # 1077 )
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` with a call to ` getRGBPixels ( Rectangle ) [
added a new method ` newPrintStream ` to handle character encoding in ` System . java ` to improve flexibility in setting output and error streams based
updated the vibration duration from 1 to 25 in the TouchableMovementMethod class to improve user experience by allowing longer vibration options
fix checkstyle issue in testenvironment and appenginesqlcloudsession
refactor WebSocketClient constructor parameters for consistency to improve code readability and maintainability
simonstewart : move the i18n test to the same place a the i18n test
[ hotfix ] [ runtime ] add loadconstantexception to sharedgraphbuilderphase and bytecodeparser
[ hotfix ] [ test ] restore auth system state in xmlworkflowserviceit
added a LowercaseComparator implementation to CoNLLUFeatures to handle string comparisons to improve code readability and maintainability by encapsulating
refactor JavadocTool to simplify parsing logic and improve error handling to enhance code readability and maintainability by reducing duplication
simonstewart : add a few more test for the multiselect option
added a validation check for the length of keys in HighestKvno . java to ensure that the number of keys matches the expected number of
added error handling for attribute retrieval in HDF5BatchReader to ensure that only Huge objects with 1 record are processed to avoid runtime errors
replace pdone with writeresult for bigqueryio . expand ( pcollection < t > )
rename ` copySnippetRequestEntity ` to ` createTemplateRequestEntity ` and add ` @ ApiImplicitParams ` annotation in ` ProcessGroupResource `
added a new file TestMultiANewArray . java to implement a Java class for testing multi - dimensional arrays to ensure that the Java process
[ hotfix ] [ core ] remove usesecondarystoragevm option from config . java
modified the logic for adding block IDs based on the head number in SyncBlockChainMsgHandler . java to ensure correct handling of block IDs
added theme setting for the preview tab content in PreviewTabView to enhance the visual appearance of the preview tab based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a test for HTTP idle time configuration in ConnectorTimeoutTest . java to ensure proper handling of idle timeouts in the HTTP client
add property for dictionary list , dictionary pmi , and signatures to make it easy to configure
renamed ` readIdentifier ( ) ` to ` readTagName ( ) ` and added a new method ` readTagName ( ) ` in ` DocComment
updated type parameters in JpaPagingItemReader and modified error message in JobLaunchingGatewayParserTests to improve clarity and correctness of error messages
changed log level from warn to debug in DistributedQueue . java to improve logging granularity for troubleshooting
refactor ColorExtractionService to utilize a new method for retrieving the hotseat palette to improve code readability and maintainability by centralizing palette
added default data table entry and cell transformer methods to TypeRegistry and TypeRegistry classes to enhance functionality for data table transformations in Cucumber
removed an assertion check for newAvailableShared in AtomicRemainder . java to ensure that newAvailableShared does not exceed initShared
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` boolean field and its getter method from ` ProjectGenerator ` and updated its value in ` WorkspaceAndProjectGenerator ` to
updated conditional check for USER _ PROPERTY and AUTH _ HEADER in DriverUtils . java to improve code readability and maintainability
added a new ` Contact ` class and updated the ` ApplicationController ` and ` BodyParserEnginePost ` classes to utilize it for contact form
guacamole - 102 : change permission to objectpermissionset to allow access to system permission .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new release version for improved functionality
[ hotfix ] [ runtime ] fix typo in traitfactory . setmode
updated method calls from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to enhance functionality
replaced manual resource closing with IOUtils . closeSafely in DocFieldProcessor . java to ensure proper resource management and prevent potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener for the overflow button in ExpansionViewHelper to improve user interaction by allowing the overflow button to be clicked
updated error messages in ` failWithoutSubject ` and ` OptionalSubjectTest ` to use " is a non - null reference " instead of " is
av help button : fix line height of the help button
move protobufferutilitiestest from network . p2p . network to util package .
fix issue with splitpane ' s divider position and side pane ' s width .
add crossreference functionality to the auxsubgenerator to handle case when there be an entry with a crossref .
[ geos - 5131 ] make geoserverfeaturesource and geoserverfeaturelocking use serializable type
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by using a more descriptive variable
add a listener to notify the avatar update event when a new one be update .
updated the import statement for the Command class in ShellCommand . java and ShellFactoryImpl . java to ensure compatibility with the correct SCPD server
added a test method to clean up the audit log table post parameters by position in AuditLogTest . java to ensure that the audit log table is
fix unchecked warning in componentcontext . inject ( class < t > clz )
added regex pattern matching for comment lines and refactored parsing logic in ACLFileParser . java to improve code readability and maintainability by util
updated MapRDBFormatMatcher and MapRDBSubScan to utilize DrillTable and FileSystemPlugin for improved table handling to enhance functionality and
added an ancestorDimensionValues map and modified node name handling in StarTreeNodeImpl and TestStarTreeNodeImpl to enhance dimension split functionality and improve logging clarity
added user unlock checks and refactored view closing logic in TouchInteractionService , BaseQuickstepLauncher , and RecentsAnimationDeviceState to improve
updated condition from widthStr to positionStr in Photo . java to ensure correct handling of position strings
refactored the validation logic in PKIXValidator to improve clarity and structure to enhance readability and maintainability of the validation process
[ hotfix ] [ hadoop ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . shenyu . integrated . test
cloudstack - 2577 : fix npe in listvirtualmachines api when listvirtualmachines = true
updated the method for retrieving JSON elements from ` remove ` to ` get ` in ` RuntimeTypeAdapterFactoryFunctionalTest . java ` to ensure
add storeundoinfoforproperties ( ) and setpropertiesoccurrence ( ) method to allow store undo info for property
replaced direct access to system property retrieval with a privileged action in XRCompositeManager . java to enhance security by ensuring access control during property retrieval
updated StreamCloseTest to use awaitility for checking the size of streams to improve test reliability by allowing more time for stream closure to complete
added ` doAfterFlush ` method to ` DocConsumer ` , ` DocFieldProcessor ` , and ` TermVectorsConsumerPerField ` classes
add support for non - deprecated configuration property in metadata generation
updated capacity and mask assignments in BiInt2ObjectMap , Int2ObjectHashMap , and Int2ObjectHashMap classes to use the length of the
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and modified file renaming logic in Hive .
[ java ] add more logging to parallelniosender . send ( ) .
added a null check for the context before creating a SchemeAndroidIDE instance to avoid potential NullPointerExceptions when context is null
fix native - image class loader unnecessarily by use the application class loader
changed the return type of modifyGrantedAuthorities method from void to List and updated its implementation in SwitchUserAuthorityChanger and SwitchUserProcessingFilter to
refactor JaxrsIntegrationTest to extend JaxrsIntegrationTestBase and add RawJaxrsIntegrationTest and JaxrsSpringMain classes to improve test
add support for sqlfeaturenotsupportedexception when set query timeout
added DataProviders for XML and supplementary character tests in XslSubstringTest . java to enhance testing coverage for various substring scenarios
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and added
added support for MariaDB sequences and updated the sequence generation logic in CreateSequenceGenerator to ensure compatibility with different database versions and improve sequence handling
[ hotfix ] [ test ] fix checkstyle violation in buffer class
replace BrokerResponse with TableDataManagerProvider in multiple test files to enable server metrics tracking for better data management
added support for MFLN extension in SSLExtension to ensure compatibility with additional MFLN features
changed the iterator type from ObjectIterator < T > to ObjectHashSetIterator and updated related iterator initializations to improve type safety and clarity in iterator management
updated character count calculations in Compose . java and TweetFragment . java to correct the logic for adjusting the remaining text length to ensure accurate
[ flink - 20536 ] [ connectors / cassandra ] add ttl configuration to cassandradatastore and cassandradatapointwritebuffer
modified the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter and updated related logic to enhance Xcode validation
added a method to retrieve terrain at a specified coordinate in TerrainGrid to enhance the functionality of the TerrainGrid class
added default handling for ` tree . defaultValue ` in ` Pretty . java ` and created a new file ` T6665791 . java ` with
added error handling for missing QuestEncryptionKeys . json in ResourceLoader to improve robustness by logging errors when QuestEncryptionKeys . json is
modified the return statement to check if push is not supported before returning the transport transport to ensure that the transport is not supported when pushing is disabled
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the signing of local witnesses using the private key from BlockCapsule to streamline the code by eliminating unnecessary signing
modified FileSystemView . java to return null if no roots are available and added security checks in Win32ShellFolder2 . java to enhance robustness
fix a bug in split table when copy cell from the last row of the table .
updated ListFragment to utilize a SparseArray for managing undo notes to improve memory management and manage notes in the undo list
[ issue # 132 ] add logic to store feedbackquestionid and feedbackquestionid in backup
removed null check for data in getTransferData method to simplify error handling by throwing an exception for non - null data
no effective change - code cleanup - remove unused
replaced Padding class with Rect for widget padding calculations in AppWidgetResizeFrame . java and Launcher . java to simplify padding handling and improve code
refactor multiple static MethodHandle initializations in NashornBeansLinker . java to use a static block and add consStringFilter to improve code
refactor ClassGraph and ScanResult classes for improved clarity to enhance code maintainability and readability
updated CountDownLatch variable name from ` latch ` to ` goAwayLatch ` and modified the timeout assertion in ` IdleTimeoutTest . java `
replaced calls to ` expectFailure . getFailure ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest
replaced ThreadLocal with null in Workbook . currentBook across multiple files to simplify code and improve performance by eliminating unnecessary object creation
added support for method invocations in ContactSecurityVoter to enhance security by allowing support for different class types
removed unused imports from DataLoader . java to clean up the code and improve maintainability
added handling for rowsAffected in the postUpdateLog method across multiple classes to inform users of successful or failed updates based on the number of rows affected
ggb - 2195 make sure we do n ' t lose space on the left and right margin .
updated foregroundFPS and backgroundFPS values from 0 to 60 in JglfwApplicationConfiguration . java to ensure foreground and backgroundFPS values
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper tracking and release of objects in both HdfsTransaction
replaced DefaultWebSocketFrame with a ChannelFutureListener for handling WebSocket frame closure to improve the handling of WebSocket close events in the DefaultHttpServer
updated TestApplicationEventListener class names and added new methods in StateMachineErrorTests and DocsConfigurationSampleTests to improve clarity and functionality of event listener
refactor SettingsActivity to use a dedicated method for setting the list background color to improve code readability and maintainability by encapsulating background
replaced Apache Commons StringUtils with OpenHAB StringUtils and added null check for line to ensure proper handling of null values and prevent null pointer exceptions
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to update accumulator values based on weight to enhance functionality for better
hbase - 26105 addendum fix javadoc warning in put and replicationsink
refactor RegExpFactory to use a cache for regexps instead of a Set to improve performance and maintainability by reducing redundant sets and caching
added a static method ` reset ` to the ` GameThread ` class to provide a way to reset the game thread state
added a login method to DigestAuthenticator that checks if the realm equals the login service name to ensure that the login process only executes if the realm
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and functionality to enhance parameter management and ensure correct merging of request parameters
updated InfoStatus messages to use lc instead of hiddenSingleton and modified LoggerContext ' s toString method to improve clarity of log messages and enhance debugging information
replaced ` countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog . java ` and ` HAService . java ` to
added a condition to check if the device is Android O and updated the UserAutoCompleteHelper to use it to ensure compatibility with devices running Android O and
updated schema info level from minimum to basic in SchemaCrawlerTest to ensure compatibility with the basic schema info level
refactor output stream handling in SaveTask to use BufferedOutputStream to improve performance and resource management during XML writing
replaced bytesToString method with UTF - 8 encoding handling in TestPayloads . java to improve compatibility with fixed - byte - length Unicode strings
fix mc - 103516 : do n ' t allow entity that do n ' t exist in the world . entity list .
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " to the list to
[ flink - 24158 ] [ runtime ] Protobuf marshaller should use array . hashcode ( ) instead of array . hashcode ( ) to
camel - search : fix switch / cases indentation see camel - 14540
pdfbox - 4071 : remove public modifier from class , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and headers to improve flexibility in handling HTTP requests by dynamically resolving headers
added a new method ` newResponseBuilder ` to create a ` ResponseBuilder ` instance to improve code readability and maintainability by encaps
added a notification call to notify the command start in AsyncBackgroundTaskManagerTest to improve test reliability by notifying the manager when a command starts
refactored the ` computePreviewDrawingParams ` method in ` PreviewItemManager ` and added a null check for ` mReferenceDrawable `
refactor tokenizer and filter handling in LukeRequestHandler to utilize CharFilterFactory to improve code clarity and maintainability by centralizing token and filter factory
replaced manual null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot arguments to improve code readability and maintainability by
added verbosity parameter to createSubContext method and adjusted output handling based on verbosity settings to enhance command - line output management based on verbosity settings
added a check to convert the schema to uppercase if it ' s " oracle " to ensure consistent schema formatting for oracle databases
[ hotfix ] [ test ] add log4j2 context name to asyncloggerallthreadcontextimplementationstest
added a new file TestShrinkToOneRegion . java that calls System . gc ( ) to facilitate garbage collection testing for the system
replaced string splitting with Splitter for splitting custom packages to improve readability and maintainability of the code
replaced ` utf8ToString ( ) ` method calls with direct context retrieval in ` AnalyzingInfixSuggester ` and added a new test
updated the handling of local attachments in PushsaferMessageBuilder . java to ensure correct data type is used for image attachments
updated the ` showLabelStats ` method in ` ModelExplorer ` , ` SequenceModelExplorer ` , and ` StripProvenance ` classes to
pdfbox - 4071 : remove unnecessary null check , a suggest by valerybokov
changed ` private static ` from ` private static final ` to ` private static final ` in multiple field test classes to ensure immutability of `
updated the evaluate method in UDFRound . java to accept a parameter for rounding instead of a fixed value to improve precision in rounding operations
refactor configuration retrieval in GraalJSScriptEngineFactory to use ConfigParser for injection and useIncludedLibrary to improve code readability and maintainability
changed class access modifiers from package - private to public for Test1 and Test2 classes to allow access to these classes from other packages
updated permission handling in PlayerEventListener to use " deny . no _ enter " instead of " permission . no _ permission _ event " to improve clarity
fix ( sql ) : improve performance of conditionandor and conditioninconstantset
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` Base
added random box and circle creation in Box2DCharacterControllerTest . java to enhance test coverage for random body and contact interactions
added tests for FLIGHT _ RECORDER _ OPTIONS options in TestBadOptionValues . java and updated thread buffer size handling in TestMemory
updated assertion messages in ObjectAlignment . java and Options . java for clarity to improve code readability and maintainability
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` and implemented target package extraction in ` AndroidManifestReader `
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of a fixed - size list to ensure that the acceptableThrowawayItems list is
replaced multiple instances of ` mh2 . invokeExact ` with ` ( byte ) mh2 . invokeExact ` and ` ( char )
reformatted code for better readability and consistency in MessageHandler . java to enhance maintainability and prevent potential starving issues during message processing
refactor Inflection class implementation to improve code readability and maintainability
add get / setlocale ( ) and setlocale ( ) method to evaluationcontext
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve maintainability
added a break statement to the switch statement in DrawerActivity . java to ensure proper control flow in the switch statement
updated import statements from ` Criteria . where ` to ` Criteria . * ` and modified debug logging to use ` query . getQueryObject ( ) `
ww - 4067 use userloggerfactory a a system property to configure logger
update adminaddpeerwithp2pdisabledacceptancetest to pass on targetnode instead of inputnode
rename the ` @ ConditionalOnMissingBean ` annotations to ` @ ConditionalOnMissingBean ` for ` livenessStateHealthIndicator ` and ` readiness
[ hotfix ] [ localpstoreprovider ] use concurrent map for localpstoreprovider
changed the access modifier of the ` deleteFiles ` method from public to private in ` TestUtility . java ` to enhance encapsulation and
replaced instances of ` Provider < T > ` with ` ServiceProvider < T > ` in ` ServiceLoaderSpliterator . java ` and ` TypeUtil .
make javainterop reflect . getfield ( ) throw runtimeexception instead of illegalargumentexception
added checks for toolchain creation in AbstractCell , ToolchainProvider , DefaultToolchainProvider , and related tests to ensure daemons are invalidated
do n ' t call removecontext ( ) if context be already add to the engine
updated string comparisons from ` indexOf ` to ` contains ` in ` AbstractCheckDescriptor . java ` to improve code readability and maintainability by
updated exported linker flag handling in PrebuiltCxxLibraryDescription and related tests to ensure correct linker flags are used for shared libraries
replaced the ` onConfigurationChangedInternal ( ) ` method with a new ` updateRecentsRotation ( ) ` method in ` RecentsView .
updated listener type checks to use generics for better type safety to enhance code readability and maintainability by using wildcard generics
fix a bug in abstractblockchain . gethashasstring ( ) that return the hash of the new block .
use getstorepathphysic ( ) instead of getstoreconfig ( ) . getcommitlog ( ) in defaultmessagestore
removed unnecessary try - with - resources for JvmGcMetrics and JvmHeapPressureMetrics in MicrometerMetricManager . java to streamline code for
add miss / found / miss stats to compaction log
added @ Deprecated annotations to multiple classes in JPASubQuery , JPACommonQuery , and JPAQueryBase to indicate that these classes are
added methods to check for the existence of the system UI object and execute a shell command for key events to improve test reliability by ensuring keyguard status
changed instance variables from static to non - static for logger and principals , and sessionIds in SessionRegistryImpl . java to enforce immutability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46587
[ bonsai ] do n ' t delete duplicate bonsai value
changed the parameter type of getText methods from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to
added @ notyetimplemented annotation to alertstest . java for marionette
added a try - finally block to handle potential IOException in SocketConnector . java to ensure proper connection closure and handle potential IOException gracefully
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update references accordingly to improve clarity and functionality
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing the heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and wrap ` Optional < BuildResult > ` with tracing
added a new method ` updateFirstLineShowing ( ) ` to handle drag - selecting text out of the TextArea ' s bounds to ensure
added configuration overlays for local , system , staging , and temp directories in TestInformationSchemaWithPrivilege . java to ensure correct directory configurations are
refactor graphics configuration retrieval logic to improve clarity and efficiency to enhance readability and maintainability of the code
tika - 4021 -- add test case for oom in legacy mode .
( chore ) camel - core - pipeline : copy result to exchange when process complete
updated argument handling and improved tag sorting in PrintTagList . java to enhance flexibility in parsing model files and ensure correct tag sorting
updated method call from ` getFullyQualifiedName ( ) ` to ` toString ( ) ` in ` InsertDeParser . java ` and added a new
add test for eofexception in journalcorruptioneoofindexrecoverytest
[ java ] use connectclient instead of startfromtruncatedrecordinglogtest to wait for cluster ready to complete .
updated the calculation of the outer rectangle in LineBorder . java to use a fixed arc value to improve the visual representation of rounded rectangles
fix npe in postgallerytypeimagerecyclerviewadapter when there be no gallery
updated the handling of the " DEPLOYMENT _ ID " column in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to ensure that
pdfbox - 4071 : rename ` ` fdf ' ' to ` ` interactive ' '
removed the ` moreColumnsOk ` parameter from multiple method signatures in ` AlterTableAddConstraint . java ` to simplify method signatures and improve code read
added a provisional engines map and modified engine handling logic in QuickfixjComponent to improve engine management and ensure proper management of provisional engines
added displayZoomControls property and methods in RoboWebSettings . java to enhance control over display zoom controls in the application
add corporea shovel and corporea bush support to the botania api
refactor ConnectionFactory to improve code organization to enhance maintainability and readability of the code
added a method to enable or disable menu items based on user settings to improve user experience by providing appropriate icons based on user preferences
updated the message resource used in the setMessageForEmptyList method from ` server _ search ` to ` favorites _ filter _ list ` to improve
updated @ ServiceRegistry . Setting annotations in EntityTests . java to improve clarity and consistency in test configurations
updated ` MotorMountConfigurationPanel ` to use ` subpanel ` instead of ` this ` in ` MotorMountConfigurationPanel ` and changed the parameter
use system . getproperty ( ` ` line . separator ' ' ) instead of system . lineseparator ( )
added getter and setter methods for creator and subject properties in POIXMLProperties . java and created unit tests for document properties in TestPOIXML
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] check for non - empty cnc file before try to read it .
rename ` Marker ` and ` Marker ` classes to ` FooCommand ` and ` FooCommand ` , and update related method signatures to improve clarity and
added support for handling jmod files in ClassFileSourceImpl . java to ensure correct file path resolution for JMod files
updated ` TreeBackedElement ` , ` TreeBackedPackageElement ` , and ` TreeBackedPackageElement ` constructors to remove the
replace direct assignment of client ID with PublicTokenRequest in Saml2TokenGranterTest and UserTokenGranterTest to ensure token parameters are
updated the method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure the correct
[ hotfix ] [ runtime ] add sync ( ) method to zookeeperwatcher
[ fix ] add checkeglexception in glutil . getcurrentcontext ( )
[ drools - 351 ] do n ' t remove rule flow group activation if it be already active
added a return statement in HystrixDashboardConfiguration . java to ensure proper exit from method execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added an assertion for the exception message in IoTDBPipeIT . java
fix checkstyle violation in clientqueuedisruptiontest . testclientqueuedisruptiontest
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl . getsignature ( )
changed the visibility of the validateInstance method from public to protected to allow subclasses to access and override the method
refactor GeoPointInPolygonQuery , GeoPointInBBoxQuery , and GeoPointPrefixTermsEnum classes to improve code clarity and maintainability
added a new file ` FakeBuildable . java ` and refactored ` OnDiskBuildInfoTest . java ` to use it to improve
use item . isempty ( ) instead of item . getitem ( ) .
rename ` stream _ path ` to ` stream _ timeseries ` in ` TSParser . java ` and update related references in ` SQLParser
added a check for the velocity condition to return 0 if it is less than or equal to EPSILON to ensure that the calculation fails when the
fix gcspinotfs . create ( ) and gcspinotfs . list ( ) method in gcspinotfs ( #
removed duplicate call to VertxUtils . blockCloseVertxByName to ensure proper resource management and prevent potential memory leaks
[ flink - 24165 ] [ table - planner - blink ] ddl - add history and sysperiod table ddl generation
updated the expected value of checkEngine from 2 to 3 in CarrotClusteringEngineTest . java to reflect the correct number of nodes in the
added JUnit Ignore annotation to SynDataReplyDataLoadTest . java to temporarily skip tests that need to be rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand ` and added a new class ` ParserStateObjectInputStream `
added null checks and objectQuotingStrategy initialization in ChangeSet and DatabaseChangeLog classes to ensure proper initialization of objectQuotingStrategy based
updated the method for parsing Metainfo from ` parse ` to ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to
deleted the CsrfControllerAdvice . java file to the functionality is no longer needed in the application
added quotePathList method to handle path quotes in AntCompiler . java to ensure proper formatting of endorsed directory lists for better readability
added scrim animation functionality to the Launcher and LauncherAnimUtils classes to enhance user experience by providing smoother transitions during background animations
updated the comparison logic in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to enhance type inference accuracy and improve test coverage for new
regenerate client with updated copyright year ( # 4382 )
added validation for long and absolute path prefixes in WindowsPathParser and corresponding tests in PathOps to ensure that UNC path prefixes can only be used
removed the initialization of InetSocketAddress and MulticastSocket for MulticastSocket in Promiscuous . java to simplify the code by eliminating unnecessary parameters
removed redundant calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
modify return statement to clone the result of nBits to ensure that the original nBits is not modified externally
changed the access modifier of deriveCollectorName method from private to protected and added custom name assertions in TestProfilerCollector to enhance encapsulation and
refactor type hint handling in MappingMongoConverter to use a separate method for clarity to improve code readability and maintainability by centralizing type hint
added performance measurement for the ` createProxyFactory ` method in ` ProxyMaker . java ` to improve performance monitoring for proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting for better debugging
replace the method ` reinflateWidgetsIfNecessary ( ) ` with ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( ) `
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to ensure proper functionality of file dialog interactions
fix display . update ( false ) and autoflush ( false )
add test to verify html part for student in instructorstudentlistpage
testignorance : fix testignorance to work with environment variable
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better readability and maintainability
added null check for pageable in QueryDslJpaRepository and a test for null pageable in QueryDslJpaRepositoryTests to
[ hotfix ] [ runtime ] add memorymanager . computememorysize ( ) for non - negative fraction
publishjmstest : increase timeout to prevent test failure .
refactor SnowballAnalyzer class to improve code structure to enhance maintainability and readability of the code
updated previousIndex handling in StreamingAggTemplate . java to reset previousIndex directly to - 1 to simplify index management and ensure proper management of previous
move plugin error message to a static method to improve code readability and maintainability
added a default method ` stream ` to ` StreamSupplierComponent ` that computes the intensity of the stream based on a ` TableIdentifier ` to
updated logging messages to reflect the fully played file instead of watched files and added a retry mechanism for file renaming to improve logging clarity and ensure
updated method signatures in InjectorProxy , ReflectionUtil , and StandardInjectorProxy to use newInstance instead of setAccessable to enhance method flexibility and allow
[ hotfix ] [ stream ] remove unnecessary close ( ) call from streamingcreatefunction
added unit tests for the ` ShowStatementTest ` , ` UnsupportedStatementTest ` , and ` CreateTableTest ` classes to ensure that SQL statements
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure the method returns an empty list instead of null
updated test message from " Deliberate error , to " to " Quality Distribution , Inc . " to " Quality Distribution , Inc . " to
added a check for ` websocketReconnect ` and refactored connection state handling in ` DeconzBridgeHandler ` and ` WebSocketConnection ` to improve
removed null attributes from the session attribute for ACEGI security authentication and target URL to simplify the session management by removing unnecessary null values
hbase - 11818 addendum fix testregionreplicareplicationendpoint . testregionreplicareplicationreplication . testregionreplica
added PMS configuration setup in FormatRecognitionTest . java to disable PMS configuration for testing purposes
fix a bug in the image store when create ova data disk template
updated imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to improve test execution consistency and maintainability
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to enhance code clarity
updated column names from ' metricVal ' to ' metricVal1 ' for consistency and clarity to improve code readability and maintainability by using consistent
added a check to ensure deleted documents and segment doc count match to prevent corrupt index errors due to document count mismatches
add a method to get the name of the sip logger , and add a method to log trace .
updated FilamentFactory . java to include a shorter length requirement for staves to improve clarity on staves with no starting barline
removed default value of handleFileUploads in VertxPlatformHttpServerConfiguration and set it in VertxPlatformHttpEngineTest to ensure proper handling
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
hotspotobjectconstantimpl : remove hotspotresolvedjavafield from hotspotobjectconstantimpl . getcallsitefield ( )
updated methods in SpellCheckComponent , AbstractLuceneSpellChecker , and DirectSolrSpellChecker to use addFrequency instead of add to improve clarity
replaced direct calls to ` Instant . now ( ) ` with ` Instant . now ( ) ` and added ` withWatermark ( now ) ` to
( chore ) camel - aws2 - sqm : make ` ` ctedefinition ' ' non - final
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for database metadata handling
updated the library command to include the root path from the project filesystem to ensure the library command is executed on the correct root directory
updated the slider model from 180 - 180 to 180 - Math . PI in RailButtonConfig . java to allow for a more accurate angle range for
make sure saveio . savetoslot ( ) do n ' t run on error
[ hotfix ] [ kerberos ] enable expression language in kerberos property
removed unnecessary conditional checks before setting the remote mount point scale for remote characters to simplify code and improve maintainability by eliminating redundancy
updated setupViews method to include ScrimView as a parameter and modified animation settings to enhance animation animation capabilities by incorporating scrim effects
[ hotfix ] [ changelog ] add an option to enable periodic materialization
added a private ` value ` field with getter and setter methods in ` ProtocolParameter ` and updated the XML attribute handling in ` ParamTagHandler `
add unit test to verify that chunking be support with the header ( http : / / issues . apache . org / activemq / browse /
add checkrouteranswer . isbumped ( ) and fix checkrouteranswer . isbumped ( )
added a header for " application / x - www - form - urlencoded " in SwitchToPostInterceptor and updated SearchRequestUnitTest to use it
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
replaced SQLFeatureNotSupportedException with logging for setFetchSize ( " rows " ) to improve error handling and provide clearer logging for unsupported operations
added multiple instances of AndroidNet initialization in AndroidDaydream . java to ensure consistent initialization of the net object
removed the unused variable ` _ numRowsConsumed ` from the log statement to simplify the code for better readability and maintainability
removed the ' false ' parameter from the getDepositAddresses method calls in KrakenAccountService . java to streamline the method calls by eliminating unnecessary
hbase - 26105 remove hbase - prefix - tree codec from tablemapreduceutil . java ( addendum )
added inflation handling in DesignerActivity and made root final in XMLLayoutInflater to improve user experience by preventing back navigation when inflation fails
refactor PushbackInputStream class to improve readability to enhance maintainability and facilitate future updates
make loweringphase abstract , so that it can be use by schedule .
updated error message from ` download _ folder _ failed _ content ` to ` sync _ folder _ failed _ content ` in ` ErrorMessageAdapter .
updated line ending scanners and test cases in Makefiles . java and MakefilesTest . java to support new line endings and improve test coverage
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and added null check for ` del
fixed bug in simplebatchnode . settransformrefresh ( ) , setboundrefresh ( ) be call before settransformrefresh ( ) .
remove isguaranteedsafepoint ( ) and use isuninterruptible ( ) instead
added framebuffer size handling in LwjglWindow . java to improve window size management and ensure proper resource management
updated translation variables for center and center task paraallax animations in LauncherAppTransitionManagerImpl . java to improve clarity and accuracy of task placement
updated the ` newInstance ` methods to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` and introduced a new ` NullLiteralNode `
added methods to set file lengths in CompoundFileWriter , FSDirectory , and IndexOutput classes , and implemented setLength methods in FSDirectory to improve file
updated AndroidManifest handling in ` AndroidNdkScriptGenerator . java ` and added new test imports in ` AntScriptGenerator . java
camel - 15836 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource in camel - aws2
added permission handling for " * " in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to enhance authorization functionality and improve test coverage
updated ZookeeperClientServerRegisterRepository to handle null and empty data cases more effectively to improve code robustness and maintainability by utilizing new data
[ hotfix ] [ test ] fix deep stub generation for non - serializable generics
added a check for the size of the contract ' s call value before converting it to a byte to avoid potential ArrayIndexOutOfBoundsException when accessing the
update log message to use parameterized string instead of string concatenation
updated the ` mapPBEAlgorithmToOID ` method in ` PKCS12KeyStore ` and modified the PBE algorithm name in ` P
tiff : fix potential eof exception when read tiff value
added validation for parameter presence and improved error message formatting in CommandLineJobRunner to ensure that invalid parameters are provided and provide clearer error messaging
updated message content assertions from " \ r \ n " to " foo " in SmtpTests . java and MailTests . java to ensure consistency
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID tracking to improve thread safety and performance by reducing synchronization overhead
added a new file ` Test . java ` containing a class ` Test ` with a method for calculating the sum of integers to provide a utility for
updated private fields to protected in WifiUsabilityStatsEntryBuilder and added maxSdk = R in ShadowWifiManagerTest and WifiU
added a new file ` Solution . java ` that implements sorting and acending of integers based on a specified number of queries to provide a solution for
fix concurrentmodificationexception when cf be add multiple time
refactor taskbar restoration logic to use a boolean variable for orientation changes to improve code readability and maintainability by reducing redundancy
refactor SyncFutureCache class implementation to improve performance and maintainability of the cache management logic
updated the default DynamoDB protocol version from " 2.0 . 1 " to " 2.0 . 2 " and added a new version for response attachments to reflect the
[ java ] uselessstringvalueof : fix false positive with string literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior of the
add configurable target max type shard size for hollowproducer to reduce memory usage
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBackwardsCompatibility . java
refactor CompilationTask to improve code organization to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis and modified database parameter handling in DDLTask to ensure correct location is displayed in test mode and improve code clarity
added a call to ` ClearDatabaseChangeLogTableStatement ` in ` AbstractJdbcDatabase . java ` to execute the clearing of database change logs for
added version handling and improved null checks in RestClient and CallPath classes to ensure accurate versioning and prevent null pointer exceptions
updated exception messages and added closed state management in PhoenixDriver . java to improve error handling and ensure proper resource management during registration
fix javadoc warning and javadoc warning in java . desktop
added unit tests to ConflictsResolveActivityIT and FolderPickerActivityIT , and modified FolderPickerActivity to include screenshot functionality to ensure proper cleanup
[ gr - 26458 ] fix the issue that nativeimagegenerator be not generate when devmode be enable .
fix stringhelper . removeleadingandendingquotes when copy be less than 2 char .
refactor JpaQueryCreator and ParameterMetadataProvider to improve type handling for NOT _ CONTAINING queries to enhance code clarity and maintainability
added a duration check for stored encryption before setting the push branch ID in SipSecurityManager . java to ensure retry transaction IDs are only set after a
added a call to dispatch a new P25Message instance in P25MessageFramer . java to ensure proper handling of message dispatches
added null checks for the handler parameter in WebSocketImpl . java and created a test for clearing client handlers on the end handler in WebsocketTest .
[ ds - 3131 ] refactored test to use new apis for indexablepooltask
updated widget padding calculations in AppWidgetResizeFrame and Launcher classes to use default padding for widgets to ensure consistent widget padding across the launcher
added methods to hide all apps in ` LauncherTaskbarUIController ` and ` TaskbarAllAppsController ` to enhance user experience by
removed the ` synchronized ` keyword from the ` launch ` method and replaced ` Thread . sleep ( 1500 ) ` with ` launcher . join (
updated the calculation of the point in JavaSEPort . java to correctly reference the canvas ' s coordinates to ensure the correct coordinate is used for rendering
refactor notification handling in UploadService to use startForeground method instead of notificationManager to improve code readability and maintainability by reducing repetition
fixed bug 1249797 - excessivepubliccounttest no longer report false positive on static final field
hbase - 16457 make testthrifthbaseservicehandler retry more robustly
change log level from info to debug for half offset committed / rolled back log message
added exception handling for FileNotFoundException in ResourceUtils and changed logging level from debug to trace in AbstractCipherExecutor to improve error handling and reduce log verbosity
added a new ` BittrexTickersResponse ` class and integrated it into the ` BittrexTickersRaw ` and ` Bittr
entityentry : fix the issue that entityentry . getenumconstants ( ) return null
refactor session registration and unregistration to use Object instead of Class to improve type safety and clarity in session management
updated character encoding in ` clist ` to include Unicode escape sequences to ensure proper handling of Unicode characters in the file system
added setter and getter methods for the stylesheet resource in ResourceService and updated related methods in ResourceHandler and DefaultServlet to enhance flexibility in stylesheet management and
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before processing new data
updated method call from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to ensure correct handling of pointer parameters in the method
updated the database type check from Postgres to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with the Cockroach
removed the check for the ' isEnum ' condition in the name comparison to simplify the condition for checking string types
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and added a new class SymbolNotFoundError in SymbolNotFoundError . java to improve error handling by
added support for only pseudo fields in BinaryResponseWriter to improve handling of document retrieval based on return fields
added handling for PING and PONG cases in WebSocketImplBase and created a test for pauseping in WebSocketTest to ensure proper handling of ping
updated NON _ IDENT _ ESCAPES string to include a hyphen " - " to ensure proper handling of non - identifier escapes in
refactor DnsResolverProvider to utilize a wildcard import and enhance DNS cache resolution logic to improve code readability and maintainability by consolidating
added conditional annotation for MessagingTracing class in TraceMessagingAutoConfiguration . java to ensure that MessagingTracing class is only used when it is present
refactor SQL query handling in SqlQuery . java and update test cases in TestContext . java and TestContext . java to improve code clarity and
updated import statements in multiple Java files to improve code organization and clarity to enhance maintainability and readability of the codebase
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49497
removed the visibility of the input field from TouchCharInput to improve user interface responsiveness during input interactions
added null check for the current user before comparing IDs to prevent potential NullPointerException when accessing the current user
updated JSObjectLinker to conditionally set the member based on the index to ensure correct assignment of slots based on the presence of a valid index
refactor DefaultUniqueTicketIdGenerator to initialize randomStringGenerator with a default instance and modify suffix handling to enhance flexibility in generating unique ticket IDs
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
mark multiple classes as deprecated with deprecation annotations to indicate that these classes are outdated and should not be used in future development
deleted the JoglDebugAdaptor . java file to the functionality provided by JoglDebugAdaptor is no longer needed in the project
added overridden ` toString ( ) ` methods to ` ExtraFieldPropagation ` class and corresponding test cases in ` AWSPropagation ` and ` ExtraFieldPropagation
added PendingIntent initialization in FileDownloader and FileUploader classes to ensure the PendingIntent is used for notification updates
refactor nextOrd method in Lucene80DocValuesProducer to include a set method to improve code readability and maintainability by encaps
refactor DateTimeFormatter class to improve code readability to enhance maintainability and facilitate future updates
refactor desktop properties for " DnD . Autoscroll . delay " and " Shell . shellFolderManager " in WToolkit . java to
added validation checks for principal , password , and keytab parameters in the setAdministratorCredentials method to ensure that administrator credentials are not null or empty ,
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and adjusted width used for tablet and two - panel screens
psurfacejogl : do n ' t set the color of the sketch window when use opengl
refactor Hashing class implementation to improve performance and maintainability of the hashing algorithm
updated the ` accept ` method in ` FileSenderFactory ` to use ` folderPath ` and ` fileName ` instead of ` file ` to improve
updated UserInfoActivity to use string resources instead of drawable resources and modified addToListIfNeeded method to accept additional parameters for content descriptions to enhance clarity
removed null check for newType and added null check for newType to improve code clarity and prevent potential null pointer exceptions
updated ACTIVITY _ START _ DELAY from 500 to 800 milliseconds in Launcher . java to increase activity start delay for improved user experience
added a constant for the web application home in SolrJettyTestBase and updated its usage in JettyWebappTest to improve code maintainability
reset selectedMotorSet to null and clear selection in ThrustCurveMotorSelectionPanel to ensure proper state management and prevent potential null pointer exceptions
added import for BufferUtil and invoked clearToFill method in ByteBufferPool to improve buffer management and ensure proper cleanup of buffer data
add support for entityid for notification rule trigger via rest api
updated authorization string from " authorization . ldap . " to " authentication . ldap . groupBase " and " groupNamingAttr " to ensure proper configuration
[ java ] delete exchange in durableontransient and queue delete in clusteredchannel when durable on transient .
[ hotfix ] [ test ] remove timeout from testbulkslotallocationfulfilledwithnewslots
added error handling for server connection in PingService and ServerInfoService to improve connection stability and error management during server connection
refactor CompositeHandlerAdapter class to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter . java to improve code structure to enhance maintainability and readability of the code
added exception handling for IllegalStateException in SulongLibrary . java to improve robustness by preventing crashes due to IllegalStateException
updated Spring Security schema version from 6.6 to 6.2 in multiple files to ensure compatibility with Spring Security ' s latest features and improvements
updated ` newNameResolver ` method to accept ` Args ` instead of ` Helper ` and modified ` DiscoveryClientNameResolver ` to use ` 
updated JavacParser to handle non - empty annotations and added a new method for earlier position handling to improve code robustness and prevent potential null pointer
added " com . sun . naming . internal . " to the import statements in CheckPackageAccess . java to ensure proper access control for the internal
changed the strict variable from false to true in StaxEventItemReader . java to enable strict validation for StaxEventItemReader
lucene - 10237 : fix offlinesorter to handle over - nexting case
refactor ActionResetingPool class implementation to improve performance and maintainability of the code
added a null check for the color mode before converting from XY to HSB type to avoid potential NullPointerExceptions when the color mode is not
refactored folder creation and rendering logic in CellLayout . java to utilize int arrays for target cells to improve code readability and maintainability
added a loading dialog to the FileDisplayActivity in FileOperationsHelper and removed redundant calls in FileDetailFragment and OCFileListFragment to improve
added null checks for ` uigestureFile ` before initializing ` xmlLogs ` and ` recordsMap ` , and ` xmlLogs ` ,
updated field naming policy tests to use Locale . getDefault ( ) for case - insensitive comparison to ensure consistent test behavior across different locales
added setListeners ( ) method to the result object to ensure the result has the correct listener configuration
added a new method ` loadWithNewGlobal ` to handle global loading and updated existing method handles accordingly to enhance the functionality of global loading by allowing
added methods ` fromJsonString ` and ` toJsonString ` to ` StarTreeIndexSpec ` for JSON string conversion to enable proper serialization and deserialization
added import statement for ObjectPostProcessorConfiguration in HttpSecurity , HeadersConfigurer , OAuth2ResourceServerConfigurer , OAuth2LogoutConfigurer , and ServerHttp
replace double quotes with single quotes for file paths in AndroidFileHandle , GwtFileHandle , and FileHandle classes to improve code readability and maintain
[ jbrules - 3131 ] fix npe in in operator when parent be null
added import for FieldCache and a commit method to purge the default field cache to avoid FC insanity when there ' s more than one
added test for message boundary event on process and inside subprocess multi - instance process
fix pointer analysis for static method ( jimplemethod ) .
http : / / issues . apache . org / jira / browse / amq - 4892 - add count of messagegrouphashbucket to
replaced boolean fips with slotId and updated related logic in Secmod . java to improve slot handling and provide clearer error reporting for unexpected
added alignment support to the add method in Layout . java and modified startRenderering method in GdxRenderer . java to enhance widget management by allowing
[ hotfix ] [ test ] ignore unalignedcheckpointitcase for now
added imports for Receiver , Synthesizer , and TargetDataLine , and modified typeClass checks in JDK13Services . java
added a check to prevent duplicate keywords in keywordToReference to improve efficiency by avoiding redundant entries
[ java ] reset the size of the exchange pairs to the size of the collection .
remove unused and unused method from worddictionary and seggraph
escape telegraf character in statsd line builder ( # 644 )
add udp port support for client broadcast on the same multicast address .
renamed ` OperatorMulticast ` to ` OperationMulticast ` in the Observable and OperatorMulticast classes to improve clarity and consistency in naming conventions
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for sending messages to complete
added a try - finally block around the initialization of the latch to ensure that latch is released after each test to prevent potential resource leaks
added destroy ( ) method to sessionfactoryserviceregistryimpl to ensure proper cleanup of event listener registry
[ java ] : move jwt token from local storage to web interface instead of home page .
[ pytorch ] fix typo in ivalueutilstest
added a TaskStackChangeListener to manage the visibility state of the force invisible flag in RecentsView to improve user experience by ensuring the force invisible flag
fix defaultsplitcharacter so it do n ' t fail if the optimization be broken
camel - 14263 : camel - cxf - do n ' t set the factory bean ' s property if it ' s null
refactor pending animation handling by extracting the removal logic into a separate method to improve code readability and maintainability
added debug logging and modified play time handling in LauncherAnimationRunner . java to improve debugging capabilities and ensure accurate play time calculations
added a conditional check for bailoutOnException in C1XCompilation . java and introduced a new BailoutOnException option in C1X
replaced hardcoded password and signing links with null values in Links . java and updated test assertions in IdentityZoneConfigurationBootstrapTests . java to
[ hotfix ] [ runtime ] rename ` ` previousexecutiongraphallocation ' ' to ` ` reservedallocations ' '
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String ` and introduced a new method ` getOnlyFormat ( ) `
[ geotiff ] add gc _ nodata property to geotiffreader
llvm : fallback to unavailable source section if there be no source section
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and ` DefaultExecutionContextSerializer
added latch handling in TestPathChildrenCache to ensure proper synchronization during connection state transitions
refactor ArrayTypeHandler to improve null handling for array types to enhance code clarity and prevent potential NullPointerExceptions
replaced the implementation of RegexpTunnel with reflection - based access to retrieve the prefix from REProgram to improve flexibility by allowing dynamic retrieval of regexp prefixes
updated application initialization to use Application . class instead of null to ensure proper application context is used for application configuration
[ drools - 102 ] add test case for npe on mutable global
replaced Preconditions with TransactionUtil for validating asset name , URL , and description in AssetIssueActuator to ensure that asset names and descriptions
make copypaste work for textfield , not textfield
updated text references in LGWebOSActions and LGWebOSHandler for consistency and clarity to improve code readability and maintainability by using descript
updated node management in TronNetService to use ` addAll ( seeds ) ` and ` getActiveNodes ( ) ` to improve code readability and
add more logging to basetokenstreamtestcase to help debugging
log4j2 - 126 : refactored patternprocessor . getnexttime and timebasedtriggeringpolicy to use a separate increment method
refactor ` performItemClick ` and ` findItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to improve item
pdfbox - 4071 : fix typo find by codespell on fossies . org
graphdecoder : add an aftermethodscope method to prevent npes
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and refactored attribute retrieval in getAttribute ( ) to improve session management and
updated HttpZipkinSpanReporterTest to use a manually provided service name instead of a manually provided service name to ensure that the service name is correctly
added logging statements and refactored spooling mode handling in JavaInMemoryFileManager and JavacToJarStepFactory to improve debugging and
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to reflect the purpose of the class as a
[ java ] increase timeout in clientmultimaplocktest to prevent test failure .
updated the ` ConfluentSchemaRegistryDeserializerProvider ` and ` ConfluentSchemaRegistryDeserializerProvider ` to include a ` CACHE _ CAPACITY
replaced the ` remind ` checkbox with ` checkAtStartup ` checkbox in ` UpdateInfoDialog . java ` to improve clarity and functionality of the checkbox
added multiple method signatures for " strongKeys " , " weakKeys " , " expireAfterAccess " , " expireAfterWrite " , and "
hhh - 11824 - fix bug in cascade action for non - transient property
added support for GETPROTO and SETPROTOCHECK methods in ScriptObject to enhance functionality to support proto property access
updated DEFAULT _ READ _ MODE from " heap " to " mmap " and refactored the instantiation of ImmutableSegmentImpl in ImmutableSegmentLoader
added support for ByteArrayTemplate in ArrayTemplateBuilder to improve handling of byte arrays in the template generation process
added Hipchat integration to SamlServiceProviderProperties and created CasSamlSPHipchatConfiguration class to enable integration with SAML SAMML
replace List with Set for commandRegistryUrls and update resource retrieval to use tools . command . properties instead of command . properties to improve performance and
updated warning log to include the current context of the path and added debug logging for uncovered HTTP methods to improve logging clarity by providing context - specific information
remove checkloggedin ( ) from svnrepositoryconnector . login ( ) , add loggedin flag in svn repository connector
camel - 14284 : camel - jms - do not create transactionmanager if transact = true and lazycreatetransactionmanager = false
vmware : fix typo find by codespell on fossies . org
refactor Timers class implementation to improve performance and maintainability of the timers functionality
replaced the import of ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter
removed deprecated UAX29URLEmailTokenizer constructors from UAX29Tokenizer . java to clean up the code and encourage the use of newer
removed Map < Object , Object > implementation from ScriptObject class and updated related assertions to simplify class structure and improve code readability
refactor EventBusMetrics class for improved event handling to enhance performance and maintainability of event tracking
do n ' t use locale for eperson if language be not specify
updated JaversTransactionalDecorator to implement InitializingBean instead of PostConstruct and added afterPropertiesSet method to ensure schema is set after properties are
removed null check for pgTypeName in TypeInfoCache . java to simplify the code by eliminating unnecessary null check
added server initialization logic in ScopedHandlerTest . java to ensure correct handling of server instances in tests
fix calltimeoutexception in wait - notify phase ( calltimeoutexception should be log )
updated the condition to check for empty username and password in RestLoginProcessingFilter . java to ensure that the filter correctly handles cases where username and password
updated permission node check from an empty string to an empty string to improve clarity and consistency in permission validation logic
renamed the ` encoding ` variable to ` sourceCharset ` and updated related methods to improve clarity and consistency in naming conventions
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in ` HostBean ` and related methods to simplify
added imports for GenericComponentModifier and FlightConfiguration , and refactored simulation handling logic in GeneralOptimizationDialog . java to improve code clarity and
camel - 14263 : camel - jbang - add option contextreloadenabled to enable / disable contextreloading
updated log4j configuration settings in CommonTestUtils . java to use consistent logging levels and properties to improve clarity and maintainability of logging configurations
updated PrologSizeSanityCheck . java file to improve performance and accuracy of size validation checks
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the codebase
added a check for non - markable content type before invoking the reset method in RequestBody . java to ensure that the reset operation only executes
added support for enable Neo4j embedded settings in EmbeddedNeo4jServer and modified filter logic in DefaultBeanContext and TypeArgumentQualifier to
update movementdebugcommands to use default move properties instead of hardcoded values
updated the random method to include a total weight parameter for better handling of weights to improve the accuracy of the random load balancer ' s randomness
refactor GsonParser and MetricsResourceTest to simplify cache string manipulation and improve error handling to enhance code readability and maintainability by reducing redundancy and
updated parameter comments for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to improve code readability and
replaced checks for checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) across multiple classes to ensure proper synchronization of transaction coordinator state
pipe : pipetaskcoordinator : pipetaskcoordinatorlock should use atomiclongblockingdeque instead of lockinglock ( #
added a conditional check for ` robolectric . usePreinstrumentedJars ` in ` DefaultSdkProvider . java ` to determine the dependency jar based
modified the conditional check from " if ( isSilent ) " to " if ( isSilent ) " in ExecDriver . java to ensure consistent behavior
added checks to prevent default value and required attributes on dynamic fields in IndexSchema to improve error handling for unsupported fields in Solr schema
do n ' t randomly send qrh repair command if it ' s randomly read
replaced ImmutableSortedSet with Iterables for handling included directories in PrebuiltCxxLibrary . java to improve code readability and maintainability by using
updated ` AdaptableX509CertSelector ` to initialize ` startDate ` , ` endDate ` , and ` isSNSensitive ` variables , and
replaced manual buffer size parsing with AbstractAppender ' s parseInt method to simplify code and improve readability
deprecate GuiScreenEvent . java in favor of GuiScreenEvent . java to improve code clarity and maintainability
removed multiple methods for adding and removing categories in CategoryEditSearchRecyclerViewAdapter to streamline category management and improve code clarity
# 118 - update ebean - cache api to support cachetype . getloaded ( ) and cachetype . getdata ( )
updated properties for mass , CG , and CD overriding components in RocketComponent . java to ensure correct properties are set for each rocket component
[ netbeans - 117 ] close the compiler cache if compilation fails .
refactor ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < V > ` instead of an anonymous ` Task < V > `
refactor WanReplicationServiceImpl to use a volatile executor and introduce a mutex for executor management to improve thread safety and ensure thread safety during executor
added null checks for ` tPartition . getSd ( ) ` and ` table . getTTable ( ) ` in ` Partition . java `
simplified lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to improve code readability and maintainability
added unit tests for the ` Files ` class and implemented the ` delete ` method in ` Files ` class to ensure proper file deletion functionality
removed try - catch blocks around socket closing in ServerSocketAdaptor . java and SocketAdaptor . java to simplify exception handling by directly closing the socket resource
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to ensure
replace currentWorkingDirectoryList . clear ( ) with addWorkingDir ( f . toString ( ) ) in Project . java to improve clarity and functionality of
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of null
changed access modifier of the String constant from public to private in GeneratedEntityDecorator . java to restrict access to the String variable to enhance encaps
removed the " localhost : 8983 / solr / update / json - dtype = application / json - jar post . jar * . csv
geospatialitem : fix issymbolicdiffers ( ) for max and min command
refactor client container initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve resource management and ensure proper shutdown
updated conditional logic in Linux . java to check for both null and open application presence to improve clarity and correctness of type validation logic
added cleanup methods for webApplicationContext and webApplicationContext in multiple test classes to ensure proper resource management and prevent memory leaks
added search functionality to RemoteBrowseHandler and enhanced resource retrieval in RemoteBrowseHandler to enhance user experience by allowing users to select a search string based on
removed visibility setting for neutral button in SetupEncryptionDialogFragment . java to improve user experience by preventing unnecessary UI elements
refactor itemdao method to accept boolean parameter for includearchived and includewithdrawn
updated string concatenation syntax in DDLTask . java to use single quotes for table names to improve code readability and maintain consistency in string concatenation
added OAuth2 exception handling and logging in CheckTokenEndpoint . java to improve error reporting and logging for OAuth2 - related errors
updated multiple Java files by renaming and adjusting method implementations to improve code readability and maintain consistency across the project
updated test cases to use parameterized response handling for identity zone operations to improve test clarity and maintainability by using a more descriptive variable name
increased dismiss delay from 20000 to 10000 in ExtractionModelFrame and DataBrowser , and updated tooltip text in SQLConsole to improve user experience by
[ ju5 ] add deprecation message for ` ` run single test method with junit5 ' '
replaced Exception with RuntimeException in WorkerShellStep . java to improve error handling by throwing a more general RuntimeException instead of a human readable exception
[ hotfix ] [ stream ] make flink ' s experimental annotation public
[ hotfix ] [ stream ] fix typo in streamcepstrumsource javadoc
added a boundary check for the index in the List class to prevent index out - of - bounds errors
replaced OrExpression with Parenthesis in assertions in CloneHelperTest . java to ensure compatibility with SQL parser ' s parenthesis type
added a confirmation option to the DebugPaste command in DebugPaste . java to ensure that the debug paste command is only executed when required
replace ` . get ( ) ` with ` . orelseThrow ( ) ` in multiple configuration files to improve error handling by throwing an exception when
ggb - 102 fix : do n ' t focus on new creation mode
updated imports and class references in GoBinaryDescription . java to use new classes for GoBinaryDescriptionArg to improve code organization and maintainability by
updated environment variable retrieval logic in Jooby . java to use a dynamic logback configuration file to improve flexibility by allowing dynamic configuration of the log
refactor SimpleRetryExceptionHandler to implement RetryListener instead of RetryListenerSupport and update related imports and methods accordingly to simplify the retry listener implementation and
fix elasticmeterregistry . writecounter to report whole count with decimal ( # 498 )
changed variable declarations from non - final to final for email and commits in Contribution . java to improve code clarity and ensure immutability of
fix junit formatter to use do - while loop instead of for loop
modified the handling of the " elements " field to ensure the original LinkedList is properly instantiated to avoid potential ClassCastExceptions when accessing the elements
enhanced exception messages in StaxEventItemReader to include resource URL details to improve debugging by providing clearer context on resource existence issues
testmultirendertarget now use a pointlight array instead of a list of pointlights .
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction . java to ensure safe retrieval of clientResult when currentProfile is null
replaced target ' s addNamespaceDeclaration method with newElement ' s addNamespaceDeclaration method to ensure correct handling of namespace declarations in the SaajS
added BigInteger initializations for cryptographic algorithms in KeyStoreManager . java to enhance security by validating algorithm parameters and string representations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` Mesh
set the engine version of the process definition in BpmnDeployer . java and its corresponding test in BpmnDeployerTest . java
updated property keys in VelocityEngine from " resource . loader " to " resource . loaders " and " runtime . strict _ mode . enable
add vmthreads . verifyiscurrentthread (solatethread ) and centrypointsnippets . addnextthread ( )
updated GenericUDFMapValues . java to handle null maps and added a new test class TestGenericUDFMapValues . java with null checks
corrected a typo in the test variable from " interceptors " to " handlerInterceptors " to ensure consistency in naming conventions across the
add config option to control the rate of the oil spout generation .
[ hotfix ] [ runtime ] add ` ` . clean - me ' ' to file existence check
updated exception handling to use a localization string instead of a hardcoded string to improve localization support for the exception message
updated import statements in CRLDistributionPointRevocationCheckerTests . java to streamline imports and improve code clarity
added an import statement for ` ZipConstants64 . java ` and modified ` ZipConstants . java ` to include ` ZipConstants64 . java `
refactor ` newFileSystem ` methods to improve file existence checks and error handling to enhance robustness by ensuring only regular file files are processed
updated the conditionPanel layout to use a horizontal glue instead of a fixed width to improve layout consistency and maintainability of the condition panel layout
updated the connection initialization in FailoverUpdateURIsTest . java to ensure proper connection handling during tests
added Gson @ SerializedName annotations to ServiceOsSpecific . java to enhance serialization support for various parameters
use deletebook instead of deleterecord to ensure that the db entry be only delete when necessary
refactor multiple Java files for consistency to improve code maintainability and readability across the project
ajp : fix off - by - one error in getbuffer ( ) .
stop the admin console server if it fail to start or stop it
removed the unregisterHandlers ( ) method and updated variable assignments in WebSocketImplBase . java to streamline the code and improve resource management
added configuration properties for ID transformation method , ID table , and log file in IoTDBDescriptor . java to enable configuration options for improved flexibility in
updated test cases to replace hardcoded values with configurable values and added a new DelayingSearchComponent class to improve test clarity and maintainability
updated the condition for mockTsp to check for the existence of the timestamp in TestSignatureInfo . java to ensure that the timestamp is not null
transaction : replace scriptbuilder . data ( ) with scriptbuilder . createp2pkhoutputscript ( )
updated the expression to include " / schema / types / fieldType " in addition to " / schema / types / fieldtype " to ensure compatibility with
added NullCompleter functionality to the Completers class and created a new OptionCompleterTest class to enhance the completer functionality by preventing null pointer exceptions
fix checkstyle issue in util / aws / s3 / s3utils . java
[ iotdb - 4892 ] fix the issue of invalid peer id in iotconsensus .
refactor FtpHelper to handle file uploads by introducing a ` UploadFile ` method and modifying the file handling logic to improve file upload
removed unused imports and added alpha values for replyButton in TweetFragment . java to improve code clarity and ensure proper visibility of the reply button
updated expected timestamp string formatting in AccessLogSupportTest . java to improve readability and maintainability of the test code
use tmp / testfiles - deleteme instead of testfiles - deleteme
replaced null checks for subscribers with direct initialization of subscribers to simplify the code and improve performance by eliminating unnecessary null checks
added a null check for marshaller in AbstractSamlObjectBuilder and simplified exception handling in AbstractSaml10ResponseView to improve error handling and provide clear
replaced printStackTrace ( ) method with LogUtil . warn ( t ) in DataBrowser . java to improve logging functionality for error handling
added a condition to check if the assets directory exists and updated test cases for static assets to ensure proper handling of assets in dev mode and improve test
[ hotfix ] [ state ] add writeoptions to rocksdbkeyedstatebackend
updated the DEFAULT _ FORMAT string from " value - tag - index " to " value - index " to ensure consistency in format naming conventions
add douglas hint to the request so that we do n ' t have to create a new one .
[ java ] : increase wait timeout for secp256k1 and altbn128 to 60 second .
rename ` DuclsSandboxTest ` to ` SandboxTest ` for consistency to improve code readability and maintainability by using a more descript
camel - 14263 : camel - cxf - should use exchange . setexception ( ) instead of log a warning .
make forwardpropagationtree public so that it can be use from other package
updated SQL query parameter from ' 0 ' to ' 20ms ' in JDBCExample . java to ensure correct grouping of time values in the query
add a warning if $ { project . basedir } expression be not support during profile activation
refactor Style class to improve code structure to enhance maintainability and readability of the code
added zoom handling in ShareActivity to handle back key events to improve user experience by providing feedback when zooming out the fab
added a conditional check to skip deprecated fields in Json . java to improve handling of deprecated fields in the code
added animations for showing and hiding the view in LauncherFragment to enhance user experience by providing smoother transitions during visibility changes
reformatted the method call in Utils . java for consistency to improve code readability and maintainability
added Progressable parameter to multiple methods and methods in Utilities , PTFRowContainer , and HiveIgnoreKeyTextOutputFormat to indicate progress during file writing
[ hotfix ] fix typo in sourcecoordinatorprovider
added methods to remove a contribution and update panel ordering and colors in ContributionListPanel to improve contribution management and ensure color updates are correctly applied
[ hotfix ] [ template ] fix typo in template adapter class name
added a check to set dPath to the user ' s directory if it is empty to ensure dPath defaults to the default user ' s directory
fix defaultaudiosink to use the correct samplerate for e - ac3
log4j2 - 1313 add filter ( ) method to mapfilter so it can be override by subclass .
[ hotfix ] [ test ] fix typo in verificationinorderwithcallstest
updated the parameter in the setFromAxis method from ` axis . z ` to ` axis . x ` to ensure the correct positioning of the
corrected the string value of COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to ensure consistency
test : add a test to verify that listener be connect at the start of the curator framework
updated type handling logic in DocRenderer . java and added new test cases in PHPCCDocumentationTest . java to improve code clarity and ensure correct documentation
refactor the one - handed mode detection logic in RecentsAnimationDeviceState . java to improve code readability and maintainability by reducing repeated calls
added onDetachedFromWindow method to manage task cancellation in AppsCustomizePagedView to ensure proper resource management and prevent memory leaks
added dictionary resource support to the Morfologik analyzer and filter classes to allow for flexible dictionary resource management in the Morfologik analyzer
replaced the variable ` count ` with ` thrown ` in ` ResultSetTest . java ` to ensure the test accurately reflects the expected exception count
updated the initialization message in InitializeProjectMessage from " debug " to an empty string to simplify the initialization process by removing unnecessary debug logging
replace AtomicReference with AtomicBoolean and addMVCC exception handling in AbstractPhenomenaTest . java to improve thread safety and enhance exception logging clarity
refactor tooltip text handling in ComponentTreeRenderer by extracting it into a separate method to improve code readability and maintainability by reducing duplication
increased the timeout duration from 5 seconds to 10 seconds in ` ZipkinStreamTests . java ` to allow more time for the zipkin server to
allow deviantart user to disable age gate when login fails
replaced Google signatures with GOOGLE _ PLATFORM _ KEY and GOOGLE _ LEGACY _ KEY constants in PackageUtils . java
updated solution business initialization in ImportDirSolveAllTurtleTest . java to use createSolutionBusiness ( ) method to improve code clarity and ensure
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state transitions
[ te ] add email description to the entity group key template
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
updated the language retrieval logic in Locale . java and added a test case in LocaleTest . java to ensure that the getISO3Language ( )
refactored the parsing process in Liquibase to use a dedicated method for creating UpdateVisitor to improve code readability and maintainability by central
added a check to return early if screen pinning is active to prevent unnecessary processing when screen pinning is active
added support for no data available text in the Chart class to improve user experience by providing clearer feedback on chart data availability
added synchronization to check if the header has been sent in Http1xServerResponse and Http2ServerResponseImpl to ensure thread safety when accessing
nettyresponse : do n ' t chunk chunk if ssl
updated test method names and header limits in Http2TestBase , TestHttp2Limits , TestHttp2Section _ 8 _ 1 , and Test
fixed - redissonlocalcachedmap . getkey ( ) , getvalues ( ) and getentry ( ) method in redissonlocalcachedmap
camel - 14284 : camel - jpa - do not set entitymanagerfactory and transactionmanager when start camel - jpa
corrected the spelling of ' jumpSpeed ' in PhysicsCharacter . java to ensure accurate representation of the jump speed variable
added a condition to check if reparsedFunction is null in the parser to ensure proper handling of cases where reparsedFunction is null
updated logger name from ` log ` to ` logger ` and refactored order book handling in ` BitstampPusherService ` to improve clarity
added deprecated methods ` getOldUploadSegmentHttpURI ` and ` getOldUploadSegmentHttpsURI ` to signal that these methods are outdated and
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to allow
[ jupiter ] add support for fail predicate in jupiter language test
added a bounded range for the alpha value in RecentsView . java to ensure the alpha value is within a valid range for better user experience
updated the formatting of the " Import - Package " attribute in ManifestReversion . java to ensure correct formatting of the Import - Package attribute
refactor DataSyncConfiguration class to improve code organization to enhance maintainability and readability of the code
added import for JavaSnippetRepository and initialized it in JavaLanguageServer to ensure proper initialization of snippet repository for improved functionality
modified the condition to iterate through all time buckets in StarTreeRecordStoreCircularBufferImpl . java to improve performance by ensuring all time buckets are updated
[ java ] update chromedriver . downloads . google . com to chromedriver . storage . googleapis . com / index . html
camel - 14263 : fixed pgevent and pgeventproducer to use preparedstatement in camel - pgevent
update com . rome . rome . feed . syndication . syndication . syndication to com . rometools .
added handling for " Content - Length " header in TransferCompletionHandler and updated NettyTransferAdapter instantiation in NettyAsyncHttpProvider to utilize
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
removed the constructor from the EnhancedRuntimeException class to simplify the constructor signature by eliminating unnecessary complexity
socketappendertest : wait for the server to receive a logevent to avoid race condition .
camel - 14284 : camel - aws - event - admin - not use camel - aws2 - event - admin
updated method signatures and exception handling in ByteArray . java for improved clarity to enhance code readability and prevent potential runtime exceptions
added methods to disable input proxy and log events in RecentsAnimationWrapper . java to improve touch event handling during animations
camel - 6770 : camel - restlet - remove @ ignore from camel - restletdomainservicetest
[ hotfix ] remove unused parameter in resizeandrehashifneeded
[ hazelcast ] move module - info from com . hazelcast . tests to com . hazelcast . test . modulepath
added a method to retrieve the source directories in JavaLanguageServerConfiguration and updated logging to include the number of source directories provided in the configuration to improve
updated menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to improve user experience by
updated method names from " nodeIsAncestorOfItself " and " nodeIsDescendantOfItself " to " nodeIsNotDescendantOfItself
fix possible infinite loop in worldeditplayer . getblock ( ) .
[ iotdb - 4892 ] fix insertnode ' s selfcheckdatatype to throw pathnotfoundexception when measurement be not find (
updated closing brace syntax in JavaCompiler . java to improve code readability and maintain consistency in formatting
[ hotfix ] [ table - common ] make mailboxexecutor non - transient
hbase - 25836 master rpc service should not throw remotewithextrasexception when settablestateinmeta and fixmeta be call
updated mapping syntax in GatewayMetricFilterTests . java for improved readability to enhance code clarity and maintainability by using a more descriptive method
use testclass . getjavaclass ( ) instead of testclass . gettestclass ( ) in unit test
[ hotfix ] [ k8s ] use lasttimedata instead of remoteitems for delete operation
modify calculation of allAppsCellWidthPx to include allAppsCellPaddingPx in DeviceProfile . java to improve layout consistency by
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
lucene - 4892 : use ' this . doc ( ) ' instead of ' doc ( ) ' in booleanscorer2
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure proper merging of multi -
changed the ` Session ` interface to implement ` Closeable ` and modified the ` close ( ) ` method to return ` void ` instead of ` Connection
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
removed printStackTrace ( ) calls from exception handling in SchemaValidatorTask . java to simplify error handling and improve code readability
replaced the throwing of UncheckedIOException with a direct catch block to simplify exception handling for better readability
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android features and improvements
RubyFlavorProcessor : use charsequence instead of string for quantifiers instead of string .
changed log level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
[ java ] remove unnecessary cache check in nio2endpoint .
updated CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for database reading to improve flexibility and maintainability of database reading logic
fix typo in instructorfeedbackresultspageuitest and instructorfeedbackresultspageuitest
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter in the ` useEncodedQualifierListOptimization ` method to enhance
removed the ` public ` access modifier from several methods in ` ApprovalStore ` , ` revokeApprovalsForClient ` , and ` Approvals
added a flag to track if the download process has started and notified when it has already started to improve user experience by ensuring notifications are canceled when the
updated method calls from ` getOpenView ` to ` getAnyView ` and added a new method ` getView ` in ` AbstractFloatingView
updated the project version from " 1.0 . 11 " to " 1.0 . 13 " and corrected the release date in JFreeChartResources . java
replaced instances of ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve thread safety by using
refactor GsonBuilder class to improve code structure to enhance maintainability and readability of the code
added null checks for centerGeo before adding it to circleCenters to avoid potential NullPointerExceptions during center addition
add -- espressohome = / path / to / espresso / home , remove unused home option
doc ( regen ) : fix typo find by codespell on fossies . org
changed the access modifier of the DeleteSessionAction class from protected to private and simplified the session configuration to enhance encapsulation and improve code read
corrected the class name from InvalidDocumentStoreApiUageException to InvalidDocumentStoreApiUsageException to improve clarity and consistency in exception class naming
initialized ` sz ` to 0 in ` JoinQParserPlugin . java ` and modified ` result ` initialization in ` SolrIndexSearcher . java `
updated the media scan trigger method to include a file parameter to enhance functionality by allowing media scans to be triggered with the specified file
removed conditional logic for postTestResults and directly postTestResults in TestRunning . java to simplify the result posting process based on verbosity settings
added custom G - code settings for various G - code settings in MainWindow . java to enhance custom G - code settings for better user experience
use utf - 8 encode for writer in additionaljaxbmappingproducerimpl to ensure utf - 8 encode output
refactor JsonElement class to improve code structure to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and ignored exceptions for " unset . sys . property " in TestBadConfig . java to improve test coverage
added a method to remove fragments and the action bar in GpsMainActivity to ensure that the current fragment is properly removed from the activity ' s
updated spanish token list in TokenizerAnnotatorITest . java to include an additional token type to ensure correct parsing of spanish tokens
updated ` RemoteMediaHandler ` , ` RemoteRawHandler ` , ` RemoteRawHandler ` , and ` RemoteRawHandler ` to use ` Range
updated the file name and modified printing statements in VisualizerCanvas . java and GcodeViewParse . java to improve clarity and functionality of the G
added support for new versions " 8.6 . 0 - cfs " and " 8.6 . 0 - nocfs " in TestBackwards
updated the formatting of the method call in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain
added a check to close the exchangeClient if the output stage is null and the query state is done to ensure proper resource management and prevent potential memory
fix integrity check fail when the file directory be not set
added import statement for SolrClient and a shardToClient map in ChaosMonkey . java to facilitate the mapping of SolrClient instances to the
added null checks before accessing the database configuration store to prevent potential NullPointerExceptions when accessing the configuration file
reformatted code for better readability in NestedRepositoryTreePanel . java to improve maintainability and clarity of the code
[ java ] make extensiontypeheader constructor public .
pdfbox - 4071 : throw ioexception instead of throw ioexception , a suggest by valerybokov
change default value of pushOnShutdown from false to true and add getter and setter methods to improve clarity and encapsulation of the pushOn
added error handling for state machine triggers in ReactiveStateMachineExecutor to improve error management during state machine operations
added a test to verify that multiple Python executables on a given path return the first path to ensure that the correct behavior of the Python interpreter is
added a default button for the signin button in InitialAccountRegistrationFrame to ensure the sign - in button is displayed in the user interface
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in Hive
updated error logging to include the exception object in the error message to enhance debugging by providing more context in error messages
move reflectionutils to the main package instead of the ` ` util . reflection ' '
added a static method ` listableCollector ` to ` OidcIdTokenClaimCollector ` in ` OidcIdTokenClaimCollector `
removed private Vector2 center fields from multiple classes to improve code readability and maintainability
fix : registerandprocessbundleoperation do n ' t register pcollections if the pcollection be null
refactor SslContextFactory to improve SSL context handling to enhance security and reliability of SSL connections
updated max expectations in tests to use default values instead of hardcoded values to improve clarity and maintainability of test assertions
change return value from " access _ confirmation " to " access _ confirmation _ error " in AccessController . java to provide a more specific error message
fix : consumerclassloaderfilter do n ' t set contextclassloader ( # 1196 )
modified the ` shiftRows ` method to include an additional parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to enhance row shifting functionality by allowing
renamed ` setRolloverIcon ` to ` setRolloverPressedIcon ` and updated its usage in ` FontImage . java ` to improve clarity
refactor grid translation handling in TaskViewUtils , TaskViewSimulator , RecentsView , TaskViewSimulator , and TaskViewSimulator classes to improve
refactor Assertions class for improved readability to enhance maintainability and ease of understanding for future developers
added null checks for ` currentDateTimeFunction ` in multiple database classes to prevent potential NullPointerExceptions when returning the current function
added a method to retrieve an anonymous path in IOUtils . java and updated Log4jUtils . java to use it to improve path handling and ensure
updated the ` DigitalWellBeingToast ` and ` TaskView ` classes to include a content description parameter to enhance user experience by providing
updated the timeout logic in CatalogTracker . java to handle cases where the timeout is zero to improve the reliability of the meta availability wait logic
refactor LineNumberTagAggregator and TestDominance classes to improve code organization and maintainability
[ smarthome ] fix genericitem . getstate ( ) return null
added integration for ClassImportIntegrator in BidirectionalOneToOneNPlusOneTest . java and implemented a test for fetching Post and Details
added a method to remove an extra empty screen from the workspace and modified the startSearchPageIndex initialization in LauncherModel to improve user experience by
updated initialization of ` baseDerivedRefs ` , ` HashSet ` , and ` IndexedValueMap ` to use the size of the collection instead of adding
updated MessageFormat formatting in GoogleLineChart , GooglePieChart , and GooglePieChart classes to use double quotes instead of single quotes to improve
refactor the wait logic in SendingAccountor . java to improve clarity and ensure proper handling of InterruptedExceptions during batch processing
hbase - 13236 add position to walprettyprinter to print the total size of the cell
increase Transceiver timeout from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to ensure proper handling of connection failures
updated SimpleReport to sort events before generating the report and added a test for sorting events before generating the report to improve event tracking and ensure the report
added a test for retrieving CSV lines containing double quotes in CSVFileLoggerTest to ensure that the CSV line is correctly formatted with an escaped quote in
add coref . doscore , coref . scorer , and coref . useconstituencytree to make the test run faster
added check to ensure that we do n ' t send iqs when the recipient be not remote .
removed the @ JniImpl annotation from VM . java to eliminate unnecessary dependency on JVM implementation
updated configuration settings for HTTP plugins in Fetcher2 . java to improve clarity and consistency in configuration settings
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java and
updated the package name from " other _ package " to " other _ package2 " in AstTests . java to reflect the correct name of the
fix worldborder . resizeworldborder ( ) and add unit test
hbase - 26105 addendum : do n ' t attempt to get walgroupsreplicationstatus if master be not online
modified the ` checkOpen ` method to accept an additional ` EventRenderable ` parameter and updated the ` checkOpen ` method to handle successful login events to improve
updated routingTableTest to generate instance configurations for the " dataServer _ instance " resource to improve test reliability by ensuring all instance configurations are
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
[ mng - 5656 ] add test case for erroneous project contain a reference
simplified the conditional check for proto equality in PropertyMap . java to improve code readability and maintainability
refactor controller ID handling in DoorbirdInfo and ControllerConfiguration classes to improve clarity and functionality to enhance code readability and maintainability by separating
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper resource management
removed the check for refresh token in prompts condition to simplify the conditional logic for better readability and maintainability
removed a debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced the extractor method with a custom NoopGetter implementation in BaggagePropagation . java to improve the handling of null values by providing a default
refactor ConditionalOnEnabledResourceChain class implementation to improve code readability and maintainability
added a condition to check if the tree root has child elements in BarrowmanCalculator . java to ensure that the logic correctly handles cases where the
corrected the reference from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in the JBIG2Filter class
updated FacebookImpl . java to use CN1 logging and added callbacks for restoring intent result listeners to improve logging clarity and ensure proper handling of intent
replaced string return values with return skeleton in ShadowICU . java and added a new test for DatePickerActivity in ShadowICUTest . java
removed the dependency on KeyguardManager and simplified the conditional check for device lock status to simplify the code and improve readability by eliminating unnecessary dependencies
cloudstack - 4892 : do n ' t try to get default disk offering if it do n ' t exist
replaced FileChannel with AsynchronousFileChannel in UtowBodyHandler . java to utilize a more efficient asynchronous file channel implementation
reformatted code for consistency and readability in SigInt and SigIntTest classes to improve code maintainability and enhance code clarity
use prepareboundingboxresize instead of updatebyboundingboundboxresize ( )
change return value from - 1 to 0 in Asset . java to ensure the method always returns 0 instead of - 1
updated the size and mapping functions in ComputeBenchmark . java to improve code clarity and maintainability by using a more descriptive variable name
added onRefreshListener method to UploadListFragment to notify the adapter when the data is refreshed
update bibdatabasecontext to use ` ` path ' ' instead of ` ` file ' '
replaced instances of ` emitters . items [ i ] ` with ` emitters . get ( i ) ` and added a ` dispose ( )
fix bug in tomcat . gethostbyname ( ) and tomcat . gethostbyname ( )
updated string formatting in BuildRuleFactoryParams , Console , and Test classes for consistency to improve code readability and maintainability
added a check to return early if the playback state is not PLAYING to optimize performance by avoiding unnecessary processing when not in playing state
replaced the retrieval of ServiceComponentDesiredStateEntityPK with a direct retrieval from the database to simplify the retrieval process and improve code readability
refactor Java2TypeScriptTranslator to improve module usage and add a new InnerClassFieldClash test class to enhance code clarity and ensure correct
added support for logging and follow - redirect filters in DockerClientFactory and DockerClientProfile to enhance client configuration options for better control over logging behavior
replaced direct calls to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure thread safety during display
hhh - 10183 : fix flaky test on postgresql
[ hotfix ] [ opc ] fix resource leak in ziphelper
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other classes
added a new test class ` TestSortedSetDocValues ` and modified the assertion in ` SingletonSortedSetDocValues ` to ensure that the next
updated error message formatting in CGIHandler . java and added JavaVM . start method in JavaVM . java to improve clarity of error messages and
added additional checks for line endings in LineReaderImpl . java to ensure proper handling of line end scenarios
changed method parameter types from List to Set for multiFetchSourceFiles and related methods in DistBuildService and ServerContentsProvider classes to enhance flexibility
added a check to return early if the vertex count is zero to avoid unnecessary processing when no vertex is available
updated the method name from ` shouldUseArgumentTypeWhenOverloadingPuzzleDetectedByOrderFailure ` to ` shouldPrintArgumentTypeWhenOverloading
replaced ` createData ( root , menuPath ) ` with ` createFolder ( root , menuPath ) ` in ` MacroService . java
remove unused import of node from typesystem and implicitcast .
refactor JsonObject class implementation to improve code readability and maintainability
updated conditions in SelectChannelEndPoint and HttpConnection to check if _ maxIdleTime is greater than zero and added a low resource check in HttpConnection
fixed farmlandblock . cansustainplant to be call on the plant ' s state instead of state ' s .
added a new primary key " SALTED _ BUCKETS = 3 " in QueryDatabaseMetaDataIT . java and modified connection handling in Upgrade
updated cookie date formatting in HttpCookie . java and added a new test class B6791927 . java to ensure consistent date formatting across different locales
removed multiple redundant db . close ( ) calls from DbHelper . java to improve code readability and maintainability by reducing redundancy
fix flaky test : increase poll timeouts
[ gr - 17499 ] economyallocationstage should use globallivenessanalysisphase and traceregisterallocationphase if available .
add keybindings to the source tab to be able to save keybindings
added line separator support to the ObjectMapper initialization in DrillTest . java to ensure consistent line separator usage across different operating systems
fix ` nativeenvironmentrepository ` to work with window path
removed Application dependency from multiple test classes and added a prepare method to shut down the Application instance to streamline the test code by eliminating unnecessary dependencies and
[ java ] remove unused recordinglog . validateexistinglog method .
test : use errorgroupname instead of groupname for integration test
testfuzzoptimizations : remove unnecessary sleep from testfuzzoptimizations
added a private boolean field ` reverseImage ` and updated its initialization in ` CameraManager . java ` to improve code readability and maintainability by
updated string comparisons in LoaderZipEntries , Repackager , and Repackager classes for consistency to improve code readability and maintainability by
fix mdmmatchlinksvctest . testmmmatchlinksvctest failure
updated test class imports and annotations from JUnit 4 to JUnit 5 in AuthenticationSuccessListenerTests . java to utilize JUnit Jupiter API
[ h2 ] use new . arraylist ( ) instead of new . arraylist ( ) in settypes
refactor TypeUtil class to improve code structure to enhance maintainability and readability of the code
updated ` triggerTime ` format to use ` LocalDateTime ` and ` TimeZone ` to ensure accurate time zone handling for alert notifications
added a method to maybe create an abstract method error thrower in MethodHandleResolver . java to improve error handling by providing a clearer error thrower
simple language : fix invalid body ognl expression
removed unnecessary check for empty toExplore in AbstractParser . java to streamline code by eliminating unnecessary checks
camel - 14284 : camel - jclouds - should copy the input stream to the input stream so we do n ' t have to
camel - 14263 : camel - core - fix the test failure of camel - spring - boot
updated conditional check in Check . java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java to ensure correct
[ java ] increase driver timeout in channelvalidationtest to prevent test failure .
added a new file ` FileExtensions . java ` that defines file extensions for C++ , C++ , and HPP files to provide a central
replaced the instantiation of ` ThreadLocalDateFormat ` with a static final static final instance of ` FORMAT _ PROTOTYPE ` and updated the initialization of `
removed deprecated VM options " FastTLABRefill " , " DeferPollingPageLoopCount " , and " DeferThrSuspendLoop
added a displayName property to client properties and updated related classes to utilize this new property to enhance user experience by allowing customization of client display names
replace RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a more specific exception for interrupted operations
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
refactor response handling in HttpBindServlet , HttpConnection , and HttpSession classes to use a new consumeResponse method to improve code clarity and maintainability
fix npe in eventdispatcher when parent be null
wallettool : remove keycrypterexception from catch block
added @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the service is outdated and should no longer be used
updated the handling of hyphenation lengths in HyphenationTree . java to improve clarity and correctness in the concatenation process
added a sleep delay of 200ms in IQRegisterHandler . java to ensure proper synchronization during registration processes
move resource to package so it can be use by simpleaccreg plugin .
corrected a spelling error in the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder . java to ensure
add a flag to reset provider to false when provider be change .
added a method to quote identifier tokens in the SemanticAnalyzer to ensure identifiers are correctly escaped based on configuration settings
pdfbox - 4071 : add miss ' name ' entry to font , a suggest by valerybokov
updated type casting and removed unchecked warnings in SolrResourceLoader . java to improve type safety and reduce unchecked cast warnings
modified the boundary condition in the Window class to include a check for the parent of the hit to ensure that the hit does not exceed the bounds of
added null check for appManifest before accessing its properties to avoid potential NullPointerExceptions when appManifest is null
refactor ` ConfigurationMetadataGenerator ` to use ` MAPPER ` instead of ` DefaultPrettyPrinter ` for JSON serialization to improve code readability and
added userName property and related getter and setter methods in Driver and HiveSemanticAnalyzerHookContext classes to enable customization of user name in SQL operations
added setter methods for file , URL , and input streams in XsltBuilder and updated XsltComponent to use this new method to enhance
added HadoopShim integration to multiple classes and updated method signatures to include it to enhance compatibility with Tez  s Hadoop features and improve
updated test cases in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to simplify code and improve readability by eliminating redundant
fix npe in coyoteadapter if context be null
do n ' t log message in throughputlogger if there be nothing to log
updated ` CompilerConfigFileWarning . java ` and ` ConfigFileWarning . java ` to use ` Platform . isDebugBuild ( ) ` for diagnostic
fix meterdetailstatisticsmodel re - usage in defaultlogpublisher
updated logback configuration handling in FrameworkLauncherExtended . java to ensure the logback configuration file is resolved correctly to improve error handling and ensure proper configuration
added @ NotNull annotations to various methods and classes to enforce non - null parameters to improve code clarity and enforce non - null constraints on cookie value managers
updated Escaper references from BASH _ ESCAPER to SHELL _ ESCAPER and added platform - specific command escaping functions to
refactor waitUntilReadyAndSucceed calls to use try - with - resources for container creation to ensure proper resource management and prevent potential
rename the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to align with the new naming convention
updated closing brace formatting in RelativeDateFormatTests . java to improve code readability and maintain consistency in formatting
added a method to generate the ShieldAddress in RpcApiService to enable the generation of the shield address in the wallet
changed the return type of readConsoleInput methods from byte array to String and updated its implementation to return a String instead of a byte array to improve
updated regex patterns for platform matching in TestStabilityRule . java to improve accuracy of platform matching in the validation process
added a conditional check to limit fragment counts for multi - valued fields in DefaultSolrHighlighter . java to ensure that multi - valued fields do not exceed
modified the ` tryToLogin ` method to accept both ` Uri ` and ` username ` and ` password ` parameters to enhance the method ' s
updated ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownRsp . java ` to handle null and
fix checkstyle issue in jmsproducer . resolveorcreatedestination
replaced ` wrapCollection ( parameter ) ` with ` parameter ` in the ` update ` method call to simplify parameter handling and improve code clarity
added handling for illegal currency exceptions in BTCEAdapters . java to improve error handling and logging for unknown currency errors
[ java ] do n ' t create demand subscription if the candidate name match the subscription name .
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new parameter ` useTenantIsolation ` to ` startController ` and modified related methods in ` ControllerTest ` , ` ClusterTest ` ,
replaced the use of ImmutableMap . builder ( ) with direct casting of response value to simplify code and improve type safety
added a check to ensure ` attrs . size ( ) ` is non - negative before proceeding to prevent potential ` NullPointerException ` when accessing
added abstract methods for project JDK name , type , and language level in AbstractIjProjectConfig and updated related classes to utilize project
changed the log level from " Experimenal " to " Experimental " in HiveSessionProperties . java to indicate that the optimization should not be
added a new test for resolving ACLs with specific user details in GrantedAuthorityEffectiveAclsResolverTests to ensure correct functionality of acl resolution for
use typesolver . getsolvedjavalangobject ( ) instead of reflectiondeclaration
added button management logic to XToolkit to ensure a maximum number of buttons is available to improve user experience by allowing dynamic adjustment of button count
updated import statement for assertEquals from the correct package to the correct package to ensure compatibility with the latest test library structure
added a new class ` MessagePackFactory ` and modified ` MessagePack ` to accept byte arrays instead of byte arrays to improve flexibility in creating unpack
add ` ` is _ cave ' ' and ` ` is _ desert ' ' and ` ` is _ cave ' ' to the list of known
rename ` present ` method to ` draw ` in multiple screen classes to improve method clarity and consistency in method naming
added conditional checks before setting the layout and updating UIIDs based on the horizontal state to ensure correct UI IDs are set based on the horizontal state
replace DOI _ URL _ PATTERN with matcher in DOIServiceImpl . java to simplify URL matching logic for better readability
replaced ` AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput . java `
[ java ] close commit position counter in cluster service if it be close .
test : add @ idclass for @ usersite and @ recordidclass for @ idclass ( recordidclass )
improve error handling for invalid ip : port in httpconverterregistrar
api : do n ' t return capacity type for storage _ allocated and storage _ pool _ id in listcapacity api call
replaced ` openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` fileLength ( fileName ) ` in ` NRT
updated the ` JavascriptCompiler ` class to use ` org . apache . lucene . expressions . js . JavascriptParser . ExpressionContext ` and
removed synchronization from the ` store ` method in ` UISettings ` class to improve performance by avoiding unnecessary synchronization
added a check for native text input and changed the access modifier of the fireDataChanged method from private to public to allow external access to the method
add retryonabortedexception message to spannerio write retry logic
replaced explicit generic type parameters with the diamond operator in multiple Java files to improve code readability and maintainability
updated array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java with utility methods to ensure correct cloning
updated nonce retrieval method from ` getClaim ( " nonce " ) ` to ` getStringClaim ( " nonce " ) ` and changed log level from
[ hotfix ] [ table - common ] fix handling of relationship field in dcinputset
added server slogan functionality to the capabilities table and updated related methods to enhance user experience by allowing theming to the capabilities table
updated conditional logic in DrawerActivity to handle the case where the menuItem is equal to the currentItem to improve code readability and maintainability by
updated the test to use JUnit ' s Assume for exception handling to ensure that the test only works when there is an available network connection
added a check to return early if missingSymbolEvents is empty in MissingSymbolsHandler . java to improve performance by avoiding unnecessary processing when no symbols are
updated StringHelperTest . java to include additional data elements and updated test cases accordingly to enhance readability and maintainability of the test cases
added a warning log when the data provider returns an empty array or iterator to ensure that the test does not proceed when the data provider returns an empty
use collections . emptylist instead of java . util . empty _ set
[ freeplane ] fix selection style with wild selection style
corrected the variable name from ' mass ' to ' restitution ' in PhysicsRigidBody . java to ensure accurate representation of
added a new file ` AutoFtpActivity . java ` to implement FTP testing functionality to facilitate testing of FTP connections in the GPS logger
refactor token type checking and unescape SQL string literals in BaseSemanticAnalyzer to improve code readability and maintainability by reducing duplication
added ` getImageX ( ) ` and ` getImageY ( ) ` methods to ` ImageViewer ` , ` OnOffSwitch ` , ` Component
added a new file ` RemoteExecutionEnabled . java ` to implement custom field serialization for ` RemoteExecutionConditional ` to provide a mechanism for enabling and
pdfbox - 4071 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` in ` ImportCsv . java ` and added UTF - 8 encoding warnings in ` PublicBAOS .
added a method to assert working score from scratch in AbstractScoreDirector . java to ensure shadow variables are not stale during scoring verification
updated the configuration property for semijoin conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added SLF4J logging to various datagram packet decoders and encoders to improve error handling for invalid ByteBuf instances
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated file retrieval logic in ` FileDisplayActivity
added assertions to verify the presence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is present and the transaction hash
added a deprecated annotation to the ISchemaRegion class and updated the test method from ` testConstructSchemaBlackList ` to ` testDeleteTimeseries
added a null check for sampleMimeType in MediaCodecRenderer . java to ensure that a valid sampleMimeType is provided to prevent runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource ` to improve
updated @ AllArgsConstructor to include @ JsonCreator with onConstructor _ = { @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES
added a check to prevent creating an index on a view in MetaDataClient . java to ensure that an index is only created on supported views to avoid
added a new class ` Website ` with properties for name , URL , and URI , and refactored tests in ` PopulatorImplTest
added setup method to BSFormatterTest to set the default locale to " US " to ensure consistent test execution across different locales
add a filter to filter out jar . zip file from coremods and log a warning if several jar file be find
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve test readability and maintainability by using
added checks for single parameter types in SimpleExprGenerator to ensure correct handling of passed local variables in the expression generation process
added a volatile boolean variable ` createdVertx ` and modified the conditional check to ensure that ` vertx ` is only created once to avoid potential null
updated writeAttributes method calls in NodeStyleBuilder to use a single instance of NodeModel to improve code clarity and maintainability by using a local variable
updated log messages to use " Synchronized " instead of " Synchroned " and improved null checks in FileDisplayActivity to enhance clarity
added an ` ignoredReadStatus ` field to the ` Entries ` class and updated related REST calls to ensure that entries are returned regardless of their
replaced MavenTestingUtils . getTargetURI ( ) . toURI ( ) with MavenPaths . targetDir ( ) in multiple test files to improve
added validation checks for URIRegisterDTO instances in RegisterServerConsumerExecutor and removed redundant null checks in URIRegisterExecutorSubscriber to improve data validation logic and
updated the condition for playing the sound to check if the sound is paused to ensure that the playing state accurately reflects the paused state of the sound
added PERMISSION _ ADMIN _ SUDO _ AREA permission to area checks in MainCommand . java and updated Captions . java
refactor query options handling in ServerRequestPlanVisitor and update test cases in QueryRunnerTest to improve code clarity and maintainability by centralizing query
replaced calls to ` toUri ( ) . getPath ( ) . endsWith ( " / " ) ` with ` path . getFileName ( ) . toString
updated assertions to check for different values of attribute values in ResourcesTest . java to ensure accurate representation of attribute values in the attribute set
updated the ` NMTWaitForDataMerge ` method and added ` NMTMallocWithPseudoStack ` method in ` WhiteBox . java
[ hotfix ] [ serializer ] migrate javaeitherserializersnapshot to implement new method of resolve schema compatibility
updated AddressResolverOptions to utilize a new resolv option and refactored related patterns to improve flexibility and maintainability of the code by
added a call to the superclass ' s associate method in RequestRockerTemplate and a corresponding test in RequestRockerTemplateTest to ensure proper context
pdfbox - 4071 : avoid npe , a suggest by valerybokov
updated namespace paths from " liquibase / parser / core / xml / xml / " to " liquibase . org / xml / ns / " across multiple
truffle : move commonmimetypelocator to test package .
updated RepositoryVersionState from INIT to NOT _ REQUIRED across multiple files to align with updated API practices and improve clarity in state management
updated the CompareControl constructor to include additional schema comparison types to enhance the comparison process by allowing different schema types for comparison
updated import statement from JUnit to TestNG in TestBackwardAnoamlyFunctionUtils . java to utilize TestNG annotations for testing functionality
added a new file ` ProgressiveJPEGTest . java ` for testing image processing in the Graphics2D framework to facilitate testing of progressive
updated material loading logic to set the alpha discard threshold and reset variables accordingly to improve material handling and ensure proper initialization of material properties
make native - image build error message more user - friendly
added a null and length check before setting the size of the label to avoid potential NullPointerExceptions when text is not provided
updated the method call from ` readVarInt ( ) ` to ` readVarInt ( ) % 1 _ 000 _ 000 ` to
changed class modifiers from public to public final for PushUtils , PushUtils , ThumbnailsCacheManager , and ThumbnailsCacheManager to enforce immut
replaced the calculation of the ` length ` variable with a call to ` curConfig . getLength ( ) ` to simplify the code by directly using the
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code by eliminating unnecessary type casting
updated the query parameter in the componentPresetDao ' s load method from " . * csv " to " ? i . * csv " to ensure
added a condition to check if the app is in an app before announcing for accessibility to ensure accessibility only occurs when the duration is greater than zero and
replaced direct calls to ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) ` in `
pmd : make sure we do n ' t attempt to target both jdk 1.5 and jdk 1.5
replaced PowerMockito with MockitoJUnitRunner and updated test assertions in QuotaResponseBuilderImplTest . java to improve test reliability and compatibility with
added PrintStream for error and output streams in TestSchemaToolCatalogOps . java to improve error and error handling during testing
hdfs : clear data encryption key after sasl negotiation
updated MongoQueryMethod constructor to include RepositoryMetadata as a parameter to enhance query functionality by associating repository metadata with the query
refactor EntityResolver to use a wrapper for EntityResolver2 and add property replacement functionality to improve code readability and maintainability by consolidating
updated import statements in MetaDataEndpointImpl . java to use static PhoenixDatabaseMetaData constants instead of Phoenix constants to improve code clarity and maintainability by reducing redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry interval in TxnHandler . java to improve
replaced ` xl ` with ` xAxis ` in ` BarChartActivity . java ` , added ` setStartAtZero ` in ` LineChart
added methods to validate printable characters in system names in FsUtils . java to ensure proper handling of printable characters in system names
rename ` ` in ' ' to ` ` using ' ' in webdriverrunner
add processpluginconfiguration option to projectbuildingrequest to be able to build plugin configuration
( chore ) camel - proxy : use ` ` d ' ' instead of ` ` d ' ' for integer conversion
updated RESOURCES path to check for the existence of a file in the google - cloud - vision directory to ensure the correct resource path is used based
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes , and added remote host retrieval in AuthenticatedUser to
add admin button to the request in communitylistservlet to allow admin access
[ hotfix ] [ compaction ] add counter for long and short compaction thread
updated the method of obtaining the package name to use a resource - based approach to improve resource management and ensure the correct package name is used
updated the method to retrieve player information in a visible list based on the executor to improve the accuracy of player visibility in the plot
updated AndroidManifest , ResName , ShadowMediaPlayer , ShadowActivity , and ShadowActivity files to improve code organization and maintainability across the project
refactor MlibOpsTest class for improved readability to enhance maintainability and facilitate future updates
replace string literals for " com . sun . management . internal . OperatingSystemImpl " with a constant reference to improve code readability and maintain
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a test for buildable references in Scheme
updated key and initialization logic in UploadFileOperation . java to streamline key and initialization process to improve code readability and maintainability by reducing redundancy
added @ Stability annotation to WorkProfileTest . java to ensure compatibility with different platform versions
removed conditional check for bucketing version in TezCompiler . java to streamline code by eliminating unnecessary checks
replace direct call to setCursorPosition with input . setCursorPosition in GwtTestWrapper . java to ensure cursor position is correctly set for the input
changed ` LockFreeBucket ` to an abstract class ` LockFreeBucketContendedTimeMeter ` and added a new ` LockFreeBucketLayout `
add tpstats to nodeprobe to print the available thread pool stats
updated maxBitrate retrieval to use userPreferences instead of a hardcoded value to ensure that the maximum bitrate is retrieved from the user preferences
refactor ZipkinHttpSpanExtractor to improve trace and span ID handling to enhance code readability and maintainability by consolidating trace and span
move getuserpaymentaccounts ( ) from createofferdatamodel to createofferdatamodel and make it abstract
remove reflection - based method call in fluttercompletioncontributor # withtypeiconrightaligned ( )
added a line to set the project to the file system in LauncherUtils . java to ensure the project is correctly managed during file operations
updated JsBundle , JsBundleBuilder , JsTestScenario , and JsBundleWorkerJobArgs classes to include ProjectFilesystem as a
refactor multiple envelope - related classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ doc ] fix typo in metricsdslcontext
refactor VersionBuckConfig to use ImmutableSet for entries instead of an interface to simplify the class structure and improve performance by reducing unnecessary complexity
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException during class binding
changed the access modifier of the ` validateTypes ` method from static to public and updated the exception message from " AST " to " LST "
chore ( deps ) : update gapic - generator - java with mock service generation fix ( # 49 )
added SLF4J logging to SimulationStatus class to facilitate debugging and monitoring of simulation state changes
updated the VERSION _ POSITION _ Y and VERSION _ FONT from 138 to 150 and added a new version font for the splash screen
refactor notification addition in UserInterfaceComponentImpl to run asynchronously to improve responsiveness by ensuring notifications are added concurrently
added a mock method that returns a list of elements in ReturnsElementsOf . java to ensure that the mock correctly returns the expected list of elements
corrected a typo in the error message when dropping partitions for a non - string partition column to ensure clarity and correctness in the error message
added a test method for LineFileDocs in BaseStoredFieldsFormatTestCase . java to ensure that the IndexWriter correctly handles stored fields with LineFile
added a method to retrieve the version code of the MainApp and updated FeatureList and FeatureList to use this method to improve code maintainability and
camel - 16265 : camel - core - bean : fix problem with method invocation body be ambiguous .
rename ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to improve clarity and
added buffer ownership checks and constructors to IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent memory leaks
added a transition for " forgotPassword " to the login form in PasswordManagementWebflowConfigurer . java to enhance user experience by allowing password reset
fix typo find by codespell on fossies . org
refactored code to use string literal instead of class to improve readability and maintainability of the code
updated variable names from ' s ' to ' o ' in InstanceOfPatternMatchTest , RemovedRedundantTypeCastTest , and Type
added logic to handle empty string arrays in StringDict and Table classes to improve data integrity by ensuring only valid strings are processed
deprecate container . start ( ) and implement autocloseable . withcustomizer ( ) in favor of container . withcustomizer ( )
updated logging level from info to error in MediaInfo . java and refactored test methods in RendererConfigurationTest . java to improve error handling and
added a schemapattern option to ` BundledDriverDatabaseConnector ` and ` PropertiesDataSourceDatabaseConnector ` to allow users to specify a custom schema pattern
bcjsse : fix npe in getsslsession ( ) when id be null
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve readability and maintainability of the code
refactor Base64 class implementation to improve performance and maintainability of the code
[ gr - 36464 ] add readi64managedsinglecontext and readi64managedsinglecontext to llvmglobalcontainer .
simonstewart : unignoring a test that fail on iphone
updated FlowBuilder and FlowJobBuilderTests files to improve code organization and maintainability
updated ` AttributeResource ` to use ` int ` instead of ` ResName ` and removed ` ResEntry ` class in ` OverlayResourceIndex
[ api ] add tl file support for docker context ( # 11824 )
refactor test to use @ before instead of @ after
modified the handling of TYPEVAR tags in ` mmm Attr . java ` and added a new class ` ppp T6450290 . java `
added logging level configuration to the LoggingFlags and LoggingOptions classes to allow customization of logging levels based on configuration
added logging statements to various classes and modified the deleteItemsFromDatabase method to use a Collection instead of Iterable to improve debugging capabilities and enhance debugging capabilities
added ` allFilesOption ( ) ` method to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` classes
added deprecated methods ` forEachOperation ` and ` hasMatching ` with ` BiConsumer ` and ` BiFunction ` to ` MutationOperationGroup ` to
updated the calculation of ` numPredictiveAppCols ` to use ` isPhone ( ) ` instead of ` numColumns ` to ensure accurate
updated the initialization of the value variable to use UTF - 8 encoding to ensure proper handling of character encoding in string conversion
added RequestMatchers class with methods for matching requests to improve the flexibility of matching requests based on specified matchers
ggb - 172 fix for mouse down in applet ( not mouse down )
updated calculations in ProgressBar to correctly reflect the height and width of the knob to ensure accurate positioning of the ProgressBar based on the
updated the path for the JSON definition file in PrestoSparkNativeQueryRunnerUtils . java to ensure the correct file path is used for
made several fields final in BruteArgumentMoverHandle and updated the permuteArgs method to include additional parameters to improve immutability and ensure
added a condition to check if the state handler is invalidated before executing gesture state checks to ensure that gesture handling only occurs when the state handler is
updated layout handling in DynamicGrid and Workspace classes to utilize constrained sizes for landscape and landscape layouts to improve layout responsiveness and ensure
added a condition to check if the redir file is " / robots . txt " in the HttpRobotRulesParser to ensure proper handling of
add a warning icon , and remove some unused import .
updated subscription strings from " continue " to " createWorld " and " return " in AdvancedGameSetupScreen . java to improve clarity and functionality of
updated null checks in UDFOPDivide . java and added unit tests in TestUDFOPDivide . java to ensure correct behavior when
refactor code formatting and improve readability in AbstractJob , FlowJob , StopAndRestartFailedJobParserTests , and StopAndRestartFailedJob
updated FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use matcherBuilder for processing URLs to enhance configuration flexibility for authentication request matchers in the
added onDestroy method to ShareActivity and ContributionsActivity to unbind the service to ensure proper cleanup of resources after activity destruction
updated variable names from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity by using a more
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a call to set the request timeout in RaftServerConfigKeys . Rpc to ensure that the RPC request timeout is set correctly based on the
updated logging level from error to debug in TsFileResourceManager and modified test cases in ResourceManagerTest to improve error handling and test coverage for time
added setSystemProperties ( System . getProperties ( ) ) method call to MavenModuleLoader . java to ensure that system properties are set for Maven modules
added server metrics tracking for readiness checks by adding OK and BAD calls to the ServerMeter to enhance monitoring capabilities for readiness checks in the application
added model handler to animatedtorch for custom item
added null check before closing writer in FileHistoryCache . java to prevent potential NullPointerException when writer is null
added a method to retrieve Hive configuration from a directory in UtilsForTest to improve flexibility in managing Tez configurations across test files
added a new link for Muting Users in FeaturesActivity to enhance user experience by providing a clear link for Muting Users
added initialization for " jdk . reflect . useDirectMethodHandle " with a value of " false " in System . java to disable direct method handling
hbase - 24499 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] improve deployment error message when environment variable ' lib ' or ' plugins ' be miss
update getronunciations method to use getword ( ) . getspelling ( ) instead of getpronunciations ( )
removed unnecessary newline character from JSON output formatting in JsonUtilsTest . java to improve code readability and maintain consistency in formatting
added extra ID to TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to store tweet IDs in their respective adapters to
[ hotfix ] [ runtime ] log a warning when a reliable topic be lose .
findbugs2 : throw noclassesfoundtoanalyseexception instead of ioexception
replaced the import of ` Key ` with ` PublicKey ` in ` KeyFetcher . java ` to ensure compatibility with the latest security standards
updated the ` isIncompatible ` variable to be ` true ` in ` DLNAResource . java ` to ensure proper initialization of the ` is
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to enhance functionality by integrating the
pdfbox - 4071 : avoid nullpointerexception , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 4676 - fix dlq test failure
set enableOffHeapFormat to true and update default Star Tree format version from " v1 " to " OFF _ HEAP " to enable off
updated the title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to ensure that the title does not exceed the maximum
updated the initialization of ` previewPanel ` in ` JColorChooser ` and refactored conditional logic in ` BasicColorChooserUI ` to improve
changed log level from info to debug in DefaultBuildExtensionScanner . java to improve logging granularity for extension checks
added a null check for reusable bitmap before retrieving it from the reusable set to prevent potential NullPointerException when retrieving bitmap
added a getLayoutParams method to the FakeView class to provide layout parameters and layout parameters for better layout management
added a check to throw an illegal state exception when a Cursor is already closed to ensure that an illegal state exception is thrown when attempting to use an
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
added @ ignore annotation to jmsclienttest to avoid test failure
added ` ` ts ' ' field with getter and setter / getter / setter for the ` ` ts ' ' field of the message class
[ opengrok ] add log for internal exception while processing request
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the class from other packages
[ isochrone ] fix query with legacy parameter .
changed class access modifiers from public to package - private in multiple test classes to enforce encapsulation and improve code readability
refactor CSRF handling by introducing a separate method for setting CSRF attributes to improve code readability and maintainability by encapsulating CS
added support for bootstrapping the ShadowClassLoader in EclipseLoaderPatcherTransplants . java to ensure proper loading of class loaders based on
jbrules - 2841 : add support for excel excel excel excel excel excel excel excel excel excel excel excel excel excel excel excel excel excel excel
changed log level from info to debug in HiveConf . java to ensure log messages are only logged when debug is enabled
added null checks and improved controller management in Lwjgl3Controller and Lwjgl3ControllerManager to enhance error handling and ensure proper
updated ObjectFactory imports from ` cucumber . api . java ` to ` io . cucumber . core . backend . ObjectFactory ` in WeldFactory and
added a null check before saving the port forward in PortForwardListActivity to ensure the port forward is saved only once to avoid potential null pointer exceptions
added a new configuration option ` SHOULD _ SNAPSHOT _ DATA ` to control snapshot behavior in the Liquibase container to allow users
updated the event handling in SyncedFolderObserver . java to check for a null path before creating a PersistableBundle to improve robustness by
refactor LocationMarshaller class to improve code structure to enhance maintainability and readability of the codebase
simplified conditional checks for trackpad motion events in StatusBarTouchController . java and TouchInteractionService . java to improve code readability and maintainability
hive - 13257 : remove the vectorreader interface from the llap module ( jesus camacho rodriguez , review by
replaced instances of Mockito ' s ArgumentMatchers with Mockito ' s Matchers in multiple test files to standardize imports for improved clarity and consistency
replaced the usage of ` getRelativePathName ( ) ` with direct calls to ` getRelativePath ( ) ` in ` AbstractPathSourcePath ` to
updated ` SegmentMapper ` , ` CompositeTransformer ` , ` RecordReaderFileConfig ` , and ` RecordTransformer ` classes to include ` RecordReader
fix argumentextractor for controllermethodinvoker # withargumentextractor ( ) and controllermethodinvoker # withparamextractor ( )
api : add findcorrectresourcelimitforaccountanddomain method to find correct resource limit for a domain
fix potion shift event not fire on the gui screen .
[ hotfix ] [ table - common ] deprecate cold _ reads _ to _ omit option in sizetieredcompactionstrategyoptions
[ java ] stop the leech thread when the test be fail .
[ issue # 11919 ] add label _ is _ retry to push message metric ( # 11919 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit Ignore annotation to ShadowDateUtilsTest . java to mark the test as ignored to temporarily skip the test for a moment
fix nettydriverreactiveautoconfiguration to use eventloopgroup instead of eventloopgroup
added ` UpgradeRequest ` and ` UpgradeResponse ` properties to ` UpgradeConnection ` and corresponding tests in ` ClientConnectTest ` to
added timeout support in AndroidImplementation and implemented isTimeoutSupported and setTimeout method in AndroidImplementation to enable dynamic timeout settings for better connection management
updated ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to return ` RegistrantAccessPermission ` for both users and teams instead
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing for quoted cast
modified file access assertion logic to handle root and executable scenarios to ensure correct file permissions are enforced based on the root platform
refactor FixedThreadExecutor to utilize dynamic property for group and thread management to improve flexibility in managing executors based on configuration settings
added null check for the field before checking for " catalogname " to avoid potential NullPointerExceptions when field is null
replaced CasEventListener with InitializingBean and updated method signatures to use InitializingBean instead of CasEventListener to enhance event handling capabilities and improve
refactor animation handling by extracting the endAnimation method into a separate private method to improve code readability and maintainability by encapsulating
added an overridden close method to DeflaterOutputStream to ensure proper resource management and prevent memory leaks
added a new file ` gsp001 . java ` with methods to retrieve system properties at early phase Agent _ OnLoad to facilitate testing of system
fix : do n ' t try to inject annotated method if it ' s declare .
update cameranode , lightnode , and cameracontrol to use inputcapsule instead of getcapsule ( ) .
updated PopupNotificationPanel to use the parent window ' s dispose method and improved error handling for popup window disposal to enhance user experience by providing a
replaced instances of ambiguous and unambiguous exceptions with inference exceptions in Infer . java to simplify exception handling and improve code clarity
added a method ` getFeatureValue ( ) ` to return the value of ` featureValue ` to provide access to the ` featureValue ` value for
changed the parameter type of the ` after ` method from ` int ` to ` long ` in ` Mockito . java ` to allow for more flexible
added onBuild and executionDriver fields with their respective getters and setters in ContainerConfig and Info classes to enable configuration of build and execution driver
added conditional logic to set the icon based on the RTL state in Toolbar and FlowLayout classes to ensure proper icon placement for right - to -
added enablePositionIncrements configuration to StopFilterFactory to allow configuration of position increments based on user preferences
updated EmailsTest . java and SystemErrorEmailReportTest . java to use InternetAddress instead of hardcoded values to improve code maintainability
added a new boolean variable ` mTryShareAgain ` and initialized it to false in ` FileActivity . java ` to ensure that sharing is
[ jansi ] add support for tty in jansi native
refactor bytes handling in BandwidthProcessor to use bytesSize instead of bytes directly to improve code clarity and maintainability by using a more descript
replaced direct calls to ` then ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to improve test
updated API base URLs in EaseeBindingConstants . java to use a private constant to enhance encapsulation and maintainability of the
updated sleep duration in KafkaIOIT . java and added startup attempts in KafkaContainer . java to improve read timeout handling and increase startup time for better
replace allOf with is ( itemName ) in SearchResultMatcher . java to simplify the matcher logic for better readability and maintainability
added SSL trust management functionality to OkHttp . java to enhance security by certifying client and server certificates
refactor long click handling in TaskbarButtonsViewController and TaskbarNavButtonController to use a unified method to improve code readability and maintainability
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use byte values instead of byte values to
added null checks for workingDirectory in ShellStep . java to ensure stdout and stderr are set to avoid potential NullPointerExceptions
increase timeout in asyncappendertest to reduce flakiness
refactor escapeDatabaseObject methods to accept additional parameters for object type handling to improve code clarity and maintainability by centralizing object escaping logic
added a boolean field ` inputChanged ` to track if the input has changed in ` MaterialRenameDialog . java ` to improve the handling of input
added a test for state change in ShadowDisplayTest and implemented state change method in ShadowDisplay to ensure correct display state handling and improve test coverage for
[ geos - 7131 ] add support for direct operation in dispatcher
added support for GWT keycodes KEY _ X and KEY _ Y in GlobalKeyDispatcherW . java to enhance key input handling for G
updated SQL queries in PgDatabaseMetaData . java to conditionally include primary key conditions based on server version to ensure compatibility with PostgreSQL '
[ hotfix ] [ core ] fix npe in queuechannel . getmessage
updated method signatures and variable names in FileUtils . java for clarity to improve code readability and maintainability by using more descriptive variable names
refactor RemoteCollector initialization to handle Jenkins nodes based on application name to improve accuracy in collecting application information for Jenkins
updated HeadersBeanDefinitionParser to resolve attribute retrieval for " disabled " and " defaults - disabled " attributes to improve code clarity and maintainability by centralizing
hbase - 14545 ProtobufLogReader should not throw eofexception when seek to the end of the file , a suggest by valerybokov
refactor destroy method calls in DefaultApplicationDeployer and add shutdown method in NacosRegistry to improve code clarity and ensure proper cleanup of nacos
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to utilize a dedicated method for writing status codes to improve code organization and maintainability
added a print statement to validate the JSON output of the AuditEvent to improve debugging and ensure the correctness of the JSON output
updated rounding error handling in Interpolation . java to return 0 instead of a negative value to ensure correct computation of rounding errors
corrected the path format in ForgeWorldEdit . java to ensure correct initialization of the default directory path
refactor DxStep to store the DX executable path in a variable before adding it to the builder to improve code readability and maintainability
added instanceof checks for PointRangeQuery instances in TestPointQueries . java to ensure proper equality checks for PointRangeQuery instances
hbase - 26464 testhfilecleaner should use mock _ archived _ hfile _ archive _ directory for test
do n ' t show the file name if the request have the same name .
do n ' t swallow exception in jedisclustercommand . execute ( )
[ hotfix ] [ table - common ] set chainingstrategy to always for rowtimeminibatchassgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap and added new test cases for regex
( chore ) camel - qmap : improve the performance of the qmap test
initialize G _ SCH _ B with a new HashMap in HybridPlotWorld . java to ensure G _ SCH _ B is properly initialized
updated GroovyEngine to handle empty fields and refactor identifier processing to improve code robustness and maintainability by using a more descriptive regex pattern
added a call to setDrawable ( false , false , false ) on the GeoAngle object to ensure that the GeoAngle object displays the correct drawable
hive - 14545 : make hiveserver tcp keepalive configurable ( zoltan haindrich via ashutosh chauhan )
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve clarity and consistency in method naming
no effective change - code cleanup - remove unused import
refactor RealtimeSegmentRelocator to use lambda expressions instead of custom ThreadFactory to improve code readability and maintainability by using lambda expressions
vpc : do n ' t try to start the vpc if it fail to start
updated the calculation of windowAlpha in WindowTransformSwipeHandler and modified the condition in FloatingIconView to ensure windowAlpha is non - negative to
updated fatal error message to reference Spring Security 4.0 schema to ensure compatibility with Spring Security 4.0
[ hotfix ] [ test ] remove unused protosubjecttest . isproto3 ( ) check
[ hotfix ] fix checkstyle violation inruptorprovidermanage and disruptorprovider
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` and ` ExprNodeGenericFunc
updated regex pattern in LogMessageWaitStrategy and added a parameterized test in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
updated logger initialization to use the logger method directly instead of using a local variable to improve code readability and maintainability by reducing redundancy
replaced ` updatePurge _ time ` with ` deletePurgedShardNodes ` and updated related SQL statements to simplify the SQL batch syntax and improve clarity
added support for JavaLanguageModule " 17 " and " 17 - preview " versions in JavaLanguageModule to ensure compatibility with Java versions 17 and above
[ hotfix ] [ core ] wait for compression job to finish before start timebasedrollingpolicy
[ hotfix ] [ runtime ] fix null pointer exception in volatilereadnode
added a method ` getSteps ( ) ` to return an unmodifiable list of steps and improved formatting in the ` getStep ( ) ` method to
added ` fromBase58 ` , ` toBase58 ` , and ` contractAddressBase58 ` fields to ` TronJsonRpc ` ,
refactor currency pair retrieval to use a local variable for clarity to improve code readability and maintainability
fix meter registry compatibility test for longtasktimer
[ euphoria - espresso ] do n ' t partition tuples if the partitioner be a hashpartitioner
updated color value handling in HostEditorActivity to use CharSequence instead of StringArray to improve code clarity and ensure proper type handling for color preferences
replace ` IncompatibleDatabaseHandler ` with ` DatabaseVersionHandler ` and update related methods to use ` SystemProperties ` instead of ` IncompatibleDatabase
added a constant ` MAX _ TWEETS _ IN _ CONVERSATION ` and modified the loop condition to check for replies size to
increased the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map to be refreshed
[ flink - 24105 ] [ queue ] fix the persistence byte size of fully acked deleted tail page .
fix checkstyle issue in server / net / glowserver / glowserver . java
refactor grow method to improve code readability and maintainability to enhance code clarity and reduce duplication in the grow method
added import statement for java . io . DataOutputStream in GdxSetup . java to utilize DataOutputStream for data handling functionality
camel - 14263 : camel - multipart - add method getsubmittedfilename ( ) to expose part ' s submitted file name
added markReadForLoad ( ) method to LauncherFragment . java to enhance load tracking for better user experience
added ClassNotFoundException to the main method and modified the instrumentJar method to handle NegativeArraySizeException to improve error handling and provide clearer feedback
added a new method ` checkForSpillPossibility ` to check for a partition to flush to ensure that out - of - memory errors are
refactor codecDocStoreFiles to use a variable dsName instead of a direct reference to getDocStoreSegment ( ) to improve code clarity and
added a default name ID format constant and initialized supportedNameFormats if it is empty to ensure compatibility with SAML name ID formats when no supported formats
added redirect functionality and error handling for password change to improve user experience by informing users when a password change is aborted
added a semicolon to the closing brace in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time
deleted the FontScalingTest . java file to remove unnecessary font size calculations to streamline the codebase
added validation for begin and end date filters in RRD4jPersistenceService . java to ensure that only valid dates are processed before the end date
added a check for negative vector counts in GenericUDAFComputeStats . java to prevent processing when the number of vectors is negative
test : migrate executablereftest to junit 5 ( # 4576 )
added null checks before setting view and glassPane to null in JLayer . java and created a new test class bug6994419 . java
added wiretap ( expression ) method to allow to configure the wiretap with a custom expression .
change visibility of setAction method from public to protected to allow subclasses to access and override the setAction method
add planner . enable _ topn a system option for pushlimittotopn
[ java ] remove aerondirectoryname from test aerondirectory configuration .
fixed - rbatch . execute ( ) method do n ' t execute in batch mode if the batch be n ' t ready yet . # 42
refactor ` getConfVarInputStream ` to return a ` URL ` instead of a ` InputStream ` for configuration variables to improve performance and maintainability
updated device reference in createModel method to use criteria ' s device instead of default device to ensure correct device is used for model creation
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to enhance menu functionality for better user experience
refactor CertificateValidator class to improve certificate validation logic to enhance performance and maintainability of the certificate validation process
use the hawtio . dirname system property instead of the user . home system property .
added a condition to return SINGLE _ SPACE when comments are empty to ensure proper handling of whitespace in comments and improve code readability
changed variable ` mClosed ` , ` mActualDictionary ` , ` mNativeDict ` , and ` mNativeDictionary ` to ` private volatile
removed printStackTrace ( ) method call from Throwable class to streamline error handling by eliminating unnecessary stack trace printing
test : move custom item drop test to integration test
added a ` ifNotExists ` flag and modified related methods in ` DDLTask ` , ` DDLSemanticAnalyzer ` , and ` Add
[ flink - 26411 ] [ test ] fix nfssecondarystorageresource . read ( ) to read the first byte correctly
[ java ] remove unnecessary controlrequeststreamid call from archivenode .
updated spatial operator elements in CapabilitiesTransformer and added a test for supported spatial operators in WFSTestSupport to enhance spatial operator handling and ensure correct
added import for LuceneTestCase and annotated BasicDistributedZkTest to indicate that the test awaits a fix to address issue SOLR - 2161
refactor the condition for determining preface match in Http11InputBuffer . java to improve clarity and maintainability of the code logic
[ java ] change default value of isingressexclusive from true to false .
updated HBaseStorageHandler to use an array of cache keys instead of a single constant to enhance flexibility by allowing multiple cache configurations
added methods to track and update the running record count in JSONRecordReader to improve tracking of record counts for better error reporting
added filtering for year entries in CategorizationFragment to ensure only valid year entries are removed from mergedItems
updated drawColor calls from 0x00000000 to 0 in CacheableTextView , CellLayout , and HolographicOutlineHelper classes to improve color rendering by
added a check to prevent rendering with OpenGL ES 2.0 in Mesh . java to ensure compatibility with OpenGL ES 2.0
set actioncontext to null in backgroundprocess to avoid npe
updated ` getUnescapedName ` method to include ` dbName ` and ` isInsertIntoTable ` parameters for better handling of database names to
added connection timeout configuration and made the count variable final in StubConnection to improve connection reliability and enforce immutability of the count variable
added new test cases for percentile queries in TestHiveAggregationQueries . java to enhance testing coverage for percentile functions in the Hive database
updated DEFAULT _ IDLE _ TIMEOUT from Duration . ZERO to Duration . ofSeconds ( 30 ) and refactored idleTimeout and writeTimeout
replaced account . name with user . toPlatformAccount ( ) . name in the getSharesWithForAFile method call to improve code clarity
updated Inet6Address . java to improve type safety and handling of null values to enhance type safety and prevent potential NullPointerExceptions
refactor PlaybackControlView to use a new method for enabling and disabling buttons to improve code readability and maintainability by consolid
updated method signatures in ` Session ` and ` Token ` classes to use ` sessionID ` instead of ` Session ` to improve code clarity and ensure
changed the method from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java
change default value of UseExceptionProbability from true to __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ to
updated the logic for setting newPlateColor based on the icon ' s theme status to improve the visual consistency of the app ' s icon color
refactor mysqluser . touserwithblobs ( ) and touserwithblobs ( ) method so that it do n ' t generate
added " center " alias to the aliases list to ensure consistency in naming conventions
added DirectUpload dependency and inject method to CommonsApplicationComponent to enable dependency injection for DirectUpload components in the application
added axis space settings and modified legend calculations in BarLineChartActivity , BarLineChartBase , and YAxisRenderer classes to improve layout consistency and
added support for VERIFIED _ SOURCE _ ABI _ FLAVOR in AndroidLibraryDescription and JavaLibraryDescription to enhance library compatibility checks
added operationEventStatusType parameter to requestParams and initialized services in CompositeLogService to improve event status handling and ensure proper initialization of the services list
added debug logging for parameter annotations in DexAnnotation . java to improve debugging capabilities and ensure annotations are only added when necessary
[ java ] move jmsio setup and teardown method from @ startbundle to @ setup
[ hotfix ] [ test ] add classpath to sortedarraystringmaptest
updated documentLoader to load resources using " res " separator instead of " values " to ensure consistent file path handling across different operating systems
refactor methods in DataSet . java for consistency and clarity to improve code readability and maintainability
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
added escaping percentage for stack trace in error message assertions to enhance error message validation by escaping specific percentages
fixed - jcache . close ( ) method do n ' t call cachemanager . getcachemanager ( ) . geturi ( ) . #
reduce log level for activititaskalreadyclaimedexception in commandcontext . close ( )
refactored initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
fix entitypropertiespacket to write base value instead of value
updated SonosAudioSink . java to use ThingHandlerHelper for better initialization checks to improve code clarity and ensure proper handling of thing status
updated countDownLatch . await timeout from 500 milliseconds to 5 seconds in ContextRegisterListenerTest . java and SpringMvcClientBeanPostProcessorTest . java
changed log level from info to debug for unsupported light type error message to reduce log verbosity for incorrect requests on GitHub
change asyncjobmanagerimpl to use a custom thread pool size of 2 / 3
updated import statements and improved exception message formatting in Reporter . java and ReturnsSmartNulls . java to enhance readability and maintainability of error messages
updated the parameter type from ` Frame ` to ` DataFrame ` in the ` generate ` method and removed unnecessary casting to ` DataFrame ` to improve
updated multiple package - info . java files for consistency and clarity to improve maintainability and readability of the package - info files
added a check for non - empty physicalColumnNames before matching default column names in OrcPageSourceFactory . java and created a new test for
added a method call to mixPlay with an input and amp in the Engine class to enhance the functionality of the mixPlay method
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated calculations in FinderPatternFinder and QRCodeBlackBox1TestCase , and added new test cases in QRCodeBlackBox2TestCase
removed unnecessary condition checking for leadingIncludePaths in PreprocessorDelegate . java to simplify the logic for determining if leadingIncludePaths is not serializable
refactor StringTemplate to use a dedicated method for matrix multiplication checks to improve code readability and maintainability by centralizing matrix multiplication logic
add ` ` find ' ' and ` ` findAll ' ' method to selenideelementproxy
fix defaultaudiosink to use the correct samplerate for e - ac3
add formula method to xssfname , and make xssfname configurable
updated the target value from 60000 to 90000 in HighDimensionsTest . java to improve accuracy of the target value based on the scale factor
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49166 -
added unit tests for ClassPathXmlJobRegistryContext to ensure the retrieval of jobs from the ClassPathXmlJobRegistry
change the data type of mHistoricTimes array from float to long in MotionPauseDetector . java to accommodate larger time values and improve accuracy in time
camel - 12320 : camel - restlet : deprecate the restlet producer get parameter ( camel - 12320 )
camel - 14284 : camel - log4j2 - remove the showout ( boolean ) and showout ( string ) method from log
refactor the creation of ` submitTraceEvent ` into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability
added checks for non - canceled , non - filled , and non - rejected LimitOrder status before adding it to limitOrders to ensure that only
added validation for nextPixelOffset and nextPixelOffset in LCMSImageLayout . java and improved pixel offset calculations in BufferedImage . java to enhance image
updated timestamp handling in ` Event . java ` and ` JrubyEventExtLibrary . java ` , and refactored timestamp retrieval in ` J
added a condition to return a resource if the path ends with " / " and created a test for real path retrieval in WebAppContextTest to
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SET
refactor scroll handling in JEditTextArea . java for macOS and macOS to improve code readability and maintainability by using more descript
do n ' t set guardstage and stageflags if callerloopscope be null
test : migrate sniperjavaprettyprinterjavaxtest to junit 5
refactor URLOutputStreamTest to use a try - with - resources statement for resource management to ensure proper resource management and prevent potential memory leaks
added multiple @ Entity annotations to the Mail class to enhance the entity management capabilities for the Mail entity
updated the default value of " includeTablespace " from " false " to " true " and added documentation for the " -- includeTablespace "
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to their respective AtomicBuffer instances
added functionality to read non - empty JSON files in ScanBatch . java and a corresponding test in TestJsonReader . java to ensure proper handling of
updated failure message formatting in StringSubject . java and StringTest . java to improve clarity of failure messages for better debugging
added a regex pattern for matching library names in LibUtils . java to improve code readability and maintainability by using a dedicated pattern
updated catch clauses in JrtJavaBasePackages and PackageHelper to include Exception instead of NoClassDefFoundError to improve error handling robustness
hbase - 27348 add checkdfssafemode ( ) to fsutils . checkdfssafemode ( ) to ensure that file system
updated error message formatting in TranslatingJavacPhaseTracer . java to include exception details to improve clarity of error reporting when loading TracingTask
[ mng - 6078 ] remove unused method in defaultplugincache . getplugins ( plugin )
contact : do n ' t dispatch the presence status change event if the parent group be offline .
refactor : remove unused method requestdetails . withresourceandparams ( )
added a new integration test class for fetching account information from the BTCE exchange to ensure that the PollingAccountService correctly retrieves account information
added mouseWheel method implementation in VDUInput and Vt320 classes , and updated TerminalView to implement mouse wheel functionality to enhance user interaction
updated library path handling in Natives . java to use a local variable to improve clarity and maintainability of the library path configuration
# 118 - remove deprecate columnhstore annotation ( # 118 )
add particle skin flag to player metadata , fixes # 241
[ hotfix ] [ test ] fix testloadbalancerservicetests to use http
[ hotfix ] fix checkstyle violation in mapservice
replaced System . getProperty with AccessController for retrieving the " os . version " property to enhance security by using privileged actions
updated file suffix handling in TemplateEngineFreemarker to use a configurable property to improve flexibility and allow dynamic configuration of file suffixes
fix selectmessagequeuebyhash and selectmessagequeuebyhashtest
ggb - 118 fix : toolbarpanel should use animationcallback instead of animationcallbacks
replaced EasyBind . bindConditionally with EasyBind . when for binding caretColumnProperty in StyledTextAreaVisual . java to improve binding logic
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to include declaredPlatforms from CxxBuck
replaced SimpleParameterAccessor with ParameterAccessor in multiple JpaCountQueryCreator and PartTreeJpaQuery classes to standardize parameter accessor usage across the
added null check for passwordAttribute before setting ldapAuthenticator ' s passwordAttributeName to avoid potential NullPointerException when passwordAttribute is null
[ hotfix ] [ core ] fix datautilities . defaultvalue for byte and string array type
updated SslContextFactory to conditionally use hostName based on client authentication to ensure correct host name retrieval based on client authentication requirements
updated assertions in TestFSTableDescriptors to use greater than or equal for cachehits to ensure correctness of cache hit counts in test cases
simonstewart : use the wddeletecookiename method to delete an ie cookie , not the current url
added a flag to track if the launcher transition has ended in AbsSwipeUpHandler and modified controller recreate logic in RecentsView to prevent unnecessary controller
added ` < meta charset = \ " utf - 8 " / > ` tag to the HTML tags in ` HTMLListWriter . java ` and
refactor IndexReader class to improve code structure to enhance maintainability and readability of the code
updated MAX _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path handling in multiple classes
added a new class ` bug6337518 ` to ` BasicComboBoxUI ` and modified ` comboBox . add ( arrowButton ) ` to
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and facilitate future updates
refactor UserInfoActivity to improve code structure to enhance maintainability and readability of the codebase
added ` notifyChange ` method to ` TimelineRefreshService ` , ` TrimDataService ` , and ` WidgetRefreshService ` classes to ensure
added pressed state management and background handling in BubbleTextView and Launcher classes to improve user experience by managing pressed state more effectively
updated the ` getFallbackResponse ` method signatures to include a ` Throwable ` parameter across multiple classes to enhance error handling by associating responses with specific
removed the conditional check for ` _ compile _ only ` in the ` DumpBytecode . java ` file to streamline the code by eliminating unnecessary
added null check for tags in ChannelUri . java to prevent potential NullPointerException when accessing elements
updated JAVA _ REGEX _ SPECIALS string to include a period in the regex pattern to ensure proper handling of special characters in SQL patterns
added functionality to set the action bar title in FileActivity and update the action bar title in FileDisplayActivity to ensure the action bar title reflects the
updated the method to retrieve the last converted element instead of the first element in PythonDslProjectBuildFileParser . java and added a new test
change @ schedule ( hour = " * " , minute = " 0 " , persistent = false ) from hour = " * " to hour =
updated TransactionalValidationListener to handle partitioned tables and improved table path validation to enhance the validation process for partitioned tables and enhance error handling
added a comment to enable polling in SnapPuller . java to enhance clarity and maintainability of the codebase
changed the data type of generatedKey from int to long and modified SQL execution to scrub SQL to ensure compatibility with SQLite ' s auto - increment SQL
corrected the variable name from ' proxy ' to ' _ rc ' in SimpleReferenceCache . java to improve code readability and maintainability
[ hotfix ] [ test ] fix error message in inlining
http : / / issues . apache . org / jira / browse / amq - 4892 - increase keepalivetimeout to 10
deleted the HttpTestAccount001 . java file to the test class is no longer needed for the current implementation
fix a bug in dispatcher . handlerequest ( ) and dispatchertest . testfinished ( )
camel - 16265 : camel - cxf - fix issue with attachment not work in cxf mode .
added support for the ' ~ ' case in ClientUtils . java to enhance user experience by allowing escape sequences
camel - Slack - add a configurable delay option to allow to configure a delay on the poller .
fix blockutil . getblockdropped to fire blockharvesting event
updated layout parameters in FormLayout and modified string concatenation in encodedAudioPassthrough checkbox in TranscodingTab . java to improve layout responsiveness and
added a new file ` bug8057791 . java ` implementing a NimbusLookAndFeel for a JList to test the behavior of Nimbus Look and Fe
refactor flag assignment logic in LambdaToMethod . java and add a new LambdaInterfaceStaticField . java file with an interface declaration to improve code
refactor WebSocket handling in RunnerBuilder and add a test for EthSubscribeAvailable in RunnerBuilderTest to improve code clarity and ensure proper
updated null check from ` to . length ( ) > 0 ` to ` to ` null ` in ` ComposeActivity . java ` to improve
added support for dictionary handling in ParquetFixedWidthDictionaryReaders and created a test for bigIntWithDictionary in TestColumnReaderFactory to improve
refactor layout adjustment logic in PortraitPagedViewHandler . java for landscape orientation to improve layout handling for landscape orientations
added LogAspect annotation and LogInterceptor class to enhance logging functionality in the application
updated the formatting of the dump string in QueuedThreadPool . java to improve readability of thread state information
updated CacheGenerator and CacheProvider classes to include a new Optional < Implementation > parameter and adjusted related logic to enhance cache handling by incorporating
added totalFrameSize parameter to createReferenceMap method call to ensure correct reference map creation based on the total frame size
refactor TypesafeConfigurator class to improve code clarity to enhance maintainability and readability of the code
camel - 16265 : camel - karaf - add karaf test for camel - graphql
renamed main method to bug1 , bug2 , and bug3 in RFE2891944 . java to improve clarity and functionality of the
removed URL encoding for entry keys and values in HttpClientIntroductionAdvice . java to simplify code and improve readability by eliminating unnecessary encoding
replaced the ` unsupportedPlatformTool ` implementation with a new class ` UnsupportedPlatformTool ` to improve code clarity and maintainability by encapsulating
updated the calculation of loopCount from double to int and added a TimeUnit for startingRecoveryDelayMilliSeconds to improve precision of recovery attempts and enhance logging
added the ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide access to the size of
[ drools - 107 ] fix kieaddressmanager test to work with java 11
updated column specifications and row specifications in VLCVideo . java to improve layout alignment for better user experience
updated URLs in web pages from " https : / / github . com / bisq / issues " to " https : / / bitsquare
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker .
updated user configuration directory and user XML file handling in MavenCli , MBoot , and MBoot classes to ensure that the user XML file exists and
added a call to bind the GL _ ARRAY _ BUFFER to the buffer handle in VertexBufferObjectWithVAO . java to ensure proper
refactor ServerHttpSecurity class implementation to improve code readability and maintainability
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default HTTP headers to HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility by allowing custom headers to be set
added error handling for credentials vulnerabilities in the Thingsboard server service
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the project
replaced ` Codec . base16Decode ` with ` Bytes . fromHexString ` for signing key conversion to improve compatibility with Apache Tika ' s
updated CSS handling by replacing CascadedStyle with CSSName and adjusting the position of the first line based on the current CSS property to improve
planner - 365 add planner - api dependency for planningfactcollectionproperty , planningfactproperty , and planningfactproperty to planner -
updated RestUtils to use MultiMap instead of CaseInsensitiveHeaders and refactored defaultHeaders method to improve header handling consistency and encapsulation
refactored encoding to charset in ProxyServer , Realm , and ProxyServer classes to use Charset instead of String to simplify code and improve consistency
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to provide a way to
replaced ` compareTo ` with ` compare ` for ` Long ` comparisons in ` ExpandableUploadListAdapter ` and ` FileStorageUtils ` to
( chore ) camel - jetty : use debug log instead of error
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials instead of GeneralSecurityException to improve security handling by
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other
filtermanager : do n ' t remove invalid filter if it be our own
refactor : move bcpginputstream . wrap ( inputstream ) into static method
updated MinimalLockingWriteAheadLog to use BufferedOutputStream and added try - finally blocks to ensure proper resource management and prevent potential resource leaks
updated test methods in TestJdbcDriver2 and modified column qualifier handling in HiveBaseResultSet to improve clarity and consistency in naming conventions and ensure correct
refactor FocusTransitionTest class for improved readability to enhance maintainability of the test code
updated import statement from ` org . gwtproject . core . client . GWT ` to ` com . google . gwt . core . client .
added a check to ensure sourceTask is an instance of MapRedTask before accessing counters to prevent potential ClassCastException when accessing job instances
updated the initialization of ` _ readListener ` in ` HttpInput . java ` to ensure ` _ readListener ` is not null to avoid potential
refactored color selection handling by introducing a new method ` changeComponentColor ` to improve code readability and maintainability by consolidating color
updated the constructor call from ' false ' to ' hidden ' in TaskHelper . java to ensure that the task helper uses the correct hidden state for
fix failovertimeouttest failure due to exponential backoff
pdfbox - 4071 : close resource in createfromrandomaccessimpl ( ) , a suggest by valerybokov
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize DefaultParameterHandler for parameter handling in the scripting framework
[ hotfix ] [ lsra ] check spill depth before set spill state for spill interval
[ micronaut ] add a micronaut astbuilder to make it easy to compile the groovy file
guacamole - 102 : fix pgstatement . executeoncompletion ( ) and pgresultset . executeoncompletion ( ) to work
set serviceAdvisorType to PYTHON in ServiceInfo . java to ensure serviceAdvisorType defaults to PYTHON for compatibility
[ flink - 24158 ] [ table - planner - blink ] make genericdatumreader thread - local for resolving decoder
refactor path constructor to accept a List instead of a Collection and modify related methods to improve type safety and simplify buffer handling in the cleanup process
replaced byte array allocation with a random byte array for the memo output in SendCoinShieldTest . java to ensure the correctness of the wallet output
added a method to set personalisation with a Date and Locale parameters in SkeinParameterSpec . java to enable customizable personalisation settings for better
removed redundant code in CodeGenerator . java to streamline code for better readability and maintainability
removed the percent parameter from the scroll method calls in multiple files to simplify the scroll gesture calculations by eliminating unnecessary calculations
made the ` pointer ` variable public and added reset methods to ` FlatRecordReader ` to allow external access to the ` pointer ` variable and provide
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` and update related references to improve clarity and consistency in class naming
[ benf ] do n ' t cast a boolean to an integer if it ' s a boolean
replaced ArrayList with boolean acceptsAll for handling accepted media types to improve code clarity and maintainability by using a more descriptive method
added a new boolean variable ` false ` in ` TaskView . java ` to indicate that the variable should not be accessed in the current context
added an ` isAutoIncrement ` method to ` LiquibaseDataType ` and implemented ` isAutoIncrement ` method in ` LiquibaseDataType
initialize errorText with a default value of " Command failed due to Internal Server Error " to ensure errorText defaults to " Command failed due to Internal
updated import statements in LocalManagementTest . java and modified VM options in LocalManagementTest . java to enhance test execution options for performance testing
replaced ` add ( currentStatus ) ` with ` push ( currentStatus ) ` and ` boosterStatus ` in ` BasicEventSimulationEngine .
added AJP setup and logging for AJP13SocketConnector in GitBlitServer . java to allow dynamic configuration of AJP
added a new class ` Intersection03 ` and modified ` TransTypes . java ` to handle compound types to ensure proper type coercion
[ hotfix ] [ test ] rename embeddingtest to embeddingitest
added a native method to check if the toolkit thread starts before starting it to ensure that the toolkit thread is only started once to avoid potential deadlocks
add option to compress bundle content in parallel by default
hide ` ` surface ' ' button if platform = windows
updated the temporary directory name in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability of
added configuration options for full and solidity node HTTP functionality in CommonParameter and updated service addition logic in SolidityNode and related classes to enable
added a service property to GoogleCloudFirestoreTicketDocument and modified GoogleCloudFirestoreTicketRegistry to count tickets based on the specified service to enhance
refactor Generate class to improve code organization to enhance maintainability and readability of the codebase
json _ format ( ) and json _ format ( ) should return null instead of java null
updated BadgeRenderer to support DOTS _ ONLY and adjusted width calculation based on the DOTS _ ONLY flag to improve layout responsive
removed the ' final ' modifier from the method ` getConfiguration ` in ` FreemarkerManager . java ` to allow access to the configuration directly from
[ hotfix ] [ test ] add unit test for invalid exclude package name pattern
updated device Udid handling in AppleTest . java and added SDK name check in IdbRunTestsStep . java to ensure compatibility with mac
updated DefaultHttpClientFilter to use ProduceProcessorManager and modified test cases accordingly to improve error handling and ensure correct response status handling
refactor script binding and execution logic in AllAppsView . java to improve code clarity and ensure proper execution of reset actions
added a boolean variable ` TEXT _ BURN ` and modified the conditional check for ` lineCount ` to ensure proper shadowing and rendering of text
added JUnit ` @ AfterClass ` and ` onetimeTeardown ` methods to ` TestColumnAccess ` and ` TestReadEntityDirect
added parser retrieval for a specific name in SecurityNamespaceHandler to ensure the correct parser is used for namespace handling
removed unnecessary whitespace in BoundedLocalCache . java and added new test cases in BoundedLocalCacheTest . java to improve code readability and
updated RawConnection interface to extend WebSocketConnection and added complete ( ) and flush ( ) methods to enhance WebSocket connection handling and improve flushing capabilities
added multiple test methods for ` softly . assertAll ( ) ` in ` SoftAssertionsPerfTest . java ` to improve test coverage and
added a new constant for TEST _ FAILURES _ EXIT _ CODE and modified the access modifier of the assertExitCode method to improve error handling
modified the handling of glyph wrapping and truncate logic in GlyphLayout . java to improve clarity and functionality when markup is enabled
refactor score assertions in TestBooleanRewrites to use streams for improved readability to enhance code clarity and maintainability by using more descriptive
changed the method of retrieving the enclosing class in TypeHandlerRegistry from getEnclosingClass ( ) to getSuperclass ( ) to ensure the correct class hierarchy is
fix playerconnection . flush ( ) to not use instance of playersocketconnection
added a check to prevent multiple calls to removeOnDrawListener in Launcher . java and LauncherAnimUtils . java to improve performance by avoiding
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements and modified the condition in ReplicaAssigner . java to handle non - APPLICABLE rule matches to improve code clarity and
changed the default value of the ` getBoolean ` method from false to true in ` RendererConfiguration . java ` to enable media - related parsing in the
fix aop interceptor for method / method annotated with @ Around _ TYPE
added assertions to verify existence and permission of tables in FolderPermissionBase . java to ensure proper handling of table creation and permissions in the database
do n ' t publish status for provider in wrong state ( when provider be register ) .
updated the color calculation in PastelColor . java to use a base value of 180 instead of a fixed value to ensure consistent color behavior across
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated the handling of FastBitmapDrawable to use original and outline bitmaps and added a method to create the original and outline bitmaps for better visual
use httpmethod . fromstring ( ) instead of string . equals ( )
optimise multiwordpreprocessor . gettag to accept a containingphrase parameter .
[ hotfix ] [ test ] fix checkstyle violation in iochannelutilstest
updated class loading logic to check for Hive pass - through output format class name to ensure correct class loading based on the storage handler ' s behavior
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated the boundary check in the DOMBuilder class to include an additional check for the length of the input string to ensure proper processing of the input string
refactor graph handling in ClusteringCoefficient , EigenvectorCentrality , GraphDensityUI , and HitsUI classes to improve
camel - 15836 - camel - aws2 - translate : improve the verifier to check if a particular service work on a specified region , camel
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing ` InterfaceWithStaticAndDefaultMethods ` to demonstrate the use of static methods
camel - 16265 : camel - core - make defaultkeyselector implement camelcontextaware so it can be use with camel context .
refactor catch blocks in LogResolverBean . java to use ThreadDeath instead of checking if the type is a ThreadDeath to improve error handling by
refactor KeyManagerFactory , Policy , CertStore , and X509Certificate classes for improved consistency to enhance maintainability and readability of the codebase
updated JGit version from " 1.0 . 0 " to " 1.0 . 0 " and sorted the jars in Launcher and Build classes to reflect
fix : use client key from clientAnn if path be empty .
added namespace handler for ' transformer ' to support spring ' s transformer
replaced BACK _ FACTOR constants with REWIND _ TIME constants and modified conditional checks for duration to improve clarity and accuracy of playback duration
added isScrollWheeling ( ) method to CodenameOneImplementation and JavaSEPort classes , and modified action event firing logic in Button to ensure
removed unnecessary checks for command usage and improved formatting in UtilityCommands and DocumentationPrinter to enhance code readability and ensure consistent usage formatting
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming conventions
updated ` setSeqFiles ` and ` setUnseqFiles ` methods in ` CrossSpaceCompactionResource ` and modified ` RewriteCrossSpaceCompaction
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor synchronization logic in ProjectPropertiesModelImpl . java for clarity to improve code readability and maintainability by reducing redundancy
correct synchronization issue in abstractsootfieldref . getfieldref ( ) .
add elasticnamingconvention to make it easy to use camel - elasticsearch
added methods for listener management and command creation in IController and TinyGController , and updated BackendAPI to use IController instead of AbstractController
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to validate rendering of large horizontal rules to ensure proper rendering
replaced System . out . print statements with TTY . print in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to standardize
updated multiple Java files for consistency and clarity to improve code readability and maintainability across the project
update frame length check from ` = = 0 ` to ` < = 0 ` to ensure correct handling of non - negative frame lengths
replace zeroValue with value and defaultValue in IntFloatMap and IntIntMap classes to ensure consistent return behavior across map implementations
fix issue with parent label not be re - updated when downloading to styles .
added null check for registered before processing demand to avoid potential NullPointerExceptions when registered is null
removed the native method ` hasNextSibling ( ) ` and updated its implementation in ` DocumentNode ` , ` IeNavigator ` , and ` I
fixed - npe in redisdistributedmapcacheclientservice due to nullpointerexception
updated logging messages for MobFileCache initialization and disabled state to improve clarity of cache configuration status and provide clearer debugging information
refactored ColConvCCMTest class for improved readability to enhance maintainability and facilitate future updates
replaced local variables for target and allowCovariantReturns with local variables for better encapsulation to improve code readability and maintainability by central
pdfbox - 4071 : improve type safety in getregions ( ) and getregions ( )
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` mmm Json . java ` and added a new ` X `
added a return statement in GenericFileConsumer . java to ensure proper termination of the method execution
added a Runnable inside EventQueue . invokeLater to ensure the delegate execution is executed on the Event Dispatch Thread to improve UI responsiveness during event processing
updated the calculation of ` maxSize ` to use ` getMaxBinaryMessageSize ( ) ` instead of ` getMaxTextMessageBufferSize ( ) ` to ensure
updated steeringValue calculations from ` + = . 5f ` to ` - = . 5f ` in multiple test files to ensure correct steering value
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security checks by using a standard
updated JdbcSerDe to use LocalDate , LocalDateTime , and ZoneOffset for date and timestamp conversions to improve date handling and ensure accurate timestamp representation
updated VERSION from 2 to 3 and modified metadata reading logic in ParseData . java to handle different version scenarios to ensure compatibility with different data formats
refactor FlywayAutoConfiguration to improve dependency injection and configuration for Flyway initialization to enhance flexibility and maintainability of the Flyway
added sorting functionality to the ClassesImpl class to ensure that the classes are processed in a sorted order
added a method to retrieve the current stable state in LauncherStateManager and updated AbstractLauncherUiTest to use this method to improve code clarity and
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
refactor TestCloseScope0 . java to utilize MemoryScope for improved compatibility with different JDK versions to enhance compatibility with different JD
updated the test parameters from ( 500 , 500 ) to ( 5000 , 5000 ) in AdaptServerSocket . java to increase the timeout duration for
updated test cases in CaptchaChannelProcessorTests . java to improve test coverage for CaptchaChannelProcessor functionality
fix a bug in metadataimport where the owner of an item do n ' t update the own collection .
added retry logic for saving properties in AbstractRegistry to limit the number of properties saved successfully
replaced ` mergeDirectory ` with ` directory ` in ` TrackingDirectoryWrapper ` instantiation to improve clarity by using a more descriptive variable name
pmd : fix # 156 unusedimports no longer report import on jdk 1.5
added validation in HiveIcebergStorageHandler to prevent insert overwrite queries on bucket partitioned Iceberg tables to ensure that insert overwrite is allowed on
updated assertions in BootstrapTests to reflect correct number of SAML keys and added assertions for legacy key IDs to ensure correctness of SAML configurations and
updated methods to check for anonymous or non - static local types in Excluder . java to ensure that anonymous or non - static local fields are
do n ' t synchronize on the e - mail address , just use the actual e - mail address .
removed multiple comment waiting for line and block comments from CommentsParser . java to clean up the code and improve readability
lucene - 164 : fix indexwriter . release ( ) and lucene . store . lock . release ( ) bug
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align with the
updated SpelExpressionTransformer to check if the current node is a unary operator before processing to ensure proper handling of unary operations and improve code clarity
added TypeValidation . DISABLED to ByteBuddy initialization in MockBytecodeGenerator . java to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling and improve clarity in annotation processing
updated locking mechanism in LockModePessimisticReadWriteIntegrationTest and modified timeout values in MySQLTableLockTest and MySQLTableLockWithEmployees
fix logfile property reference in loggingapplicationlistener
updated ServiceApiRequest . java to handle HTTP redirects more robustly to improve handling of HTTP redirects and enhance error handling for exceeded limits
added service and version mapping constants to ServiceCombConstants and modified MicroserviceFactory to use EnvironmentConfiguration for better configuration management to improve code maintainability and
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the correct
updated database path regex and introduced a constant DB _ PREFIX in BaseAndroidTestCase . java and GeocodeHelperTest . java to improve code clarity
updated return statement to retrieve unread count from HomeDataSource to ensure accurate unread count retrieval for the current account
updated test method names and added a new test for virtual thread pool preview to improve clarity and functionality of thread pool preview tests
added a limit parameter to the getAllOrder method and adjusted related logic to limit the order count to ensure that the method does not exceed a defined limit
added null check for the user before fetching user settings in HomePage . java to prevent potential NullPointerExceptions when retrieving user settings
fix localfilesystem . match to work with relative wildcard path
added maximum width and height limits to the instance ' s bounds in ComponentBuilders . java to ensure that the instance ' s bounds do not exceed
added logging functionality and modified method signatures in CommonsHttpSolrServer . java to enhance debugging capabilities and clarify connection manager timeout settings
updated error handling in PrintController to include exception details to improve error reporting for document creation failures
refactor CrateType to use ` . map ` instead of ` Optional . of ( ) ` for formatting filenames to improve code readability
fix # 53643 spellchecker for number with separator ( # 53643 )
updated MESSAGE constant declaration to ensure consistent formatting to improve code readability and maintainability
refactor FileDisplayActivity to streamline file action handling and improve code organization to enhance readability and maintainability of the code by reducing redundancy
added daemon setting to puller in ReplicationHandler and added exception handling in SnapPuller to improve thread safety and handle potential exceptions during replication
updated the ` update ` method call in ` StoreCachedTest . java ` to ensure correct data type is used for updating the record ID
updated the constructor parameter name from ' materials ' to ' theMaterials ' in the StreamerLoader class to improve clarity and maintainability of the
updated DependencyBank . java to include new dependencies for GDX and related GDX libraries to improve clarity and organization of GDX dependency
added maximum recycled views for various item types in the RecyclerView in the AppsContainerRecyclerView to enhance the user interface by allowing dynamic view adjustments based on
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that binaries are built
fix examplebaritonecontrol to work with empty chunk .
added imports for ParsedNode and ResourceAccessor in CreateProcedureChange . java to enable parsing functionality for procedure changes
added null handling for null values in FilterOperatorUtils and a new test for range filtering in NullHandlingEnabledQueriesTest to enhance filtering capabilities and ensure
updated parameter type validation for bootstrap methods in JDynamicInvokeExpr . java to ensure that bootstrap method arguments are of type MethodHandles and MethodTypes are
fix flaky test : http : / / issues . apache . org / activemq / browse / amq - 2456
added a line to clear formatters in CucumberInstrumentation . java to ensure formatters are properly initialized for testing purposes
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and updated related code accordingly to improve type
added a conditional check to adjust to hide workspace labels based on cell padding to ensure workspace labels are only displayed when necessary
updated assertions in ReplicationFactorTest to use assertRf for consistency and clarity to improve code readability and maintainability by using a unified assertion method
llvm : do n ' t patch the context if the context be pre - initialized .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java files to enable
replaced RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
replaced ` Integer . valueOf ( values [ 0 ] ) ` and ` Integer . valueOf ( values [ 1 ] ) ` with ` Integer . parseInt
updated error messages from " create " to " copy " and modified file walk parameters to use Integer . MAX _ VALUE to improve clarity in error reporting
refactor segment name validation logic to use a new method for low - level consumer segment name validation to improve code readability and maintainability by reducing
added methods ` startActivity ` and ` startActivityForResult ` to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure proper handling of
updated the date retrieval method in DueDateBusinessCalendar to use the current time from the clock reader to ensure accurate date representation based on the current clock
updated the return value of TargetCpuType to include " x86 _ 64 - none - linux - android " to ensure compatibility with Android architecture
added a method to delete all files for an account in FileDataStorageManager and integrated it into ManageAccountsActivity to improve resource management and
updated command line option from " - ? % n " to " - h % n " in SchemaCrawlerCommandLine . java to improve clarity of command
added createsuitedescription ( string , object uniqueid , annotation ) method , and test
replaced Hashtable with decodeBarcode in SnapshotThread . java to simplify the decoding process and use a more efficient method
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor and eliminate unnecessary dependencies
zoomcontextfindertest : add test case for scalerange . getrange ( ) . pastend ( ) and range . paststart ( )
added a new constant DEPENDENCY _ TRACKING _ CONFIG _ KEY and modified JRubyScriptEngineFactory to conditionally activate dependency
updated the request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to
do n ' t create new cf / ks and keyspace if they already exist
fix welcomewindow not paint properly when the image be change
refactor tuner configuration handling to use a variable for unique ID instead of a hardcoded value to improve clarity and maintainability of tuner
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a test method in ShBinaryRuleIntegrationTest to enable testing of binary functionality with a test
added conditional logic to include " db : hsqldb " in TestFilter . java to ensure compatibility with different database configurations
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t materialize host exception when there be no stack trace .
refactor service loading logic to use a custom Iterable implementation in GraalServices . java to improve code readability and maintainability by reducing redundancy
fix aggregateannotationcommandhandlertest to use duplicatecommandhandlerresolution . rejectduplicates ( )
[ flink - 20865 ] [ runtime ] add fine - grained shuffle mode option to stream graph
fix entityfish hook not be able to place block in the world .
camel - 14263 : camel - ftp should use source code generate link instead of source code generate by camel - ftp
rename ` getCommandRunner ( ) ` to ` getStepRunner ( ) ` across multiple files to improve clarity and consistency in naming conventions
renamed the parameter ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class and related methods to improve clarity and
added a check for empty items in AppsContainerRecyclerView . java to prevent unnecessary processing when no items are available
added a conditional bean annotation for the reporter bean name in ZipkinAutoConfiguration to ensure the reporter bean is only created when it is missing
log4j2 - 1076 - add property property to xmllayout to support property
added a new parameter ` OMIT _ HEADER ` to ` CommonParams ` and implemented the ` remove ` method in ` NamedList ` , `
updated property retrieval method in EscherProperty . java to use getPropertyNumber ( ) instead of _ id and added unit tests for Escher
replaced direct calls to ` getBuildRuleType ` with a call to ` Description . getBuildRuleType ` to improve code readability and maintain
fix bug with fasthierarchy . modifyhierarchy ( ) .
fix potential npe in testifdisputeTriesreplay
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified ` retrieveColumns ` method to accept
wallet : set confidence type to not _ seen _ in _ chain when send a transaction .
refactored the handling of body and header arguments in HttpClientIntroductionAdvice . java to improve code clarity and ensure correct header name is used
added a condition check for JSON conditions in CraftingHelper . java to ensure proper processing of JSON conditions in CraftingHelper
hbase - 13211 add try / catch block to try to close region if open region fails .
refactor length comparison logic in Credential . java for improved readability to enhance code clarity and maintainability by reducing redundant length checks
[ java ] fix checkstyle violation in client conductor .
refactor the destroy method in TestJvmProcess to streamline process destruction logic to improve code clarity and ensure proper termination of processes
added support for Oracle database in TestDefaults . java to ensure compatibility with Oracle databases
camel - 14284 : camel - mail - fix the mail consumer to check if the mail store be connect before try to connect .
added token consumption checks in mmm Parser . java and ppp Parser . java to ensure that parsing cancellation occurs only when there are tokens in the query
enum : list all the available language in the enum - add new language ( greek , greek , gu )
added support for ` ` duration ' ' and ` ` f0 ' ' and ` ` duration ' ' file in voice
added emailDomain property and corresponding getter and setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration and retrieval of email domains in
added REQUEST _ READ _ TIMEOUT and REQUEST _ CONNECT _ TIMEOUT constants to Configuration . java and updated ViewRegistry . java to utilize
added a condition to check if myDeferredConcepts or myConceptLinksToSaveLater are not empty before processing concepts to avoid unnecessary processing
added RedisCategory category annotation to RedisServiceRegistryTests to enable testing of Redis services in the testing framework
updated test method names and parameters in FindDeprecatedUsesTest and FindDeprecatedUses classes to improve test coverage and ensure correct handling of null and
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the component in the WaterfallPanel
removed unused imports from multiple configuration files to clean up the code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule and added eventSignatureFull field in LogEventWrapper to improve clarity and functionality of event name
updated the condition to check if the file name ends with " _ " in the filter to ensure that only valid files with the specified session ID are
replace clearRect method with fillRect method to set background color to improve visual consistency by using the background color
[ drools - 4892 ] fix bug in rule compilation error message
removed debug print statements from multiple Java files to clean up the code and improve maintainability
added a check for NaN scores before assertions in TestFieldCacheSort . java to ensure that tests are only executed when scores are non - negative
make devicestate . getentitykeys ( ) return a copy of the result to prevent concurrentmodificationexception
added a check for zero - time values in ColumnSnapshotGenerator and implemented a test for date default values in MySQLIntegrationTest to ensure proper handling of date
contract : rename ` ` offerermultisig ' ' to ` ` takerbtc ' ' and rename ` ` takermultisig '
updated various constructors and constructors to use wildcard types for ` Map < ? , ? > ` and ` Map < ? , ? > `
[ jbrules - 4892 ] fix npe when edit session with multiple kiecontainers
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure compatibility with the current configuration reference
added a conditional check to return early if modalness changes to prevent further processing when modalness changes
added a test for creating CodecCapabilities from a profile level and implemented native settings retrieval in ShadowMediaCodecList to ensure proper functionality of codec capabilities and
fix # 5460 ( when enter key use , focus be wrong )
added validation for width and height in SunVolatileImage and improved error handling in XRSurfaceDataProxy to ensure width and height are non - negative
updated thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure consistent formatting of thousands in
replace int array with AtomicInteger array for thread loop management in AsyncStressTest and StressTest classes to improve thread management and ensure thread safety during
updated AchievementsFragment and LeaderboardFragment to handle beta branding and menu visibility based on configuration to improve user experience by informing users about
added context properties for access , name , and description in SearchMethodVisitor . java to ensure proper initialization of context variables in the search functionality
added sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve
removed unnecessary whitespace in DLNAResource . java to improve code readability and maintainability
removed the required attribute from the @ XmlElement annotations for batch - config and stream - config elements in ResequencerConfig and BatchResequencerConfig
refactor transaction acquisition and reload logic in TableReader . java to improve code clarity and ensure proper resource management during transaction operations
[ flume - 10220 ] use ssl . keymanager . algorithm instead of a hardcoded value for keystore / trustmanager
refactor getSingleSourceApplicableTest method to use Applicability instead of JavaIsoVisitor to improve code clarity and maintainability by utilizing a
added exit ( ) method call in Blockmania . java to handle TAB key events to ensure proper exit behavior when the TAB key is pressed
rename ` PACKAGE _ PRIVATE ` to ` NONE ` in multiple files to improve clarity and consistency in access specifier representation
refactor unhandled method signatures and add diagnostic logging for incompatible and incompatible methods to improve error handling and provide clearer diagnostic information for
updated OrcInputFormat to use stripes and stripeStats from eithercReader and orcTail to ensure correct stripes are assigned based on the
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
change myhentaicomics . com url to https : / / myhentaicomics . com .
added functionality to display the current JAR version in the application to provide users with information about the current version of the jar
use splittokens ( ) instead of split ( ) for export list
added support for default rotation settings in ConsoleActivity and improved input handling in TerminalView to enhance user experience by allowing dynamic rotation selection based on keyboard settings
changed the type of the ` hq ` variable from ` PriorityQueue < ? > ` to ` PriorityQueue < ScoreDoc > ` and added a suppress
added a null check for ownerConnectionAddress before proceeding with operations to avoid potential NullPointerExceptions during execution
camel - 16265 : camel - jolokia - add ability to configure the headersmapfactory for camel - jolokia
replaced single quotes with single quotes in JavaCompiler . java to improve code readability and maintain consistency in formatting
int - 132 , int - 132 , int - 132 , int - 132 , int - 132 , int - 132
updated the index parameter from ' i + 1 ' to ' i 2 ' in ArrayFunctions . java to ensure correct processing of array elements in the
fix thread safety issue in invokescriptedprocessor and abstractscriptedprocessor
added support for PostgreSQL ' s PostgresqlStatement in the proxy invocation to ensure compatibility with PostgreSQL ' s prepared statements
( chore ) camel - cassandra - test : flush mem table and refresh size estimate
changed log level from error to warn in AtomicRemainder . java to provide more informative logging for memory usage issues
fix a bug where aggressive fully expire ttl do n ' t take into account the min timestamp
fixed - rblockingdeque . sleep ( ) method return wrong value if timeout < 1 second be specify . # 3131
removed format specifier from output statements in JobInspectCommand . java to simplify output formatting for better readability and maintainability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
updated sorting logic in ChildHolder . java to use entrySet ( ) instead of values to improve clarity and maintainability of the code
[ issue # 6060 ] fix test failure in aclclient
updated condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling
[ zeppelin - 4892 ] fix npe in notebook server when interpretergroup be null
updated the parameter in the addListElement method from funN to lt in ExpressionNodeEvaluator . java to improve clarity and consistency in the code
removed the public access modifier from the methods verifyIdsAreStable and getNodeId in NodeIdAccessor . java to restrict access to these methods to
cloudstack - 4892 : fix the error message when create a snapshot policy for a volume
removed the ' public ' access modifier from method declarations in ItemWriter . java to restrict access to methods and improve encapsulation
updated the expected string in the ThingImpl instantiation from " " to " test " to ensure the correct thing is being tested for testing purposes
added a ` toString ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest `
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance by utilizing RAMDirectory for file operations
added a conditional check to ensure mLineHeight is less than or equal to the height of the text buffer to improve performance by avoiding unnecessary calculations when
updated WalletAppKit . java file to improve functionality and maintainability of the code
remove hat _ js _ rhino and hat _ js _ nashorn from oqlengineimpl
chat transport selector box now remove it item from the button group , so that it do n ' t appear in the menu .
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl ` classes
fix : fallback to proto ' s bsqblockchainexplorer when proto ' s bsqblockchainexplorer be not set
added attributes map and implemented getAttribute methods in StandardSession and Session classes to enhance session management capabilities and improve attribute management
added assertions to verify the values of the plain bean and its associated long value in TestDbJson _ List . java to ensure the correctness of
updated the initialization of averages from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to ensure the averages array has
refactor BatchCommandLineLauncher class to improve code organization to enhance maintainability and readability of the code
added DataSource and JdbcTransactionManager beans to BatchMetricsApplication to support HSQL database integration in the application
fix httpservice implementation in glowrootloghttpservice
pdfbox - 4071 : set the stroke java composite on the graphicsview , a suggest by valerybokov
removed synchronization from the close ( ) method and added synchronization in DocumentsWriterPerThread . java to improve thread safety and ensure proper resource management during segment
added methods for retrieving multiple choices , options , and validation constraints in UiBinding . java to enhance property management and ensure correct retrieval of values and constraints
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for ` builder . setReflectively ( ) ` and `
only update the stored copy of the tree if it ' s full
affix now store pattern index in a map to prevent duplicate entry in the dictionary .
replaced explicit generic type declarations with diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability by using diamond operator
removed the import of CharTermAttribute from DefaultIndexingChain . java to streamline code by eliminating unnecessary dependency
refactor NBJavacTrees class for improved readability to enhance maintainability and facilitate future updates
removed unsupported data encoding check from VectorizedPrimitiveColumnReader to simplify error handling for unsupported data encodings
added SLF4J MarkerFactory import and improved log handling in HttpSolrCall . java to enhance logging clarity and ensure consistent logging behavior
add destroymetadataserviceproxy ( ) call to serviceinstanceschangedlistener to prevent memory leak
add maxlevel constant to defaultentityqueryrepository to prevent infinite recursion
updated error message formatting to include a null check for databaseChangeLogId to improve clarity in error reporting when the changelog has not been registered
test : add try harder decoding capability to abstractblackboxtestcase
updated ` executeCompilation ` method to return a ` ProcessExecutor . Result ` instead of a ` int ` and modified return statements in ` Cxx
removed the redundant increment of numEvents and simplified the loop condition in ObjectStore . java to improve code readability and maintainability by reducing redundancy
simplified the support check for @ Validated annotations in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability by reducing redundancy
fix concurrentmodificationexception in entityawareworldprovider . removeentities ( )
removed redundant type checks in IntrinsifyArrayCopyPhase . java to streamline code for better readability and maintainability
do n ' t set log level for unit test in testcoyoteadapter
removed the WantedAnywhereAfterFollowingInteraction exception class and replaced its usage with a direct call to toString ( ) in Reporter . java to
added validation checks for account existence and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure contract integrity by valid
scriptlauncher : use a treemap to sort the list of command
fix : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
swapped the order of property assignments in BaseSingleTreeBuilder . java to improve code readability and maintain consistency in property naming
updated AsmLoader to use the class loader from the interface class loader to ensure the class loader is used for class loading
pdfbox - 4071 : avoid arrayindexoutofboundsexception in sampledimagereader , a suggest by valerybokov
updated the export statement in Java2TypeScriptTranslator to conditionally include namespace declaration based on the ` isDefinitionScope ` flag to ensure correct namespace
replaced EmptyServerHandler with AbstractHandler in HttpClientTest . java to ensure proper handling of base requests in the HTTP client
removed unnecessary array creation for listener in HelloInput . java to simplify listener registration and improve code readability
added null check for lhs variable in AbstractSqmPath . java to ensure lhs is retrieved correctly when lhs is null
updated package declarations in multiple test files to ensure consistency in package structure across test files
bugfix : use byteindexed image instead of byteindexed one , so it ' s easy to use .
[ gr - 26144 ] fix native image location resolution in hotspotgraal .
[ hotfix ] [ test ] remove dataflowportabilityapiunsupported from pardotest
updated method from ` remove ( ) ` to ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl .
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
[ hotfix ] [ runtime ] fix typo in callstack javadoc
log warn if max size configuration for map do not allow any data
updated return statements from " AST " to " LST " in multiple Java files to correct the spelling of " LST " to improve clarity
lucene - 4892 : fix bug in threadedacousticscorer . getscoreablesperthread ( ) .
replaced AssertionError with a return null statement in NetHooks . java to improve error handling by returning null instead of throwing an exception
fix flaky test : click on $ { symbol _ pound } login
added ` makeString ` method implementations across multiple iterable classes to provide a consistent implementation of ` makeString ` method across different iterable implementations
replaced Ordered . HIGHEST _ PRECEDENCE with a constant DEFAULT _ ORDER in OidcServicesManagerRegisteredServiceLocator to improve code
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related tests to utilize it to improve flexibility in handling weak associations based
refactor Deflater class for improved performance to enhance compression efficiency and performance
added exception handling for IOException in Font . java to improve error management and ensure proper exception management
added a null and empty check for the content string in VersionTypeBinding . java to prevent potential NullPointerExceptions when the content is empty
replaced the initialization of the ' places ' list with direct access to ' places ' in NearbyListFragment . java to simplify code and improve
change content type check from case - insensitive to lowercase in MailConverters . java to ensure consistent handling of MIME types in case insensitive manner
modifies ` openssh ` auth _ magic to be public , so that it can be use by other spec .
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for batch updates to improve folder name handling and ensure suggested folder names
updated import statements in InheritanceCacheTest . java to include wildcard imports and modified entity retrieval logic to streamline dependencies and improve code clarity
updated import statements in ConnectOAuth2RequestFactory and added getUserApprovalRequest method in TofuUserApprovalHandler to ensure proper handling of user approval requests
fix tag value convention for influx ( # 645 )
add a dump method to oneproblemherre and twoproblemsherre to make it easy to debug
updated the cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the latest cookie management features
replaced private static method ` classMetadataUnsupported ( ) ` with a static method ` classMetadataUnsupported ( ) ` in ` Platform . java ` to
added functionality to clear all tasks based on user preferences to enhance user experience by allowing users to enable or disable clearing of tasks based on user preferences
updated ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider ` to ensure ` desiredRepoVersion ` is set before persisting it
remove memoryleaktest since it be n ' t use
updated the return statement in ServletTester . java to include the local address if localhost is set to ensure the correct port is returned based on the
added a condition to check if MVDWAPI is enabled before hooking to MvDWPlaceholderAPI to ensure compatibility with MV
add assertclustersizeeventually to abstractpartitionassignmentscorrectnesstest . testpartitionassignmentscorrectnesstest
added singleton implementation for FFIProvider in FFIProvider . java to enable dynamic initialization of FFI providers based on configuration settings
tika - 264 - add test for hierarchical file list in batchprocesstest
added null checks and improved null handling in MongoTemplate and MongoTemplateTests to enhance robustness and prevent NullPointerExceptions during saving operations
updated position initialization to use NODE _ LIST instead of 0 for directInputCount and directSuccessorCount to improve code clarity and maintain consistency in node
added accTradeValue field and its getter method in BithumbTicker . java and updated trade history parameters in BithumbTradeServiceRaw . java to
updated logging statements to use parameterized logging for better readability to improve maintainability and clarity of log messages for better debugging
replaced hardcoded maxParallelThreads with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to
replace ArrayList with CopyOnWriteArrayList for header and data readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex classes to improve
fix typo find by codespell on fossies . org
added a null check for the destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during the transition process
camel - 16265 : camel - msv : fix test that fail on slow ci server
updated the condition from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` in ` DelegationService . java ` to
updated the length of the generator from 6 to 10 in JdbcExpiringCodeStore . java and modified assertions in CodeStoreEndpointsTests . java
added a check for UniqueConstraint before matching its table in StandardObjectChangeFilter to ensure proper handling of UniqueConstraint instances during object change filtering
refactor description handling in MediaDetailFragment to use a HashSet for language codes to improve code readability and maintainability by reducing redundancy
catch arrayindexoutofboundsexception and classcastexception in case of a classcastexception
add withfilter ( ) method to listimagescmd to allow specify reference
camel - 14263 : camel - jms - do not allow to set the ` ` bridgeerrorhandler ' ' property on jms endpoint
added checks for conditional statements in OpExclusionUtils . java and initialized allOps to true when no ops are found to ensure proper handling of exclusion conditions
added return statements to DatabaseCommand . java to ensure that the method always returns false to avoid potential runtime errors
fix typo in the physician example example to be more accurate .
camel - 14284 : use stringutils instead of null check for initfile in beanshell interpreter
camel - 14284 : camel - restlet - make it easy to configure the restlet port in camel - restlet
removed WALL _ SIGN case handling from SchematicFormat . java to streamline code for better readability and maintainability
added a system property " hive . query . max . length " set to 100Mb in QTestUtil . java and modified overriddenConfigurations
changed access modifiers of several fields and methods in WebServer . java and added baseHttpConfig ( ) method in WebServer . java to improve en
updated method names from " writeHdfs " and " readKafka " to " hdfsSink " and " kafkaSource " across multiple
updated HiveConf to determine if the application name is not equal to " spark . app . name " and modified HiveSparkClientFactory to use
fix typo in managedclassfactory . getincludedproperties ( )
simonstewart : add the ability to maximize the window in the selenium server to allow the window to be maximized
updated methods in ` LocalCellProviderFactory ` , ` AbstractEmbeddedCellBuckOutInfo ` , and ` DefaultProjectBuckOutInfo `
updated assertion to check for " entity expansions " in TestXMLEntityExpansion . java to improve error handling by providing clearer error messages
updated table offset and length assignments to mask values with 0x7FFFFFFF to ensure proper alignment of table data
added a null assertion for the customized field in DirectMethodHandle . java to ensure that the form ' s customized field is not null
refactor the initialization of mLineBuffer in LineChartRenderer . java to use a variable for the number of floating points to improve code readability
refactor flavor handling in AndroidBinaryDescription to use a loop for better readability to improve code clarity and maintainability by consolidating flavor checks
updated buffer index from offset to i in LwjglGL11 . java to ensure correct buffer generation for OpenGL rendering
added new files Property . java and PropertySuper . java , and implemented a test class TestClassResolutionFail . java for handling LinkageError to provide
[ java ] do n ' t remove the shutdown hook if it be disable .
replaced the ` url ` variable with a direct reference to ` FilterChjainProxy ` in the ` VirtualFilterChain ` constructor to simplify the
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( values , size , size ) ` for improved readability to enhance
added checks to ensure the schema is loaded before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to prevent potential errors when the schema
set ` baseType ` to ` null ` in ` DatabaseInfoRetriever ` and initialize literal prefixes and suffixes in ` MutableColumnDataType ` to
refactor HTML links in View . java to use anchor tags instead of href attributes to improve code readability and maintainability
refactored evaluatorfactory to use final static evaluator instance instead of static getters
updated configuration references to use " osx _ config " instead of " osx _ x86 - 64 " across multiple files to ensure consistency in
added sound effect functionality in AllAppsView . java to enhance user experience by allowing sound feedback during interactions
updated the main method signature from Exception to IOException in RemoveFirstPage . java to ensure the main method throws an IOException instead of Exception
added leftAxis . setGranularityEnabled ( true ) to BarChartActivitySinus . java to enable granularity for
refactor version comparison logic into a separate method for clarity to improve code readability and maintainability
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS compatibility checks to improve test reliability and ensure compatibility with
added a close ( ) method to multiple transport classes to ensure proper resource management and prevent potential resource leaks
[ log4j2 - 132 ] fix socketserverfunctionaltest and mockappender to wait for the last log event
[ beam - 4142 ] fix flaky test hadoopresourceidtest . testhadoopresourceidtest
updated import statements in IsometricStaggeredTiledTiledMapRenderer . java to remove unused static imports to streamline the code
removed duplicate call to unbindHandle in ItemServiceImpl . java to streamline code by eliminating redundancy
refactor Config and Attribute classes for improved consistency to enhance maintainability and readability of the codebase
removed unnecessary condition checking for screen shot in OtherActivityTouchConsumer . java to simplify touch tracking logic for better readability and maintainability
updated ` NavbarButtonsViewController . java ` to use ` Configuration . UI _ MODE _ NIGHT _ MASK ` for dark theme
[ java ] throw exception instead of fail when language can not be determine .
replaced bootstrapMethodIndex and nameAndTypeIndex with refKind and memberIndex in ClassWriter . java to ensure correct handling of byte types in the
modified the ` findBox ` and ` findElementBox ` methods to include ` BlockFormattingContext ` as a parameter to enhance functionality to support block
added error handling to WorkerProcess and WorkerShellStep for standard error output to improve robustness of worker process execution and provide better error feedback
added null checks and exception handling in CheckedListReplaceAll . java to enhance robustness by preventing NullPointerExceptions during operator replacement
added a test for writing on a socket in SslConnectionTest . java to ensure that the write operation behaves as expected when the socket is
updated DeviceFlag and FeatureFlags classes to improve listener management and ensure consistency to enhance code maintainability and ensure consistent listener management across the application
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue gh - 1114
removed the import of MalformedURIException from StandardRequestHandler . java to clean up unused imports and improve code clarity
[ # 11824 ] instructorfeedbackeditpage : focus on the first argument ( # 11824 )
refactor synchronization logic in KrakenStreamingTradeService . java for improved readability to enhance maintainability and clarity of the code
change system . err to system . out for ignore class - path entry
fix randomaccesssparklingsvfs and randomaccesssparklingsweepvector . clone ( ) implementation .
cloudstack - 4892 : do n ' t create volume usage event if volume have poolid = null
refactor file input handling in Utilities . java to conditionally determine the path based on the job type to improve flexibility in handling different Hive configurations
[ beam - 12626 ] upgrade beam - udf to v26 - 0 - jre
reset internal state when memorycallgraphbuilder be reset .
fix npe in conferencechatmanager due to miss operationsetmultiuserchat
added file validation in Save . java to ensure the update file can be written before proceeding to prevent illegal user action errors
added a new ` FolderSyncActivity ` class to handle folder synchronization in the navigation drawer to enhance user experience by allowing users to open or close the
[ hotfix ] [ test ] fix potential resource leak in sequentialchannelstatereaderimpltest
add support for comma in sanitization for spanish language
use heappointwriter . getpackedvalueslice instead of reader . getreader ( ) in simpletextbkdwriter
added LocaleRandomizer and its corresponding test class for generating random locales to enhance the randomness generation capabilities for different locales
added unit tests for MIME types in TestMimeTypes . java to ensure correct MIME type handling for various font types
bugfix # 21791 - add 8 . x version number to upgrade list
removed unnecessary whitespace in TCPTransport . java to improve code readability and maintainability
updated the timeout value in the read method in Http2AsyncParser from 0 to 0 to ensure that the read timeout is set to a default value
updated the initial delay value from 120 to 600 in TimelineMetricConfiguration . java to increase the initial delay from 120 to 600 milliseconds for better performance
updated the primary key column error message to reference the correct column name to ensure the correct column name is used for restricted constraints
added date formatting support for custom fields in ThirdEyeJiraClient to enhance date handling capabilities in the Jira application
refactor priority generation to use a dedicated PriorityGenerator instance to improve code clarity and maintainability by centralizing priority generation logic
added a constant for the maximum scalar replacement code size and modified the condition for scalarReplace to ensure scalarReplace is only enabled when the entireClass is
added ` Date _ TAKEN ` to the projection and file sort order strings in ` MediaProvider . java ` to ensure correct sorting of images
updated drawImage parameters in TexturePacker2 . java to use image dimensions instead of fixed offsets to ensure correct rendering of images based on their dimensions
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve WebSocket upgrade filter handling to ensure proper filter execution based on the context of
added shutdown calls for validateSignService and trxHandlePool in Manager and NodePersistService classes to ensure proper resource cleanup and prevent potential memory leak
added RawJsonRequestBodyAnnotationProcessor to handle raw JSON request annotations to enable the processing of raw JSON data in the Swagger generator
added a new method ` newTarget ( int targetType , TargetExtension extension ) ` to create a ` Target ` instance with specified type and extension
updated BeanContainer to use a new ArrayList instance and added unit tests for it to improve performance and ensure correct functionality of the toList method
hbase - 25836 fix typo in testmetricsregionserver # testblockcachehitpercent
camel - 16265 : camel - cache - cachedoutputstream should clean up temp file when exchange be complete .
fix teltonika position decoder ( fix # 102 )
replaced ` Files . readFirstLine ` with ` Files . asCharSource ( buildFile . toFile ( ) ) . readFirst
added a null check for the operator in JCAssignOp and created a new test class FailOver15 to ensure proper handling of assignment operations and demonstrate
added a boolean flag ` enableAccountHandling ` to control account handling in ` FirstRunActivity ` and ` BaseActivity ` to ensure account management is
fix heuristic for heuristically find the main connected component of a multipolygon
updated DrillViewTable to accept a path parameter and modified constructor parameters to include a path parameter to enhance flexibility in view handling and ensure correct schema
added additional configuration parameters to the constructor of PooledByteBufAllocatorL to enhance flexibility and control over the pooling behavior
updated array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java with utility methods to ensure correct cloning
added a configuration variable ` LLAP _ IO _ THREADPOOL _ SIZE ` to specify the number of low - level IO thread pool to
added support for jdk 11 and above to re - initialize ssldebug and ssllogger on jdk 11
added minimum range checks for latitude and longitude range in LatLonGrid . java and implemented a test for growing polygons in TestLatLonGrid . java
simonstewart : add invisibilityofelementwithtext ( ) and refreshed ( ) method to expectconditions
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and modified its implementation to include it to enhance file replacement functionality by allowing
added a test for the ` getOuterClass ` method in ` ReflectorTest . java ` to ensure that the ` getEnclosingObject ` method
added " auto _ generate _ android _ facet _ sources " configuration to ` ConfigIgnoredByDaemon ` and updated its value in ` IjProject
updated HubChangeExecListener to log messages with specific messages instead of hardcoded messages to improve clarity and maintainability of the logging output for Hub
added properties support and corresponding getter and setter methods to Link class , and created a test for overriding properties in QuickLinksConfigurationModuleTest to enhance link
updated ` InitialConfig ` and ` YamlConfigFileDTO ` classes to implement the ` toString ` method to improve clarity and functionality of the configuration representation
updated generic type parameters in SimpleForwardingServerClientCallConfiguration . java to improve type safety and eliminate unchecked warnings
refactor ` forName ` methods to accept ` caller ` as a parameter and introduce ` CallerSensitiveAdapter ` to improve class loading mechanism for better
replaced ` isEmptyOrNullString ( ) ` with ` IsEmptyString . emptyOrNullString ( ) ` in ` RequestItemRepositoryIT . java `
[ hotfix ] [ core ] use threadpoolexecutorex instead of threadpoolexecutor
change the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated Cucumber annotations and imports in TimeStepdefs . java and TimeStepdefs . java to utilize new Cucumber
fix a typo in the spark upgrade pattern name . close # 153
updated RestInvocationHandler to use ` getUri ( ) ` instead of ` ExchangeSpecification ` for proxy creation to enhance flexibility by allowing the use of URI
removed multiple debug print statements from RecordGenerator . java to streamline output for better readability and maintainability
[ hotfix ] [ kafka ] remove auto commit from kafka consumer when auto commit be enable
removed lock release logic in Liquibase . java and added database change log lock table flag in StandardLockService . java to improve lock management and
updated @ SuppressWarnings annotations to include " deprecation " and added additional warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to improve
make sure pagestore . flush ( ) and pagestore . flush ( ) be call in a synchronized block .
do n ' t generate nested property if it be mutable and the propertysource be not mutable .
updated the ticker data source from baseSymbol to counterSymbol in VirtExMarketDataService . java to ensure the correct ticker data is fetched for the
camel - 16265 : camel - core - fix the test error of camel - jbang
replaced UUID generation with system property retrieval for testId in HoneycombJdbcInterceptor to improve flexibility by allowing dynamic configuration of the test ID
added synchronization to the date and number parsing logic in DefaultJobParametersConverter . java to ensure thread safety when accessing date and number formats
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
change heightmap height scale from 256 to heightScale in FractalHeightMapGrid . java to ensure correct scaling of the heightmap based on
removed unnecessary type comparison in SecurityConfig and changed assertion to assertNotSame in SecurityConfigTests to streamline code and improve clarity in comparison logic
[ hotfix ] [ test ] make dump - partition - id default to false
added imports and mocking for TronTXOutput and TronTXOutputs in UTXOSetTest . java to enhance testing capabilities
[ java ] ignore unused variable that be ignore by java rule .
pdfbox - 4071 : avoid npe , a suggest by valerybokov
added a test for overriding previous job restart parameters in JsrJobOperator to ensure correct handling of job restart parameters during job execution
added a new protected field ` disallowBatchOnCascade ` and a method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform `
refactor principal initialization logic in JaasAuthenticationHandler . java to improve code clarity and maintainability
refactor SolrCores to use a executor service for core closure to improve resource management by utilizing a dedicated executor service
removed unused imports and added a null check for mActionsView before setting visibility to improve code clarity and prevent potential NullPointerExceptions
refactor parameter handling in RunIdIncrementer to use a default instance of JobParameters to improve code robustness and prevent potential NullPointerExceptions
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added assertions to validate the expected result of ` getMatchedDevices ` method in ` SchemaRegionBasicTest ` to ensure that the correct number of matched
[ 3.0 ] add tryinvoke method to metricseventbus to catch exception
added EigenvectorCentralityBuilder class and modified mCentralities calculation in EigenvectorCentrality .
updated registry creation logic to use a random port instead of a hardcoded value to improve flexibility and maintainability of registry lookups
updated geometry data handling to use UnsignedBytes for better compatibility with the database session
change beacon amplifier from 2 to 0 in blockentitybeacon .
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable http client health check by default
updated validation group handling to ensure classes and interfaces are validated against their inheritance to enhance type safety and prevent runtime errors
updated bug annotations and added a timeout annotation in JList . java to address bug 8057791 related to color selection in Nimbus L & F
make statisticsreportercomponentimpl daemon to allow speedment application to exit ( # 322 )
removed unnecessary regex replacement for the version string in ItemLexicon . java to simplify the code and improve readability
added a call to ReflectionCheckLinker . checkReflectionAccess ( type ) in JavaAdapterFactory . java to ensure proper reflection access checks for type
camel - 16265 : camel - core - add option to disable lazy session creation for camel - mina
updated ` initIOContext ` method to accept ` RecordReader ` as a parameter and added ` getStart ` method in ` HiveContextAwareRecordReader
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused loader management functionality
fix classpath scan for jrtfs on window
added try - catch blocks around session and unregistration of callbacks in PackageInstallerCompatVL . java to handle potential exceptions during session callback registration and
removed " src / test / org / apache / lucene / index / index / index . cfs " and " index . nocfs "
added a constructor function to AkkaRpcService and modified the instantiation of AkkaRpcService to use it to enhance flexibility in creating AkkaRpcService instances
testexportsnapshot : increase mapreduce . map . max . attempts to 3
pdfbox - 4071 : do n ' t use afmstandard14 and afmtype1fontembedder . setsymbolic
added a new test class ` SslConnectionTest ` to verify SSL connection closure to ensure proper handling of SSL connections during the fill operation
added validation for address family type and family family in InetAddress and NetworkInterface classes to ensure proper handling of IPv4 and IPv6 addresses in the application
added a test for serializing dates in a collection using Gson to ensure proper serialization and deserialization of date objects in the Gson
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
hbase - 13211 addendum fix bug in putdatabaserecord . generatesql
corrected the loop condition in TableOutput . java to correctly calculate the width of the running width by adjusting the loop condition
pdfbox - 4071 : remove null check , a suggest by valerybokov
fix ( formatstringchecker ) : use high priority for format string argument
[ java ] add property to ignore non - final loop variable in a for - each statement
updated PDFExporter to set PDF version and full compression , and modified file path in PDFExporterTest to improve PDF export functionality and enhance test coverage for
added unit tests for LdapUserDetailsMapper in LdapUserDetailsMapperTests . java to ensure correct mapping of role attributes and non - retrieved authorities in
[ hotfix ] [ cloudstack ] add ldap . read . timeout configuration
refactor TestDescription and TestDescription classes for improved organization to enhance maintainability and readability of the test suite
updated Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple cache - related classes to improve clarity and consistency in naming conventions
added a condition to check if the state handler is invalidated before executing gesture state checks to ensure that gesture handling only occurs when the state handler is
updated the folder creation distance and old rotation arrays in Workspace . java to improve UI responsiveness by adjusting the folder creation distance
use configproviderresolver instead of configprovider for oci . auth . profile , oci . config . path
refactor Testjsig class to improve code organization to enhance maintainability and readability of the code
fix mana mana tablet and terra pick with mana stack now have count of zero
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
remove serialVersionUID from P11TlsPrfGenerator class to avoid potential serialization issues
refactor ` tsFileNotValid ` to ` isEmptyFile ` and introduce ` isValidateTsFileFailed ` for better error handling to
added two new files , Switch21 . java and Switch19 . java , implementing switch pattern matching methods to enhance switch handling functionality for different object types
updated error message formatting in ComparableSubjectTest . java for clarity to improve readability of error messages for better debugging
updated ` StreamHelper ` to use ` org . apache . poi . util . Internal ` and modified ` Source ` instantiation in ` StreamHelper `
updated capacity validation and improved error message formatting in Int2ObjectCache . java to enhance robustness by ensuring size limits are within acceptable limits and improve
updated the sorting order for security filter chains in WebSecurityConfiguration and added a new test for ordering security filter chains to ensure that the filter chain order
removed the TimeInForce . GTC parameter from the MARKET command in BinanceTradeService . java to simplify the order type handling by
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update default min and max values to improve code organization and ensure minimum and maximum values are validated
updated KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to correct the separator character
camel - 14284 : camel - jms - add documentation for jms component . thanks to sergey shelukhin for patch .
added error handling for bound access in SourceUtils . java and created new test cases in SourceUtilsTest . java to improve robustness of bound retrieval
refactor LeafFilterFactory to use a separate method for creating FilterPredicateLeafBuilder instances to improve code readability and maintainability by reducing duplication
added a check to ensure originalArtifactName does not start with the SCOPED _ BEAN _ PREFIX prefix before extracting its substring to
updated HttpsSegmentFetcher to read certificate serial number from an available certificate and added logging for certificate serial number retrieval to improve certificate processing efficiency and provide
updated the return type of ` getDefaultBooleanValue ` from ` boolean ` to ` String ` and added a new class ` DnsFallback ` to handle
ww - 4071 add exception to the exception message when write tag fails
changed the data type of the success field and its properties from boolean to String in DepositAddress . java to improve clarity and functionality of the deposit address
refactor Privilege implementation to use a lambda expression for cleanup to improve code readability and ensure proper resource management
removed " address " from the scope configuration in CommonOAuth2Provider . java and related tests to simplify scope configuration and improve code readability
refactor the submit method in ManagedSelector to use a Start class to improve thread management and ensure proper initialization of the managed selector
[ wled ] add hue and saturation to the master win request for segment index = 0
replaced the static method ` isValidCaller ` with a set of valid callers in ` VectorizationProvider ` to improve code clarity and maintainability by
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to provide functionality for handling JSR insts in the
added transaction support to subscription ActivatingSubscriber to ensure subscription is registered in a transactional environment
refactor SQL update and insert statements in DBMSProcessor . java to improve query handling and error handling to ensure proper execution of updates and inserts
added elevation handling for devices running Lollipop and above in ContactItemInflater . java to ensure compatibility with devices running Lollipop
renamed ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming conventions
refactor file operations to use AccessController for privileged actions in SandboxFileManager . java to enhance security by ensuring files are accessed from the privileged
refactor Groovy parsing and printing logic in GroovyParserVisitor , GroovyPrinter , and G . java to improve code readability and maintainability by simplify
updated warning log message to include the class name of the exception to improve clarity of error messages for better debugging
updated byte reading and compression handling in RecordInputStream and UnicodeString classes , and added a test for UnicodeString in TestUnicodeWorkbook to ensure correct character
added a test for downloading files with no orway characters in their names to ensure that the download functionality works correctly for different file formats
updated AsyncResource to use CancellationException and added methods to check if an exception is cancelled to improve error handling and provide clearer diagnostics for
added null check for statistics before calling handleCache to avoid potential NullPointerExceptions during cache handling
reformatted annotations in MongoTemplateTests and added a new test for removing objects from explicit collections to improve code readability and ensure proper functionality of the
update copyright year from 2015 to 2022 in multiple Java files to ensure compatibility with the latest copyright year
updated format string from using \ n to % n in Coder . java to improve readability of the output message
added a new boolean variable ` mIsClearAllButtonFullyRevealed ` and modified scroll handling logic in ` RecentsView ` to improve
added a new constant ` COMMON _ HMS _ PROPERTIES ` and refactored parameter handling in ` HiveIcebergMetaHook
replaced instances of BindException with a new method to check for address inuse to improve code clarity and maintainability by using a dedicated method for address
added a new argument to the argument list for the test class path in TestNestmateAttr . java to ensure the test class path is correctly
updated logging level from VERBOSE to verbose _ schema in Grep . java to improve clarity and consistency in logging output
fix checkstyle issue in java . net . http : / / github . com / apache / catalina / catalina / issues /
# 219 - enh : add support for nested subtransactions with nested subtransactions
replaced int fetchSize with ThreadLocal < Integer > fetchSize and updated related methods to improve thread safety and manage fetch size concurrently
[ java ] remove sharednetworkidlestrategy from embeddedpingpong
( chore ) camel - httpclient : improve handling of blocking call
added HDP _ VERSION property handling and logging in SliderAppsViewControllerImpl . java to ensure that the system correctly sets the HDP _
added loaderClass , jusl , and loader , and refactored close methods in JavacProcessingEnvironment . java to improve resource management and
added DeepCloner class and modified parameter handling in ParameterizedRobolectricTestRunner and RobolectricTestRunner to enhance parameter cloning functionality and improve
added bind for JETTY _ SHOW _ STACKTRACE configuration in ResourceBase . java to enable stack trace display in the application
added a check to return null if the object is not an instance of JSType . OBJECT to improve robustness by preventing potential null pointer exceptions
replaced multiple instances of ` sun . jvm . hotspot . types . OopField ` with ` wellKnownKlasses ` in ` SystemDictionary .
added support for RSAPublicKey and ECPublicKey in JwkKeyListView and updated serialization method in JsonWebKeyEndpoint to support additional key types and improve
[ gr - 26144 ] nativebootimageheap : do not spawn isolates if spawnisolates be false .
updated MBeanServerMXBeanUnsupportedTest . java to remove unsupported test cases to improve test coverage for the MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to eliminate unnecessary dependencies and improve code clarity
updated the ` Validator ` method to return ` getOwnerAddress ( ) ` and added a new method to retrieve the owner address from the contract to enhance
http : / / issues . apache . org / jira / browse / amq - 4621 - add a main class to run the demo
replaced the usage of ` toByteArray ( min ) ` and ` toByteArray ( max ) ` with ` toByteArray ( min ) ` and ` byteArrayMax `
protoc : add support for empty index to dependencygraph .
[ java ] remove duplicate ` ` contains ( correlationid ) ' ' from ` ` asynccommandset . remove ( correlationid ) ' '
added conflict saving logic in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure proper handling of file states and prevent conflicts during
updated ExecutionContext , AbstractMethodInvokingDelegator , and AbstractTransactionalResourceItemWriter to use generics and improve type safety to enhance
updated import statements to use ` org . apache . lucene . analysis . core . StrUtils ` instead of ` org . apache . solr . common
added handling for Oracle , MySQL , and MySQL driver properties in DatabaseFactory . java to ensure proper configuration of database schema for different database types
added a handler parameter to the MockMethodInterceptor and set a serialVersionUID in PartialMockingWithConstructorUsingEasyMockTest to enhance method interceptor
replaced the use of ` Date . getTime ( ) ` with ` System . currentTimeMillis ( ) ` and ` minTriggerTime ` for better accuracy
[ hotfix ] [ runtime ] wrap classloader in context . wrapclassloader ( )
added a run on the UI thread in TerminalView and implemented buffer change handling in TerminalTextViewOverlay to ensure UI updates occur when the terminal buffer changes
[ hotfix ] [ config ] fix configdispatcher . getpid ( ) to return servicepidnamespace if pid do not contain dot
[ tvm ] disable freeze operation for non - tvm node
added support for insecure tls configuration to allow user to disable it
refactored the source path retrieval logic in JavadocTool . java and created a new class T7091528 . java for testing to
updated the comparison of ` nodeColumns ` and ` id ` to use ` equalsIgnoreCase ` instead of ` toLowerCase ( ) ` for case - insensitive
added cascade attribute to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the entity has a cascade option for better data management
message : replace message . hashcode ( ) with array . equals ( ) .
fix unit test that fail on window due to unicode encode issue
removed the ` isKeySerializerTypeVariableSized ` method from ` RocksDBSerializedCompositeKeyBuilder ` to streamline the code by eliminating
added a method ` getStaticPermissionsField ` to ` ProtectionDomain ` and updated ` SubjectDomainCombiner ` to use it to improve the handling of
added null check to recipehandlerbrewery , recipehandlerelventrade , and recipehandlerfloatingflower to avoid npe
refactor parsing logic in Parser . java to use a temporary variable for parseIndex to improve readability and maintainability of the parsing logic
added a connection error popup method to UploadMediaDetailFragment and UploadMediaDetailsContract , and modified error handling in UploadMediaPresenter to improve user experience
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` and ` Status . UNSUPPORTED _ MEDIA
change bitwise operation from bitwise operations to bitwise operations in NodeBitMap . java to ensure proper bitwise operations for long values
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
refactor ConsoleWrapper and ConsoleUIService to utilize environment variable for terminal usage instead of hardcoded values to improve flexibility and maintainability of
replaced mock account manager callback with TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest . java to improve test clarity and ensure correct behavior of
[ java ] remove unused field in analysistype # getenclosingtype ( ) .
updated method names from ` getProperty0 ( ) ` and ` getEntries ( ) ` to ` entries ( ) ` and ` concatSeparator ( )
[ hotfix ] [ table - common ] remove unused timeout from putallcallable
[ rocketmq - 521 ] fix npe when consumer be empty or not .
[ java ] generate source identity when send join command to the driver .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface to provide a toolbar presenter for the
camel - 14263 : fixed the issue that router can not be start in all recipient mode . thanks to sergey shelukhin
updated test class imports and annotations in AggregateItemReaderTests . java to improve test structure and ensure proper initialization of tests
added generic type parameter ` < T > ` to the constructor of ` Procedure ` in ` AbstractObjectValueTypeMap ` to enhance type safety
updated AchievementsActivity , OkHttpJsonApiClient , NetworkingModule , and OkHttpJsonApiClient to include wiki data edits functionality to enhance
added validation for the length parameter in OfflineSorter to ensure that the input length does not exceed Short . MAX _ VALUE to prevent runtime errors
do n ' t report load of min - value bug if load - of - min be true .
refactor dataset classes for improved organization to enhance code maintainability and readability
ambari - 24105 . improve error message for invalid topology template exception ( swagle )
updated random number generation in TestVectorUtil to use a fixed value instead of a fixed value to improve randomness in random number generation for better performance
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified the comparison logic to improve accuracy in date
added SSL handling functionality to TestUtil and modified PGPropertyTest to set the SSL property to allow dynamic configuration of the SSL setting based on system properties
simonstewart : enable safe browsing for the chrome driver
updated the flight configuration handling in BaseMotorMount and RecoveryDevice classes to ensure that oldConfig is only cloned when it is not null to avoid potential
added a condition to disable transcoding in DLNAResource . java to ensure transcoding is disabled when configuration is disabled
updated the logic to return an empty list instead of size of 0 in ` DataTable . java ` and added a test case in ` TableDiffer
added a custom ignore tag constant and applied it to remove native code blocks that start with " CustomIgnoreTag " to enhance functionality by allowing users to
camel - 14263 : jdbcaggregationrepository should throw optimisticlockingexception instead of stale record
add @ configurationproperties ( ` ` parent ' ' ) to support @ configurationproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and adjusted padding handling to improve layout responsiveness and ensure proper padding
deleted the ClusterNodeInfo . java file to the class is no longer needed for cluster node information
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output statements for standard and legacy ciphersuite selection in ServerHandshaker . java to provide insights into cipher suite selection during handshake
updated ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle template classification and visibility based on the size of templates to improve user experience
added a nodeLabelMap to manage duplicate node labels in ImportContainerImpl to improve data integrity by preventing duplicated nodes from being processed
added a new file ` R2303044ListSelection . java ` implementing a list selection test to demonstrate the selection of an item in a
[ java ] do n ' t allow correlation id to be duplicate .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` in ` StepScopePlaceholderIntegrationTests . java ` to verify that compound properties are
updated the way row counts are computed in StatsRulesProcFactory . java to improve code clarity and maintainability by using a more descriptive list
updated path handling and query parameters retrieval in SpringBootDocBuildTemplate . java to improve parameter management and ensure correct retrieval of parameters
refactored notification service to use notificationactionhandler instead of notificationtable . get ( )
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and added conditional logic for materializing source files to improve cache
updated RuntimeException to provide a more informative error message when parsing JSON to improve debugging by providing clearer error messages when parsing fails
added a conditional check for DEBUG before logging messages in WidgetsModel . java to ensure logging only occurs when DEBUG is enabled
refactor Console and Scanner classes for improved consistency to enhance maintainability and readability of the codebase
modified the calculation of ` numTerms ` in ` SimilarityBase . java ` and added a test for discount overlaps in ` TestSimilarityBase
added reflection checks for the " send " method in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests ` to ensure
added exit and quit properties with corresponding methods in Global . java and removed it from ScriptingFunctions . java to streamline exit functionality and improve code organization
loanbrokersharkdetectordemo : make sure to close the application context
rename methods from ` getFirstUnverified ` and ` getFirstUnverified ` to ` findFirstUnverified ` and ` findLastUnverified ` across multiple
refactor cookie handling in VmwareContext to use CookieJar instead of String to improve code clarity and maintainability by using a more descript
reformatted assertions in ResinAcegiAuthenticatorTests . java for consistency to improve readability and maintainability of the test code
updated ByteUtil . bigIntegerToBytes to include a 32 - bit value for both r and s in ECKey . java to ensure correct serialization of
updated the property key for disabledMods from " fml . disabledMods " to " fml . modStates " to ensure the correct configuration of
refactor account selection handling by extracting the ` showAccountChooserDialog ` method into a separate ` showAccountChooserDialog ` method to improve code
[ hotfix ] [ sink ] improve exception message in collectsink
fix ( qbft ) : throw an exception if unexpected result come from validator smart contract call
updated TexturePackerFileProcessor to handle empty JSON files gracefully to improve robustness by avoiding null pointer exceptions when processing empty files
removed a conditional check for DataSource and JNDI in PooledConnection . java to simplify the code by eliminating unnecessary null checks
increased TARGET _ MB and WINDOW from 10 , 000 to 1 , 000 , 000 and modified the WINDOW constant to
fix potential null pointer exception when write a byte array
added a call to setCredentialsRefreshDelay with a delay of 100 milliseconds in KinesisConfigUtil . java to improve responsiveness during credential refresh
replaced multiple AlertDialog builders with a single showInfoAlert method to streamline dialog display to improve code readability and maintainability by reducing redundancy
renamed loops in ` T4501661 . java ` to ` pack ` and added a ` - package ` argument to the ` test
update jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUseCases . java
remove unused import and add isdependencyprovided check to pluginbundlemanager
added functionality to manage multiple stream streams in the ZipFile class to improve resource management and prevent memory leaks
rename ` DATAMATRIX ` to ` DATA _ MATRIX ` in multiple files to improve clarity and consistency in the codebase
added methods to run active and idle actions based on keyRanges to ensure proper handling of idle state in the SequenceGeneratorSource
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in BlobServer . java and BlobServerGetTest .
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java ` to
added support for ppc64 and ppc64le architecture in Bits and ByteArrayAccess classes to ensure compatibility with ppc64 and ppc64le architectures
updated the exception message in RoboMonitoringInstrumentation . java to include a link to the GitHub repository to improve clarity of error reporting for debugging purposes
updated waitWithDeadline method calls to use Long . MAX _ VALUE instead of MINUTES to improve code readability and maintainability by using a
replaced Date and Date objects with Java ' s Instant and OffsetDateTime for better date handling to improve test reliability and maintainability by utilizing modern Java
refactor BytesRef class implementation to improve code readability and maintainability
added a Toast message to indicate that YouTube Player does not work on Lollipop due to compatibility issues to improve user experience by informing users
added error handling for unterminated dollar quotes , string literal , identifier , and block comments in SQL parser to improve robustness of SQL parsing errors
added a check for the presence of a vibrator before proceeding with the vibration duration check to ensure that the vibrator is
updated table border and border colors and adjusted arrow styling logic in DotRenderer . java and DotRenderer . java to improve visual consistency and ensure correct arrow
added a method to check if a string is encoded in HiveConf and updated SetProcessor to use it to determine if a string is encoded for URL
pdfbox - 4071 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved certificate handling to enhance security and maintainability of certificate processing
ensure default uri implementation work with proxy uri ( fixes # 3903 )
updated ` TimeLineCursorAdapter ` , ` NetworkedCacheableImageView ` , and ` MainActivity ` to utilize ` NetworkedCacheable
removed the ' target ' parameter from the ` ofFloat ` method across multiple classes to simplify the method signature and improve code readability
updated the controllers version from " gdxVersion " to " 2.0 . 0 " in DependencyBank . java and added new dependencies for iOS and
refactored LaunchedURLClassLoader to improve code structure to enhance maintainability and readability of the code
updated DataSourceHealthIndicator to use ResultSetMetaData for querying results and added requiredSingleResult method to improve result handling and ensure correct number of columns in
added no - cache header to layout tag to prevent cache from be generate
updated warning message formatting to use Locale . ENGLISH to ensure consistent message formatting across different locales
modified the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility by allowing custom analyzer usage
updated copyright year from ` Copywrite 2016 ` to ` Copyright 2017 ` across multiple Java files to ensure compliance with licensing requirements and improve code clarity
removed unnecessary semicolons from MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector instances
updated variable name from templateName to req . getName ( ) in StatementGenerator . java to ensure correct retrieval of request name from the request object
removed the isTypeMatch method from AbstractConfig . java to simplify the configuration addition process by eliminating unnecessary type matching
[ java ] add sessiondecorator . offer ( publication , correlationid , buffer , offset , length ) .
rename methods from trustAllXForwardedRemoteAddressResolver and maxTrustedIndexXForwardedRemoteAddressResolver to trustAll and maxTrustedIndex to
[ manifold ] add miss @ nobootstrap annotation
hbase - 20519 fix npe in tabledescriptorchecker when maxfilesize and flushsize be not set ( sergey shelukh
updated variable names from ` maxCommits ` to ` requestedCommits ` for clarity to improve code readability and maintainability by using a more
added InvocationTargetException to the main method and invokeAndWait method in bug6794831 . java to improve error handling and ensure proper invocation of the
added BUILD _ ID constant and refactored related build metadata handling in CachingBuildEngine and related tests to improve build metadata management and ensure
removed unused imports of TxInputUtil and TxOutputUtil in TransactionCapsule . java to clean up the code and reduce unnecessary dependencies
removed redundant call to markAsDone ( future , channel ) in HttpProtocol . java to streamline the code by eliminating redundancy
added import for TezConfiguration and created a default configuration instance in TezConfigurationFactory . java to enable the creation of a default TezConfiguration
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment to improve code readability and maintainability
added a null check before stopping the least recent sound and implemented a forget method to clear recent sounds to prevent potential NullPointerExceptions when stopping audio
[ java ] update positiondiscontinuity to report discontinuity when newly render first frame .
added multiple NumberFormat and NumberTickUnit instances for various decimal places in NumberAxis . java to enhance formatting options for better data representation in the chart
refactor TargetGraphAndBuildTargets to use builder pattern instead of builder pattern to improve code readability and maintainability by reducing duplication
removed the IndexFileNameFilter class and simplified its usage in IndexFileDeleter . java to streamline the code by eliminating unnecessary dependency on the static
add option to check the entire entity ' s collision bounding box for ladders
added a default compression level parameter to multiple constructors and methods in ApkBuilder , ApkBuilderStep , SignedJarBuilder , and SignedJar
added a test method to verify inclusion of static fields in a JAR to ensure that static fields are correctly included in the generated class
added support for BYTES data type in MetricFieldSpec , Schema , and SingleValueSet classes , and updated related classes to utilize this new
updated string construction in AssertJMultipleFailuresError , AssertJMultipleFailuresError _ getMessage _ Test , and SoftAssertionsErrorDescriptionTest
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the super constructor
added caching functionality and improved cache management in multiple classes to enhance performance and maintainability of the cache management system
fix bug in pronunciation model that cause a npe if the locale be null .
updated FormBody . Builder initialization and added null post handling in SimpleHttp . java and TestHttpPlugin . java to improve handling of null post bodies
added a Dispatcher to shutdown the OkHttpClient executor service in ClientSideSlb to ensure proper resource management and prevent potential memory leaks
modified the vertical positioning logic in TextureRegion . java based on the flipY flag to ensure correct positioning when flipping the texture vertically
validate not - mapped property before validate discovery strategy
added a null check for the contextPath variable and initialized it to " NA " if it is null to ensure that a default value is used when
[ jbrules - 4892 ] avoid reinitialization of classloaders when reinitializing
added a check for the B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and introduced a new serialization header B _
added handling for ` precompiled _ header ` and improved validation logic in ` AbstractCxxSourceRuleFactory ` to ensure that both ` prefix _
replaced WeakReference < ImageObserver > with a new AccWeakReference < T > to enhance security by ensuring access control during image updates
updated visibility of ` findNextIndex ` method and modified import statements in ` ObjectMap ` , ` OrderedMap ` , and ` Ordered
set the isDirect variable to false in VertexBufferObject . java to correct the logic for determining if the vertex buffer is direct
fix a bug in the audioeffecthelptextsmap . get ( effectname ) method in maryclient
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to allow method access to the returned
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) in randomaccessreadbuffer
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
updated border spacing assignment logic in CellLayout and DeviceProfile classes to improve layout handling for scalable grids
replaced NumberFormat . getInstance ( Locale . US ) . parse ( valueNumeric ) with a private ValueNumeric class to improve code readability and encapsulate numeric
added a condition to check if the response is not deferred before returning authentication status to ensure that authentication only occurs when the response is not deferred
updated command - line arguments from " -- module - startd - ini " to " -- add - to - start " in StartArgs .
added HIVE _ DEFAULT _ PARTITION _ VALUE and modified dynamicPartValues to handle null partition values to ensure consistent partition value handling and avoid null
[ hotfix ] [ stream ] add nullability check for streamoperatorfactory
updated the return statements in DefaultArtifact . java to include classifier and group ID in addition to the conflict ID and type to ensure accurate representation of artifact
camel - 14284 : kafka consumer should use the kafka state repository when subscribe to topic . thanks to daniel dai for the patch
improve error message when noclassdeffounderror be find .
rename jabber account registration plugin . jabberaccregwizz . GMAIL _ NOTIFICATIONS _ ENABLED to ENABLE _
doc : [ cryptokey ] fix docstring formatting
updated LumberjackMultiThreadTest to use a concurrency level based on available processors to improve test reliability by adjusting expected message count based on available
fix playerupdatehandler . getplayerdisplayname ( ) to check if the player be not dead
refactor Exchange class to improve code structure to enhance maintainability and readability of the code
updateuser : add api key and secret key must be specify with apikey
replaced switch - case statements with if statements for better readability across multiple classes to improve code clarity and maintainability by reducing redundancy
refactor AbstractMetaDataExportMojo class to improve code organization to enhance maintainability and readability of the code
added SQL integrity constraint violation check for materialized views in Hive . java to ensure that users do not attempt to drop tables that are used by any
corrected the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency in property naming conventions
added a new deprecated class RoboExecutorService in the RoboExecutorService package to signal that the class is no longer recommended for use
added root group functionality to the menu items in GroupTreeView to enhance group addition and sorting functionality for root groups
fix bug where service name do n ' t start with ` ` / ' ' .
updated the process builder setup in TestDynamicNumberOfGCThreads . java to include additional arguments for dynamic garbage collection options to improve test reliability and flexibility by
changed return type of getHostFlavorMap ( ) and getAllPossibleHostFlavors ( ) methods from ImmutableFlavor to ImmutableSet < Flavor > to improve
updated SQL string construction in CreateTable and CreateTableDeParser classes to handle empty and non - empty parameters to ensure proper SQL generation and avoid unnecessary
chatviewerfragment : set the chat background alpha to 64 .
test : migrate ctiteratortest to junit 5 ( # 4576 )
added ` clear ( ) ` method to ` CharTokenizer ` , ` KeywordTokenizer ` , and ` StandardTokenizer ` classes to ensure proper clearing of
pmd : add test to ensure that net . sourceforge . pmd . ast . ast . ast . astinitializer do not crash on block
updated StateMachineConfiguration and StateMachineFactoryConfiguration classes to use generic types instead of generic types to improve type safety and provide clearer error messaging for
simonstewart : do n ' t try to find a locator that start with ` ` link = ' ' in the test suite
fix numberformat . setminimumfractiondigits ( ) and numberformat . setmaximumfractions ( ) in stringconverter .
remove duplicate code in aggregatelifecycle . getcurrentscope ( )
updated touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to
removed redundant code check in FencedCodeBlockParser . java to improve code readability and maintainability
added support for a configurable socket timeout in ConnectionFactoryImpl , ConnectionFactoryImpl , and BaseDataSource classes to improve flexibility in handling socket read timeouts
added a sleep delay of 500ms in ElementAttributeTest . java to ensure proper handling of interrupted exceptions during testing
updated BufferedReader initialization to use UTF - 8 encoding in HttpUtils . java to ensure proper character encoding for input stream reading
refactor List class implementation to improve code readability and maintainability
added URI parameter to AsyncFileImpl constructor and updated error handling in tests to improve error handling and ensure proper context management during file writing operations
added API annotations to ` CucumberEngineExecutionContext ` and ` CucumberTestEngine ` classes to indicate that the class is immutable and to
return null instead of npe if vsp device be not configure on the physical network
rename ` retryUploads ` method to ` retryFailedUploads ` and update related logic to improve clarity and consistency in handling failed uploads
updated Java version checks from Java 8 to Java 9 in ConstantPoolTagTests . java to ensure compatibility with newer Java versions
remove - xlint and - error message from compiler . compile ( ) .
added a method ` removeAllHeaders ( ) ` to the ` AsyncHttpClient ` class to clear the client ' s header map
replaced Vector with ArrayList and updated method calls to use ArrayList instead of Vector to improve performance and reduce unnecessary type casting overhead
updated the DEFAULT _ GRID _ COLUMN value from 40.0 f to 3f in AppPreferencesImpl . java to improve user interface responsive
added a condition to check if ` ! forViewCreation ` is false before verifying if the QB table is not created for view creation to
updated date pattern formatting and assertion in TestHS2HttpServer . java to improve readability and maintainability of the test code
added error handling around the asObject method call in GraphPrinter . java to improve robustness by catching potential exceptions during reflection operations
simonstewart : change the driver to firefox and add a method to verify that we can access pages with an insecure ssl certificate
updated byteOffset calculation in ByteBlockPool and added a test for too many allocations in TestByteBlockPool to ensure accurate byteOffset calculation and
changed instance variables from static to instance variables and updated string formatting to use Locale . ENGLISH to improve encapsulation and ensure consistent string formatting across
added exception handling for uncaught exceptions in TcpTransport . java to ensure proper cleanup of the latch when an exception occurs
fix : add @ suppresswarnings ( ` ` serial ' ' ) for papplet .
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify class structure by removing unnecessary dependency on SourcePath
add ` ` discard change ' ' button to save / discard change to the main window .
added response type validation and service access checks in OAuth20DeviceCodeResponseTypeRequestValidator and updated error logging in OAuth20AccessTokenEndpointController to enhance
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure the correct index is used for processing
updated method signatures and input format class handling in TableMapReduceUtil . java and added new methods in TableMapReduceUtil . java to enhance flexibility
removed redundant call to append method in AbstractJRubyMojo . java to streamline code by eliminating redundancy
llvmpolygloteval : restrict access to internal language .
added deprecation warning for the use of a deprecated master . RESERVE in ReplicationHandler . java to inform users that the master is deprecated and should
rename cache _ primary _ key and cache _ foreign _ key to cache _ foreign _ key , a suggest by valerybokov
updated ECKeyPairGenerator to use Object [ ] instead of long [ ] for generating EC key pairs to improve type safety and simplify key generation process
[ hotfix ] [ runtime ] allow restarting to cancel a job when the job be cancel
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RecentsAnimationDeviceState ` to simplify the code and improve
refactor stream processing to use flatMap for better readability to improve code clarity and maintainability by reducing boilerplate code
updated method signatures and variable types from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency
do n ' t add an offer with the same offer id if it be already in the list with the same offer id
use constant instead of hardcoded value for tl version .
updated method invocation handling in MockitoMethodInvocationControl and modified test cases in SystemClassUserTest , SystemClassUserTest , and SystemClassUserCases
refactor NotLoadedException and related classes to use PartialDatabaseObject instead of DatabaseObject to improve clarity and consistency in exception handling
replaced the import of DisplayUtils with a method call to set extra _ file to null in FileDisplayActivity to simplify code and improve readability by
added error handling for file renaming and compaction checks in StoreDirect and StoreWAL classes to improve robustness by ensuring old compaction files
added asynchronous execution for screenshot tasks in AbsSwipeUpHandler and removed duplicate calls in SystemUiProxy to improve task management and reduce redundancy in the swipe
added a ` hidden ` property and methods to manage the visibility of command arguments in ` CommandArgumentDefinition ` to enhance the control over command argument visibility
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct port
[ geos - 5131 ] add getsld ( ) method to stylegrouphelper and make it accessible from styleinfo
added permission checks for launcher activities in InstallShortcutReceiver and modified completeAddShortcut method to accept PendingRequestArgs for better handling of malicious intents
added ` getId ( ) ` and ` setId ( int gid ) ` methods to ` TideMapLoader ` , ` TiledMapTile `
refactor Manager class to improve code structure to enhance maintainability and readability of the code
updated JDBC connection URL and added version parameter to Session . Builder in multiple Java files to ensure compatibility with the latest database version and improve session management
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance flexibility in generating change log files based on specified schemas and
fix : do n ' t try to put an object in the cache if it ' s already present .
report singlebenchmarkrunnerexception to warn instead of error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to allow subclass access to the
updated return statements in Tools . java and FileSelectorFragment . java to include leading slash and adjusted physical dimensions to ensure consistent path formatting and improve code
added tests for handling large and large response content in FastCGIProxyServletTest . java to ensure that the HTTP GET method behaves as expected
added a call to start the ReadInteractionsService in MarkReadService . java to enable the service to start the ReadInteractionsService
added a conditional check for ` lintClassfile ` before logging warnings for missing annotation methods to ensure warnings are only logged when ` lintClass
make smtp port configurable ( mail . server . port = ' ' 25 ' ' )
use retrypolicies . fixeddelayretrypolicy when renew sslfactory
updated the date format from " yyyy - MM - dd ' T ' HH : mm ' Z ' " to " yyyy - MM -
updated the assertion message in SpyingOnRealObjectsTest . java to reflect the actual failure due to mocking a private class to improve clarity of
added support for line ending with newlines in InlineBoxing and LineBox classes to improve line formatting behavior based on line endings
updated filePathString assignment to handle null parent path to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection from TopicStream . java to clean up the code and reduce unnecessary dependencies
refactor ServletInputStream initialization and add a new test for handling Windows 1250 parameters in multipart requests to improve code readability and ensure correct handling of
updated properties configuration in AbstractCasEndpointTests . java to ensure proper configuration for exposure endpoints in the application
added a check to ensure the current graph is a dynamic graph before proceeding to avoid runtime errors
allow @ scopeone to be configure with @ scopeone . value ( ) instead of @ type ( ) .
jsonpath : add suppressexceptions option to jsonpath engine
removed duplicate calls to ControllerLeaderLocator . create in HelixServerStarter . java to streamline the startup process by eliminating redundancy
updated usage messages in CLHSDB and HSDB from " java " to " hsdb " in System . out to improve clarity of
refactor FaultTolerantStepFactoryBean and SimpleStepFactoryBean to streamline the configuration of FaultTolerantChunkProvider to
[ beam - 11486 ] remove deprecate write class in favor of write from sdk
refactor ` ShadowAccessibilityManagerTest ` to use ` AccessibilityManager ` for accessing the accessibility manager to improve code clarity and maintainability by
updated import statements in FlutterInitializer . java and added GROUP _ DISPLAY _ ID constant in Analytics . java to enhance notification handling and provide
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in multiple classes to simplify class hierarchy by removing unnecessary dependency on ` SourcePath
refactor EnumDataTypeHelper initialization in PostgreSQLDatabaseConnector and add a new PostgreSQLEnumDataTypeHelper class to improve code organization
updated the expected log path in LogFileTests to use File . separatorChar for file separator to ensure compatibility with different operating systems
rename ` getMapLocalWork ` to ` getMapRedLocalWork ` across multiple files to ensure consistency in naming conventions across the codebase
added index table check in HiveMetaStoreClient to ensure proper exception handling for unsupported operations
added a condition to update disabled flags when the visibility is not visible to ensure proper behavior when scrolling is not enabled
added a conditional check to set a specific highlighter for non - Windows platforms to ensure proper syntax highlighting for non - Windows environments
fix crosssite scripting for xssrequestparametertocookie and xssrequestparametertohttpheader .
updated the method for adding file paths to use ` toString ( ) ` instead of ` toUri ( ) . getRawPath ( ) ` to simplify
removed duplicate removeCaptureListener call in SelectBox . java to improve code readability and maintainability
changed the ` _ metaDataComplete ` variable from ` true ` to ` false ` to indicate that the metadata is no longer complete
updated the ` removeTaskTarget ` method to execute on a thread pool and modified bitmap creation logic in multiple classes to improve thread management and ensure bitmap
added support for exposing " RELEASE " and " RELEASE " flavors in JsBundleGenrule to enhance the handling of JS bundle flavor
updated type casting logic in ` mmm Lower . java ` and added a new class ` ppp T6500701 . java ` with a
added tests for crlf newlines in comments and Javadoc in AddImportTest . java and modified GeneralFormatStyle . java to ensure proper
added logic to set the Liquibase hub mode in AbstractLiquibaseMojo and defined a protected field in AbstractLiquibaseMojo to allow
removed redundant null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to streamline code and improve readability by
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to improve robustness by
refactor the method for retrieving the set index thread pool from the IndexWriterConfig class to improve code readability and maintainability by using a dynamic
removed " : 5000 " suffix from the address string in GameCanvasImplementation . java to simplify the address construction for better readability
refactor MapJobExecutionDao to utilize a new copy method for managing JobExecution instances to improve code clarity and maintainability by centralizing the copy
added a new file ` DownloadTest . java ` to implement a test for downloading Pixmaps in the application to ensure that the application
updated language code normalization in multiple classes to ensure consistent language handling across the codebase
hive - 14545 : genericudfround should throw udfargumenttypeexception for wrong argument type ( ashutosh chauhan via
[ core ] managedependencies : fix nullpointerexception in managedependencies .
added multiple AntPathRequestMatchers to SecurityConfig to handle specific URLs to enhance security by providing specific HTTP requests
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
fix : do n ' t generate bean definition for java . lang . object element .
added an @ Ignore annotation to the HttpClientRedirectTest class to temporarily disable the test during development
[ openwebnet ] fix scheduling issue with openwebnetmanagementhandler and thermoregulationhandler
remove unnecessary check for socketstatus . open , socketstatus . stop , and socketeventprocessor
deleted the SunToolkitSubclass . java file which contained a method for flushing pending events to the SunToolkit class to the functionality is no longer needed
replaced MathUtils with Matrix4 and refactored translation logic in DefaultRenderableSorter to improve code readability and maintainability by centralizing translation logic
add a test to ensure that typehandlerregistry . register ( int , int ) be register before primitive
pdfbox - 4071 : use alternate colorspace . torgbrgb ( ) in pdseparation
updated API URLs to use BuildConfig . WIKIMEDIA _ API _ HOST instead of a hardcoded value to improve maintainability
camel - 14263 : camel - health - add a health check to camel - platform - http to make it easy to configure health check
added null check for blockpos in entityhornchakram to avoid npes
added a test for altering a table with indexes extending a primary key to ensure that the index creation behaves as expected in the database schema
updated the variable ` offset ` to use ` readerContext . docBase ` instead of ` offset ` and added randomness checks in ` TestFunction
removed the DrillMongoConstants . ID field from the fields list in MongoRecordReader . java to ensure that the ID field is removed from the
added dispose methods to YeelightHandlerBase and DeviceBase , and enhanced connection handling in WifiConnection to improve resource management and ensure proper connection
added handling for " AUTO _ INCREMENT " syntax in Parser . java and created a test table in TestCompatibility . java to ensure correct
[ fabric8 ] add test for resync in the sharedinformer
server : fix npe when create privatetemplate from template ( # 10226 )
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage for better clarity to improve code readability and maintainability by
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up code and improve maintainability
jbrules - 2221 : move data file to examples / broker
updated variables legendTop and mOffsetTop to use mLegend ' s full height instead of mLegend ' s full height to improve legend positioning
added a check to return early if the world transform is zero to optimize rendering by avoiding unnecessary processing when the world transform is zero
added a new Java file ` MaryScriptCreator . java ` that implements a script generation process using ` MaryScriptCreator ` to facilitate the creation of
nifi - 145 : add remote host attribute to the flowfile in listenhttpservlet
[ hotfix ] [ table - common ] close compaction logger before close log file
updated references from " xlink : href " to " href " in ComponentDescription . java to simplify URL retrieval by removing unnecessary xlink attribute
camel - 11736 - camel - aws2 - s3 : fix camel - aws2s3 stream upload timeout checker name
hbase - 24105 addendum : do n ' t log warning for closed regionservers
updated Slf4jSpanLogger and DefaultTracer to check for null span before logging stopped spans to improve robustness by preventing null pointer exceptions
trim the active option value before adding it to the configuration to ensure that the option is processed with spaces before adding it
added depth effect preference for wallpaper scaling in DepthController to allow users to disable wallpaper scaling based on user preferences
added an assertion to verify the success count of overseer actions in OverseerTest . java to ensure that the statistic is accurate for the oversee
do n ' t check xattr if xattr be enable on linux
refactor ExecConstants to improve code organization to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for theme icon tests
added a method to set scan attribute for paging in TableSnapshotResultIterator and its usage in ScanUtil to enhance scan processing capabilities for better integration with
updated conditional checks for lowRange in Request . java and RequestV2 . java to ensure lowRange does not exceed 100000000000L to avoid potential
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and adjusted cache size estimate in AsyncWrite
server : fix zoneid for host response in listhosts api
updated Content - Type header from " application / json " to MediaType . APPLICATION _ JSON _ UTF8 _ VALUE " and added UTF - 8 encoding
updated the filesystem removal logic to include the zfs parameter to improve code clarity and maintainability by using a more descriptive parameter
changed variable and method names from ` obj ` to ` json ` in ` HttpRequestBuilder . java ` to improve clarity and consistency in JSON handling
increase polling timeouts in SoftAutoCommitTest from 2 seconds to 3 seconds to improve test reliability by allowing more time for soft commits
log exception in selenidelogger when listener be miss .
renamed multiple classes and updated their imports for consistency to improve code maintainability and readability across the dial implementation
reformatted error logging statements in SyncQueue . java to improve code readability and maintainability
updated the version of the Ryuk container from 0.5 . 0 to 0.5 . 1 to reflect the latest features and improvements in the Ryuk
updated the method to return additional bootstrap paths instead of bootstrap paths in BootClassLoaderHook . java and added a new test class TestHook . java to
do n ' t try to find the legacyxmllayout . class file if it ' s already there
[ hotfix ] [ yarn ] use createyarnclusterdescriptor in yarnitcase
add no - data - included map to localmapstats if they do n ' t exist
deleted the AllTests . java file to the test suite is no longer needed for the current test suite
added Unicode character constants and logic for appending non - breaking hyphens and zero - width spaces in AbstractWordConverter . java to improve handling of
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory allocation behavior on large stack trace invocations
updated method call to use getResultMappingsForRowKey ( ) instead of getResultMappings ( ) to improve clarity by using a more descriptive method
added a new boolean variable ` eventHandled ` to the ` UIText ` class to track the event being handled for better event management
deleted the Controller annotation and renamed the Weldby class to WeldModule to simplify the codebase by eliminating unnecessary annotations
do n ' t capture capture group if it ' s empty in nfa .
removed the retrieval of liquibaseProLicenseKey from the system property to streamline the code by eliminating unnecessary logging
refactor : rename measureshierarchy . setmemberreader ( ) to setmeasureshierarchymemberreader ( )
add - g option to generate debug info
mondrian : fix typo find by codespell on fossies . org
added support for friend paths in Kotlin - related classes and updated related classes to utilize this new method to improve argument handling and ensure correct
added aliases for BATK , BRAHMI , and MAND in Character . java and refactored main method in CheckScript . java
replaced equality checks with ` equals ` for ` commandId ` , ` hostname ` , and ` roleCommand ` in ` ExecutionCommand ` , and
updated Mockito library version in the project to ensure compatibility with newer versions of Mockito
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object
added support for percentage parameter in cmyk ( ) function to handle percentages and truncation correctly
added a test for local index reverse scan functionality in LocalIndexIT . java to ensure that the reverse scan correctly returns all rows during index operations
updated imports and assertions in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest classes to use ApplicationProvider instead of InstrumentationRegistry , and
updated warning messages and toast messages in ItemListActivity , LiveTvGuideActivity , MediaManager , and MediaManager classes to improve clarity and consistency
removed unnecessary conditional checks in RendererUtilities . java and updated test assertions in RendererUtilitiesTests . java to streamline loop conditions and enhance test coverage for
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid operations to improve code clarity and maintainability by using more descriptive
added error handling for adding duplicate columns in the database table to improve robustness by logging a warning when a duplicate column is added during upgrade
removed System . err . println ( line ) from AsyncServletIOTest . java to clean up unnecessary error logging
added hash table load factor functionality and updated data size calculations in ConvertJoinMapJoin . java to improve performance and accuracy of data size estim
updated the ` buildView ` method to accept ` Context ` instead of ` LayoutInflater ` and added background resource handling for selectable item backgrounds to
added an ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests to enhance authentication handling and improve test coverage for authentication
cloudstack - 10220 : fix npe in vpcmanagerimpl . setvpcid ( )
[ hotfix ] [ test ] disable flinksavepointtest on version 1.11
changed variable annotations from ` int ` to ` @ Cue . TextSizeType ` and ` int ` in multiple classes to improve code clarity and
updated loop condition to include an additional check to ensure that the loop does not exceed the size of actions to prevent out - of - bounds errors
changed the superclass of ` BitmexStreamingExchange ` from ` BaseExchange ` to ` BitmexExchange ` to align with the new package
add integration test for virtual metadata of relationship with parent and child orgunit
added null check for spatial before processing to avoid potential NullPointerExceptions to prevent potential NullPointerExceptions when spatial is null
updated ConditionalTokenFilter to set lastFiltered to true and modified test cases for LimitTokenOffsetFilter , LimitTokenCountFilter , and LimitTokenPosition
fix unsafestorenode to add stateafter to storefieldnode
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added an assertion to verify that no events are loaded in CasAuthenticationEventListenerTests to ensure that the test correctly verifies that the event repository is loaded
removed the ` attributeTemplateName ` and ` attributeLine ` parameters from ` AuthenticationAttrProcessor . java ` to streamline parameters for improved clarity and
added null checks for the key parameter in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that null
removed the ` setTypeface ` method that throws an ` RuntimeException ` in the ` CodenameOneTextPaint ` class to ensure that the method
added ` open ` methods in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS ` classes
simonstewart : remove deprecate fail ( string message ) from webdriverrunner
removed the condition checking if the item size is greater than zero to simplify the logic for better readability and maintainability
refactor DefaultResultSetHandler to simplify the handling of constructor mappings and improve code readability to enhance maintainability and reduce redundancy in the code
updated SQL assertion in CreateTableGeneratorTest to use double quotes for table references to ensure correct SQL syntax is used for table creation
added filtering functionality based on the specified mode in VectorizationContext to enhance the functionality of vectorization by allowing filtering based on the result type
changed the type of moveSelectorConfig from a generic type to a generic type to improve type safety and clarity in configuration handling
replaced the instantiation of ReorganizeTableStatement with modifyDataTypeStatement to simplify the code and improve readability
updated references to ` CLUSTER _ NAME ` from ` " cluster _ name " ` to ` DEFAULT _ CLUSTER _ NAME ` across multiple files
do n ' t try to connect to a new peer if it fail to connect
added style handling for multiple style strings in Nano . java to ensure correct styling is applied to multiple style strings
update datafixer to use nbtconverter instead of custom fixer . fixup ( ) .
updated return message from " Use ` String ` " to " No # toString ( ) on String " in NoToStringOnStringType . java to
increased the JVM memory size from 64m to 32m in TestThreadFailure . java to accommodate larger data sets for improved performance
refactor ` retryFailed ` method to return ` FailureContext ` instead of ` int ` and update ` TestMethodWithDataProviderMethodWorker ` to use
updated the return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure the correct token is
simonstewart : implement the ` ` selectpopup ' ' , ` ` deselectpopup ' ' , and ` ` capturenetwork
updated the ` doPrintEntry ` method to remove the ` printWarning ` parameter and simplified the ` doPrintEntry ` method to streamline the
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added validation checks for dialog opacity , shape , and background properties in Dialog . java and Frame . java to ensure proper handling of dialog states and prevent
changed the state variable from private to private final in DefaultProjectFilesystem . java to ensure the state variable cannot be modified after initialization
refactor Redis connection factory to use RedisStandaloneConfiguration for standalone configuration to improve clarity and maintainability of Redis connection setup
chatroomjabberimpl : add delay chat message to chat room if message have not change .
replaced ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to simplify the notification process by
refactored FileOperationsHelper and OperationsService to utilize Intent for creating share operations instead of direct call to OperationsService to improve code organization and
fix : add @ inject to fieldpropertyinject to allow value to be inject .
replaced the method call from ` getMinBuildHeight ( ) ` to ` yStart ` in ` ClassicPlotManager . java ` to improve code read
handle nullpointerexception in mockintegrationtestframework # getintegrationtest ( ) and # getintegrationtestframework # getintegrationtest ( )
tmi - exif : do n ' t read exif exif with interop sub directory
added support for ENABLED _ LS mode in VersionTargetGraphMode and updated its usage in VersionedTargetGraphCache to improve dependency management and
added a check for video format before processing in DLNAResource . java to ensure proper handling of video formats in the parser and default renderer logic
automl : fix typo find by codespell on fossies . org
[ fix ] lwjglnatives . load ( ) do n ' t load the javax . jnlp . persistenceservice
added escape handling to the CSV strategy and updated encapsulator logic accordingly to enhance CSV processing flexibility by allowing custom escape characters
added support for only AUTHORIZATION _ CODE grant type in ClientRegistrations and updated corresponding tests to ensure compatibility with OAuth2 JWT
improve error message for self - suppresion and suppressed exception .
added a query to retrieve counts from a table and modified the iterator initialization to include a null parameter to ensure that the OrderedResultIterator is correctly
[ hotfix ] [ regression ] fix rsquare in regression evaluation
added request header handling in ThreadContextMDCServletFilter to ensure correct context attributes are added based on the request headers
replaced direct casting of ` MapWork ` with a variable reference in ` Utilities . getInputPaths ` and ` Utilities . createTmpDirs `
[ java ] : improve performance of get / set folder image in pdf report .
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added unit tests for trusted issuer resolution to enhance cache performance and ensure correct handling of
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for database
llvminteroptype : add ismethod flag to allow interop type interop .
removed a redundant sleep call from AbstractBasicMockingIntegrationTest . java to simplify the code and improve readability
added a new file KernCrash . java that implements a graphical application using a kerning font to demonstrate the use of a kern
added a failure ( ) method call in LinkedHashTreeMapTest . java to ensure that the test execution fails gracefully
added a method to retrieve interface addresses with prefix handling in NetUtil . java to improve network address retrieval and support for loopback interface prefixes
cancel the housekeeper task when the pool be shut down .
[ hotfix ] fix checkstyle violation in grouptransferservice
refactored assertions in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` for testing tree map functionality to ensure proper functionality and functionality of the tree map functionality
changed the type of the results set from CategoryItem to String and modified the doInBackground method to return a ArrayList < String > instead of ResultSet
added validation for today ' s leap year in ValidatorTest . java to ensure that the date is valid based on the current date ' s leap year
added error code lookups and updated command completion logic in GrblController . java to improve error handling and provide clearer error messages
updated workspace scroll format logic to return home button label if no screens are available to improve user experience by providing a clearer label when no screens are
removed the count parameter from the getTrades method across multiple classes to simplify the method signature and eliminate unnecessary complexity
replaced stripAnsi ( ) method with stripAnsi ( ) and adjusted loop boundaries in ConsoleReader . java and MemoryHistory . java to improve
removed the suffix " . jdk " from the file path in JavaBuild . java to simplify the file path construction for better readability
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with direct calls to ` getType ( ) ` in multiple classes to simplify
updated JFCModel constructors to accept a Logger parameter for better logging to enhance logging capabilities for better troubleshooting during model initialization
added validation for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is non - negative to prevent runtime errors
added methods to create and drop views in TestUtil . java and implemented a test for view privileges in DatabaseMetaDataTest . java to enhance functionality
added support for stable floats and doubles in NanTest . java to improve test stability checks for different operating systems
added DesktopTaskbarUIController class and integrated it into TaskbarManager to support PC - specific icon management in the taskbar
added TaskCountListener implementation and improved task count handling in ModItemAdapter to enhance UI responsiveness and ensure proper task management during UI updates
refactor file handling methods in Files . java to improve code readability and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration ` to use ` Collection ` instead of ` Set ` for
removed the @ FunctionalInterface annotation from the DomainAwareServicesManager interface and updated the ChainingServicesManager class to extend ServicesManager to simplify the
use modid instead of filename to generate packinfo
chore : update gapic - generator - java version to 2.1 . 0 ( # 431 )
added new methods ` grow ( ) ` and ` growX ( ) ` to the ` Cell ` class to enhance the functionality of the ` Cell
refactored defaultinputhandler to use a map < keyboardkeystroke , actionlistener > instead of a map .
add try - catch to make test more robust
replaced long array with byte array in MetricsMemoryTester . java and added a memory fail count check in TestDockerMemoryMetrics . java to improve memory
deleted the JobParametersPrototype . java file to the prototype class is no longer needed in the project
added support for security configuration in MappingsTable by introducing a new boolean field and modifying related methods to enhance flexibility in managing security features in the
rename APPLE _ SWIFT _ OBJC _ CXX HEADERS to APPLE _ SWIFT _ EXPORTED _
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable dumping to the file during
fix rk video decoder workaround on android 4 . x
[ java ] check if the metadata buffer be connect before set the publisher limit .
added a condition to check if ` dbInfo ` is null or if ` options . getOutputOptions ( ) . isNoInfo ( ) ` is
[ hotfix ] [ network ] fix issue with ssl = false in prestodriveruri
updated DOMConverter to include error output options for latex elements to enhance error handling by allowing customizable error output
refactored assertions in Assert . java to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4037 - add retain flag to publish message
updated JSON serialization tests to include testCaseName in TestResultSummary . java and EventSerializationTest . java to improve test coverage and ensure proper serialization of
[ hotfix ] [ table - common ] add $ tumble to sqlgroupedwindowfunction
updated import statement for ` Parsed ` from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` to ensure compatibility with the latest
refactored session context handling in AbstractSessionContext and added locking mechanisms for setting SSL timeouts to improve thread safety and ensure proper SSL
updated comparison from ` cp . size ( ) = = 0 ` to ` cp . isEmpty ( ) ` and refactored the ` Watcher
replace ` CalciteSqlDialect ` with ` AnsiSqlDialect ` in ` SqlNodeConvertContext . java ` to enhance SQL dialect compatibility
changed log level from debug to trace for no firmware update handler available for a thing to improve logging granularity for better debugging
added unit tests for handling null values in Date and Timestamp types in GetObjectTest . java to ensure correct retrieval of null dates and timestamps in
refactor custom name handling in StringSubject and Subject classes to use a variable for improved readability to enhance code clarity and maintainability by reducing redundancy
added a test for multiple team permissions in UserModelTest . java to ensure correct access permissions are granted for multiple teams in the user model
added a new Java file ` Test7088020 . java ` with methods that test stack traces to verify the behavior of method handles with
refactor audience restriction validation to use a HashSet for better performance to improve code readability and maintainability by reducing duplication
fix race condition in httplongpollingdatachangedlistener and abstractdatachangedlistener
replaced multiple instances of ` _ stderr . println ( buffer buffer ) ` with null checks for streams to improve error handling and prevent potential NullPointerExceptions
added a new warning constant SEPARATION _ ORDER in Warning . java and implemented active stage checks in BasicEventSimulationEngine . java to improve warning
updated the optimization parameter in BaseBrokerRequestHandler from offlineTableConfig to realtimeTableConfig to ensure accurate query optimization for real - time tables
added handling for AGGREGATE _ TABLE _ AGGREGATE _ TABLE _ SQL and modified normalization configuration in PhoenixHBaseAccessor . java
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass functionality to ShadowBluetoothDevice and its test in ShadowBluetoothDeviceTest to enable testing of Bluetooth class configurations for
updated method names from ` contains ` to ` containsProfile ` in multiple files to improve clarity and consistency in method naming
flakiness ( core ) : fix sum ( [ ] ) error message
replaced ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with ` graph . readUnlockAll ( ) ` in ` Data
updated coreNodeName construction to use nodeProps . getCoreName ( ) instead of nodeProps . getNodeName ( ) to ensure correct concatenation of core
chatactivity : use updatebackpressure . updaterequest instead of call updatetoolbar / statusbar
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for tag parsing functionality
added SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase to suppress SimpleText codec tests for improved test reliability
updated the condition in ` Types . java ` to include ` lastBaseTag ` and added a new class ` T7005671 . java `
updated derivative calculations in DelaunayTriangulator to use ymid - 20f instead of xmid + 2f to ensure accurate
added @ Override annotations to multiple classes in the Java package to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern for better readability to improve code clarity and maintainability by utilizing builder pattern
fix a bug in stackoverflowcheckimpl . onyellowzonemadeavailable ( ) and onyellowzoneprotected ( )
added shadow methods for SQLite database and content values in Robolectric . java and removed deprecated methods from ShadowContentValues . java to streamline
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in both ` LwjglAWTCanvas ` and ` L
replaced ` int ` with ` ArrayUtil . ByteArrayComparator ` for comparison in ` BKDWriter ` to improve code clarity and maintainability by
updated Locale class to include a script parameter and initialized defaultLocale if it is null to improve flexibility in obtaining default locale settings and ensure default locale is
replace ` mIconCurrentTextAlpha ` with ` mIconLastSetTextAlpha ` in ` PredictionRowView . java ` to ensure the
corrected a typo in the warning log message from " Confimap PropertySources " to " ConfigMap " to improve clarity and consistency in
updated test cases to use UaaJunitSuiteRunner instead of hardcoded strings to improve test clarity and maintainability by utilizing a unified
added trimming to token tokens in GzipFilter and updated request parameters in GzipFilterDefaultTest to ensure consistent handling of whitespace in token tokens and
updated the initialization of _ outputType in Response . java to ensure consistent output type handling across the application
updated the default regexp implementation from JDK to JONI to ensure compatibility with the latest Nushorn framework
refactor ViewCapture to use FutureTask instead of Handler for handling message captures to improve responsiveness and performance of view capture operations
added support for ` ` style ' ' parameter in voice . xml and / styles . xml
added folder creation check in GitBlit . java to ensure the parent directory exists before proceeding to prevent runtime errors
updated the bind IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " in the Args . java file to ensure compatibility with the
camel - 14263 : fix typo in inonlycamelworkitemhandler and inoutcamelworkitemhandler
pdfbox - 4071 : make jpegutil a private class , a suggest by valerybokov
updated WorkModeToggleContainer and related classes to rename WorkModeToggleContainer to WorkFooterContainer to improve clarity and maintain consistency in naming conventions
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
refactor type parameter reference handling in DefaultJavaPrettyPrinter . java to streamline code for better readability and maintainability
added a call to free memory in OperatorContext . java to ensure proper resource management and prevent memory leaks
removed carriage return from string formatting in QueryByExamplePredicateBuilder and modified query replacement logic in StringQuery to simplify error handling and improve code clarity
replaced ` evictionCounter ` with ` AtomicLong ` and updated related methods in ` ConcurrentLRUCache ` , ` FastLRUCache ` , and
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added ` CountDownLatch ` in ` DefaultTaskExecutor ` to
do n ' t try to get localhost if it ' s not an inet4address
[ opengrok ] set dataroot and sourceroot in mainframe to avoid npe
add logging for Solon Admin client and server mode in markedclientenabled and markedserverenabled
[ hotfix ] [ table - common ] fix typo in tableenvironment
updated statement timeout handling in MapperBuilderAssistant and MappedStatement classes to ensure consistent timeout configuration for improved performance
refactor method signatures in JSweetTranspiler , TypeScript2JavaScriptTranspiler , and TypeScript2JavaScriptWithTsserver
added serialization for GeoLocationRequest and GeoLocationResponse classes in CasCoreAuthenticationComponentSerializationConfiguration to enable proper serialization of GeoLocationRequest and Geo
updated validation checks in ArtifactFilesystem and modified test cases in ArtifactFilesystemTest to improve code clarity and ensure correct handling of build artifacts
tika - 264 - fix bug in summary extractor and add unit test for jxl
[ geo ] : fix concurrentmodificationexception in setshowobjectcondition ( )
( chore ) camel - http : / / issues . apache . org / jira / browse / amq - 4237 - fix the
added checks for ` hasValue ` method in ` GuavaOptionalSubject ` and corresponding test cases in ` GuavaOptionalSubjectTest ` to ensure correct
updated visibility check for VERTICAL _ SWIPE _ INDICATOR in BackgroundAppState . java and refactored progress calculations in Shelf
bugfix : fix npe in matdefeditorlelement when nav be null
do n ' t use temp point if absolutelocation = false
[ hotfix ] [ core ] fix typo in erroroccurredinonexceptionroute
updated the schedule method from ` scheduleAtFixedRate ` to ` scheduleWithFixedDelay ` and changed log level from info to debug for location change logging to
pdfbox - 4071 : remove unnecessary conditional check in singlepassandimagebasedlightinglogic
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang
updated import statements in GuiceFactoryTest . java to include specific classes to improve code clarity and maintainability by using specific imports
added a systemFeatureList to manage system features in Robolectric package manager to enhance functionality by allowing the retrieval and setting of system features
refactor RCAFrameworkLoader to use a loop for adding relative path properties and add unit tests for path augmentation to improve code readability and
removed logging statement for cancellation watch dog to clean up the code and reduce unnecessary logging
added a null and length check for enumerationValues in RADProperty . java to prevent potential NullPointerExceptions when accessing enumerationValues
corrected the spelling of " needInline " to " needStartText " and " needEndText " in multiple files to improve code read
added asynchronous processing to collect and send telemetry data to enable asynchronous processing of telemetry data
removed conditional logic for altering the UPGRADE _ ITEM _ TABLE column type in UpgradeCatalog260 . java to simplify the column
[ hotfix ] [ table - common ] improve error message for create index , temp resource and index directory
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added a key append to the selector ID in Matcher . java to ensure the selector ID is properly formatted for better debugging
updated debug logging format and corrected formatting in GouraudShadingContext . java to improve code readability and maintain consistency in formatting
updated taskbar visibility and alpha handling in various components to enhance user experience by allowing better visibility of the taskbar during hidden transitions
reformatted code for better readability in KeyExchange . java to improve maintainability and readability of the code
added a type check for JdbcConnection before executing a query to ensure type safety and prevent potential ClassCastExceptions
refactor file index handling in ServerMainTest . java to improve clarity and correctness in file existence checks to enhance code readability and maintainability
added methods to retrieve the media recordering mime type in CodenameOneImplementation , MediaManager , and Display classes to provide access to the media recorder
make shaderhelper . useshaders public , so it can be use by other player .
updated the condition in the BindableFilter test from " > = " to " > = " and changed the order of the return statement from "
removed unnecessary whitespace in ZkStateReader instantiation to improve code readability and maintainability
removed unnecessary closing braces and improved code formatting in XMPMetaParser . java to enhance readability and maintainability of the code
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package to
replaced a conditional check with a while loop for finding the first occurrence of " < script > " in UrlHelper . java to improve code readability
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated related logic to improve clarity and
refactor border property checks into a separate method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by encapsulating
change log level to debug in watchconnectionmanager and watchhttpmanager
updated import statements and modified the ` attachProjectToConnection ` method to accept ` HubRegisterResponse ` as a parameter to improve code clarity and ensure
replace bitwise operations with byte . toUnsignedInt in multiple classes to improve code readability and maintainability by using a unified utility method
[ hotfix ] fix checkstyle violation in opentracingtransactionproducer
changed the default value of DepFiles from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure compatibility with the latest
changed the default value of rangePannable from true to false to disable the range plotting feature in the plot
updated the logic for managing the main and work mode switch in AllAppsContainerView to ensure proper management of the work mode switch based on the
changed access modifiers of variables from package - private to private in Visualizer2TopComponent . java to enhance encapsulation by restricting access
added handling for CancellationException in FunctionTest . java to improve error handling for cancellation scenarios
changed constructor access modifiers from default to protected in JarFileResource and JarResource classes to enhance encapsulation and allow subclasses to access these constructors
refactor DefaultTrackSelector class for improved readability to enhance maintainability and ease of understanding for future developers
added a loop to wait for unseqMerging to complete before proceeding with compaction to ensure proper synchronization during compaction processes
updated the fee currency from AUD to BTC in the BTCMarketsAdaptersTest to ensure the test correctly reflects the correct fee type
updated the SQL table name from " Post p " to " post " and refactored related tests in Hibernate and JPADTOProjectionTest
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
do n ' t call oncomplete ( ) in sendheadersfirstpublisher # oncomplete ( )
camel - 16265 : camel - aws - sse : use builder instead of custom deserializers for customerkey
added support for Bigdecimal value type in RangePredicateEvaluatorFactory to improve error handling for unsupported value types
[ hotfix ] rename inner to javacelement in treebackedprocessorwrapper
added annotation printing in ParameterInfo . java to streamline output for better readability and maintainability
added support for AC3 streaming in PlaybackController and refactored video seek logic in VideoManager to improve video playback functionality and enhance user experience
update the return statement in LocalNode to return a JSON content containing the value to ensure that the response reflects the correct data structure for the node
added @ SuppressWarnings ( " deprecation " ) annotation in DelegatingStatement . java and DiskFileItem . java to suppress warnings related to deprecated
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to validate SQL query execution to ensure correct
refactor RTimerTree class implementation to improve performance and maintainability of the timer functionality
updated package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
fix for issue # 358 : letter gap be round wrong ( issue # 358 )
updated the executor and scheduler initialization in ClientConnector . java to include unique names to improve clarity of thread names for better debugging
changed access modifiers of ` treePane ` and ` treeSplitPane ` to private and added imports for ` Box ` and ` JCheckBox ` ,
added descriptions for user phone numbers in ScimUserEndpointDocs . java to improve user contact list functionality for better user experience
changed class visibility from package - private to public for DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes to enforce encapsulation
added null checks for responseMap and HTTP status codes in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and provide clearer logging for
refactor SolrRequestHandler class to improve code organization to enhance maintainability and readability of the code
added a condition to check if ` DEFAULT _ PARALLEL ` is not equal to ` DEFAULT _ PARALLEL ` in the `
testvmware : fix checkstyle issue in util / cloudstack / cloudstack / vmware / testvmware . java
updated error handling in TerminalImpl to include SCARD _ E _ NO _ SMARTCARD to improve error management by handling additional card scenarios
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress excessive logging during test execution
camel - 14263 : fixed the bindykeyvaluev2unmarshaller test error
change default for useowner and usetimestamp from true to false
updated method signatures in Utils . runAndCheckException to use ThrowingRunnable instead of Runnable to improve exception handling by providing a more descriptive
fix npe in crawluri when via , viacontext , and pathfromseed be null .
camel - 15836 - camel - aws - sdb : configuring endpoint should set property on endpoint and not configuration object - aws - s
updated version number from " 4.4 . 1 " to " 4.4 . 2 " and refactored variable assignments in LiquibaseXMLTransformer to improve
bug 60497 - change default value of proxy . cert . validity from 7 to 90
added smoothDelta and lastDeltaUpdate variables and modified calculations in ThreadHandler . java to enhance performance tracking and improve accuracy of elapsed time calculations
added a check for null ` paginator ` in ` HttpBatchReader ` and modified the URL parsing logic in ` HttpScanBatchCreator ` to enhance
added null check for CompactionInfo client in Worker . java and implemented a test for marking a failed compaction in TestWorker . java to improve
refactor onSaveInstanceState method in ShadowFragmentActivity and add tests for it in TestFragment to ensure proper handling of fragment state changes during instance state
updated formatting in BatchResourceFactoryBean . java for consistency to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the application correctly parses color references from Android resources
added exception handling for NoResultException in AbstractJPAQuery . java and created a test for uniqueResult in AbstractStandardTest . java to improve
renamed variable ` fromCache ` to ` owner ` and updated conditional logic for adding communities to improve code clarity and ensure proper handling of parent communities
updated the reference from ` l ` to ` LawnchairApp ` in the ` DepthController ` class to ensure the correct instance of the
removed unused import of ProcessTools in LocalManagementTest . java to streamline code and improve readability
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` and ` EnergyProcessorTest ` to simplify
added null checks and improved string concatenation logic in ExtensionStack . java to enhance robustness and prevent NullPointerExceptions during string construction
[ hotfix ] [ test ] fix flowableflatmap . flatMap ( ) and observableflatmap . flatMap ( ) . onerror
added connection manager timeout configuration to MultiGetRequest and ControllerStarter to enhance HTTP request handling by allowing configurable timeout settings
updated formatting of AndroidPlatformTarget initialization in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to utilize the ModelTest class instead of NewModelTest
replaced instances of ` SystemResourcesEdgeEventFetcher ` with ` TenantResourcesEdgeEventFetcher ` in ` EdgeSyncCursor . java ` and modified image
updated output hash calculation in CachingBuildEngine and added a test for output hash in CachingBuildEngineTest to ensure output hash is not calculated
camel - 14263 : camel - netty - add option to use bytebuf in camel - netty
updated the method call in alterPartitions to use getQualifiedName ( tbl . getTTable ( ) ) instead of getOldName ( ) to
improve error message when fail to create domain socket
chore ( core ) : move enumtypehandlerserializertest to typehandling - coretypes
refactor StreamEx class implementation to improve code readability and maintainability
added hints for JavaEE query timeout in SessionImpl . java to enhance query performance by reducing query timeouts
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to facilitate the binding of static loggers in SLF4J
replaced instances of ` CellUtil . cloneFamily ( kv ) ` with ` familyMap . put ( family , list ) ` across multiple files to
added rotation checks for window configurations in TaskbarManager . java to ensure proper handling of window orientations during layout adjustments
unescaping xml escape in chatroomjabberimpl . getnick ( ) to avoid nullpointerexception .
modified the longStackPut method call in StoreDirect . java and added a new test class Issue265Test . java for transaction handling to ensure
added @ SuppressWarnings ( " mutable " ) annotations and suppressed warnings in multiple Java files to improve code clarity and suppress warnings related to immutable enum
[ jbrules - 3131 ] fix broken test by add a Holder class to encapsulate value and outcome
updated formatting and improved argument copying in FFMpegVideo . java and FFMpegVideo . java to enhance code readability
updated NBWriteServlet to accept an unlimited parameter and modified related constructors and methods accordingly to enhance flexibility and control over the behavior of the N
blockchainimpl : fix incorrect totaldifficulty when mine light
simplified the logic for determining current window seekability in DefaultPlaybackController . java to improve code readability and maintainability by reducing complexity
replace synchronized list with CopyOnWriteArrayList for knownLibraries in NativeLibrarySupport and SecurityServicesFeature to improve thread safety for concurrent access to the verification cache
added uniform allocation calculations and adjusted positioning in AllAppsView . java to ensure correct positioning and distance calculations based on screen dimensions
updated HttpURLConnection . java to include a check for the presence of a colon in the key to ensure proper handling of keys with colons in the
added PrincipalResolver to the authentication metadata populator to support principal resolution in the multifactor authentication process
updated imports and refactored error handling in DelegationTokenResponse . java to use Noggit JSONParser and ObjectBuilder to improve compatibility
added a method to remove trailing slashes from the string builder in IoUtil . java to improve handling of trailing slashes in string manipulation
added a new method ` matchesAny ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to enhance pattern matching functionality
[ hotfix ] [ core ] fix error message in loadincrementalhfiles
fix fire potion not be able to remove air from potion .
removed unnecessary whitespace in the method call to improve code readability and maintain consistency
refactor calculations in ContractStateCapsule and ReceiptCapsule for consistency and clarity to improve code readability and maintainability
added logic to handle input readiness in AsyncContentProducer and BlockingContentProducer , and implemented a new test for isReady ( ) in AsyncIO
added a mandatory check for the weightField parameter in DocumentDictionaryFactory to ensure that the weightField parameter is not null to prevent runtime errors
added support for plist variable substitution in AppleBundle and added a test for infoPlistVariableSubstitution in AppleTestIntegrationTest to enhance the functionality of
fix lancer and lancer bullet not be able to collide with the player .
changed the type casting of adaptOrder calls from OrderCreateApiRequest . OrderCreateApiRequestBuilder to Object to ensure proper type safety and prevent potential
added a new file ` PreParseGrammarTest . java ` for testing XML grammar grammars to facilitate testing of XML schema grammars in the X
2 . x : fix doclint warning in javax . swing . plaf . basic package
added FontManager import and overrideFont calls in ExtendedEditText . java to enable font overriding functionality in the ExtendedEditText
added a null check for currentUser in AuthorizeTag and a corresponding test case to ensure that the method returns an empty list when no user is
camel - 14284 : camel - cxf - should check for unsafe character in uri when encode the uri .
[ geot - 5131 ] jdbcgeometrytestsetup now override setupdata ( ) so that it do n ' t break the build .
removed unused import of DumpHandler from MultipartFilterTest . java to clean up the code and reduce unnecessary dependencies
[ hotfix ] [ table - common ] stop restore attempts when the registry be already closed
remotejmeterengineimpl : add server . rmi . create property to allow create rmi registry
[ hotfix ] [ table - common ] use string . join instead of string . join
updated configurations for display metrics and modified qualifiers handling in tests to ensure accurate display metrics are utilized and improve test coverage for display metrics
[ java ] add support for cluster member id to service heartbeat .
updated numAttributes calculation based on VersionCheck version to ensure correct number of attributes based on the version check
added handling for NaN values and hash code in CustomExpression . java to ensure proper handling of NaN values and improve hash code generation
updated logging statements to use parameterized logs and improved error and warning messages for better clarity to enhance readability and maintainability of log messages for better debugging
added authentication routes for " / authenticate " and " / authorized " in AuthenticityController and created a new AuthenticityFormTest class to
added assertion to ensure that the next node be alive before proceeding to prevent potential errors during snippet processing
updated the logger reference from ConnectionManager to HttpClientRequestImpl to ensure the correct logger is used for HttpClient requests
fix trackselector . compare ( ) to be consistent with other track selector .
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the serialization process
draw crop point if crop be set to false
refactor UnitOfWorkFactory to improve code organization to enhance maintainability and readability of the codebase
added a new field ` allAppsCellWidthPx ` to ` DeviceProfile ` and updated related references in ` WidgetPreviewLoader ` and
tika - 145 -- add content - type name parameter to the content - type parameter in mailcontenthandler
updated the URI construction in ThumbnailsCacheManager to use fileId instead of remotePath to simplify the URI construction and improve clarity in thumbnail generation
added support for setting and resetting the input stream in the Source class to ensure that the input stream is properly marked and resetable based on supported
2 . x : deprecate asyncprocessor , asyncsubject , and serializedsubject , add @ deprecate suppresswarnings ( ` ` 
added configuration to control error stack visibility in the error page to enhance user experience by allowing users to view error stacks on the error page
cloudstack - 10220 : fix domain / templates cleanup in cloudstack when delete template and domain
remove unnecessary null check from sparcarithmicirgenerator
[ drools - 5 ] fix decisiontable configuration adapter for legacy drools 5 . x api
refactor onRequestPurchaseResponse method to use a Runnable for asynchronous processing to improve responsiveness and ensure thread safety when processing purchase requests
[ hotfix ] [ test ] increase timeout for unboundedsourcesystemtest
updated import statements and modified style retrieval logic in ShadowAssetManager . java to improve code clarity and ensure proper handling of parent names
deleted files MrefStat . java . rej and MrefStat1 . java and added new classes MrefStat1 and MrefStat
updated scope handling in DependencyInsight . java to check for blank scopes to ensure consistent behavior when no scope is provided
refactor error handling in BTCETradeServiceRaw to use message constants for no trades and status to improve code readability and maintainability by
use hamcrest assertion instead of junit in integrations / microprofile / microprofile / microprofile / microprofile / microprofile / microprofile / micro
added method to get a list of payment request URLs in BitcoinURI . java and corresponding unit tests in BitcoinURITest . java to
planner - 383 throw an illegalargumentexception for annotated collection property with a single generic argument .
removed duplicate call to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
do n ' t call notifyeventwriter ( ) if the node acquire and the lock owner have be release
updated the handling of null values in BasicAbstractTuple . java to use a loop instead of a null check to improve robustness by ensuring null values
[ fatehi - 232 ] use inputresourceutil instead of nio . file to read linter config file
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post ( Runnable ) to ensure background and padding updates are executed
fix issue with inventory . oninventorytick not call on the correct player .
added support for OCELOT _ BABY event in PlayerEvents . java to enhance player event handling for OCELOT _ BABY
[ hotfix ] [ runtime ] add miss @ publicevolving annotation to statettlconfig
added null check for ` x ` in ` PreparedStatement ` , ` Array ` , and ` ResultSet ` classes to ensure proper handling of null values
[ java ] add describe - all : print out descriptor for all valid recording in the catalog .
replace double quotes with single quotes in append0 ( ' \ n ' ) method to improve code readability and maintain consistency in formatting
added a new test method ` jsonSnapshot ` to handle JSON snapshots in ` SiteSnapshotVariationsTest . java ` to enhance testing capabilities for
refactored the ` removeTheTxAndBlock ` method and updated imports and annotations in ` BroadTest . java ` to improve code organization
added channel enable PRIVACY _ MODE to ipCameraHandler and related commands in AmcrestHandler and DahuaHandler to enable camera
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify method signatures by eliminating unnecessary
refactor constructors in ChangeLogIterator to accept changeSetFilters as a parameter to improve flexibility by allowing multiple filters for different change sets
gracefully handle guest exception in polyglot launcher
updated method call to retrieve the OPT _ OUT _ TRACKING environment variable to ensure compatibility with environment variable retrieval
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
refactor space handling in SpacesVisitor . java to use dropParentUntil for better readability to improve code clarity and maintainability by reducing redundancy
fix : add ` ` nearcache ' ' parameter to ` ` copy ( ) ' ' method
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest ` to verify border visibility behavior on floated elements with overflow hidden
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` ProjectCommand
renamed LIVE _ URI to PROD _ URI and added error logging for MalformedURLException in KucoinExchange . java to improve clarity and specificity
refactor resource loading and search path handling in SpringResourceAccessor . java to improve code readability and maintainability by reducing redundancy
add unit test for smarthomeunits . tostring ( ) , add test for isometer / microwatt / squarecentilemeter
updated the method for retrieving vertex mask from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader .
removed the Tls12SocketFactory class and its associated SSLSocketFactory implementation to streamline the codebase by eliminating unused components
fix loading of citation entry in texbibentryresolver
added a check for legacy resources in Robolectric mode in ResourcesTest . java to ensure compatibility with Robolectric ' s legacy resources
added a check for FirebirdDatabase to return a specific DatabaseDataType to ensure compatibility with Firebird database data types
added null checks for dataSource and transactionManager before assignment to DefaultBatchConfigurer to prevent potential NullPointerExceptions when accessing properties
add ` @ api ` annotation to the ` @ stubs ` package and add ` @ api ` annotation to the ` @ stubs ` package
updated the command from " www . google . com " to " 127.0 . 0.1 " and modified the test method to include a timeout parameter
no effective change - use try - with - resources
updated TermScorer instantiation to conditionally use FREQS based on scoreMode to improve flexibility in handling postings based on score mode requirements
[ hotfix ] [ runtime ] fix npe in dataflowmetrics . getmetrics ( )
server : search for nics by networkid , ip4address , accountdatacentervirtualsearch , and accountdatacentervirtualsearch when search for
refactor DynamicPartitionPruner to use a new method for finding the target object inspector to improve code clarity and maintainability by centralizing converter logic
added a method to remove build artifacts from ` ArtifactFilesystem ` and corresponding tests to enhance the functionality of ` ArtifactFilesystem ` to properly manage and delete
added logic to set the row selection interval in ThrustCurveMotorSelectionPanel to ensure proper handling of selected rows in the table
replace assertthrows ( arraystoreexception ) with assertthrowsarraystoreexception ( ) .
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future updates
added environment name parameter and user agent configuration in HttpClientBuilder and HttpClientConfiguration to enhance flexibility and support custom user agent configuration for HTTP requests
refactor session restoration logic to use a computeIfAbsent method to improve code readability and maintainability by reducing duplication
updated the assertion in ` IssueTest . java ` and changed the type of ` results ` from ` Set < String > ` to ` Set <
updated ByteArrayDataSource initialization to handle null file content type to ensure proper content type is used when the file ' s content type is not set
event : send interaction end event instead of actiation request
pdfbox - 4071 : fix typo , a suggest by valerybokov
added a private method ` updateSnapshotRadius ` to ` RecentsView ` and modified its visibility in ` TaskView ` to improve encaps
added logging for swagger generation and updated schema handling in StaticMicroserviceVersions . java to improve visibility into swagger generation for 3rd party services
changed the return type of the put methods from void to int in ArrayMap . java to allow the put method to return an index instead of void
[ flink - 24166 ] [ kafka ] increase startup timeout for kafka container cluster
http : / / issues . apache . org / jira / browse / amq - 4617 - retry message send back to normal broker if
modify header addition logic in StaticServerHttpHeadersWriter to check for non - existing headers to ensure that headers are not written with different case to avoid
replaced direct class loading with ReflectUtil check for package access in EventListenerList . java to enhance security by ensuring package access before loading the listener class
added a CustomAdapter to manage application and image views in the ApplicationsFragment to enhance the user interface by providing customizable application display lists
updated applyIcon method to accept both images and tasks in KeyboardQuickSwitchTaskView . java to improve null safety and prevent potential NullPointerExceptions
refactor ` DownloadTracker ` , ` DownloadManager ` , and ` DownloadStateCursor ` to use ` try - with - resources ` for resource
updated the handling of the INSERT clause in BaseSqmToSqlAstConverter . java to correctly manage the current clause stack to ensure proper functionality
updated JUnit test imports and annotations in HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and 
refactor ` DataInputStreamWithTimeout ` to use a ` Future < Boolean > ` for polling messages and implement a new ` Poller ` class to
added ENABLED _ TS mode to VersionTargetGraphMode and updated VersionedTargetGraphCache to utilize ToposortBasedDepsAwareExecutor
refactor UpgradeCatalog150 class for improved functionality to enhance performance and maintainability of the code
rename ` ` testnet3 ' ' and ` ` testnet ' ' to ` ` oldtestnet ' ' and ` ` testnet '
bugfix : do n ' t update the option panel when there be only one geo
updated onboarding preferences handling in AppsDividerView and added nullability annotation in ActivityContext to improve code robustness and prevent potential NullPointerException
replaced ` IndexOutput ` with ` BufferedIndexOutput ` and updated ` HdfsIndexOutput ` to extend ` BufferedIndexOutput ` to improve
pdfbox - 4071 : do n ' t draw a rectangle if the clipping path be not complete
removed synchronization around localAddress assignment in SocketChannelImpl . java to simplify the code and improve readability
refactor TemplateTransformer to use a dedicated method for adding values to the row to improve code readability and maintainability by encapsulating value
added a method to check if the operating system is Windows and updated file renaming logic to ensure compatibility with Windows operating systems and improve file re
refactor code to use a new constant and use a new constant for CHECK _ DIGIT _ STRING to improve code readability and maintainability by
refactor handling of execution type checks in NodeGenFactory . java to improve clarity and maintainability of type casting logic
removed the conditional check for ` fieldType . stored ( ) ` before writing a field to streamline the code for better readability and maintainability
fix ( sql ) : fix parsing of timestamps with nanosecond in where clause
removed conditional checks for stacktrace handling in LwjglCanvas . java to simplify the logic for adding throwables to the runnables list
fix typo find by codespell on fossies . org
replace assertinitialized ( ) with waituntilinitialized ( ) in connectionpooltest
updated the default value of DirContext . DEFAULT from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistency
refactor UserData initialization and filter count handling in FaultTolerantChunkProcessor to simplify data management and improve clarity in filter count management
updated tab initialization and error handling in FileWithTabs . java and T4994049 . java to improve code readability and enhance error handling
replaced multiple conditional statements with a static call to ` assumeTrue ( ) ` in ` ConsoleReaderTest . java ` to improve code readability and
remove admin check from getfeedbacksessionsaction # getstudentsessions
adjusted the calculation of newSelection and modified the velocity calculation logic in the AllAppsView . java file to correct the logic for determining the current
do n ' t call threadinfo . notifyclientonresultsavailability if there be no result
removed encryption logic and simplified connection handling in DataModelManagerDialog and ExportPanel to improve code clarity and maintainability by reducing redundancy
replaced instance variable ` writeBufferSize ` with a static final variable ` WRITE _ BUFFER _ SIZE ` in ` Writer . java ` and updated
updated the segment size calculation logic in DocumentsWriter . java and added a test for no documents index scenario in TestIndexWriter . java to improve performance
blender : do n ' t validate deform verticas if dvert be null
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
added a new instance of UnsupportedOperationException that fills the stack trace to avoid filling in the stack trace when throwing an unsupported operation
updated the method to return the average height of lines instead of the label bounds to improve accuracy of the height calculation based on line height
replaced the singleton instance of RotationTouchHelper with a constructor that accepts a DisplayHolder parameter to improve flexibility and maintainability of the RotationTouch
refactor loop structure and improve quote handling in AVA . java to enhance readability and maintainability of the code
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ` instead of ` Long . valueOf ` and modified ` setStateCurrentTrace `
added test cases for small and large HTTP versions in ServerDatagramConnectorTest . java to ensure the server correctly handles large and large file scenarios
updated the assertion in TestSqlEntityProcessorDelta to use substring method to ensure the correct substring is processed for the country code
refactor caching logic in Cache . java to improve performance and reduce memory usage
updated variable names from ' e ' to ' ev ' for consistency to improve code readability and maintainability by using more descriptive variable names
updated the ` doBefore ` method to use a boolean parameter and modified the initialization of ` seenDocIDs ` to improve code clarity and ensure proper
added a new Java file GcodeTable . java that implements a persistent JTable test with a data column to facilitate testing of the Persistent JTable functionality with
updated WEBAPP _ CONNECT _ TIMEOUT constant to use cfg . getConnectTimeout ( ) instead of a hardcoded constant to improve flexibility
updated multiple classes to use generics for envelopedTransform and CRLDistributionPointRevocationChecker to improve type safety and clarity in error logging
refactor TestMediaService to improve code structure to enhance maintainability and readability of the code
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in the Messages class to provide a clearer
add a new file MarketsPrintTool . java to implement filtering and processing of market currencies to facilitate the printing of market currencies in the desktop application
added hostname validation and validation in EndpointAddressInterceptor . java to ensure component names do not exceed the maximum length and prevent illegal characters from being used in
added methods for registering security keys start and complete in AccountProxy and HttpAccount classes to enhance security key registration functionality and improve code organization
refactor ServerSpanThreadBinder class to improve code organization to enhance maintainability and readability of the code
corrected user pointer usage in BulletPhysics . java and adjusted calculations in BlockItemSystem . java to improve accuracy of pointer handling and ensure proper
updated Csv2Shape to include " the _ geom " and " number " as keys in the builder to improve clarity and consistency in naming conventions
replaced callGasWord with gasCost in VM . java and removed unused imports in Program . java to improve code clarity and maintainability by
refactor parameters class to improve code organization to enhance maintainability and readability of the code
added a call to setIgnoreNullValues ( true ) in the piePlot class to ensure that null values are ignored during plot rendering
refactor resource bundle loading logic to simplify cache management and improve clarity to enhance code readability and maintainability by reducing complexity in loading bundles
updated the character used in the TaggedPdfReaderTool from ' _ ' to ' - ' to correct the spelling of the character used in the
make executescriptaction allow on edit by default
added userModified property to LoginSamlAuthenticationProvider to enable user modification during authentication
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` SealedObject ` with null checks to ensure that the
updated method names from ` onOpen ` to ` setResponse ` and removed the ` succeeded ` method from ` ConnectPromise ` to improve clarity and
replace Tag . SNOW with a Set for snow handling in BlockEventListener . java to ensure compatibility with server versions prior to API level 17 and above
added an ID tracking mechanism to the CryptsyAdapters and CryptsyPublicTrade classes and updated the Trade constructor to include an
added error handling to close the HMS connection in HiveStreamingConnection to ensure proper resource management and avoid potential memory leaks
update seed seed to use random . nextint ( ) instead of system . currenttimemillis ( )
updated the grid dimensions from 359 to 567 and added a new device profile for the Nexus 5 to enhance the visual representation of the Nexus 5
fixed race condition in refcount and observablerefcount . disconnect ( ) .
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to utilize a
added support for a new format token WHITESPACE _ AROUND _ TEXTUAL _ OP in the FormatToken and FormatVisitor classes to improve handling of
added checks for file existence and length in SaveTask and implemented unit tests for project file overwrite handling to ensure that the save and load functionality behaves
added synchronized keyword to multiple method signatures in MLogWriter . java to ensure thread safety when accessing shared resources
log4j2 - 1313 smtpmanager # add ( logevent ) should deserialize log4jlogevent object
replaced ` LengthLike ` with ` NonNegativeLengthLike ` in ` PrimitivePropertyBuilders . java ` to ensure compatibility with non - negative length
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` across multiple resource classes to simplify context creation process
do n ' t use stream to get trap unit for soot catch
added import statements and modified error message formatting in JUnitRunner . java and AndroidPlatformTarget . java to improve code readability and provide clearer
increased cacheSize from maxMemory / 16 to maxMemory / 8 in OmniNotes . java to optimize memory usage for better performance
added a condition to check if ' start ' is zero in InvocationStageTrace . java and modified test cases in TestInvocationPublishModelFactory . java
added error handling for null input in ProvKeyManagerFactorySpi to ensure robustness by handling potential NullPointerExceptions
updated UpstreamCheckUtilsTest to use a dynamic port and modified the server socket initialization to ensure the test operates on a dynamic port instead of a
fix issue with dockpane ' s layout change when old parent be the same a the other
added conditional checks for OpenGL extensions before setting limits in GLRenderer . java to ensure limits are only set for specific shader caps based on available caps
refactor PopulatorContext class to improve code organization to enhance maintainability and readability of the code
add project check before handle saveallnotification
updated ZQLJobManager to use Apache Commons IO for character encoding handling to improve compatibility with different file encoding systems
added a check for non - negative arguments in IkStepDefinition . java to ensure that only valid arguments are processed
replaced hardcoded string headers with constants from OSSOHeaderDecoder to improve code maintainability and reduce redundancy
added @ Deprecated annotations to multiple classes and methods in GenerateJavaSources and JavaGeneratorMojo to indicate that these options are outdated and should not be used
removed debug log statements for Apache Derby driver class access to clean up the code and reduce log clutter
[ java ] fix flaky test by wait for the session to be complete .
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance by reducing parallel processing time
updated logic to check for empty LiquibaseHubMode before updating properties file to ensure proper handling of ROLLBACK operation type and improve warning
added constants for IBM J9 VM and Eclipse OpenJ9 VM in Constants . java and a test method in TestDDRExtensionGeneral .
updated font addition request logging to handle CompositeFont cases and added a new DebugFonts class for testing to improve clarity and functionality of font addition requests
updated import statements in ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java , and added HTTP version handling in Negot
added RateControl import and applied it in SettingsBodyParser and MaxConcurrentStreamsTest to disable rate control for HTTP / 2 requests
added a new file Test6741426 . java that implements a Runnable implementation for JComboBox and JTextField components to implement a Nimbus Look and Feel
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest to include exception message to improve clarity in error reporting for CSRF token
added null checks for dbMgdPath , dbMgdPath , and dbExtPath in HMSHandler . java to ensure that
[ s3 ] move s3copyobjectrequest to correct package
refactor methods in SettingsActivity to remove unused accentColor parameter to simplify code and improve maintainability by reducing complexity
updated the expected exception message for folder path validation in TemporaryFolderUsageTest . java to improve clarity of error reporting for relative path scenarios
replaced instances of ` ClassTypeInformation . from ( Object . class ) ` with ` ClassTypeInformation . LIST ` and ` ClassTypeInformation .
fix clientconnection . addaddress ( ) throw illegalargumentexception if address be empty string or null
added a new certificate " keynectisrootca [ jdk ] " to VerifyCACerts . java to support the verification of root certificates
refactored compute method to return an int instead of void and added output count to improve efficiency by providing access to the size of the output batch
added a condition to set the menu mode based on the popup state before setting the mode to ensure the menu is only set when the popup is not
pdfbox - 4071 : fix potential arrayindexoutofboundsexception in memoryttfdatastream
added a new file ` FinalizerInfoTest . java ` implementing a test for garbage collection of finalized objects to ensure that finalized objects are
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve
[ bm ] fix handling of compensation proposal with custom address .
refactor StringSubject class implementation to improve code readability and maintainability
updated longData array size from 1 , 000 , 000 to 1000 , 000 , 000 and added JUnit @ Ignore annotation to
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in method naming
replace " @ " with " from : " in the query in Search . java to ensure accurate retrieval of recent suggestions based on user input
removed the conditional check for rebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary rebalance checks
added a new POST endpoint for importing YubiKey accounts and integrated it into unit tests to enable the importing of YubiKey accounts and
[ fix ] lwjglcanvasrenderer should use material . get ( ) instead of material . getname ( )
added null checks for the ` cnt ` variable in ` paintOnTopLoop ` and improved padding handling in ` SideMenuBar ` and ` Toolbar
refactor AbiWriterProtocol class to improve code organization to enhance maintainability and readability of the protocol implementation
added a null check for subName before setting the caption to ensure caption is set correctly when subName is null
change data flag from IMMOBILE to GRAVITY in EntityItem . java to ensure compatibility with newer data types
updated conditional checks and improved null checks in CustomExpression . java to enhance code robustness and prevent potential NullPointerExceptions
remove unused method requestblindvotelistfromnetwork and use sendrepublishrequest ( )
fix flaky test case in postgrestest . java .
updated substring method calls from double quotes to single quotes in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintain consistency
updated line separator handling in DefaultJavaPrettyPrinter and CommentTest classes to ensure consistent line endings across different operating systems
singleimplementor : replace atomicreference with atomicreferenceupdater for the currentsnapshot
added null check for filters before adding queries in SimpleFacets . java to improve robustness by avoiding potential NullPointerExceptions
add bridge support to thinghelper . buildallthings ( )
replaced calls to ` printHelp ( ) ` with ` error ( " command must be provided " ) ` and ` unknown command ` in ` K
added a check for the existence of the output file before returning it to ensure that the output file is only processed if it exists
add support for parse ' + ' , ' - ' and ' 00 : 00 ' in date format
added assertions in SpringDataJPALockTest and implemented findBySlug method in PostRepository to enhance test reliability by allowing retrieval of posts by their slug
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and modified the handling of the database connection
added a static block to initialize SimpleClientHttpRequestFactory and set connection timeouts in ClientRegistrations . java to improve request handling by utilizing a
sourcetest : add more test case for source . fromfilename ( ) and source . fromfilename ( )
[ gr - 12499 ] remove system property ` ` graalvm . version ' ' from defaulthomefinder and defaulthomefinder
added validity checks for access token and refresh token validity in ClientAdminBootstrap . java to ensure that the client ' s token validity settings are set when
updated androidAPIVersion return logic to use android _ api _ version ( ) configuration to improve flexibility by allowing dynamic configuration of Android API version
refactor placeholder variable references in PropertyPlaceholderHelper . java for consistency to improve code readability and maintainability by eliminating dependency on ' this ' keyword
updated the formatting of the Subject Public Key Algorithm string in the Resources . java file to improve readability and maintain consistency in formatting
updated ZkSolrClientTest . java to use CountDownLatch and AtomicInteger for tracking pending collections to improve collection management and ensure accurate assertions during parallel processing
added BigInteger import to simpleTypes in MongoMappingContext . java to enable proper handling of BigInteger types in MongoDB mapping
updated the condition to include a check for the button text in the toast visibility check to ensure that the toast display only occurs when the button text matches
added a condition to check if MEncoder is not in sync and does not disable Mc0 and noskip to ensure proper handling of MEncoder
[ hotfix ] [ network ] increase default event loop to 15 in configurationproperties
changed access modifiers from abstract to protected for several fields and methods in CountMin4 , AdaptiveWindowTinyLfuPolicy , IncrementalReset
added methods to retrieve the file float source and sorted fields in ExternalFileField . java , and created a new test class ExternalFileFieldSortTest
updated error message in FetcherException from " Invalid URL " to " Connection error " to provide clearer context for error handling
updated event handling in OpenRocketSaver and added source ID handling in FlightDataBranchHandler to ensure proper event IDs are escaped when processing
changed the access modifier of the check method from private to protected to allow subclasses to access and override the check method
added functionality to handle file synchronization in FileActivity to improve user experience by providing feedback when synchronization fails
updated the URI generation for resized images in ThumbnailsCacheManager . java to use URLEncoder instead of direct URL construction to simplify the URI construction and
added a check to ensure the InfiniteContainer is initialized before proceeding to prevent potential null pointer exceptions when the container is not initialized
updated the total variable initialization and adjusted the calculation logic in IntHashSet . java to ensure accurate total calculation based on the value
added a lock check before updating the feed entry to ensure that updates are only performed when the feed is locked
refactor conditional statements for determining principals in SolarisAclFileAttributeView . java to improve readability and maintainability of the code
replaced the manual list creation with an array of Edge objects and updated sorting logic in LatLonTree . java to simplify code and improve performance by eliminating
added IOUtils . closeQuietly ( is ) in ZkCLI . java to ensure proper resource management and prevent memory leaks
fixed bug in bibtexparser that cause comment to not be parse
added strict parameter handling in Main . java and corresponding test cases in MainTest . java to ensure that unknown parameters are ignored when specified in properties files
fix issue with custom constraint annotation . fix # 118
camel - 16265 : camel - http4 should use http4 endpoint instead of http
added a waitForThingsToLevelOut call in TestCloudPivotFacet . java to ensure that waiting for things to be available before proceeding with operations
simplified conditional statements in UBJsonWriter . java by removing unnecessary checks to improve code readability and maintainability
refactor ApplicationTest class for improved readability to enhance maintainability and facilitate future updates
replace String with StringBuffer for storing parameters to improve performance and readability of string concatenation
replaced instances of ` Type ` with ` RoboType ` across multiple files to standardize type usage and improve code clarity
[ java ] do n ' t abort recording if it ' s already complete .
dataimporter : add support for cache key and lookup
added a new file ` PutfieldError . java ` that tests the ` IncompatibleClassChangeError ` thrown to ensure that the ` Bad `
[ iotdb - 4892 ] avoid duplicate connection to aws . address . privatetopublic if it do not already exist .
add log to make sure flush be enqueue if the current throughput exceed the threshold
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files
removed duplicate ` encodedLength ( ) ` method declaration in ` Flyweight . java ` to streamline code by eliminating redundancy
refactor TestMethodResultMapBuilder to improve code structure to enhance maintainability and readability of the code
added handling for integer catch size in FindNullDeref . java to ensure proper exception handling and prevent runtime exceptions
[ hotfix ] fix checkstyle violation in tasklocalstatestoreimpl
updated return statements in Utils . java to replace hardcoded values with spaces for time representation to improve readability and maintainability of time representation in
updated conditions for handling DeepShortcutView in Utilities . java and FloatingIconView . java to improve compatibility with DeepShortcutView in the codebase
updated JwtIssuerValidator to use Predicate for comparing claim values instead of a String to enhance type safety and improve validation logic for issuer URLs
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate ` , and
added a new file ` CoverageConfig . java ` and refactored ` CoverageController . java ` to use ` CoverageConfig .
added a check to ensure EventBus registration is only registered when it is not already registered to prevent potential errors when the event bus is not registered
added ASCII - only validation for string normalization in NormalizerBase . java to ensure correct normalization behavior based on character length
[ hotfix ] [ runtime ] fix migration permission check in jobcoordinationservice
added error handling for SQL update in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that SQL updates fail gracefully and provide
camel - 16265 : camel - cometd - > camel - http : / / issues . apache . org / jira / browse /
added ` OK ` and ` WIDTH ` attributes in ` HtmlTag . java ` and updated test cases in ` ListTagsTest . java `
added a new line before writing a new line in HtmlCoreReport . java to improve the readability of the report output
updated the calculation of ramBytesUsed to handle null scores when calculating the size of the RAM usage estimator to ensure that the RAM
added a custom type adapter for StringHolder in CustomTypeAdaptersTest . java to support custom serialization and deserialization of StringHolder instances
set extradata from miningparameters when create the mergecoordinator
added a static map to track the number of parse and output files in DependencyParser . java to improve flexibility by allowing dynamic configuration of the number of
refactor PathParamServerEndpointConfig class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ migration ] increase default migration delay time for migration rule listener
renamed parameter ` part ` to ` partOrList ` in ` RestClientRequest ` and ` RestClientRequestImpl ` to improve clarity and consistency
[ jtreg ] move twitterbootstrap / bootstrap . css to twitterbootstrap / css
[ spanishtreebank ] remove unused basiccategory ( ) method
hhh - 11824 - deprecate entityloader . loadbyuniquekey ( ) and use uniqueentityloader . load ( ) instead
hbase - 25836 regionserversnapshotmanager and flushtableproceduremanager use taskpool . poll ( ) instead of futures . isempty
setsize ( ) do n ' t call super . setsize ( ) if width or height be zero
[ hotfix ] fix checkstyle violation in hikaripool
removed assureMatchVersion ( ) method calls from multiple filter factory classes and updated luceneMatchVersion initialization to ensure compatibility with the latest Lucene version in the
fix resolve interceptor for abstract method with @ get ( .. ) .
drlparser : do n ' t try to parse a comma after the first character in the input .
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
added a validation check for negative payload length in WsFrameBase . java to ensure that an error is thrown when the payload length is negative
move channelparser and dispatcher from ` channel ` to ` dispatcher ` and ` channelparser ` from ` channel ` to ` dispatcher `
updated executionId type from String to Long across multiple classes and modified related methods to use constants for better performance and consistency in handling query execution IDs
[ java ] : digest . update ( byte ) use 32 bit width and 32 bit height in imageprocessor .
removed a log statement from SolrConfig . java and added new imports in SolrConfigHandler . java to improve logging clarity and enhance parameter handling in
updated the delayUntil calculation in FileSyncAdapter . java from a millisecond to a millisecond to avoid too many automatic synchronizations due to timing issues
removed unnecessary line breaks in SegmentV1V2ToV3FormatConverterTest . java to improve code readability and maintainability
[ iotdb - 4892 ] fix add timeseries to mtree when measurement be complete
added URI handling and improved error logging in DefaultPackageScanClassResolver and added a new test for package scanning in JAR URLs to enhance URL
[ hotfix ] [ table - common ] [ table - common ] [ table - common ] [ table - common ] [ table - common ]
added a new class ` SpringSecurityAuthenticationSource ` to handle LDAP authentication in Spring Security to enhance security by providing access to LDAP principals and credentials
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code clarity and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the newer Android
replaced the auto - suggestion dialog with a simple form dialog for custom filename suggestions to improve user experience by allowing users to suggest files from cache
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest . java
updated the parameter name from ` collection . getName ( ) ` to ` collectionName ` in the ` stream ` method of ` MongoTemplate ` class
map : fix wrong zoom value when click on an image
added similarity parameter to KNearestNeighborNeighborClassifier and updated related tests to use LMDirichletSimilarity to enhance classification functionality by integrating
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve performance
replaced ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to retrieve the reason for lowResourceCheck
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added MTU request handling methods in ShadowBluetoothGattTest and implemented them in ShadowBluetoothGattGattGattG
refactor code to use a separate method for creating a ServletInputStream to improve code readability and maintainability
added VOSK logging to warn on unsatisfied link errors in VoskSTTService . java to improve error handling and provide clearer logging
channelprocessingmanager : use concurrenthashmap instead of hashmap to improve thread safety
updated Japanese localization messages to include " all , " " grouped , " " summary " and " summary " to improve clarity and accuracy of message
updated JDBCTypeMapping logic to check for size greater than 1 instead of 0 to ensure correct handling of sizes for JDBC types
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during entity addition and removal operations
refactor TerminalView to use regex for control codes and state testing instead of screen reader active checks to improve code readability and maintainability by reducing
added ` SIDE _ NAVIGATION ` to the conditional checks in ` MenuBar . java ` and modified ` SideMenuBar . java `
removed unnecessary Disposable declaration from ticker subscription in PoloniexManualExample . java and added debug logging in WampStreamingService . java to streamline
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java and its test in UpdateSettingForEnergyLimitActuator
updated variable name from ` url1 ` to ` javaUrl ` and added protocol handling in ` UrlBean ` to improve code clarity and ensure correct
camel - 14263 : camel - soap - add support for namespaceprefixref in soapjaxbdataformat
refactor date comparison logic into a separate method for clarity and maintainability to improve code readability and encapsulate date comparison logic
added a server restart check and security status verification in BasicAuthIntegrationTest . java and updated ZkStateReader . java to retrieve security properties to ensure
added a PriceFeed parameter to the TradesChartsViewModel constructor and adjusted currency handling based on user preferences
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure consistency in configuration settings across integration tests
updated variable names from ` from ` to ` end ` and modified logic for determining the last index of a string to improve clarity and ensure accurate index
added FileDataStorageManager to manage file download status to ensure that files are downloaded correctly during the download process
[ java ] set the length of the log file in mappedrawlog to match the length of the log file .
added a method to check if the registry is running and implemented a retry method to delete a file if it exists to improve reliability of registry retrieval and
removed unused imports and added componentPresetDao . startLoading ( ) method calls in EditTest , Quick3dMain , and TextureTest classes
removed unused private variables and added multiple @ SuppressWarnings annotations across multiple Java files to improve code clarity and suppress unchecked type warnings
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions when instances are null
added support for setting isolation level to TRANSACTION _ MUST _ BE _ ENABLED _ TO _ SET _ ISOLATION _ LEVEL in SQL exceptions
added transaction handling logic to ` AbstractStepFactoryBean ` , ` ItemOrientedStep ` , and ` SkipLimitStepFactoryBean ` classes
updated CasManagementSecurityInterceptor to extend DirectCasClient and refactored related security logic to improve integration with DirectCasClient and enhance security logic
added functionality to display and edit a category in the ListFragment to enhance user experience by allowing category addition in the navigation drawer
renamed the ` cancel ` method to ` cancelMatchingOperation ` and updated the method name from ` observeDownloadWorkerState ` to ` observeWorkerState
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to use unused font size values to improve code clarity and maintainability by using a consistent font
fix a bug in constantanalysis when the fact be not valid .
refactor multiple classes related to DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser to improve code organization and maintain
return a new ArrayList instance containing spans instead of the current spans to ensure that the returned spans are properly instantiated
removed unnecessary locking and streamlined method calls in Liquibase . java to improve code readability and maintainability
added a method to set the revision in MicroserviceVersions and modified its usage in InstanceCacheChecker and TestInstanceCacheChecker to ensure that the revision
updated foreignKeyName and indexName initialization to include full name and hash code in TableRetriever . java to ensure consistent handling of foreign key and index names for
camel - 15836 - aws2 - s3 : add uri - endpoint - override option to the endpoint - aws2 - s3 component
removed unnecessary currencyPair parameter from getBitstampUserTransactions method in BitstampAccountService and added error handling in BitstampAccountServiceRaw to simplify
added a try - catch block to handle NoSuchComponentException in BlueprintContainerRegistry . java to improve robustness by returning null when a component is
updated push method to return a boolean instead of void and modified push token handling to improve push functionality and enhance push control based on remote settings
test : use a dataset to compare legacyaddresses instead of a hardcoded value
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other packages
added a setupPushWarning method and refactored Snackbar handling in NotificationsActivity and DrawerActivity to improve user experience by providing a
close the channel if we fail to replay the request
refactor ` LdapPasswordPolicyEnforcer ` to use ` StringUtils . isEmpty ( ) ` for null checks and improve code readability to enhance code clarity
rename DefaultAnnotationEngine and Stubber classes to improve clarity and consistency in naming conventions
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 10278 : add support for the timezone property in about and flowresource
do n ' t split own range if we do n ' t need it
removed exception handling for deserialization in BeanContextSupport . java to simplify code and improve readability by eliminating unnecessary exception handling
fix concurrentmodificationexception in circuitmanagerimpl # addactivecircuits
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling for uncompiled shaders
[ hotfix ] [ runtime ] expose source and sink field in pollsinkrunner
updated logging in FastBindLdapAuthenticationHandler from error handling to info logging for authentication failures to improve logging clarity and maintainability of the authentication process
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance performance and maintainability of focus traversal logic
algofunctionfreehand . getgetgetpointlength ( ) now implement geolocusable
corrected formatting of the constructor declaration in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve code readability and maintain consistency
refactor database connection handling and logging in SchemaCrawlerMain and Executable classes to ensure proper resource management and prevent resource leaks
bump default tl version to v1.1 and add fallback for old jdks .
updated exception messages in CountersManager to clarify buffer state to improve error reporting for better debugging
updated audio stopping logic in MediaManager . java to handle the case when the current audio queue position is zero to ensure proper handling of the audio queue
updated debug logging to include the connection ' s state in HttpConnection . java to improve logging clarity by providing more context on the upgraded connection
added support for ` @ Transient ` annotations in ` JpaPersistentPropertyImpl ` and corresponding unit tests to ensure proper handling of transient fields in
updated version assertions in UpgradeResourceProviderTest to use " HDP - 2.0 . 0 " instead of " HDP - 2.0 . 1 "
trufflevm : fix eval ( ) method to return object instead of symbol .
[ java ] make isbinarytype public so it can be override by sonar .
updated the configuration key for TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from "
refactored findProblem method in JavaEditor and added priority constants in JavaProblem to improve clarity and maintainability of the codebase
replaced the usage of the DEFAULT _ OFFHEAP constant with a direct reference to the DEFAULT constant in DictionaryIndexType and BloomFilterHandler to
replace hardcoded newlines with system - dependent line separators in TableWriterTest . java to improve maintainability and readability of the
refactor DebugHelper class to improve code organization to enhance maintainability and readability of the code
added a boolean flag ` ownsTexture ` to manage texture ownership in ` ParticleEffect . java ` to ensure that ` ParticleEffect . java
hive - 16457 : add ldap configuration property to hive . server2 . authentication ( krisztian kasa , review by z
fix checkstyle issue in com . google . cloud . datacatalog . v1beta1 package
updated DetailActivity to use Context for soft keyboard toggle and added SHOW _ FORCED input method in toggleSoftInput calls to improve code
added a test method to convert ` MAP OF _ STRING _ TO _ MAP _ OF _ STRING _ TO _ MAP _ OF _ INTEGER _ TO
updated the size calculation in TestFileSystem from 100 and 500 to 50 and adjusted the size from 100 and 500 to 50 to optimize memory usage and improve
updated error messages in ContentTypeManager . java to improve clarity and consistency to enhance user understanding of bug reporting prior to filing a bug report
refactor ` dropSequences ` method to be abstract in ` AbstractDatabase ` and override it in ` JDBCDatabase ` to improve code organization and
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
replaced direct assignment of binaryField ' s creation with a variable ' f ' to improve code readability and maintainability
[ geot - 5131 ] hierarchical icon will now work with logicalstylemodel . map _ styles .
added a test for ` findOne ` after upserting a non - existing object in ` MongoTemplateTests ` to ensure that the ` findOne ` method
hbase - 16457 fix a bug in the calculation of ` ` mid ' ' in hfileblockindex .
added stats tracking for app launch events and refactored broadcast intent handling in Launcher and Stats classes to improve code clarity and prevent potential null pointer
added graphics drawing functionality in JavaSEPort . java to improve rendering performance and resource management
add team member to the team page for the last section and prev team
added a check for zero inventory ID in Inventory . java and created a corresponding test in InventoryTest . java to ensure that player ' s inventory ID
added a condition to check if the variable is found before proceeding to avoid potential null pointer exceptions during execution
removed unnecessary null checks for returnTypeAnnotations in multiple parser visitor classes to simplify the code and improve readability
updated TileMapRenderer to handle null blended tiles and initialized it as an IntArray to improve robustness by preventing null pointer exceptions when blended
removed unused ` java . util . concurrent . * ` references from the ` @ Classes ` annotation to streamline the code by eliminating unnecessary dependencies
modified the ` getArea ` method ' s logic in ` IfcTools2D . java ` and added a null check for ` last `
updated the initialization of ` lockOnSync ` to use ` this ` instead of ` null ` and modified the handling of ` lockOnSync `
refactor PipeEventBus and PipeBehaviourEmzuli to improve class hierarchy handling and method overriding to enhance code clarity and maintainability by ensuring proper event
updated the timeout value in ZkController instantiation from 1000 to TIMEOUT in ZkControllerTest . java to allow more time for the Zk
added a test for passing a passcode with client parameters in TokenMvcMockTests . java to ensure proper handling of client - specific parameters in the
added constructors for LengthFilter , KeepWordFilter , and CharArraySet in TestRandomChains . java to enhance testing capabilities for different input
removed unused JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability
fix potential memory leak in llvmx86 _ 64bitvastart . java
replaced the native method ` btCollisionObjectArray ` and ` btRigidBody ` with a method call to ` btCollision
added copyright year property and updated AboutDialog to include contributors and updated the OpenRocket URL to include copyright information to enhance copyright management and improve
added getdistributedobjects ( ) method to JetClientInstanceImpl and created a corresponding test class to enhance the functionality of the JetClientInstance
added debug print statements for component , finCount , and inertia in FinSet . java , and updated MassCalculatorTest . java to improve
updated memory constants from TOTAL _ MEMORY and memorySemaphore to MAX _ MEMORY to ensure accurate memory management based on the maximum available memory
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and corrected method parameter name in CreateAlignedTimeSeriesPlan . java
refactoring : use bisq co - founder instead of co - founder -
updated JsonLoaderTest to use json method and added exception handling for big _ integer _ t to improve code readability and ensure proper exception handling for
updated the capacity check for tableSize from a minimum of 1 to a maximum of 0x40000000 to ensure that the application does not exceed the
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and prevent potential null pointer exceptions
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify field access by eliminating unnecessary annotations
added error handling for security exceptions in FileHelper . java and modified content handling in TextHelper . java to improve robustness against security exceptions and ensure
added a new constant StyleWithMultipleAttributes and implemented tests for attribute resolution in ShadowThemeTest to enable dynamic attribute resolution for different styles in the theme
updated HSSFWorkbook . java to include sheet names and modified TestHSSFWorkbook . java to create multiple sheets to improve sheet name validation and
updated the color used in the ManageAccountsActivity from primaryColor to elementColor to improve the visual appearance of the element in the UI
updated the initialization of ` wrapped ` in ` DefaultEventBus . java ` and modified path resolution in ` DefaultPlatformManager . java ` to ensure safe
added support for " COLLATE " configuration in multiple database type classes to enhance compatibility with MySQL ' s binary collation settings
added a new method ` whenType ` to the ` Tree ` class that returns an ` Optional ` based on the type of the tree type to
refactor navigation handling by adding a method to retrieve the user view destination to improve code clarity and maintainability by reducing redundancy
updated return statement to redirect to a temporary redirect based on the public URL to improve user experience by redirecting to the correct application settings
[ hotfix ] [ kinesis ] improve error message when deserializer be not serializable
camel - 14263 : fix typo find by codespell on fossies . org
replaced a sleep delay with a try - finally block for closing the ZkStateReader to ensure proper resource management and prevent potential resource leaks
rename methods and variables related to icon transition progress from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple
refactor the read method in ProxyHandler to use a dedicated method to improve code readability and maintainability by encapsulating the read logic
replace ` BufferUtil . allocate ( length + 32 ) ` with ` ByteBuffer . allocate ( length ) ` in multiple locations to improve code readability
modify the return type of prepareStreamsToUpload ( ) from void to boolean and update its implementation to improve clarity and functionality of stream upload logic
replaced direct comparisons with Integer . compare for order and addOrder in AbstractConfigLoader and updated test cases in TestMicroserviceConfigLoader to improve
added a new file ` PicOfDayAppWidget . java ` to handle image loading from a pic - of - day app widget to enhance the
server : make internallbvmofferingid default to 0
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil and modified join condition handling to ensure compatibility with the latest Hive
[ hotfix ] [ table - common ] deprecate legacy operator transformation
added user and password options for remote jmx access in NodeToolCmd . java to enhance security by allowing users to access remote jmx files
removed duplicate instances of BytesRef in Stemmer . java to streamline code and improve readability
updated widget application logic in AppsCustomizePagedView . java to use a dynamic calculation based on the number of widgets per page to improve
ggbapiw : fix 3d view not show in 3d mode
updated rotation calculation in GcodeRenderer . java to ensure that the rotation does not exceed 180 degrees to improve rendering accuracy by preventing negative rotation values
added a new option ` WORKSPACE ` to the ` OptionEnum ` class and updated the ` TerminalClient ` to utilize this option to
updated the file path from " options . apt " to " options . html " in CLIManagerTest . java to correct the file type for
updated ScimUtilsTest to use JUnit 5 annotations and added pollution prevention extension to improve test clarity and ensure proper exception handling during tests
refactor ` confimAccess ` method to use a ` Map < String , Object > ` instead of ` ModelAndViewAndView ` to simplify the
refactor session handling in HibernateIT to use assertTrueEventually to improve test reliability by ensuring stats are cleared after each test execution
refactor EventBusHook class for improved event handling to enhance performance and maintainability of event handling functionality
refactor MultiPaintEventTest class for improved readability to enhance maintainability and facilitate future updates
removed the ' final ' modifier from the mNewScale variable declaration to simplify the code and improve readability
refactor SyncFactory class to improve code organization to enhance maintainability and readability of the code
added handling for unique key fields in LukeRequestHandler to ensure unique key fields are correctly associated with the schema
added round border color handling in BorderEditor and updated EditableResources to use it to improve document formatting and ensure consistent color usage across the application
add miss @ truffleboundary annotation to throw compilerexception . neverpartofcompilation
[ hotfix ] [ test ] fix typo in defaultschedulerbatchschedulingtest
added logging for pending requests in RSocket , GatewaySocketAcceptor , and PingPongApp classes , and modified sleep logic in PingP
add menu item to show toast message for under construction
updated InfoDropTarget and UninstallDropTarget classes to extend UninstallDropTarget instead of ButtonDropTarget and implemented uninstall affordance methods to improve
replaced instances of ` add ( ) ` and ` removeTail ( ) ` with ` push ( ) ` and ` peek ( ) ` in multiple
updated URLs in CommonsApplication . java to use " commons . wikimedia . org " instead of " test . wikipedia . org " to
refactor index handling by extracting logic into separate setIndex and updateIndex methods to improve code readability and maintainability by reducing duplication
replaced usage of ` Collections . sort ( ) ` with ` Collections . sort ( ) ` in multiple configuration classes to simplify code and improve readability
added support for custom date patterns in FormatData _ hr _ HR . java to enhance date formatting capabilities for better user experience
added a call to ` clickedView . clearFocus ( ) ` in ` DetailFragment . java ` to clear focus on the clicked view to
updated selection logic in DescriptionsAdapter and adjusted language value handling in SpinnerLanguagesAdapter to improve user experience by ensuring correct language selection based on user
updated time zone names for " West Samoa " and " WSDT " from " WSST " to " WSDT " across multiple language files to
added native methods for registering global , weak , and accessing fields in FastGetField . java to enhance the functionality of FastGetField by
added null handling for UNION and NULL types in ReflectData . java and updated corresponding test cases in TestReflect . java to ensure correct behavior when
increase timeout from 300ms to 1000ms in sedablockwhenfulltest
added a null check before remapping the R class in ResourceMerger . java to avoid potential NullPointerExceptions when remapping the R class
added a constructor to HapiFhirDialect , HapiFhirH2 , HapiFhirMariaDBDialect , and Hapi
camel - 14105 : added close request header to http producer to ensure that http connection be close when send .
increased socket timeout from 60000ms to 120000ms in BasicDistributedZkTest . java to allow more time for distributed operations to complete
added an assertion to verify the count of tickets in the database to ensure that the count functionality works correctly for free ticket status
refactor Parser class to improve code structure to enhance maintainability and readability of the code
refactor CasProcessingFilter class to improve code organization to enhance maintainability and readability of the code
update thymeleaf - parsers to use document . getfirstelementchild ( ) . getfirstelementchild ( ) . getfirstelement
[ planner - 2078 ] fix bug in remove working object in look up manager
[ java ] wait for cluster node to shut down if it fail to start .
change log level from warn to info for the cleaning of cached beans to provide clearer context when no such field is present
set mContentType to " application / octet - stream " in WebdavEntry . java to ensure proper content type handling for webdav entries
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created unit tests for it to enhance functionality and ensure
fix distanceop for line that do n ' t fit within the specified distance range .
rename ' required ' field to ' requiredlabel ' to be more descriptive
removed the ` next ` method from ` PurgingPartitionIterator ` and added updateProgress ( ) in the ` next ( ) ` method to streamline
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use this
added abstract method ` getHeight ( ) ` and ` getWidth ( ) ` to ` BaseMonochromeBitmapSource ` to provide access to both height and
added validation to ensure polygons have at least 3 points and set localVertices accordingly to prevent illegal argument exceptions when processing vertices
replaced ` ObjectMapper ` instantiation with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to improve serialization efficiency and maintainability by utilizing
do n ' t create squarefree array if the polynomial do n ' t exist
updated ExternalNameRecord to handle Unicode handling for name fields and added a test for bug 47384 to ensure correct reading of Unicode names and improve error
updated description of the JMS destination type in AbstractJMSProcessor . java to correct the spelling of ' QUEUE ' to ' QUEUE
added functionality to return login prompts based on configuration in LoginInfoEndpoint to enhance security by allowing users to exclude specific prompts during authentication
updated listener removal logic to use removeIf for better readability to ensure listeners are only removed when they are equal
added a case to toggle the spin action in PieChartActivity to enhance user experience by enabling smoother transitions during chart spins
[ citrix ] add killcopyprocess ( ) method to killcopyprocess ( )
hbase - 25836 avoid normalizing a table if the namespace have quota ( addendum )
removed unnecessary import statements and added a resize method in AndroidInput . java to streamline code and enhance functionality for resizing arrays
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and updated the instantiation of ` JavaBeanDescriptor ` and ` Java
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to mark the test as ignored due to its failure status
fix the hopperhock be able to place item in the wrong position . close # 1077
added authentication dialog with username and password fields in SsoWebViewClient . java to enhance user experience by providing prompts for authentication requirements
refactor TestStressIndexing2 to improve document deletion and query handling to enhance code readability and maintainability by centralizing document deletion logic
[ flink - 22559 ] ignore upsertkafkatableitcase due to flink - 22559
replaced direct access to ` pg . types ` with ` computeIfAbsent ` for better performance and clarity to improve code readability and maintainability
added support for SINGLE _ VALUE _ AS _ ARRAY in DefaultEntityMapper to ensure proper handling of single - value arrays during deserialization
updated localization update message to include UK and SL to enhance localization support in the application
[ ci ] make shortcut category string configurable via resourceutils . getstring ( )
fix ( core ) : add support for instanceof expression in feel parser
nifi - 145 : add ` ` mime . type ' ' attribute to the ` ` gethttp ' ' response
fix conditional deletion and update conditional delete and conditional update on the same resource
replaced exit button with done button and added a searchable option in SearchBookContentsActivity to enhance user experience by providing feedback when a book is not
[ hotfix ] [ nats ] fix typo in natsconfiguration
refactor the ` invalidateStalePartition ` method to accept a list of ` PartitionNameWithVersion ` objects instead of a lambda expression to improve code
improve performance of viewresultsfullvisualizer by use buffer instead of boundedfifobuffer
updated icon resource references from ` ic _ group ` to ` ic _ chat _ bubble ` in UsersAndGroupsSearchProvider and UserListAdapter to
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest . java ` to ensure accurate retrieval of
updated test method names in MocksCreationTest . java for consistency to improve readability and maintainability of test code
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator
updated awaiter timeout from 10 seconds to 30 seconds in phaser awaiters and added a sleep delay in the awaiter method to allow for longer
removed the BuildSlaveFinishedStatusEvent class and updated related event publishing logic to streamline the event publishing process and eliminate unused code
vmware : fix utf - 8 encode issue when generate template uuid
[ flink - 24105 ] [ core ] add test for deposit workspaceitem without a workflow
change ` stream ( ) ` from ` stream ( ) ` to ` stream ( ) . distinct ( ) ` in ` ClassLoaderSupportImpl . java
removed the static method ` isBoxedPrimitive ` from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to use contains method for " - encoding " and " - string " flags to improve code readability
added logic to check if the table is not an external table before deleting the part path to ensure that the directory is only deleted when the table is
updated asynchronous thread configuration settings and improved exception messaging in HiveServer2 to enhance flexibility and provide clearer error messages when asynchronous threads are busy
added try - catch block around dismissDialog method call to handle potential exceptions when dismissing the dialog
updated UpgradeResourceProvider to use a constant for the execution command role and modified RequestResourceFilter initialization to improve code readability and maintainability by
added a new variable ` diff ` in ` OperationSetTelephonyConferencingSipImpl . java ` to store the current conference
add a method to clear log entries in the flutter log tree ( # 139 )
updated the return statement to include a check for socket shutdown in ChannelEndPoint . java to ensure proper handling of output and input shutdown scenarios
refactor SetNullableGenerator class to improve code readability to enhance maintainability and facilitate future updates
camel - 18199 : camel - example - add servlet transport to camel - reportincident to generate camel - example - reportincident
replaced specific content type checks with wildcard imports and refactored form processing in NettyRoutingFilter . java and FormIntegrationTests . java to
added ` @ ApiOperation ( nickname = " hello " ) ` annotation and implemented the ` hello ` method across multiple service classes to enhance API functionality
updated lifecycle listener handling in Lwjgl3Application and Lwjgl3Window to improve resource management and ensure proper cleanup of lifecycle listeners
updated the FG _ FK color from ( 0 , 90 , 0 ) to ( 0 , 0 , 0 ) in UIUtil . java
wnd : disable mp3 audio format by default
make secondaryindexmanagertest . assertmarkedasbuilt ( ) method static to avoid call systemkeyspace . getbuiltindexes ( )
pmd : add version information for eclipse and pmd plugin
[ hotfix ] [ test ] fix customserializationitcase to check if exception be present
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future updates
added a method ` isCellEditable ` that always returns false to provide a default implementation for cell editing functionality
added a method to check if unused dependencies should be printed based on configuration to improve flexibility in displaying unused dependencies warnings based on user preference
[ fix ] set vscales to 0 . 85 instead of 2 . 0 for vscales .
updated import statements for BaseScalarUdfTest in multiple test files to ensure compatibility with the latest test utility functions
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper object comparison and hashing functionality for better object comparison
update testskeletoncontrolrefresh to use animcompose instead of skeletoncontrol
rename ` NodeFilter ` to ` NodeCountFilter ` in multiple files to improve clarity and consistency in naming conventions
updated the condition from " size < = SYNC _ FETCH _ BATCH _ NUM " to " size < = SYNC _ FETCH
updated DebugExpressionParser to set the state to 366 and removed unnecessary string formatting to ensure correct type handling and improve code clarity
updated the condition in ExcludeDependency . java to check for classpath inclusion instead of empty dependencies to improve efficiency by avoiding unnecessary checks for empty dependencies
replaced ` tmp ( ) ` with ` dst2 ( ) ` and added ` dst2 ( ) ` method in ` Vector . java ` to
initialize the ` args ` array with an empty value of ` { } ` to ensure ` args ` has a default value of ` { } `
updated the ` getLinkerArgs ` method to return an ` ImmutableList < String > ` instead of a ` List < String > ` for link
simonstewart : make the test work for the travis and appveyor environment
added Hive query name handling and improved logging in TaskExecutorService and GenericUDTFGetSplits classes to enhance clarity of LLAP split generation
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
refactor escapeprocessingoutputstream and GradleDaemonExecutor to use an atomic AtomicBoolean for closed streams to improve thread safety and reduce unnecessary exception handling during
updated the ` validateQuery ` method to include additional arguments for improved error handling to enhance error reporting by providing more context in error messages
updated INDEX _ VERSION from 1 to 2 and refactored getTree method implementation in LuceneExecutor . java to improve indexing accuracy and streamline
[ hotfix ] [ kryo ] add test for kryo registration of default kryo class
added null check before removing configuration properties in BlueprintConfigurationProcessor . java and updated test cases in BlueprintConfigurationProcessorTest . java to ensure that
refactor boolean value handling in MetaStoreDirectSql . java to utilize BooleanUtils for better type safety to improve code clarity and maintainability by
added hideCustomizationDrawer ( ) method call in mmm Launcher . java and ppp Launcher . java to improve user experience by hiding the customization
refactor TermVectorComponent to use a constant for TV _ KEY _ WARNINGS and simplify the handling of warnings to improve code readability and maintain
added optimistic type logging to enable or disable optimistic types based on the environment settings to improve logging clarity and ensure consistent logging behavior based on optimistic types
refactor Expect class to improve code structure to enhance maintainability and readability of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and integrated it into DockerClientFactory to enable unix socket access for Docker operations
added JUnit 5 test annotations for flaky tests in CloseableDoSFilterTest and CloseableDoSFilterTest to ensure proper handling of 
add a new exception class reactivestreamsnoactivesubscriptionsexception that show the stream name when there be no active subscription .
refactor vectorization logic to utilize TezWork instead of MapRedTask for validation to improve flexibility and maintainability of the vectorization process
updated constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to ensure proper initialization of appenders with specific layout settings
bug 60464 - npe in jmetertreemodel . getcurrentnode ( ) cause npe .
[ gr - 30813 ] support for encode long linkage in sulong .
refactor multiple classes including XShareAuto , LoadClassNegative , LoadClassNegative , and ReadFromNoaccessArea to improve code organization and maintain
no effective change - add unit test for defaulttransactionthreadlocal
added a check for invalid operation handles and logging messages in HiveStatement . java to improve error handling and provide clearer logging for invalid operations
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
aws - secrets - manager - add unit test base on user forum issue
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
updated the return statement in UserREST . java to remove the exception message to simplify error response handling for email sending failures
added a ` subTree ` parameter to the ` fromContent ` methods in ` Result ` and modified the constructor to accept a ` subTree `
add column width calculation and unit test for hssfsheet . getcolumnwidth ( short )
added a configPath parameter to the commands method call in Builtins . java to ensure the correct configuration path is used for command execution
replaced ` Set ` with ` Collection ` in ` DotWriter . java ` and ` GraphExecutable . java ` , and changed ` HashSet ` to
updated the SSH container image in TestcontainersConfiguration . java from a specific sha256 image to a new version 1.0 . 0 to ensure compatibility with
server : remove assertion that do n ' t work due to null hostid
refactored the key generation logic in DefaultGroupKeyGenerator to use BlockSingleValIterator instead of SingleValueIterators to improve clarity and functionality
updated testSeekNegative test method to testSeekingExceptions and modified seek logic to handle EOF exceptions to improve test clarity and ensure correct seek behavior
do n ' t use ingredientstack . of ( ) for the plug gate recipe .
change method name from ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity and consistency in
updated visibility handling in CellLayout and refactored drag exit methods in DragController to improve drag - and - drop functionality and enhance code readability
updated the ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` and added a test for handling empty request bodies
added a check for package accessibility in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure only public and package - accessible types are processed
replaced warn log statements with trace log statements in LoggingHandler . java to improve logging granularity and reduce log verbosity
updated ` WhiteBlackList ` to correctly handle prefixes with wildcards and added a new test class ` Issue348 ` to improve the handling of
added menu options for the gallery in the GalleryActivity to enhance user experience by allowing users to choose their own images
refactor MongoDBServiceFactory to initialize instances of MongoDBService if it is null to improve efficiency by ensuring a singleton service is created only when necessary
added methods to prevent code formatting preserving final boolean values in InlineConstantMutatorTest . java to ensure that boolean literals are replaced correctly in the code
updated the ` decode ` method in ` RecordTest . java ` to include a ` Blackhole ` parameter in the ` decode ` method to enhance
fix : update gapic - generator - java with mock service generation fix ( # 431 )
[ k8s ] fix devicethinghandler to handle dpt with group address notation
removed the ` clear ( ) ` method call from ` dbManager . getWitnesses ( ) . clear ( ) ` to ensure that witnesses are
log sqlexception in jdbcpagesink at debug instead of throw prestoexception
replaced the handling of the " stack " property with methods to retrieve and set stack properties in NativeError . java to improve clarity and maintainability of
removed a condition that checks if the path name starts with " . " to simplify the code by eliminating unnecessary checks
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before proceeding
updated the BOLDWEIGHT _ NORMAL constant value from 190 to 0x190 to improve font styling for better visual consistency
changed ` fThreadGroup ` to be ` volatile ` and made ` fLookForStuckThread ` final in ` Timeout ` and ` Timeout
reformatted the ` getValue ` and ` setValue ` methods in ` ValueResultData ` for consistency to improve code readability and maintainability
updated hash code calculation in FuzzyQuery . java to use superclass ' s hashCode ( ) and equals ( ) methods to ensure proper comparison and hash
removed unnecessary println statements from PushedResourcesTest . java to clean up the code and improve readability
changed return types of ` removeFile ` and ` removeDirectory ` methods from ` List < SharedRandomAccessFile > ` to ` void ` to simplify method
updated the product version from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to reflect
updated the ` retrievePersonAttributes ` method to use ` buildResolvedPrincipal ` instead of ` context . getPrincipalFactory ( ) . createPrincipal `
changed log level from info to warn for connection issues in OpenWebNetBridgeHandler . java to improve log granularity for debugging purposes
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple hashing classes to improve clarity and consistency in method
added a constructor to ThumbnailsCacheManager and updated bitmap validation in FileUploader to ensure that bitmap is not null and image reference is not null
updated the loop condition in GroupSelectionQuery to check if the number of attempts exceeds the limit of 5 to ensure that the loop does not exceed the
added a new file ` Bug1933922 . java ` implementing a compilation map to demonstrate and test recursive compilation scenarios in a multithread
simplified conditional statements by removing unnecessary parentheses in multiple classes to improve code readability and maintainability
updated the character check from ` c < 33 ` to ` c < 32 ` in ` FileResolver . java ` to ensure that only valid characters
added a call to requestFocus ( ) in the Display class to ensure the component receives focus during user interactions
add test case for instructor home page ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in class naming
replaced Crouton . cancelAllCroutons ( ) with message display in DetailFragment . java and updated MainActivity . java to
added a test method for schema query and fetching with related templates in IoTDBSchemaTemplateIT . java to ensure that schema queries and fetch
refactor Dialog class to improve code structure to enhance maintainability and readability of the code
replaced the direct execution of command with a ProcessBuilder instance using the JAVA _ TOOL _ OPTIONS environment variable to simplify the process execution process by
[ java ] use 127.0 . 0.1 a default host for metrics in hintedhandofftest .
refactor controller and base subsystem assignment to use a loop for better readability and maintainability to improve code clarity and ensure consistent subsystem path retrieval
added assumptions to check if the Apple platform is available in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests only run on macOS devices
refactor jvmciversioncheck to use a new method for property validation .
updated Mockito library version in the project to ensure compatibility with newer versions of Mockito
refactor TestLargePageUseForAuxMemory to improve code readability to enhance maintainability and facilitate future updates
updated the method to retrieve the charset from the source in BinaryParser and PlainTextParser , and added charset handling in ParsingExecutionContextView to improve charset
added a new enum ` MultiPartFormDataCompliance ` and updated ` HttpConfiguration ` to use it to improve flexibility in managing multipart form data compliance
updated GradleDistributionManager . java to use JDK 17 to ensure compatibility with JDK 17 and above
refactor type addition logic in SnapshotControl by introducing addType method to improve code readability and maintainability by encapsulating type addition logic
refactor Term class to improve code structure to enhance maintainability and readability of the code
updated return statement to handle null or empty values for runWith to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4892 - add xasession . issamerm
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
pdfbox - 4071 : fix bug in localblockbinarizer and make testblackboxcounting more robust
updated the tinting behavior of mSnapshotView and mDigitalWellBeingToast to utilize mTintAmount instead of
added a new file ` SumZeroAggr . java ` that implements the ` DrillAggFunc ` interface to facilitate aggregation of zero values in
changed " id INTEGER UNSIGNED _ LONG NOT NULL " to " id INTEGER UNSIGNED _ LONG " in FirstValueFunctionIT and NthValue
hbase - 26175 bucketallocatorexception . getallocationfailwarningmessage should log table name when fail to allocate ( sergey she
added a null check for the property name before adding it to the roleObject to avoid potential NullPointerExceptions when propertyName is null
refactor ` StatusBarTouchController ` and related classes to use ` @ VisibleForTesting ` for better encapsulation to improve code clarity and
added ` logContainerStream ` method to ` DockerClient ` and modified the ` logContainer ` method to include a ` stream ` parameter to allow
add per - thread performance test for mvstore cache
changed the data type of LONG from " L " to " J " in PrimitiveType . java to ensure consistency with Java naming conventions
changed the method ` delegatingApplicationListener ` from instance to static in ` WebSecurityConfiguration . java ` to allow the method to be called
camel - 14265 : camel - rest - fix a problem where the message body could be null .
added FileDeletingTasklet and TaskletJobFunctionalTests classes to handle file deletion and job functional tests to enhance tasklet functionality and ensure
update size keep drawables in euclidianview for plane composition
refactor indexing in BitUtil , Int2IntCounterMap , Int2IntHashMap , and Int2IntHashMap classes to improve code clarity
updated method signatures to use ` STATE _ FIELD ` instead of ` SWITCHED _ TO _ STATE _ MESSAGE ` across multiple files to improve
added user agent checks for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnails based on the renderer
fix bug in errorcheckerservice . selectpdecode ( ) when there be no pde line .
updated SideMenuBar . java to conditionally add the open button based on the theme settings to ensure proper layout alignment based on the user ' s theme
added preload attribute for Skia in the Skia . java file and updated value initialization to enhance compatibility with SkiA libraries and ensure proper preloading
added support for the " com . google . bitcoin . unittest " bitcoin module in the NetworkParameters class to enable testing of the unittest network in the
added validation to ensure format arguments are not empty in the QueryCommand to prevent runtime exceptions when no format arguments are provided
[ java ] remove unnecessary capacity field and fix position validation in intiterator .
updated ` walkRuleAndAdd ` method to include ` BuildRule ` as a parameter and modified dependency traversal logic to include ` srcTarget ` to
add support for override module name in modulefilemanager . fixlocation ( )
[ java ] remove unnecessary protocolversion check in election . checkcandidatetermid ( )
updated OwnCloudClientManagerFactory policy based on SAML authentication status to ensure proper client management based on SAML authentication status
added validation for missing ` mappedTableResource ( table ) ` in ReadBatch and WriteBatch classes to ensure that ` mappedTableResource ( table )
use utils . close instead of try - catch
refactor AnonymousAuthenticationFilter to utilize a deferred context for authentication to improve clarity and maintainability of the authentication process
modified the ` removeActor ` method to include an ` unfocus ` parameter in multiple classes to enhance the functionality of the ` removeActor ` method
replaced direct string concatenation with a valid string variable for cloudConfig to improve code readability and maintainability by reducing redundancy
added logging functionality to the Netty HTTP server based on server configuration to enhance server performance by allowing log levels to be configurable
refactor DatumAliases , AbstractParser , Formatter , and Parser classes to improve code organization and maintainability
replaced direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ) in CodeDependenciesPanel . java to improve responsiveness by
camel - 16265 : camel - jbang - use the script cache to make it easy to configure the groovy language .
maven - plugin : remove dependency management code from plugin manager .
[ hotfix ] [ python ] make clifrontendparser and clifrontendparser public
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and updated its implementation to improve clarity and functionality of the ` TestSharedPreferences
added functionality to retrieve and display the certificate chain from the storage key in HttpsMessenger . java to enhance security by ensuring the correct certificate chain is
[ java ] catch exception when convert text to response in httpcommandexecutor .
change visibility of the updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the updateImage
add support for drop xp block entity ( # 49883 )
added native methods ` hasSpatialLocationCalculatorConfig ( ) ` , ` tryGetSpatialLocationCalculatorConfig ( ) ` , and ` frontSpatialLocation
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
replace the method ` keySet ( ) . isEmpty ( ) ` with a new ` isEmpty ( _ root ) ` method in ` TreeTrie ` to
updated foreground and background method calls in AttributedStringBuilder . java to use specified graphics parameters instead of hardcoded values to improve code readability and
updated PeerSync to conditionally set the doFingerprint based on the " solr . disableFingerprint " system property to ensure that the doFingerprint is only
changed the access modifier of the ` moveFunds ` method from private to public to allow access to the method from other classes
datamongo - 132 - add support for idpropertyofuuid listener to mongotemplate
fix flaky test collectionitem . writedata ( ) , collectionitem . readdata ( ) , collectioncontainer . writeobject ( ) ,
close rawinput stream in tikacli to prevent memory leak
updated the JSON structure in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve clarity and consistency in
removed unnecessary whitespace in the loadConfig method call to improve code readability and maintain consistency
[ fix ] [ test ] fix checkstyle violation in instructorfeedbackcopyactiontest
[ hotfix ] [ runtime ] fix checkstyle violation in externalworkerservice
[ homematic ] remove BigDecimal step from display text in hmdatapoint and displaytextvirtualdatapoint
updated logging messages to reflect the acquisition and release of shared locks for Alice in PostgreSQLReadWriteAdvisoryLocksTest . java to
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline job scheduling process by eliminating redundancy
simonstewart : fix the lameness of the testgettextcontent test
refactor Logger class to use a ThreadLocal for logger management to improve thread safety and flexibility in managing logger instances
updated method visibility and imports in FunctionInitializer and FunctionInitializerTest classes to improve testability and maintainability of the code
added a check for primitive types and updated subtype checks in type handling to improve type safety and simplify subtype checks for primitive types
updated orientation handling in RecentsView and modified DigitalWellBeingToast initialization in TaskView to improve user experience by ensuring proper orientation management
hbase - 26105 use getregions ( ) instead of getliveregionserverthreads ( ) in testflushfromclient # testflush
added functionality to delete the original repository if it has contract details and ensure all storage keys are saved for the new contract address to improve transaction management and
updated balance calculation in TokenIssueProcessor to use dynamic properties for asset issue fees to ensure accurate balance adjustment based on dynamic properties
replaced ` apMap ` and ` texCache ` with ` needClearCache ` for better management of texture caches to improve cache management and ensure
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code readability and
added support for unselected styles in Component and Label classes , and updated string width calculations in DefaultLookAndFeel and DefaultLookAndFeel classes to improve text display accuracy
updated multiple classes to initialize arrays with an initial capacity of 0 to optimize memory usage and improve performance
removed the unused ` flags ` parameter from several methods in ` ShadowApplicationPackageManager ` to simplify method signatures and improve code readability
updated PingRequestHandler . java to improve request handling logic to enhance performance and maintainability of the ping request process
add support for mp4 asset with increasing timestamps
[ tradfri ] remove isoldfirmware ( ) method from tradfrigatewayhandler
refactor AjaxElementLocator class to improve code organization to enhance maintainability and readability of the code
updated display checks in BoxLayout and DefaultLayout to include " table - cell " in addition to " inline " to ensure proper handling of table - cell
refactor JsonDecoder to handle JsonToken . START _ ARRAY and JsonToken . END _ ARRAY correctly to improve readability and maintainability of JSON
update blockcache . releaselocation method to include removalcause parameter
[ hotfix ] [ test ] ignore savepointtestbase for now
added @ Test annotations to DroolsMvelParserTest . java to enhance test coverage for DroolsMvelParser functionality
changed variable declarations from non - final to final in ContextRegisterListener . java to ensure immutability of several fields in the class
refactor ObjectHashSet constructor to accept cacheIterator as a parameter and initialize iterator lazily to improve flexibility in iterator management and streamline iterator initialization
added batchBytes initialization and checks in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure batchSize does not
changed Context . MODE _ WORLD _ READABLE to Context . MODE _ PRIVATE in AppSettings . java and UpdateUtils . java to
modified JdbcProxyGenerator to handle multiple calls to ` close ( ) ` and ` abort ( ) ` scenarios to improve error handling and logging for
updated the state variable used in the animation to use mState instead of getState ( ) to improve clarity and maintainability of the animation handling based on
[ iotdb - 4892 ] change the log level of protobuflogreader from warn to debug .
updated substring assignment in UaaTokenServices and added unit tests for persistRevocableToken functionality to ensure scope length does not exceed 1000 characters and
updated import statements and modified the class name from TestAvailableJDBCDrivers to AvailableJDBCDriversTest to improve clarity and
add kie - api : add kiecommand interface for execute command
remove jdbctableservice since it be n ' t use anymore
added padding getter methods to CellLayout . java and modified bitmap creation in Launcher . java to improve padding handling for better visual representation in the UI
added a null check for the string before collecting the candidate list in LineReaderImpl . java to avoid potential NullPointerExceptions when the string is empty
refactor SamlMetadataUIParserAction to use Action type instead of SamlMetadataUIParserAction across multiple files to improve code clarity and maintain
added a method to check if LDAP processes use specific ports in LdapMockMvcTests to enhance test reliability by ensuring only valid LDAP ports are checked
log4j2 - 1313 fixed - log4j2 - log4j2 - log4j2 - log4j2 -
updated URL filtering logic in Fetcher and HTMLMetaProcessor to improve redirect handling and logging clarity to enhance debugging capabilities and provide clearer insights into
updated the query parameter in TestSpellCheckResponse from " * : * " to " name : samsang " and changed the spellcheck
updated console initialization logic to use a constructor based on the type of the Console constructor to ensure compatibility with the Karaf Console API if available
blender : make getverticescolors method private and set initial array size for mloopcol
added FileFilter and RegexFileFilter to exclude timestamped reports directories in HTMLReportGenerator and updated test cases accordingly to enhance file copying functionality and ensure timestamped
( chore ) camel - core - validation : migrate test to parameterizedtest
pdfbox - 4071 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to ensure that a TemplateProcessingException is thrown when the expression bind fails
removed debug print statement from JoglInput . java to clean up the code and improve readability
added support for allowing extracting private fields in the FieldSupport class and updated related test cases to enhance field handling capabilities and improve test coverage for field
replace the " { name } " placeholder with the device name in WebDataHandler . java to ensure the correct device name is used for processing
refactor constructor retrieval in Platform . java to use MethodHandles . lookup if available to improve flexibility in creating instances for Java 8 types
renamed the method ` weights ` to ` weightsByDouble ` and introduced a new method ` weightsByDouble ` in ` ZParams ` to improve
added the ` Database ` parameter to multiple ` writeCustomHTML ` methods across multiple writer classes to support database - specific output handling for custom HTML generation
removed unnecessary type casting and updated key deserialization logic in BTreeMap . java to improve code clarity and ensure proper handling of null values
replaced Exception handling with BalanceInsufficientException in CancelDeferredTransactionActuator , UpdateDeferredTransactionContractActuator , and TransactionTrace to
do n ' t write zero file if profiler . heap . zerofile be enable
replaced direct logging statements with messages sent to the UI thread to improve code readability and maintainability by reducing redundancy
updated the byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and removed a generic record in HortonworksEncodedSchemaReference
batch - 826 : add itemprocesslistener and itemwritelistener to batch - core in preparation for spring - batch - 8
refactor code for improved readability and maintainability in AbstractProviderModule . java to enhance code clarity and ensure proper handling of property values
removed unnecessary calls to ` doc . get ( " title " ) ` in ` SearchFiles ` , ` SortedSetDocValuesFacetCounts ` ,
rename Test7005594 . java file to improve clarity and maintain consistency in naming conventions
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code readability to enhance maintainability and facilitate future updates
server : do n ' t try to get ip4address if vm be n ' t find
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and updated related logic to utilize ` MCOption
updated the ` iteratesOver ` method to accept an ` Iterable < T > ` instead of an ` Object ` and modified related error messages to
camel - 14545 : camel - http - only decode header with value of length 2
added unit tests for SQL query execution in ActivityHistorySQLServerStoredProcedureTest . java to ensure correctness of native queries in the database
added a new ` LargeValueFormatter ` class and updated ` BarChartActivityMultiDataset ` , ` BarLineChartBase ` , and ` Bar
replace hardcoded character ' z ' with a constant INNOCUOS _ CHAR to improve code readability and maintainability by centralizing character
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to suppress warnings related to incompatible argument types
updated printLir call formatting in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency in formatting
refactor NullAssertionValidator to use a new Auto - generated stub to improve code readability and maintainability
added a check for RuleKeyAppendable and appended it to the rule key if it is an instance of RuleKeyAppendable to ensure proper
added system profile directory creation and refactored test setup and teardown methods in various test classes to ensure the system profile directory exists before running tests and
refactored the creation of thread factory methods in TestcontainersDockerCmdExecFactory to improve code readability and maintainability by reducing redundancy
refactored message counting logic in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code readability and maintainability
added " accept " attribute to " image / * " element in ImageFileInputDialog . java to enhance user experience by allowing file input to be
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient instead of NodeBuilder to simplify client initialization and improve code clarity
added detailed logging for witnesses and witnesses class in ForkController . java to improve debugging and traceability of witnesses in the ForkController
added a new test class ` NullPointerAndEmptyArrayTest ` to verify the behavior of ` NullPointerAndEmptyArray ` with null and empty arrays to
added a method to find generated source paths using dependencies in BaseIjModuleRule and deleted the Test class in IjProjectBuckConfig to
added a method to construct a simple wildcard pattern with an optional character delimiter to enhance flexibility in wildcard processing by allowing replacement of special characters
added validation for multiple TableScanOperator aliases in the Vectorizer class to ensure that the map works correctly with multiple aliases to prevent runtime errors
updated import statements in WeatherQueryTest . java to replace MockitoJUnitRunner with MockitoJUnitRunner to improve code readability and maintainability by
added error handling to set firmware settings in TinyGFirmwareSettings . java to improve robustness by catching FirmwareSettingsException
refactor ` getLangs ` method to return a ` Set < String > ` instead of a ` String [ ] ` for handling multiple languages
updated import statements and modified assertions in LazyTraceScheduledThreadPoolExecutorTests . java to enhance code readability and maintain consistency in assertions
hbase - 25829 fix snapshot creation not take a snapshot if the table lock be not present ( # 2587 )
[ j2kt ] add support for ` ` null ' ' in catch block .
added a test for modifying the HTTP RPC endpoint in DockerQuickstartTest . java to ensure the test correctly verifies the HTTP RPC endpoint modifications
added a volatile boolean flag ` isSuspended ` and modified thread state handling in ` mmm Thread . java ` and ` Test _ Thread . java
updated JavadocVisitor to include Hidden , Since , and SerialData classes instead of Author , Since , and ReloadableJava8 classes to
( chore ) camel - jbang - spring spring test base on user forum issue
removed multiple redundant ` @ Override ` annotations from multiple security - related classes to improve code clarity and maintainability by eliminating unnecessary overrides
added module import support in Java2TypeScriptAdapter and updated eval method in EnumTests to enhance module handling and improve test coverage for static enums
fix for http : / / www . w3 . org / 2001 / XMLSchema in xssfexporttoxml
added logic to set content description based on badge status in BubbleTextView to improve user experience by providing accurate notification descriptions for badged apps
added MouseWheelListener to handle mouse wheel movement events in TestMouseWheelScroll . java to improve responsiveness of mouse wheel interactions in the
pdfbox - 4071 : close the expected and actual pdf file , a suggest by valerybokov
updated currency pair constants from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests .
[ java ] change vacuumenvironment . location to string in vacuumcontroller and vacuumview .
removed conditional currency assignment for DSH , QTUM , and QTUM in BitfinexAdapters . java to simplify currency handling logic
updated JsonFormat . java to utilize ImmutableSet and TreeMap for handling optional fields in BalanceContract . AccountBalanceResponse and BalanceTrace to improve
remove unnecessary code for jacksonxmlformatmapper . tostring ( ) .
updated variable names and logic in VirtualThread . java for consistency and clarity to enhance code readability and maintainability by using more descriptive variable
refactor DirectoryTaxonomyWriter to remove unnecessary constructor parameters and improve code clarity to enhance code readability and maintainability by reducing redundancy
refactor VetoableChangeSupport class to improve code structure to enhance maintainability and readability of the code
adjusted the calculation of the vertical position of the owner ' s height by subtracting 1 to ensure proper positioning of the owner in the height calculation
pdfbox - 4892 : remove redundant exception declaration , a suggest by valerybokov
added unit tests for ` getShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper exception handling
update inputbarhelppanel to use menuitem . showmenubar ( ) instead of iterator ( ) .
rename LambdaBeanPropertyMemberAccessor and MemberAccessorFactory files to improve clarity and consistency in naming conventions
updated thread sleep logic in BackendInitializerHelper and added new test cases in TerminalClient and GcodeParserUtilsTest to improve handling of controller states and
updated version comparison logic in SwingStartup . java to handle exception and release status more effectively to improve clarity and functionality of version handling in the application
add ` ` include generated file comment ' ' option to db migration
updated argument types from " < player > " to " < player | * > " across multiple classes to allow for wildcard matching in player names in
deleted the files BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java to remove unused thread filters to streamline the codebase
[ hotfix ] [ runtime ] fix typo in optionprocessor
added a conditional check for parallel classes in TestNGContentHandler . java to ensure compatibility with parallel XML suites
( chore ) camel - core - http : / / issues . apache . org / jira / browse / camel - jbang -
refactor ( ctmethodimpl ) : remove static import of enums in ctmethodimpl . java ( # 1077 )
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across different versions
updated DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to accept a separator parameter and modified the shaBase64 method to use it to enhance flexibility in digest
updated the method to check for null before parsing the SYSTEM _ ACTIONS _ ENABLED parameter to ensure robustness by preventing potential NullPointerExceptions
add a new class ` Person ` with a private field ` name ` in the ` org . apache . maven . it0074 ` package to
remove fbutilities . getlocalendpoint ( ) parameter from gossiper . start ( )
corrected the string comparison in AbstractClient . java to ensure consistent case - insensitive comparison for time strings
added assertions to verify the metadata properties for " timeColumn " , " timeUnit " , and " totalDocs " in SegmentMetadataImpl to ensure
updated color import and modified simPlotPanelDesc ' s foreground color to utilize OpenRock ' s Color utility for better compatibility with OpenRock '
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper handling of disconnect
fix : use annotationtypebysurferredtype instead of annotationnamebysurferredtype for the scope hierarchy .
simonstewart : add a test to verify that click on an element hide by double overflow .
added try - catch block around dismissDialog method call to handle potential exceptions when dismissing the dialog
added support for custom JNDI location in JtaTransactionManager to enable dynamic JNDI lookup based on system properties
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the ` Library ` class to simplify the code by eliminating unnecessary functionality
renamed ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using a more descriptive
fix timestamp conversion for bigquery ( # 11824 )
replaced ` IllegalArgumentException ` with ` requireNonNull ` in ` Identifiers ` and ` DatabaseConnector ` classes to improve code readability and maintainability by
rename parameter ' input ' to ' inputmap ' in valuesresolver . coercevalueforinputobjecttype .
added bounds checking for row and column in FlightConfigurablePanel to ensure that row and column values are within valid bounds to prevent potential errors
added a call to ` scrollSelectionVisible ( ) ` in ` ThrustCurveMotorSelectionPanel . java ` to ensure the selection is visible
[ java ] unnecessarylocalbeforereturn no longer ignore member
refactored the initialization of scriptEngine from ScriptEngineManager to a local variable to improve code readability and maintainability by reducing redundancy
removed unnecessary division by zero and updated correlation assertions in EuclideanDistanceSimilarity and EuclideanDistanceSimilarityTest to simplify calculations and improve
datatracker : do incrementally backup if sstables be not null
updated the ` relativize ` method to accept two ` Path ` objects and adjusted normalization logic to ensure consistent handling of paths by excluding extra
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper formatting of values when columnSize and decimalDigits are null
do n ' t delete 1 . log . tmp file in deadletterqueuewritertest
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure correct conversion of
rename ErrorHandlerController to Error403Controller and update its package structure to improve organization and clarity of error handling controllers
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in both UnixTerminal and WindowsTerminal
fix netbeans ' s miss fix for array . toarray ( ) in netbeans
fixed - concurrentmodificationexception in connectionpool . tryacquireconnection
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` and ` setLdapDateConverter ( ) ` in
pdfbox - 4071 : check if the destination name exist in the tree instead of the destination name
updated error handling in JavassistUtils to include classLoader information to improve debugging by providing more context in error messages
[ java ] increase timeouts in largestreamlettest to avoid deadlock .
updated page handling in HomeFragment to check for extra pages based on shared preferences to ensure proper navigation to the correct page based on user preferences
added error handling for image retrieval in AndroidImplementation . java to ensure robustness by handling potential exceptions during image processing
add miss @ suppresssubnodes annotation to baseparser
updated FDFParser instantiation to use try - with - resources for RandomAccessReadBuffer to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added a shell command to execute a key event in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to ensure proper
added functionality to generate a JSON file for the filename to URL in FileDumper . java to improve the handling of filenames to URLs for
profilerserver : make resetresultnotified flag private so it can be reuse by other thread .
refactor texturehelper . gettexturefromimage ( ) to loadimage ( ) and addloadedfeatures ( ) .
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests from " application : " to " application
updated the ISBN randomizer test credentials by changing the seed and locale from " 9781797745008 " to " 9781
updated notification sound setting to use a ringtone URI instead of a default URI to improve user experience by allowing dynamic ringtone settings for notification notifications
add method rootnode . reportloopcount ( int count ) that report the count to the call target .
added a conditional check to finalize the cluster version in FinalizeUpgradeAction . java and modified cluster entity merging in ClusterImpl . java to ensure the
duracom - 118 : fix ip address search ( rangeid = = 0 )
removed duplicate calls to streamManager . open ( stepExecution . getExecutionContext ( ) ) to streamManager . open ( stepExecution . getExecutionContext (
added a new file CountedLoopProblem . java that implements a random loop problem testing to verify the behavior of a random integer in a random number
updated method signatures in CompilerToVM and HotSpotInstalledCode to replace ` nmethod ` with ` arg1 ` and ` arg2 ` to
[ gr - 32258 ] fix handling of javathread : : _ pending _ failed _ speculation field of type long
refactor KafkaStreamsTracing class to use ValueTransformerWithKeySupplier instead of TransformerSupplier for peek and mark methods to improve clarity and consistency in
[ flink - 24124 ] [ feedback ] add received point to feedbackconstantsumquestiondetails
added a call to ` DynamicColors . applyToActivitiesIfAvailable ( this ) ` in ` BaseApplication . java ` to ensure dynamic colors are
added thread management and stack dumping functionality in CloseRace . java to improve error handling and debugging for child threads
updated the return value method in IntPointField to return the integer value instead of a hardcoded value to ensure proper handling of integer values and
fix arc size to be a multiple of width and height .
updated image dimensions and ratio from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to improve
rename ` ` minifysqlenabled ' ' to ` ` shrinkwhitespacesinsql ' '
removed the ` waitForStateTransitionToEnd ` method from ` AbstractLauncherUiTest ` and refactored related tests in ` WorkProfileTest `
added new configuration classes to DefaultMultifactorAuthenticationProviderResolverTests , DefaultTicketCatalogTests , and BaseTicketStringSerializationManagerTests to enable support for
replaced manual reading of long data with a byte array for better performance to improve performance and efficiency in reading single byte data
camel - 14263 : fixed the test error of camel - http in camel - http
refactor ClassPath creation to use a builder pattern for creating proxy class paths to improve clarity and maintainability of the proxy class path handling
added support for audio and voice scope in the automation module
added layer manager functionality to AnimComposer and updated AnimEvent and TestJaime to use it to improve animation layer management and ensure consistent
added a check to return early if the queue is empty in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to improve
added null checks for mapOp , mapWork , and originalThrowable in MapRecordProcessor , and modified exception handling in TezProcessor to improve error
refactor CylinderRegion to use Vector2D instead of Vector2D for center calculations to improve clarity and maintainability of the code by
refactor exception handling in TestBadUseCases to use ExpectedException rule instead of a try - catch block to improve code readability and maintain
modified the ` sendOneQuery ` method to handle ` NO _ PARAMETERS ` correctly and added a new test method in ` StatementTest `
do n ' t call customizeenvironment ( ) if it return false
added ` rctag = android%20app% 20edit ` to the ` @ GET ` endpoint in ` ReviewInterface . java ` to allow
refactor test cases in Test . java to improve code readability and maintainability
updated the key length parameter in PBEKeySpec from blkSize to keyLength to ensure the correct key length is used for encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
pdfbox - 4071 : add miss call to writesectiondefinition ( ) in rtfdocumentheader # writesectiondefinition ( )
added location distance calculation and accuracy checks in GpsLoggingService . java to improve accuracy handling and warn users about large jumps
removed detailed print statements from TableCellLayout , TableLayout2 , and TableLayout2 classes to clean up the code and improve readability by eliminating
doc : generate sample code in the java microgenerator ( # 144 )
replace boolean fields with WeakReference instances for root nameFn and sourceFilterFn , and sourceFilterFnHash in InsightFilter . java to improve memory
removed binary search for adding elements to ` data ` and ` added ` lists in ` AllAppsList . java ` to simplify code and improve
replaced ThemedPreferenceActivity with PreferenceActivity and removed the ThemedPreferenceActivity class to simplify the code structure and eliminate unnecessary theme management
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeGenerator . generateValueClass to clarify the purpose of
updated assertions in FST . java for consistency to improve code readability and maintainability
added an assertion to check if the security policy exists and is a file to ensure that the application correctly handles scenarios where the security policy is not
camel - 14263 : camel - olingo2 - allow to configure the olingo2 component - olingo2 component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for tests to complete before proceeding
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception information
add a method to upload image by http ( # 117 )
camel - 14284 : camel - netty should not use nettychannellocal in nettyproducer , so we do n ' t have to use it
updated URL pattern to allow hyphens in hosts and added unit tests for invalid host names to ensure correct parsing of host names and improve error handling for
remove system . setProperty ( org . apache . jasper . compiler . disablejsr199 ) in fragmentactivator . java
added support for null string values in CSV records in CSVRecordReader and its configuration to enable flexible handling of null string values in CSV output
added ` @ LibaseService ( skip = true ) ` annotation and import for ` LiquibaseService ` in multiple connection classes to skip service
fix variablenameutils . addimportedstaticfieldnames to work with javasourcesource
updated topic handling in ItemCommandTriggerHandler and ItemStateTriggerHandler to use " / " prefix instead of " smarthome / items / * "
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align exception handling with
added a deprecation warning for the " zkCredentialProvider " case in SolrXmlConfig . java and modified return statements in TestSolrXml . java
remove mana tablet from the mana table , make mana tablet more usable
set identifier collection for mCurrentCallEvent to ensure that the identifier collection is properly managed during processing
removed import of HyphenationCompoundWordTokenFilter from TestRandomChains . java to streamline dependencies and improve code clarity
updated the thread pool name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to improve clarity and consistency
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix checkstyle violation in typedefinitionregistry
added visibility to hide the shareWithMeIcon in LocalFileListAdapter to improve user interface by hiding the icon when sharing with a file
updated the bootstrap CSS links from HTTP to HTTPS in multiple filter classes to enhance security by using secure protocols
updated RouterFilter , RouterServerListFilter , RouterDistributorTest , RouterDistributorTest , RouterDistributorTest , and Router
enhanced assertion in TestIndexWriterMergePolicy to include additional context to improve debugging by providing more context in assertion messages
deprecate multilayerperceptron , multilayerperceptron , and trainmultilayerperceptron in favor of the new multilayer
add support for multiple contexts in the crawler session manager
added security check when retrieve JspApplicationContext in JspFactoryImpl to enhance security by restricting access to privileged actions
replaced the initialization of ` l ` with ` minL ` and ` maxL ` and modified the calculation of ` length ` for different axial
added dependency injection for NonceService and updated bind method in OpenIDAuthenticationProviderModule to ensure NonceService is bound to a single instance to
do n ' t update child link if committer do n ' t exist
refactor method signatures and error handling in SpringCloudPlugin . java to improve code readability and maintainability
fix flaky test by increase delay to 500ms
do n ' t override the default keyboard shift code if the remote index be not set
[ hotfix ] [ test ] make isleader ( ) synchronize to avoid race condition
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition to check if the identity is a reference instead of a null name to simplify the condition for better readability and maintainability
updated the ` newInstance ` method to accept a ` noop ` parameter instead of ` AbstractCommandOptions ` to simplify the instantiation process by removing unnecessary options
added a sleep delay before catching IOException and InterruptedException in TestListenTCPRecord . java to improve error handling by allowing a longer wait time
removed redundant assignment of arguments in PatchExtensionMethod . java to streamline code by eliminating redundancy
refactor ` RawNativeLibraries ` to use a ` Set ` for managing ` RawNativeLibraryImpl ` instances instead of a ` Map ` to
add namespace support for ' apply - sequence ' and ' ignore - send - failures ' in the router .
removed the x509PublishUrl variable and related methods from ClientKeyPublisher and JwkViewResolver classes to streamline the code by eliminating unused variables
updated the handling of readers in QueryComponent to ensure the correct subReader is assigned when there are only one reader to avoid potential null pointer exceptions
replaced the existing parsers " max " and " min " with new Double2Parsers that return double values to streamline the parsing process for
simplified return statement in the Container class to improve code readability and maintainability
removed unused variables and modified the next ( ) method signature in TokenSources . java to streamline code and improve readability by eliminating unnecessary exceptions
cloudstack - 4892 : fix bug in insert user with wrong uuid in user list
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use ObjectProvider < FlowBuilderServices > instead of FlowBuilder
updated WriteJdbcPTest . java to include maximum connections and refactor SQL commands to improve connection management and enhance code readability
removed the check for " editor . laf " before setting the UIManager and setting the look and feel to simplify the code by directly setting the UIManager
refactor method calls from ` getDesiredStateEntity ( ) ` to ` desiredStateEntity ` in ` ServiceComponentHostImpl . java ` to
updated calculations for margin start and left position in FloatingTaskView . java to simplify layout behavior for RTL devices
added a condition to check if the application is running before proceeding and set the status line to a message string to improve error handling and provide a
cpucallgraphbuilder : do n ' t increment threadid , it ' s useless .
bugfix : use defaulttoolbar for default perspective
added NetworkAddressChangeListener implementation to HomekitImpl and updated logging messages accordingly to enhance network address handling and improve logging clarity
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use getLeaseRenewalTime ( ) instead of null to
replaced ` Optional . < SourcePath > absent ( ) ` with ` Optional . absent ( ) ` and added ` linkStyle ` to ` C
added null message check for the exception message in ExceptionHandlerRegistryFactory . java and created a test for handling fatal IOException with a null message to ensure
changed the ` nextID ` variable from ` int ` to ` volatile int ` and modified the ` getSize ` method to improve thread safety and ensure
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test failure
added HasSourcePath interface and implemented it in AbstractThinArchiveArg , FileListableLinkerInputArg , FileListableLinkerInput
simplified exception message by removing unnecessary StringBuffer construction to improve code readability and maintainability
added index field name support for " $ tags " in OrdinalMappingAtomicReader and updated related tests to ensure consistency in index field naming and improve
updated the ` toEpochMilli ` method to handle negative seconds and nanoseconds correctly to ensure accurate conversion between negative and positive epoch values
glsl : use vb . buffertype . name ( ) instead of vb . buffertype ( ) in openglrenderer
app : make copypaste script block by default
added a new file TestCMoveLimitType . java that implements a character buffer test with CharBuffer manipulation to ensure correct handling of char buffer operations and
refactor audio packet processing to use a list of reusable audio packets to improve efficiency and maintainability of audio processing logic
camel - 14263 : fixed the issue of camel - ssptparser throw an arrayindexoutofboundsexception .
updated vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to align with Oracle Corporation ' s
refactored version printing logic into a separate method for better encapsulation to improve code readability and maintainability by encapsulating
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to utilize EncryptionUtils for SHA512 and SHA512 checksums to improve
added EOFException handling for EOF in Http11InputBuffer . java to improve error handling for EOF scenarios
defaultgroupprovider : add unit test for deletemember ( ) and deletememberfromnonexistentgroup ( )
camel - 14263 : remove unnecessary new object [ ] in camel - ftp
deleted the V2ReplicationProtocol . java file to the replication protocol is no longer needed for the current implementation
replaced ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` with ` ImmutableSortedSet < SourcePath > compileTimeClasspathSourcePaths `
added new files ConstructorArgsDemo . java and StrictDemo . java , and updated StupidFinal . java to StupidFinal .
[ geot - 6257 ] templatefeaturecollectionfactory should use threadlocal to close iterators
updated responseCount assertion to include replication factor in WriteResponseHandler . java to ensure that the response count does not exceed the specified replication factor
added a null check for ` getIndexNumber ( ) ` in ` ItemRowAdapter . java ` to ensure that ` item ` is not null before
rename anchtors to ancestor and fix a typo
added a width check before proceeding with further operations in KBBase . java to ensure that the application does not exceed the application ' s maximum
updated equality check in ChangeLogParameters to use ` . equals ` instead of ` = = ` for comparison to ensure correct comparison of ` changeLog
changed loggers from static to final in LogFactory . java to ensure loggers cannot be reassigned after initialization
updated return statement to use getBasePlot ( false ) instead of p to ensure that the return value reflects the current plot ' s base plot functionality
camel - 16265 : camel - rest - server - createuploaddir should check if file be create before delete it .
added a boolean parameter ` sendStatus200 ` to several ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnection classes to control status
added a length check for the comment string in multi - line comments to ensure that the comment string is not empty before processing
added file type association removal logic in BuckModule . java to ensure proper handling of file types in the application
replaced multiple specific function imports with a wildcard import and replaced ` ToLong ` with ` ToInt ` in ` ComposedUtil . java
added error handling for unsupported RTM OS in RTMGenericCommandLineOptionTest and updated error messages in TestUseRTMLockingOptionOnUnsupported
standardized spacing and formatting in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve player management methods to enhance performance and maintainability of player interactions
added a method to package the ChannelTypeUID class in AbstractModbusOSGiTest . java to ensure proper package import for ChannelTypeUID
fix checkstyle violation in polyglotexceptionimpl . java
set ` systemContext ` to null in ` AndroidTestEnvironment ` and implement context management in ` ShadowFontsContract ` to ensure proper context management
added support for converting milliseconds and seconds to milliseconds in the TimeGranularity class and modified DateTime query logic in PinotDataSourceMaxTime to
refactor ControlFlow handling in ControlFlow . java to improve control flow management to enhance error handling and control flow management for better control flow management
updated assertion messages in Assert . java and ArrayEqualityAssertTest . java to improve clarity and error reporting for array comparisons to enhance test clarity and
make windowclicklogic return the clicktype . unknown for the default case .
fixed an off - by - one error in the index calculation in MeshBuilder . java to correct the indexing logic for better performance
nifi - 10715 : remove unnecessary controllerserviceprovider field from standardprocessscheduler
added handling for AP _ PROCESSORS _ ARG and included AP _ PROCESSORS _ ARG in KotlincToJarStepFactory
updated RESCROLL _ DELAY constant and refactored page snapping logic in PagedView . java to improve code readability and maintainability by
added shortcut permission checks and refreshing functionality in Launcher , LauncherModel , and DeepShortcutManager classes to improve user experience by ensuring correct permission
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance search functionality in the console
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure robustness by preventing potential NullPointerExceptions
added marker selection functionality to NearbyMapFragment to enhance user experience by allowing marker selection in the bottom sheet
added exception handling for Throwable in FileSyncAdapter . java to improve error handling and provide clearer debugging information
refactor test memory assertion to use OutputAnalyzer for better error handling to improve readability and maintainability of the test code
removed unnecessary line breaks and improved filtering of feeds in FeedQueues . java to enhance code readability and ensure only relevant feeds are processed
log a warning if defaultdrmsessionmanager be access on wrong thread
convert package type and resource compression mode to uppercase in AndroidBinaryDescription and add a setPackageType method in AndroidBinaryBuilder to ensure consistent handling of
change the content type of XML _ MIME from " text / xml " to " application / xml " across multiple test files to ensure compatibility with the
updated configuration file reference from INSTANCE . confFile to INSTANCE . confFile and Configuration . getByPath to ensure consistency in configuration handling across the application
removed a sleep delay from the waitUntilReadyAndTimeout call in HostPortWaitStrategyTest . java to simplify the test execution by removing unnecessary wait
updated math imports and variable types from IntMath to LongMath in HiveExpandDistinctAggregatesRule . java to improve precision in handling distinct counts
added multiple checks to ` GraphicsEnvironment . isHeadless ( ) ` in ` Toolkit . java ` to ensure that exceptions are only thrown on headless
updated the condition for smelting ExoflameFurnaceHandler to check if the current recipe matches the furnace ' s world
add the move thread count to the solver ' s log message
fix bug : search with revinclude do n ' t select wrong resource
added a new test class ` Issue582Test ` to validate the sorting behavior of ` Fun . Pair < String , Integer > ` in the
[ native ] add test for decimal overflow and division by zero
refactor LoadingCache class for improved performance to optimize cache loading process for better performance
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest class to ensure that non - constructor methods are not used in
simonstewart : improve the expectedconditions to handle staleelementreferenceexception .
refactor error handling in ViewExistsPrecondition and add hasView method in JdbcDatabaseSnapshotGenerator to improve clarity and functionality of view existence checks
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the codebase
added translation handling and logging functionality in TaskViewUtils and Utilities to enhance user experience by providing detailed matrix representations for task view animations
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a walk method to TempFSTTermsReader and modified TempTermOutputs to write increments based on docFreq to improve efficiency in reading
updated the ` create ` method signatures to include ` SolrQueryRequest ` parameter across multiple augmenter factories to enhance functionality by allowing the creation of documents
added new trigger checks and updated SQL statements in SingleTableMySQLTriggerTest . java to ensure proper handling of new content and validity to improve test
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a dedicated setComparator method to improve code clarity and maintainability by central
phoenix - 4905 - fix phoenixquerybuildertest to work with string literals
added Spark initialization awaiting in the init method of RequesterTest . java to ensure that the initialization process completes before proceeding
added methods to retrieve and save total storage pool details in DynamicPropertiesStore to improve storage management and handle potential IllegalArgumentExceptions
added support for NinjaProperties in AssetsController and its test cases to improve resource loading for development and testing environments
updated method call from ` getMapMarkKey ( ) ` to ` getMapMarkKey ( ) ` in ` MapMarksManager . java
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer classes to enhance token handling by incorporating token
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` classes to simplify method
refactor file loading logic to use a local variable for the file path to improve readability and maintainability of the code
updated image format comparison logic in IOSImplementation . java to use ` . equals ( ) ` instead of ` format = = ` to improve code
[ somfytahoma ] fix the exception message when a bridge can not be start
[ te ] disable flaky test on github
updated SSL configuration settings in OpenWireConnectionTimeoutTest . java to use static final constants to improve code readability and maintainability by centralizing SSL
[ hotfix ] [ dynatrace ] log nan gauge value when meter return nan
added a call to remove a session ID from the session information map to ensure proper cleanup of session information
added a check to set the hostname of alerts if they are null in HeartBeatHandler . java and updated the formatting in AlertReceivedListener
simplified the flushing logic in ChannelEndPoint . java to improve code readability and maintainability
resolve split - packages : move everything from kie - api under org / kie / api : move org / kie / xsd
added tests and implementation for seekTo method in ShadowMediaPlayerTest and ShadowMediaPlayer to ensure compatibility with devices running Android O and above
corrected the spelling of " createTask " to " createThrowingTask " in multiple files to improve code readability and clarify the purpose
added a conditional check to set the border of the tabCloseButton based on the AQUA LAF state to improve the visual appearance of the close
added HTTP request handling and modified URL handling in TSPTimeStampService . java and TestSignatureInfo . java to improve HTTP request processing and ensure correct
[ xstream ] add default xstream permission to vulkan ' s xstream
added error logging for diamond application and introduced a new DiamondRaw class for testing to improve error handling and introduce a new DiamondRaw class for testing
[ hotfix ] [ table - common ] fix typo in reloptutil
updated validation conditions for id and value in Http2Settings . java to ensure that id and value are valid and not greater than 0 to avoid potential
deleted the file Issue664Test . java to the test class is no longer needed for the current test case
removed exception handling for session insertion in SessionsPoolTest to ensure proper handling of session disposal scenarios
start and end root object of geojsonwksbuilder to avoid npe
remove setindex ( ) from popupmenubutton , it be not need anymore .
added a method to check if manual unstashing is allowed in TaskbarStashController . java to improve control over unstashing
camel - 14265 : camel - jbang - do n ' t use custom id for route coverage if custom id = ' ' true
modified the ` getEventMismatchMessage ` method to accept a ` waitForExpectedCount ` parameter for better control over event mismatch messages to enhance flexibility in event
added a new file ` HeaderFixer . java ` that implements a file processor for processing header files to facilitate the fix of license headers in the
added broadcast notification for the first load complete in Launcher . java and updated LauncherProvider . java to handle app widget binding to enhance user experience
deleted the file SuperJumperAndroid . java to the class is no longer needed in the project
updated return value in SystemTableScan and modified test queries in TestStarQueries to ensure proper handling of distributed tables and enhance test coverage for broadcast queries
[ hotfix ] [ runtime ] remove unused interface in observation
fix miss item when remappings do n ' t exist
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use base ( long ) i instead of base ( long ) i to ensure correct
added caching for data format strings in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated query in RemoteAuthenticationEndpointTests to filter by username as " userName " to ensure that only usernames are included in the returned response
updated condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure proper handling of the
added container info to the log statement for the launcher all apps exit to enhance debugging capabilities by including the current page index
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
[ logback - 1076 ] remove obsolete test case in logback - core
added null check for newInput and improved logging messages in BugContentProvider and BugGroup classes to enhance robustness and clarity of marker addition and removal
added a " Reopen in the browser " menu item to the JavaScript editor to allow users to re - open the browser within a specified time frame
added ERROR _ SPECIFIED _ MULTIPLE _ TIMES error message and improved formatting in SemanticAnalyzer . java to enhance error handling and
added tests for adding an entry listener with a predicate parameter in the addEntryListener method to ensure that the addEntryListener method throws a NullPointerException
fix arrayindexoutofboundsexception in coordinatearrays . copydeep ( ) , add test
removed unnecessary whitespace in ToolbarPanel . java to improve code readability and maintain consistency
added a boolean variable ` first ` initialized to false in ` TestPayloads . java ` to ensure proper initialization of the variable ' s first variable
replaced ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to simplify the overview mode
[ java ] set the destination of the message dispatch in networkroutetest .
use integer . max _ value instead of integer . min _ value for messagehandler interceptor
refactor variable declarations in NestedArithmeticTest . java for consistency and clarity to improve code readability and maintainability
updated HttpClientRequestImpl . java to modify pending components and buffer handling in HttpTest . java to improve handling of buffer padding and enhance test coverage for
updated the regex in GetMavenDependenciesTask . java to replace " analyzers - " with " ( ? < ! solr - > ) " and
pdfbox - 4071 : use getcosdictionary ( ) instead of getdictionaryobject ( ) , a suggest by valerybokov
removed unnecessary print statement in ReferenceUtil . java to streamline code for better readability and maintainability
use query type in visibility predicate to check if a field be visible .
added support for a new ` solidityNodeHttpJsonRpcPort ` parameter and updated related methods to utilize this new configuration option to enhance flexibility
added a type check for the folder before removing it to prevent potential ClassCastException when the folder is not an instance of DropTarget
refactor stub JAR generation logic into a separate method ` createStubJar ` to improve code readability and maintainability by encapsulating
added new feature entries for " Setup wizard " and " Workflow helper " in StartPageTopComponent . java to enhance user experience by providing additional features
[ hotfix ] [ cassandra ] fix scheduling of meteredflusher in cassandra daemon
removed unnecessary type casting for Boolean in OnlineTestCase . java to simplify code for better readability and maintainability
updated ReturnAttributes from NONE . value ( ) to ALL _ USER . value ( ) in LdapUserGraphicalAuthenticationRepository . java to align with
refactor HttpChannelState to simplify the handling of onIdleTimeout and onFailure in HttpChannelState . java to improve code clarity and ensure proper
changed the CreateEndPoint class from implementing Runnable to extending Invocable . NonBlocking to allow for non - blocking operations on the CreateEndPoint class
updated TABLE _ HEADER _ SEPARATOR regex and modified conditional checks in TableBlockParser . java and TablesTest . java to improve table header separator
updated return value from 320.0 f to 310.0 f in Camera . java to improve accuracy of camera rendering
added preference for starting the GPS boot setup and removed unnecessary URLs from multiple files to simplify the application ' s configuration and improve user experience
updated the client secret value from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to ensure that the client secret is stored in a
updated assertions in MySQLStoredProcedureTest . java and PostgreSQLStoredProcedureTest . java to pass " true " as the parameter to ensure
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest to mark the test as ignored due to race conditions
refactor SegmentGenerationAndPushTaskExecutor to return PinotFS instances instead of using PinotFSFactory to improve resource management and enhance error handling
added locale check in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is applied only for non - English locales
added MetalLookAndFeel import and set UI look and feel in bug8032878 . java to enhance user interface customization options for better user experience
added synchronization and refactored ping task handling in the Bot class to improve thread safety and ensure proper shutdown of the executor service
removed the message from the error method call in GlobalErrorHandler . java to simplify error handling by using the throwable object directly
corrected the spelling of " module " to " from " in multiple Java files to improve code readability and maintain consistency in naming conventions
catch commandlineexception instead of exception in pinotadministrator ( # 11824 )
replaced super . equals ( o ) with isEqualTo ( o ) and added deprecated methods for equals ( o ) and hashCode ( ) in Subject . java
removed unnecessary right braces and improved code readability in CustomPlaybackOverlayFragment and ImageButton classes to enhance code clarity and maintainability by standardizing
updated map zoom level minimum and maximum values in BasicMapViewer . java to improve user interface responsiveness by adjusting minimum and maximum zoom levels
refactored adminUsers and processUserGroups handling to use ImpersonationUtil for processUser and processUserGroups to improve code clarity and maintain
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in ` UnixFileSystemProvider ` and ` WindowsFileSystem
added argument extractors to the DelegatedClientAuthenticationAction class and updated service resolution logic to enhance service resolution by allowing multiple ArgumentExtractors for better
changed defaultGroup variable to be final in NacosServerRegisterRepository . java to enforce immutability of the default group variable
replace tilecache . destroy ( ) with tilecache . createtilecaches ( ) in tilesizechanger .
removed redundant calls to ` InfoLayoutHelper . addInfoRow ` and ` layout . removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment .
refactor the ` cleanEntriesForFeedsWithoutSubscriptions ` method to use a separate ` cleanEntriesForFeedsWithoutSubscriptions ` method
replaced ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to ensure consistency in authentication
nifi - 164 : fix filebasedclusternodefirewalltest failure on window
mahout - 102 : fix conic fusion to use e1 / e2 instead of linv
refactor the EOF handling logic in RandomAccessReader . java to improve readability and maintainability of the code
added @ SuppressWarnings ( " unchecked " , " vararg " ) annotations to Fields . java and MockitoBeforeTestNGMethod . java to suppress
refactor CImage . java to improve image handling methods and array conversion to enhance code readability and maintainability by encapsulating image processing
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to ensure compatibility with updated HBase filters
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in naming convention
replaced custom null comparisons with ` Objects . equals ` for multiple classes to improve code readability and maintainability by using standard ` Objects
refactor ` resolveClassFromCanonicalName ` method to accept ` binaryName ` instead of ` canonicalName ` to improve the handling of class names
added verification checks for various HTML configurations in NinjaDefaultTest . java to ensure proper handling of internal server error and FTL HTML views
updated the method name from ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and adjusted related calculations to improve clarity and
adjusted timestampsViewPaddingBottom calculation and adjusted listViewPositionOffset values in DetailFragment . java and ListFragment . java to improve layout consistency
refactor exception handling and error logging in ZkStateReader . java to improve code clarity and ensure proper interruption handling during thread interruption
added null checks for field values in HttpFields . java and implemented a test for handling empty headers in RequestTest . java to ensure proper handling of
server : fix static nat rule not work when service be not support in the network .
added calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added a call to removeExtraEmptyScreen ( true ) in mWorkspace to ensure proper cleanup of extra screens in the workspace
added a ` fixedWidth ` flag to the ` BitmapFont ` class and modified glyph positioning logic based on its value to improve glyph positioning
removed the boolean parameter ` EXTRA _ SHOW _ TITLE ` from the ` createFragment ` method and refactored the ` ChangeLogFragment
added preEvent , postTransition , and stateContext methods to AbstractStateMachineFactory to enhance state machine lifecycle management and error handling
refactor ConfigDescriptionProvider class to improve code organization to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified MetaStore initialization in StorageBasedMetastoreTestBase to improve role handling and support Windows - specific proxy
updated FacetComponent . java to use a boolean variable for count and modified query calls in TestDistributedSearch . java to improve code readability and
updated the cache file path in CheckstyleReport . java to use the current build directory instead of a hardcoded value to improve maintainability and
added functionality to stop Jetty Solr replicas based on base URL to improve resource management and ensure proper stopping of Jetty instances
added a file name parameter to the FileActionsDialogFragment constructor and updated its usage in the OCFileListFragment to allow customization of file names
added support for invalid reorder direction in CellLayout to ensure proper handling of external layout modes
updated path annotations and API endpoints in InnerTransferRequest . java and AccountAPI . java to improve clarity and functionality of API endpoints
add a method to get the execution ID for a specific job in JobExecutionService to improve job status verification during testing
added a new annotation interface ` EnableAdminClient ` in the ` config ` package to provide a mechanism for enabling the admin client functionality
replaced specific imports with a wildcard import and implemented visitIdentifier methods for better type handling to streamline import statements and enhance type identification functionality
added a method to set the action text color in AuthenticatorActivity to improve user experience by providing a visual indication for action text
added a new ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes with a ` ComparableField
refactor method names from ` addTestStepsForPickleSteps ` and ` addTestStepsForHooks ` to ` createTestStepsForHooks
corrected the spelling of " valid " in the test method names from " noArgMethodIsNotValid " to " validNoArgMethod "
[ hotfix ] [ spark ] add cancelclient ( ) method to rpcserver
added support for implicit precoercion values in SkylarkParamInfo and its implementation in DefaultConstructorArgMarshaller and ReflectionParamInfo to
initialize lastDisplayedUser to Optional . empty ( ) in FileDisplayActivity . java to ensure lastDisplayedUser is initialized with an empty value to prevent
added a method ` findAll ` to ` QueryDslMongoRepository ` for retrieving ordered results from ` OrderSpecifier ` to enhance functionality to support ordered
added null checks before calling stop ( ) on SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerException
add a break statement to exit the warm - up loop in case of a failure .
added xread ( byte [ ] , byte [ ] , string , streamentryid , streamentryid ) and xreadgroup ( string ,
removed FIXME comments from LinkedBufferInput , StreamInput , and LinkedBufferInput classes to simplify class structure and improve code readability
updated ` CasWebSecurityConfigurerAdapter ` to use ` WebSecurityCustomizer ` instead of ` HttpSecurity ` directly to enhance security configuration flexibility and
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` MiniHiveKdc ` to use it to
added registerProviderInternal method to ShadowContentResolver and updated ContentProviderController to use it to enable registration of content providers and improve content provider management
updated the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to ensure compatibility with the latest ClassFile version in the
fixed - singleconnectionmanager do n ' t keep alive when create a new connection
[ java ] rename broadcastsenderflowcontrolsupplier to multicastsenderflowcontrolsupplier .
gbasicstroked : fix nullpointerexception in 3d locus with no point
added ConcurrentHashMap imports and improved error handling in HttpServerTestBase , WebSocketConnectionD13 , WebSocketMessageD13 , WebSocketMessageD13Test ,
updated FirefoxDriver initialization and improved screenshot handling in HttpWebClient . java to enhance user experience by allowing customizable screenshots based on configuration
replaced ` assertEquals ` with ` assertThat ` in multiple test files to improve readability and maintainability of the test code
remove deprecate code in trufflelanguage . getcontextreference ( ) .
updated exception handling in StubberImpl . java and added two new test classes for stubbing and uninstantiable exceptions to improve error handling
updated condition checks in Actor . java and Group . java to improve clarity and error handling to enhance code readability and provide clearer error messages for
added location permission dialogs and modified the getCenter method in LocationPickerActivity to enhance user experience by allowing access to location - related features
http : / / issues . apache . org / jira / browse / amq - 4892 - add a countermdb ejb example to
added standard cookie specification in GetHTTP request configuration to ensure consistent cookie management across HTTP requests
simplified the intersection logic in the Intersector class to improve code readability and maintainability by using the method ' s overlaps method
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering logic to improve audio quality and
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel constructors and validation to enhance functionality by allowing the monitoring URL to be accessed
[ hotfix ] [ k8s ] remove kubernetes . service . create - timeout config option
updated NearbyListFragment to set icons based on the place description to improve visual representation of landmarks and cities based on their description
added null check for type . getPackage ( ) in DefaultPackageScanClassResolver . java to prevent potential NullPointerException when type . getPackage ( ) is
added a new file ` PrintInlining . java ` containing a main method that prints a message to facilitate debugging by providing a main method for
fix ( javadoc ) : fix parsing of nested brace in javadoc tag
[ java ] remove unnecessary initialization of variable in archivetest
updated the method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java `
removed unnecessary import of ClassPathResource and ResourceLoader in SpringResourceProperties and PasswordManagementConfiguration to streamline dependencies and improve code clarity
updated log messages to use decimal format instead of integer for playback speed to improve readability of log output for better debugging
mucroomcontroller : fire roomremovedevent when cluster be start
updated the ' minimize ' attribute from ' replicas ' to ' cores ' in the AutoScalingHandlerTest . java file to reflect the correct
added key flipY and generateMips settings in TextureHelper . java to enhance texture rendering capabilities
updated PythonDslProjectBuildFileParser to use EventReportingProjectBuildFileParserDecorator instead of PythonDslProjectBuildFileParser to improve
[ j2kt ] allow normalization pass to be apply to library compilation unit .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in both ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory `
[ hotfix ] [ test ] fix checkstyle violation in memorymanager
added JPA Temporal annotations for TIMESTAMP in ConsoleSessionVO . java to enable timestamp handling in database operations
added a new file ` Hbs . java ` and ` HbsTest . java ` in the ` ppp ` package to provide a framework for
chatmessageadapter : fix issue with empty hint and text
changed the iteration over keys from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to ensure the iteration over
simonstewart : add a test that waits until the alert dialog appear and wait for the dialog to appear
added a null check for distinct column indices in ReduceSinkDeDuplication . java to ensure that distinct column indices do not exceed two to
refactor MiscUtils to improve file path handling and error logging to enhance code readability and maintainability by utilizing a more descriptive
regenerate client with updated copyright year ( # 4382 )
updated the ID from " jetty - websocket - server " and " jetty - websocket - client " to " jetty - websocket - server " and "
make samlAuthenticateduser . getattributes ( ) return immutable map instead of unmodifiable map
ggb - 118 : fix issue with text selection not be show in the header
replaced instantiation of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return of ` bytes ` in multiple classes to
changed the method from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource . java ` to ensure the correct timestamp is used for data retrieval
updated class name handling in HtmlJndiTreeReport . java to include " javax . naming . Context " in addition to the existing class name
updated database options handling in StorageUtils . java and improved logging message in Manager . java to enhance database options management and improve logging clarity for block generation
updated edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of edge types in the
replaced the static final FLAG _ SLIPPERY constant with a static import from WindowManager . LayoutParams . FLAG _ SLIPPERY
truffle : fix array dimension calculation in truffleconstantfieldprovider .
added functionality to retrieve and set the Google Drive folder path in multiple classes to improve user experience by allowing dynamic configuration of the Google Drive folder path
add option to shuffle suggestion on up and down
added @ Nullable annotation to several assertThat methods in Truth . java to improve null safety and clarity in method signatures
updated bitwise operations in ArrayUtil to use bitwise operations for size calculations to ensure correct bitwise operations for size calculations
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check if an ` ApiException ` constructor can be instrumented to
[ hotfix ] [ stream ] add waitingforanticompaction to the streaminmanager
added methods for checking and setting the keyguard secure state in ShadowKeyguardManager and refactored tests in ShadowKeyguardManagerTest to improve
added serialVersionUID fields to StringDialog . java to ensure proper serialization compatibility for the class
added a conditional check for the length of overrideParts before parsing Point3i to ensure correct parsing of Point3i based on the number of override
corrected a typo in the method name from " assertEmptyThrowsMutipleFailureExceptionForManyThrowables " to " assertEmpty
modified the ` checkDrained ( ) ` logic in ` AsyncFileImpl . java ` and added a new test in ` FileSystemTest . java
updated LIGHTS _ NUM and LIGHT _ INTESITY from 10 to 8 and modified lighting parameters and configurations to improve light performance and
replaced instances of ` FakeProjectFilesystem ` with ` getProjectFileSystem ( ) ` in multiple integration test files to simplify filesystem management and improve test reliability by
changed the type of ` PathWithLines ` from ` String ` to ` PathWithLines ` in ` loadRerunFile ` method to improve
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
updated TEST _ DIRS array to remove the @ NotNull annotation and added a todo to clarify the purpose of the array initialization
added a call to close the ParcelFileDescriptor object to ensure proper resource management and prevent memory leaks
added thread - local access for prefixIndex and refactored related code to use it to improve thread safety and reduce contention in prefix index management
added logging for DEBUG level in TestDistributedStatsComponentCardinality . java to improve debugging capabilities during distributed stats tests
added multiple calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that the method does not throw an exception when
updated ` GrpcServerRunner ` and ` GrpcClientBuilder ` to include ` @ NotNull ` annotations and modified the URI construction in ` 
move graal . parser . setregexcommand ( ) to demo package .
[ gr - 26458 ] ensure that insight . keysunchangedassumption be call only once per thread .
added platform - specific handling for manifest file writing on Windows to ensure compatibility with Windows and handle line endings correctly
fix ( findbugs ) : add warning for rfe3531161
added nullability annotations to ConfigDescription methods and improved null checks in ThingResource to enhance code clarity and prevent potential NullPointerExceptions
change masterjobcontext . createcancellationexception to return runtimeexception instead of throwable
pagedrawer : do n ' t initialize cropbox if there be no cropbox
refactor ManagerBase class to improve code readability to enhance maintainability and facilitate future updates
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to allow access to All App
refactor FragmentTestUtil to use Robolectric for creating and resuming FragmentActivity to improve code maintainability and leverage Robolectric for
replaced ` getFileCoordinates ` method with ` processFileCoordinates ` and introduced ` getDecimalCoords ` method in ` ShareActivity ` to improve code clarity
rename ` ABCase1 _ 1 ` and ` ABCase2 _ 3 ` classes to ` TestABCase1 _ 2 ` and ` Test
rename parameter ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` method and add a null check for the blackhole address to
updated the handler initialization in OpenRocketViewer . java to call doSimsChanged ( ) before setting the handler to ensure that the handler
added a new file ChangeDependencyGroupIdAndArtifactId . java to implement a recipe for changing dependency group IDs and artifact IDs in Maven to
added a check for segment types before adding segments in IndexingJob and added a warning log in SegmentChecker to ensure only valid segment paths are processed
updated the comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use memoization for replacement paths and source path maps to improve performance and readability of the code
rename JsonExamples class to Examples and update package - info file accordingly to improve clarity and consistency in naming conventions
added detailed debug logging statements in ViewExtractor . java to improve traceability during file extraction process
refactor FindsByLinkText class to improve code structure to enhance maintainability and readability of the code
added a new Main class in the com . facebook . buck . oop _ javac package to demonstrate the usage of Java oop entry points
fix potential thread safety issue in sip plugin .
removed redundant continue statements from NativeScanner . java to streamline code and improve readability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unnecessary import
refactor AndroidLibraryDescription to use Suppliers for better performance and readability to improve performance and maintainability of the code
updated the method from ` remoteContainsResults . stream ( ) . count ( ) ` to ` remoteContainsResults . size ( ) ` to improve
added content encoding handling in ExtractingDocumentLoader to ensure correct content encoding is used based on the content type
cloudstack - 145 : fix databaseconfig to not use string concatenation .
fix an npe in the window listener when there be no slot in the inventory .
( chore ) camel - maven - plugin : add option to ignore remote repository introduced by transitive dependency
removed the @ Inject annotation for backgroundJobManager in ContactsPreferenceActivity . java to streamline dependency injection for better code clarity
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android framework
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when selection is null
added a condition to break the loop if the current index equals the end of the regexp to ensure proper handling of cases where no matching matches occur
added server . port = 0 to the MvcITest integration test to ensure the test runs on the correct port for integration tests
added a new UDF " reverse " function in FunctionRegistry . java and created a corresponding class UDFReverse . java to facilitate the reversal of
updated context path retrieval methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to ensure consistent retrieval of request
refactor Tracer class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] ignore rocksdbstatebackendreaderkeyedstateitcase for now
replaced multiple specific JUnit imports with a wildcard import in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization to buffer operations in StarTreeRecordStoreCircularBufferImpl . java and implemented a clear method in TestStarTreeRecordStoreCircularBufferImpl
updated forecast hours , days , and days from 0 to 48 hours in OpenWeatherMapOneCallHandler . java to adjust forecast values for better weather
[ hotfix ] [ test ] fix test timeouts in abstractpageoperationtemplatetest
added logging and animation features to RemoteTargetGluer and FloatingHeaderView classes to enhance debugging capabilities and improve user experience during all apps content transition
updated the ` parseRerunFile ` method to return a stream and modified the return type of the ` parseRerunFile ` method to improve
fix creative issue with livingwood , livingrock , and biome chiseled quill to the creative tab .
updated assertions in TestRadioButtons . java for consistency to improve readability and maintainability of the test cases
added support for specifying file sizes in RCFileCat and updated related logic in RCFileCat to enhance flexibility in managing file sizes
refactor TriadicCensus , TriadicCensus , HITS , and OptionalBoolean classes to improve code organization and
added multiple checks for MXNet NDArrays in JnaUtils . java to ensure that the NDArray is valid before proceeding
refactor BlobServer class to improve code structure to enhance maintainability and readability of the code
fixed bug 1226565 - unusedprivatemethod no longer report false positive for static private constructor
renamed ` lexicalScope ` to ` lexScope ` in multiple files to improve clarity and consistency in naming conventions
add a test for auto - startup of sftp inbound adapter
added getter and setter methods for ` level ` , ` root ` , and ` itemBoundables ` in multiple classes to enhance encaps
modify version parsing logic to handle minor version numbers differently to improve accuracy in parsing version strings
fix itemregistryimpl . persisttags ( ) when there be no tag .
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and ` fromDateTime ` in ` DateTimeFunctions ` to
hhh - 17100 - refactored customtype . disassemble ( object ) and stringwrapperusertype . disassemble ( object ) to
refactor Log4j2ConfiguratorServlet to improve logging functionality to enhance performance and maintainability of the log configuration process
replaced the creation of ` HiveException ` with a direct return statement in ` StorageBasedAuthorizationProvider . java ` to simplify exception handling by directly returning
updated CGoCompileStep to use a string concatenation for the CC key and added a new test for cgo library with prebuilt dependencies to ensure
fix : add buildable annotation to customresource
removed the @ Override annotation in mmm Only . java and ppp Only . java to ensure proper method overriding and improve code clarity
added a timeout parameter of 3 hours in HttpClientFactory . java to improve connection reliability by allowing more time for requests
added a new parameter " configured _ raw _ target _ node _ parse _ pipeline " and updated the per event scope in RawTargetNodeToTarget
add support for ` ` enable all but trace ' ' constraint to the selenium server
removed the @ Singleton annotation from the ApplicationController class to ensure proper singleton management for the ApplicationController
updated username retrieval logic to handle OwnCloud accounts more robustly to ensure accurate username retrieval from the OwnCloud account if available
added BatchStatus import and implemented a test for resuming paused instances in SimpleJobLauncherTests to ensure proper job execution and validation of paused instances in tests
added null check for cacheConfig before processing parameters in HttpSyncDataService . java and refactored data refresh logic in DataRefreshFactory . java
simonstewart : make the ` dockersession ` public so that it can be reuse by other selenium module .
replace java . lang . string concatenation with default _ package in compilationunitcontext
pdfbox - 4071 : use nonsequentialparser instead of pdfparser , a suggest by valerybokov
[ mahout - 264 ] fix checkstyle violation in testdistributedlanczossolvercli
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate future updates
test : fix npe in portletapplicationmaptest . testgetattribute ( )
added tests for handling ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` and ` NestedBeanIgnoreNulls ` classes to ensure
add spring boot auto configuration customizer . patch by jbellis
fix indicator . todouble and add unit test
added a new method ` execInContainerWithUser ` to ` ExecInContainerPattern ` and modified its calls to include a ` user ` parameter
fix issue with websocket not be interested in bytemessage , textmessage and bytemessage listener
add test case for semgrex attribute and negate attribute
added a broadcast intent to clear the unread unread state in HomeFragment to enhance user experience by providing a way to clear unread messages
removed pre - gingerbread check for scroller initialization in TouchImageView . java to simplify code logic for better readability and maintainability
add a ` ` flush ' ' method to the ` ` defaultprofilevalidationsupport ' ' bean , so we can flush the web application context .
camel - 14284 : camel - core - do n ' t cache the vetoed exception in camelcontext . start ( )
added floating action buttons for main FAB and maps in ShareActivity to enhance user interface by providing menu options based on user interaction
added support for inline paragraph formatting in ToDateParser to enhance date parsing capabilities for users
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated Swedish and Swedish error messages in multiple resource files to improve clarity and consistency in the user interface
added a check for the server state before binding to the OperationsServiceConnection to ensure proper service binding behavior when the server is not checked
updated the parameters of the ` Position ` constructor to use ` node . getBeginLine ( ) ` instead of ` node . getBeginColumn (
added ` waitFor ( ) ` method to ` CxxPreprocessAndCompileStep ` and ` ManagedThread ` classes to ensure proper termination of processes
added a flag ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented ` PrincipalAttributeMerger ` in ` CoreAuthenticationUtils `
check if map be load before check if map be load
( chore ) camel - netty : add support for ssl - protocols in the socket configuration
replaced AtomicBoolean with AtomicReference in SetOnce . java to improve thread safety and encapsulation of atomic operations
updated QueryDslMongoRepository to return a default key for the property if no path expression is provided to ensure that an empty string is returned when
updated assertions in RoundRectBorderTest to ensure correct border consistency to improve clarity and accuracy of assertion messages for better debugging
make sure we do n ' t try to run the test if there be no node in the cluster
remove test that be no longer need
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' array length to ensure
modified the conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` in ` ProcessInformationsPanel . java ` to
updated method names from ` maxN ` to ` greatest ` and ` least ` in ` MoreCollectors . java ` to improve clarity and consistency
added null checks in BitmexStreamingExchange , BitmexStreamingMarketDataService , and BitmexStreamingService classes , and refactored
added validation for lat and lon in GeoPointField to ensure only valid latitude and longitude are used to prevent runtime errors
refactor workflow file handling by replacing saveDraft with createFile in OozieProxyImpersonator and WorkflowFilesService classes to improve clarity and
refactor ResponderId class to improve code organization to enhance maintainability and readability of the code
updated getTableDocument method to accept a boolean parameter for dependent tables to enhance functionality by allowing conditional handling of dependent tables
added functionality to count consecutive uploads without coordinate in UploadActivity and UploadPresenter to improve user experience by displaying a alert when there are insufficient uploads
added caching functionality for profile data retrieval in ProfileResources . java to improve performance by reducing the retrieval time for profile data
refactor JpaMetamodelEntityInformation to improve property value handling and type safety to enhance code readability and maintainability while ensuring proper property value
added index creation and updated method names for bootstrapping DDL timestamps for tables and views in UpgradeUtil and related classes to improve clarity and
add option to register default jersey exceptionmappers in abstractserverfactory
updated method call to include a boolean parameter for storeFieldAction to ensure proper handling of the storeFieldAction parameter
added an owner pointer parameter to the nativeCreateNSWindow method and updated its usage in CPlatformWindow . java to improve the handling of window owners
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME in FileContentProvider . java to ensure consistency in table naming
added a new stock tile and modified the logic to handle it in the Tile class to enhance the animation capabilities of the Stock tile in the application
fixed - rbuckets . get ( ) method return null if codec be null
fix : add findunrelatedtypesingenericcontainer annotation to typeframemodelingvisitor .
refactor LauncherBackAnimationController to utilize BackProgressAnimator for resetting back progress to improve the responsiveness of back transitions and
removed the final modifier from _ initialPageNo and added logic to calculate the initial page number to ensure that the initial page number does not exceed the
fix crc16 benchmark and change total _ operations to zero
added comment parsing functionality to FormattedSqlChangeLogParser and corresponding tests in FormattedSqlChangeLogParserTest to enhance SQL change log parsing by
removed the instantiation of JarArchiver in MavenArchiver and updated its usage in AbstractJarMojo and AbstractJarMojo to streamline the archiver
replaced HumanReadableException with BuckUncheckedExecutionException and updated error message formatting to improve clarity and specificity of error handling during class usage file loading
refactor conditional checks in TSServiceImpl . java and add multiAggregationTest method in DaemonTest . java to improve code readability and
added input validation for UNSIGNED _ BYTE and UNSIGNED _ BYTE types in GwtGL20 . java to ensure compatibility and prevent runtime exceptions
removed unnecessary calls to ` methodMagicDebugInfo . invokeDynamic ` and added a new test method ` testDebugInfo ` to enhance test coverage and
improve error message when bytebuddy can not instrument all class within the mock type hierarchy
[ gr - 32266 ] add additional trace of class initialization trace in the instrumentation .
corrected the variable name from ` queryLevelTimeoutMs ` to ` tableNameWithType ` in ` BaseBrokerRequestHandler . java ` to ensure consistency
( chore ) camel - core : use caffeine cache for messagequeueview when load topic route from namesrv
mbtiles : make mstiles data source read - only by default
updated the INVALID _ SOURCE _ TARGET _ RELEASE regex in FindBuildToolFailures . java and added a fatal error in FailureLogAnalyzer
modified the construction of the URI string construction in DetailFragment . java to check for the availability of the location intent to ensure that the location intent
nifi - 14105 : fix npe in standardparametercontextdao when parametercontexts be null
refactor ClassLoader class to improve code structure to enhance maintainability and readability of the code
added origin response header setting in ProxyRequestHelper and created a test for setResponse method in ProxyRequestHelperTests to ensure proper response header management and
added a new ProfileSettingDrawerItem instance in GpsMainActivity . java to enhance profile setting navigation functionality
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 49447
simonstewart : fix the firefox driver to work correctly on the ie driver
added support for maxRows in IoTDBStatement . java to ensure fetchSize does not exceed a defined limit and improve error handling
replaced the ` isCountOptimizable ` method with ` allActionsAreOptimizableFilters ` in ` SqlStreamTerminator . java ` to
added event handlers for node and mouse click events in StandardVizEventManager to enhance event processing capabilities for better user interaction
replaced direct memory setting with a dedicated method ` zeroBuffer ` to improve code readability and maintainability by encapsulating memory management logic
make the xorgroup field in terminalnode memory accessible from the node memory
removed redundant methods from LCDUIImageMonochromeBitmapSource to streamline code for better readability and maintainability
refactor SourcePathResolver to simplify path resolution and introduce a new method for retrieving absolute paths to improve code readability and maintainability by reducing redundancy
fix ( fhir ) : fix bug in xml parser for dstu2 identifier
changed the visibility of ` changeSchemeIfIsWebSocketUpgrade ` from private to static and modified the URI construction method to handle encoded URLs to improve
corrected the spelling of " EXTERNAL _ TEST _ SUITES _ EXECUTION " to " EXTERNAL _ TEST _
added a method to retrieve the CxxPlatform based on the specified build target and argument to improve flexibility and maintainability of platform retrieval logic
added import statements for ` org . apache . lucene . index . IndexReader ` , ` org . apache . lucene . search . IndexReader `
modified the ConcurrentLinkedStack class to handle null values and added tests for pop - bubbles and iterators to improve robustness of the ConcurrentLinked
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes
added a null check for mDirectories before initializing the array to prevent potential NullPointerException when mDirectories is null
added a condition to check if mOverviewStateEnabled and mFirstLayout is not enabled before proceeding with gesture handling to improve gesture handling logic to
added multiple package - info . java files for various Lucene packages to improve documentation and organization of Lucene packages
added a line to set the visible AutoLeveler text in AutoLevelerTopComponent to enhance user experience by providing a clear indication of the panel
added functionality to call post - optimization callbacks in DirectUpdateHandler and DirectUpdateHandler2 to enable dynamic event processing based on configuration settings for optimization
updated Inflater initialization and compressed handling in CompressionMode . java to ensure proper initialization and initialization of compressed arrays for decompression
removed the check for user _ data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check if the base is a local meta store before retrying retries to ensure retries are only attempted when the local meta store is
do n ' t log timeout exception when host status be null
refactor Subject class to improve code structure to enhance maintainability and readability of the code
fix bug in abstractserializationservice by use a concurrentreferencehashmap with weak reference
fix bug in hssfpalette . findsimilarcolor ( ) and add unit test
chore ( regen ) : fix typo in docstring ( # 43 )
simonstewart : add a few more test for find element by numeric id .
added a flags parameter to the registerReceiver method in ShadowApplication and ShadowContextImpl , and updated related methods in ShadowInstrumentation and ShadowInstrumentation to allow
updated FFmpegTest to use Mockito for mocking the BufferedReader instance to improve test reliability by ensuring the BufferedReader is properly mocked
added a previousInput variable and modified OggInputStream and OpenALMusic classes to handle stream closure to ensure proper resource management and prevent memory leaks
replaced a hardcoded error message with a constant named RESPONSE _ WAS _ NULL to improve code readability and maintainability by using a
[ te ] fix anomaly warning in anomaly migration
refactor ` BaseActivity ` and ` DetailActivity ` to use a ` showToast ` method for displaying toast messages to improve code read
added request template parameter to the Request creation method in TracingFeignClient . java to enable dynamic request creation based on the delegate ' s
added name validation and exception handling in LDAPCertStore . java to ensure valid LDAP names and improve error handling
refactor retain logic into a separate retain method for clarity to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click functionality to improve test clarity and ensure proper functionality of item
[ hotfix ] [ test ] fix compilation error in checkpointfailuremanageritcase
remove genericitemuiprovider since it be no longer use
add a method to set the selected object , so that it can be reuse by other components .
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to enable isolation of FileSystemPool access in tests
added a line to set the server connector ' s bind address to the HTTP _ INFO . bindAddress to ensure the server connects to the correct
updated token expiration and expiration durations based on client grant types in DynamicClientRegistrationEndpoint to improve flexibility in token management based on the configuration settings
added CloverInstrumentationFilter to detect Clover instrumentation in TestInterfaceAudienceAnnotations . java and modified SplitLogCounters . java to include it to
added a new constant for Smartmi Evaporative Humidifier in MiIoDevices . java and modified the ReadmeHelper . java
update miningprocess . plausibletobreak to use calculationcontext . getminingdurationticks
changed the access modifier of the setScrollRangeDelta method from private to public to allow access to the method from other classes
ambari - 13232 . log an error if ambari be not manage the repository for ambari .
modified the condition to check for missing values in the IntHashSet to ensure proper handling of missing values in addition to missing values
added Serializable annotation to RuleAdministratorImpl class to ensure proper serialization of RuleAdministrator instances
updated ` allowedOrigins ` , ` allowedTimingOrigins ` , and ` allowedOriginPatterns ` to use ` HashSet ` and ` Pattern `
updated test files in BaseG3dHudTest . java to include " g3d / knight . g3dj " to
added a check for solidifiedPosition before updating the numHashCache and added logging for solidifiedPosition in Manager . java to improve error handling and
updated ExecResult . java to handle null values and modified TestServerCustomProtocol . java to enhance null safety and improve test coverage for PingProtocol
added a method to check if a user has access to the server and updated error response handling accordingly to improve access control handling and ensure proper response validation
refactor ClassMirror and StubJar classes to implement a new method for retrieving class class bytes to improve code clarity and maintainability by centralizing stub
added internalLinkText field to display internal link text based on file type to improve user experience by providing context - specific text for shared links
updated assertion to use Locale . ENGLISH for formatting accuracy in PredictionTest . java to ensure accuracy format is consistent across different locales
updated the condition to check if the date is not the same as the Calendar . SATURDAY in ModelZooTest . java to ensure
added methods to hide the IME window in AllAppsContainerView and logging it in LauncherAllAppsContainerView to improve user experience
( chore ) camel - core : use inmemory event store for test
added a new method ` getmntonname ` and refactored existing methods in ` BsdNativeDispatcher ` and ` UnixNative
add test case for issue # 1599 type resolution issue
updated the spawn command to accept an additional parameter ' x ' and ' z ' as an optional parameter and added error handling for invalid spawn arguments to
added a constant for minimum content dimensions and updated method calls to use this constant to improve code readability and maintainability by reducing redundancy
add debug scope to the graph compilation test to make it easy to run the compiler test .
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with Windows '
added plugin check classes to ` UpgradeCheckRegistry ` and reformatted the ` addColumnsToUpgradeTable ` method call in ` UpgradeCatalog2
refactor Environment class to improve code structure to enhance maintainability and readability of the code
added import for LuceneTestCase and annotated RecoveryAfterSoftCommitTest with BadApple annotation to address issue SOLR - 7421 related to the test
modified the way the filesystem separator is concatenated in CodenameOneImplementation . java and removed unnecessary warning in HashtableContent . java to improve code clarity
[ hotfix ] [ runtime ] rename flag _ ignore _ hdmv _ dts _ stream to flag _ enable _ hdmv _
replaced specific resource accessors with a wildcard import and updated resource accessor initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser .
disable tls algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing sensitive algorithms from being enabled
replaced ` CxxDeps . EMPTY ` with ` CxxDeps . of ( ) ` and updated references to use ` ImmutableList . of ( )
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` in ` StubJarTest . java
corrected the formatting of the resizeThreshold variable in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated the logic for setting the folder name text based on the presence of a title to ensure that the folder name hint is set correctly based on the
updated method calls in UaaResetPasswordServiceTests to include an additional parameter for the client ID to enhance functionality by allowing customization of the client
changed access modifiers of methods ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` from public to private in ` ShadowSQLiteDatabase `
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition classes to account for the isClosed state to ensure accurate logging based on the
refactor MimetypeIconUtil class to improve code readability to enhance maintainability and facilitate future updates
renames method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test case for negated instanceof in UnnecessaryParenthesesTest . java and updated the UnwrapParenthes
add ability to teleport entity to bukkit world via teleport
replaced Base64 encoding with Base64Utils for modulus and exponent in TokenKeyEndpoint and tests to improve compatibility and prevent potential issues with URL - safe
updated imports in TranslatorManagerHelper . java to use ProjectComponent and Statistics . Event . GENERATE instead of Statistics . onGenerate to
rename the ` ContainerAnnotation ` interface to ` ContainedBy ` to improve clarity and consistency in naming conventions
added an assertion to ensure that the getId ( ) method returns a non - null value to ensure that the getId ( ) method returns a non -
refactor TimeLineCursorAdapter to improve the handling of retweeter and muffled users based on their visibility to enhance code clarity and maintain
updated UserProfileActivity to conditionally display verified text based on the user ' s theme settings to improve user experience by allowing customization of verified text
refactor AbucoinsDigest to remove static instance declaration and simplify constructor access to improve code readability and maintainability
camel - 14284 : camel - mongodb - add autowire option to camel - mongodb to enable autowire on mongodb .
added sourceIndex parameter to AttributeMapping and introduced LAST _ INDEX constant in DataAccessMappingFeatureIterator and related classes to enhance the attribute mapping functionality
log a warning if hive _ corrupt _ column _ statistics be not find when alter a partition
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to check if security is enabled in
refactor ConnectivityReceiver , TerminalKeyListener , TerminalKeyListener , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 7131 ] escape email in home page to avoid typo
extract enrichreflectionwithsubsystems from modulemanagerimpl and remove it from terasologyengine
updated JoinModeller to use the number of features from the resulting means array instead of the length of the means array to ensure accurate representation of the
ggb - 132 : do n ' t try to parse a command that start with ` ` < ' '
[ hotfix ] [ kafka ] check for debug and trace log level before log message
[ java ] remove hard - coded constant in mediasessionconnector . java .
removed deprecation warning for automatic separation in ` IgnitionConfigurationHandler ` and added methods for handling launch stages in ` MotorMountHandler ` and
tika - 2578 -- fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ?
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest to mark the test as ignored due to compatibility issues with JDK
refactor lock file creation in MavenDependencyResolver to use a dedicated method to improve code readability and maintainability by centralizing file creation logic
updated synchronization settings from " version _ 5 " to " version _ 5 _ 1 " in UpdateUtils . java to ensure compatibility with the latest notifications
added a check to return null if the username equals FEDERATION _ USER to prevent unauthorized access to the authentication process
include truffleobject in executemethodnode for non - truffleobject type .
replaced ` Collectors . toList ( ) ` with ` Collectors . toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest `
do n ' t allow logback valve to access file that do n ' t exist
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize the Version class for improved functionality
added logic to handle missing primary key changes for OracleDatabase , AbstractDb2Database , and control schema inclusion to improve the handling of missing primary key
added ` MetastoreException ` handling to the ` execute ` method and refactored exception handling in ` Msck ` to improve exception management and
[ flink - 26166 ] [ kafka ] retry commit if kafka transaction be already commit before recovery
( chore ) camel - grpc : add receipthandleprocessor to handle message / message / dlq request
added a service list to DockerComposeContainer and created a test class for it to allow dynamic configuration of Docker service configurations
fix a bug in export and structcontextdecorator that cause a concurrentmodificationexception .
replaced HtmlCleaner with a direct return of xml in FeedParser . java to simplify XML processing and improve error handling
removed conditional check for DISABLE _ ALL _ APPS in Launcher . java and updated child view retrieval in Workspace . java to streamline code
( chore ) camel - aws2 - meter : use double instead of int for sum
added a new file ` bug4150029 . java ` implementing a file chooser with temporary directories to address issue # 4150029 related to file
added a boolean field ` isSparkConfigUpdated ` and related getter and setter methods in ` HiveConf ` , and closed ` SparkClient `
added a method to retrieve the long press indicator in AppIcon and AppIconMenuItem , and modified Launchable and Workspace to include it to enhance user
added checks for empty polygons and updated test cases for POLYGON EMPTY to ensure correct handling of empty polygons and improve test coverage for
refactor UnflavoredBuildTarget to use a builder pattern using Interners to improve code readability and maintainability by centralizing target
added a new file MultiplyByMaxInt . java that contains a class that performs a multiplication operation with a maximum value to implement functionality for
added logic to enable drawer indicator based on the current file state in OCFileListFragment to improve user experience by ensuring the drawer indicator is enabled
removed unused import statements from TestRAMDirectory . java to streamline the package structure and improve code clarity
replaced FixedBitSet with BitSet in Automaton and Operations classes to simplify data handling and improve performance by utilizing modern Java collections
dmn : use msg . no _ expr _ def _ for _ name _ node instead of string concatenation
replaced instances of @ ContainedBy ( AC ) and @ ContainerFor ( AC ) with @ Repeatable ( AC ) in multiple test files to
updated the message formatting in AbstractController . java to include the sent duration to improve clarity of the output by including the duration of the file
updated the way class names are retrieved and checked for package access in OpenMBeanAttributeInfoSupport . java to ensure proper access control and prevent package access
fix readresponseresolver to always return false if there be no replica
increment freeSize by rounding to 16 in StoreDirect . java to ensure freeSize does not exceed a fixed size limit
keyboardview : fix issue where touchevents . aredisabled ( ) return false on the first touch event .
replaced SslContextFactory with SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to ensure compatibility with the latest SSL
removed the PrivilegedSocket class and directly instantiated the Socket instance in PG _ Stream . java to simplify the socket creation process by eliminating unnecessary privilege
refactor InputTest class for improved readability to enhance maintainability and facilitate future updates
added functionality to pause blurs on Windows and modified method signatures in AbsSwipeUpHandler and TaskViewUtils to enhance user experience by allowing blurs
added null check for current location marker and updated import statements in NearbyMapFragment . java to improve code robustness and prevent potential NullPointerException
updated secret removal method calls to retrieve client ID and clientId instead of client ID to ensure secrets are removed correctly from the client ' s secrets
updated SQL query syntax to use newline characters instead of static imports to improve readability and maintainability of the test code
make sure to shutdown the executor service in case of an exception .
added unit tests for ` SlidingGanttCategoryDataset ` to validate the handling of unknown keys in ` SlidingGanttCategoryDataset
updated ShenyuTrieRuleListener to use Optional for conditionDataList and added return statements in ZookeeperSyncDataService to improve null safety and
remove spatial . getworldtranslation ( ) and use cloner . getlightname ( ) instead
updated conditional logic for stack hiding and improved formatting in StdErrLog . java to enhance code readability and maintainability by simplifying the logic for
refactor HttpSessionEventPublisher to utilize a dedicated method for obtaining the ApplicationContext to improve code clarity and ensure proper context handling during event publishing
removed a semantic exception for the CREATE CQ statement in ASTVisitor . java to ensure compatibility with the latest syntax version for creating CQ statements
[ hotfix ] [ iotdb ] fix typo in flinkiotdbsink javadoc
canonicalizer : add a counter for custom simplified node .
updated the parameter in getFileTypeIcon method from null to context to ensure the correct context is used for file icon rendering
updated ` readIdentifierWithSchema ( ) ` method to include ` schema . getName ( ) ` in the ` readIdentifierWithSchema ( ) `
[ hotfix ] [ bigquery ] support timestamps and integer in bigquery io
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` classes , along with corresponding tests in ` ViewGroupTest
replace raw types with generics in multiple Java files to improve type safety and eliminate unchecked warnings
removed unused import of PColumnFamily in IndexTool and MetaDataClient classes to clean up the code and improve maintainability
added JSON _ VALUE and JSON _ CREATOR constants , and modified enum value retrieval logic in JavaClassUtil , and updated exception handling in JavaClassUtil
svm : fix classpathutils . isjar ( classpathfile ) in resourcesfeature
added braces for CUDA _ C _ R _ 32F and CUDA _ C _ 32F in cuda . java to
updated ResourceLoader to use FileFilter for listing resource directories to ensure all layout files are included in the resource directory
fix redstone torch getattachedface ( ) not work properly in some case .
added support for VARBINARY type conversion in RelToStageConverter to enhance data handling capabilities for binary data types
added import statement for DateHelper in NoteAdapter . java to utilize DateHelper for date handling functionality
updated captions for backup saving and load success in Backup . java and added validation checks in Captions . java to improve user feedback and ensure
ggb - 132 change position of e - view from ABSOLUTE to RELATIVE to align the e - view with the
removed file deletion check for the temporary file in ShadowParcelFileDescriptor . java to simplify the file creation process and improve code readability
replaced poll ( ) and offer ( ) methods with removeFirst ( ) and addFirst ( ) methods in StackBasedSecurityContextHolderStrategy . java to improve
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the purpose of the rule for controversial
canonicalize integerequals ( x , y ) for xor ( x ^ y ) and xor ( x ^ y ) = = x ^
removed the static final constant STRING _ ARRAY in TypeFactory . java to streamline the code by eliminating unnecessary constant
refactor IME hiding logic to use a dedicated method for better encapsulation to improve code readability and maintainability by centralizing I
force bit density to fix network issue
refactor assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for improved clarity and consistency to enhance test readability and maintain
add gl _ max _ texture _ size optimization to make vanilla texture size configurable .
[ java ] : fix checkstyle violation in trystoplogrecording ( )
added a condition to reset startPosn to 0 if in transform mode to ensure proper initialization of startPosn when in transform mode
replaced the ` isStarTreeDisabled ` method with a direct call to ` isSkipStarTree ( ) ` in multiple classes to streamline star
added a lockNearbyView flag and modified refreshView methods to conditionally hide the progress bar to improve user experience by ensuring nearby places are refresh
add maptransformer . of ( map < k , v > ) and bimap ( ) method
refactor EmeddedObjects and EmbeddedObjects classes for improved clarity to enhance maintainability and readability of the codebase
added support for loading launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management capabilities in the launcher
replaced ` ChangeListener ` implementation with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to align with the new event handling
added methods to manage and reset the calling process IDs of ShadowBinder in Robolectric and Robolectric to enhance binding functionality for
refactor ` ExpectationFailure ` class to use ` final ` and ` nullable ` annotations and use ` Objects . equals ` instead of `
bitcoinserializer : remove support for deserializing message with name
imagereplacedelement : do n ' t set width / height if target be negative .
added handling for special characters ' &# 9 ' and ' &# 32 ' in CoreMarkdownNodeRenderer and updated MarkdownWriter to handle &#
refactor password handling in SharePasswordDialogFragment to use a dedicated method to improve code readability and maintainability by centralizing password management logic
refactor methods in IoUtil to use a dynamic class for file channel methods to improve flexibility and maintainability of the code by encapsulating
removed public access modifier from several methods and classes in ` AbstractAssert _ describedAs _ printed _ to _ console _ test ` and ` AbstractAssert
added new OPTION _ SLIDER _ KEYTAB _ DIR and OPTION _ SLIDER _ KEYTAB _ DIR
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation support in ` ExtractionModelFrame ` to
added a new boolean flag ` mHasLoaderCompletedOnce ` and refactored shortcut binding logic in ` LauncherModel . java ` to improve
[ flink - 11824 ] [ table - planner - blink ] make nodepathscountoperator ' s isfinished field final
updated method signatures in IssueInterface , ValidationReport , ValidationReport , and ValidationReport classes to include messageType , messageType , and identifier , and
added a ` safeProviderName ` method to safely retrieve the cipher provider name to improve error handling for unavailable cipher providers during SSL handshake
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration in containerspec
changed logger level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance by reducing log verbosity
modified the indentation logic in AggregateLifeCycle . java to ensure proper formatting of output based on the current index
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public static in DefaultMapScaleBar . java to
removed the @ Ignore annotation from CovariantOverrideTest . java to enable the implementation of covariant override functionality
refactor the ` curly ` method to use a new ` qtype ( ) ` method for better readability and maintainability to streamline
camel - 16265 : camel - jbang - use type converter to convert resource to xml for reload strategy .
added space minimum and maximum settings for the X - axis in ScatterChart . java to improve layout flexibility for the scatter chart
removed unnecessary whitespace in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , implemented it in ` BaseState ` , and modified
added a check to ensure the UTF8 key is present in the properties file to prevent runtime errors when the UTF8 key is missing
updated system output handling in TestReproduceMessage . java and modified test runner annotations in LuceneTestCase . java to improve output clarity and enhance test
added logging for long - press events for AllApps items to enhance user interaction tracking for better tracking of user interactions
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null log
added a condition to check if the sector preset is not null before showing sector land info to ensure that the satellite information is displayed based on the current
updated type casting in multiple classes to use generics for CompositeType to improve type safety and eliminate unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
improve error message when there be no nearbyrandom option .
remove temporarycache . remover ( ) , it ' s no longer need .
do n ' t show the create sql and wms layer container if the store be not a storeinfo
initialize Availability _ availability to Availability . UNAVAILABLE to ensure Availability _ availability defaults to Availability . UNAVAILABLE
updated synchronization logic in ` FetchInvDataMsgHandler ` , ` PbftDataMsgHandler ` , ` SyncService ` , and ` P
chore : update gapic - generator - java version from 2.1 . 0 to 2.16 . 0 ( # 51 )
updated the ` _ freeSpaceReclaimDisable ` and ` freeSpaceReclaimQ ` fields from ` boolean ` to ` int ` and modified
changed KDC _ OPT _ PROXIABLE and OPT _ REXIABLE flags from public final to private static final and updated
updated the assignment of the writer variable in Json . java to ensure the writer is set to null before assignment to prevent potential null pointer exceptions
corrected spacing and formatting in ProfilePager . java for consistency to improve code readability and maintainability
changed the paintBackground method from ` paintBackground ` to ` paintComponentBackground ` in the Slider class to ensure the correct background painting is applied
added a method to retrieve the value from a class constant in the Configuration class to improve property handling for object value constants
added logging for initialization failures in KafkaService to improve error handling and debugging for service initialization failures
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE set to include " usr / share / zoneinfo / tzdata " to enhance
make ' auto - create - channels ' option configurable for the message bus .
added keywords support in HTMLDocument and created a test for indexing keywords in TestDemo to enhance document indexing functionality and ensure correct handling of keywords
updated the SDK version check from S to R in FileUploader . java to ensure compatibility with the newer Android versions
modified the initialization of ` _ addresses ` in ` MemcachedSessionDataMapFactory . java ` to ensure that ` _ addresses ` is initialized only when
[ hotfix ] [ test ] fix compilation error in correspondencesubstitutionsubstitutionsubstitutionsubstitutionsub
refactor Builder class to improve code structure to enhance maintainability and readability of the code
improve error handling in isbntobibtexfetcher by use ebook . de instead of tungare . de
[ gr - 17499 ] increase the keepalivetime for polyglot to 10 second .
added null check for text before fireDataChangedListener to prevent potential NullPointerException when text is null
added option for simplified model and refactored the idea model to use rnnutils
added trimming of whitespace in SuffixURLFilter . java to ensure consistent formatting of input lines
added a check to return early if the player is in god mode to prevent processing when the player is in god mode
ggb - 164 textinputdialogw should unregister popup , not register it
removed the maximumSize parameter from the constructors of LinkedHashMapCache and BoundedLinkedHashMap to simplify constructor parameters and improve code readability
removed unnecessary call to _ channel . close ( ) in ChannelEndPoint . java to improve code clarity and maintainability
added null check for keyIndex and improved validation logic in FixAcidKeyIndex . java , modified KeyIndexBuilder initialization in OrcOutputFormat
updated exception handling to include Locale . ROOT in DirectUpdateHandler2 . java to ensure consistent exception reporting across different locales
fix bug in canonicalizerphase . setstorecheckguard ( ) , add setter for storecheckguard
do n ' t follow exception edge if there be no exception entry block .
fix view filter for non - voting clouds that have no classification
replaced ` BuildTarget . copyOf ( buildTarget ) ` with direct instantiation of ` buildTarget ` in multiple files to simplify code and improve readability
[ hotfix ] [ table - common ] fix typo in sqlrunner
changed the type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorageUtils
refactor DefaultSdkProvider to use a set for known SDKs instead of a single TreeMap to improve modularity and maintainability of the SDK
replace progressindicator with confidenceprogressindicator in createofferview .
updated user agent check from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 to align with the new
fix a bug where the builder ' s iterator could not be re - iterated if it ' s already complete .
add ` ` noflex ' ' and ` ` noflex ' ' view type to cullfundingchatadapter
replace ` memEncodeUTF16 ` with ` memEncodeASCII ` in LinuxLibrary and MacOSXLibraryDL classes to ensure compatibility with ASCII encoding
fix a bug in the EnglishGrammaticalRelations . java file that could lead to an out of bound exception
refactor the ` insert ` method to remove the ` canvas ` parameter and implement duplicate padding handling in ` TexturePacker . java ` to simplify
replaced the method ` getVisitors ( ) ` with a default ` apply ( RefactorModule < S , T > ) ` and refactor
added methods to retrieve children by name in Xml . java to enhance functionality for retrieving elements by their names
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of UTF -
added ` SystemUiControllerFlags ` annotation and modified ` UI _ STATE _ ALLAPPS ` and ` SystemUiController ` classes to utilize
removed the private ClientConfigurationService field from IntrospectingTokenService to streamline the service initialization process
updated the exception message in HiveRecordSet to include location and length information to improve debugging by providing more context about the error during the Hive split opening
removed the private byte [ ] ownerId from NodeEntry . java to streamline the code by eliminating unnecessary fields
corrected the configuration key from BackupSnapshotAferTakingSnapshot to BackupSnapshotAfterTakingSnapshot to ensure accurate ownership of backup snapshot
added score calculation in the merge method of TextFragment to ensure the score matches the fragment ' s score to improve accuracy in merging text fragments
removed the private Digester field from Md4PasswordEncoder . java to eliminate unnecessary dependency on the Digester class
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that maximumUnimprovedStep
added a check to return early if no editors are currently opened to improve performance by avoiding unnecessary processing when no editors are currently opened
replaced direct calls to ` verify ( ) ` with ` Mockito . verify ( ) ` in ` BDDMockito ` and added new test cases
updated ClassLoader initialization to use PathScanner . class . getClassLoader ( ) instead of Thread . currentThread ( ) . getContextClassLoader ( ) to ensure compatibility with
added a check for the type of codeFirstPojoClient before calling sayHi2 and modified the sayHi2 method to return a CompletableFuture to
add log to abstractsplitbrainprotectiontest to track failure
refactor logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the logout page generation to enhance security by preventing null
[ giac ] fix a bug in the calculation of ideal variable
added functionality to manage log consumers in DockerComposeContainer and created a new test class for it to improve logging functionality and ensure proper handling of log consumers
updated the generic type parameter in the testMapping method from ` Class < ? > ` to ` Class < ? > ` to improve type safety and
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to convert a ` Supplier < T > ` to a ` ThrowingSupplier ` to provide a way to
replaced a break statement with a return statement in ConsoleActivity . java to ensure the method returns a true value instead of breaking the loop
[ platform - http ] fix issue with restassured http response body be not send to the endpoint .
added platform - specific path handling in MorePaths . java and updated CopyStep . java and AarWithLibsIntegrationTest . java to utilize
added a null check for authorizationContext ' s params before processing to avoid potential NullPointerExceptions when params are not present
modified the load method to include a new method ` throwExceptionIfFail ( ) ` and added a new method ` throwExceptionIfFail ( )
updated SDK version from " 4611349 " to " 4514284 " and added new methods in ShadowTextToSpeechTest and Shadow
queuetransactionlog : add key to store the itemid and name in the log
added support for enabling SQL without a profile in JdbcEnvironmentProperties and JdbcEnvironmentRepository to improve flexibility in SQL generation by allowing users to disable the SQL
added a try - finally block around the write method call in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
fix compiler warning and use eventgenerator . fromfunction instead of supplier .
updated date formatting to use ` calendar ` instead of ` date ` to ensure consistent date formatting across different locales
updated loadValue method to include a stack trace depth parameter and modified getThreadInfo method to include a stack trace depth parameter to enhance thread information retrieval
added a new field ` prevTlogOnPrecommit ` and modified the sleep duration in ` LeaderTragicEventTest ` to improve transaction
updated FastAsyncWorldEdit version from " . net / job / FastAsyncWorldEdit - P2 - V6 / " to " . net
added a null check for the input path before creating it in SegmentGeneratorConfig . java to ensure the output directory is created if it does not exist
[ add ] objutils . calculatenormalnewell ( ) and fix triangulation helper .
updated the ` find ` method in ` JdbcAuditService ` to accept ` identityZoneId ` as a parameter to ensure accurate retrieval of audit events
refactor SpanCollector class to improve code structure to enhance maintainability and readability of the code
added a null check for the current session before accessing its session information to prevent potential NullPointerExceptions when accessing session information
refactored TransactionIsolationLevel class for improved transaction management to enhance performance and maintainability of transaction management
corrected the method name from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java ` to ensure consistency
added thread name to track the current thread in TestSession to improve clarity and consistency in thread naming
refactor CookieManager class to improve code organization to enhance maintainability and readability of the code
simplified the return statement in LauncherExtension . java by returning an empty ArrayList instead of generating a new one each time to improve code readability and
added a new instance of OverviewToAllAppsTouchController to the list to enhance touch controller functionality in the Recents UI
replace the ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` in ` LauncherState ` and ` WorkspaceState
updated DefaultStackTraceCleaner to exclude JUnitRule elements from stack trace filtering to ensure only relevant elements are filtered to the JUnitRule class
refactor MappedResizeableBuffer to use more descriptive buffer utility methods instead of using direct buffers to improve code clarity and maintainability by
added a private balanceListener variable and refactored its instantiation in DepositListItem . java to improve code readability and maintainability by reducing duplication
updated color conversion logic in RealisticRenderer to handle different edge modes to ensure proper color adjustment based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor and adjusted log initialization in multiple test classes to improve robustness by preventing null pointer exceptions and
fix gl200 protocol decoder ( fix # 118 )
updated playback timing logic in FullDetailsActivity . java to include a check for current playback time to ensure accurate handling of playback events during the refresh process
add support for elliptic token in the Spanish xml tree reader . patch by jbellis ; review by brandonwilliams for cassandra
added a condition to clear the language if the dc value is empty in InstallItem . java to ensure that the item ' s language is cleared for
updated the handling of the server ' s secure scheme in ReactiveLoadBalancerClientFilter and added a test for it in ReactiveLoadBalancerClientFilterTests to ensure
do n ' t duplicate bytebuffer when create batchdispatchrequest
make nativeimagedebuginfoprovider ' s fullfilepathfromclass static , so that it can be use outside the class .
replaced custom Correspondence implementation with a lambda expression for better readability to improve code maintainability and reduce boilerplate code
corrected the casing of " non - US " to " EN " in multiple files to ensure consistency and improve code readability across the
localtransactionsigner : fix nullpointerexception when redeemdata be null
add a MinecraftForgeClient class to provide a way to render the terrain image using the ITextureProvider interface
added a return statement to the TxCacheDB class to ensure proper termination of the method execution
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal ` in ` BoundMethodHandle . java `
updated the FastDictionary class implementation to improve performance and maintainability of the code
update nioconnection . close ( ) to properly close the iosession .
updated flight event values in FlightEventsTest . java to use new baseline values instead of fixed values to improve accuracy and accuracy of flight event calculations
[ beam - 11436 ] upgrade grpc to v1p26p0 .
replaced target ' s addNamespaceDeclaration method with newElement ' s addNamespaceDeclaration method to ensure correct handling of namespace declarations in the SaajS
add courseid and name to profile picture link in instructorfeedbackresultspagedata
added a shortRules list and modified defaultRules initialization in DefaultPasswordValidator . java , and updated the rule handling logic in DefaultPasswordValidatorTests .
simonstewart : make the ` ` retrievelastremotecontrollogs ' ' and ` ` capturescreenshottostring ' ' constant
removed JUnit test import and annotations from ProxyClassSerializationTest . java to streamline test execution by eliminating unnecessary imports
updated the ` scale ` and ` pad ` arguments in ` DLNAMediaInfo . java ` to include the ` format ` parameter to ensure
[ gr - 17499 ] introduce speculative guard movement phase in truffle implementation .
added checks to disable bean definition overriding in AuthenticationManagerBeanDefinitionParser to ensure proper handling of authentication managers in the application context
added conditional checks for ` _ host ` and ` _ server ` in ` ForwardedRequestCustomizer ` and updated test cases accordingly to ensure proper handling
added a call to sb . setLength ( 0 ) in ConsoleReader . java to reset the string buffer to zero to ensure the string buffer is properly
change visibility of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these fields for subclasses
update OpenIDE - Module - Specification - Version from 1.65 . 0 to 1.65 . 0 across multiple files to ensure compatibility with the
hbase - 16464 hbase . server . netty . tls . wrapsize should be configurable for hbase . server . netty . tls . wrapsize
refactor multiple Java classes for improved consistency to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to use JUnit 4 ' s Assert class instead of TestCase to improve test structure and ensure correct exception handling for small string
updated OpenSamlAuthenticationRequestFactory to allow custom protocol binding based on SAML2 POST and REDIRECT URIs to enhance flexibility in SAML authentication configurations
updated DepthController . java to use AttachedSurfaceControl for applying SurfaceControl operations to improve code clarity and ensure proper handling of surface control
updated the version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility with the
hbase - 13257 change the permission of prepreparebulkload and precleanupbulkload from write to create
updated subList parameters in TsFileManagement . java and modified measurement schema references in MergeTaskTest . java and MergeTaskTest . java to improve
camel - 14263 : file converter should convert body to inputstream so we can convert it to java . io
added login functionality to DefaultShardManager and ShardManager classes to ensure that the manager is only logged in if login is enabled
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
corrected the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to ensure consistency with naming
do n ' t terminate response if it be mark a failed
updated condition in FeedbackResponseCommentsLogic to include isUserStudent to ensure correct handling of student teams based on their giver status
added security checks for linked profile handling in BMPImageReader . java to ensure compatibility with Windows - specific profile handling
updated the parameter order in the setSimpleCuboid method calls in ClassicPlotManager . java to ensure correct positioning of the plot ' s
pmd : add wait message and clear wait message for file check
refactor HorizontalGridPresenter and VerticalGridPresenter initialization to use a dedicated method for setting grid presenter sizes to improve code clarity and maintainability
changed return values from false to true in ContributionsListFragment . java to ensure consistent behavior across the application
added a test for skipping a distinct query in DistinctPrefixFilterIT and modified filtering logic in BaseResultIterators to ensure accurate filtering of results
pdfbox - 4071 : add unit test for adrobatcheckboxgroup property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide functionality for retrieving the last modified timestamp of a file
added a check for the " metaTable " property in the HiveIcebergStorageHandler to ensure that the metadata table is valid before proceeding
replaced TextField with ComboBox for currency selection in CashDepositForm . java to enhance currency selection functionality by allowing users to select a default currency
catch throwable instead of ioexception in writeflusher . flush ( )
added a new boolean variable ` mStartedEnterAnimation ` and modified animation handling in ` IconRecentsView . java ` to improve animation control and
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the ` activeKeyId ` property for
updated action labels and method signatures in SendMailActions and SendMailActions for clarity and consistency to improve code readability and maintainability by using de
changed the ` isActive ` variable from private to volatile to ensure thread safety when accessing the ` isActive ` variable
fix order by expression context to use isasc ( ) instead of isdesc ( )
make sure tostring ( ) do n ' t throw arrayindexoutofboundsexception
added a check for the ownCloud app name in DisplayUtils . java to ensure the display only occurs for the ownCloud app
hbase - 20536 masterfilesystem . createdir ( ) should automatically automatically set the permission of the rootdir when security be enable
replace ` httpServletRequest . getLocale ( ) ` with ` httpServletResponse . getLocale ( ) ` in ` JakartaServletWebExchange . java ` and `
refactor Instant class implementation to improve code readability and maintainability
updated state format handling from int to String across multiple files to ensure consistency in state format usage across the application
removed unnecessary variable ' type ' from ticket logging in CentralAuthenticationServiceImpl . java to simplify log output for better readability and maintainability
added IllegalArgumentException to the exception check in PDICCBased . java to improve error handling by supporting additional exception types
removed unnecessary whitespace in AbstractFileResourceSet . java to improve code readability and maintain consistency
( chore ) camel - maven - plugin : align the base directory to the base directory
[ beam - 11436 ] move protobuf coder registration to extensions . protobuf
updated JpaQueryParsingToken to include a false parameter in HqlQueryRenderer and added a test for signed numeric literal in HqlQueryRenderer
[ jasonleyba ] set instance count and separation in rail guide for rail guide
removed the ` getNonceFactory ` method that returns ` null ` in ` BitmexStreamingExchange . java ` to provide a default implementation for
mailbinding : use placeholder instead of string concatenation
[ java ] use default _ timer _ interval _ ns instead of configuration . mtu _ length _ ns .
changed the ` initializeLoadedClasses ` variable from ` true ` to ` false ` in ` ScanSpec . java ` to disable loading of loaded classes
added a call to grab focus on the search field in FullTextSearchPanel . java to ensure the search field reflects the current focus state
refactored the initialization of NioParams in TlsConnectionLogging . java to improve code readability and maintainability
updated the assertion in StatementTest . java to use a random double value instead of a fixed value to improve test clarity by providing a more informative
updated assertion messages in TestSolrConfigHandler to include server URL as a parameter to improve clarity of test failure messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` mocks in ` CsrfWebFilterTests . java ` to
updated density handling in FilterResourcesStep . java to use a variable for fromDensity to improve code clarity and maintainability by using a more descript
added a private variable ` elementPrefix ` and refactored UI ID updates in ` ComponentGroup . java ` to improve code readability and maintain
removed densityDpi check from displayInfo rotation condition to simplify rotation logic for better readability and maintainability
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java for testing array copy lengths
added import for LuceneTestCase . AwaitsFix and annotated ReplicationFactorTest to address issue SOLR - 6157 related to issue SOLR -
fixed - rexecutorservice . schedule ( ) method throw npe if nextstartdate be null
refactor the logic for determining if credential needs to be updated in FileDownloader and FileUploader classes to improve code readability and maintainability by
added null check and closure logic for StoreFileScanners in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
[ hotfix ] [ network ] fix nullpointerexception in netmetrics
added a parameter for the nonce in the TokenMvcMockTests class and updated claims retrieval in TokenMvcMockTests to ensure that the nonce is correctly
refactor multiple editor classes to improve code organization to enhance maintainability and readability of the codebase
added methods to set the width and height of the form layer layer to ensure the layered form layer is visible for better user experience
updated import statements and added a method to calculate the maximum height of the owner to ensure proper height adjustment based on the owner ' s height
modified the ` openDatabase ` method to return a boolean indicating whether the database is connected to ensure that the dialog only closes if the database is
refactor Docker command handling to use Platform . DOCKER _ COMMAND instead of a static variable to improve encapsulation and maintainability
added a null check for the input stream in the initializeParameters method to ensure robustness by handling cases where no input files are found
updated the ` drawLeaveBehind ` method in ` TaskbarView ` and ` CellLayout ` to accept a color parameter for folder leaves
add a method to report canary incompatibility to the flutter studio to ensure compatibility with the Android Studio plugin
api : fix nullpointerexception in listidentityuuids api call
removed unused modulePersistEnable and modulePersistDisable lists and their getters and setter methods from StartArgs . java to streamline the code by eliminating
updated argument validation logic and corrected argument indexing in GeminiMarketDataService . java to ensure correct argument handling and improve error messaging clarity
replaced HashSet with LinkedHashSet for storing questions in VerifyPasswordResetRequestAction to ensure insertion order of questions in the flow scope
http : / / issues . apache . org / jira / browse / amq - 4263 - add unit test for realm base class
added exclusions for various JSP files in AuthCheckFilter . java to enhance security by preventing unwanted JSP files
refactor the handling of posted runnables in the Scheduler to use a separate method to improve code readability and maintainability by encapsulating
updated method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` to accept varargs as an argument to
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56265 -
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address overflow issues related to
updated arrow positioning logic in DeepShortcutsContainer to ensure correct positioning of arrows based on icon orientation
remove printstacktrace ( ) from thread . getentries ( ) and use iterators . values ( ) instead .
updated the ` updateThumbnail ` method to include a refreshView parameter to enhance thumbnail refreshing behavior based on the gesture state
pdfbox - 4071 : fix typo find by codespell on fossies . org
added check for the parent of the internetdomain in the hostname format specifier and added validation for the hostname in HostnameFormatSpecifier to ensure that the
removed unnecessary references to ` DrawerActivity . this ` in multiple activities to streamline code by eliminating unnecessary dependency on ` DrawerActivity `
refactor SizeBasedDocIdSet and related classes to use a consistent variable for the maximum document ID to improve code readability and maintainability by
added utility methods to prompt file selection in the FileDialoger class and updated the FilePanelEntry class to accept an existing file name parameter to improve file
updated widget span and minimum widget span values in AppsCustomizePagedView . java and refactored page count updates in AppsCustom
updated the FlightConfiguration class to retrieve and update component bounds based on active instances and contexts to improve the accuracy of bounding box calculations and ensure proper
rename ` seda : foo ` to ` direct : foo ` in test
added Locale . ROOT to DateTimeFormatter instantiation in TimeHelper . java to ensure consistent date formatting across different locales
[ ds - 4028 ] allow dspaceobjectconverter to filter out non - admin metadata
added a test method for handling missing dimensions and metric names in StarTreeConfig to ensure that the builder correctly handles cases where dimension and metric names are
camel - 14265 : camel - spring - boot - allow to configure recipient list via @ fluentarg
refactor InlineLayoutBox and HoverListener to improve parent hierarchy retrieval and repaint handling to enhance code readability and maintainability while ensuring proper repaint
refactor AuthenticatorActivity to use OperationsService instead of DetectAuthenticationMethodOperation to improve service handling and support for authentication methods
