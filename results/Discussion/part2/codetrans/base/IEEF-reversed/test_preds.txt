[ java ] use setremotehost and setport in socketappender to make it easy to configure .
refactor header handling in BasicAuthPlugin to use a dedicated method for better code organization to improve code readability and maintainability by reducing duplication
removed the reference to RecordDescriptor ' s msgLength offset in ManyToOneRingBuffer . java to simplify the code by directly accessing the message
cloudstack - 6519 : do n ' t set cpu / ram overcommit ratio when vm detail be null
added support for anti - aliasing in ShadowPaint and updated related tests in PaintTest to ensure proper handling of anti - aliasing behavior in paint
updated the title of MassSetFieldsDialog to use a localized string to improve localization support for field name management
do n ' t fail test if eclipse be not present
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 459 : do n '
added a new interface ` RemoteInputListener ` and implemented a ` onConnected ` and ` onDisconnected ` methods in ` RemoteInput ` to provide
removed unnecessary whitespace in OrcEncodedDataReader . java to improve code readability and maintainability
added a condition to check if the thing is enabled in the filter to ensure that only enabled items are processed in the handler
added null check before call removeAllPolicies and addPolicies in AuthorizeAdminServlet . java to prevent potential NullPointerException when bs is null
updated JSON assertion to use ` matches ` instead of ` isEqualTo ` for Java 9 compatibility to ensure consistency in JSON formatting across different Java versions
added JSON context and DAG information handling in TezTask . java to enhance debugging capabilities by providing detailed DAG information during execution
added methods to retrieve header and tag time in HprofHeap . java and updated time calculation in ComputedSummary . java to improve accuracy of heap
removed the RxJava2Tasks class and replaced it with CommonsApplication . getInstance ( ) . getMWApi ( ) . getUploadCount (
removed unnecessary condition checks in MVTable . java to simplify the locking logic and improve code readability
[ issue # 5782 ] fix bug in commitlog and defaultmessagestore ( # 5782 )
added a check to ensure the associated folder is not open before logging a message to improve debugging by preventing potential null pointer exceptions when the folder is not
added a test method to verify that PGProperty names are sorted in ascending order to ensure that PGProperty names are correctly sorted in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a description
changed parameter types from Object to ItemInfo in supportsDrop and getUninstallTarget methods to improve type safety and simplify intent retrieval logic
updated assertion in RequestBuilderTest to use isIn for consistency to improve readability and maintainability of the test code
replaced " RetainedFragment " with " NearbyListFragment " and updated related constants to improve code clarity and maintainability by using class
renamed the parameter from ' status ' to ' sessionStatus ' in the FlatProfileContainerFree constructor to improve clarity by using a more descriptive
added a new column ` sendZeroAnomalyEmail ` to the ` EmailConfiguration ` class and updated the email report job to skip sending emails
[ hotfix ] [ kafka ] fix deserialization bug in kafkaconsumerbase
added methods to retrieve user and geofence objects from the database to enhance data retrieval capabilities for users and geofences
added a constructor to BlockingResponseListener that accepts a maximum length parameter to enhance flexibility by allowing larger response sizes
[ java ] use byte [ ] instead of channeldata [ ] in mcastservice . memberbroadcastsreceived ( ) .
replaced System . out . println with logger . info for snapshot paths and added a try - finally block to ensure resources are properly closed to prevent potential
updated assertions in LoginSAMLAuthenticationFailureHandlerTest . java for consistency to improve code readability and maintainability
[ hotfix ] [ test ] fix typo in configmetadataprovidertest
updated imports in ListFragment . java and SnoozeActivity . java for improved clarity and consistency to enhance code readability and maintainability by ensuring
added a private static class AcceptAllFilter and refactored directory stream creation to use it to improve code readability and maintainability by reducing redundancy
refactor JdbcTestDataSet class for improved readability to enhance maintainability and facilitate future updates
make hotspotresolvedobjecttypeimpl . lookuptype ( ) throw noclassdeffounderror .
refactor Docker image validation to use a new class ` DockerImageName ` and update ` GenericContainer ` to use it to improve code clarity and
updated error messages in LoginActivity to reflect incorrect credentials to improve user feedback during login failures
add email . setautofocus ( ' ' autofocus ' ' ) to all form class .
added unit tests for SAML configuration and zone properties in SamlIDPRefreshMockMvcTests to ensure correct handling of SAML configuration properties for identity zones
added checks for non - empty and non - digit lists in ComparableVersion . java and implemented a corresponding test in ComparableVersionTest . java to ensure
updated mode settings and return values in Sheet . java and added padding and margin properties in UIManager . java to improve layout responsiveness and ensure
moved ` ParallelUniverse ` to the ` org . robolectric . android . internal ` package and updated related imports to organize test classes under a new
refactor constructor handling in LocalCacheFactory and NodeFactory to use a new method call to improve code clarity and maintainability by reducing redundancy
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to
added functionality to draw self - loops in the graph to enhance visual representation of self - loops in the graph
rename ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
added a line to set the drag handle indicator ' s translation Y to zero in AllAppsTransitionController . java to ensure the drag handle indicator
do n ' t log item / collection / community / item handle in log
updated query optimization configuration descriptions to clarify filter management during query optimization to enhance user understanding of filter behavior during query optimization
added an assumption to skip the ScanningAppProviderRuntimeUpdatesTest for non - OSX build server to address potential issues with the build server '
added Maven bundles for jetty - alpn - java - client and jetty - alpn - client in TestJettyOSGi
fix for act - 136 : do n ' t update processinstancelocktime in asyncrunnable
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
replaced ` @ CustomFieldBehavior ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude Genrule
simonstewart : make the firefox custom profile launcher work on window
added a check to ensure the entry in colFamToDynamicColumnsMapping is only added if it does not already exist to prevent potential NullPointerException
[ hotfix ] [ runtime ] fix nullpointerexception in hadooptupleunpackingiterator
added a check for client version and view type in MetaDataEndpointImpl . java to ensure proper handling of views based on client version and view type
update student cascade when a student be add to the account logic
removed unused import of TestCellReference from AllXSSFTests . java to clean up the code and improve readability
add a hardness check to the mantle physic to fix the physic terra shatterer not be able to
added a new file LongPointerPressTest3049 . java to implement a test for clicking on a form in a Codename One application
truffle : do not inline function inlining if the graph be too big .
refactor conditional statements in BaseBuilder and XMLConfigBuilder for improved readability to enhance code readability and maintainability by reducing redundancy
modified the indent condition in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to improve handling of code block indentation
added a new abstract class ` AbstractOptionalAssert ` and updated ` OptionalAssert ` to extend it to streamline the assertion logic and improve code organization
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily ignore tests related to issue # 1070
remove jsinterop testcase . savemessage ( string ) . tojsstring ( ) from testcaselogger
updated the closing brace in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the format is a video format before processing web subtitles to ensure that web subtitles are only processed for video formats
added security property " jdk . tls . disabledAlgorithms " set to " " in ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS
cloudstack - 6419 : do n ' t create vms for zone - specific vms in the same vm
refactor cache entry logging and improve log message formatting in Driver . java and QueryResultsCache . java to enhance readability and provide more informative
added ` maybeUpdateModel ( ) ` option to skip model updates in ` AddManagedDependency ` and ` ManageDependencies ` classes to improve model
added a test for ` lastIntentSenderRequest ` in ` ShadowActivityTest ` and implemented the ` send ` method in ` ShadowPendingIntent `
refactor rendering logic in RocketFigure3d to utilize GraphicsConfiguration for improved rendering control to enhance rendering performance and flexibility in graphical rendering
add dispose method to hydrawisecontrollerhandler to prevent memory leak
solr - 9893 : testcoreadminapis fail on java 9 because EasyMock do not work with java 9
updated year calculation in TimestampUtils and refactored local time formatting in SetObject310Test to improve date handling and ensure accurate local time representation
do n ' t try to disconnect a jabber connection if it ' s already close .
added " cur _ ws _ commit _ id " to the committed . ws _ table and cur . ws _ commit _ id in TxnHandler
replaced ByteChunk with ByteBuffer and updated related methods in BufferedInputFilter . java to improve memory management and handle BufferOverflowException more effectively
added a method ` toSync ( CompletableFuture < T > future ) ` to ` AsyncUtils ` and created a corresponding test class ` AsyncUtils
added ActionGraphBuilder to multiple compiler factory classes and updated method signatures accordingly to enhance the flexibility and maintainability of the compiler configurations
simonstewart : add a test for upload with hidden file input
removed redundant try - catch block for creating tables in SQLManager . java to streamline error handling and improve code clarity
added a check to return the local Maven directory if the file does not exist to ensure a valid local Maven directory is returned when the file does not
do n ' t show hidden label if they do n ' t start with hidden _ prefix
fix ( core ) : fix npe in ctelementimpl # getmetadata ( )
use addflags ( ) instead of setflags ( ) in defaulttrackoutput
do n ' t allow iterables to be reorder if the cache be not sorted by id
updated error message from " method call not specified for mock " to " missing method call for verify ( mock ) here " to improve clarity of error
added null check for backupFolder before logging expire information to avoid potential NullPointerException when accessing backupFolder
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the behavior of ` Array . newInstance ` with a void parameter to demonstrate the
added @ AddToRuleKey annotation to ToolType field in ClangCompiler . java and GccCompiler . java to indicate that the toolType
replaced hardcoded value ` 10000 ` with a constant ` PINCODE _ TIMEOUT ` to improve code readability and maintainability by central
prometheus : implement issampled ( ) for prometheusmeterregistrytest and prometheusexemplarssample
removed @ Ignore ( " requires mongodb server " ) annotations from multiple test classes to clean up the codebase and improve test coverage
( chore ) camel - kafka : fix test which fail on slow ci server
updated the condition to check for artifical tables in MetaDataSource . java to improve code clarity and maintainability by using a more descriptive
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
refactor session management logic to check for null or empty attributes before clearing and unsetting session attributes to improve code clarity and prevent potential null pointer exceptions
replaced ` surfaceHolder . setFixedSize ( ) ` with ` surfaceHolder . setSizeFromLayout ( ) ` in ` CameraSurfaceView . java
refactor the stopping CountDownLatch handling in AbstractConnector . java to improve code readability and maintainability
removed unnecessary whitespace in the method signature of HuobiStreamingService to improve code readability and maintainability
camel - 14263 : camel - history - use system . currenttimemillis ( ) instead of stopwatch ( ) in defaultmessagehistory
[ hotfix ] [ test ] fix delayedmonpublishertest failure
updated assertion in WebsocketTest to check for WebSocketHandshakeException before asserting it to improve error handling by providing a more informative failure message
refactor AllAppsTransitionController to use View . OnLayoutChangeListener instead of an anonymous inner class to improve code readability and maintainability by
refactor variable name from ' the ' to ' handler ' for consistency to improve code readability and maintainability
int - 179 add defaultoutputchannel attribute to xpathrouterparser
updated cacheSeconds from an integer to a String and modified related method calls in CasCoreWebConfiguration to enhance flexibility in cache duration configuration and improve
updated OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple Java files to ensure compatibility with the latest
removed the call to append ( buffer , true ) in ByteBufferPool . java to streamline buffer appending process and improve performance
added a check for the presence of " alt - rt . jar " in the boot class path to skip tests when the " alt - rt .
updated SQL queries in JdbcScimUserProvisioningTests to use upper case usernames instead of lowercase to ensure consistency and accuracy in user identification across different
replaced ` Arrays . asList ` with ` ArrayList ` and modified command - line options handling in ` FlightRecorderProfiler . java ` to improve flexibility and
added a method to check if the stream is empty in WebcamInputPanel . java and modified image drop handling in WebcamInputDialog . java
added a condition to check if the content view has content in HttpParser . java and implemented a chunked put test in ProxyServletTest . java
[ hotfix ] fix typo in atmosendpoint javadoc
added additional method checks for " println " , " printf " , and " print " in Java2TypeScriptAdapter . java to enhance method handling
added a new test class TestCapacityUntilGCWrapAround to verify that increasing metaspace capacity does not cause wrap around on 32 - bit platforms
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a condition to increment the end time when the resource is stamped at the start to ensure accurate tracking of the end time of the sampling statistics
added unit test base on user forum issue
updated error handling in JPEGImageReader to use processWarningOccurred instead of throwing IIOException and added a new test for invalid ICC _ PROFILE chunk
fix pick item not be able to be reequip when they ' re not in the world .
added checks to ignore entries in JoobyModule , SpringModule , and JoobyExtension to ensure registration only occurs for Config and Environment classes
use container . getparentclassloader ( ) instead of thread . getcurrentclassloader ( ) . getcontextclassloader ( ) .
bug 62045 - add support for update name from upgrade file .
added a new variable ` started ` to track the state of the ellipsoid region selector to ensure that the ellipsoid region selector
updated URLs from " http " to " https " in JavaSEPort . java to use a secure protocol for accessing the codenameone
[ geos - 10576 ] validate sortby attribute in wfs query for wfs query
changed the condition for determining the grantor value from ` equals ( null ) ` to ` null ` in ` AbstractJdbc2DatabaseMetaData . java `
added graphics configuration and compatible image handling in DiagramGenerationTest . java to ensure that the test verifies the image is compatible with the expected image format
throw a runtime exception when try to install the fml . class on top of the fml . class .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
fix flaky locktest . islocked ( ) test
added methods to tokenize a string and join tokens in StringUtil . java to improve tokenization functionality for better user experience
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 439 .
refactor command handling in SystemHighlighter to improve clarity and functionality to enhance code readability and maintainability by using a dedicated command index variable
updated version number from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " to reflect
updated buffer position assignment to use dimensionSize instead of idx to improve clarity by specifying the buffer ' s dimension size
added support for handling drag and drop functionality in the SystemUiProxy and TouchInteractionService classes to enhance the drag - and - drop functionality and improve
[ java ] add assume for socket traffic class in securesocketappendersocketoptionstest .
added a new cipher identifier " PSK - AES256 - GCM - SHA384 + TLSv1.3 " to the TestCipher class to
updated description retrieval from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java
added ` @ JsonProperty ` annotation to ` ScimGroupMember ` class to enable JSON serialization of the ` value ` property
updated HqlQueryRenderer to handle reserved words and added tests for function names to enhance query parsing capabilities and ensure correct behavior with schema scoping
[ hotfix ] [ runtime ] fix checkstyle violation in subscriptionhelper
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
updated the ` offsetStreamIndex ` method to include a new parameter ` indexStartsAtOne ` and adjusted its logic accordingly to enhance functionality by
tika - 697 : add support for cpio mime type in magicdetector .
[ hotfix ] [ table - planner - blink ] remove unused method in flinksqloperatortable
added inheritance support to OneTimeTokenAccount and OneTimeTokenAccount classes to enhance object comparison and string representation for better data integrity
added a condition to check if the assistant is not launched during fling to ensure that fling only proceeds when the assistant is not launched
added a new file SolarisShortDSA . java that implements a DSA key pair generation and verification to address a Solaris - specific bug
added toggleSearchLabel ( false ) method call in ListFragment . java to disable search label functionality for better user experience
cloudstack - 6253 : do n ' t try to create a snapshot on a primary / secondary volume if the snapshot be create on the primary
refactored the ` DetailsServiceConnection ` to use a dedicated ` DetailsServiceConnection ` class to improve code organization and ensure proper cleanup of the
refactor SSLPeerUnverifiedException handling in HttpClientTLSTest to use AtomicReference to improve clarity and ensure proper assertion for SSL peer unverified exceptions
removed the equals ( Object o1 , Object o2 ) method from ConjunctionScorer . java to streamline the code by eliminating unnecessary
added error logging for colliding items in Launcher . java to improve debugging by providing feedback when binding fails
add random commit timeout to metadataraftgroupmanager . waitforleaderelection ( ) test
updated cache size thresholds and improved logging behavior in DefaultCache . java to enhance cache management efficiency and provide clearer warning messages when cache size exceeds
updated API endpoint from " / api / v2 " to " / api / v3 " and adjusted related logic in multiple files to align API
added a method ` empty ( ) ` to check if the object ' s size is zero to provide a way to check if the object is empty
added null checks for page data in AsyncPageReader and updated test cases in TestEmptyParquet to address DRILL - 8023 and improve
updated argument validation and method signatures in SerumStreamingService . java to improve argument validation and ensure proper type handling for market data types
add a config option to disable the charge animation when an item be charge on top of a mana pool
[ java ] do n ' t throw timeout exception when cluster be restart due to timeout .
updated catch block to use ' ex ' instead of ' ignore ' for catching InterruptedException to improve error logging and provide more informative error messages
refactor DefaultServletTest to use assumeTrue for directory creation and assertion checks to ensure compatibility with the filesystem and improve test reliability
removed duplicate calls to ` openScreenStyle ( ) ` and ` openScreenStyleScss ( ) ` in ` ResourcesInjectorFull . java `
updated ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for change log and
refactor equality check in BlockWorldVector to use getX ( ) and getY ( ) method to improve code readability and maintainability
updated LongConcurrentLRUMap to enforce immutability and changed CacheEntry fields to final to enhance immutability and enforce immutability for better
updated regex handling in ReflectionProcessor to quote strings before adding them to resourceConfiguration to ensure proper handling of regex literals in resource configuration
updated the method of retrieving the KRB5CCNAME environment variable and modified the EmptyCC argument handling to improve cache initialization logic and enhance error handling
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
updated the ` hasSufficientPeers ( ) ` method to use ` Synchronizer ` ' s ` Synchronizer ` and modified the
[ java ] fix checkstyle violation in webdriverservlet
do n ' t expand ` ` equal [ x , y , z ] ' ' and ` ` equal [ x , y , z ] '
added a check to clear pending rendering operations if it exceeds 20000 and is minimized to ensure that pending rendering operations are only cleared when minimized
fix hazelcasttestsupport . sleepmillis ( ) to only sleep if the deadline be meet .
fix writebehind write - behind write - behind write - behind write - behind ( # 11818 )
added a line to set the icon to null in GroupTreeCellRenderer to save space for better readability
updated test method names from ` testRedirectMatches _ strict ` to ` testRedirectMatches _ default ` and ` testRedirectMatches _ nonstrict `
updated ShutdownMonitor and ShutdownMonitorTest classes to improve test clarity and functionality to enhance test coverage and ensure proper resource management during shutdown
do n ' t use auto compact fill rate if there be no persistent data
refactor field retrieval and caching logic in mmm Json . java and ppp Json . java to improve code readability and maintainability by reducing redundancy
[ hotfix ] move componentclosingutils to coordination
server : do n ' t try to delete volume while transition to error state
server : fix ip address for vlan r2 ( # 5382 )
renamed ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeUserDetailsBeanManagerConfigurer ` and ` InitializeAuthenticationProviderBeanManagerConfigurer
increased the retry timeout from 15000 to 30000 milliseconds in the getLeaderRetry method to allow more time for the leader to recover from failure
refactor error message method signatures to remove unnecessary parameters to improve code clarity and maintainability by eliminating unnecessary parameters
updated drawImage parameters in URLImage . java to correct positioning of images to ensure proper rendering of images with negative coordinates
updated the field comparison check from solrDocument1 to solrDocument2 to ensure the correct document comparison is performed
refactor item check to use a dedicated method for clarity to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ stream ] add original exception to streamtaskexception
refactor tag processing logic in Preprocess . java to improve clarity and functionality to enhance readability and maintainability of the code
updated formatting of the read method in MessagePack . java to improve code readability and maintain consistency
added a new annotation ` Mapper ` in the ` org . apache . ibatis . annotations package to provide a structured way to specify a default value for
do n ' t encode empty ` ` { } ' ' extension list
updated regex patterns in Artifact . java and LibraryManager . java for consistency and clarity to improve code readability and ensure proper handling of external meta entries
added alias " node _ popup _ scripting " to the entryNavigator to enhance the functionality of the scripting menu in the application
removed HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants , added alpha animation duration
camel - 14284 : camel - jms should use type inference to avoid cast exception
removed unnecessary ` throws IOException ` declarations from method signatures to improve code readability and maintainability
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove obsolete components to clean up the codebase
updated ` GzipHandlerTest ` to use ` final ` modifier for ` content ` and added a new ` MicroServlet ` for handling micro -
fix onsubscriberedo to use backpressureutils . getandaddrequest ( ) instead of consumercapacity . getandadd ( )
added logging functionality and improved formatting in SpeedmentImpl . java to enhance debugging and traceability of component lifecycle events
[ ds - 2604 ] add load config to oai module to allow to load configuration from servlet context .
updated matcher logic in StoreScanner . java and modified test cases in TestWideScanner . java to improve performance by avoiding unnecessary resets and ensure accurate
camel - 14284 : camel - test - infra - karaf : enable / disable jmx for camel test
replaced hardcoded ' / ' with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation . java `
added YARN binary path configuration and improved application info printing in HiveConf . java and RemoteSparkJobMonitor . java to enhance the application '
added support for " maria " database type in the DbConnectionManager to ensure compatibility with additional database types
[ hotfix ] [ table - common ] fix log format in splitlogmanager
added a new test class ` ExecuteAndReturnStringTest ` to test the functionality of ` ExecuteAndReturnString ` to ensure proper handling of network
added a new file ` InvokespecialInterface . java ` implementing an interface with a default method and a class ` C ` to demonstrate the use of
refactor EvictingBoundedList class to improve eviction handling to enhance performance and maintainability of eviction logic
bugfix : do n ' t use encodingmanager if need turn cost support
added a check for backgroundDisabled in SelectBox to ensure selection is non - negative to prevent illegal argument exceptions when the selection is invalid
hbase - 25836 rpcserver . getmethod ( ) should throw exception if rpcserver . getmethod ( ) return null
updated hotseat cell size calculation to include border spacing to improve layout responsiveness based on available width and number of hotseat icons
refactor partition handling in ExpressionTree . java to use values . get ( " partitionColumnIndex " ) instead of separate substring operations to improve code
added versioned interface to namedtaskdecorator and taskdefinition to make it compatible with cluster v4 .
updated directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure the correct
changed the default value of the ` equal ` variable from false to true and updated the comparison logic to ensure that the equality check accurately reflects the intended
fix for iso - 8859 - 1 and iso - 8859 - 1 in unicode to latex formatter
fix a bug in the oaicrosswalk that cause the crosswalk to fail when the value be null .
simonstewart : do n ' t select the last frame in webdriverbackedselenium when the window handle be the same
added a clear button to the DataBrowser component and modified the BookmarksPanel to exclude the BOOKMARKFILE _ EXTENSION check to improve
updated the URL construction in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building the base URL to improve URL handling for HTTP and HTTPS
updated date assertions and error messages in SoftAssertionsTest . java to improve accuracy of date comparisons and enhance readability of error messages
modified the ` adaptOrders ` method to include a ` reverse ` parameter and adjusted the array handling for limit orders to improve order adaptation logic and
added a null and position check for vartype in PrettyPrinter . java and created a new Java11Var class with a test case to ensure correct
simonstewart : remove unused import , remove unused import
updated configuration initialization to set a default value to false and removed redundant property check in HiveConf . java to improve configuration flexibility and reduce unnecessary debug output
replaced ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha ) ` in WidgetGroup .
added unit test base on user forum issue
replace usage of ` Globals . Globals ` with ` getCatalinaBase ( ) ` in multiple Java files to streamline code and
added tests for ` getBestDateTimePattern ` in ` ShadowICUTest ` and modified the skeleton pattern handling in ` ShadowICU ` to
updated color mapping in PlotSquared . java to include new color values to enhance visual consistency and clarity in color representation
added ZuulProperties filter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance configuration flexibility by allowing Zuul properties to be
tika - 1342 : add test case to ensure that the metadata contain the correct time zone .
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) ` to
updated the calculation of ` xDist ` in ` PagedView . java ` to use the absolute value of ` mScroller . getFinal
deleted the GUIRWTester . java file to the functionality was deemed unnecessary or redundant
updated method signatures in LazyMessage and related classes to use String instead of @ NullableDecl to improve type safety and eliminate unnecessary null checks
updated the error message format in TestStream . java to include a placeholder to improve readability of the error message for better debugging
change package to org . thymeleaf . templateparser . markup so that it can be use from other package .
added a new test method ` testXPathString ` to ` XPathTest . java ` for XPath evaluation to ensure that the XPath expression functions correctly
added @ Nullable annotation to FutureUtils . java to improve code clarity by indicating that the method may return null
[ java ] warn if dynamicinvokeexpr be not resolve during call graph construction .
updated email addresses in ContextTest . java from " myfakeemail @ gmail . com " to " myrealemail @ example . com
updated the error response format in HttpConnectionTest . java and modified URI parsing in URIUtil . java to improve error handling and ensure correct URI decoding
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` and ` ResultTableResultSet ` classes to provide a consistent way to retrieve column data
make dynamodbserviceclientconfiguration default and throw unsupportedoperationexception instead of throw an unsupportedoperationexception
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
use java . time . instant instead of java . time . currenttimemillis ( ) .
added version handling and updated debug logging in LibMediaInfoParser . java to ensure compatibility with the latest MediaInfoLib features and options
added methods to create proxies for IdeaDependency instances using Java ' s Proxy class to enhance proxying capabilities for improved dependency management in the project
added a new file ` SerialHeap . java ` and updated references in the ` Universe . java ` to use it instead of ` GenCollect
added multiple @ SuppressWarnings ( " serial " ) annotations in GsonTypes . java to suppress serialization warnings related to serialization in the code
fix mouse wheel event and add mouse position to mouse wheel event
datamongo - 1608 - handle case insensitivity with null value in findbyfirstname
[ hotfix ] [ table - common ] add multiset type information to maptypeinfo
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving identity providers by issuer to ensure that only unique OIDC
fix parsing of cmap file with bunch of whitespace . patch by jbellis
refactored the expiration handling in ContactsBackupJob to use a dedicated OperationsService class to improve code organization and ensure proper service management during file
refactored type constraints and added a new class T6938454a and T6938454b to improve type inference logic and enhance type
add isconfighidden ( ) method to accountlist and add it to protocolproviderfactory and accountlist .
added a condition to check for inconsistent display sizes in DisplayController . java to improve error handling for inconsistent display configurations
updated schema removal logic in PMetaDataImpl . java and added a test case in PMetaDataImplTest . java to ensure proper removal of schemas
ggb - 147 : do n ' t fire a passive login event when a user be login passively .
added a new file ` Box2DTest . java ` and modified ` GDXTester . java ` and ` Box2DTest .
patch by jbellis ; review by gdusbabek for cassandra - 119
[ hotfix ] [ runtime ] change default buffer request timeout from millis to minutes
added default generator name and version constants to SpeechSettings . java to enhance clarity and maintainability of the codebase
added a help button to the OpenOfficePanel to provide users with information about the OpenOffice integration process
[ java ] add child option for netty so _ reuseaddr , so _ reuseaddr , so _ reuseaddr , so _ reuseaddr , so
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService to use wildcard
refactor class loading logic in ScanResultObject . java to use a transient Class < ? > reference to improve performance by avoiding unnecessary type casting
refactor connection handling and response redirection in DecodeServlet . java to improve code readability and maintainability by reducing redundancy
added null handling functionality to Querydsl and created a new QuerydslIntegrationTests class to enhance query performance and ensure proper handling of null values
added null check for actor in ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions when processing actions
reformatted code in CtTypeTest . java for consistency to improve code readability and maintainability
added synchronized block around bucket writers in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new file ` Issue888 _ JavaI . java ` implementing ` Issue888 _ JavaI ` and its implementations to implement and test
added a new command to revoke an existing SSL certificate in CertificateManager . java and implemented a corresponding test in CertGenerationTest . java to enhance
added a new test for handling cases where no body responses are present in AbstractHttpTest . java to ensure that the server correctly handles cases where no
refactor script handling in ScriptTransformer . java to improve error messaging for missing scripts to enhance clarity and maintainability of error messages related to script execution
added support for HikariCP connection pooling type in Hive configuration and improved exception handling in TxnHandler to enhance connection pooling flexibility and
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to standardize
added file lock and unlock functionality to the FileMenuFilter and updated OCFileListFragment to handle lock and unlock states to improve user experience by
refactor version handling in mmm Version . java and ppp Version . java files to improve code readability and maintainability
clear endpoint cache when update a keyspace . patch by jbellis
refactored thread state handling by introducing a new method ` waitForState ` to improve code readability and maintainability by reducing duplication
updated methods in SkylarkDescription , SkylarkDescriptionArg , SkylarkRuleContext , and SkylarkRuleContext to include dependency
simonstewart : make it easy to extend the storage interface
added null check for existing view before checking for new row type in PlanExecutor . java and modified test assertions in CreateViewStatementTest . java to
updated exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error reporting for file segment generation failures
updated the SpellCheckComponent to retrieve the query string from the resource bundle if it is null to ensure the query parameter is only retrieved if it is
added validation for header values in mmm Headers . java and ppp Headers . java to ensure header values contain valid characters and whitespaces to prevent runtime errors
refactor instance size handling in HybridLayout and HostedInstanceClass to use arrayBaseOffset instead of instanceSize to improve clarity and maintainability
[ apex ] refactor commentcontainer to use abstractpexcommentcontainernode instead of abstractpexcommentcontainernode
hhh - 11718 add log for lazy fetch mode .
refactored ` NoGetOperationsFilter ` , ` NoUserOperationsFilter ` , and ` RemoveInternalParamsFilter ` classes to extend ` Abstract
added assertions to verify database and table names in TestCompactionTxnHandler and set them in TxnHandler to ensure correct retrieval and setting of database and
camel - 14297 : camel - timer - should not throw exception during graceful shutdown . thanks to martin berg for the patch .
added a condition to check if a block is processed before adding traces to ensure traces are only added if the block is not processed
refactor ProviderManager to use CollectionUtils for null checks to improve code readability and maintainability
simplified the database type check in InsertOrUpdateGeneratorPostgres . java to simplify the logic for determining if the database is PostgresDatabase
added SQL queries for local index limits and introduced a constant for local index limit in BaseResultIterators to improve query validation and ensure correct handling of
add collection compatibility check to altertablestatement . addcollection ( )
updated cursor positioning logic in VDUBuffer . java and modified cursor handling in vt320 . java to improve cursor positioning accuracy and
removed the constant USE _ RETRIES from HttpShardHandlerFactory . java to simplify the code by eliminating unnecessary constant
updated the regex pattern in JavaVersion . java for version parsing and added a test for JavaVersion . parse in TestJavaVersion . java to ensure
[ hotfix ] [ runtime ] do n ' t run task if there be no input gate
added a new test method ` test ( ) ` to the ` TestReceivingMessageSourceParserTests ` class to ensure that the ` test
added null check for properties in RemoteCluster . java to avoid potential NullPointerException when accessing properties
updated IOException handling in FileSystemBlobStrategy to include the cause of the IOException to improve error handling by providing more context in the exception
updated the error message from " rolling upgrade to " stack upgrade . " in multiple classes to accurately reflect the purpose of the upgrade process
remove duplicate txconfidencelistener from walletservice . addtxconfidencelistener ( )
added a constant G1 Perm Gen and a constant G1 _ PERM _ GEN in JmxSupport . java to support G1
removed unused imports and simplified return statement in NearbyController . java to streamline dependencies and improve code clarity
pdfbox - 4071 : make clonefornewdocument public , a suggest by valerybokov
updated the condition to check for home activity type in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activity scenarios during swipe
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and constants to improve clarity and consistency in naming convention
updated method names and string handling in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and ensure case - insensitive
added a method call to set the unfreeze amount in UnfreezeBalanceV2Actuator . java to ensure the unfreeze amount is correctly
updated penalty descriptions in ConferenceSchedulingXlsxFileIO . java to use " per match " instead of " per minute " to improve clarity
firefox profile : use fileutils . copydirectory instead of file . copy
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
refactor Observable class to improve code readability to enhance maintainability and facilitate future updates
replaced direct DBObject handling with a multi - field operation in Update . java and added new test cases in MongoTemplateTests . java to enhance functionality
added a null check for randomUUID before setting it in MockHubService to avoid potential NullPointerExceptions when setting the UUID
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve user interaction by dispatching motion events when hovering is enabled
added a check for the " boostrap _ conf " configuration and a sleep delay in CoreContainer . java to ensure that the boostrap configuration is
( chore ) camel - netty4 - camel - netty4 - camel - netty4 - camel - netty4 - camel - netty4 -
updated HBASE _ CLIENT _ RETRIES _ NUMBER from 5 to 35 in HBaseTestingClusterAutoStarter . java and HBaseTesting
updated the way the template file is created by using ` File . separator ` instead of ` toPath ( ) . toPath ( ) ` to
make encodedgraphcachetest more robust to fail on slow machine
updated query command in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " customer _ count " and added a new test
added functionality to convert KrakenAsset codes to currency metadata in KrakenAdapters . java to enhance currency management by associating currencies with their scale
added a ` toString ( ) ` method to ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to
replaced direct calls to entry . getKey ( ) with dimensions in AlertTaskRunnerV2 . java to improve code clarity and maintainability by using a
[ influxdb ] fix npe in influxdbpublisher
updated method names from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in the codebase
[ hotfix ] [ network ] do n ' t filter ip address that be unique .
added a method to quote column names in DataTextFormatter . java to ensure that column names are properly formatted in the output
added methods for setting system properties and getting properties in WrapSystem , StrUtils , and CompileMethodEntity classes to enhance system property management and improve method
added a constructor to the UpdateRequest class that accepts a URL parameter to initialize UpdateRequest with a default method for HTTP POST requests
removed the static modifier from the EnumSerialization enum in ProtoTypeAdapter . java to improve code readability and maintainability
added a new method ` addExperimentalFormatWarning ` to ` RequestHandlerUtils ` and invoked it in ` DataImportHandler ` and ` Replication
updated logging statement to include a formatted string for module names to improve readability of log output for better debugging
increase row height of attributeregistrytable , conditionalstyletable , filerevisionsdialog , manageaddonspanel and manageaddonspanel
[ hotfix ] fix checkstyle violation in brokerliveinfo
[ hotfix ] [ table - common ] fix npe in cqlinputformat
removed unnecessary image check in JUnitTestsShouldIncludeAssertRule . java to simplify the condition for better readability and maintainability
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to ensure proper comparison and hashing of RuleTerminalNodeLeftTuple instances
added import for StageIDsRearranger and applied it to resolve StageIDsRearranger when HIVESTAGEIDREARRANGE is set to
fix mbean name for messagingservice . patch by jbellis ; review by brandonwilliams for cassandra - 118
update memory consumption logic in LotsOfOutput . java to improve memory management clarity to enhance debugging by providing clearer memory usage insights during execution
added imports for Document and Document in multiple Java files to enhance documentation clarity and maintain consistency across the codebase
renamed ` anonymousReadOnly ` to ` anonymousReadOnly ` and updated related methods in ` LdapProperties ` , ` LdapAutoConfiguration ` , ` LdapProperties
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ test ] fix checkstyle violation in exampleechopipelinetest
added a ` finishMocking ` method to ` MockitoSession ` and modified the ` DefaultMockitoSession ` to handle throwables to improve mock
refactor dependency handling in GoTestDescription . java and add new test cases in GoTestIntegrationTest . java to improve test coverage and ensure correct functionality
refactor SPDYAsyncConnection to use readBuffer , writeBuffer , and writeHandler instead of flushing and flushing to improve buffer management
blockliquidwrapper . getliquidblock now use blockflowingblock instead of blockstaticblock .
updated intent handling in AndroidLocationPlayServiceManager and modified data retrieval in BackgroundLocationHandler to improve location data retrieval and ensure correct location listener instantiation
fix typo in javadoc of aprendpoint .
[ hotfix ] [ table - planner - blink ] handle streamingplan in clifrontend
make craftingmanager more efficient by use computeifabsent instead of computeifabsent
flume - 136 : fix test failure cause by force checkpoint .
removed unnecessary condition checks in TabsAndIndentsVisitor . java to simplify code logic for better readability and maintainability
added a regex pattern for matching pg _ temp _ . * files in NeuteredLinesFilter . java to enhance filtering capabilities for temporary database files
chore ( regen ) : update sample code to set total timeout , add api client header test
added conditional checks for " INTERVAL " and " NCLOB " types in DataTypeFactory and updated condition checks in ColumnSnapshotGenerator to improve
[ wavefront ] do n ' t flush histogram when not publishing histogram
added a timestamp to the DivideUpstream configuration in ShenyuClientRegisterSpringCloudServiceImpl . java and updated the DivideUpstreamUtils .
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to provide a mechanism for registering sensors with appropriate latency limits
added SSL connection logging and HTTP method and URI handling in HttpServerTestBase and SelectChannelServerSslTest to improve error handling and logging for SSL connection issues
camel - 15836 : camel - jbang - use osgi karaf version for camel - ignite and camel - jb
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 486 : do n '
pdfbox - 4071 : catch all exception , a suggest by valerybokov
added unit tests for setting display header capabilities in ShadowDisplayTest . java to ensure correct behavior and error handling for HDR capabilities across different Android SDK
added a finally block to reset the classLoader to null to ensure proper resource management and prevent memory leaks
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve debugging and provide clearer context for exception handling
added a default constructor to the Message class to ensure proper instantiation of the Message class
do n ' t report non - serializable bug for java . awt . component .
refactor PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and update BigDecimal conversion logic to improve type safety and enforce precision scaling for decimal values
changed the type of ` gzipstream ` from ` GZIPOutputStream ` to ` OutputStream ` and modified the gzipstream initialization logic to ensure that the output
corrected the spelling of " WWWW " to " authenticateHeader " in the Authenticator class to improve code readability and maintain
removed specific checks for specific file types in DCD . java to streamline the code by eliminating unnecessary checks
updated ThreadLeakTest to use a new method for retrieving the thread group name to improve clarity and maintainability of thread name retrieval logic
added logging functionality to the MethodInvocationPrivilegeEvaluator class to improve error handling and debugging visibility during access decision processing
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools
updated import statements in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy to improve code clarity and reduce unnecessary dependencies
cloudstack - 10715 : add disk path for user vms in the listvirtualmachines command
refactor SigInt and SigIntTest to simplify handler management and improve test clarity to enhance code clarity and ensure proper exception handling during signal
replaced a static import of ` ArrayUtils . isEmpty ` with a method call to ` ArrayUtils . isEmpty ` in ` NodeTool . java `
replaced ` @ ContextConfiguration ` with ` @ SpringBootTest ` and added ` @ EnableAutoConfiguration ` annotation in ` AxonAutoConfiguration
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
remove deprecate planningvariabledescriptor # setresetinitializedplanningentities ( false )
added a ` setBuildTimeMs ` parameter to the ` TwoLevelArtifactCacheDecorator ` and ` ManifestRuleKeyManager ` classes to enhance the
updated the GroupByOperator to use getDeclaredFields ( ) instead of getFields ( ) and modified the condition for fixedRowSize calculation to ensure correct field
added null check for the block before adding block appearance in Wallet . java to avoid potential NullPointerException when the block is null
added new currency pairs CNC _ BTC and CNC _ BTC to the currency pairs and updated related code to support trading functionality for China
updated skewAllowance value from 5 to 15 and refactored related methods to use CasConfigurationProperties to enhance flexibility in handling skew allowances
added sorting functionality to songs in SongListActivity and updated Utils to use SortName instead of null to improve user experience by allowing sorting of songs based
removed unused imports and refactored the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to streamline the code by eliminating
move legacybaseblockwrapper to legacybaseblockwrapper so it can be use by other block .
refactor Iceberg branch creation logic to check for tag existence before retrieving snapshot ID to improve error handling and ensure accurate snapshot ID retrieval
replaced ` newArrayList ` with ` Collections . singletonList ` in ` setExternalGroupsWhitelist ` method to improve code readability and maintainability by using a
fix ( demo ) : fix crash in photon demo
updated password change validation logic in IdentityProviderEndpoints . java and added logging statements in IdentityProviderEndpoints . java to improve error handling and provide clearer
added removal of notInitializedInConstructors from notInitializedInConstructors to ensure only non - reflective constructors are processed
modify DatabaseException to set the connection URL to " CLOSED CONNECTION " if the connection is closed to improve error handling by providing a clearer
( chore ) camel - springmvc : add a test for require body in the rest template
updated regex patterns for user and password patterns in CredentialInjector . java and modified test cases in CredentialInjectorTest . java to ensure consistency in
added a new menu item " Item4 " and a key binding for the " Enter " key in ActionListenerCalledTwiceTest . java to
updated print statements in TestCoreParser . java to include query class name and conditionally check for produced results to improve clarity of test output and ensure
updated equality check in SimpleNode . java to use ' id ' instead of ' children ' to improve clarity and correctness of equality checks
removed the public modifier from the class declaration in PopulatorContextStackItem . java to restrict access to the class for better encapsulation
updated the method for retrieving document count and added a small sample test in the MoreLikeThis class to ensure accurate document count retrieval and enhance test coverage
refactor the loop structure in QuestManager . java to improve code readability to enhance maintainability and clarity of the code
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated query append calls in MongoSessionDataStore . java to use append ( ) method to improve query performance by avoiding unnecessary object creation
added a new native method ` unsafeGetLong ` in ` CompilerDirectivesSubstitutions . java ` to handle unsafe long retrieval with specific macros
updated time zone data for " Asia / Amman " from ARAST to EET across multiple language files to ensure accurate representation of the time zone
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to correct the logging identifier for better clarity
hhh - 16464 - handle jdbcexception in sessionimpl . getlockonly ( ) in case of transactional rollback
fix a bug in the downloadexternalfile . getexternalfiletypebyextension ( ) method that return an empty string instead of null .
disable screen menu bar on macosx for macosx
ca : add piecewise integration test for ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected in `
added modWhiteListPattern assignment in HiveConf and a new test for configuring white list in TestJdbcWithSQLAuthorization to ensure correct handling of
removed the entry mapping for invalid classes in EntryLoader . java to streamline the class loading process by eliminating unnecessary entries
updated the method call to use the player ' s team instead of the sharded team to ensure the correct player ' s team is used for finding
updated the domain used in the CookieImplementationTest from " comp1 " to " domainHelper . getHostName ( ) " to ensure the test uses the
added nullable validation logic in multiple change generator classes and modified logic in ColumnSnapshotGenerator and ColumnSnapshotGenerator to improve column validation handling based on search conditions
refactor multiple security - related classes to improve code organization and maintainability
added methods to delete a query and query a document in CustomCollectionTest . java , and refactored separator handling in CompositeIdRouter . java
added snapshot handling functionality to ExecutablePreparedStatementBase and updated dependenciesChangeLog in PostgreSQLIntegrationTest to improve data management and ensure compatibility with Post
updated conditional checks for cache and file sizes in DefaultServlet . java to improve cache handling logic and enhance code readability
added drag and drop functionality in the JabRefFrame class to enhance user interaction by allowing drag and drop of data formats
updated description creation and assertions in ExecutionUnitRunner and ExecutionUnitRunnerTest classes to improve clarity and accuracy of test assertions
replaced ` isEmpty ( myVersion ) ` and ` myVersion ` with ` StringUtils . isNotEmpty ( buildTimeString ) ` to improve code readability
removed the ' public ' access modifier from several methods in TimeUtils . java and added a test class for it in TimeUtilsTest . java to
removed the initialization of " jdk . reflect . useDirectMethodHandle " and refactored class name checks in RefectionMHTests . java
updated file extension check from " . jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with file extension requirements
do n ' t use method . format ( ` ` % h ' ' ) in debuginfoprovider
added a new ` getIcon ( ) ` method to multiple ` Data ` classes and updated ` ClassDisplayed ` to ` NODE ` in ` DataTableTop
added a null check before retrieving the last character in the request name to avoid potential NullPointerExceptions when retrieving the name
updated the FindAndReplace class to handle dollar signs correctly and added a new test for dollar signs to ensure proper handling of dollar signs in replacement strings
fix npe in smackpacketdebugger when connect to a non - jabber server .
refactor SchemaExtractionProcessor class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` copyDir ` to the ` IO ` class for copying directory contents to enhance file manipulation capabilities by allowing directory - based copying
added exception handling for unknown datum classes in JacksonUtils to improve error reporting for unknown datum types
refactor ABI handling in DefaultJavaLibraryBuilder to use new methods for retrieving class and source ABI jars to improve code clarity and maintain
removed background padding calculations in SelectBox . java to simplify height calculation for better readability and maintainability
added normalization of identifiers for dbName and tableName in ObjectStore . java to ensure consistent naming conventions for database and table names
added schema handling for oracle databases in DbSqlSession . java to ensure default schema is set when the database type is " oracle "
removed the logout call from the HomeFragment to simplify the logout process by directly closing the activity in the finish method
[ hotfix ] [ test ] fix test failure in mockstreamingruntimecontext
added null check for candidates in FastImportAction . java to avoid potential NullPointerException when accessing candidates
updated the logic in ContainerLifeCycle to use a boolean variable for managed state to improve readability and maintainability of the code
rename iexecutionattributesdialect to iexecutionattributedialect for consistency
added a call to metadata . clearUnsafe ( ) in AlterTest . java to ensure proper cleanup of unsafe metadata during tests
[ java ] fix npe in gettime ( ) when loc be null .
added null check for measurement in TabletInsertionDataContainer and created a new DisruptorQueueExceptionHandler class to improve error handling and provide better logging
deleted the Session2Token . java file from the android . media package to the class is no longer needed for the current implementation
added volume expunge handling in CreateVolumeFromBaseImageImpl . java to ensure proper cleanup of volumes and improve error handling
added a new ` Install ` class and integrated it into ` PopupDataProvider ` and ` InstantAppResolver ` to handle instant app installations to
added a null authorities populator to the LdapAuthenticationProvider class and updated the tests accordingly to ensure that the LdapAuthenticationProvider correctly returns the correct role
added logic to retrieve the retrolambda JAR path from system properties instead of using a hardcoded value to ensure compatibility with different Android versions
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the code and improve readability by
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` for better handling of live documents to improve performance
added a call to handleNullResult in JMESPathExtractor . java to improve handling of null results in JMESPathExtractor
updated import statements and added validation for user authority in AuthorizeTag . java to improve code clarity and prevent potential NullPointerExceptions
updated assertions in multiple test files for consistency and clarity to improve code readability and maintainability
vmsnapshotmanagerimpl : fix typo in exception message
rename ` classConfig ` to ` testClassConfig ` and replace ` ArrayList ` with ` Set ` for shadows in ` Config ` to improve
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to replace the deprecated ` SelectChannelConnector `
refactor partition key comparison logic in HiveAlterHandler . java to use a dedicated method for clarity to improve code readability and maintainability by
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to enable icon display in the text header
added a semicolon to the if statement in SimulationStatus . java to improve code readability and maintain consistency
replaced ` SharedBlockingCallback ` with ` Callback . Completable ` in multiple files to simplify callback handling and improve code clarity
added workspace listener functionality to PreviewControllerImpl and updated PreviewUIController to build the graph when the workspace changes
added a check for non - VM anonymous classes in ReflectionFactory and modified the class name check in ReflectUtil to ensure proper handling of anonymous classes and
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path formatting in CatalinaAcegiUserRealm . java to ensure compatibility with resource loading mechanisms
added logging messages for server and manager initialization in AmbariServer . java to enhance visibility into server startup and action manager initialization processes
added null checks for init , modify , and modify nodes in JSONWriter . java to ensure robust handling of null values and improve code robustness
modified the ` run ` and ` invokeHDFSClientRunnable ` methods to accept a ` FileSystem ` parameter and updated user authentication handling logic to improve
added a check to ensure the backgroundManager is not attached before attaching the window to avoid potential NullPointerExceptions when attaching the window
added tab selection functionality and adjusted child dimensions in multiple classes to improve user interface responsiveness and ensure proper child rendering
added a null check for the URL in BaseDataSource and created a corresponding test in SimpleDataSourceTest to ensure proper error handling for invalid URLs and
added JUnit annotations and updated import statements in PebbleModuleTest . java to ensure compatibility with newer Java versions and improve code clarity
added EditNameDialog functionality to handle directory creation and deletion in FileDisplayActivity to improve user experience by allowing users to create new directories when the dialog
added bar border handling in multiple bar chart activities to ensure consistent behavior across different activities and datasets
updated the API endpoint from " okcoin . com " to " okex . com " in OkCoinExchange . java to ensure compatibility with the
danielwagnerhall : add deciderscorecomparator to testpickmoverandomly ( )
replaced FileChannel usage with SeekableByteChannel in Files . java and added byte reading functionality in BytesAndLines . java to improve file handling efficiency and ensure
updated the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and made several variable declarations final to enhance code clarity and
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ table - common ] do n ' t try to parse config object if they do n ' t exist .
added ActivityManager imports and set watch heap limit in QuickstepProcessInitializer . java to improve memory management on debug devices
refactor the sumWithCompensation method to store the value in a variable before adding it to the array to improve code readability and maintainability by
log4j2 - 1349 add shouldrethrow flag to abstractloadbundletest . testloadbundle ( )
refactor conditional statements in PrecompactedRow . java for clarity to improve code readability and maintainability
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid render intents to ensure correct rendering
auto - configure meterregistry lifecycle in metricsautoconfiguration
updated logging level from warn to info in ConfigurationUtils . java to improve clarity of log messages when no config item is found
added test cases in CertificateFactoryTest to verify certificate generation with specific byte arrays to ensure proper exception handling for invalid certificate inputs
camel - 14297 : camel - simple - fix issue with ambiguous operator in predicate
removed redundant code in ` onTabUnselected ` method in ` EditorActivity . java ` and added window dismissal handling in ` IDEEditor .
add user name to log message when accesslogvalve fail to open
updated matrix scaling and added null check for submeshnames in OgreXmlLoader and adjusted animTime calculation in SkeletonModelViewer to improve
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should not be used in new code
added support for generating declaration files in the JSweet transpiler and options to enable users to specify how to generate generated files for JavaScript files
added a test method to verify the fetch timeout configuration for Kinesis streams to ensure that the default fetch timeout is set correctly based on consumer factory class
[ hotfix ] [ runtime ] fix typo in streamingdataflowworker
updated the default value of ` hive . metastore . server . max . threads ` from 100 , 000 , 000 to 1000 , 
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` and added a return statement to indicate success or failure
replaced ` mMaxShadowRadius ` with ` shadowRadius ` in ` SwipeUpAnimationLogic . java ` to ensure the shadow radius is correctly
added a new test method for chain nesting and aggregation in ChainParserTests . java to ensure proper functionality of message aggregation in the chaining and
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` and added a failure message
do n ' t use source . isinternal ( ) to check if it ' s an interactive source
updated the condition to check for null previousCachedFilePath in CreateKeytabFilesServerAction . java to improve clarity and correctness of keytab file
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController to enhance window management functionality by incorporating display controller functionality
updated toolTipText assignment in MetalFileChooserUI and SynthFileChooserUIImpl to use " Desktop " for root directories to improve user experience by
updated screenSize initialization to use Toolkit . getDefaultToolkit ( ) instead of getToolkit ( ) to ensure compatibility with the latest toolkit version
change return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > in Tensorflow
added unit tests for entity insertion and removal in JPASQLBase . java to enhance test coverage and ensure proper functionality of entity management
removed unnecessary drag index handling in FreeformFinSetConfig . java to streamline code by eliminating unnecessary drag index logic
updated the MOE version from " 1.1 . 2 " to " 1.2 . 0 " to incorporate the latest features and improvements in the project
updated error message from " constant canot set call value " to " constant cannot set call value . " and added program . spendAllGas
updated error message formatting to include a newline character to improve readability and consistency of error messages
mark the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
refactor unsafe plugin registration into a separate method to improve code readability and maintainability
added Hint ( isDep = false ) annotation to AndroidAppModularityDescription . java and AndroidGraphEnhancerArgs . java , and
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable vertical page centering functionality
[ hotfix ] [ table - common ] remove redundant call to migrationinfo . doneprocessing ( )
updated constants and variable names from " moduleIpAddress " to " baseUrl " in KonnectedBindingConstants . java and KonnectedHandler . java
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy `
added database creation and query processing functionality in TestJdbcWithMiniLlap . java and modified database handling in LlapBaseInputFormat . java to
added a new test method ` testCaseInsideBrackets ( ) ` in ` CaseExpressionTest . java ` to validate SQL parsing and deparsing
added input device handling and refactored the copy mode logic in ConsoleActivity . java to improve code readability and maintainability by encaps
refactored XML output handling in TestCommand . java to use DocumentBuilderFactory and try - with - resources to improve XML processing efficiency and maintainability
camel - 14297 : fixed npe in abstractaggregationstrategy when use empty split
camel - 14297 : camel - core - log4j2 - camel - log4j2 - remove dependency on util . exchangehelper
move basicconfigurator to ' ch . qos . logback . classic ' package to fix checkstyle issue
added a check for the presence of the PHI _ NODE flag in targetVN comparison to ensure that targetVN is not only non -
pdfbox - 4071 : remove unused import , a suggest by valerybokov
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters
refactor BoxAndWhiskerCalculator , BoxAndWhiskerXYDataset , HistogramBin , HistogramDataset , Histogram
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed equality checks from ` = = ` to ` . equals ( ) ` for ` equals ( ) ` in ` InstantiatedIndexReader . java
changed the access modifier of the singleton instance and its constructor from public to private to enhance encapsulation and restrict instantiation to the singleton instance
refactor ifstatementtest to use testplugindefinition instead of testplugindefinition ( )
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
removed the nullSafe method from TypeAdapter and updated its usage in StreamingTypeAdaptersTest to simplify the code and improve readability by eliminating
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected value for the distribution
added a new file EXIFReader . java to handle EXIF metadata processing to provide a mechanism for processing and processing image metadata in a structured manner
change default value of cloudwatchmeterregistry . tostandardunit ( ) to ` ` none ' ' when unit be unknown
[ jbpm - 1149 ] apply pmml model command should set parameter value to error code - 3
updated the message formatting in FluentProtocol . java to include additional context about the CounterCurrencyTransferStartedMessage scenario to improve clarity of log messages for better
added a check to return early if the bubble bar is not visible to optimize performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 32257 ] catch branchtargetoutofboundsexception and reset label range when emit .
added a try - finally block around the initialization of the JDKLogManager to ensure that the initPending flag is reset correctly to prevent potential
added a ` find ` method to ` TicketCatalog ` and modified logging messages in ` DefaultTicketCatalog ` and ` HazelcastTicketRegistry `
reformatted code for improved readability and maintainability to enhance code clarity and maintainability
[ hotfix ] [ runtime ] fix lock issue in sortmergeresultpartition
updated Read and Write constructors in JmsIO to include null parameters to ensure proper initialization of Read and Write objects with default parameters
updated the ` PluginHandleController ` , ` PluginHandleDTO ` , and ` PluginHandleDO ` classes to include ` type ` and ` sort
replaced ` start ( ) ` method calls with ` start ( ) ` in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig `
added new color , depth , and stencil format configurations to IOSApplicationConfiguration and IOSGraphics classes to enhance drawable rendering flexibility and
refactor login integration tests to use a new ` attemptLogin ` method to improve code readability and maintainability by reducing repetitive code
[ pytorch ] throw unsupportedoperationexception if real ( ) or complex ( ) be not support .
refactor lock handling in SynchronizationStatistics . java to use do - while loops for improved readability to enhance code clarity and maintainability by
refactor ShadowPicker class to improve code organization to enhance maintainability and readability of the code
refactor HTTP / 2 client options initialization into a separate method and update related configurations to improve code readability and maintainability by centralizing HTTP
added a condition to check for DynamicArray class in DynamicStruct . java and improved type name handling in SolidityFunctionWrapper . java to enhance
updated ` getStringProperty ` calls to include a default value of ` true ` in ` InlineLayout . java ` and ` FontUtil . java `
added constructors to the CopyStep class with a boolean parameter and a test for internal paths in the CopyStepTest class to enhance functionality by allowing
fixed - rsemaphore . acquire ( ) method should n ' t be call after addpermitted ( ) method call . # 31
camel - 14263 : camel - jbang - use routecontextprocessor instead of routecontextprocessor in camel - example - dsl
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to utilize it to improve code organization and encapsulate flavor
updated data types from List < String > to List < ByteString > in WitnessScheduleStore . java to utilize ByteString instead of String for witness
added a check for non - empty resultsMeta before printing it to avoid unnecessary output when resultsMeta is empty
refactor ConcurrentLinkedQueue to improve item removal logic and add a new RemoveLeak class for testing to enhance reliability of item removal in concurrent queue operations
add decode ( ) method to huggingfacetokenizer , add skiptoken ( ) to decode ( )
[ hotfix ] [ runtime ] use ` collections . nCopies ` instead of ` arraylist ` in ` taskmanagerservices `
refactor data handling in LoadSingleTsFileNode to use a separate AlignedChunkData variable to improve code clarity and maintainability by
added session storage context handling in BrowserSessionStorage and updated action creation in DuoSecurityMultifactorWebflowConfigurer to enhance session management functionality and improve
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 359 : ignore schema validation
added a default constructor to TypeAdapter and modified comments in Java17RecordTest and ReflectionAccessTest to indicate that the test is disabled until record support
refactor kill event handling in Debugger . java and add prepareKill method in SuspendedEvent . java to improve error handling and ensure proper execution
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
[ ds - 3523 ] fix permission issue in addbitstreamsaction and collectionserviceimpl
added null check for _ deflaterEntry before releasing it in GzipHttpOutputInterceptor . java and modified assertions in BlockingTest . java to
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
added normalization for Unicode characters in MD5 checksum computation to ensure consistent character normalization and prevent potential issues with unicode characters
refactor command handling in Example . java to improve clarity and consistency to enhance code readability and maintainability by using more descriptive variable names
make profilerkeylistener final and add miss @ override annotation
updated the type casting of ` objectToSave ` from ` T ` to ` DBObject ` and added a new test for saving JSON strings
added a method to check for multiple remote addresses in the RequestUtils class and created a corresponding test in RequestUtilsTest to ensure proper handling of remote
updated ` getJobArgs ` method to return ` ObjectBuilder ` instead of ` String ` to enhance type flexibility and improve job argument handling
added proxy handling and modified local host address retrieval in CookieManagerTest . java and UnmodifiableMaps . java to improve test reliability by ensuring the
refactor glyph wrapping logic in GlyphLayout . java and add a text test in BitmapFontTest . java to improve handling of whitespace wrapping scenarios
added pauseOrResumeSplits and resumeSplits methods to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to
added support for HIVESCRIPT _ OPERATOR _ ID environment variable in HiveConf and ScriptOperator classes to enable management of operator IDs in the
refactor the ` getListedTermCounts ` method to use ` Stream < SimpleImmutableEntry < String , Integer > > ` for processing term
added a new action class ` UseSeparateStepSizeAction ` to manage the step size option in the JOG plugin to enhance user experience by allowing
updated FileMenuFilter to use final fields and added user ID to enhance immutability and improve file locking logic based on user context
[ flink - 22436 ] [ table - runtime ] fix the bug in roundrobintableinputformat when the regionserver be empty
updated HTTP header values from " false " to " 1 " in HttpClientRequestAdapter . java and HttpClientRequestAdapterTest . java to ensure correct header
pdfbox - 4071 : use ioutils . closetostring instead of hardcoded null check
added fullscreen functionality and modified display mode handling in GwtApplication and GwtGraphics classes to enhance user experience by enabling fullscreen mode functionality in the graphics
refactor WebfingerIssuerService to use URI for authority and user information to improve URI handling and enhance resource normalization logic
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of ` DubboConfig ` to
updated texture path resolution in SkinLoader . java to use ` resolve ( fileName ) ` instead of ` Gdx . files . internal ` to
updated logging levels from warn to info in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreLoader to improve log granular
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple files to ensure that the REALTIME _ LOCK lock is
updated package declaration for the Compiler class to improve organization and clarity of the package structure
do n ' t report nullderefandredundantcomparison when a method throw a codeexception .
updated dashrendererbuilder to use defaulthttpdatasource instead of contentid .
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION `
change return type of set method from WritableConfig to Configuration across multiple classes to ensure consistency in configuration type usage across the application
added a checkErr method to handle command errors in AutoScalingHandler to improve error handling by throwing a specific exception for invalid command payloads
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future feature additions
updated variable name from ` buf ` to ` b ` in ` InflateIn _ DeflateOut . java ` to improve code readability and
added methods to remove cryptography restrictions in Utilities . java to ensure security compliance by removing unnecessary security restrictions
refactor entity positioning logic to include cancellation check and add teleportation functionality to improve responsiveness and responsiveness of entity teleport
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to ensure page margins are correctly
updated vectorization context initialization logic to ensure vContext is initialized before use to avoid redundant calls to getVectorizationContext
fix speed value in wialon protocol ( fix # 118 )
hbase - 25813 disable the metric user aggregate feature if it ' s not need
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to check
updated variable names from ` mUserPresent ` , ` mVisible ` , ` mVisible ` , and ` mAttached ` to ` mAttached
refactor AsyncFile , HttpClientRequest , HttpServerRequest , HttpServerResponse , and NetSocket classes to improve code organization and maintainability
( chore ) camel - core : add pipeline parameter to the zadd operation .
[ test ] fix checkstyle violation in unit test
renamed the test class from ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` to clarify the purpose of the test related to garbage collection issues
refactor VersionedTargetGraphBuilder to handle Optional < TargetNode < ? , ? > > and add tests handling in VersionPropagatorBuilder
updated epoch time thresholds from high and low to 31 _ 556 _ 832 _ 999 in TimeZoneProvider . java to improve accuracy of
updated the return value of HEADER _ SIZE in EscherBlipRecord . java and added a new test class TestOLE2Embeding .
updated row and column initialization in JSONParser . java to ensure correct positioning of data in JSON parsing
replaced ` JavaType . ShallowClass . build ( fullyQualifiedTypeName ) ` and ` JavaType . ShallowClass . build ( fullyQualified
added support for playing trailers in BaseItemDetailsFragment and updated DETAIL _ THUMB _ HEIGHT from 200 to 300 to improve user
added a method to remove glyph information from the cache in CStrike . java and invoked it in CStrikeDisposer . java to ensure
act - 153 : add test case and fix for act - 142
camel - 14297 : add support for @ xmlelementname on the xmltypestrategy .
updated the valid HTTP endpoint from " http : / / scottb . org / scottb . org " to " https : / /
add ` ` clear all default value ' ' option to clear all preference .
hbase - 26113 make thriftserver . createthriftmetrics ( ) protect to allow subclass to access the metric
[ danfossairunit ] remove deprecate channel . manual _ fan _ speed
use hamcrest assertion instead of junit in integrations / micronaut - core ( # 1749 )
removed duplicate code for stopping expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added equals and hashCode methods to PartitionFactory and modified index handling in PartitionPanel to improve object comparison and hashing functionality for PartImpl instances
server : set root disk size in custom parameter if it do n ' t exist
updated visibility logic in PredictionRowView to conditionally show suggested apps in the drawer based on user preferences to enhance user experience by enabling or dis
[ geos - 8429 ] add bboxcrs parameter to apibboxparser . tofilter ( bbox , crs )
added validation methods for value and position parameters in LibrustzcashParam . java and updated test cases in LibrustzcashTest . java to
deprecate ithrowableentity in favor of fml . common . registry . ithrowable
added variables ` x ` and ` y ` to ` NodeDataImpl . java ` to initialize ` this ` with a random value to improve the
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for validating refresh token with missing
refactor JavacStep to initialize declaredDepsBuildResult , firstOrderStdout , and firstOrderStderr with try - with - resources to
update version number from 0.9 . 1 to 0.9 . 2 to reflect the latest release version
added a condition to check for DEEP _ SHORTCUT item type in LoaderCursor . java to ensure proper handling of short shortcuts in
added a hashCode ( ) method to the TimeGranularitySpec class to ensure proper hash code generation for instances of TimeGranularity
changed access modifiers from private to protected for BooleanWeight , DisjunctionMaxWeight , and DisjunctionMaxWeight classes to allow subclasses to access
added a boolean flag ` useProxyResponseCode ` and modified proxy handling logic in ` HttpURLConnection ` to ensure proper handling of NTLM proxy
aarch64 : fix loadstackslot address in aarch64macroassembler .
server : do n ' t count reserved vms on a host when there be no vms available
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and modified the query in ` TestDistributed
updated the audio recoder parameter from 22050 to 44100 in AudioRecorderTest . java to ensure compatibility with the new audio recoder
updated the calculation of newOriginX in RocketFigure . java to include subject bounds to ensure correct positioning of the rocket figure based on the
updated null and empty checks for Druid data source in DruidQueryBasedInputFormat . java to ensure data source is valid and set a default interval
added ORIGINAL _ TYPE constant and updated pattern matching in CustomProperty . java , along with corresponding unit tests in CustomPropertyTest . java to
added a static method create ( Table parent , Map < String , Object > data ) to the Index class to facilitate the creation of an Index instance
simplified the return statement by removing an unnecessary variable to improve code readability and maintainability
[ iotdb - 4841 ] fix union writer type mismatch ( # 11415 )
added support for entity path handling in QueryUtils . java to enhance querying capabilities for entity - based relationships in the application
added synchronized blocks for managing spans in TestSpanHandler . java to ensure thread safety when accessing the spans list
updated method signatures in multiple classes to use List < ? > instead of List < Object > to support wildcard argument handling in text processing
updated exception handling and logging in ViewContextImpl . java to improve clarity of error messages and enhance debugging capabilities
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
updated error messages to clarify that the service cannot process requests to improve clarity and accuracy in error reporting for better debugging
added two new project files , Default - 1024w - 1366h and Default - 1024w - 1366h , in GdxSetup .
updated import statements and set a merge scheduler in TestSearcherManager . java to improve performance by utilizing a concurrent merge scheduler
updated condition checks and improved list handling in QTestUtil and GenericUDTFInline classes to enhance code robustness and prevent potential NullPointerExceptions
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
web spreadsheet key listener : do n ' t send preventDefault ( ) if preventDefault ( ) be call
hhh - 16465 fix osgi test case to properly stop
fix timeout calculation in hikaripool to account for connection timeout .
remove the createcomponentfile ( ) method from voicecompiler , it ' s no longer need .
updated file name handling in Compat . java and FileOpener . java to ensure consistent file path formatting across different operating systems
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to simplify the method ' s
improve error message when multiple port have be specify multiple time
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 initialization to improve handling of null values in WebSocket connections
modified the return type of ` genUDTFPlan ` to return a ` Pair < RelNode , RowResolver > ` instead of assigning
added node selection statistics tracking for bucketed and non - preferred node selected counts in multiple classes to improve tracking and tracking of node selection states in the
added a new file ` Person . java ` containing a class ` Person ` with methods for setting and getting the name to facilitate the management of the
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to improve clarity and maintainability of
added clock functionality and refactored logo fade and fade animation methods in PlaybackOverlayFragment . java to enhance user experience by providing smoother transition
move updatecomparatoroutputlevel call to getblockstate ( ) instead of call markdirty ( ) .
[ flink - 24144 ] [ runtime ] make segmentreader . class . getname ( ) non - final
added SwingUtilities . invokeLater ( ) to fire cell update events in SudokuGridEvent to ensure that the event is fired on the Event Dispatch Thread
removed DefaultInetAddressAdapter and updated type adapters to use Class < T > instead of TypeToken to simplify the code and improve type adapter
added methods to retrieve double , long , boolean , boolean , string , boolean , boolean , boolean , string , and string values in the Series class
updated option name from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager . java to
updated boundary checks in GeoRelationUtils and modified GeoRect constructor in TestGeoPointQuery to improve accuracy of geometric calculations and enhance test cases for
vmware : fix findbydiskoffering to use getdiskofferingid instead of getid
added cleanup method to HazelcastTest to ensure proper resource management and avoid potential memory leaks
added tests for AES / AES / 2 / NoPadding and AES / 9 / NoPadding provider in BlockCipherTest . java to
added two filters to print operations logs in QFileClient . java to improve logging clarity for operations in the QFileClient
fix : fix issue with aop proxy generation for type argument
added a null check for currentConnectionAddress in ProtocolProviderServiceSipImpl . java to ensure currentConnectionAddress is initialized before use to avoid potential
replaced manual calculation of demand with MathUtils ' s cappedAdd method to improve code readability and leverage built - in math utility functions
refactor image output handling in SetOutput . java to use try - with - resources to ensure proper resource management and avoid potential memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with ` Intent . getInstance ( ) ` in multiple classes to
removed unnecessary ' this ' keyword from the ` schemaCrawlerOptions ` and ` GrepOptions ` classes to improve code readability and maintain consistency in
http : / / issues . apache . org / jira / browse / amq - 4892 - add osgi configuration for webconsole
added @ Autowired annotation for PersonRepository in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for PersonRepository in tests
updated the stop method signature from ` Exception ` to ` InterruptedException ` and corrected a typo in the log message to improve error handling and
refactored case statements in BlockCactus . java for improved clarity and functionality to enhance readability and maintainability of the code
refactor mouse event handling in ThemeSelector . java to use MouseMotionAdapter to improve code readability and maintainability by encapsulating mouse
[ java ] add rhspadding to make it easy to use in multi - threaded environment .
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance text editing functionality
no need to throw an exception if the tokenization model be not specify .
added a check for distinct queries in ClusterIntegrationTestUtils and modified query generation logic in QueryGenerator to ensure correct handling of distinct queries and improve query processing
make string similarity public and add miss method to jnireflectiondictionary .
fix checkstyle issue in java / awt / basic / jmeter / jsyntaxtextarea . java
added null check for children before iterating over its size in PartitionPruner . java to avoid potential NullPointerException when children is null
added tokenPosition , currentPosition , and currentPosition fields , and updated JsonLocation return statements in MessagePackParser . java to implement parsing context management
added locale management in AbstractSolrMorphlineTestBase to ensure consistent locale settings during test execution
removed conditional checks for ` isLauncher ( ) ` in ` LauncherFragment . java ` to simplify size calculation to improve code readability and maintain
added a new file ` MetricsReporterTest . java ` to implement unit tests for the ` MetricsReporter ` class to ensure metrics reporting functionality works as
camel - 14297 : camel - osgi - optimize to reduce memory usage .
implement equals and hashCode methods for the Rectangle class to ensure proper comparison and hashing functionality for instances of Rectangle class
[ hotfix ] [ test ] fix flaky test in streamkafkaptest
refactor DSAParameterGenerator to improve error handling and simplify BigInteger instantiation to enhance code readability and maintainability while ensuring correct prime size validation
added support for using the FQDN of the AM machine in the LLAP daemon and utilized it in the LlapUtil class to
fix flaky clientoutofmemoryhandlertest . testclientoutofmemoryhandlertest
added a method ` getCmoObjectId ( shapeId ) ` to ` AbstractShape ` and overridden it in multiple classes to ensure consistent object ID
added a new test method ` testWithDistinctScalarQuery ` in ` DistinctTest . java ` to verify the functionality of a distinct query with
refactored Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
remove bind / unbind extension adapter from managedkubernetesclient
refactor subtitle display logic to use a utility method for better clarity to improve code readability and maintainability by centralizing subtitle display logic
updated JUnit imports and annotations from ` org . junit . imports ` to ` org . junit . jupiter . api . api
do n ' t throw exception from bugcollectionbugreporter . generatesummary ( )
replaced multiple calls to ` intPool . reset ( false , false , false ) ` and ` bytePool . reset ( ) ` with a single
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
added a new ` WindowSessionDelegateU ` class and modified the API level checks in ` ShadowWindowManagerGlobal . java ` to ensure compatibility with
fix urlhelper . forceaddschemehostandportwithnonstandardport to work with non - standard port
added MSSQLDatabase import and modified conditional statements in AddForeignKeyConstraintGenerator . java to ensure compatibility with MSSQLDatabase ' s constraint handling
reformatted lambda expressions in HStore and StoreEngine classes for consistency to improve code readability and maintainability
fix emzuli pipe not work properly
simonstewart : make htmlidentifier . setlogging ( true ) configurable
updated method calls from ` getProducedTableSchema ( ) ` to ` getTableSchema ( ) ` in ` HiveLookupTableSource . java `
fix player . setthrowswhenusingwrongthread ( ) and add listenerset . setset . setthrowswhenusingwrongthread ( )
updated schema name handling in SequenceSnapshotGenerator to utilize CatalogAndSchema for improved schema management
updated color handling in SpriteBatch and SpriteCache classes and modified pixmap settings in LwjglDebugStarter and AlphaTest to
fixed - spring data redis redissonconnection . getsentpromise ( ) method throw npe if redissonconnection . getsentpromise ( )
added logic to retrieve and store the base URL of statistic years in SolrLoggerServiceImpl to ensure that statistic year cores are not duplicated for
updated method names and logic in TaskActionController , TaskAdapter , and IconRecentsView to improve clarity and consistency to enhance code readability and
updated MorfologikFilter and MorfologikFilter classes to enhance dictionary resource handling and improve dictionary loading functionality
updated sorting options in GridFragment to correct the term " CommunityRating " and " CriticRating " to reflect the correct terminology and
added imports for ViewKt and ListRow , and modified visibility logic in CustomListRowPresenter to enhance visibility control for list items in the
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code organization to enhance maintainability and readability of the code
replaced calls to ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to ensure proper type checking for DB2Database
add support for jsr310 module in standardjavascriptserializer
updated the import statement from ` org . apache . log4j . MDC ` to ` org . slf4j . MDC ` to ensure compatibility
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver . java ` to simplify type handling and improve code clarity
removed unnecessary line breaks in CoinbaseTransaction . java to improve code readability and maintainability
added a method to force build targets based on passed - in targets in BuckConfig and updated ProjectCommand to include a new test for forcing builds
updated the initialization of the idle strategy in Ping . java to ensure proper garbage collection to prevent potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and updated related classes to utilize ` ContentResolver ` instead of
removed redundant state change checks in ReportPanel . java to simplify code for better readability and maintainability
[ hotfix ] [ test ] ensure slotowner be not null in testinglogicalslot
added a new recipe class ` RemoveCallsToSystemGc ` that removes garbage collection invocations from ` System . gc ( ) ` and `
removed redundant super ( ) calls from multiple exception classes to streamline exception handling and improve code clarity
added a method to set the UIID in ScaleImageLabel to ensure the icon is correctly set during UI updates
replaced the variable ` foundEntry ` with ` update ` for better clarity to improve code readability and maintainability by using a more descriptive
added support for both " - classpath " and " - cp " arguments in the Main . java file to enhance flexibility by allowing both " - classpath
[ hotfix ] [ runtime ] fix link in avutil . java
[ hotfix ] fix checkstyle violation in storageservice
updated Test7196045 . java file to improve test coverage and ensure accuracy
updated density and decay values in ShaderParametersLightShaft . java to improve light shaft rendering quality
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and modified state handling in ` OidcRedirectAction
updated unique constraint handling to differentiate between non - nullable and non - nullable columns to improve clarity and functionality of unique constraints in the database schema
added federated share checks in UsersAndGroupsSearchProvider and EditShareFragment to enhance user sharing control based on federated share status
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy ` to ensure that document values are considered for
refactor BufferAlignmentAgent , BufferAlignmentInterceptor , AppendableOutputManager , and StringWriterOutputManager to improve error handling and formatting to enhance code clarity and
added a new method ` intForEach ` to ` IntObjHashMap ` for processing values to enhance the functionality of ` IntObjConsumer ` to
fix scoreboard share data in worldservermulti , which cause it to share scoreboards early .
changed return type of count ( ) methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository
refactor MTree snapshot creation logic to improve clarity and consistency to enhance readability and maintainability of the code
updated the dot product score calculation in VectorUtil and added new test cases in TestVectorUtil to improve accuracy of dot product score calculations and ensure accurate
added IRREVERSIBLE _ THRESHOLD constant and methods to set and get the latest confirmed block number in DynamicPropertiesStore and Manager classes to
refactor locale handling in GpsMainActivity and MainPreferenceActivity to utilize Systems for setting user - specified locales to improve code maintainability
added a check for the creation state of a new database in the LauncherClings and LauncherProvider classes to ensure that the cling
refactor collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider to improve code readability and maintainability
refactor conditional statement for determining 64 - bit data model to improve code readability and maintainability
added a thread check for the current thread in TestIndexWriterDelete . java to ensure that operations on the correct thread are performed only when the current
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the closeDatabase method
updated imports and method calls to use ` ModelCompat . asSdk ( ) ` in ` FullDetailsActivity . java ` and ` BaseRow
added functionality to set attributes for SVG elements in BatikSVGDrawer to ensure that SVG elements are correctly imported and processed in the document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error logging for user configuration parsing failures
added support for " WaitForResult " extra in AndroidImplementation and modified waitingForResult logic in CodenameOneActivity to ensure correct handling of waitFor
refactor ` PriorityQueue ` and related classes to use ` Supplier < T > ` instead of ` boolean ` for prepopulate ` to improve flexibility in
added widget description display and visibility handling in WidgetCell . java to improve user experience by displaying widget information when available
added a maximum attribute count limit and exception handling in the Attribute class to enforce a limit on the number of registered attribute types and prevent runtime exceptions
move predicatestest to impl . predicates package to make it easy to run test .
camel - 14263 : camel - core - add support for case insensitivity to defaultheaderfilterstrategy .
updated inline layout and break handling logic in InlineLayout and Breaker classes to improve break handling logic and ensure proper wrapping behavior
added avatar radius dimension handling and improved null safety in the getView method to enhance code robustness and prevent potential NullPointerExceptions
updated the ` shouldInstrument ` method to include checks for ` android . support . v4 ` and ` android . support . v4 ` to
added a check to return the last column in the table if the association is insert destination before the source to ensure the correct column count is returned when
updated CmdModifierTest to use a method for retrieving the memory limit file path based on the CgroupVersion to ensure compatibility with different Cgroup versions
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxxDeps `
added a null check for the rule in JavaTestRule . java to throw a HumanReadableException when the specified source is not among its dependencies to
refactored the Minecraft version check to use a map to improve code readability and maintainability
set atIndex to 0 if it is less than zero to ensure atIndex starts from a valid index to avoid potential errors
increased timeout duration from 100 milliseconds to 500 milliseconds in BuckBlockJUnit4ClassRunner and increased sleep duration from 1000 milliseconds to 5000 milliseconds to improve
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to enhance request handling for assist content requests
votewitness : do n ' t create a readable witness address if it ' s not in the database
refactor DefaultMethodRegressionTests to improve test coverage to enhance reliability and maintainability of the test suite
refactor WorkloadManagerMxBean to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to ensure compatibility with the latest Kafka library
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent potential memory leaks
added a ` clear ( ) ` method to ` ExceptionThrowingTaskletStub ` and corresponding test cases in ` FaultTolerantException
[ hotfix ] [ test ] add beamcontainerrunner and apprunner to error message
updated the ` applyTunerConfigs ` method to include ` extraProperties ` parameter across multiple classes to include additional properties to enhance tuner configuration
added logic to check if a segment is in progress before building the list of segments to ensure that only in - progress segments are added to the list
added a check to return null if touchable is disabled in Table . java to prevent potential null pointer exceptions when the touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure support for
throw retryablehazelcastexception if cache config do n ' t exist
updated logging messages and refactored module installation check in JSweetTranspiler and ProcessUtil classes to improve clarity and maintainability of module
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance monitoring capabilities for MBeans in the application
updated conditional check in LongClickableSpan to include a comment to improve code readability and clarify the purpose of the condition
refactor string comparison in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` . equals ( ) ` method to
updated the condition in ` isReifiable ` and added new classes ` T6558559a ` and ` T6558559b
updated player print messages in WorldEditListener . java to include position information to improve clarity and context of position changes for better debugging
camel - 14284 : camel - kafka : shutdown the consumer executor when the consumer be shut down .
removed the example ( ) method from the Schema class to streamline the code by eliminating unnecessary default implementation
modified thread handling logic in AgentRunner . java to ensure proper termination and interruption of the thread
added logic to remove the time column from dimensions in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure that the time column is properly removed from
updated logical condition from ' & & ' to ' & & ' in FacetComponent . java to improve code readability and maintainability
replaced linker provider retrieval with CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibraryDescription . java
added name property with getter and setter methods in JdbcAuthenticationProperties , AbstractLdapProperties , AbstractLdapProperties , and NtlmProperties classes to enhance
make sure we do n ' t exit if we can not connect to the graph .
phoenix - 2585 add point lookup hint for small scan ( pengcheng xiong , review by prasanth
added " routeId " to the filterToStringCreator return statement in RetryGatewayFilterFactory . java to improve clarity and context of the filter configuration
replaced multiple calls to ` redisplay ( ) ` with a new call to ` callWidget ( name ) ` in ` LineReaderImpl . java
refactor onOverviewShown method to use DiscoveryBounce ' s showForOverviewIfNeeded method to improve code clarity and maintainability by consolidating
refactor conditional statements in CheckIndex . java and add a new test case in TestPointValues . java to improve code readability and ensure proper
updated the publish method to include the updateLastState parameter to ensure the state updates correctly during the state update process
updated string concatenation syntax in MetastoreDirectSqlUtils . java to ensure proper handling of special characters in SQL queries
added a null element to the exp list in SpliteratorCollisions . java to ensure proper handling of null values during insertion
simonstewart : add support for case insensitivity in the text condition
replaced multiple instances of ` do ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code readability
no effective change - add queryengine . forwardonlyfetchsize ( ) for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid processing 404 responses when the channel is closed
pdfbox - 4071 : set initial capacity to avoid concurrentmodificationexception
added support for rounded corners on windows in the QuickstepAppTransitionManagerImpl to enhance window radius flexibility based on device capabilities
refactor background handling in DesktopTaskView to use View instead of PagedOrientationHandler to improve code clarity and maintainability by using a unified background
added a new instance of UpstreamCheckService in the test to initialize the upstream check service with relevant configurations
replaced warn log statements with debug log statements in AbstractSession and AbstractSessionManager classes to improve logging clarity and reduce verbosity in log messages
replaced error logging with a return statement in ZooKeeperHiveLockManager . java to improve error handling by returning locks instead of throwing an exception
[ hotfix ] fix checkstyle violation in state - backend
added a boolean flag ` containsCustomData ` and modified mipmap generation logic to ensure mipmap generation only occurs when custom data is present
maskingformattertest : use double quote for key = ' ' xxxxx ' ' instead of single quote for key = ' ' xxxxx '
added selectable property and methods to manage the state of the list to improve user interaction by preventing touch events when no items are selected
removed a conditional check for empty field vectors in LlapArrowBatchRecordReader . java to simplify the code by eliminating unnecessary checks
added file separator handling in PolicyContext and a corresponding test in TestPolicyContext to ensure consistent file separator behavior across different operating systems
replaced HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance by using a more efficient data structure
refactor TLSRestrictions class for improved clarity to enhance maintainability and readability of the code
refactor producer closure to run in a background thread to improve thread safety and prevent potential NullPointerExceptions during shutdown
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values and modified its implementation to enhance node state verification by allowing specific node
added functionality to delete the " LOCK " file if it exists to ensure that the cache is cleared when it is no longer needed
updated MiniZooKeeperCluster to use InetSocketAddress for the server factory to ensure the client port is correctly set for the server factory
refactor RestClient to improve error handling and connection management to enhance code clarity and ensure proper resource management during HTTP requests
updated the method call to use ` toArray ( new String [ 0 ] ) ` instead of ` new String [ 0 ] ` for segment tar URI
added a password parameter to the loginStudent method calls in AllAccessControlUiTests . java to ensure that the test uses the correct password for
added a null check for the lastDeletedItemId in EnhancedBrowseFragment and StdBrowseFragment to ensure that the code does not throw a NullPointer
increased the number of strings from 500 to 100 in TestSpecialOperations . java to increase test coverage for string processing
refactored WKBAttributeIO to use a byte array instead of a custom ByteArrayInStream implementation to improve memory efficiency and simplify the code by
updated method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in naming conventions
added a method to check if a transition is a direct substate to improve state management by avoiding unnecessary processing for direct substates
added type checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding unit tests in MultimapTest . java to ensure correct equality
added JoinOperation interface to PostJoinOperation class to enhance functionality by integrating join operations
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to validate PostgreSQL
fix intermittent test failure in amq5035test
refactor AvaticaDatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
updated MongoDbConnectionPoolProperties to use DurationCapable annotations and replaced int values with Strings for lifeTime , idleTime , and maxWaitTime
make sdputils # createaudiomediaformat use sipactivator . getmediafactory ( ) .
refactor ` handleFilters ` , ` evalFilters ` , and ` handleBlockJoin ` methods to return a boolean indicating whether filters applied to improve
added a boolean flag ` enabledTimeout ` and updated its usage in the ` ShuffleHandler ` class to enable or disable the timeout handler based on
replaced hardcoded value ` - 1 ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED ` in ` 
camel - 14284 : camel - saxon - improve logging of xpathbuilder and xquerybuilder
updated resource loading in NNDataSet . java to use DataResource class to improve code clarity and maintainability by using a more descriptive class
pmd : add edgecasestokenizer test for issue 1751
added a check for the presence of the " atlas " property in the map to ensure that the map does not contain an atlas property to
camel - 14263 : camel - core - remove deprecate propertyplaceholdershelper in favor of propertyplaceholdershelper
added a call to levelDbDataSource . closeDB ( ) in BlockchainTest . java and removed redundant message broadcasting in KafkaTest . java to
refactor line extraction logic in CoreMarkdownNodeRenderer and update expected value in SpecMarkdownRendererTest to improve readability and maintainability of the code
fix checkstyle violation in webservice inboundgatewayparsertests
replaced ` ImmutableList . Builder ` with ` List ` and updated related methods in ` SQLBindings ` and ` AbstractSQLClause ` to improve code clarity
added a check for the " OpenJDK " virtual machine in the VirtualMachine class to ensure compatibility with OpenJDK environments
added a keepAlive ( true ) method call to the baseUrl setting in ReactorClient . java to ensure that the client remains alive during connection handling
replaced string literals with ShaderProgram constants in MD5Renderer . java and ObjLoader . java to improve code readability and maintainability by
camel - 14284 : fixed the issue that propertiescomponent can not be add to the registry if there be no property .
updated account retrieval logic in UnfreezeBalanceActuator . java to handle null account cases more effectively
updated version number from 3.2 . 0 to 3.2 . 1 in XMPPServer . java to ensure compatibility with the latest features and fixes
updated return statements to use ` t . unannotatedType ( ) ` for type variables to ensure accurate handling of unannotated types
refactor assertions in StorageGroupProcessorTest for clarity and consistency to improve code readability and maintainability by reducing redundancy
added ` DumpableCollection ` to ` dumpObjects ` method and modified ` Environment ` class to include ` Environment . getAll ( ) ` to
added a new parameter ` waitbeforestart ` to ` params ` in ` FFMpegVideo . java ` to set the wait time
removed the ` _ skipCorrupt ` parameter from the constructor of ` OrcEncodedDataConsumer ` and related classes to simplify the constructor and remove unnecessary
updated JUnit imports and modified test methods in AccessorsTest . java to improve test coverage and ensure correct handling of out - of -
add framemap ( ) method to lirgenerator to allow access to the framemap .
replaced ` @ Ignore ` with ` @ ConditionalIgnore ` in ` DynamoDbTicketRegistryTests ` and ` BaseAuthenticationRequestRiskCalculatorTests `
fix bauble not be able to place water on the bottom of the block .
updated the ` toString ( ) ` method in ` Directory ` and added ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the method ` allowExperimentalOptions ( ) ` and replaced it with a direct call to ` allowExperimentalOptions ( ) ` to simplify
added new methods ` then ` and ` then ` in ` BDDAssertions . java ` to enhance assertion capabilities in the BDDAssertions
refactor host handling in ForwardedRequestCustomizer to use hostField for better clarity to improve code readability and maintainability by using descriptive
updated logging level from debug to warn for Kubernetes configuration files and modified the Kubernetes configuration file path to improve user guidance on
added functionality to manage file upload statuses in UploadListActivity to improve user experience by allowing users to cancel or cancel uploads based on their upload statuses
replaced ` ProviderInstaller ` with ` ProviderLoader ` in ` TerminalManager ` and added a new ` ProviderLoader ` class to streamline provider loading
replaced references to ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests ` to improve
updated the SelectFromDatabaseChangeLogStatement to use a computed column configuration instead of hardcoded values to improve the readability and maintainability of
hhh - 13232 add support for get current _ schema ( ) in postgresql 8
do n ' t ceil partition per member when there be no data member
added error handling and scheduler state checks in ` ExecutionScheduleManager ` , ` ExecutionScheduler ` , and ` ExecutionSchedulerImpl ` to improve scheduler state
updated the instantiation of ` InlineBox ` to use ` text ` directly instead of ` text . toString ( ) ` to improve code readability and
reformatted checkArgument calls in StatisticMap . java for consistency to improve code readability and maintainability
updated the method ` getStagedRectSlideEnd ` from ` 383 ` to ` 500 ` in ` TabletSplitToConfirmTimings
updated button labels to use localized strings instead of hardcoded strings to improve localization support and maintain consistency in the codebase
updated condition to check for road item removal in the plot area to ensure road items are removed from the correct plot when the settings are enabled
added touch exploration enable / disable functionality in ShadowAccessibilityManagerTest and updated listener retrieval logic in ShadowAccessibilityManager to improve touch exploration state change handling and
pdfbox - 5328 : improve performance of getunicodecmap ( )
remove unnecessary call to getpropertyasstring ( testelement . name ) and use getname ( ) instead
pdfbox - 4892 : use poifsfilesystem . create ( ) to create npoifsfilesystem ( )
added imports for PS , PlotArea , and PlotArea , and modified return logic in Move . java to ensure proper handling of plot areas and
updated regex pattern for version matching in TestWebHCatE2e . java to ensure compatibility with additional version formats
updated the boundary condition in the pickleEvents check from ` count < 0 ` to ` count < 1 ` to ensure that the count does not exceed
fix : add clientid to consumer config when consumer thread be 1
added IsolatedClassLoader import and error handling in JavacCompiler . java to improve error handling by throwing an exception when the execution fails
ggb - 241 repaint the view only when the selection be change .
fix checkstyle issue in camel - spring - batch
added a method ` isAnimationFinished ` to check if an animation is finished based on a specified state time to provide a way to determine if an
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` in ` LoginMockMvcTests . java ` to verify
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified the refreshing text in ` HomeFragment . java
updated parameter name from ` newValue ` to ` newValue0 ` in ` stopEditing ` method and modified string replacements in ` DrawEquationWeb ` to
refactor ObjectHashSet class to improve code readability to enhance maintainability and facilitate future modifications
refactor equality checks in DataUtilities to use Arrays . equals for null checks to improve code readability and maintainability
allow for deletion of enchanted book in guicontainercreative if the itemstack tag do n ' t match .
added unit tests for asynchronous operations in the microprofile server to ensure proper functionality and correctness of asynchronous operations
rename the target header map suffix from " - target - flat " to " - target - user " in ProjectGenerator . java to improve clarity and
updated logging messages in MailService . java to improve error handling and logging to enhance clarity and debugging capabilities when sending messages fail
replaced the method ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` and introduced a constant ` EMPTY _ LABEL
added tests for retrieving partitions by name with multiple batch size batches in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct handling of
added a closing brace in FileListListAdapter . java to improve code readability and maintainability
changed ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OCFileListAdapter . java ` to improve performance
updated the index used to remove the last view in BubbleBarView from getChildCount ( ) to getChildCount ( getChildCount ( ) - 2 ) to ensure
removed unnecessary package declarations from Jetty WebSocket configuration classes to streamline code by eliminating unnecessary dependencies
changed the ` expiresSeconds ` parameter from ` true ` to ` false ` in the ` S3Request ` constructor to ensure that the ` expires
fix issue with jfxradiobutton not update animation when timeline be not set
updated the logic in DeweyNumber to check for a single split and added an exception for invalid dewey numbers to improve error handling and
updated category string handling in MwVolleyApi . java to ensure proper formatting of category strings to improve readability and maintainability of the category
corrected the spelling of " close control " to " close code " in the WebSocketClientTest . java file to improve clarity and consistency in
added a null check in WebappLoader and updated assertions in TestVirtualWebappLoader to ensure that an empty array is returned when classLoader is null
removed redundant code in PersistentAttributeTransformer . java to improve code readability and maintainability
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
added a new file TestPorterStemFilter . java to implement a PorterStemFilter test to verify the functionality of the PorterStemFilter in the
updated the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and added a success flag to the ` postBatchMutate
updated package names from ` exlore . support ` to ` explore . support ` in multiple test files to ensure consistency in naming conventions across
fix concurrentmodificationexception in chatwindowmanager . getactivepanel ( ) .
removed redundant calls to Sys . touch ( ) across multiple classes to streamline code by eliminating unnecessary touch calls
updated the untrackedFiles method in HgCmdLineInterface and its implementations in VersionControlCmdLineInterface and VersionControlCmdLineInterface
camel - 14284 : camel - netty - optimize timer usage in camel - netty
changed variable visibility from ' public ' to ' final ' in DirectionalLight , PointLight , and SpotLight classes to ensure immutability
added width and height checks to X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions are zero to prevent rendering issues with zero or negative
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a string representation
added a new class ` AnnoFilterTreeSet ` and methods to handle annotations in ` ClassFinder ` to improve the detection of annotated classes and
updated the logic for determining newLength in BytesColumnVector . java to maximize size of next smallBuffer when overflow occurs
updated the assertion in WriteBehindMapStoreWithEvictionsTest to check multiple items instead of a single item to improve test reliability and ensure
updated the method signature of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` X
bugfix : add isequal ( ) method to polyfunction to check if two function have the same degree
added a null check for the table before accessing its column class to avoid potential NullPointerException when the table is not initialized
added error handling for class instantiation in CustomChangeWrapper . java to improve robustness by handling potential ClassCastException during class loading
refactor ` DistBuildConfig ` and related classes to use ` DistBuildConfig ` instead of ` ConfigPathGetter ` to improve code
show warning message when double entry be disable ( fixes # 118 )
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to broken functionality
changed return types of ` doJoin ` methods from ` void ` to ` boolean ` in ` JoinTemplate ` , ` JoinWorker ` , and
removed the method ` getAutodeps ( ) ` from ` JavaLibraryDescription . java ` to streamline the code by eliminating unused functionality
added FLAG _ ACTIVITY _ NEW _ TASK to Intent flags in LauncherTimelineCursorAdapter . java to ensure that the intent is added to
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide functionality for filtering results based on pagination
updated assertions in RepositoryConventionPluginTests to check for a new repository index to ensure tests validate the correct URLs for different Maven versions
add a new node affiliation task for pubsub cluster . jm - 153
do n ' t use requestutil to normalize uris in taglibraryinfoimpl
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
refactor CacheKey class to handle array types and improve object comparison to enhance performance by avoiding unnecessary object comparisons for array types
refactor file type detection methods to utilize the Unix file system provider for improved compatibility to enhance file type detection accuracy across different operating systems
added a call to close the WebSocket session in TestWsWebSocketContainer . java to ensure proper resource management and prevent potential memory leaks
updated ShadowVirtualDeviceManagerTest to use shadowDevice . getVirtualSensorCallback ( ) instead of shadowParams . getParams ( ) and added new
added a condition to check if the context is different from the context before executing the HTTP session in HttpSessionSecurityContextRepository to ensure that the session is
http : / / issues . apache . org / jira / browse / amq - 4892 - fix npe in netutil . getip
renamed ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` for consistency and clarity to improve code readability and maintainability by
added secure validation and modified exception handling in various classes to enhance security checks and improve error messaging clarity
added a boolean flag to track if the icon change listener is already installed and updated the action listener accordingly to ensure that the icon change listener is only
added Russian language support to the Language . java file to support Russian language support in the application
hhh - 14497 fix duration unit in basesqmtosqlastconverter
disable frame state verification in the SubstrateGraphKit class to improve user experience by preventing unintended state verification
added teardown method to reset system properties after tests in RobolectricTestRunnerTest to ensure proper cleanup of test environment variables during teardown
added system class for SLF4J in ViewClassLoader and created corresponding test cases in ViewClassLoaderTest to ensure proper loading and validation of the LoggerFactory
updated conditional checks in ChangePackaging . java and added a new test in ChangePackagingTest . java to ensure proper handling of the " jar
fix test which fail on window due to miss file extension
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer
replaced ` getDefaultUnits ` method with ` setPreferredUnits ` and updated related methods to use ` UnitUtils ` for unit scaling to improve clarity and
[ java ] fix datepatternconvertertest failure due to timezone change .
removed unnecessary return statement in Terminator . java to improve code readability and maintainability
improve error message when a local file system fail to resolve
change the delay of show tracking notification to one minute instead of one minute .
updated FtpReconnectAttemptServerStoppedIT to increase reconnect attempts and modified connection count assertions to improve test reliability and ensure accurate connection count checks
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve thread safety and performance in concurrent scenarios
added ` ignore ` method to multiple log classes and implemented it in ` Logger ` , ` Slf4jLog ` , and ` StdErr
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
removed unnecessary byte casting for item and contents in BukkitWorld . java to improve code clarity and reduce unnecessary type casting
removed the call to ` GraphicsUtil . cleanImage ( img ) ` in ` PanelManager . java ` to streamline image processing by eliminating unnecessary
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for directory creation and unmapping functionality to implement a structured way to create MMap and Simple
pdfbox - 4071 : avoid npe when clean up invisible ic entry
updated the assertion message in QueryEqualityTest to use " _ s maxDocFreq = 1000 " instead of " maxDocFreq = 1000 " to
refactor ExtendedOperatingSystemMXBeanImpl to improve code organization to enhance maintainability and readability of the code
added a method to install left commands in the SideMenuBar class and updated the handling of left commands in the title bar status to improve command management and
added a ` advanceWindowed ` boolean flag and modified ` setUpWindow ( ) ` calls in ` TweetActivity ` and ` UserProfileActivity
added support for SybaseDatabase in DropPrimaryKeyGenerator to enhance compatibility with Sybase databases
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] do n ' t reset the lastrecordingposition when the leader be ready .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and implemented shouldDelayChildPressedState method
added a return statement in NearCachedClientMapProxy . java to prevent further processing in the NearCachedClientMapProxy class
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added shutdownHttpServer method to manage HTTP server shutdown to ensure graceful handling of server startup failures
camel - 15836 - camel - aws2 - s3 - stream : fix the npe in s3streamuploadproducer
[ hotfix ] [ taskmanager ] fix typo in taskmanagermetricshandler
drop network _ offerings key that do n ' t exist in 226 to 227 upgrade
added a new test class ` TestThriftCLIServiceSecurity ` and refactored password handling in ` TOpenSessionReq ` to improve code clarity
added a new variable ` maxEnergyLimit ` and updated energy limit assignment logic in ` VMActuator . java ` to improve code clarity and
added maxInMemorySize property and its getter / setter in HttpClientProperties and updated webClientPlugin constructor to accept properties to allow configuration of the maximum
refactor caching logic in Cache . java to improve performance and maintainability of cache operations
added new Cucumber test and step definitions files to implement Cucumber testing functionality in the application
added error handling for JSON parsing in TypeJsonUtils and updated test cases in TestArrayOperators to improve robustness of JSON parsing and ensure correct
updated hex string values in Utf8StringBuilderTest . java to ensure correct handling of UTF - 8 string representations
added a check to ensure parameters are not already set before appending them to the string map to improve parameter handling and prevent potential null pointer exceptions
camel - 14545 : add maximumnumberofoutputs to circuit breaker to limit the number of output on the loadbalancer
updated the document frequency assertion in TestIndexWriterExceptions . java to ensure that the document frequency does not exceed the configured maximum limit
replaced String and String methods with Sha1HashCode for hashing in multiple classes to improve performance and consistency in hashing operations
refactor enum value and value retrieval methods in AsmRuntime . java to improve code clarity and maintainability by eliminating unused methods
added new biome tags for MANGROVE , DEEP _ DARK , and IS _ UNDERGROUND , and IS _ 
[ java ] refactor image loading to use an executor service instead of a separate asyncimageloader .
changed access modifiers from private to protected and refactored preloading methods for better encapsulation to enhance encapsulation and improve performance
updated "  " prefix from "  " to "  " in multiple languages from "  " to "  "
replaced ` getImage ( ) . equals ( ) ` with ` hasImageEqualTo ( ) ` in ` AbstractSunSecureRule . java ` to
camel - jbang - run command should use -- repos to specify repo
added handling for NaN scores in CrawlDbReader to improve robustness by preventing errors when scoring is NaN
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure that the target and rolled files are updated after each test execution
updated focus handling in FilterConditionEditor and modified focus behavior in FindAction to improve focus behavior based on component focus state and focus behavior
[ hotfix ] [ checkpointscleaner ] make checkpointcleaner async
added a new file XPathWhiteSpaceTest . java to implement XML validation tests using XPath to ensure proper handling of whitespace characters in XML schemas
fix bug in bonsaipersistedworldstate when rollback be enable .
refactored FilledNewArrayInstruction class to improve code readability to enhance maintainability and facilitate future updates
[ java ] add timeouts to simplenetworktest to avoid timeouts .
updated the method to check if the parent path ends with a slash instead of a substring to improve readability and maintainability of the code
added a print statement to indicate the failure of loading the skin file to improve debugging by providing feedback when a skin file cannot be loaded
added methods ` markDirty ( ) ` and ` isValid ( ) ` to ` LgoGroupedLevel2Update ` and modified ` skip (
added a static final UNDEFINED Result constant in Result . java and updated TestStep . java to use it to improve code clarity and maintainability by
replace PersistenceException with NullPointerException in TestTransactionCallback . java to improve error handling for null pointer exceptions in the database registration process
change uploadjobmultipartoperation to implement identifydataserializable ( )
[ hotfix ] [ runtime ] do n ' t ignore miss journal file when recover
bugfix : summarylevels . of ( nodemodel ) ignore child node in verticalviewlayoutstrategy
removed the ` volatile ` keyword from ` pos ` and added a new ` sizeMask ` field and updated the ` ensureAvail ` method
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to cruelty to
refactor target assignment and array initialization in StorageProxy . java to improve clarity and efficiency in handling message arrays
[ java ] remove unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
added new string representations for various transformation functions in TransformFunctionType . java and updated type mapping in TransformFunctionFactory . java to enhance type
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` to enhance functionality by allowing method overriding in the
updated RFC3280 references from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compliance with RFC standards and improve
updated version number from 2.27 . 3 to 2.27 . 4 and changed type from int to Character in SearchAnnotationVisitor to ensure compatibility with the
refactor ` ListActivity ` and ` NoteAdapter ` to use ` SparseBooleanArray ` instead of ` HashMap ` and ` HashMap ` to improve
refactor conditional statements in DirectUpdateHandler2 . java for clarity to improve code readability and maintainability
refactor path handling in ConfigFileApplicationListener to use ResourceUtils for URL prefix to improve code readability and maintainability by utilizing resource utility
updated ` PreviewPositionHelper ` initialization to include ` Context ` and modified device insets calculations based on multi - window mode to improve layout handling and
[ java ] use termbaselogposition instead of truncateposition when publish newleadershipterm ( ) .
pmdcoveragetest : add more asserts to pmd coverage test
updated the skip logic in ByteArrayInputStream and added a new Skip class for testing to improve accuracy of skipped bytes and enhance testing capabilities for expected behavior
refactor conditional checks in UpdaterTask . java for clarity to improve code readability and maintainability
make headersmessage . maxheaders public and add a conditional check before call blockchaindownload ( )
add rt . jar to the list of standard jars in modclassloader . java
refactored connection handling logic in AbstractHandshakeHandler . java to improve readability and maintainability of the code
updated method signatures and parameter retrieval methods in RasterLayerResponse , RasterManager , RasterManager , GTDataStoreGranuleCatalog , RasterLayerResponse ,
added a condition to check if the response is already committed before setting attributes to ensure that error responses are only sent if the response has not been committed
updated conditional checks in HttpSession . java to improve clarity and correctness to enhance code readability and maintainability by simplifying conditions
modified fadeOut behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController to enhance user experience
do n ' t log unknown prefab in debug
updated ScimGroupExternalMembershipManager and ScimGroupBootstrap initialization in LdapMockMvcTests . java to ensure proper handling of external user memberships
updated thirtyDays calculation in FreezeBalanceActuator and added a validation check in TransferActuator to ensure that the minimum amount is 1
updated lastIndexOf method to use File . separator instead of a hardcoded ' / ' to improve compatibility across different operating systems
do n ' t show the input help panel if there ' s no error message
updated GpsMainActivity to use session description instead of an empty string and modified service intent handling in AnnotationViewFragment to enhance user experience by providing
updated JsoupNonVisualRegressionTest to include a conditional check for the number of pages and modified the assertion to ensure the pdf file is saved
move androidbufferallocator to androidnativebufferallocator and deprecate androidbufferallocator
added checks for flag names starting with " ! " in Main . java and PrimaryItem . java to ensure proper handling of flag names that start with
added a NOPMD comment to the fileRS query in JDBCHistoryCache . java to clarify the purpose of the executeQuery ( ) method
changed string comparison from ` equals ( " ITEM _ USE _ GRANT _ SELECT _ REWARD " ) ` to ` ItemUseOp
refactor QueuePriorityTest to improve item count validation and add a toString method to PriorityElement to enhance clarity and maintainability of the test logic
fix flaky unit test in affinityapitest
added a null check for the main command and modified the argument check to include the help option to enhance user experience by providing help information when the command
updated LightOutputStream parameters from 7 to 4 in PropertyTypes , ByteIterableBase , ByteIterableBase , ByteIterableBase , and LongBinding classes to
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a new boolean variable ` showBlank ` and modified conditional logic in ` ClassWriter . java ` , and created a new class ` T80
removed assertion check for length of sn in Person . java to streamline code by eliminating unnecessary assertions
added null check for file extensions in VirtualFile . java to improve robustness by avoiding potential NullPointerExceptions
fix a bug in the contact right button menu .
[ hotfix ] [ runtime ] do n ' t remove disposed slot in slotsharinggroupassignment
simplified the iteration logic in InstallShortcutReceiver . java to improve code readability and maintainability
refactor binding and resource management in PlainSocketImpl to improve code clarity and ensure proper resource cleanup
added functionality to manage removed items in GridViewAdapter and MediaDetailPagerFragment to improve user experience by managing removed media items effectively
updated log message from " the center of element " to " the element ' s in - view center point " to clarify the purpose of the offsets
added a new file ` bug4865918 . java ` to implement a GUI test for the ` JScrollBar ` class to address bug 486
kerberos : use velocity . evaluate instead of velocityengine . init ( ) in akkerberosoperationhandler
added group trigger messaging functionality to the QuestCommand class to enhance user experience by providing feedback on group triggers
fix crash when open gnucash account file chooser
added Lombok ' s @ ToString annotation with callSuper = true to PartitionChangeEvent and TbApplicationEvent classes to improve code readability and
updated the service description from " io : openhabcloud " to " io : openhabcloud " and added a constant for the configuration URI to
removed redundant setViewportComponent and setJScrollPane methods from BrowserPanel . java to streamline code by eliminating unnecessary method calls
added keycodes for back and delete keys in LwjglInput and updated texture handling in ParticleEditor to improve keyboard input handling and
added a configuration option to conditionally retrieve MIME types based on configuration to enhance flexibility in indexing behavior based on user preferences
added author recognition functionality in JSDoc . java to enhance documentation clarity by including author information
updated metrics constants in MetricsConstant . java to replace ` delta _ total _ dbs ` and ` delta _ total _ partitions ` with ` create
updated HiveDatabaseSchema and HiveSchemaFactory to incorporate DrillHiveMetaStoreClient and SchemaConfig for improved database access handling to enhance error handling
added a queryParams parameter to the oauth2LoginLinks method and modified its implementation to include error handling to enhance the oauth2LoginLinks method to support
updated the Hijrah calendar name from " Hijrah - umalqura " to " Hijrah - umm al - Q
added support for non - Firefox browser in WebAudioWrapper to ensure compatibility with both IE and Firefox browsers
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` InterceptorConstants ` constructor from ` InterceptorConstants `
added a condition to read the " DEFAULT " column in the parser and updated test cases for table creation to ensure proper handling of the " DEFAULT "
updated method calls in WriterRecordBatch and StreamingAggTemplate for consistency to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean flag ` hasFrom ` to the ` Delete ` class and modified ` DeleteDeParser ` to conditionally append a " FROM "
updated synchronization logic to handle multi - status responses instead of success status to improve handling of multi - status synchronization and enhance error logging for better debugging
refactor RecipeScheduler to use a new utility method for checking applicable tests to improve code readability and maintainability by encapsulating test
updated regex pattern in LogAnalyser . java to allow colons in timestamps to improve parsing accuracy by allowing colons in timestamps
camel - 16297 : camel - jbang - enable integration test for google cloud
fixed - rsearch . search ( ) method should use maxexclusive instead of minexclusive
CCLicenseStep . java : add option for select change and no license to improve code readability and maintainability
added a null check for globalId before adding it to the guidIndex to avoid potential NullPointerException when globalId is null
updated comparison strategy from ` equals ` to ` areEqual ` in ` OptionalAssert . java ` to improve readability and maintainability of the comparison
refactor LAST _ MARGIN _ BOTTOM handling in NoNewLineParagraphCssApplier and ParagraphCssApplier to check for 
added a new file TestArrayCopyToFromObject . java that tests ArrayStoreException to ensure that ArrayStoreException is thrown correctly when copying an
update ` BuckPythonProgram . java ` to use ` escapeAsPythonString ( ) ` instead of ` escapeAsBashString ( ) `
[ java ] fix race condition in ajp / nio / protocol / ajpprotocol .
add a new boolean parameter to craftinghelper . findfiles ( ) and deprecate it .
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test due to instability
added null check for client . doRequest ( ) in TestInternalInputBuffer . java to ensure proper handling of potential null exceptions during request processing
refactor ` autoloadCall ` method to include a ` autoloadLocks ` set and update related logic to improve lock management and enhance class
updated server version comparison logic in CustomPlaybackOverlayFragment and removed HLS support check in PlaybackController to improve server version validation and enhance user preference
updated localhost usage in KDC and OneKDC classes to include " localhost " format to ensure correct identification of the localhost in the
updated Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of jsr
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability by reducing wildcard imports
added a new constant HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory . java to improve session parameter handling and ensure
camel - 15836 - camel - hdfs - add snappy codec to camel - hdfs
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper synchronization during test execution
fix bug # 488 , bug # 488 , bug # 488 , bug # 488 , bug # 488 , bug # 48
updated glyph positioning logic in GlyphLayout . java and modified test message in BitmapFontTest . java to improve glyph rendering accuracy and enhance test coverage
updated Fabric8IstioIT to use Commons . ISTIO _ BIN _ PATH directly instead of a hardcoded absolute path
replaced calls to ` ReportPlaybackStartAsync ` with ` reportPlaybackStart ( ) ` in ` PlaybackController . java ` and ` Utils .
fix a memory leak in simpleauthority . patch by jbellis ; review by brandonwilliams for cassandra - 1227
fix maploader eviction on initial load
change return statement from LENGTH _ BIT & ERROR _ BIT to LENGTH _ BIT | ERROR _ BIT to ensure proper handling
add support for add an anonymous community to the default policy list
added caching mechanism for CompositeFont objects using SoftReference to improve memory efficiency by reducing redundant object creation
updated the calculation of prefHeight in Tree . java to use zero instead of subtracting to ensure prefHeight is always set to zero and avoid unnecessary
drools - 1010 : fix dmn feel validation error message ( # 296 )
removed unused imports from multiple Java files to improve code clarity and maintainability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and updated execution method in ` NavHandleLongPressInputConsumer `
added null checks for node IDs in ElementFactoryImpl . java and updated edge handling in ImportContainerImpl . java to improve error handling and ensure
[ beam - 10715 ] do n ' t drop unknown function response ( # 10210 )
nifi - 126 : fix a bug in binfiles when a flowfile larger than the bin limit .
replaced Geometry . findClosest with a loop to find the closest core to improve accuracy in determining the closest core based on its coordinates
added a check for CONTENT _ LENGTH in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateTestRestTemplateCopyHeaderFilter to
updated Java2TypeScriptTranslator and SyntaxTests to enhance string handling and improve test coverage for string exports to enhance functionality and ensure correctness of string
updated scaling parameters and sample sizes in FilterFactory , ChannelizerViewer , ChannelizerViewer , PolyphaseChannelManager , PolyphaseChannelManager ,
hbase - 27375 canary : add - allregions option to attempt to try all region on a regionserver
[ hotfix ] [ cassandra ] remove nodemodule from testcassandraconnector
added a call to reset the cursor position in KahaDBStore . java to ensure the order index is reset before processing new data
[ java ] set minimum size of the call dialog to a minimum size of 360 and 300 .
fix blockfalling . getblockstate ( ) to not lose state information during world gen .
[ java ] make testhttpsamplersagainsthttpmirrorserver static to reduce memory footprint .
added dependency injection for KerberosPrincipalHostDAO and modified entity removal logic in KerberosPrincipalEntity to improve resource management and prevent potential null pointer exceptions
removed the boolean parameter from the getTableSnapshot method call to simplify the method call by removing unnecessary parameters
do n ' t try to increment the maintain variable if it be n ' t possible to do so .
updated the error message for android . licenseKey in AndroidGradleBuilder . java to clarify the purpose of the license key in the build hints
updated fileFolder instantiation to use getDisplayName ( ) instead of getName ( ) and modified isInsideTranscodeFolder ( ) method to improve clarity by using
[ drools - 118 ] add support for spring - boot - root . classes .
added an assumption to skip tests on versions 19 and above in CheckIndexTest . java to ensure compatibility with devices running version 19 or higher
removed the context parameter from the assignTargetsForSplitScreen method and updated related logic in AbsSwipeUpHandler and RemoteTargetGluer classes to simplify
refactor LeaderLatch class to improve code readability to enhance maintainability and facilitate future updates
added methods to initialize ZooKeeper parameters in SolidityNodeHttpApiService . java to ensure Zookeeper parameters are correctly loaded and stored in a
add getdepthfuture to transactionconfidence so that it can be use in a concurrent environment .
updated variable and method names from ` longtitude ` to ` longitude ` for consistency and clarity to improve code readability and maintainability by standard
set default platform name to " ios " in JavaSEPort . java to ensure consistent platform naming across the application
pdfbox - 4071 : fix typo in javadoc of pageeditclient
reformatted conditional statements for mozDash and webkitLineDash in Graphics2D . java to improve code readability and maintainability
refactor CreateVisibleSignature class to improve code organization to enhance maintainability and readability of the code
added error handling for frame processing in AbstractExtension . java to improve robustness by handling potential exceptions during frame processing
replaced the try - catch block with a privileged action for checking the caller class loader to enhance security by using a privileged action instead of a try -
added logic to reset the parent category of feed categories based on their IDs to ensure that the category hierarchy is reset when it differs from the
updated the ContributionManagerDialog to use a localized title for mode , tool , and library contributions to improve user experience by providing clearer and more
added a new BigDecimal ' vwap ' field and its getter and setter methods to the Ticker class to enhance the Ticker class to include
added functionality to display a no widgets view in the Search and Recommendations scroll controller to improve user experience by providing a clear indication of the absence
add rendergraphapi to enable tinting of render graph in worldrendererimpl
set the primary color for the messaging service to enhance the visual appearance by using the primary theme color
refactor ShadowUsbManagerTest for improved clarity to enhance maintainability and readability of the test code
update recommender evaluator to use evaluationpercentage instead of trainingpercentage
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated correctly after changes
added a check for zero dimensions in AndroidGraphics . java to ensure minimum values do not exceed one to prevent potential errors in bitmap dimensions
replaced HashMap with LinkedHashMap for options in multiple classes to maintain insertion order for consistent iteration order
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a more efficient closure
test : migrate camel - main to junit 5 ( # 4594 )
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , to implement a WebSocket integration test for
[ dsm ] remove obsolete test in abstractimportmetadatasourceservice
refactor authentication comparison logic in AbstractCasWebflowEventResolver to use EqualsBuilder to improve code readability and maintainability by encapsulating authentication
added a conditional check for x86asm property in X86MethodGenerator . java to ensure that the method returns false when x86asm is not
replaced calls to ` callNode . getType ( ) ` with a single variable ` callNodeType ` to improve code readability and reduce repetitive
added an Insecure annotation to the MessageBuffer class and modified the MessageBuffer constructor to use it to enhance security by allowing access to secure byte arrays
added new configuration variables for Hive configuration in HiveConf . java to enhance the flexibility and usability of the Hive configuration
added a new HashSet instance for scopes and policies in ResourceSet . java and added a null check for policies in DefaultResourceSetService . java to
made the ` decrefOnClose ` variable final and modified the constructor of ` MultiReader ` to include a ` Collection < ReaderFinishedListener >
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and Test3 classes to improve code organization and
simonstewart : re - enable the selenium clear test and fix the selenium bug
replaced the usage of ` $ Gson $ Types . getFirstTypeArgument ( Type type ) ` with ` getFirstTypeArgument ( Type type ) ` in
changed return types of keySet ( ) and values ( ) from Set < Integer > to KeySet and Values in Int2IntHashMap . java to
added bgColor and duration properties with getter and setter methods in FlipTransition . java to enhance flexibility by allowing customizable duration values
removed trace logging for invalid subsAreValidForStreaming in DLNAResource . java to clean up unused code and improve performance
bump version to 9 to ensure compatibility with newer forge release
replaced System . err . println with LowLevelLogUtil . log for warning messages related to multi - release JARs and location - based features
added support for java 16 and 17 post processing in the parser configuration to enhance compatibility with newer Java versions and ensure compatibility
updated padding logic for background view in ExpansionViewHelper . java to improve layout responsiveness based on the number of replies
updated callback logic in AbstractPartitionPrimaryReplicaAntiEntropyTask . java to ensure proper response handling when versionMap is empty
added metadata handling functionality to SeedUrl and SeedResource classes to enhance the flexibility and usability of the seed URL functionality
added a null check for the declaration before creating a Pattern to ensure that the declaration is not null before processing to avoid potential NullPointerExceptions
refactor TestCoprocessorWhitelistMasterObserver class for improved clarity to enhance maintainability and readability of the code
ww - 3953 add package name to action configs ( ww - 3996 )
updated type casting and added a new test method for checking null values in IterableTest . java to enhance type safety and ensure correct handling of null
added stream methods and parallel stream implementations to MapIterable and PrimitiveObjectMap classes to enhance stream handling capabilities for improved performance in data processing
modified the return statement to clone the notifInfo object to ensure that the original notifInfo object remains unmodified
update key comparison logic to use commandConstants instead of key to improve readability and maintainability of command key validation
pdfbox - 4071 : fix typo find by codespell on fossies . org
added an ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` ILocalVariableAwareVariablesMap ` , and ` WebVariables
added a check for null ID in PackageResourceTable . java and changed the default resource mode from best to legacy in RobolectricTestRunner .
added a conditional check for ` ulSize ` and ` ulPos ` before setting underline metrics in ` TrueTypeFont . java ` to ensure proper
refactor SignPlugin to accept a List < HttpMessageReader < ? > > instead of a static final List < HttpMessageReader < ? >
refactor Int2ObjectCache class for improved performance to enhance efficiency of object caching operations
added validation check for MavenDeployer instance in StandardMavenAuthenticationProvider to ensure that MavenDeployer instances are validated before proceeding
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future feature additions
updated SSL handling in LinkyHandlerFactory and refactored cookie store access in EnedisHttpApi to improve security and streamline cookie management
refactor HiveFunctionRegistry to use Streams for function replacements and improve code readability to enhance performance and maintainability by leveraging Stream API
no functional change - fix typo in jmx mbean name
modified the ` getBuildTargetForAlias ` method to handle the ` possiblyFlavoredAlias ` parameter correctly to improve the accuracy of the build target
[ camel - 14233 ] fix olingo2 consumer to not process empty odata feed .
added a map of equivalent versions and modified version retrieval logic in MetaStoreSchemaInfo . java to improve version management by utilizing a centralized map
server : do n ' t expunge vms after advanceexpunge
mark multiple methods in AbstractDateAssert as deprecated to indicate that these methods are outdated and should no longer be used
refactor ONDashClockExtension and AlarmReceiver to use a new method for retrieving note titles to improve code clarity and maintainability by centralizing
renamed GoogleAuthUserConfigTable class to GoogleAuthUserConfigTableTest and updated assertions in TotpEndpointIntegrationTests to improve clarity and consistency in
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes to improve performance and simplify preference management
added a new ` TestIdleListener ` class and modified the ` StandardSession ` initialization to include an idle listener to enable tracking of idle state during
[ hotfix ] [ table - planner - blink ] fix bigqueryio integration test
set the background resource for the icon and reset the icon background in HotseatPredictionController and BubbleTextView to improve the visual appearance of the icon
mondrian : fix typo in mondrianproperties . flushafterquery property name
[ native ] add native test for native query runner
fix a bug in the lime explanation when there be only one output
added command - line argument handling to AppleSimulatorController and InstallCommand classes to allow users to pass command - line arguments when running with - r
refactor code to use GenericStyledArea for obtaining paragraph positions to improve code readability and maintainability by reducing repetitive method calls
added a check for the availability state of the manager in ContainerBase . java and StandardContext . java to ensure that the manager is available before proceed
added clipping to outline to the background view in QsbWidgetHostView to enhance visual appearance of the background in the QSB widget
added flag conversion tracking and improved flag processing logic in SQLManager , BlockTypeListFlag , PlotArea , and PlotArea classes to enhance flag processing
updated import statements and modified depth handling logic in FloatingTextRenderer . java to improve code readability and ensure proper depth management based on floating text
rename target _ com _ oracle _ nfi _ backend _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi
added getter and setter methods for propagationBehavior in JdbcAggregationRepository . java to allow customizable propagation behavior for transaction templates
add check for l1 / l2 regularization before set idropout / idropout in baselayer
added exception handling for read and write operations in AbstractChecker . java to improve robustness by catching potential exceptions during connection operations
changed the visibility of colorStack from static to instance and updated its assignment to improve encapsulation and ensure consistent access to colorStack
updated method calls from ` getMappedStatement ( false ) ` to ` getMappedStatement ( true ) ` and ` hasStatement ( false ) `
changed the method call to convert the identifier and currency to lowercase to ensure consistent handling of currency names regardless of casing
updated MQTT values in ChannelStateTests from " 0.00 " , " 0.00 , 0.10 , 0.10 , 0.10 , 0.1
remove unused versionedhash field from enginepayloadparameter
set trigger price to empty string and call ontriggerpricechanged ( )
refactored conditional logic in StudentFeedbackSubmissionEditSaveAction . java for improved readability to enhance code clarity and maintainability
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 26144 fix npe in hstore . get ( ) when result be null
no effective change - add test for savemanybeans . getchangedproperties ( ) and testbeanstate . getchangedproperties ( )
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods to control the behavior of session validation based on the ` _ always
added static methods ` nSetLayerType ` and ` nSetLayerPaint ` to ` ShadowRenderNode ` to implement layer type and paint functionality
updated import statements and added popup menu handling in LWChoicePeer . java to improve code clarity and ensure proper visibility control for the popup menu
updated the initialization of the ` insert ` variable in ` StressProfile . java ` to ensure consistent behavior when ` insert ` is null
replaced ` JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper classes to improve code clarity and
[ mockserver ] add log for received request and send request to client
added a warning log for properties file loading in DefaultEnvironment . java to improve error handling and provide clearer feedback when properties file cannot be loaded
added try - with - resources for SessionDataSet initialization to ensure proper resource management and prevent potential memory leaks
added a condition to check if the network interface supports multicast and the network interface is up to ensure that outgoing connections are only processed when the network is
updated sqlCommand initialization to include a length parameter to ensure proper handling of command input in SQL commands
added methods to set consume time for bandwidth and energy in UnDelegateResourceActuator and removed redundant methods in BandwidthProcessor and EnergyProcessor to
added a method to set an invalid session strategy and updated related logic to improve session management by allowing dynamic configuration of the invalid session strategy
add more detail to failedserializationerror message when index can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` for verifying the presence of keys in map assertions to ensure correctness of
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and modified the ` genclass ` method calls in ` JdbcProxyGenerator . java `
added a static method ` ensure ( Server server ) ` to ` ServerWebSocketContainer ` and updated references in ` DirectUpgradeTest ` to improve WebSocket
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to utilize ` ImmutableListMultimap ` for improved immut
pdfbox - 4071 : use point2d . float instead of point2d . float , a suggest by valerybokov
add a static final empty array to method . hooks , and make method . hooks a static field .
added a grantAccess flag to the MockAuthenticationManager and modified the return statement to conditionally grant access to enhance security by allowing users to bypass access
updated the ` afterJob ( ) ` method to accept a ` JobExecution ` parameter across multiple classes to enhance the method ' s functionality to accept
updated the file permission check in SharedLibraryLoader . java to ensure both writable and executable files are validated before proceeding
[ timeseries ] [ table - planner - bom ] add hastimeseriesquerylanguage ( ) method to the timeseriesquery class (
bug 62023 - use event instead of result , so that we can get unmarshalling work
added new constants for battery level , annotation , time offset , distance , and profile name in BundleConstants . java and updated CustomUrlManager . java
change the parameter type of the applyRule method from Hashtable to Map to improve flexibility in handling different data structures
ggb - 221 move the audio object instead of the widget , so that it would well reflect what be be move .
updated texture handling and filters in JoglGraphics and ProjectiveTextureTest classes to enhance texture quality and improve texture quality in the project
refactor setResourceToDelegate method to return a File object instead of void to improve resource management by ensuring the output resource is writable before use
camel - 14297 : fixed endpointhelper to resolve property placeholder when use intercept . uri .
updated the condition from ` > ` to ` = ` in ` ActionScheduler . java ` and modified the test assertion in ` TestActionScheduler .
updated dbg _ zip path from " / tmp / ums _ dbg . zip " to " / tmp / ums _ dbg
add hidden hidden support to renderingdebugconfig and renderdebugconfig .
refactor gate reset logic into a new method ` resetGate ( ) ` to improve code readability and maintainability by encapsulating gate
added Locale management in TestSupplementary . java to ensure the default locale is restored after running tests to prevent potential resource leaks
updated the random color value in the Team constructor from 0.8 f to 0.4 f to improve the visual quality of the team
updated the type of ` activeMatchedStates ` from ` HashSet ` to ` Collection ` and modified logging statements to improve performance and ensure proper handling of
updated the condition to check for null or empty expected exceptions in SoftAsserts . java to improve clarity and correctness of exception handling logic
added error handling for InvalidJSON and UnrecognizedPropertyException in StoragePluginRegistryImpl to improve error reporting and provide clearer error messages for better debugging
[ hotfix ] [ table - common ] refactor calltreeprinter to use tocsvfile ( )
added null checks for note and modified note handling logic in DetailFragment . java to improve robustness by preventing potential NullPointerExceptions and ensure proper
added peakTasks tracking and adjusted loaded calculation in AssetManager . java to ensure accurate loading of assets based on the number of peak tasks
simonstewart : do n ' t enable native event on window for the firefox driver
added new score and fetch interval metadata handling in Injector . java and updated the way score is handled in CrawlDatum to enhance the flexibility of
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` in ` ScimExternal
updated the null check for zkController in CoreContainer . java and added a method to check schema sharing in TestCoreContainer . java to improve code
updated ` sizeInBytes ( ) ` method calls to include ` true ` and ` segInfoStat ` parameters across multiple classes to ensure accurate size
changed assertions from assertEquals to assertNull for Version1 _ 2 in VersioningTest . java to improve test clarity by indicating that the version is not null
updated SQL query to include an additional condition for nullability types to ensure proper handling of non - null values in the database metadata
[ java ] : do n ' t wait for consensus term event to complete .
removed the ` buildMediaType ` method from ` WebClientPlugin ` to streamline the code by eliminating unused content type handling
refactor method names from ` fill ` to ` fillSlice ` and ` fillWithLengthPrefix2 ` across multiple classes to improve clarity and consistency
added a new boolean variable ` isCompactedBase ` and modified conditional checks in ` AcidUtils . java ` , along with a new test
fix npe in ptableimpl when set immutablestoragescheme and qualifierencodingscheme
added two new classes , PojoProducersCustomized and RestProducersCutomized , for customizing POJO and REST services to
updated cache key retrieval from " cache " to " CACHE _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to ensure consistency in
do n ' t register aes - gcm siv proto serialization for aes - gcm keymanager .
fix modded wooden slab in oredictionary , close # 118
refactor multiple session management classes to improve code organization to enhance maintainability and readability of the session management code
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class hierarchy by
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14497 fix test failure on oracle
updated drawing position in HelloWorld . java to correct the positioning of the spriteBatch to ensure proper rendering by correcting the positioning of the
updated permission handling in PlayerFunctions and modified string concatenation in PlotId and WorldGuardListener to improve clarity and consistency in return values and enhance readability
added a deprecated LUCENE _ 8 _ 5 _ 0 version constant to indicate that this version should no longer be used in favor of an
updated print statement formatting in SSLSocketImpl . java to improve readability of log messages for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL parsing and deparsing correctly for
refactor dependency handling in CoNLLUOutputter to use an enum for dependency types to improve code readability and maintainability by leveraging
updated methods in ` NoSuchBuildTargetException ` and ` ParseContext ` to use ` parseContext . makeTargetDescription ` for building target descriptions to
updated the method call from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild . java ` to streamline the
updated array initialization and loop iteration to use 256 instead of Block . blocksList length to optimize memory usage and improve performance
updated logging messages in BukkitMain . java to use System . out for consistency and clarity to improve user feedback and ensure compatibility with newer server versions
updated SQL statement escaping logic in AbstractSQLChange and added a test for escaping Postgres question mark operators in AbstractSQLChangeTest to ensure SQL statements
added methods ` ofAll ( Iterable < ? extends T > items ) ` and ` withAll ( Iterable < ? extends T > items ) `
pdfbox - 4071 : add html escape code for adoc and page shortname and permalink , a suggest by valerybokov
updated MqttBrokerConnection constructor to set the second parameter to false to ensure proper configuration of the connection settings
updated the way a ChangeSet is retrieved by using the root change log if available to ensure a valid change log is used when accessing the change
updated method calls to use methodResult instead of creating a new MethodResult object to improve code clarity and maintain consistency in output handling
added HiveMetaStoreClient to drop databases in TestHiveMetaStorePartitionSpecs and enhanced logging in TestObjectStore to improve database management
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated its usage in the BithumbAccountServiceRaw class to include
deleted the SSEFluxWebConfig . java file to the configuration is no longer needed in the project
refactor method return type checks to use method . getReturns ( ) instead of method . getReturnType ( ) . getFullyQualifiedName ( ) to
added a new endpoint ` listYamls ` and updated YAML handling in ` YamlResource . java ` to enhance functionality by allowing users to list YAML
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to restrict access to the methods
refactor threadFactory to use lambda expressions and add a static method for a termination check to improve code readability and reduce boilerplate code
added unit tests for adding documents with simple and mapping converters in MongoTemplateTests . java and created a new PersonWithAList . java with
ggb - 221 sync applet panel size correctly ( not only width / height )
changed toolbar visibility settings from VISIBLE to GONE and added a delay to improve UI responsiveness by ensuring toolbar is hidden after a delay
[ iotdb - 4970 ] fix overlap check in seriesreader . hasnext ( )
do n ' t save vm password if vm be not run on the router
added boolean flags for output stream , writer , and character encoding in Response . java to ensure proper handling of output streams and character encoding settings
added a condition to check assignment side effects before proceeding with the group dialog to avoid unnecessary processing when assignments side effects are not met
refactor JSON and JSONObjectConvertor classes to improve code organization and maintainability
updated icon width check to use maxWidthWithMargin instead of maxHeightWithMargin to ensure icon size does not exceed the maximum allowed width
refactor ` fetchPublicKey ` method to return ` StringUtils . EMPTY ` instead of ` EncodingUtils . encodeBase64 ` to improve code readability
added a method to check content types for non - Windows operating systems and updated import statements to improve file handling and ensure content types are correctly read from
implement netty compression for jzlib .
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and removed its usage in ` MethodHandles . java ` to
removed unnecessary parameter from the doConnect method in ChannelProvider and ProxyChannelProvider classes to streamline connection handling and improve code readability
added functionality to start the output field in TextReader and implemented a test for handling empty final columns in TestCsvHeader to ensure that the CSV header
added compass gravity and margin settings to NearbyMapFragment to enhance the visual appearance of the compass in the user interface
added a new test method ` testInterpolation ` in ` GeoPathTest . java ` and modified distance calculations in ` GeoPathFactory . java `
added HiveException handling and improved method signatures in LeafFilterFactory , ParquetFilterPredicateConverter , and TestParquetRecordReaderWrapper to improve error
added language setting logic for video streams in LibMediaInfoParser . java to ensure proper language handling when no specific language is specified
add a warning log when schemas in the new version be less than the old one
replaced manual item addition with a custom ` addAll ` method across multiple array classes to improve code readability and maintainability by reducing redundancy
added spacing around try - catch blocks in DataSourceProxy . java to improve code readability and maintainability
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a Map < String , ClientRegistration > instead of a List < Client
added a method to reset the UI state in SchemaUpgradeHelper . java to ensure the UI state is correctly reset during schema upgrades
added a new boolean field ` failedStep ` and updated conditional logic in ` JUnitReporter ` to improve error handling by distinguishing between ignored and
fix playerselector allow . in entity selector ( # 82387 )
added Closeable interface to Selector class to ensure proper resource management and prevent potential memory leaks
added support for multiple connection pooling in MaxConcurrentStreamsTest . java to improve resource management and performance in concurrent stream tests
added multiple calls to stringType ( ) in CoreOptions . java to ensure proper handling of string types in the application
added conditional checks for character and parameter in HqlQueryRenderer and updated context configuration paths in tests to improve query rendering accuracy and ensure compatibility with H
updated status handling to use HttpStatus constants for better clarity and consistency to improve code readability and maintainability by using more descriptive status codes
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix test that fail on window due to slow creation
added support for expanding and expanding Parquet metadata files in ParquetFormatPlugin . java and modified file existence checks in ParquetGroupScan . java
updated ` isSuccess ` initialization and modified ` BuckJavacTaskProxy ` in ` Jsr199Javac . java ` to correctly
added a TableModelListener to handle table changes in DefaultSortedTableModel to ensure listeners are notified when the table changes
updated the condition from 49152 to 65535 in ServerConfig . java to allow for a maximum of 65535 entries in the server configuration
added SDK version checks and notification for document provider authority in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with devices running KitKat and above
added a call to ` Log _ OC . startLogging ( getAppContext ( ) ) ` in ` MainApp . java ` to enable
added ThrowableAnalyzer to handle wrapped RequestRejectedExceptions in FilterChainProxy to ensure proper handling of wrapped RequestRejectedExceptions
updated array copying logic in StringBuilder . java to use ' this . length ' instead of ' length ' to ensure correct size is used for copying characters
pdfbox - 4071 : add check for empty filterlist in filter . decode ( )
add a simple stopwatch utility to make it easy to use .
fix bug in pliststore . setinitialized ( true ) .
added @ Deprecated annotation and log warning in multiple classes to indicate that these classes should no longer be used and may be removed in future versions
added context class loader setting for the current thread in RemoteInterpreterServer . java to ensure proper class loading behavior for the current thread
fix incorrect usage of player . getentity ( ) in commandsourcestack .
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with
corrected variable name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve code
no effective change - add beanelement . getsimplename ( ) and beanelement . getelementdescriptor ( ) . getsimplename ( ) to
updated URLs from " wro / all . js " and " wro / all . css " to " static / all . js "
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT . java ` to verify the functionality of fetch
updated configuration parameter name from " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency in naming conventions and improve clarity
modified exception handling in OCSPChecker to differentiate between CertPathValidatorException and other exceptions to improve error handling by ensuring specific exception types are handled correctly
benchmark : add option to disable output solution writing
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class Issue _ 815 to verify the slice size functionality in the SortedTableMap sink to address issue # 815 related to
add a shapeless recipe to the botania crafter , close # 118
mahout - 179 : fix arrayindexoutofboundsexception in sequentialaccesssparsevector # iterator ( )
added metadata handling for Shulker and PlotArea entities in BukkitMain . java and EntitySpawnListener . java to ensure entities have the correct owner
added a ` getDebugLogger ( ) ` method to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide a convenient way
added imports for ` File ` , ` FileInputStream ` , and ` FilenameFilter ` , and modified ` MaximumDirNameLength ` and ` MaximumFileName
refactor the UpToTagChangeSetFilter instantiation and add a method to check if a tag has been seen to improve error handling and provide clearer
( chore ) camel - gopump : use java arraylist instead of guava linkedlists .
[ hotfix ] [ runtime ] fix typo in brokerroutingmanager
updated volumePaint and upPaint colors from gray and green to GRAY and GREEN to improve visual clarity and consistency in color representation
refactor layout parameters in InsettableFrameLayout to use TypedArray instead of FrameLayout to improve code readability and maintainability by reducing redundancy
added a ` duration ` parameter and updated related methods in ` BuildTargetDurationListener ` and ` BuildTargetDurationListenerTest ` to include it to
replaced ` @ Profile ( " db " ) ` with ` assumeTrue ( " expected db profile to be enabled " ) in multiple integration test files
added a null check for the user object before processing claims in OAuthConfirmationController to avoid potential NullPointerException when the user object is null
add support for replace route from endpoint with advice with advicewith
replace concurrentset with nonblockinghashset in cassandraconnection . statement ( )
api : add network _ id parameter to listpublicipaddresses api to allow list public ip address by source network
added tests and implementation for ignoring battery optimizations in ShadowPowerManager to ensure proper functionality and behavior of battery optimizations in the PowerManager framework
updated the version retrieval to use the build properties instead of a hardcoded value to ensure the Jetty version is retrieved from the build properties
added unit tests for verification behavior in NumberOfInvocationsInOrderVerifierTest to ensure correct behavior of invocation verification in the verifier
tregex : fix npe in case of nomatchinstance
[ hotfix ] [ runtime ] add - foreground option to process start profile
replaced the executor variable name from ` executor ` to ` executorLauncher ` and ` executorCloser ` for clarity to improve code readability and maintainability
changed the type of ` parseFieldnames ` from a ` Map < String , String > ` to an ` String [ ] ` to simplify the
updated file logging to use the file name instead of the file in CodeEditorView . java and added logic in EditorTextActionWindow . java to
updated skippedEntries to include exception messages in ClassFileReader and modified warning message formatting in JdepsTask to improve error reporting clarity and maintain consistency in
added link storage functionality to Fetcher and updated FetcherMain to use LuceneStorage to improve document storage efficiency and enhance code maintainability
updated populateBubble method to accept an existing Bubble instance instead of a new one to improve bubble creation logic by allowing the use of an existing bubble
[ hotfix ] [ network ] do n ' t log scheduled route with no start / resume time
refactor methods in MotanServiceBeanPostProcessor , MotanRpcExt , and TarsRpcExt to use a single method instead of an
[ java ] fix delay generator for multicast destination .
refactor ClientInformationResponseView to use Gson instead of GsonBuilder and add additional properties for client information to improve code readability and maintainability by
added a check for zero field amount before setting average price in limitOrders to ensure that the average price is only set when the openOrder is
removed the ` rawExecutionReports ( ) ` method from the ` binanceStreamingMarketDataService ` class to simplify the code by directly accessing
added a new method ` fail ` to handle exceptions and modified the error handling in ` LdapTimeoutTest . java ` to improve error handling and provide
fix for ticket : 283 : if the user dictionary file do not exist , log a warning instead
added logic to fetch and store the alias / file name before updating the password in AmbariServerConfigurationHandler to ensure that the alias / file
added a method to check if a segment is already parsed in ParseSegment . java and modified the SegmentChecker class to use it to improve segment parsing
[ hotfix ] [ yarn ] add yarn . application - attempt - failure - validity - interval configuration option
log warn if h2 driver be not include
hbase - 25813 add scan . readtype to tablesnapshotinputformat . scan . scan . readtype for snapshot - based inputformat (
added fixedHeight and fixedWidth properties with their respective getters and setters in LoginInstanceRequest . java to manage the dimensions of the login options
added a corner radius parameter to several methods in ActivityControlHelper , WindowTransformSwipeHandler , LauncherLayoutListener , and ClipAnimationHelper to
updated the COMMANDS _ TO _ REMOVE array to include additional command types and added a warning filter for cross product queries to enhance functionality by
added a retry mechanism for connection handling in TxnHandler . java to address BONECP bug and improve connection reliability
change txnensurereserve to txncheckreserve and add txncheckreserve method with optional polloperation
added a new char array field ` strings ` to the ` FirstOfStringsMatcher ` class to store and manage character arrays for string matching functionality
updated DELETE statements in CostBasedDecisionIT and DeleteCompiler classes , and added ExplainPlanTextTest class with a test for explain functionality to improve
updated exception handling in BaseServiceException to include a retryable check for SocketException to improve error handling by ensuring that insufficient data is handled correctly
added a new parameter ` rapidInstallTypes ` to multiple classes and updated related methods to support it to support rapid installation types in the AdbHelper
updated the seed pattern regex in SortTest . java to allow hyphens in the seed to enhance the seed selection functionality by allowing for hyphens in
refactor MultimapSubject to improve handling of iterable entries and add factory methods to enhance code clarity and maintainability by standardizing naming conventions and
modify the return statement in Workspace . java to adjust the display size to ensure correct positioning of the launcher based on device orientation
added a ` transmux ` flag and related functionality to the ` Transformer ` class to enable or disable transcoding based on the number of media items
added localization functionality for strings in the Picker class to improve user experience by ensuring localized strings are used in the picker
camel - 234 : cxf consumer should not fail if there be an exception from the endpoint
hhh - 11718 - postgresqldialect should handle lock acquisition , lock acquisition , and lock not available
added assertions for null queryId in TestJdbcDriver2 . java and modified HiveStatement . java to use LimitedPrivate annotation to improve test reliability and
add usesunboundedpcollections and useunboundedpcollections category to pardotest
removed the mention of " em " from the text in GpsSimpleViewFragment . java to simplify the code and improve readability by removing unnecessary
[ java ] remove unused leadershiptermid parameter from joinlogasfollower method .
refactor HttpExchange initialization to use a private instance variable instead of calling getHttpExchange ( ) directly to improve code clarity and encapsulation
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit 5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and its corresponding test to
added null check for the tree object and updated marker handling logic in Recipe and Markers classes to improve code robustness and prevent potential NullPointerException
change xwpf default run style to use double instead of float
changed the type of the ` emails ` variable from ` String ` to ` String [ ] ` and removed the ` maybeWrap ( email ) `
refactor exclusion handling logic in RawMavenResolver . java to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
added null checks and updated currency pair handling in DSXAdapters , DSXPairInfo , and DSXBaseService classes to improve error handling
updated test cases in TestBlockingIO , TestParsingTable , TestResolvingIO , TestParsingTable , and TestValidatingIO to improve
[ drools - 90 ] do n ' t fail incremental compilation if drlmodule pom be invalid
updated the initialization of ` copy ` to use ` finale - k ` and added a conditional check for ` sobj . has ( k )
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
do n ' t use reflection in hostfielddesc . getfield ( ) .
added a method parameter annotation for the ` CompletionStage ` in ` DefaultNullnessAnnotations . java ` to support the handling of ` CompletionStage `
updated the calculation of mFreezeCheckpoint from 9000 to 10000 to adjust the freeze point based on the playback duration
added internal state management for annotations in AbstractCommonPowerMockRunner and removed it from PowerMockRunner to streamline code and improve maintainability by eliminating
updated the method call from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to ensure the correct type is
refactor indent handling logic in TabsAndIndentsVisitor . java to improve clarity and structure to enhance readability and maintainability of the code
replaced LuceneTestCase with TestCase in TestSingleTokenTokenFilter . java to improve compatibility with JUnit ' s testing framework
replaced ` write ( newColumn ) ` with ` write ( wrappedText ) ` in ` HtmlProcessInformationsReport . java ` to improve the
refactor JdbcStepExecutionDao and MapStepExecutionDao to improve execution context handling to enhance clarity and maintainability of execution context management in batch processing
added a condition to check if the new media folder is hidden before adding it to the child folder to ensure that the child folder is only added when
added null checks for actors and modified widget removal logic in SplitPane . java to ensure proper handling of null actors and prevent runtime exceptions
added handling for parameterized types in RemoveUnusedImports . java to improve type management for parameterized types in the code
updated debug logging to use the version method and improved null and empty checks for modinfos in UniqueModListBuilder . java to enhance logging clarity
changed the logger variable from instance to static in TicketGrantingTicketImpl . java to improve performance by reducing unnecessary logging overhead
updated the timeseries creation SQL string to include a new version " 81 + 12 " to ensure compatibility with the latest timeseries specification
added a method ` isValue ( String value ) ` to ` AttrData ` and modified ` Converter ` to handle enum values to improve value validation
updated character handling logic in CPlatformResponder . java to include support for the " _ US _ UserDefined _ 15000 " locale to ensure proper
[ java ] set aeron publication connection timeout in ctestmediadriver .
added a condition to check if the request URIs start with " / css " , " / images " , and " / favicon " to
added an assertion to verify that the wellbeing test APK installation fails to ensure the device is rooted before proceeding with the installation process
no effective change - remove oracleansisqlrowslimiter
updated assertions in TestSimpleBodyHandler and TestVertxTLSBuilder to expect a multi - map response instead of a single response to ensure that the
updated Java library paths in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest Java libraries
added a check to determine if the haptic is being dismissed in TaskViewTouchController to ensure that the haptic is only dismissed when
added handling for Projectile sources in MixinEventWorldExplosion . java to improve the accuracy of explosion cause reporting
removed unused imports and implemented getItemId method in SymbolInputAdapter to improve code clarity and maintainability
updated the method signature of ` getBook ` to use ` QueryParam ` instead of query parameters in ` Bitfinex . java ` and ` Bit
added a check to replace single quotes with double quotes in StaxConverterTest . java to ensure proper handling of single quotes in the output
added ` toString ( ) ` method implementations for ` KubernetesLeaderElectionDriver ` and ` ZooKeeperLeaderElectionDriver `
refactor SqlSessionFactoryBean to improve code organization to enhance maintainability and readability of the code
refactor method invocation handling in TripleInvoker . java to improve clarity and efficiency to enhance code readability and maintainability by reducing complexity in generic call
replaced error logging with a runtime exception throw in PolygonRegionLoader . java to improve error handling by throwing a GdxRuntimeException instead of logging errors
added a method ` isStarted ( ) ` to check if the current deadline is started and updated timer registration logic in ` RawStoreProxy . java
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 486 : improve error message
updated genre display logic in ItemListActivity to handle null genres to improve robustness by avoiding potential NullPointerException when genres are not available
[ hotfix ] [ checkpointing ] do n ' t reset checkpoint during region recovery .
fix issue with prefab with collection of mapped container
[ hotfix ] [ table - planner - blink ] fix nullpointerexception in walnode
added a new test method ` testRetrySameHostOnCallbackFailure ` in ` HttpTest . java ` to retry the same host on callback failure
fix a typo in the documentation of the background tutorial .
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL query escape functionality to ensure correct handling of special characters in SQL queries in the
added nullability annotations to constructors and routes in CamelModule and JoobyBeanRepository classes to enhance code robustness by preventing potential NullPointerException
replaced synchronized block with Util . wait for thread safety in JavaFXSEPort . java to simplify synchronization and improve code readability
updated package imports from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider
[ scene2d . ui ] make sure that bitmap / regiondecoder be load before finish image setup .
removed the appName parameter from the configure method and related calls in InputRC . java to simplify method signatures and improve code clarity by eliminating unnecessary parameters
[ gr - 26464 ] fix ignore dependency in install and uninstall command .
[ java ] use addarguments ( ` ` headless = chrome ' ' ) instead of setheadless ( true )
replaced ` value ` assignment with ` value . intern ( ) ` in ` VersionedValue . java ` to ensure uniqueness of ` value `
added " MOVE " status check to the connection status check to allow handling of move operations in addition to existing operations
updated date formatting for US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME
replaced the import of ` org . apache . curator . shaded ` with ` com . google . common . collect ` across multiple test files to
[ hotfix ] [ runtime ] fix buffer leak in hsbuffercontext
updated permission checks for untrusted visits in the plot visit logic to ensure only authorized players can visit untrusted plots
do n ' t try to connect jabber service if it ' s already register .
updated URL normalization logic to include curly braces to ensure proper handling of URLs containing curly braces
changed access modifiers of methods from protected to private in QuickstepTransitionManager . java to enhance encapsulation and restrict access to these methods
added a check for zero clock rate comparison in EncodingConfiguration . java to ensure consistent handling of clock rate comparisons
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and modified ` generateProjects ` method to return an ` ImmutableSet < Path >
removed conditional check for ` isNativeDigit ` in ` HostLocaleProviderAdapterImpl . java ` and added a validity check for ` calid `
added a new file MSwingUtilities . java to provide utility methods for image scaling and image scaling to enhance image rendering capabilities and provide user feedback during
camel - 14297 : fixed mail producer to be async so it do n ' t block forever .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration to ensure configurations are refreshed within the application context
added unit test base on user forum issue
added two new Java files , Main . java and ScriptRenderer . java , to implement a scripting engine for rendering templates in the integration scripting
added a condition to check if ` _ inputState ` is ` __ NONE ` in the ` if ` conditional statement and implemented a new test for
updated glyph handling and added isDescendant method in BitmapFont , Group , FlickScrollPane , and SelectBox classes to improve robustness and prevent
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager . java ` and added a new test in ` DeploymentTest . java
add lexiconrecipemappings . stacktostring ( stack , boolean forceignore ) to prevent lexiconrecipemappings . wildkey
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve code readability and maintainability by using a constant value
updated import statements in LoincHandler . java to use wildcard imports and added a check for non - blank shortName before comparison to improve code
do n ' t use classpath for holiday xml url , use resource . getresource ( ) instead
added a new file ` FieldUtils . java ` to provide utility methods for field access and modifications in a Spring context to improve code organization and
removed conditional check for speculative type mode in DeferredAttr . java and added a new DoubleStaticImport class with a test method in DoubleStaticImport .
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding to ` customContent ` based on component name
added an updateSettingsWithSaveLastAccount method to XabberAccountManager to handle account loading errors to ensure that the last account sync state is
added a new method ` setvar ` in ` mmm Commands . java ` to handle variable setting with command - line arguments to enhance user experience by
fix catentity . onanimaltame not call onanimaltame .
fix issue with unsigned range in windowframe . getvalue ( )
pdfbox - 4071 : add test for helv font , a suggest by valerybokov
added a line to set the app ' s mode to the current app ' s mode to ensure the application displays the correct mode for better user experience
added methods to configure Dockerfile arguments and build arguments in ImageFromDockerfile . java and created DockerfileBuildTest . java for testing to enhance
added a check to ensure threadInfos [ threadId ] does not already exist before creating new ThreadInfo instances to prevent potential NullPointerExceptions when access
updated the condition to use a constant FLOAT _ EPSILON instead of a hardcoded value to improve code readability and maintainability by using
[ hotfix ] [ checkpointing ] add more log for checkpoint barrier handler
added new table types in mmm Schema . java and ppp Schema . java to enhance schema management capabilities by including additional table types
added minimumSimilarity parameter to FuzzyQuery constructors and updated related logic in FuzzyTermEnum to allow customizable minimum similarity requirements for fuzzy queries
rename method ` addActionsView ( ) ` to ` setActionsView ( ) ` in RecentsView . java to improve clarity and consistency in
add ` ` immediateflush ' ' property to outputstreamappender so that it can be set across outputstreamappender .
added multiple AutoConfigureAfter annotations for RabbitAutoConfiguration , KafkaAutoConfiguration , and ZipkinAutoConfiguration to ensure compatibility with multiple auto - configuration
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to ensure
replaced ` avro . shaded . com . common . base . Function ` with ` com . google . common . base . Function ` in multiple
fix a bug in bciblockmapping and graphbuilderphase .
added getter and setter methods for legacyRenderer in Label . java to improve code readability and maintainability by reducing duplication
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJ
added a null check for mObserver in the return statement to ensure that mObserver is not null before calling isHomeAndOverviewSame ( ) to
updated the ` thenComparing ` method to accept a ` Comparable < U > ` instead of a ` Comparable < ? super U > `
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
updated the end time setting in UserRuleAnomalyFunction to use the currentKey bucketMillis instead of null to ensure the end time is set
fix visualscoretagtest . testvisualscore ( ) to handle numberformatexception
added a classloader assignment to the enhancer in MockFactory . java to ensure proper class loader is used for mocking functionality
added a new OriginalFormat class to the ConverterWithEnumFormat class to enhance the functionality of the format handling in the code
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM / " to improve maintainability
refactor JAWTRenderer class to improve code readability to enhance maintainability and facilitate future updates
camel - 15836 - camel - aws2 - lambda : enable autowire on the aws2 - lambda component
cloudstack - 6521 : add mac address validation for nic in the network
added a condition to check for the " Authorization " header in ProxyServlet . java to ensure proper handling of " Authorization " header in HTTP requests
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to ensure the correct execution method is used for command execution
added ` getDetails ( ) ` and ` setDetails ( ) ` methods to ` Authentication ` , ` AbstractAuthenticationToken ` , ` UsernamePassword
updated the probability of using points in SolrTestCaseJ4 . java from a random boolean to a fixed value of 80% likelihood to improve test coverage
rename ` ` appenddot ( ) ' ' to ` ` endsentence ( ) ' ' - > ` ` end sentence ' '
updated ` formatForConsole ` method to include ` Locale . US ` parameter across multiple files to ensure consistent locale handling across the application
updated import statements in GroovyParserVisitor . java and added line number comparison in GroovyPrinter . java to improve argument handling by ensuring correct line numbers and
added boundary checks for bottom , left , and right inset px values in Border . java to ensure border dimensions are within the valid range of 1
refactor GestureState initialization to use a static final DEFAULT _ STATE to improve code readability and maintainability by centralizing state management logic
replaced Joda - Time ' s DateTime with Java ' s Instant and DateTimeFormatter for version formatting to improve compatibility with modern Java time APIs and
refactor openblas and openblas _ nolapack classes to improve code organization and maintainability
replace IOUtils . closeQuietly with java . io . IOException for closing piece storage to improve resource management and handle potential IO exceptions
added synchronized keyword to the initTxnMgr method to ensure thread safety during transaction management
increased the timeout duration from 120 seconds to 480 seconds in AbstractDistribZkTestBase . java and increased SO _ TIMEOUT in AbstractFull
added a new file ` SearchResults . java ` to handle search results to provide a structured way to filter results based on a specified number of hits
fix npe in cpusamplersupport when threadcputimer be null
refactor primitives assignment to use a temporary variable and initialize the frame if it is null to improve performance by avoiding repeated object creation
added new versions " 8.9 . 0 - cfs " and " 8.9 . 0 - nocfs " to TestBackwardsCompatibility .
updated feature flag from DISABLED to TEAMFOOD in FeatureFlags . java and modified app icon search condition in AppIcon . java to
added a new API endpoint ` getInstancePools ( ) ` to retrieve tenant pools for a specific instance to enhance functionality by providing access to tenant pools
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods to improve clarity and functionality to
added ` isToString ( ) ` method to ` InlineBytecodeGenerator ` and created corresponding unit tests in ` InlineByteBuddyMockMakerTest
added debug logging statements to CxxCompileStep and CxxPreprocessStep classes to improve troubleshooting and error handling in compiling and preprocessing
add utility method removecharacter ( string , char ) to make it easy to remove non - existing character
fix ( metadata ) : remove obsolete metadata service protocol parameter ( # 10265 )
[ bz - 1493636 ] [ runtime ] add datatransformer interface to allow to call compile ( string , map < string ,
changed the type of ` Object [ ] ` and ` Number [ ] ` from ` Object [ ] ` to ` Number [ ] [ ] `
removed the conditional check for ` interesting ` in ` FormatStringChecker . java ` and adjusted the condition for the ` if ` statement to simplify the
set the core variable to null in ElectionContext . java to ensure proper initialization of the SolrCore instance
updated ITestDbTxnManager . java file to improve transaction management functionality
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a test method ` testMapModel ` to ` CodeFirstPojoClient ` and overridden it in ` CodeFirstPojo ` to ensure correct functionality
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated selection handling and item state management in ScaleDialog . java to improve user interface responsiveness and ensure proper selection state management
fix a crash when the player ' s step height be null on forge .
pdfbox - 4071 : do n ' t throw exception when there be no rectangle
changed the type of the ` keys ` variable from ` SortedSet ` to ` LinkedHashSet ` to maintain the order of keys during iteration
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java and
updated the preload libraries in dc1394 . java from " libdc1394 - 22 " to " libdc1394 - 25 " to
added conditional check for agentSupport before setting allConstructorsToPublic in MainMockTransformer and created new test classes for mocking static methods with private constructor
pdfbox - 4071 : do n ' t try to decrypt a cosstring , cosdictionary , and cosarray , a suggest by valery
set window title to be consistent with other window .
updated depth calculation logic in XRSurfaceData . java to handle both 32 and TRANSLUCENT color sizes to ensure correct depth value
added error response body handling in OkHttpDataSource to improve error reporting by including the error response body in InvalidResponseCodeException
added a static method ` exit ` to ` TopLogging ` and modified ` TopThreadGroup ` to use it to streamline exit handling and improve
updated the logic for determining the start index in NativeRegExp . java to ensure proper handling of global regexps to avoid potential errors
added @ Ignore annotation to OptaPlannerDaemonSolverTest to mark the test as ignored due to the upgrade to PLANNER - 468
updated the variable used to retrieve the high allocation from ` lowIndex ` to ` highIndex ` to ensure the correct allocation is used based on the
added a method ` cleanEntriesWithoutFeeds ( int maxFeeds ) ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` to manage
changed the return type of ` appendToLabel ` from ` void ` to ` AtomicCounter ` and added a return statement to enable method chaining for
[ java ] refactor lowlatchmediadriver to use noopidlestrategy instead of busyspinidlestrategy .
added handling for HTTP status NOT _ MODIFIED in CacheControlHeadersWriter and corresponding tests to ensure proper caching behavior when the response is not modified
[ java ] rename constantvalueinertspliceinstrumentlistener to constantvalueinerttoolevalnodefactory and add a toolevalnodefactory
updated the paintTabArea method in SynthTabbedPaneUI to handle insets correctly to ensure proper rendering of the tab area in the SynthTabbed
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional argument for orderbook size to
add fileutil . getfileseparator ( ) and fileutil . normalizepath ( ) method to file and remotefile .
added a new method ` build ` to ` JavaProvenance ` for building ` JavaProvenance ` and removed an unused import in `
added trace logging for registered Hive UDFs and modified conditional check for deterministic types in HiveFunctionRegistry . java to enhance debugging capabilities and ensure correct
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage by allowing more iterations
patch by jbellis ; review by brandonwilliams for cassandra - 118
added a check for writable output files in NativeErrors . java to handle root - only test scenarios to improve error handling and provide clearer feedback
added PackageInfo checks and error handling in LauncherModel . java to ensure that the application is enabled before proceeding with package information retrieval
cloudstack - 10715 : do n ' t throw exception when db upgrade fails
refactored exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a test for non - skippable exceptions in
updated string comparison from ` startsWith ` to ` regionMatches ` in ` LineReaderImpl . java ` to improve performance by avoiding unnecessary string comparisons
added global data tables and updated return statements in Recipe . java to enhance data table management and improve code clarity
added functionality to dismiss all tasks in TaplTestsTaskbar based on the presence of tasks to improve user experience by ensuring all tasks are dismissed when
add dbupgradesystemvmtemplate interface to allow upgrade from 4.1 to 4.2
removed redundant null checks for Connection and resources in LdapClient . java to simplify code and improve readability by eliminating unnecessary null checks
refactor index handling in SequenceAction to use a local variable for clarity to improve code readability and maintainability
patch by jbellis ; review by gdusbabek for cassandra - 1296
added a check to skip synthetic fields in ReflectUtils to optimize performance by avoiding unnecessary processing for synthetic fields
added a new ` LoggerProvider ` class and integrated it into ` Configuration ` and ` ApplicationController ` to enable logging functionality within the application
change the type of the ` ImmutableMap < String , String > ` from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object
added a deprecation warning for multiple glue classes that configure the spring context to inform users when multiple glue classes that configure the spring context is deprecated
added a deepStart method to the Startables class that accepts a list of Startable objects to facilitate the handling of multiple startables in
removed deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and ` ShapeImpl ` classes to clean up outdated code and improve maintain
fix laser not be able to use a block that do n ' t require energy
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
updated the expire message period setting in MemoryLimitTest . java to ensure it does not consume 2 * pageSize mem to prevent potential memory leaks
removed unnecessary null checks and simplified handler name handling in RequestHandlers . java to improve code readability and maintainability by reducing unnecessary null checks
modify the method to replace hyphens with dots in the servlet name to ensure consistent naming conventions for servlet names
refactor python environment handling in ProjectBuildFileParser . java to use a constant for the PYTHONPATH environment variable name to improve code clarity and
updated audio frame size validation and error handling in DirectAudioDevice . java and Toolkit . java to improve robustness by ensuring correct frame size retrieval and
added null check for enums in ElasticSearchStringLookupService to avoid potential NullPointerException when enums are null
[ hotfix ] [ table - common ] improve error message in commitlogreader
added a method to set the WebSocket policy using the container scope ' s policy to ensure the WebSocket session uses the correct policy from the container scope
removed the condition for checking static fields of a variable declaration in Java2TypeScriptTranslator . java to simplify the logic for determining if static fields are
added a webroot argument to the createContext method in UserService . java to allow dynamic configuration of the UI directory based on user input
( chore ) camel - spring - dsl : migrate camel - spring - dsl to junit5 ( # 4458 )
profiler : remove reflection from profilerproxy . isattachable ( ) and use editorregistry . componentlist ( )
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header formatting functionality
replaced multiple individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is
updated comparison from " < = - 3 " to " > 8 " in FloatingDecimal . java and added a new ToString . java file to
updated property type checks in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper type checking and validate
removed the maxVersion parameter from the getVersions method call to simplify version retrieval by relying on the fingerprint ' s maxEncountered value directly
do n ' t set the origin header if it ' s already set .
replaced visibility settings with animations for previous and next tasks in RecentsView and TaskView classes to improve UI responsiveness and visual feedback during modal
updated error messages and method calls in ORCRecordReader . java to include the ' field ' parameter to improve clarity of error messages and ensure accurate
added two new samples for " Clear Tears of Steel " and " Bipbop _ 4x3 " in DemoUtil . java to enhance
removed unnecessary ` HIBERNATE52 _ ENTITY _ MANAGER _ INTERFACE ` and ` HIBERNATE43 _ 
updated log filenames in ExecRPCInvoker and WritableRpcEngine to use a more descriptive class name to improve logging clarity and maintainability by
added diagnostic logging and a new test method for handling errors and fixed fields in TestSpecificCompiler . java to improve error reporting and ensure correct behavior of
updated WebSocketEndpoint to return early for session creation and added a new test for session closure to improve session handling logic and ensure proper WebSocket connection management
increase delay in order to avoid flaky test .
update OpenSymphony group references to Apache Struts in XmlConfigurationProvider . java to ensure compatibility with the latest version of the Apache Str
added conditional checks for stream stop status in WebCamInputPanel . java to ensure proper handling of video tracks based on the stop state
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType `
[ geot - 5582 ] update geotools dependency for gml example
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` TargetType58 . java ` file to improve performance by
hhh - 10956 : implement getidentifiergenerator ( ) for abstractentitytuplizer to support composite identifier
rename ` ` find full text ' ' action to ` ` download full text ' '
updated URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl to include host and port information in the registration process to enhance the handling of
renamed WebSocketMapping and WebSocketUpgradeFilter classes to improve clarity and consistency in naming conventions
added a check for a non - blank OSDB hash before retrieving information from the OpenSubtitle class to handle cases where the OSDB hash is
added token transfer functionality and validation in RuntimeImpl and MUtil classes to enhance token transfer handling and ensure proper asset transfer validation
camel - 14263 : camel - ftp - make sure to change the current directory when delete a file .
corrected a typo in the method call from ` getSearchBindDN ` to ` getSearchBindPassword ` to ensure consistency in method naming
added validation for join results in MapJoinOperator . java and modified conditional checks in HybridHashTableContainer . java to improve join handling and ensure
updated the HTTPSPDYAsyncEndPoint constructor to include an ` AsyncEndPoint ` parameter and modified related methods accordingly to improve the handling of asynchronous endpoints
added intent . putExtra ( " id " , tweetId ) in TimeLineCursorAdapter , TimelineArrayAdapter , TweetPager , and 
added proxy authorization handling and refactored disconnect logic in HttpURLConnection . java to improve code clarity and maintainability by consolidating disconnect logic
replaced ` int _ numChildren ` with ` AtomicInteger ` for thread - safe incrementing of child counts in ` TraceContext ` to improve thread safety
updated JWT and JWT constants in multiple files to improve code clarity and maintain consistency in naming conventions
disabled the test for NullPointerException in ValueTypeTests to temporarily disable the test to ensure tests are not executed when the test is disabled
resolve split - packages : move everything from kie - internal under org . kie . api : move org . kie . api . resource
corrected the spelling of " NOT _ IN " in multiple predicate classes to " NOT _ IN " to " NOT _ IN " across multiple
replaced specific exception handling with a general Exception in multiple classes to improve error handling robustness and provide clearer account information
added null check for witnessService before calling validateWitnessPermission to avoid potential NullPointerException when witnessService is not initialized
updated the way taggedCol is constructed by using getExprString ( ) instead of directly accessing the value from the reversedExprMap to improve clarity
added a conditional check before setting the Java document in AbstractJavaClassTranslator to ensure that the item ' s Javadoc is only set when it is
rename ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and add a new ` RedefineInterfaceCall .
refactor ` revalidate ( ) ` calls to ` revalidateWithAnimationSafety ( ) ` in ` Tabs . java ` to improve animation handling
[ hotfix ] [ connector ] return unregisteredmetricsgroup instead of unsupportedoperationexception in serializationschemaadapter
replaced the variable ` x ` with ` oldX ` for ` y ` in the Polygon class to improve code readability by using a temporary variable
updated cache creation method to cast null to Configuration < Object , Object > to ensure type safety and prevent potential runtime errors
added a check for non - empty stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file
refactor ShadowCookieManager to improve cookie management functionality to enhance performance and maintainability of cookie management
added a new configuration option ` METASTORE _ AUTHORIZATION _ EXTERNALTABLE _ DROP _ PERMISSION _ STORAGE _ 
added a brace to the if statement in Stage . java and adjusted the drawing logic in ProgressBar . java to improve code readability and correct rendering
sulong : cache byteorder in llvmlanguage . getbyteorder ( ) .
updated PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " windowsprovider . timeout
updated ` initWebViewLogin ` method to accept a base URL and modified web view loading logic to enhance user experience by allowing dynamic web view initialization based
corrected a typo in the exception message from " Paramter " to " Parameter " in CallableStatementHandler . java to improve clarity and consistency
updated the DateTimeFormat annotation in AuditEventsMvcEndpoint . java and added a new test case in AuditEventsMvcEndpointTests . java to ensure correct
renamed ` ExponentialTimer ` and related classes to ` PreciseThroughputTimer ` and updated associated references to clarify the purpose of the timer
added logic to remove and reset soft bodies in SoftBodyTest . java to ensure proper management of soft bodies in the dynamics world
[ hotfix ] [ table - runtime - blink ] make interface public
updated log messages to include exception details in ZeppelinhubClient , ZeppelinWebsocket , and ZeppelinHubWebsocket classes to
add a test to verify that there be no redundant namespace in the jingle .
fix redplasma / redplasma energy not be render if redplasma be not available
added support for HTTP / 2 headers in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to enhance
updated references from ` getTrusted ( ) ` and ` getMembers ( ) ` to ` getTrusted ( ) ` and ` removeDenied
updated delimiter handling in SimpleReport . java to include additional characters to improve readability and maintain consistency in formatting output
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68637
renamed ` TickerDemo ` class to ` StreamingTickerDemo ` and updated its references to improve clarity and consistency in naming conventions
added validation checks for contract creation and address in the Runtime class to improve error handling and provide clearer error messages for invalid contract inputs
app3d : do n ' t create input3d for intelrealsensens when not in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
change scripttagpayloadreader . parsepayload to return false instead of throw an exception
added @ Override annotation to getRepositoryFactoryClassName method to ensure compatibility with overridden methods in JpaRepositoryConfigExtension
changed the return type of ` getExecutableCommand ` from ` String ` to ` List < String > ` across multiple classes to allow for more flexible
updated references to ` this ` to ` IOSGLES20 . x ` and ` this . height ` in ` IOSGLES20
deleted the UploadPathActivity . java file to remove unused code to streamline the codebase
modified return statements to conditionally return - 1 for totalTermFreq and sumTotalTermFreq based on indexOptions to ensure that totalTermFreq is
fix ( jdttreebuilder ) : implicit constructor should be set to true when the source start of the constructor .
updated ` populateValidateNullableIfNeeded ` and ` populateValidateUniqueIfNeeded ` methods to include ` Database ` parameter to ensure proper handling of database - specific
refactor Database class to improve code organization to enhance maintainability and readability of the code
refactor SpringApplicationBuilder to improve code organization to enhance maintainability and readability of the code
updated references to ` this . iterator ( ) ` in ` PointInSetQuery . java ` and ` DefaultIndexingChain . java ` to
removed the substring extraction from rawName in SchematicHandler . java to ensure proper handling of raw names without leading spaces
added a switch statement in AbstractCollectionAssert to handle specific collection types to improve type handling for collections in assertions
removed the static modifier from the Option enum in ProcessExecutor . java to allow access to the Option enum from other classes
added a confirmation dialog for posting with twitlonger in Compose . java and removed it from ComposeActivity . java to improve user
replaced the implementation of ` toggleKeepInSync ( ) ` with a direct call to ` getFileOperationsHelper ( ) . toggleFile ( ) `
replaced DatatypeConverter with Base64 decoding in ImageUtil . java and added ImageUtilTest . java with corresponding unit tests in ImageUtilTest .
added two new files : ControllerCounter . java and DBCallback . java , along with a new ControllerCounter . java and a DBCallback interface to
added ' final ' keyword to ticketId parameter in deleteTicket method to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement a migration runner for Flyway database configurations
replaced calls to ` isEmpty ( ) ` with ` size ( ) = = 0 ` in ` HashMap . java ` and added a new ` Override
update version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest release version
updated the ` modify ` method signature in ` CompressionCodec ` and ` WriterImpl ` to accept a nullable ` EnumSet < Modifier > modifiers ` parameter
added null check for main _ class attribute and improved jar creation logic to enhance error handling and ensure proper resource management during jar creation
renamed test classes to include " Tests " for consistency to improve clarity and maintain consistency in naming conventions
change hotspotprofileinfo . getcompiledgraphsize and hotspotprofileinfo . getcompiledirsize from structuredgraph to irsize
fix copy of xlsx and xssf by remove clone ( ) from xssfsheet .
added a method to reset the icon load result in FloatingIconView to improve resource management by ensuring the icon load result is properly reset
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java `
refactor IconRecentsView to handle landscape orientation and task item decoration to improve layout responsiveness for landscape and portrait orientations
deleted the AddAdapter . java file to remove unused adapter implementation to streamline the codebase
fix bug in nonstaticlifter when there be no constructor in the list .
modified the method signature of ` OpTraitsRulesProcFactory . java ` to include an additional parameter ` processSortCols ` to improve code clarity
updated the message handling logic in the TestLogWatcher class to improve clarity and error reporting to ensure that messages are only registered when a new watcher finally
added a print statement to the Java2TypeScriptTranslator to convert Java files to TypeScript format to enhance the translation process for better type safety
updated SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
added conditional logic to set the SPRING _ AOP _ PROXY _ TARGET _ CLASS property to " true " in TraceEnvironmentPost
removed the singletonLock boolean check from TypeCachingBytecodeGenerator to simplify the code by eliminating unnecessary complexity
added withclass ( ) and withstring ( ) method to the callbackactionexamples
added an ` appendToFile ` parameter to several methods in ` Utils . java ` and modified ` writeFile ` to accept a ` appendToFile ` parameter
updated Maven repository mirror handling logic and added unit tests for it to ensure correct behavior of Maven repository mirrors and improve code clarity
added ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer `
updated the comparison from ` equals ` to ` matches ` in ` OAuth20CallbackAuthorizeEndpointController ` and added a new test for operation clients with
replaced calls to ` values ( ) . values ( ) . toArray ( EMPTY _ ANNOTATION _ ARRAY ) ` with a new method ` Annotation
updated method calls from ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` to ` getBadgedIconForUser
updated the default line separator from " OS default " to " Line separator . Defaults to OS default . Defaults to " Line separator . 
add test to verify that bestpathaccuracytracker and bestpathaccuracytracker be derived
thymeleaf - core : sanitize input string in basecontroller
chore : update java and python dependency ( # 133 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added a test for building file names to ensure
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
refactor ` AllAppsRecyclerView ` and ` UserEventDispatcher ` to streamline container type assignment and improve shortcut logging functionality to enhance code clarity
hbase - 24497 add warn log for hbase . ipc . server . reservoir . initial . max and hbase . ipc . server .
[ native ] fix window query for non - null user
added a new method ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` to retrieve all generic parameter types to improve clarity and maintainability
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future updates
alexeibarantsev : fix height calculation of input box label
hbase - 25813 increasetoupperboundregionsplitpolicy should check the initial size of the table , not just the flush size
removed unnecessary model state reset and loader start in LauncherClings . java to streamline the loading process and improve user experience
removed redundant declarations of keys and updates in ManagedSelector . java to streamline code by eliminating redundancy and improving readability
added a set of excluded datasources and a setter method in SpringDataSourceBeanPostProcessor to allow users to exclude specific datasources from processing
added undo info storage in TableValuesView and simplified conditional check in TableValuesPanel to improve code readability and reduce unnecessary null checks
( chore ) camel - aws2 - kinesis : make it easy to configure the aws client
refactor sensor channel handling to use bitwise operations based on channel values to improve code readability and maintainability by reducing redundancy
disabled tests due to unfavorable benchmarks and modified conditional logic in BoundedLocalCache to disable tests due to unfavorable benchmark
added unit tests for illegal database names in IoTDBSessionSimpleIT and improved error handling in PartialPath to ensure robust error handling for invalid
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure new files are reset after garbage collection
replace ` desiredWorkspaceLeftRightRightMarginPx ` and ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx
reformatted code for improved readability in CharTokenizer . java to enhance maintainability and adherence to coding standards
chore : update gapic - generator - java version to 2.1 . 0 ( # 560 )
[ xenserver ] fix typo in apiconstants . xml
updated libgdx and libgdx nightly versions from " 1.5 . 5 " and " 1.5 . 6 - SNAPSHOT " to " 1.5
removed the metricNames set and its getter method from SolrCore . java to streamline the code by eliminating unused methods
replaced ` URI ` with ` Path ` for path handling in ` MavenManifestFactory . java ` to improve type safety and simplify path handling
replaced direct mac detection with a static final boolean variable to improve code readability and maintainability
refactor JdbcAggregationRepository class to improve code readability to enhance maintainability and facilitate future updates
added clearing and adding functionality to the slotList in Frame . java to ensure the slotList reflects the latest state of the other frame
added a new variable ` m _ predCount ` initialized to ` - 1 ` in ` PredicatedNodeTest . java ` to initialize the pred
added imports and modified the mergeProperties method in ConfigurationSpringInitializer . java to ensure properties are correctly merged from configuration objects
updated the parameter type of ` setupLogging ` from ` Logger ` to ` org . slf4j . Logger ` in ` CommandLineOutputAppender .
replaced HashMap with LinkedHashMap for aliasToWork and related methods to maintain the insertion order of elements in the map
added a check to determine the jdbcHandlerMap in TypeHandlerRegistry to ensure proper retrieval of the superclass of the type handler
added debug logging statements in Hibernate , JPA , FlatFileItemWriter , JmsItemWriter , and JmsItemWriter classes to improve
modified the way language ranges are parsed by removing trailing semicolons from the input string to ensure proper handling of the last semicolon in the
updated the handling logic in VertxHttp2Handler to execute on the handler context in VertxHttp2Handler . java to ensure that the handler
add cache for xssftable lookup in xssfevaluationworkbook to improve performance
updated schema text detail type checks and simplified conditional statements in BaseSchemaTextFormatter . java to improve clarity and maintainability of schema text formatting logic
replaced ` MongoFactoryBean ` with ` MongoClient ` in ` MongoNamespaceReplicaSetTests . java ` to ensure compatibility with the new MongoDB client
replaced ` HashSet ` with ` LinkedHashSet ` for ` roots ` , ` leaves ` , and ` leaves ` to maintain insertion order and maintain insertion order
updated the operator tree cloning logic in SkewJoinOptimizer . java to ensure the operator tree is cloned before use to avoid potential null pointer exceptions
added a null check for the client ID in DynamicRegistrationClientConfigurationService and updated the handling of registered clients in JsonFileRegisteredClientService to ensure
added a call to clear the ` AchievementList . field _ 187981 _ e ` field in ` StatList . java ` to ensure
initialized fields to empty strings in MutableDatabaseInfo and MutableJdbcDriverInfo classes to avoid potential NullPointerExceptions when fields are not initialized
updated permission string from " link _ share _ read _ only " to " link _ share _ view _ only " in QuickSharingPermissionsBottomSheet
added a LongBuffer and implemented readLongs method in ByteBuffersDataInput . java to optimize memory usage and improve performance during reading long values
updated UnixFileAttributes to include additional time variables and replaced FileTime . from ( ) with a new toFileTime ( ) method to improve clarity
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior with humongous regions to
added functionality to control visibility of the search bar based on user preferences to improve user experience by allowing search bar visibility based on user preferences
[ hotfix ] fix typo in envrouterfeature
added null checks for cur and next in LineChartRenderer to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class and integrated it into the menu to enable users to reload the current displayed page
changed log level from info to warn for various log messages in SQLManager . java to improve logging granularity for better troubleshooting
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest features and improvements in
added a null check for ` currentClusterConfigForService ` in ` UpgradeHelper . java ` to ensure that a valid configuration type is provided
[ geot - 7195 ] use serviceloader to load the extension .
added a finalize method to the HiveHBaseTableInputFormat class to ensure proper resource management and prevent potential memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and ` HiveViewImpl ` , along with logging in ` JdbcConnector
updated feature settings in DocumentFactory , XMLSAXHandler , ComplexElementHandler , XMLSAXHandler , and ElementHandlerFactoryTest to enhance XML
updated JdbStopThreadidTest to use contToExit instead of waitForPrompt and added OutputAnalyzer to ensure that the application exits correctly and
added a method ` getType ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure that the ` getType ` method returns
updated variable names from ` runnable ` to ` future ` for clarity to improve code readability and maintainability by using more descriptive variable names
updated the default HTTP port property from " port " to " vertx . httpPort " in HttpTestBase . java to allow configuration of the HTTP port
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to improve listener management by using a more general listener method
[ hotfix ] [ runtime ] increase default batch size for newsessionqueueoptions
[ hotfix ] [ runtime ] log exception when fail to establish resource manager connection
initialize classFile to null and improve exception handling in LambdaRewriter . java to enhance code robustness by ensuring classFile is initialized to null and
updated the IllegalArgumentException message to include both min and max parameters to improve clarity of error messages for better debugging
updated onMessage method signatures to include owner and receiver parameters to enhance message handling by associating telegrams with their owners to improve clarity and functionality
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` classes for database operations and their implementations to provide a structured way to
refactor assertions in AbstractIterableAssert , AbstractPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories to improve code organization and maintainability
# 118 - add setbeanid ( bean , object id ) to ebeanserver ( # 118 )
replaced a hardcoded xsl file with a method call to getAddToSiteDescriptorXsl to improve code readability and maintainability by using
added a list of RequestMatchers and updated the requestMatcher constructor to use it to enhance the flexibility of request matcher management by allowing multiple matchers
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing functionality for ContactResource instances
move request and response into abstractprocessor so it can be use by other processor .
updated log messages for clarity and improved error handling in FileManager . java to enhance readability and provide more informative feedback during save operations
added teardown method to TestIndexSearcher and reset mockControl in TestJdbcDataSource to ensure proper resource management and prevent memory leaks during test execution
updated syntax tests in SyntaxTests . java for consistency and clarity to improve readability and maintainability of the code
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
update parserdecorator to support multiple parser instead of just emptyparser .
add security manager check for dedicated and dedicated server .
added a new field ` username ` , ` newAccountName ` , and ` password ` in ` AccountUtils ` , ` IndexedForest `
updated the parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the CoreApiMapping . java to
fix a bug in the handling of jsx comment in the parser .
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording during widget addition tests
added error handling for cases where Buck configuration is missing in ` BuildEndToEndTest ` and ` CxxEndToEndTest ` to improve
added physical memory size checks and logging for test execution in TestStringBufferAndBuilderGrowth . java to ensure tests run with sufficient physical memory and
updated MapToLocalDateConverter to use a custom ConversionService instead of a hardcoded value to improve code maintainability and reduce reliance on external
added a success flag to the HiveMetaStoreClient class to indicate successful execution of the Hive metastore client
updated equality check from ` = = ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and changed the
updated vine handling in TimeLineCursorAdapter and TweetActivity to support both " vine " and " amp . twimg . com "
mark the AreaReference class as deprecated to indicate that it should no longer be used in favor of an alternative implementation
refactor ElementType and Target classes to improve code readability and maintainability
added assertions and modified reference kind handling in MemberName . java to improve error handling and ensure correct reference kind comparisons
updated the default value of ` SUBMIT _ KEY _ UPDATES ` from ` false ` to ` true ` and added synchronization around the ` run
do n ' t show mouse event in editnodetextfield if mouseevent be not a mouse event
camel - 14297 : fixed issue with static method in bean expression
[ java ] fix checkstyle violation in net / network / benchmark . java
refactor exception handling in AgentRunnerTest to improve clarity and ensure proper rethrowing of ClosedByInterruptException
added ` getDescription ( ) ` method implementations to multiple classes for consistency and clarity to improve code readability and provide clearer descriptions for Maven
refactor face management logic in ObjLoader . java to use a local variable for activeGroup ' s faces to improve code readability and maintain
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future updates
refactor variable name from ` reentrantLock ` to ` lock ` across multiple classes to improve clarity and consistency in naming conventions
updated the ` printMavenAsCycloneDxBom ` method to include a ` mavenPackaging ` parameter and modified related method calls
updated back ( ) method to include the event component to improve event handling by associating back with the event ' s component
[ hotfix ] [ sasl ] fix checkstyle violation in saslauthentication
updated generic type annotations in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to improve type safety and clarity in generics usage
updated method calls from ` NutchConf . get ( ) ` to ` getConf ( ) ` in multiple files to ensure consistency in accessing
updated assembly selection logic in SheetAssembly . java and added debug logging in StubsController . java to improve handling of assembly selections and enhance
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID for external use
added null checks before setting the TimeInterval for nodes and edges in ImportContainerImpl . java and updated tests in ImporterGEXF2Test
removed the " - logLevel INFO - serverPort " argument from the command to simplify the command for better readability and maintainability
updated error logging to include the exception message to improve error reporting by providing more context about the exception
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in ` DispositionProcessor . java ` to streamline the retrieval and
added @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
[ test ] fix package scan resource resolver test on window
added imports for DataInputStream and ZipInputStream , and implemented alternativePath method in ExpectNewDemo . java to enhance functionality by providing an alternative path input stream
updated initialization method to use getFirstFilter ( ) instead of input . init ( ) to ensure proper initialization of the input filter before processing it
[ java ] add protectiondomain parameter to bufferalignmentagent .
added dispose method to clean up resources in WaterRipples to ensure proper resource management and prevent memory leaks
added configuration for disabling semi - join optimizations and operations on external tables to improve performance by preventing unnecessary optimizations on external tables
updated the description of the " Authorization " header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
updated wallpaper offset configuration from - 30 to 0 in Launcher . java and adjusted scroll range in Workspace . java to improve wallpaper visibility and
updated SybaseASADatabase to return true instead of false and modified sequence retrieval logic in SequenceSnapshotGenerator to ensure correct behavior for Sybase database
nifi - 114 : fix commit / rollback behavior in putsql when autocommit be set to false
added directory creation logic in SnapPuller . java to ensure the parent directory exists before proceeding to prevent server errors during file operations
changed the app target ID from " id : launcher " to " launcher : launcher " in AppTarget . Builder to align the application target with the
[ java ] : fix memory leak in messageframer . frame ( ) .
removed unnecessary parameters from constructors in OAuth2AuthorizationRequestRedirectFilter and OAuth2LoginAuthenticationFilter classes to simplify method signatures and improve code readability
added extended description for split text into key - value pairs in GenericUDFStringToMap . java to provide clarity on the delimiter usage for text
refactor PlainFormatter to use ` Instant . now ( ) . truncatedTo ( ChronoUnit . MILLIS ) ` instead of a static final string
[ java ] increase retry _ close _ timeout to 3000 ms for agentrunner . close ( ) .
refactor ClassLoadingStrategyHelper to simplify method invocation and improve exception handling to enhance code readability and maintainability by reducing complexity in exception handling
refactor Mockito class for improved readability to enhance maintainability and ease of understanding for future developers
updated debug log message from " Closing proto event file " to " New proto event file " in HiveProtoLoggingHook . java to clarify the
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark tests as ignored due to frequent failure scenarios
updated the error message to specify that rows and columns must be greater than zero to improve clarity and accuracy of the error message
wagoncART : add error handle to decisionnode . binarystring ( ) and wagoncART . binarystring ( )
added sorting and sorting functionality for BoundSheetRecords in XLS2CSVmra . java and XLS2CSVmra . java to improve
refactor thrust calculations in ThrustCurveMotor . java to use start and end times instead of average values to improve clarity and accuracy of thrust
[ fix ] inputsystemjmedisplay should use inputmanager . setinputmanager ( ) .
added assertions to ensure hashCode field offset is non - negative in UniverseBuilder . java to improve code clarity and ensure proper handling of hash code fields
remove deprecate block . getmesh ( ) , replace with block . getmesh ( )
[ hotfix ] [ yarn ] fix typo in yarntaskmanagerrunner
added support for empty word options in LineReader and updated matcher logic in Example and LineReaderImpl to improve user experience by allowing users to choose between
do n ' t write commit log on view replica update if writecommitlog be false
updated CaptureActivity to handle button presses and added default button IDs in ResultHandler and URIResultHandler to improve user experience by enabling web access
added a test method ` testBatching ` to ` JoinedTableTest ` to validate batching behavior for the ` Post ` entity to ensure
no effective change - add debug log for duplicate timestamp exception
deprecated the deprecated option ` format ` to ` plugin ` in ` CucumberOptions ` and updated its usage in ` RuntimeOptions ` to ensure
removed the save ( ) method call from the PMS class to streamline the code by eliminating unnecessary method calls
refactor back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the ` newCapacity ` calculation in ` AbstractStringBuilder ` and added a new ` Capacity ` class with multiple methods in ` Capacity `
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve code clarity
added support for endnotes in xwpfdocument , xwpfparagraph , and xwpfrelation
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager . java and updated test cases in CasEventsReportEndpointTests .
added a new test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the version of the GDAL library
added a new ` Lifecycle ` class to manage network errors and UI components to improve network error handling and user feedback in the application
updated deviantart ripper to download a URL with a cookie and added error handling for 404 responses to improve URL handling and ensure proper logging for
removed unused imports from BodyTubeShapes and RocketFigure classes to clean up the code and improve readability
added support for dynamic surface scaling based on the RETINA flag in PJOGL to enhance rendering performance by allowing different screen resolutions based
add auto - select option for create project without pub ( # 468 )
replaced PackedInts with BlockPackedWriter and refactored disk value handling in DiskDocValuesConsumer . java to improve performance and maintainability
refactor defaultstatusroute to use a sortedset instead of a collection by status
removed unnecessary data handling logic in GoAwayTest . java to simplify the code and improve readability
added property handling for FluentSetterBean in ReflectionUtils and created a new FluentSetterBean class to ensure generated beans with fluent setters are correctly populated
refactor post and send methods to return an HttpResponse object instead of ListenableFuture < ? > to improve code clarity and maintainability by using more de
updated file URL handling to include a " noop = true " parameter and added a new method ` prepareFolder ` for folder sorting functionality to enhance test
updated logging statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by using a more descriptive
alexeibarantsev : add support for image pdf generation , a suggest by valerybokov
added support for aggregate function name in TSServiceImpl . java to enhance functionality by allowing users to specify the aggregate function when available
updated ` Nested2 ` and ` Base2 ` classes to extend ` WithNestedTests . AbstractNestedTest ` instead of ` LuceneTestCase ` to
add xcap enable checkbox and update xcapserveruri when xcapserveruri be set
added a new constant for handle exceptions and modified error handling logic in the Dispatcher class to improve error handling and provide a configurable option for handling exceptions
added methods to stop text editing in CodenameOneImplementation , Display , and AndroidImplementation classes to improve text editing functionality and ensure consistent behavior across components
nifi - 132 : fix flowfilecontrolrate to handle non - existing group attribute .
updated method signatures and logic in ComponentConfigDialog and RocketComponentConfig to improve clarity and functionality to enhance user experience by allowing preset selection when a
added error handling and logging for chat messages in ChatAnnotation . java to improve error handling and ensure thread safety during message sending
added a check for the operating system type in HTMLDataFlavorTest . java to ensure the test is only run on Windows to avoid errors related to
added SQL _ SERVER _ SNAPSHOT to the IsolationLevel enum to support SQL server snapshot functionality in the transaction isolation level
replaced the direct insertion of newRecids with a loop that offers a delay before adding newRecids to improve efficiency by avoiding unnecessary data insertion
use java . util . zip . zip instead of jrecompat . getinstance ( ) . jarfilenewinstance ( ) .
added a null check for the command class in RegisteredServiceSimpleFormController . java to ensure proper handling of service creation based on the command class
change disk failure policy from best _ effort to ignore . patch by brandonwilliams , review by brandonwilliams for cassandra -
remove the ` ` public ' ' modifier from the rip ( ) and ripstatushandler ( ) method
[ java ] do n ' t try to connect to an ip address that do n ' t match the ip address .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to streamline the code by eliminating unused method
updated imports in PinotSegmentRebalancer . java and modified computePartitionAssignment method to include ClusterDataCache to enhance partition assignment functionality by
simonstewart : make container . delete ( ) auto - remove by default
refactor ` DefaultSeleneseCommand ` to improve input parsing and validation to enhance code readability and maintainability by using assertions instead of manual
added multiple attempts rule to createlossarytests to improve reliability of test execution
added a reference to ` Components . COMPONENTS _ SCHEMAS _ REF ` in ` ModelResolver . java ` to ensure consistency
refactor EntityDeletedEvent to use JsonUtils for serialization and deserialization to improve code clarity and ensure proper serialization of deleted events
added support for " gop " format in FormatConfiguration . java and updated media parsing logic in DLNAMediaInfo . java to enhance media
added a new file TestProfileReturnTypePrinting . java that implements a performance test for method return type printing to demonstrate the behavior of method return type
added locking mechanisms to manage concurrent access to CURRENT _ VERSION _ INFO and multiDimensionItems to ensure thread safety during concurrent access to configuration
added acquisition and release logic for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator . java to ensure proper resource management and
simonstewart : remove the @ ignore annotation from the firefox profile test
updated method signatures and return types in HasAndroidDeviceDetails . java to improve clarity and type safety to enhance code readability and maintainability by providing
do n ' t add dead bug to statistic when there be a bug instance .
bugfix # 25762 - importpanel : disable shadow / shadow label on gtk laf
removed multiple redundant @ Override annotations in CacheControlImpl . java to clean up the code and improve readability
added a check for empty by days in the ScheduledAction class and a corresponding test in ScheduledActionTest to ensure that weekly actions do not return a
refactor upload button handling in ShareActivity to use Menu instead of Button to improve code organization and maintainability by centralizing upload task functionality
refactor multiple classes related to message security to improve code organization and maintainability
added ` loadMetaData ` method implementations in ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading of exchange metadata from
added WritableSerializer to the CrawlDbReader to enable custom serialization of Writable types to enhance JSON processing capabilities for Writable types in the CrawlDb
removed unused TesterRequest class and updated import statements in TestJaspicBasicAuthenticator . java to clean up the code and improve readability
added service configuration pid to MDNSDiscoveryService to ensure proper configuration for the MDNS discovery service
added null check for messageitem in chatviewerfragment to prevent crash
updated ForkJoinPool initialization in TestBPIndexReorderer . java to use ForkJoinWorkerThread to improve thread management and performance in concurrent scenarios
removed assertions for DATANODE and NAMENODE roles in RoleCommandOrderTest . java to streamline test cases by eliminating unnecessary assertions
added a new method ` restoreLocalInfoFromTableInfo ( ) ` and refactored the ` writeObject ` method to include a ` ded
reformatted code in JvmUtils , LikeCondition , and AbstractOperationGenerator classes to improve code readability and maintain consistency
added transformation and flipping functionality to BitmapFontTest . java to improve sprite rendering and ensure correct image rendering
[ hotfix ] [ table - planner - blink ] ignore builtin aggregate in python group window aggregate rule
[ java ] do n ' t send pending echo if the server be down .
add getunreachabletokenowners ( ) method to get the list of unreachable token owner .
fix geosymbolic . multiply ( x ^ 2 , x ^ 2 , x ^ 2 , x ^ 2 ) to not change to multiplication
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to improve flexibility in content type management and ensure default value is
changed variables from ` _ _ ` to ` private static final ` and added null checks for ` localEnv ` in ` XToolkit . java `
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced synchronized blocks with read and write locks in EnvironmentImpl . java to improve concurrency handling and reduce contention overhead
added unit tests to verify the functionality of read identity providers in different identity zones to ensure correct functionality of identity provider access in different identity zones
[ hotfix ] [ runtime ] fix npe in pointintimetrigger
removed unused import of Service class from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
added logging for rebalance changes and updated subscription version in RebalancePushImpl . java to improve monitoring and monitoring of subscription version changes
cairo : add an option to create a detached mkdir on the cairo server
[ java ] add a test to ensure that the follower be still alive when there be a follower .
updated the default label pattern from " authors3 [ year ] [ year ] " to " auth [ year ] [ year ] " to reflect the
refactor dependency handling in DBinaryDescription and DLibraryDescription to utilize CxxPlatforms for better dependency management to improve code maintainability and
removed initialization flag and refactored OAuth service handling in GoogleCloudAPI . java and updated dispose method in GoogleTTSService . java to simplify
camel - 14265 : camel - file - consume : do not delete file if the file name contain ` ` file : name ' '
added a boolean flag ` reopenReaders ` to the ` SolrConfig ` class and updated the ` SolrCore ` class to conditionally reopen readers
added a new constant ` DIALECT _ VERSION ` in ` FreeplaneVersion . java ` and updated ` MapWriter . java ` to include
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance the functionality
added a dup method in ` mmm Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest . java `
refactor condition implementations to use interfaces instead of anonymous inner classes to improve code readability and reduce boilerplate code
replaced TermQuery with ConstantScoreQuery for score calculations in TestFacetsCollector . java to improve performance and accuracy of score calculations
removed multiple unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
added a new method ` providesDirectNearbyUploadPreferences ( ) ` and refactored the existing ` providesUploadController ` method to streamline
add support for ` ` sysdummy1 ' ' mode ( mode = db2 / derby mode )
refactor logging statements and improve logging format in TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration classes to enhance code readability and maintainability while
[ bug - 64226 ] add a new property to poixmlproperties , and add a unit test for it
[ geotiff ] fix issue with negative infinity in geotiff reader
refactor CliDriver to improve error handling and session state retrieval to enhance code clarity and ensure unique session identifiers for better maintainability
refactor MockRestAdapter to use RxScheduler instead of Executor for asynchronous operations to improve responsiveness and responsiveness of the MockRest
refactor selectByRuleIdSet method to accept a list of rule ID sets to improve code readability and maintainability by encapsulating
added a new method ` addExitDescription ` to the ` ExitStatus ` class and updated existing methods to accept ` Throwable ` as a parameter to
fix a crash when click a multiblock with an entity that be n ' t the player of the block .
rename columnfamily to columnfamilycolumn to make it easy to understand
removed an unused import statement in PlotConfiguration . java to streamline code and improve readability
refactor DefaultIOSInput to use UIAlertController instead of UIViewDelegate to improve code organization and enhance alert handling functionality
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in variable naming
added assertion to verify that the service ' s message is not null to ensure that the service ' s message retrieval functionality is correctly validated
refactor key handling in MappingMongoConverter to improve clarity and correctness to enhance code readability and ensure proper key conversion logic
updated logging statements in NearbyMapFragment . java for consistency to improve readability and maintainability of log output
camel - 15836 : camel - jbang - use deprecated instead of javatype to avoid confusion .
updated FuzzyLikeThisQuery to use Terms for field retrieval and added a test for non - existing fields in FuzzyLikeThisQueryTest
refactor ` writeApplicationsLinks ` method to accept a boolean parameter for tabular list handling to improve readability and maintainability of the code
[ ds - 2576 ] use identifierservicefactory instead of createmissingidentifiers to create a new identifierservice
updated byte length assignment from bytes . length to bw . getLength ( ) in VectorColumnAssignFactory . java to ensure correct byte length is used for
changed the return type of the getDisplayScript method from abstract to a non - abstract method to provide a default implementation that returns null for the method
simonstewart : fix the order of key - to - release and key - to - release in remotewebdriver
pdfbox - 4071 : initialize cosobjects with the size of the list instead of the size of the list
added a check for empty active interfaces in NetworkConfigurationWatcher . java and added null checks in NetworkManagerListenerImpl . java to ensure proper handling of
fix bug # 45538 - handle nested object in hssfworkbook . getembeddedobjects ( )
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve readability
updated variable names from hostParams to roleParams in AmbariManagementControllerImpl . java to improve clarity and consistency in variable naming
pdfbox - 4071 : do n ' t return true for symbol font , a suggest by valerybokov
use gl11 . glPopAttrib ( ) instead of glStateManager . popAttrib ( ) in ModelHourglass . java to ensure compatibility with
refactor LiveTvGuideActivity to use LiveTvGuideActivity ' s start date and update related logic to improve code clarity and ensure accurate
updated method invocation from ` getDeclaredMethod ` to ` Whitebox . getMethod ` and added ` CommonParentTest ` and ` ChildB ` classes to improve
added libraries for " libfreetype . so " , " libfontmanager . so " , and " libfontmanager . so " in J
fix ( core ) : add support for multi - variable function .
loop safepoint elimination : add guard for unsigned loop .
refactored the isInstance method in TypeFrameModelingVisitor to improve code organization to enhance maintainability and readability of the code
added a new ` LocalizedString ` class and updated ` Attr ` and ` Resolve ` classes to support localized string representation and improve method argument handling
added a boolean field ` disableClasspathSearch ` to the ` ServerConfig ` class and updated the condition in ` DefaultContainer ` to allow configuration of
refactor DataLine class to use Arrays . copyOf for AudioFormat arrays to improve code clarity and ensure immutability of AudioFormat arrays
updated default retries value from 0 to 2 in Reference . java and changed the default value from 0 to 1 in AnnotationPropertyValuesAdapterTest . java
added JSON parsing and handling for settings in TexturePacker . java to enable dynamic packing settings based on input and output parameters
updated AchievementsFragment to replace progress bar text with text view text to improve user experience by providing clearer feedback during uploads
added annotation processing round calls in TranslatingJavacPhaseTracerTest . java to ensure correct processing of generated files during annotation processing
added a new ` CategoryInfo ` class and updated ` MwQueryPage ` to include ` & prop = categoryinfo ` to enhance functionality by
updated assertion messages in AuthzAuthenticationRequest . java for consistency to improve code readability and maintainability
added accessibility support and modified timeout handling in TaskbarStashController to improve user experience by allowing customizable taskbar visibility settings
updated signature parsing logic to handle both ' ^ ' and ' ^ ' cases to ensure proper exception handling for NoSuchElementException in the signature parsing process
updated access flag handling in ClassVisitorDriverFromElement . java and added new test cases in StubJarTest . java to ensure that static access flags
added null checks using ` Objects . requireNonNull ` in ` IntervalFilter ` and ` LowpassIntervalsSource ` classes to ensure ` in `
added unit tests for the iterator ' s next and hasNext methods in MapInterfaceTest . java to ensure correct functionality of iteration over entries in a map
added a serialVersionUID field to the TreeMap class to ensure serialization compatibility for the TreeMap class
updated the ` createdAt ` method to use ` Instant . ofEpochSecond ` instead of ` Instant . ofEpochMilli ` to ensure accurate representation
[ grobcov ] use grobcovf2m instead of grobcovcx
added encryption key deletion for accounts by deleting private and public keys to enhance security by ensuring only public keys are deleted
refactor the keep - alive header value to a utility method in AsyncHttpProviderUtils to improve code readability and maintainability by centralizing the
fix npe in postjoinmapoperation when map have no interceptor and lite member join
alexeibarantsev : remove unused code in standarddialect . java
[ hotfix ] [ runtime ] remove unnecessary parameter from binaryhashtable
refactor environment variable handling to use Optional for better null safety to improve code readability and maintainability by centralizing environment variable retrieval logic
no functional change - fix checkstyle violation
added SerializableMode import to Mockito in mmm and ppp files to enable serialization support for Mockito in the codebase
added nullability check for field injection point and updated exception handling to ensure proper handling of null values in dependency injection
refactor database mode handling to support isolation level in select statements to improve code clarity and maintainability by centralizing isolation clause parsing logic
added constants for HIVE _ SERVER2 transport mode and HTTP path in HiveConnection . java to improve code readability and maintainability by reducing
added a method ` isCacheable ` to ` GlobalOrdinalsWithScoreQuery ` that returns false to indicate that the query should not be cached
added a new file TestStrangeControl . java to implement a thread - safe test for StrangeControl to facilitate testing of StrangeControl functionality
updated file extension from " . json " to " . jsfile " and " . jslib " in JsFile . java and Js
added selectionStart and selectionEnd variables and their corresponding methods in ShadowEditText . java to enable handling of text selection within the ShadowEditText class
refactor gRPC server initialization to use a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
added a new method ` use ( String path , Class < ? > routeClass ) ` to ` Jooby ` and updated related tests to
added a null check for fst in FreeTextSuggester . java to ensure that an exception is thrown when a lookup is not supported
updated string handling in T4975569 . java and added error handling in T6729471 . java to ensure consistent line endings across
added ABI writer class loading and processing logic in JavacInMemoryStep . java to ensure proper handling of ABI writer classes during processing
suppress warning about booleanmethodisalwaysinverted in pubroot .
do n ' t try to schedule pull request if the service be shut down
refactor EnergyEndpointer class to improve code readability and maintainability
updated the calculation of ` foreDiameterColumnIndex ` and refactored the logic for determining ` foreDiameterColumnIndex
no effective change - remove unused import
camel - googlesheet : fix switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the files mmm Constants . java and mmm DistanceUtils . java to remove unused code to streamline the project
replaced diskDelimiter parsing with direct substring extraction from the key to improve efficiency by directly accessing substrings from the key
fix build - time initialization of native - image class .
added a new test method ` testCreateInline ` to ` RoleBindingTest ` and refactored resource handling in ` RoleBindingOperationsImpl `
added logging statements to UaaSessionCookieConfig for session cookie configuration to improve traceability and debugging during session cookie configuration
updated the calculation of the file name in HotseatFileLog . java to use the calendar ' s day of year to ensure the file name reflects
corrected variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve code readability and maintain consistency in variable naming
added error handling for invalid options in JavapTask . java and created a new T8033711 . java file with a main method to
removed redundant calls to ` Collectors . toList ( ) ) ` in multiple files to simplify code and improve readability by eliminating unnecessary method calls
updated logging level from error to warn and modified exception handling logic in TaskDriver . java to improve log clarity and handle shutdown scenarios appropriately
[ hotfix ] [ network ] add option to disable tiered storage in singleinputgatefactory
refactor success status check into a separate method to improve code readability and maintainability
added support for OpenGL 2.0 in Cuboc . java and modified Cubocy initialization in CubocDesktop . java to enable OpenGL
removed unnecessary check for VoidType in JimpleBody . java to streamline code for better readability and maintainability
refactor OutputMacroExpander to use Arg and AddToRuleKey for command line argument handling to improve code organization and clarity by encaps
[ hotfix ] [ test ] change assertnojobslefteventually to assertnojobslefteventually for light job
added a condition to check if the inputFile does not contain " / build / " and does not contain " \ \ build \ " to ensure that
[ # 6382 ] instructor : add feedback response comment list to the list of comment
removed unnecessary whitespace in the conditional statement to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java that implements a class with methods for saving and checking objects to implement and verify the behavior of object
replaced direct stream skip calls with IOUtils . skip for better readability to improve code readability and maintainability by utilizing existing utility methods
added error handling and logging for connection pool startup in ConnectionPool and JdbcInterceptor classes to improve error handling and provide clearer diagnostics during connection pool
changed the catch block from Exception to Throwable in CoreContainer . java to handle a broader range of error scenarios
hbase - 13232 lrublockcache . removeblockbyhfilename ( ) should return 0 if eviction be in progress
removed unnecessary check for zero task count in RecentsView . java to simplify the code by eliminating unnecessary checks
added instance config change listener and increased sleep duration from 1000ms to 5000ms in HelixBrokerStarter and HelixServerStarter to improve
added CoinmateMetadataService and its static methods for fetching exchange metadata to enable users to retrieve exchange metadata directly from the Coinmate exchange
[ mng - 7370 ] model validator should warn about $ { basedir } / $ { project . basedir } / project . basedir
pdfbox - 4071 : fix typo find by codespell on fossies . org
add setdisplaydata ( ) method to ptransform , and add test for it
replaced ` new DefaultSubject ( Truth . ASSERTION _ ERROR , null ) . check ( ) ` with ` assertThat ( ( Object ) null
remove jdk . certpath . disabledalgorithms property ( jdk . certpath . disabledalgorithms = ' ' md2 , rsa keysize <
[ hotfix ] [ command - line ] fix typo in optiondata
updated module - info . java files for mmm and ppp modules to improve module documentation clarity and maintainability
added error handling for server errors in the ensureConnection method to improve robustness by ensuring that an IOException is thrown if an unknown server error occurs
removed redundant assignment of sCheckingEvents in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to ensure proper cleanup of
refactor exception handling in FileSinkOperator and add closeWriters and closeRecordwriters methods to improve error logging and ensure proper resource management during
added diagnostic output printing to SchemaGenerator to enhance debugging capabilities by displaying relevant diagnostics
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using ` OptiqSemantic
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a set to track loaded resource paths and modified resource scanning logic to prevent multiple scans for the same resource path to improve efficiency by avoiding redundant
updated test instance initialization logic to handle null values to improve error logging clarity and prevent potential NullPointerExceptions
added null check for ` o ` in ` RoutingInBoundHandler . java ` and updated response handling in ` RoutingInBoundHandler . java `
added a ` natIp ` field to ` EkeyConfiguration ` and improved logging in ` EkeyUdpPacketReceiver ` to provide clearer
updated memory allocator imports to use ArrowByteBufAllocator instead of io . netty . buffer to improve memory management and compatibility with the latest Apache
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
updated HttpConnection to conditionally set the state of the parser based on header and body buffer lengths to improve parser state management and ensure proper handling
[ java ] use atomicreferences in multitimeout to avoid race condition .
add a compaction limit to leveledmanifest so that it do n ' t crash if there be no compaction candidate
added a test annotation to the TestOrcTimezone1 class to facilitate testing of timezone - related functionalities
refactor conditional logic to support both enabled metrics and timers substrings to improve flexibility in determining if metrics are enabled based on specified substrings
added error handling for JSON processing in PinotSegmentRestletResource . java and refactored return statements in TraceContext . java to improve robust
updated the default renderer logic in JTable . java and added a new test class Test6888156 . java to ensure proper handling of null superclass
added conditional checks for the existence of the shell before adding it to the arguments to ensure proper execution of commands based on the existence of the environment
updated the subscription count in the deleteWithoutSubscriptions method from 10 to 1 to optimize resource management by reducing the number of subscriptions
replaced List with LinkedHashSet for testInstances in MockitoExtension . java and added a new ClassWithDependency in JunitJupiterTest . java to
refactor FieldMonitor class to improve code organization to enhance maintainability and readability of the code
updated transaction handling in BTreeMapTest . java to ensure proper transaction management and file mmap enabling
modified the iterator initialization logic in SortedIntList . java and added a reset method in SortedIntListTest . java to improve iterator management
added JMX unregistering of the object name in DefaultRemoteProxy . java and modified exception handling in JMXHelper . java to improve jmx management
[ hotfix ] [ core ] change rocksdb writebuffer size from 4mb to 64mb
removed the ' true ' parameter from the constructor call in Style . java to simplify the constructor by removing unnecessary parameters
replace ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message input without encoding
added JSON graph logging for portable pipelines in SamzaRunner to facilitate easier debugging and monitoring of pipeline configurations
update helloaudio to use mouseinput . button _ left instead of vector3f . zero
[ hotfix ] [ runtime ] fix typo in looprotatebadnodebudget javadoc
added a new method ` convertToMongoType ` to ` AbstractMongoConverter ` , ` MappingMongoConverter ` , ` MongoWriter ` , and updated
change inputbox to show ` ` i ' ' instead of ` ` complex ' ' for link geo
simonstewart : fix the issue that sendkeystoactiveelement . tostring ( ) return an empty array instead of an array .
added methods to create a scaled instance of a BufferedImage with appropriate transparency handling to improve image scaling efficiency and prevent rendering issues with large image sizes
modified the extendArgumentCheck and extendWrapStore methods in DBMaker . java to ensure proper handling of the engine variable during argument checks
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure the shift state is updated when needed
removed the ` DETECTED _ ACTIVITY ` constant from ` SerializableLocation ` , modified ` CSVFileLogger ` , ` CustomUrlManager
replaced the import of ` org . eclipse . jetty . websocket . extensions . ExtensionConfig ` with ` org . eclipse . jetty . websocket . protocol
removed the import of ` com . facebook . buck . rules . Buildable ` from ` AaptPackageResources . java ` to streamline
added comments to several Java files regarding unused variables to improve code readability and maintainability
updated exception message in WebSocketUpgradeHandler to include HTTP status code to provide clearer context on the error response for better debugging
updated blockMode assignment syntax in P11Cipher . java to improve code readability and maintainability
refactor Mockito class for improved readability to enhance maintainability and ease of understanding for future developers
refactor permission checks for plot ownership in Merge . java to improve code readability and maintainability
removed deprecated getConversationID ( ) methods from multiple classes to clean up deprecated code and improve maintainability
updated imports from com . sun . speech . freetts to de . dfki . lt . mary . unitselection . featureprocessor
refactored the ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` instead of ` HashMap ` and ` HashMap `
refactor Rendering class and update rendering methods in DLNAResource . java and Request . java to improve clarity and functionality of rendering context updates
added repositories to the DefaultPluginManager to include both resolution and artifact repositories to enhance the project ' s repository management by including all relevant repositories
( chore ) camel - cxfrsproducer : close the applicationcontext after each test
refactor PhysicsClient class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to SessionTest . java to address frequent failure in test cases
added file initialization in ZipFile . java to ensure the file object is properly instantiated from its name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in favor
[ core ] fix initialization of channel with default constructor .
added logging functionality and utility methods for call stack traces in GenericDAOImpl and created StackTraceUtils class to enhance debugging capabilities by capturing call stack
removed the @ Test annotation from FormLoginIntegrationTests . java to improve test coverage for form login functionality
refactor argument parsing logic in FunDefBase and FunFunDef classes to include conditional checks for missing parentheses to improve code clarity and
updated SQL query to use a Multimap for cluster names and improved error logging to enhance clarity and maintainability of error messages related to cluster configurations
corrected the spelling of " suppressWarnings " to " suppressWarnings " in UnsafeAutomaticSubstitutionProcessor . java to ensure compatibility with Java versions
updated JsonTreeReader to handle additional Json JsonToken types to improve error handling and ensure proper parsing of JSON elements
added a new option to consume additional arguments in the TestCommand class and implemented a corresponding test case in ExternalTestRunnerIntegrationTest to ensure unexpected arguments are handled
added a method ` dedup ` to ` SolrDeleteDuplicates ` and a new method ` indexSolr ` in ` SolrIndexer ` to
[ hotfix ] [ table - common ] fix incorrect planner usage in example
added a call to clear the database in MssqlIntegrationTest . java to ensure proper cleanup of database state during integration tests
updated progress display logic in Progress . java and added dispose ( ) method in RSSReader . java to enhance user experience by allowing customization of
added a condition to check if the parent file does not exist before proceeding to avoid potential errors when the parent file does not exist
added methods to write and close POIDocument objects in IOUtils . java to improve resource management and ensure proper closure of POIDocument objects
updated print statements in JavaBuild . java to include newlines after runOptions and sketch name to improve readability of output for better debugging and
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for its properties to improve type safety and
added user search functionality in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to improve user authentication handling and
added default ports functionality to the NettyHttpServer , DefaultRouteBuilder , and UriRoute classes to enable dynamic port configuration based on server and HTTP
updated status handling in SnmpTargetHandler to ensure proper initialization and verification of ThingStatus to improve reliability and maintainability of the status verification process
fix instructorfeedbackeditpageaction to only allow instructor with submit privilege
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should not be used in new code
refactored jar and zip file path handling in FileResolverImpl . java and added a new WarFileResolverTest . java file to improve path
updated log message format in DocumentsWriterPerThread . java to include documentstores to provide clearer insight into the size of newFlushedSize
change dirt . getunlocalizedname ( ) to getunlocalizedname ( ) in examplemod .
updated whitespace condition from ` stripWhitespaceX ` and ` stripWhitespaceY ` to ` stripWhitespaceY ` in ` ImageProcessor . java ` to
updated locks initialization to use a multiplier of 1000 instead of a fixed value to ensure thread count is consistent across the application
updated the ` deserializeFrom ` method to use ` exactSearch ` instead of ` false ` and added a test for the ` getMeasurementChunkMetadata
remove unused parameter in csvsaveservice # makeresultfromdelimitedstring ( )
added a preferred size for the pane in NavigationShareTab to ensure the pane displays the correct size based on the current row height
replaced OffsetAttribute with State and updated related methods in BeiderMorseFilter . java and added a test for custom attributes in TestBeider
refactor Upnp - related classes for improved organization to enhance code readability and maintainability
fix the buck lens wauler not be able to place the burst in the wrong place
added a new test method ` toJson ( ) ` and updated import statements in ` JsonTest . java ` to improve test coverage and ensure proper
[ hotfix ] [ runtime ] fix typo in mutablecontextdatasupplier javadoc
change exception handling from catching Exception to catching Throwable and log a warning instead of throwing an exception to improve error handling and provide clearer logging
updated the KubernetesMockServer constructor to include a HTTPS parameter to enhance security by allowing HTTPS connections to the Kubernetes
[ gr - 26465 ] fix unary operation to use stamp for foreigncallnode .
updated response handling in DefaultServlet and DefaultServletTest to allow multiple HTTP methods to enhance security by restricting access to additional HTTP methods
tika - 2842 : use locale . us for numberformat in tikaextractor ( )
replaced ` throw new SolrException ( ErrorCode . BAD _ REQUEST , " can not find : " ) ` with ` rsp . setException ( new
added a try - catch block to handle Throwable and InvocationTargetException exceptions in ReflectorClassWriter . java to improve error handling by capturing and rethrowing
added a clamp method to the Vector class and implemented it in Vector2 to enable clamping between min and max values for vector operations
added OAuth2 authentication handling in ChainedTokenGranter . java to ensure proper access token granting based on client scopes
refactor BC _ instanceof in mmm and ppp files to improve code readability and maintainability
replaced setSaveFlags ( SAVE _ ALL ) with setSaveFlags ( SAVE _ ALL ) in EditorBottomSheetBehavior . java to improve
refactor UaaUrlUtilsTest to use JUnit 5 annotations and update JUnit imports to improve test structure and compatibility with JUnit 5
hhh - 14199 fix type cast in nativequery
added a WeakHashMap to track font aat status and modified return logic to use it to improve performance by reducing redundant calculations when accessing font attributes
replace intbigarray with intarraylist in typedset .
simonstewart : fix a bug in the remote webdriver that cause the remote webdriver to crash .
[ hotfix ] [ runtime ] fix typo in brokerrequestutils javadoc
refactor instance management in InjectorBuilderImpl to use a Map for better organization to improve code readability and maintainability by encapsulating
updated method calls in ` RawTargetToRawTargetNodeTransformer ` to use ` getBasePath ( ) ` instead of ` getAbsolutePathToBuildFile (
added a null check for the ` val ` parameter before parsing it to avoid potential ` NullPointerException ` when ` val ` is null
[ jabber ] add keepalivemanager to jabber service so that it do n ' t interfere with jabber .
updated the DEFAULT _ LOAD _ FACTOR value from 0.67F to 0.66 to adjust the load factor for better performance
added a method to retrieve all data types physical variations in VectorizationContext and updated related classes to utilize this new method to improve data type
refactor package structure for HtmlAssetTranslator and StringsResourceTranslator to improve organization and clarity of the codebase
refactor conditional logic for handling overview actions in OverviewState . java to improve readability and maintainability of the code logic
added JPA entity annotation to BaseActivityEventEntity . java to ensure that the entity is managed by a JPA entity
added tracing information for TouchInt interactions in NavBarSwipeInteractionHandler and TouchInteractionService classes to improve debugging and monitoring of touch interaction interactions
added a new file ` InvalidOptions . java ` that implements a test method for validating command - line options to ensure proper handling of invalid options
added a condition to check for inconsistent display sizes in DisplayController . java to improve error handling for inconsistent display configurations
refactor OAuth20UsernamePasswordAuthenticator to use OAuth20Utils for client ID and secret retrieval to improve code organization and encapsulation
updated the ` _ unwrapServletException ` variable from ` false ` to ` true ` in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` to
added logic to set status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure proper handling of status and info updates based on the
camel - 14284 : fixed seda default queue size issue
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to the App class to facilitate batch updates in the application
added HttpClient configuration and validation to ThirdEyeApplication . java to enable HTTP client integration in the application
added sorting functionality to the job instance fetch request in JpaJobPersistenceImpl . java and JobInstanceFetchRequest . java to enhance data retrieval capabilities
updated CryptoFacilitiesTradeService to return a specific currency pair instead of throwing an exception to improve functionality by allowing the cancellation of cryptocurrency
ggb - 221 do n ' t hide the keyboard when click in algebraviewweb
memmove : use nfi . memcpy . call ( ) to call memcpy .
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve code readability and maintainability
added a blockToolTip property and its getter and setter methods to ToolTipManagerW to control tooltip blocking behavior to enhance user experience by allowing tooltips to be
updated DefaultDateTypeAdapter to accept both dateStyle and timeStyle parameters to enhance flexibility by allowing custom date formatting and style configurations
updated playerSet string format from " < UID : " to " ( " ) " to improve clarity in playerSet representation
added a check to return the current list instance if the list is empty to ensure proper handling of cases where no elements are present
do n ' t wrap invocationtargetexception in wrappedcommandexception in case of invocationtargetexception .
added support for UDFRegExp in the getLikeExpression method to enhance functionality to support regular expression handling in vectorization
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to provide a standardized way to start and
updated the ` runChild ` method in ` LuceneTestCase ` to properly manage locale changes to ensure proper handling of locale changes during child execution
refactor multiple classes related to PGConnection , PGStream , PGDatabaseMetaData , DefaultJavaSSLFactory , LibPQFactory , DefaultJavaSSLFactory
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by reducing duplication
add a test case to show how to use routebuilder reference in camel - blueprint
nifi - 145 : make testexecutestreamcommand more robust by check if the attribute contain the expected value
removed the ` Warner . noWarnings ` parameter from the ` returnTypeSubstitutable ` method and added a ` warner ` parameter to
added ThrottleType enum and modified processThrottled method to handle CHARS and BYTES to improve flexibility in handling different character encodings during template
removed unnecessary variable assignment in ColorBleedEffect . java and added conditional check in SpriteBatch . java to improve code readability and prevent
refactor Annotation and AnnotatedElement classes to improve code organization and maintainability
added a new interface ` Model ` to the ` org . apache . poi . hssf . model ` package and modified ` Sheet
( chore ) camel - http : use camel _ filter _ pattern instead of hardcoded string
added a ` clearEntityManager ` configuration to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to enable clearing of the entity
added null checks for ShortcutInfo and Toast display in InstallShortcutReceiver , Launcher , LauncherModel , and Workspace classes to improve error handling
updated TwoDimensionalCollectionValuedMap to accept a boolean parameter to ensure compatibility with configuration changes in the code
updated exchange specifications from " btc - e . nz " to " wex " and changed the host and exchange name from " b
added null checks for column readers in OrcEncodedDataConsumer and added null check for child in EncodedTreeReaderFactory to prevent potential NullPointerException
added null check for files in SegmentInfos . java and a test for opening IndexReader after deletion in TestIndexReader . java to ensure robust error
[ fhir ] fix test for elastic search in hsql ( # 11389 )
added a check for negative percent values in DeviceHandler . java to ensure that positive percent values do not exceed 100 to prevent potential errors
updated condition checks from ` limit < 1 ` to ` limit < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java
camel - 18199 : camel - core - optimize to reduce log verbosity .
[ hl ] fix getnextchunk ( ) method for hl playlist
updated test class names from ` NumericRangeFilterBuilderTestCase ` and ` NumericRangeQueryBuilderTestCase ` to ` TestNumericRangeFilterBuilder ` and `
[ hotfix ] [ stream ] fix race condition in stateful operator
removed null check for ` this . fill ` and ` this . stroke ` before setting bitmap shader shift in ` Area . java ` and ` Line
added dbExists method and updated imports in Blockchain and BlockchainTest classes to improve database existence checks and ensure proper test setup for blockchain
trim whitespace from the group value in SQLPlusSupport . java to ensure consistent formatting by removing leading and trailing spaces
set socket . setasync ( false ) and socket . setasync ( true ) in the apr protocol
ggb - 147 fix divide by zero in desktop
added health check metrics and renamed the health check method in PinotControllerHealthCheck to improve health check functionality and provide feedback on service status
hide shared avatars view in LocalFileListAdapter to improve user experience by hiding shared avatars when not needed
[ web ] remove clientbundle . source annotation from web resource
updated argument length checks from ` > = = ` to ` < = ` in multiple classes to ensure proper validation of command - line arguments
added logging checks in LogInterceptor for non - fine logging to ensure command execution only occurs when the logging level is fine
refactor latch handling in EventBusTracingTestBase to use assertWaitUntil to improve test reliability by ensuring spans are finished before proceeding
refactor QueryParser to initialize locale to default and add getter / setter methods to improve flexibility and encapsulation of locale handling
fix issue with custom entry customization dialog not be add to the list .
[ jbrules - 2441 ] fix bug in build and add test for betanodeconstraint
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` and ` OCSPResponse ` to
added serverState variable and modified sleep duration in SSL . java to improve server error handling and ensure proper server state management
added connection count tracking functionality to the SourceCounter and SourceCounterMBean classes to track the number of active connections and improve resource management
[ hotfix ] [ runtime ] make executionstrategy . execute ( list < field > ) public
refactor ` createDefaultJavaPackageFinder ` to return an ` ImmutableSet < String > ` instead of an intermediate ` ImmutableSet < String > ` to
replaced OutputWriter with PrintWriter in ScriptExecutable . java to improve output handling by using PrintWriter for better performance
[ hotfix ] [ test ] fix test failure in filesourcetextlinesitcase
added support for DataTable in JRubyStepDefinition to enhance functionality to support DataTable data types in the step definition
updated visibility settings for the author field in SearchImagesRenderer . java and refactored ApacheHttpClientMediaWikiApi . java to utilize custom API
refactor ReadSentimentDataset class to improve code organization to enhance maintainability and readability of the code
improve error message when parse error near a character in a formula
added bind address getter and setter methods to WebSocketClient . java and made WebSocketFuture class private to enhance encapsulation and improve WebSocket connection handling
[ java ] delete archive directory in consensusmoduleharness .
refactor width and height setting logic into a separate ` setSize ` method to improve code readability and maintainability by reducing duplication
updated session fixation attribute comparison to use Boolean . valueOf to improve readability and maintainability of the code
updated the switch statement to use ` edgeOption ` instead of ` params [ 1 ] ` in ` LALogicLinesFragment . java ` to ensure
simonstewart : do n ' t sleep for 2500 ms instead of 2500 ms .
added HttpMethod and HTTPRoute attributes to ClientResponseWrapper and updated related methods to enhance response handling by incorporating HTTP method and route information
patch by jbellis ; review by brandonwilliams for cassandra - 136
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid render intents to ensure correct rendering
add check for ` ` on ' ' permission in contribution question
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
fix findbugs warn in kafkaexactlyoncesink and kafkarecord
added PGConnection to the connection initialization in PooledConnectionImpl . java and implemented a test for PGConnection in BaseDataSourceTest . java to ensure proper
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
changed log level from warn to info for token encryption secret and updated log message format from warn to trace to improve log clarity and provide more informative
mark Hazelcast class as deprecated to indicate that it should no longer be used in favor of an alternative implementation
added methods for creating completed command reports and sending topology update events in various classes to improve command reporting and ensure proper handling of TopologyUpdateEvent during
refactor NamedListCodec to improve iterator handling and introduce END _ OBJ and ITERATOR constants to enhance code clarity and maintainability while ensuring
fix npe in migrationcommit . assigncompletelylostpartitions ( ) when state be null
added import for InclusionRule and set schema inclusion rule in ApiExample . java to ensure that only public schemas are processed in the application
updated the expected value in the assertion from 30.0 to 7.0 in StreamExpressionTest . java to correct the expected value for the mean value
fix ( geot - 5582 ) : fix invalid coordsequences when create a linear ring
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to retrieve base name and dimension count from a ` ConstantPool ` to enhance
added setdebugevaluationoutputfornexteval ( ) method to hssf formulaevaluator , sheetutil , and xssf
test : disable test that fail on java 8
removed unnecessary parameters from ExoPlayerProfile instantiation in LegacyMediaManager . java and updated playback logic in PlaybackController . java to simplify profile initialization
added a return statement to the DynamicStyleBar class to ensure the method exits early to avoid premature execution
added logging statements for database property settings in Utils . java to improve visibility into the repl dump process for better debugging and monitoring
refactor ReactiveAuthorizationManager to improve authorization handling to enhance security and maintainability of authorization processes
updated the condition to check for boolean types in MethodEmitter . java to ensure proper handling of boolean types alongside object types
rename llvmobjectnuller to llvmaddressnuller to avoid confusion .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add a test suite to verify transaction - aware cache proxy
added a method ` calculateBoundingBox ( ) ` to calculate the bounding box of a mesh to improve bounding box calculation based on vertex attributes for better rendering
added a new option ` -- target - hash - function ` to specify the hash function used for computing target hashes to enhance hashing performance by allowing
refactor DefaultConfigurationProperties class for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings to ListViewMultiChartActivity and modified highlight rendering in BarChart to enhance visual clarity and improve the visual appearance of
added a new entry to pgSgPathPlanMap in ClusterPlanRouter . java to store temporary path plans in the grouped plan map
[ hotfix ] [ test ] fix checkstyle violation in infinispanremoteproducerit
added file locking mechanism and modified artifact fetching logic in MavenArtifactFetcher and MavenDependencyResolver to ensure that artifacts are fetched only if they exist
updated the fragment shader in SpriteBatch . java to include a conditional check for GL _ ES to ensure compatibility with OpenGL ES environments by
hbase - 13257 rsgroupinfo # getservers ( ) return an empty set instead of a sortedset in testrsgroupsadmin2
added exception handling and changed log level from warn to debug in TagLibConfiguration . java to improve logging granularity and reduce log verbosity during
updated CustomAnalyzer and TestCustomAnalyzer to utilize a DummyVersionAwareTokenFilterFactory for token filtering to enhance the analyzer ' s functionality and ensure
added a test method to read values from a set package archive info in ShadowPackageManagerTest . java to ensure that the getApplicationInfo method correctly reads values
replaced direct calls to ` MethodUtil . invoke ` with ` MethodUtil . invoke ` across multiple classes to enhance method invocation safety and ensure proper package
added progress update handling to GradleBuildService and Main classes to improve task and project configuration progress tracking
simonstewart : remove unnecessary synchronization in androidwebdriver
refactor initialization failure timeout handling in HikariConfig and improve exception handling in HikariPool to enhance code readability and maintainability by
removed the ` timeout ` parameter from the ` getResult ` method and added an ` error ` method in the ` Net ` interface to simplify the method
changed the ` isNative ` variable from ` boolean ` to ` transient ` and updated its initialization logic to ensure that the ` isNative ` variable
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ruleenablehandler to ruleenablementactionhandler for clarity
fix checkstyle issue in javax . servlet . jsp
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity and debugging for authentication requests
updated method names from ` getBasicSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` and added a new ` sourceOptions `
added null check for the repository model in UsersPanel . java to improve error handling and provide clearer feedback when a repository cannot be found
added support for font extensions . otf and . OTF in the name validation logic to enhance font handling capabilities by allowing additional file types
refactor type comparison logic in AnnotationMatcher . java to improve clarity and efficiency to enhance readability and maintainability of the code
replace " OFF " with " SEVERE " in Grep . java to improve error handling by providing a more appropriate error message
added a conditional check before logging debug messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is disabled
renamed the ` includes ` list to ` excludes ` and updated its initialization logic to improve clarity and ensure consistent handling of empty list scenarios
added a check to move to the default screen on home intent and implemented the onHomeIntent method to improve user experience by ensuring the default screen is
updated maximum bitrate from " 110 " to " 30 " in PMS configuration to improve audio quality for better user experience
removed the ` getOptions ( ) ` method from ` CommandLineParser . java ` to streamline the code by eliminating unnecessary complexity
trim whitespace from the description returned by MutableDatabaseProperty to ensure that only whitespace is removed from the returned description
removed the path from the output filename in XOMParserTest . java to simplify the output filename format for better readability
removed the process ID from the error log message in ProcessBesuNodeRunner . java to simplify the error logging for better readability
added getLoadedMusic ( ) and getLoadedSound ( ) methods to MusicLoader and SoundLoader classes to provide access to the loaded music and sound
removed unused imports from OnBeanCondition . java to improve code clarity and maintainability
added ScreenRecordRule imports and annotations to RequestPinItemTest . java to enable screen recording for debugging purposes
do n ' t set the ` ` pause ' ' button if it be n ' t set
refactor account preference handling by removing the ` PreferenceMultiline ` parameter and introducing a new ` createAddAccountPreference ` method to improve code clarity
do n ' t send ` ` available ' ' presence packet in xmppconnection
refactor StringBuilder initialization to use a predefined initial capacity when utflen is greater than Integer . MAX _ VALUE to ensure proper initialization of StringBuilder based on
updated WebApplicationContextRunner and ReactiveWebApplicationContextRunner to include property values for statsd export to ensure metrics export is disabled during the test execution
refactor InterruptedException handling in the code to improve clarity and maintainability of exception management
refactor ServiceTicket class to improve code readability to enhance maintainability and facilitate future updates
refactor connection logic for HTTP and HTTP in ConnectionCheckOperation . java to improve readability and maintainability of the connection logic
[ hotfix ] [ runtime ] fix type mismatch in argumentarraymessagemapper
added checks for IndexableDSpaceObject type in SolrServiceCommunityCollectionItemFilterPlugin . java and updated test cases in XmlWorkflowFactory
added AuthenticatorActivity to PasscodeManager and set its flags to REORDER _ TO _ FRONT in PasscodeManager to improve user experience
refactor : remove deprecate patternparameterconfigurator from patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` from ` void ` to ` boolean ` and added a null check for the drawable before proceed
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests due to issue LUCENE - 4488
added null check for the root variable in DynamicStyle . java to prevent potential NullPointerExceptions during component collection
alexeibarantsev : add confusionmatrix functionality to the maxenttagger and testsentence
fix bug 52223 - thread . setignore ( true ) do n ' t work if result be ignore
added unit tests for Bluetooth device state management in ShadowBluetoothHeadsetTest . java to ensure correct behavior of connected and disconnected devices in the
corrected spelling of " # autowire " to " # autowired " in PropertyBindingSupportTest . java and PropertyBindingSupport .
added " clone " and " finalize " methods to the objectMethods set and updated property loading logic to enhance functionality by allowing methods to be cloned and
added null checks for counters and improved logging messages in IntegrationTestBigLinkedList . java to enhance error handling and provide clearer feedback on configuration issues
add support for can _ get _ instance _ info command in jdwp . objectreference . objectreference . can _ get _ instance _ info
updated the ` setRegisteredServiceFilter ` method to accept ` serviceId ` instead of ` service ` to ensure that only valid SAML registered services are
added a null check for the activity before running a Runnable in PhotoFragment . java to avoid potential NullPointerException when accessing the UI thread
refactored variable name from ` LOGGER ` to ` logger ` across multiple classes to improve code readability and maintain consistency in naming conventions
added stringType property and its getter / setter methods in DatabaseAdaptor . java , and changed access modifiers from private to protected in JDBCSessionDataStore .
solr - 2387 : fix uimaupdaterequestprocessortest for unstable test
refactor thread name handling by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods to improve code readability and
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
[ drools - 2200 ] dmn - dsl : fix decisiontableimpl . evaluateall ( ) to throw dmnexception
fix a bug where some system do n ' t finish the texture map on mac
added a tooltip to the showCGCP checkbox in RocketPanel . java to enhance user experience by providing a clear tooltip for the checkbox
updated method calls from ` getTypes ( ) . add ( e ) ` to ` addType ( e ) ` in ` EnumFactory ` and
add text and mnemonic to retarget action ( # 499 )
ggb - 148 fix for column name in spreadsheet ( column and range )
changed ` intValue ( ) ` to ` doubleValue ( ) ` for ` BRIGHTNESS _ FACTOR ` in ` BindingConstants . java `
refactor sscmhistoryparser to add context , date , and active to history entry
added a new parameter ` isAdmin ` to the ` createUser ` method and implemented user list methods to enhance user management functionality by allowing users to
added checks for void return types in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and introduced a new test class Test6723447 to
[ dynatrace ] do n ' t print zero count line in log
updated method signatures in Context . java and Request . java for consistency and clarity to improve code readability and maintainability
add a method setcapabilitiesfromspongebuilder that deserializes the capabilities in the MixinItemStack to ensure that the capabilities are properly deserialized
updated the assertion in LifecycleUtilsTest to compare the execution ID directly instead of a hardcoded string to ensure the test verifies the correct execution ID
added checks for different contract types before creating and validating transactions in Wallet . java and updated contract handling in GetContractServlet . java to improve
added new package - info . java files for various packages com . ibm . dtfj . * and com . ibm . lang . management to
refactor the add method in DocumentsWriterDeleteQueue to improve thread safety to ensure thread safety during node addition operations
added duplicate handling for JavaFileObjects in JavadocTool . java and modified test arguments in T7091528 . java to improve file processing efficiency
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to ensure proper handling of IPv
refactor ` LoginServerTokenEndpointFilter ` to accept a list of user parameters and update the loginInfo handling to improve flexibility in user authentication by
added a new constant C _ KEY and updated language condition checks in LanguageFactory and LanguageFactoryTest to ensure proper handling of CPPLanguage instances and
refactored thread executor creation to use a dedicated MoreExecutors class to improve code organization and maintainability by centralizing executor creation logic
added caching headers and validation in LoginService , FormAuthenticator , and ConstraintTest classes to improve response handling and ensure proper caching behavior in the application
added exception message to the error log message in VoiceManager . java to improve error logging by including the exception message
updated HSSFTests to use specific test classes instead of AllHSSFUtilTests and modified test assertions in TestEmptyDocument to improve test coverage
refactor FetchHTTP2Test and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output file before retrieving its absolute path to avoid potential NullPointerExceptions when accessing the output file
added access control priority settings for resource management in Java2DRenderer to enhance security by controlling access control during URI rewriting
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure compatibility and prevent build failures on Windows systems
modified the ` GetInternalThreads ` class to improve CPU time testing logic and added a new method ` testCPUTime ` to enhance CPU time validation
updated conditional checks to include comments in TabsAndIndentsVisitor . java to ensure proper handling of whitespace when comments are present
updated assertions in TestTriggerIntegration to use greater than zero for collectionRate and totalNodeRate , shardRate , and totalReplicaRate to improve test
updated equality checks to be case - insenstive in DatabaseChangeLog , RanChangeSet , RanChangeSet , and NotRanChangeSetFilter classes
added a method to retrieve a string value from a map to provide a default value when a key is not found in the map
updated date formatting in TweetActivity to support different locale settings to ensure consistent time display across different locales for better user experience
added a check for empty connections in StandardProcessSession . java to return an empty list when no connections are available
refactor keyboard focus handling in DetailFragment to improve code readability and maintainability
updated the class path handling in App . java to ensure proper formatting of the canonical path to avoid issues with file paths that contain spaces
[ fix ] coordinatematrix . solve ( ) should synchronize so that it do n ' t create a new matrix
int - 1343 add miss import statement for message class
[ hotfix ] [ runtime ] fix wrong query for taskattempt . duration and taskattempt . numjobscompleted
updated file filter selection logic in AquaFileChooserUI . java to ensure the filter is only updated if it does not already contain the specified file
fix synchronization issue in p2ptransportmanager .
updated the ` toFormulaString ` method in ` ArrayPtg ` to return " TRUE " or " FALSE " instead of a ` toString (
[ hotfix ] [ test ] fix checkstyle violation in pgtokenizertest
refactor variable handling in Java2TypeScriptTranslator to improve clarity and correctness to enhance code readability and maintainability by ensuring correct enclosing elements
added SQL statements to support auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s support for auto - increment
updated byte handling in DataInput to use bitwise operations instead of bitwise operations to ensure correct byte processing and prevent potential issues with negative byte values
[ hotfix ] [ test ] remove unnecessary assertion in imageparsertest
updated the method to retrieve the parent component to ensure the correct parent component is retrieved from its parent
reformatted code for improved readability in multiple Java files to enhance code clarity and maintainability
replace ` NativeCrypto . ENGINE _ finish ( engine ) ` with ` NativeCrypto . ENGINE _ free ( engine ) ` and add `
added iteration event handling methods across multiple classes to improve iteration management and enhance event firing functionality
fix memory leak inFormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent potential memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are cleaned up after tests are executed
modify the URL loading logic to handle " twitter : / / " URLs to improve user experience by allowing direct access to the twitter URL instead of
[ hotfix ] [ test ] wait for host status in deploymentgrouptest .
updated the logging result from false to true in VisibilityController . java to enable the logging of the " listLabels " feature for better debugging
increased the maximum number of auto - retries from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of auto - retries for
camel - 14284 : remove system . out . println in translatorsupporttest and add miss @ override annotation
added support for fraction resource type in the PackageResourceLoader and associated classes to enhance resource loading capabilities for fraction resources in the application
added a confirmation check for file writing in BasicFrame . java to ensure that the file is writable before proceeding with further operations
added null checks for groupId and artifactId in findNewerDependencyVersion method to ensure that dependency versions are correctly retrieved from resolution results
hbase - 24497 throw quotaexceededexception instead of donotretryioexception when table can not be create in a namespace
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class for improved readability to enhance maintainability and facilitate future updates
added a check to ensure f0 is non - negative to prevent potential errors when f0 is less than or equal to 0.0
updated catalog retrieval logic and added null checks for pkColumn and fkColumn in TableRetriever to improve robustness and prevent potential NullPointerExceptions during database
refactor inputbuffer . getencoders ( ) to use synchronizedstack to improve performance .
added SharedPreferences support for handling empty screens in Workspace . java to enhance user experience by allowing users to skip processing when no screens are available
added a warning log message indicating that cucumber - needle is deprecated and recommend using cucumber - cdi2 or cucumber - jakarta - cdi
updated theme handling in ShadowThemeTest , ShadowArscAssetManager , ShadowVMRuntime , ShadowArscAssetManager , ShadowArscAssetManager
updated byte array mismatch messages to use ` Arrays . toString ( ) ` instead of string concatenation to improve clarity in failure messages for better debugging
no effective change - remove system _ versioning _ alter _ history migration
added new prototype getter and setter functions for the " __ proto __ " property in ScriptObject and modified access modifiers in Global and ScriptObject classes
updated the shuffle method in TestFilterDirectoryReader to include a random seed to enhance randomness of the readers during randomness
updated displayName assignment logic in UsersAndGroupsSearchProvider to differentiate between usernames and shareWith to improve clarity of remote documentation based on user context
updated the path handling in CookieRetrievingCookieGenerator to ensure a non - blank path is used to avoid potential NullPointerExceptions when the
fix checkstyle issue in javax / management / jvm / jdi / jvmjdi / jvmjdi / jvmstatmodel . java ( #
updated cache name handling to use ` getTotalBackupCount ( ) ` instead of ` getBackupCount ( ) ` to improve code clarity and enforce imm
updated pageNumber comparison logic in ValidationResult . java to ensure pageNumber is not equal to 0 before proceeding with comparison
added a condition to check if the focused widget is equal to the current instance in the UIDropdown . java file to ensure that the highlighted state is
reformatted method declarations in SoundUtil . java for consistency to improve code readability and maintainability
refactor ApplePackageDescription to streamline the retrieval of AppleCxxPlatform flavor domain to improve code clarity and maintainability by centralizing flavor domain
[ hotfix ] [ table - common ] fix test failure in clickhousestatementimpl
changed method names from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
refactor EnglishPTBTreebankCorrector to improve code organization to enhance maintainability and readability of the code
added a new file ` TestGetLoggerNPE . java ` to test the behavior of ` Logger . global ` and ` LogManager . global `
added a ` data ` field and its getter method in ` PathSharingContext ` , modified ` appCtx ` and ` ScriptedDecideRule
[ gr - 26458 ] fix cast to object [ ] in staticobject . get field .
added regex pattern matching for NEXT VALUE FOR and modified related methods in NextValExpression and ExpressionDeParser to enhance flexibility in handling next value expressions
improve error message when resource bundle access be pre - cached .
refactor BoundedLocalCache to improve handling of pending writes and add a test for clearing pending writes to enhance cache management efficiency and ensure proper removal
added order direction parameter and corresponding getter / setter in QuoineExchange . java and QuoineNewMarginOrderRequest . java to enhance margin
added bound initialization logic in PropertyDescriptor and created a new test class Test7192955 to ensure proper binding and validation of property descriptors in My
replaced ` failsafeWidth ` and ` failsafeHeight ` with a new ` SetDisplayModeCallback ` interface in ` LwjglGraphics
added a check to reset buttonsAwatingRelease to null if it ' s already present in the form to ensure that buttonsAwatingRelease
refactor wrap width calculation in LineCell . java and update StyledTextAreaSkin . java to use Double . MAX _ VALUE instead of Region
updated error message formatting in XSLTErrorResources _ it . java to improve clarity and consistency in error reporting
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper ` to
simonstewart : use string . format ( ) instead of string . concat ( ) to make the code more readable
simplified namespace retrieval in StaxXmlPullParser . java to improve code readability and maintainability
added support for the " NESTED _ JOINS " configuration in multiple test classes to enable the configuration of nested joins based on the configuration
server : allow root admin to be specify by admin only , not normal
added caching functionality for JavacFileManager in SourceFileManager and modified the CompletionTaskProcessor constructor to include a cursor parameter to enhance performance by ensuring
added Hive configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to
updated import statements in KuduIOIT . java and XmlIOTest . java to use MatcherAssert . assertThat instead of Assert . assertThat to simplify
add nullability annotation to metadatarenderer , textrenderer , textrenderer , textrenderer , textrenderer , textrenderer , textrenderer , and textrenderer
updated the calculation of offsetMemSize from Long . SIZE to Long . BYTES and added a new test for symbolFileMapping in LineTcpConnection
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the code and reduce unnecessary console output
removed the Reflection class and its associated methods from the Jooby internal package to simplify the codebase by eliminating unnecessary dependencies
refactor ` ThreadlessExecutor ` to use getter and setter methods for better clarity and encapsulation to improve code readability and maintainability
refactor error handling in DateTimeFormatter and add a new test for DateTimeException in TestDateTimeParsing to improve code clarity and ensure proper handling of null
rename the constant ` ` chunk _ length _ kb ' ' to ` ` chunk _ length _ kb ' ' for clarity .
added a case for WILDCARD in mmm Types . java and created a new class T7034495 . java with multiple generic interfaces and
replaced ` do { while ( key ! = null ) } ` with ` while ( key ! = null ) ` in ` LotsOfEvents
modified conditional checks for Hop . NAVLINK and Hop . SPECULATIVE HOP character in TransclusionDecideRule . java to
[ micronaut ] remove versionutils . getmicronautversion ( ) from micronaut .
added assertions to validate the behavior of the " Print _ Area " formula and its definition in HSSFEvaluationWorkbook to ensure correct handling of the
updated the description formatting logic in MindIconFactory . java to ensure a default description is used when the name starts with a slash to improve clarity and
updated onHomeIntent method to accept a boolean parameter for internal state handling to enhance functionality by allowing the onHomeIntent method to accept a boolean parameter
refactor dependency tree handling in CxxBuckConfig . java to improve clarity and maintainability of dependency management logic
added a new method ` showDetails ` to various activities and updated the ` FileDetailFragment ` to accept an ` activeTab ` parameter to enhance
removed the ` $ ` keyword from function names in multiple files to standardize the terminology and improve code readability
[ flink - 25413 ] [ table - planner - blink ] reduce the number of byte in minimalencoder .
updated SourceBuilder . java to include additional headers and tags in the format strings to enhance the functionality and readability of the code
added a call to ` notifyDataSetChanged ( ) ` in ` FolderSyncActivity . java ` to ensure that the adapter is notified of data changes
added a method to set the default WAL sync mode in ShadowSQLiteConnection to enable dynamic configuration of WAL sync mode for SQLite connections
updated type checking in RemoveJavaDependenciesAdapter and added assertions in Collections . java to ensure correct subtype checking and validate the removal of multiple values in the
[ hotfix ] remove unused method from defaults3crtasyncclient
updated test cases in ParserTest . java to correct length error messages to ensure accurate validation of input stream lengths
add more information to the failure message of hazelcasttestsupport . testcollectionsize
graalcompiler : do n ' t throw bailout in case of internal error .
ggb - 22 : make sure pen image do n ' t have a large width and height
refactor SQLXML class to improve code organization to enhance maintainability and readability of the code
added a ` limit ` parameter to the ` getOrderBook ` method in ` YoBit ` and ` YoBitMarketDataService ` classes to allow
rename gotwrongooomeexception to heapoomeexception in stresshierarchybaseclass
added stream read constraints in StandardDataFlow . java to ensure maximum string length is used for data processing
updated the retrieval of the engines string to use a default value of an empty string to ensure a default value is used when no engines are provided
refactor TimerWheel to use WheelIterator instead of FullIterator for better clarity and consistency to improve code readability and maintainability by standardizing
do n ' t crash if we can not find a bug pattern for a key .
[ hotfix ] [ test ] increase timeout in localchunkprovidertest to 10 second
changed the visibility of the uncomplete checklists menu item from true to false to disable the menu item for better user experience
refactored result map handling in DefaultResultSetHandler and added Contract class with associated methods in Contract . java to improve clarity and maintainability of result
added null check for defaultHome before unregistering the receiver to ensure proper handling of null values and prevent potential NullPointerExceptions
removed the import and annotation for VertxGen in PumpImpl . java to streamline code generation and reduce unnecessary dependencies
removed unnecessary casting of ` FileDisplayActivity ` in ` FileDetailFragment . java ` and ` OCFileListFragment . java ` to
added whitespace trimming to the tokens array in ConfigAttributeEditor . java and implemented a test for trailing and leading spaces in ConfigAttributeEditorTests . java
refactor ClassUsingAnotherAuxiliary and SelfClassWithAux to improve code organization and maintainability
make dynamichub . singlemodulereference public for jdk9 compatibility
updated DatabaseMetaData to conditionally set relKind from " TABLE " or " SYSTEM TABLE " based on the presence of pg _ " to ensure
upgrade gapic - generator - java to 2.16 . 0 and update gax - java to 2.18 . 1 ( # 513 )
updated RQST case value from - 1 to 1 in ThriftHiveMetastore . java and modified exception handling in HiveMetaStore . java
added a new module - info . java file to define module exports and exports for the core components to improve modularity and encapsulation
added logic to handle flushing and writing states in SslConnection . java to ensure proper handling of WAIT _ FOR _ FLUSH and
updated Log4j2LogDelegateFactory to check if the logger is available before creating a LogDelegate and added a NoExceptionInInitializerErrorTest
refactor ExecutionEnvironment and TestHelper to check for server VM presence before executing tests to improve code clarity and ensure tests only run on server VMs
refactor ExecutableFindOperation , MongoOperations , ReactiveMongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
updated PGProperty . java to use " org . postgresql . ssl . LibPQFactory " instead of null to ensure compatibility with Postg
disable testinterprocesssemaphoreedges due to intermittent failure
added sorting functionality for theme keys in EditableResources . java to improve readability and maintainability of the code
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to register the OSV flavor in the terminal factory
added support for additional file extensions in ClassType . java to ensure compatibility with additional file types
replaced HashMap with TreeMap for combinedVectors and updated test methods for consistency to improve performance and maintain insertion order in test cases
added a loop condition to check if the values list size is greater than the names size to ensure that the loop only runs when the values list is
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
refactor ` ShadowTelephonyManager ` and ` ShadowWifiManager ` to instance variables and methods for better encapsulation to improve
added parameters for ` performTemplateBasedResolution ` and ` performDefaultBasedResolution ` in the ` resolveMessage ` method to enhance flexibility in message resolution
updated constructors to use Class < ? extends ClassVisitor > instead of Class . forName for TraceMethodVisitor , TraceClassVisitor , and CheckClass
added a new ` LoggingAuditService ` class for auditing user authentication to enhance user auditing capabilities for better user management
added nullability checks for temperature parameters in TadoZoneStateAdapter and updated temperature setting logic in AirConditioningZoneSettingsBuilder to improve temperature handling
do n ' t generate proxy method for abstract class , since it be n ' t support .
camel - 14263 : camel - http - add support for proxy . host and proxyport in camel - http component
updated the MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to support new encoding features and improvements
added a call to jdkSerialFilter ( ) in the System . java file to utilize the JDK serial filter functionality in the application
add pool size to log message when pooled mode be enable .
removed the parameter ` resetNextPage ` from the ` forceFinishScroller ` method across multiple animation classes to simplify the method signature and improve code read
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to include ` rawRealtimeTableConfig ` and added environment variable application to
added error and error methods to ValidationReport , DisallowValidator , RefValidator , and RefValidator classes , and updated their usages to improve error
updated inline QSB handling in InvariantDeviceProfile . java to use closestProfile . inlineQsb instead of defaultDisplayOption . inlineQ
updated ` createClassPath ` method signatures to include ` throws Exception ` and modified URL decoding to ensure proper handling of special characters in URLs and
updated the given expressions in TransformSteps . java to accept a wildcard pattern instead of a hardcoded value to improve flexibility in parameter matching for method
fix npe in java2d . fillrectangle ( ) when image be null
[ hotfix ] [ test ] make faulttolerancetest timeouts configurable
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in Environments . java to ensure the environment uses the correct Docker image for improved functionality
[ hotfix ] [ test ] use system . gc ( ) in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replace createhardlink ( ) with copyfile ( ) in snapshottaker . java
doc : rename method from ` ` appendeddescription ' ' to ` ` description ' '
[ java ] check device before move to device in functioninfo ( ) .
added a conditional check for ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to ensure proper
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` for ` NotesHelperTest ` , ` GeocodeHelperTest ` , and ` 
[ java ] add gaslimitrule and parentgaslimitrule to commonconfig .
refactor ` setupData ( ) ` method from public to private in ` BaseAssumptionsRunnerTest . java ` to encapsulate data setup
rename the ` autocommit ` variable and related logic from ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class to
removed unnecessary closing of deframer and listener in TripleServerStream . java to improve code readability and prevent potential NullPointerExceptions
[ hotfix ] [ doc ] fix doc url in jobmanageroptions and restartstrategyoptions
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct
refactor Common class to improve code organization to enhance maintainability and readability of the code
refactor Launchable to use a context layer for launching apps to improve code readability and ensure proper resource management during app launching
[ hotfix ] [ stream ] fix typo in streamexecdeduplicate
add a warning log when send kafka message to topic
dataes - 163 - add miss setter method to simpleelasticsearchpersistententity and simpleelasticpersistentproperty
change setcoord ( ) to return true instead of void , and add setundefined ( ) to geopointnp and geosegment3d
added swipe gesture handling logic to the AskGestureEventsListener class to improve user interaction responsiveness and responsiveness during gestures
modified the comparison logic in NGramEstimator to compare values using key - based collections to ensure accurate ordering of values when comparing NGramEstimator instances
updated imports for ScenarioScoped from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align the
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve clarity and functionality of folder icon data handling
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure consistency
c2 : add stress test for loop predicates .
added a handler and modified the equals and hashCode methods in SelectionHighlighter . java to enhance object comparison and hashing functionality for ViewModelInfo instances
added a new ` StringResultConverter ` class and refactored existing ` AsmRuntime ` and ` AsmUtil ` to improve code organization
camel - 19751 : camel - aws2 - camel - aws2 : camel - azure - aws2 - camel - aws2 - camel -
changed the condition from " ! = 0 " to " = = 0 " in the WaitForSingleObject method from " ! = 0 " to "
added null checks for the buffer and adjusted buffer limit settings in the setInBuffer method to ensure proper handling of null buffers and prevent potential NullPointerException
updated the data directory assertion in TestSolrDiscoveryProperties to use File . separator instead of a hardcoded path to ensure compatibility across different operating systems
updated OS detection logic in AutoUpdaterServerProperties . java to correctly handle macOS environments to ensure compatibility with macOS and properly handle macOS
updated Lock class to use a String lock name instead of a File object to improve clarity and consistency in lock management
updated appIcon reference to allApps in Overview . java to improve clarity and functionality by using a more descriptive variable name
updated references from ` Invocable . Invocable ` to ` ClientDatagramEndPoint . this ` in multiple methods to improve code clarity and
updated SQL query in JdbcStepExecutionDao to use " order by STEP _ EXECUTION _ ID " instead of " oreder
updated button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and modified button assignment logic to improve button
added tests for task submission and rejection in TaskRestRepositoriesIT . java to ensure proper handling of submitted and rejected submissions in the workflow
replaced instance variable ` logger ` with a static final variable ` LOGGER ` across multiple classes to improve code readability and maintain consistency in naming conventions
updated the return statement in SsoAccessTokenProvider to use Instant . parse ( expirationTime ) instead of Instant . parse ( expirationTime ) to simplify
do n ' t run geoserver security test on macos
add miss mustache api for alarm suppression request
reformatted conditional checks for defaultCloseOperation in JFrame . java to improve code readability and maintainability
added null check for the database connection before executing the ANALYZE SAMPLE _ SIZE query to avoid potential NullPointerException when accessing the
replaced the ` getSolrMetricsContext ( ) ` method with a call to ` super . initializeMetrics ( parentContext , scope ) ` to ensure
updated the handling of file and folder file list footers in OCFileListFragment . java to improve readability and maintainability of the code
[ hotfix ] [ test ] change default value of hashknownhosts to no
refactor SourceVersion class to improve code organization to enhance maintainability and readability of the code
added a new test class ` ThreadFactoryTest ` to validate the functionality of the ` MyThreadFactory ` class to ensure that the ` MyThread
refactor lock period retrieval in DelegateResourceActuator to use a dedicated method to improve code readability and maintainability by centralizing lock period
added a new instance of TicketModel to the EditTicketPage class to enhance ticket management functionality in the application
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow the option to dimiss apps from
updated constructors in various assertion classes to include selfType parameter across multiple assertion classes to enhance type safety and maintain compatibility with different assertion frameworks
updated MENU _ QUOTE constants and added functionality to handle quote functionality in TweetActivity to improve user experience by allowing users to quote tweets
bug 58225 - jmeterthread : fix race condition in start ( )
rename ` codecpassthrough ` to ` decryptonlydecoder ` in mediacodecaudiorenderer
added a conditional check for the result before offering failure in ServerHTTP2StreamEndPoint . java to ensure that offerFailure is only called when the result
updated German and French error messages in XSLTErrorResources to improve clarity and accuracy of error messages
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during concurrent operations
refactor MockRestAdapter and RestAdapter to use Subscriber instead of Observer to improve type safety and clarity in subscription handling
removed unnecessary else statement in ComponentPresetManager . java to improve code readability and maintainability
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and updated column qualifier handling in multiple classes to enable unique column
minor refactoring to improve code structure and readability
added session validation check in ` Session . java ` and a corresponding test in ` SessionHandlerTest . java ` to ensure that invalid sessions do not
hhh - 11732 remove exceptionhelper . java , it be no longer use
change the key pair generation from 256 to 255 in JceX25519Domain . java to enhance security by using a more secure random number generation
updated the codec in TestBlockPostingsFormat3 to use Lucene41PostingsFormat to ensure compatibility with the Lucene 4.1 postings format
[ hotfix ] [ checkpoint ] log empty header list in checkpointrangeheaders
added support for the " RSA / ECB / OAEPPadding " algorithm in the PKCSObjectIdentifiers to enable support for RSA / ECB
use macos _ aarch64 instead of dodarwin _ aarch64
updated error handling in DebugSourcesResolver to include SecurityException and improved logging to enhance error handling and provide clearer logging for resource resolution issues
removed unnecessary check for UNIX OS in AbstractTest . java to ensure proper handling of UNIX socket transports
change the default value of JERSEY _ ADMIN _ IS _ PRIMARY to true and modify segment file handling in UploadRefreshDeleteIntegrationTest
updated method names from ` newDisposableByteBuffer ` to ` newUnsafeByteBuffer ` across multiple files and added memory management to improve clarity and ensure proper memory
updated the USE _ PIPE _ DOWNLOADER flag from false to true to enable PIPELINE _ DOWNLOADER for improved performance
updated DST _ OFFSET setting in SimpleDateFormat . java and added a new test class Bug7130335 . java to ensure correct dst
refactor variables in AllAppsView . java for clarity and consistency to improve code readability and maintainability
server : fix npe in virtualnetworkappliancemanagerimpl when router be n ' t find
refactor StringBuffer methods for improved performance to enhance performance and maintainability of string manipulation operations
added a rule UID assignment to RuleResource . java to ensure the rule has a unique identifier for better resource management
added a null check for the listener before unsubscribing the registry to avoid potential NullPointerException when the listener is null
added a new property descriptor for pretty printing in JoltTransformJSON to allow users to apply pretty print formatting to the output of the Jolt transform
change access _ table from private to public so that it can be use from other package .
updated error messages in ` DataSourceInitializer ` and ` DataSourceInitializerInvokerTests ` to reflect the absence of resources to improve clarity and accuracy of startup failure
make xmpptransport . run ( ) throw ioexception instead of log . error ( )
refactor event - related classes to improve code organization to enhance maintainability and readability of the codebase
added ` effectiveClusterVersion ` and ` isUpgradeSuspended ` parameters to the ` AmbariManagementControllerImpl ` class to enhance error handling
clarified the copyright year of FindsByCssSelector . java to reflect the correct ownership of the class
removed the declaration of a list of fields from the writer to simplify the code by eliminating unnecessary variable
added default key size settings for encryption and signing in OAuthProperties to ensure proper encryption and signing configurations for OAuth applications
hbase - 26113 hregion . getcolumnfamilycount ( ) should return the number of column family instead of htabledescriptor . getcolumn
replaced the usage of ` AllowedResourceAliasChecker ` with a lambda expression for adding alias checks to improve code readability and reduce boilerplate
refactor ObjectInputStream , ObjectOutputStream , Serializable , and package - info classes to improve code organization and maintainability
[ java ] add reset ( ) method to cluster and clusteredserviceagent to reset idle strategy .
updated the initialization of the Writer in ChunkedWriter . java to ensure the currentChunkID is correctly incremented before writing to the file
added a new abstract class AbstractJobExecutor for job execution handling to provide a base implementation for managing job execution lifecycle events
replaced return statement with break in RecoveryStrategy . java to improve control flow by assigning replayFuture to a variable before breaking the loop
rename ` hugeStaticBase ` to ` staticBase ` for consistency and clarity to improve code readability and maintainability by using a more descript
added a check for the ConsulDiscovery configuration before retrieving service IDs in AbstractConsulClient to ensure that service IDs are only returned when
replaced Float . floatToIntBits ( ) with SecureRandom . nextInt ( ) for hashSalt to enhance security by using a more secure random number generator
add system . out . println to detect permanent bailouts during parsing .
removed the addition of aggTimeBucketMillis from currentStart and baselineStart to streamline the comparison logic by eliminating unnecessary additions
updated the answer method in CallsRealMethods . java to handle abstract methods and added tests in CreatingMocksWithConstructorTest . java to
refactor checkPackageAccess methods to accept Class objects instead of String names to improve type safety and reduce potential errors in package access checks
refactor ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and add error configuration setup methods to improve test reliability and ensure proper
renamed ` dtm ` to ` model ` for consistency and clarity to improve code readability and maintainability by using a more descriptive variable name
added a new request flag ` REQUEST _ HAS _ TIS ` and updated related logic in ` TestProtocol ` and ` LauncherInstrumentation ` to
removed unnecessary try - catch block around the connect action to improve code readability and maintainability
updated the type of ` showRulesResult ` from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget , ShowOptions >
added new classes ` ArrayHelper , ` Asserts , ` , ` NativeRegExp , ` , ` Objects , ` , and ` Objects
added support for the HOME and END commands in the Less . java file to enhance functionality by allowing operations to be marked as both home and end
replaced synchronized block with direct access to connected plots in PlotHandler . java to improve performance by reducing unnecessary synchronization
refactor intent creation and navigation logic in Utilities . java to improve code readability and maintainability by consolidating package installation checks
removed the ' public ' access modifier from the ' Roster ' constructor to enforce encapsulation within the class
added basic constraints to certGen to enhance security by using basic constraints for certificate generation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address failing tests due to incorrect transform offsets
removed conditional checks for multiValued ( ) in TrieDateField . java and TrieField . java to simplify code by directly assigning precisionStep
deleted the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to streamline the codebase by eliminating unused components
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ( ) ` and ` getDeclaredFields ( ) ` methods to
add wait for shutdown of hazelcast process in hzstartit
replaced the ` @ Singleton ` annotation with ` @ ApplicationScoped ` and modified the ` save ` method to use ` @ PostConstruct ` instead of
updated assertions from " assert > = 0 " to " assert > 0 " and changed the condition for newValue from " < = 0 " to "
updated thread name field type from charArrayToString to stringOopToString in OopUtilities . java to ensure compatibility with Java ' s string representation
updated the default RAND _ SEED value from ` System . currentTimeMillis ( ) ` to ` 42 ` in ` Lucene90Hnsw
add strokeobject and fontobject to pgraphicsjava2d . stroke ( ) so that it can be pass to strokeimpl ( )
[ calcite - 4384 ] sqlvalidatorimpl : refactor expanddynamicstar ( sqlidentifier , sqlidentifier ) to reduce duplication
added a method to find interested children in Comment2000 . java to facilitate the retrieval of relevant comments from container records
added import for Messages and set a status code warning in HTTPServer . java to enhance user experience by providing a clear warning message for status codes
move event . getmodifiers ( ) and event . getmodifiersex ( ) to psurfaceaw . getmodifiersex ( ) ,
make amd64countleadingzerosnode and amd64counttrailingzerosnode use cycles3 cycle instead of cycl
camel - 14197 : camel - as2 - fix npe when disabling attachment notification to not set
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
add a clear log button to the error console controller
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of mRecentsAnimationController
updated locale handling and message serialization methods across multiple classes to improve code clarity and maintainability by standardizing locale management
added connectionPooling method implementations to ConcurrentBatchIdentifierTest , SequenceOptimizerIdentifierTest , and AbstractTest classes to enable connection pooling and optimize
[ java ] add support for opera driver in defaultdriversessions .
replaced specific exception handling with a general Exception catch block and added a dialog to notify users when a file download fails to improve user experience by providing feedback
added new products " LIFX Switch " , " LIFX Switch " , " LIFX Switch " , " LIFX Switch " , " LI
updated asynchronous request handling in OverseerCollectionProcessor and modified test cases in CollectionsAPIAsyncDistributedZkTest to improve async functionality and ensure correct
removed redundant code lines in PostgresDatabase and PostgresDatabaseTest classes to improve code readability and maintainability
updated logPanel and linkPanel constructors to use ` objectId ` instead of ` repositoryName ` to ensure the correct repository reference is used for
change the bone rotation unit from Y to XYZ in SkeletonInterBoneWire . java to correct the bone rotation calculation to ensure accurate bone
added a browserDestroy method to stop the Android browser component to ensure proper resource cleanup and prevent potential memory leaks
added a call to waitForActiveCollection for " readApiTestViolations " in AutoScalingHandlerTest . java to ensure that the test waits
modified loop structure and attribute extraction logic in ScreenTerminal . java and modified imports in Tmux . java to improve performance and correctness when processing
updated SoftResetAction to check controller states instead of idle and paused checks to improve the accuracy of soft reset actions based on the current controller ' s
disable on - disc stream cache to speed up texture pack reload
added conditional logic to initialize parentFolder in both Request . java and RequestV2 . java to ensure proper handling of media resources when conditions are met
rename the variable ` isPersistent ` to ` persistent ` in ` NetworkOfferingVO . java ` to improve clarity and consistency in naming conventions
replaced deleteOnExit ( ) with a custom close ( ) method for FileOutputStream to ensure proper resource management and prevent potential memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve robustness by handling specific HTTP client exceptions
log4j2 - 1010 add getoriginal ( ) method to messagefactory2adapter , and fix test
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to
updated regex from " [ 0 - 9 ] { 1 , 2 } " to " [ 0 - 9 ] { 1 , 3 } " to
removed initial and dismiss delay settings in ExtractionModelFrame . java to improve user experience by reducing delay delays
refactor ProjectCommand to use passed - in and passed - in targets set instead of options to improve code clarity and maintainability by reducing redundancy in
added UTC timezone handling in TimeTest . java to ensure correct formatting of time values in tests
refactor MediaSessionConnector class to improve code readability and maintainability
use the endpoint ' s ssl implementation to get the sslsupport
updated string concatenation syntax in GpsLoggingService . java to improve code readability and maintain consistency in formatting
added conditional logic to check if Futures are enabled before adapting future exchange information to ensure that future accounts are only processed when futures are enabled
update admin account management to use instructorcoursestable instead of instructorlist
added a call to setAcceptQueueSize with maxWorkerThreads in ThriftHttpCLIService . java to ensure the connector respects the maximum number of
refactor code to use a constant for the disableWatcher property to improve code readability and maintainability by avoiding repeated method calls
added a check for SSL scheme in the JmsFactory class to determine if the composite scheme is SSL or not
replaced ` UserException . parseError ( e ) ` with ` validationError ( e ) ` in ` DrillSqlWorker . java ` and updated
[ hotfix ] [ runtime ] remove assertion from gcinspector # duration ( )
fix ` nodewithdocumentation . getlinecomment ( ) ` to return an empty ` optional `
updated memory management methods in ReserveMemory . java and WhiteBox . java to improve compatibility detection for macOS and enhance memory management functionality
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
hbase - 13232 hbaseadmin # getprocid ( ) should be protect , add table name to log
camel - 14284 : camel - cxf - do n ' t need to pass a serviceclass parameter to the servicefactorybean
refactor YamlChangeLogSerializer to use a container map for databaseChangeLog to improve the structure and readability of YAML change log output
updated print statements in SchemaPrinter to use newline characters instead of println to improve output formatting for better readability
refactored DebugRoadRegen . java and SchematicHandler . java for improved clarity and functionality to enhance user experience by providing feedback on
replaced ` getContext ( ) ` with ` getActivity ( ) ` for ` nowPlaying ` and ` footer ` in ` HomeFragment . java ` to
added ` @ GenericGenerator ( name = " native " ) ` and ` @ GenericGenerator ( name = " native " ) ` annotations to multiple
removed the country parameter from the getSystemTimeZoneID method and its usage to simplify the method by eliminating unnecessary country handling
added position and remaining parameters to the write method in BZip2Codec . java and modified ByteBuffer initialization in TestBZip2Codec . java to
move console initialization from appw to geogebralogger . startlogger ( )
added a constant VALUE _ TYPE _ EMPTY and modified the type initialization logic in Value . java to improve code clarity and maintainability by centralizing type
use string . equals ( ) instead of = = in groupmanager # isgroup ( ) and # isgroup ( ) .
refactored Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class for improved readability to enhance maintainability and ease of understanding for future developers
replaced instances of ` TargetGraphFactory . newInstance ` with ` TargetGraphFactory . newInstanceExact ` in multiple tests to ensure consistency and correctness in
fix typo : getminrowcompactedsize - > getmaxrowsize
added a Gson adapter for ArtifactVersion and modified ModMetadata fields to be transient to improve serialization and deserialization of ArtifactVersion objects in the metadata collection
modified the way elements are set and deleted based on the presence of elements in the array to improve performance by avoiding unnecessary updates and deletions when the
updated file handling logic in FileUploader to use the parent file ID instead of the local file path to ensure the file ' s parent ID is
added a new file ` jdk7156085 . java ` to implement a parser test for supplementary characters to ensure that supplementary characters are
added unit test base on user forum issue
updated BinanceIntegration and BinanceUsIntegration to include a new depth of 20 in subscription stream assertions to ensure compatibility with the latest Binance
added a ` resetAllocation ( ) ` method to the ` Wrapper ` class and invoked it in ` SimpleParallelizer ` to reset allocation states for
removed import of AssertTree from AmbariManagementControllerTest . java to clean up unused dependencies and improve code clarity
added synchronization to properties handling in mmm Agent . java and created a new AgentCMETest . java file to ensure thread safety when modifying system
refactor ModelUtils class to improve code readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the code
updated width and height calculations in Legend . java to include bounds checking for labels to ensure that width and height calculations are only applied to the last
added test methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` and ` Test
updated the method of retrieving and adding term frequencies from a string to an array to support multiple values instead of a single string to improve performance
replaced the method of obtaining the source path from ruleResolver to a new BuildTargetSourcePath to improve code clarity and maintainability by using a more
fix download command not work if bot versioning be disabled .
changed ` Collection ` to ` List ` and added ` numberOfFiles ` variable in ` MediaFolder ` , ` MediaProvider ` , and ` Folder
removed the " - b " flag from the argument list in AidlStep . java and modified the format in GenAidlTest . java
added unit tests for the Issue79 class and updated ObligationAnalysis to improve test coverage and ensure proper deletion of obligations
added a TODO comment to test this functionality in FakeHttpLayer . java to improve code clarity and facilitate future development
[ hotfix ] [ runtime ] use revokeleadership ( ) instead of handleError ( cause )
[ hotfix ] [ core ] use reactivex . fromarray instead of flowable . tolist ( ) in compositediscoveryclient
replaced instances of ` applySystemConfiguration ` with ` applyQualifiers ` across multiple files to improve clarity and consistency in method naming
[ hotfix ] [ config ] add description for jobmanager option
replaced ` updateNoWidgetsView ` method with ` updateRecyclerViewVisibility ` and updated visibility logic in ` WidgetsFullSheet . java ` to
added class loading for WstxInputFactory and WstxOutputFactory in XmlUtil . java and improved test assertions in MultiVersionXmlParser
refactor test initialization in AuditAliasCommandIntegrationTest to use a private variable for the workspace variable to improve code readability and maintainability by encap
removed debug log statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and improve readability by
camel - cxf : disable test that do n ' t support the document - literal
added exception handling around the update ( ) method in CachedStore . java to improve robustness by logging errors during periodical refresh
refactor ` ChainingAuditPrincipalIdProvider ` to use ` @ RequiredArgsConstructor ` and add a method to add providers to improve code clarity
fix for bug # 48564 - fix a bug in the hssf font , font , and palette . getcolor ( ) method
refactor ZonedDateTimeFormatterBenchmark class for improved readability to enhance maintainability and facilitate future feature additions
added a new method ` shouldBufferUpdate ` to ` DistributedUpdateProcessor ` and created a corresponding test class ` DistributedUpdateProcessorTest `
added a null check for the rocket ' s stage in the SimulationListHandler to ensure that the motor is valid and the rocket has a valid
updated command syntax and modified getItem method to accept a boolean parameter to enhance clarity and control over block replacement behavior
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
made the processor variable final in AndroidInput . java to ensure immutability of the processor variable
added a listener call to notify onWriteFailed in WritableKeyProcessor to ensure proper handling of end - of - stream scenarios during writing
added " CUBE " support to MySQLDatabase . java to enhance compatibility with MySQL database operations
added a try - catch block around the deletion of the snap directory to handle potential IOException during the deletion process
refactor ` ExperimentalRobolectricTestRunner ` and ` ExperimentalRobolectricTestRunnerTest ` to ` MultiApiRobolectricTestRunner
refactor DefaultOkHttpClientFactoryTest to use getter methods for connectTimeoutMillis , readTimeoutMillis , and followRedirects to improve code readability
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the ' os ' variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 221 make sure co - segment and inertia do n ' t have to be set to true
modified the ` jailerMain ` method to include a ` fromCli ` parameter and adjusted exception handling accordingly to allow conditional execution based on CLI input
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added a shared preference for unread pull notifications in TalonPullNotificationService to enhance user experience by providing notification about unread pulls
fix npe in isnull ( ) for object that do n ' t have a pistamp
updated Box2DTest , Pong , and OrthographicCamera classes to improve memory management and streamline camera interactions
updated layout manager and null checks for mCommentsRecyclerView in ViewPostDetailFragment . java to improve code clarity and prevent potential null pointer exceptions
change the log level from trace to warn for background operation aborted to improve log granularity for better troubleshooting
do n ' t add abstract method instance to jimple body builder for abstract method .
ggb - 221 do n ' t run touch event on ie10plus
updated ` getNotificationUsers ` method to include ` deviceId ` as a parameter and modified the retrieval logic in ` CacheManager ` to enhance user
updated the base URL for the CGIAR provider from " droppr . org / v4 _ 5 _ TIFs " to " http
removed property change listeners and updated bottom panel cleanup in MotifFileChooserUI . java , and added a new bug6520101 . java
updated the ` handle ` method in ` HollowDiffUIRouter ` , ` HollowHistoryUI ` , ` HollowHistoryUI ` , and ` Hollow
refactor ` getRuleOptional ` and ` getRuleWithType ` methods to return ` Optional < BuildRule > ` instead of ` fromNullable
hide the transport spinner when the shortcut is being made to improve user experience by hiding the transport spinner when not needed
added null check for attributes _ field in mmm Attr . java and created new classes T7043371 . java and T7073477
updated backPressed method to return a boolean and added checks for back button clicks in multiple fragments to improve user experience by preventing unintended back presses
added LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and implemented getViewIndexDataType method in MetaDataClient to enable dynamic configuration of view index
corrected the spelling of " V " to " v " in the SDRTrunk class to ensure consistency in code formatting
updated the private key path handling in PrivateKeyParserTests to ensure a clean path for private keys
removed the ` newTable ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriterConfig version from LUCENE _ 40 to TEST _ VERSION _ CURRENT in TestAddIndexes . java to ensure compatibility with
hbase - 25813 disable column family check when table do n ' t match any column family ( sergey shelukhin )
[ java ] do n ' t reuse logrecordingchannel in consensusmoduleagent . close ( ) .
replaced direct startActivity calls with startActivitySafely and updated visibility handling for voice button proxy to improve code safety and prevent potential null pointer exceptions
added a condition to return early if the first element of the json node is an empty string to optimize performance by avoiding unnecessary processing
refactor procedure class to improve code organization to enhance maintainability and readability of the code
updated resource bundle handling in Toolkit and Window classes to include default locale and system class loader to ensure consistent resource loading across different environments
[ j2kt ] add kotlin normalization pass for kotlin array creation
added checks for zero count and improved counting logic in PerSegmentSingleValuedFaceting . java to ensure counts are only incremented when there are
updated authorList assignment to use ` Objects . firstNonNull ` instead of ` Optional . fromNullable ` to improve code safety by ensuring authorList
added OSGiTest class and modified module - info . java to implement unit tests for Google Gson annotations and misc imports to ensure compatibility with
refactor controller service enabling logic into a separate method to improve code readability and maintainability by reducing duplication
hbase - 24113 htable . setautoflush ( false ) should set autoflushto ( false ) instead of setautoflush ( false
fix : fix : annotation apply on any element in annotation ( # 3335 )
add simplefeature . hasuserdata ( ) method that return the result of getuserdata ( ) .
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` , ` ExplainTask ` , and ` ExplainTask `
refactor RelyingPartyRegistration class to improve code readability to enhance maintainability and facilitate future updates
added a method to enable logging in the JavaCompiler class to ensure proper logging behavior in the Java compiler
added a new file ` InJavaSourceSet . java ` that implements ` JavaIsoVisitor ` to handle Java source sets to facilitate the retrieval of
updated resource loading in TestGDALParser . java to use a dynamic fits filename instead of a hardcoded path to improve flexibility in resource
added a new method ` createGetter ( Object obj , String attribute ) ` to the ` ReflectionHelper ` class to provide a convenient way to create
removed the conditional check for useExtStorage in DirectUpload . java to simplify the code by eliminating unnecessary complexity
added a new constant ` INDEXER _ NO _ COMMIT ` and modified related logic in ` IndexerMapReduce ` , ` IndexerOutputFormat
api : allow disk offering id or snapshotid to be pass in to createvolume api
updated assertions in BaseTestCellComment to check for non - empty notes instead of empyy notes to ensure that comments in the second column have
added null checks for ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper handling of periods in date calculations
added a new file ` Issue382 . java ` to handle specific exception types and test specific error responses to ensure proper handling of specific exception types
removed the signum method and simplified return statement in PositionUtils . java to simplify code and improve readability by eliminating unnecessary complexity
added a condition to hide the text in AttachmentAdapter if conditions are met to improve user interface responsiveness by hiding the text when needed
fix ( ctimport ) : consistency check for ctimport .
[ java ] add miss lambda for firefoxoptions . getprofile ( ) .
add a bucketpickup to the liquidblock , to make it easy to pick up liquid .
http : / / issues . apache . org / jira / browse / amq - 2902 - fix test failure
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure the application uses the correct
[ java ] use distinctobservation instead of existingobservation in distincterrorlog .
updated system property checks to include annotation - based configurations for Nightly , Weekly , AwaitsFix , BadApple , and Slow to
renamed the method ` createLogger ` to ` getOrCreateLogger ` and updated logger initialization logic to improve clarity and prevent potential null pointer exceptions when creating a
deny access to class . method , field . class , proxy . class in graalcontext . initialize ( )
pdfbox - 4892 : use raster . getdataelements ( ) instead of getrgb ( ) , a suggest by valerybokov
updated the parameter in HiveAbstractReader to use the partition ' s SD instead of the table ' s SD to ensure proper transactional properties
refactor overlay scrolling logic to improve readability and maintainability to enhance code clarity and ensure proper handling of scrolling behavior
hhh - 11745 add batchbuilderimpl and unmodifiablebatchbuilderinitiator batchbuilder implementation
[ hotfix ] [ runtime ] improve shouldnotreachhere ( ) error message
added a new test class ` MockWithStaticStateDemo ` and updated ` PartialMockingRetainsStateTest ` to verify that spying
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing functionality for union and
added null check for ugi before executing action in SecurityUtil . java to ensure robust error handling during action execution
added error code detail to error handling in OpenALMusic . java to improve error reporting by including the error code
camel - 14297 : deprecate the method ` ` reslovestringparameter ( string , class < t > type ) ' ' and
updated precision and scale handling in RexNodeConverter to ensure correct SQL type creation based on precision and scale to improve precision and scale handling for decimal
updated null checks for vendor and device properties in WebAuthnMultifactorDeviceProviderAction . java to use Optional . ofNullable for better null safety
updated the assertion in WalletTestAccount003 to use the current timestamp instead of a hardcoded string to improve the accuracy of the account
updated the type of topStage to RocketComponent and refactored selection logic in BasicFrame and DesignPanel classes to improve code clarity and enhance
added a longRunningTime parameter to the Args class and initialized it with a value from the configuration to allow configuration of the number of long running time
updated the comparison priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW in FindRefComparison . java and
removed the use of ` sun . misc . Service ` and replaced ` Service . providers ` with ` ServiceLoader ` in the ` ScriptEngineManager ` class
[ geot - 5576 ] fix xml unit test for xsdecimalbinding
updated assertion statements in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the test code
added a condition to check if the reference database is equal to the reference database in MissingUniqueConstraintChangeGenerator . java to ensure proper handling of unique
removed the ` addAndroidConstants ` method and added a return statement in ` IjProjectTemplateDataPreparer . java ` to streamline the
replaced assertEquals calls with awaitility in DuplicateCookieTest and SessionRenewTest to improve test reliability by allowing more time for requests to be processed
added new fields to the ImmutableMap in ChromeTraceBuildListener and its test to enhance traceability by providing additional context about the build process
[ gr - 36444 ] fix cache of native library in jdk 11 .
updated log message from " Match limit " to " Match order " in HepPlanner . java to accurately reflect the purpose of the log message
added a new file TheRockMetaDataDemo . java to display exchange metadata to facilitate the retrieval and display of exchange metadata for the TheRockExchange
added a strictfp class for FloatingDecimal , FormattedFloatingDecimal , and FormattedFloatingDecimal classes , and implemented a test for
replaced unparseIdentifier ( columnName , conf ) with columnName in columnNamesBuilder to simplify the code by removing unnecessary identifier parsing
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and updated method signatures in ` BlockStatementTemplateGenerator ` to
added a condition to check if a method is not synthetic in InstantiateStaticClass . java and created a new test method in Bug1282 . java
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the path retrieval
added handling for pending rescues in IkStepDefinition . java to improve stability by managing pending rescues more effectively
changed the ` equals ` and ` hashCode ` methods from ` final ` to ` default ` hashCode ` across multiple type classes to ensure consistent behavior across
added a static method to retrieve the sync level from a string and updated the enum declaration to improve code readability and facilitate easier configuration of sync levels
[ hotfix ] [ test ] fix test failure in controlcommandstest
added a condition to check if the slice state is not RECOVERY in the RecoveryStrategy logic to ensure proper handling of recovery scenarios when
fix ( opencv ) : fix typo in create ( ) call
added a ` sdkPath ` field and updated ` makeProcessExecutorParams ` method to accept an ` ExecutionContext ` parameter to enhance the process execution
[ hotfix ] [ runtime ] remove unused lock from transientblobcleanuptask
server : fix typo in log message for static nat rule creation
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion of row type in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of row type conversions
refactor BetterBlockPos class for improved block positioning to enhance code readability and maintainability
updated the method to retrieve the servlet context using the class loader to ensure the proxy is retrieved with the correct class context
refactor version handling to use static methods for nightly build and show nightly warnings to improve code readability and maintainability by centralizing version
added OracleDatabase import and modified statement handling logic in LoggingExecutor and JdbcExecutor to ensure trailing newline characters are removed correctly to enhance compatibility with Oracle
added a new boolean constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to enable handling of
[ java ] use custom port to get the jolokia version .
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and SLIDER _ MARGIN
added multifactor authentication provider bypass configuration to DuoSecurityMultifactorProviderBypassConfiguration . java to enhance security by integrating multifactor authentication
reformatted method declarations in MaxRectsPacker . java for consistency to improve code readability and maintainability
[ drools - 107 ] fix checkstyle violation in drools - core
added methods to set and get the help page in PMS , and refactored the HelpTab and LooksFrame classes to utilize a
added two new files , GeocodeProviderFactory . java and Constants . java , to define geocode provider factories and constants for Omni Notes beta to
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to ensure consistent usage of the correct CharArraySet class
refactor exception handling in OptionTest and ResourceManagerImplTest to use JUnit ' s ExpectedException instead of JUnit ' s ExpectedException to improve
[ python ] do n ' t delete non - entry point object in memorycommand . deleteobject ( )
updated conditions in SegmentsInfoRequestHandler . java and added new documents in CollectionsAPISolrJTest . java to improve handling of document fields and enhance
updated the calculation of predictive app columns based on device type to improve accuracy of app column prediction based on device type
added a static method ` hasScalarSubqueryInput ` to ` JoinUtils ` for checking scalar subqueries to improve code readability and maintainability
add blockbuildcraft to make it easy to remove item from inventory .
updated gravity assignments and layout parameters in DeviceProfile . java to ensure proper alignment and layout configuration for the search bar
changed the method call from ` run ( ) ` to ` start ( ) ` in ` YahooSession . java ` to ensure the session starts correctly
added null assignment for ms in HiveMetaStore and modified client shutdown logic in HiveMetaStoreClient to improve resource management and clarify client shutdown behavior
updated the getDisplayScript method to accept a DISPLAY locale parameter and added a test for bug 7079486 to ensure correct handling of display scripts
updated references from ` BASE _ URL _ PROP ` to ` CORE _ NAME _ PROP ` in ` getStr ( ) ` method calls to
replaced ThreadLocalRandom with Random for random number generation in StoreDirectTest . java to improve performance and simplify random number generation
added a check for launcher readiness before backup operations in LauncherBackupHelper . java to ensure backup operations are only performed when the launcher is ready
enhanced error messages in Cell . java to include additional context to improve debugging by providing more context in exception messages
added resilience4j unit test base on user forum issue
rename ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in the codebase
refactor ShadowProcess class for improved performance to enhance performance and maintainability of the code
updated import statements and modified file handling in FileMessageHistoryTest . java to ensure compatibility with JUnit ' s temporary folder and improve assertion clarity
added multiple loggers to the Grasscutter class to set the logging level to debug for various project components
lucene - 1076 : make highlightcnstscrngquery static to improve performance
updated the state checks in the Launcher class and added a method to retrieve the current workspace state to improve state management and ensure proper handling of workspace
refactor multiple array assertion classes to improve consistency and maintainability to enhance code readability and maintainability across array assertion classes
added a conditional check for cacheable before notifying new templates to ensure templates are only notified when cacheable is enabled
added SCOPE _ SOLR _ CORE constant and refactored DataImportHandler and DataImportHandler to support core scope session management to enhance
updated the primary key column name from " measurement " to " measurement _ pkey " in DatabaseMetaDataTest . java to ensure the database schema correctly
rename -- permissions - config - path to -- permissions - config - file for consistency
refactored session handling logic in HttpSessionContextIntegrationFilter . java to improve code readability and maintainability
added a new file ` TestIfWithDeadRegion . java ` that implements a function that retrieves a string from a supplier to facilitate testing of
fix typo : english usd - > english usd
refactor SnowflakeIdGeneratorTest to enable HighResolutionTimer and disable concurrent access tests to improve test reliability and ensure proper resource management during concurrent
added staticUi setting to AppSettings and modified hideToastBar logic in MainFragment to conditionally hide the toast bar based on user settings to
replaced the implementation of the Privilege class with a lambda expression and a try - finally block to ensure proper resource management and avoid potential memory leaks
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` to improve parameter
updated JOptionPane messages to include localized messages to improve user experience by providing clearer error feedback and localization support
added unit tests for MIME type detection for Excel files in TestMimeTypes . java to ensure correct handling of Excel files in different formats
added debug logging statements and updated method signatures for better clarity in Runner , FeaturePathFeatureSupplier , and FixJava classes to improve debugging capabilities and
camel - eip : fix xml output in camel - eip and camel - eip - enricher
add a synchronized method to remove version info and add a test for it
added debug logging statements and refactored audio capture device handling in DeviceConfiguration . java to improve debugging visibility and ensure proper handling of capture devices
added WebSocketConfig to manage maximum frame payload size and updated reactorNettyWebSocketClient constructor to enhance WebSocket configuration flexibility by allowing configurable maximum frame payload size
[ java ] cachevalidationlistener now implement isuitelistener . onstart and iinvokedmethodlistener . oncleanup to allow cachevalidationlistener to
added a check for empty content length before adding the content length in MoreIndexingFilter to ensure that the content length is only added when it is
[ hotfix ] [ solver ] fix synchronization issue in solverjob
[ iotdb - 5241 ] fix concurrent insert of timeseries ( # 6941 )
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check if a boolean result is returned
changed method visibility from public to protected in multiple classes to restrict access to these methods for better encapsulation
server : do n ' t try to terminate a user account if it be in reserved state .
updated HttpParser to set _ valueString to an empty string instead of conditional logic to simplify the code and improve readability by eliminating unnecessary conditional checks
refactor initialization logic in J9VMInternals and Thread classes to streamline initialization process to improve code readability and maintainability by reducing redundancy
added methods to create and manage external storage directories in ShadowEnvironment . java and created EnvironmentTest . java with corresponding unit tests in EnvironmentTest . java
[ jbrules - 2342 ] add test case for mvel 2 . 0 . add test case
reformatted code for consistency and readability in LoggingConfig . java to improve code readability and maintainability
added exception message to the log statement in ActionNode . java to improve debugging by providing more context about the exception cause
remove tel : from tonumber if it contain ` ` tel : ' '
refactor visibility logic in FileListListAdapter to check if the file is a folder before showing shared file view to improve code readability and maintain
deprecate the deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and update TestTxnCommands3 . java
updated ExecuteStatementOperation and Operation classes to include a confOverlay parameter and modified related methods to improve configuration management and logging clarity during operation execution
updated method calls and imports in BTCMarketsStreamingAdapters , BTCMarketsStreamingService , and BTCMarketsWebSocketSubscription
[ hotfix ] [ test ] fix typo in ogrdatastoretest
removed the method ` onErrorInStep ` from ` StepListenerSupport ` to simplify error handling in the step execution process
refactor Wallet class to improve code readability to enhance maintainability and facilitate future feature additions
camel - 14284 : camel - netty - http should use http : / / port instead of localhost
replace System . out . println with Log . info and System . err . printlns in TestNonBlockingAPI . java to improve logging consistency and
added a check to return false if the row index exceeds the size of the connection list to prevent potential ArrayIndexOutOfBoundsException when accessing the connection list
[ java ] add a new rule to detect method with the same name as an enclosing class .
added a new ` ExtendedPlatformComponent ` class and modified ` ManagementFactory ` to utilize it for retrieving JMX objects to enhance the management capabilities
added escape sequences to the SQL string in BasicQueryTest . java to ensure proper handling of single quotes in SQL queries
updated resource paths in BleutradeDtoTest , BleutradeDtoTestSupport , and BleutradeExtendedDtoTest classes to include the correct
refactor TextEscapeUtils class for improved readability to enhance maintainability and facilitate future updates
added a filter parameter to the AbstractSpatialFieldType class and updated the FilteredQuery instantiation in TestSolr4Spatial to enhance query flexibility based on local
added a call to ` mainActivity . handler . post ( updateResultsEmailSent ) ` in ` AutoEmailHelper . java ` to improve user
replaced ArrayList with HashSet for storing inlinks and added iterator methods to improve performance and ensure proper iteration over elements
[ tradfri ] remove all result from tradfri server when stop scan
updated the ` testFilterForPartition ` method to accept a boolean parameter for filtering behavior to ensure correct behavior when filtering is at the server side
added the new ' Abandoned ' status to the TicketModel and updated its references in TicketBasePage and TicketsPage
no effective change - remove unnecessary assignment of columnaliasprefix
updated type parameters from Text to BytesWritable in LlapRowRecordReader , LlapRowInputFormat , and LlapRowInputFormat classes to improve data
terasology : warn on non - native jvms on a 64 - bit platform .
pdfcopy : do n ' t copy the parent of a page if it ' s a page
added a new option DAEMON to the OptionEnum and implemented daemon mode functionality in TerminalClient to enhance user experience by providing a web pend
added a new file ` FlushIndexTask . java ` to implement a performance task for flushing the next buffer in the index writer to enable efficient
patch by jbellis ; review by brandonwilliams for cassandra - 118
[ java ] check for subtitles instead of texts _ nosort
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket that initializes an IPv6 loopback address to test IPv6 availability and
updated grid size points in GridSizeMigrationTask . java from 2 , 3 , 4 , and 6 to 3 , 4 , 5 , and 6
replaced calls to ` getName ( ) ` with direct access to ` ci . name ` in ` SerializerPojo . java ` to improve code clarity and
added read - only support and validation for transaction and mutation operations in the Context class to ensure that operations are only performed in read - only contexts
refactor LookAndFeelCommand class to improve code organization to enhance maintainability and readability of the code
updated the calculation of lastRunEnd and adjusted the condition for childOffsets in BlockBoxing . java to ensure correct handling of run boundaries and
updated exception assertion in GracefulStopTest to include EOFException , EOFException , and EOFException to improve test reliability by ensuring all exception types are
refactor connection removal and locking mechanisms in NetJavaImpl . java to improve code readability and performance by eliminating unnecessary locking
[ hotfix ] [ network ] fix typo in networkparameters javadoc
updated account asset optimization logic in DynamicPropertiesStore . java to ensure proper configuration of account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to define a garbage collection policy that disables garbage
added error handling for valid contract proto retrieval in TransactionCapsule . java to improve robustness of transaction validation and provide clearer error reporting
pmd : remove the strict exceptiontypechecking rule that be no longer use
updated resource path and logging messages in HelpContent . java to improve localization support and provide clearer error messaging
added a new file ` ProcessorInfo . java ` to manage CPU processor availability and CPU masking to provide a mechanism for determining the number of processors
add - html option to printbugreporter to generate html output
( chore ) camel - logback : make logbackxmllocation final
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve handling of service component recovery events to enhance the system ' s ability to manage cluster
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to improve handler creation logic and enhance test coverage for
refactor the dependency type assignment logic in RustCompileUtils . java to use a switch statement to improve code readability and maintainability by consol
added a queryParams parameter to the oauth2LoginLinks method and modified its implementation to include error handling to enhance the oauth2LoginLinks method to support
hbase - 13257 halfstorefilereader . getfirstkey ( ) should always seek to the first kv in the file instead of splitkey
hhh - 11745 deprecate when ( ) . equivalent ( ) and use timing . always ( ) . always ( )
add a profiler config for layer norm validation ( # 11818 )
refactor ` showShareFile ` method calls to use ` getFileOperationsHelper ( ) . showShareFile ( ) ` across multiple activities to improve
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of ` LiquibaseUpdate ` with relative clob files
convert ` proxyType ` to uppercase in ` setProxyType ` method to ensure consistent handling of proxy types regardless of case
add minecraft . getdungeonlootTries ( ) method to get version of minecraft . minecraft . forge . minecraft . mod _ Minecraft
refactor JdbcDatabaseSnapshot to improve column filtering logic and handle case sensitivity to enhance data retrieval efficiency and ensure accurate filtering based on database case sensitivity
added a new Container instance with a border image to the CSSBorderTest class to enhance the visual appearance of components in the UI
added conditional configuration to the RetryAutoConfiguration and refactored RetryLoadBalancerInterceptor to use RetryableStatusCodeException to improve flexibility in handling retryable status
updated constructor parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure proper rendering behavior when the layout is
updated the construction of ` parentTaskName ` to use ` System . currentTimeMillis ( ) ` instead of ` System . nanoTime ( ) ` to
added logging preconditions and error handling for AddServiceRequest parsing to improve error handling and provide clearer error messages when parsing input
refactor conditional logic in IndexDatabase . java to improve clarity to enhance readability and maintainability of the code
fix for ggbround ( x ) in ca ( x [ 0 ] , x [ 1 ] , 0 , 2 )
refactor AnonCipherWithWantClientAuth class for improved readability to enhance maintainability and facilitate future updates
added @ Deprecated annotations to multiple methods in ProducerTemplate . java to indicate that these methods are outdated and should no longer be used
refactor JLayer class to improve code readability to enhance maintainability and facilitate future updates
fix flaky test due to time issue in evictiontest . testopeneventually
refactor password encoding methods in Md5PasswordEncoder to use a unified salt variable to improve code clarity and maintainability by using a more descript
replaced local variable ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to improve code readability and
refactor Response class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] use max _ value instead of min _ value in sstablemetadata
set the preferred size of the callparticipantpanel so that it do n ' t overlap with the other call .
added null and empty checks for reply handles in TweetActivity , TimeLineCursorAdapter , and TimelineArrayAdapter to ensure reply handling is only
updated the ` HitbtcBalance ` class to use ` java . util . Objects ` instead of ` org . apache . commons . lang
fix ( sql ) : fix ` ` order by ' ' clause with in clause
updated return statement in RetriesExhaustedWithDetailsException . java to use addrs . toString ( ) instead of a single string to improve
refactor file opening logic in EditGcodeFile . java to use OpenCookie instead of DataObject to improve code readability and maintainability by
updated import statements from ` org . apache . http ` to ` org . apache . hc . client5 ` in ` JsonToGrpcApplicationTests
updated energy calculations in PipePowerWood . java to use the current energy stored instead of the requested energy to ensure energy is accurately updated based on
added a check to delete the temporary output file if it exists to ensure that the temporary file is deleted if it exists to prevent memory leaks
changed the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for retrieving trades
added time limit checks in ReplayProcessor and ReplaySubject classes and corresponding unit tests to ensure correct behavior of replay processing and state value retrieval based
updated the expectedCitation string in CitationStyleGeneratorTest . java to ensure consistency in formatting across test cases
add hddformat field to media table , and set hdformat from result set .
ggb - 205 : show only definition for algebraitem in exam mode
added null check for the component in SIPCommTextFieldUI to prevent potential NullPointerException when accessing the component
added caching configuration for meta scans in MetaReader . java to improve performance by reducing unnecessary scans when startrow is null or scanRoot is
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor StrictMath class to improve code organization to enhance maintainability and readability of mathematical operations
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable transient taskbar functionality in the debugging
refactor AccessExecution , AccessExecutionVertex , ArchivedExecution , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a condition to set density to 3 if scale equals 3 in IOSGraphics . java to ensure density is set correctly based on the scale value
rename ` optional ` to ` vararg ` in the ` Parameter ` class to clarify the purpose of the boolean variable in the builder
added an exception parameter to the logging statement in RegionStateStore . java to improve error handling by providing more context in the log output
[ hotfix ] [ test ] fix test failure in testclusterupgradeutils
updated warning message in AsyncHttpConnection and refactored AsyncContextTest class to improve clarity and structure to enhance code readability and maintainability while
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to control the visibility of the arrow in the search functionality
added a break statement in Database . java and removed the testSetMode method from TestRowLocks . java to ensure proper handling of read committed
skip linux / amd64 test on linux only
added checks for Integer and IntValue types in Scalars . java to improve type handling and ensure proper conversion of integer and string values
update error handling in CreateTableStatement to check for empty PRIMARY KEY and multiple PRIMARY KEYs to improve clarity and specificity of error messages
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , and Launcher classes to improve UI responsiveness
improve error message when no isolate to query for flutter view .
added methods to configure content type , header , cache control , http strictness , and frame options in HeadersConfigurer . java to improve code organization and
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and facilitate future modifications
[ grid ] rename smoketest to distributedcdptest to make it easy to run test
[ hotfix ] [ test ] fix test failure in eventsourcingrepositorytest
added support for prebuilt libraries in Python binary and test cases to ensure proper handling of prebuilt libraries in the build process
added client authentication handling in NetServerOptionsConverter and refactored client authentication logic in NetServerOptions to improve code clarity and ensure consistent client authentication
updated REPL directory paths to include the system name in directory paths to ensure consistency in directory structure across different environments
refactor task view handling in RecentsView . java to use primary and secondary task views to improve clarity and maintainability of task view management
[ camel - amqp ] add timeout to camel - amqp transformer test
removed the clearAll ( ) method from DataTableTopComponent . java to streamline code by eliminating unnecessary method calls
[ java ] rename variable ` ` controller ' ' to ` ` flowcontroller ' ' for clarity .
[ flink - 18314 ] [ runtime ] fix operatortreegenerator to set exchange sum num when consume all child pipeline builder with exchange
added ClassLoaderHandler to module - info . java to utilize ClassLoaderHandler for class loading functionality
bugfix : add setsolution ( ) and solve ( ) method to solutionbusiness and solve ( ) to solve the best solution
added JsonIgnore annotation to ApplicationSettings class to exclude sensitive data from JSON serialization
changed the condition from ` throwable = = null ` to ` throwable ! = null ` in ` PlotListener . java ` to ensure proper handling of
refactor query info retrieval to use a variable for clarity to improve code readability and maintainability
fix auto workbench not be able to merge if there be no recipe
fix gl200 text protocol decoder ( fix # 118 )
rename timeColumnName to incomingTimeColumnName and update related references in AvroRecordToPinotRowGenerator . java to improve clarity and consistency in
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token00
add initializable interface to allow customization of the container .
add sample for longtasktimer ( fixes # 118 )
changed the data type of ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and modified interval calculations to
add warn for unwrapped fragment expression in thymeleaf template
changed the type of the _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when accessing shared resources
fix for http : / / issues . apache . org / jira / browse / amq - 4892 - fix amq - 4892
added new color constants for LIGHT , SECONDARY , and DARK , and updated the extractInto method to return fallback color values to
added data folder access check in SketchBuilder . java to ensure that only accessible data folders are included in src folder paths
modified the ` appendContent ` method to accept a ` includeTitle ` parameter and updated related logic to enhance functionality by allowing the inclusion of title in
removed initialization of sessionRegistry from ConcurrentSessionControllerImpl to simplify session management by eliminating unnecessary instantiation
added logging for reconnection completion and error handling in NettyStreamingService . java to improve debugging by providing clearer error messages during connection reconnection
use internal javassistproxyfactory instead of cglibproxyfactory ( # 224 )
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management efficiency by using a more efficient hash
refactor exception message handling in SocketExceptions . java and ExceptionText . java to improve clarity and functionality to enhance error reporting by including the destination
added a check to determine if the view directory is under the repository directory to prevent errors when attempting to access a view directory that is under a repository
remove old tab header area code that be no longer use .
added multiple " - XX : + UseCompressedOops " and " - XX : + UseCompressedClassPointers " flags to multiple
added a check for update log states in PeerSync . java to ensure the update log is in the correct state before proceeding
deleted the ConnectionHook . java file to the functionality was no longer needed in the project
updated the waitForReplicasInSync handling across multiple test classes to ensure consistent behavior when replicas are not in sync with the leader to improve test
camel - 14284 : fixed checkstyle issue in camel - swagger - api
[ apex ] update apex version to be compatible with the current version
pdfbox - 4071 : fix javadoc warning and javadoc error
refactor AggregateEngine to use a singleton instance for thread execution to improve thread management and maintainability by centralizing the thread pool management
updated WebSocketAsyncConnection to accept a ByteBufferPool as a parameter to improve buffer management by allowing dynamic buffer allocation
added scrollToPositionWithOffset functionality to the layout manager for thumbnails to ensure the thumbnails are scrolled to the correct position based on the index
fix ( sql ) : fix sample by on timestamp over overridden by other column alias
refactor animation handling in LauncherAnimUtils and add a transition animation in LauncherStateTransitionAnimation to improve animation responsiveness during transitions
added a check to disable the default user agent in HttpClient based on configuration to ensure proper handling of user agent configuration during HTTP requests
added pubsubhubbub functionality to the FeedRefreshUpdater and ApplicationSettings classes to conditionally handle pubsub updates based on the pubsubhubbub setting
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method
updated the ` isAnonymousOrLocalClass ` method to ` isAnonymousOrLocalOrSyntheticClass ` and modified the corresponding test in ` StubJar
add a dspacewebapp class that do n ' t support rest
added a method to retrieve the table alias containing a column name in CalcitePlanner . java and implemented a method in RowResolver . java to
added " Trigger " to the trigger identity in JobGenerator . java to clarify the purpose of the trigger key in the generated trigger
updated logging messages in Wallet . java to improve clarity and consistency to enhance the clarity of transaction broadcast failures and provide more informative logging
fix basicmaptest failure due to time issue
updated the configuration of rcfileOptimizedWriterEnabled and rcfileWriterValidate in HiveClientConfig . java and TestHiveClientConfig . java to ensure
added a TlsClientCertPolicy enum and refactored client certificate handling in GitBlitServer to improve code readability and maintainability by
replaced a Thread with a debug log statement in KrakenFuturesStreamingService . java to simplify subscription handling and improve log clarity
added headers and subProtocols to the ProxyWebSocketHandler class to enhance WebSocket handling by allowing specification of WebSocket protocols
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve visibility into fetch request details during debugging
updated label formatting in HolidayEventFormatter . java to improve clarity and consistency to enhance readability and maintainability of the code
renamed ` innerClassFieldMadeFinal ` to ` ignoreInnerClass ` and modified the constructor condition in ` FinalizePrivateFields ` to improve
refactor UnexpectedJobExecutionException class to improve error handling to enhance clarity and maintainability of the code
deleted the module - info . java . file and modified buttonShouldBeOpaque logic in AquaLookAndFeel . java and AquaUtils . java to
updated references from ` maxFreq ` to ` maxCost ` in ` DrillSidewaysQuery ` and ` DrillSidewaysScore
added a new class registration for GeoDegeneratePath in StandardObjects . java to enable functionality for geometric path representation in the application
removed the ` preFill ` parameter from constructors across multiple pool classes to simplify the constructor and eliminate unnecessary complexity
added a condition to update the state of the taskbar stash controller based on whether the app is not in the launcher to ensure the taskbar state
added null check for default style in CascadeDeleteVisitor . java to avoid potential NullPointerException when checking styles
refactor GuiUtil methods for better size management and add a new setSize method to improve code readability and maintainability by encapsulating size
refactor icon assignment logic in FileTreeViewHolder . java to use TreeFileExtension for better clarity to improve code readability and maintainability by consolid
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo for qualifier checks to improve readability and maintainability of the test code
added synchronization around the iteration over suite results to ensure thread safety when accessing shared resources
add nativeprobabilityfunctionqueries to test native probability function
added a call to ShutdownThread . deregister ( this ) in ClientContainer . java to deregister the shutdown thread to ensure proper resource management and prevent
added a method to drop temporary tables after using Sybase in SybaseASE15Dialect to ensure that temporary tables are not dropped after use
simonstewart : do n ' t use color . fromrgba ( ) in the htmlunitdriver
refactor SolrCore , XMLWriter , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class for improved clarity to enhance maintainability and readability of the code
updated hex string formatting in VirtualAllocCommitUncommitRecommit . java to provide clearer representation of reserved memory for testing purposes
do n ' t refresh source info when there be no group
refactor equality check in MultimapSubject to use a boolean variable for clarity to ensure the method adheres to the contract of Multimap . equals
updated the value of ` fetchPropertyValue ` from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity . java `
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated TreeMap initialization to use putAll instead of putAll to simplify code and improve readability by eliminating unnecessary method calls
added a new constant NORMAL _ 4F and modified vertex format handling in VertexLighterFlat . java to improve code clarity and maintainability by
updated span handling in TracingClientInterceptor , TracingServerInterceptor , and ITTracingServerInterceptor to ensure spans are properly closed to prevent resource
updated time zone handling in ScheduledTrigger . java and removed BadApple annotation in ScheduledTriggerTest . java to improve code clarity and maintainability by
added AsyncBucket and InMemoryExtension classes , and updated method signatures in ConfigurationBuilder , Bucket , and Extension classes to improve asynchronous handling and introduce InMemoryExtension
updated the class directory handling in ` resexhausted003 . java ` to check for a valid test class path to improve error reporting for
removed unnecessary whitespace in AbstractConnector . java to improve code readability and maintainability
refactor OngoingStubbing class for improved readability to enhance maintainability and facilitate future updates
added a ` WebServer ` parameter and modified the ` getValidWebServerPort ` method to accept an ` Optional < WebServer > ` parameter
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil . java ` and added a static import in ` SolrTestCaseJ4 . java
added a check to clear the allowlist if it is empty in ParametersInterceptor . java to ensure thread allowlist is cleared before use
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity by using a more
[ drools - 1010 ] do n ' t try to find gap in dmndtanalyser if the hit policy be colr ( #
added a new test method ` testSlidingWindowsCombine ` in ` CombineTest . java ` to validate the functionality of sliding windows combining to ensure correct
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` to ensure apps are only bound
added a check for the " Running " attribute in the ManagedFileWatcherReloadStrategyTest class to ensure that the test verifies that the " Running "
updated the formatting of the Solution class and added a check for beautiful triplets to improve code readability and ensure accurate matching of beautiful triplets
refactor AquaMenuBarUI to use AccessController for determining the useScreenMenuBar to improve security by ensuring the use of the menu bar is only
fix fall distance not be reset when fall to 0 .
refactor query handling in SimpleJpaRepository to improve clarity and functionality to enhance readability and maintainability of the query logic
added new block arguments for timestamp , parent hash , nonce , and number in BlockUtil . java to enhance block validation by including additional parameters for genes
graal : remove loopsafepointinsertionphase . genloopsafepoints , use pollingpagefar instead .
hbase - 26105 fix npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs when there be no zk node
changed class and method visibility from package - private to public in ArtifactResolver . java to allow access to these methods from other packages
fix memory leak in chunkprocessingpipeline when reactor be terminate
added validation to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions when maxBufferedDocs is less than 1
added state management and logging functionality in LoginActivity to manage user login state during configuration changes
pump . sort ( ) should throw nullpointerexception if valueextractor return null
added loadbalancer creation and updated access modifiers in HttpShardHandlerFactory , LBHttpSolrServer , and ServerWrapper classes to enhance encap
updated the order in BaseAuthenticationServiceSelectionStrategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added
added Jetty server configuration and handler management in TestJNDI . java to enhance server functionality and improve handler management
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve readability and maintainability of the code
fix filestreamchannel . isclosed ( ) to return true when the event loop be n ' t a nioeventloop
updated the logic for setting the number of nulls in StatsUtils . java to ensure that the number of nulls does not exceed the number of
camel - 14263 : camel - jbang - export should not use kamelet in camel - jbang
updated OSMJob to utilize OpenID ' s AuthorizationState and OpenStreetMapManager for token management to enhance security and improve error handling during
refactor test code to make it easy to run test
added clientAuth configuration to IoTDBRestServiceConfig and updated RestService to conditionally set SSL context based on it to enhance security by allowing
removed the variable ` mocksToBeInjected ` from ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParent
updated BloomFilter64bit and BloomUriUniqFilter classes to implement InitializingBean and added expectedInserts and hashCount methods to enhance functionality
updated the ` getCursorAdapter ` parameter from ` false ` to ` true ` in ` HomeFragment . java ` and added preference refresh in `
updated intermediate header height ratio from 1f to 75f in ProfilePager . java to improve UI responsiveness and visual consistency
replaced ` @ SuppressWarnings ( " null " ) ` with ` RecompilationEvent ` and added a new ` RecompilationEvent
added support for host system pre - installed configuration in multiple classes to enable better management of system hosts during execution
updated the ` include ` method to include a ` logEveryUnknownFileFormat ` parameter and added a new test class ` UnknownChangeLogFormatLogging
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 479 : fix
added properties and validation checks for entities and scores in StaticPipeline . java to ensure proper handling of entities and scores in the pipeline configuration
refactor filename handling and enhance WhoopsModule configuration to improve code readability and maintainability while ensuring correct file path resolution
[ geos - 7104 ] do n ' t throw exception if a datastore can not be find in the workspace
refactor assertions in mmm Assert . java and ppp Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` to enhance test coverage
fixed unit test which fail on slow ci server
fix ( iotdb - client ) : remove unused variable in writealignedwithtsrecord and writealignedwithtablet
updated memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure accurate memory usage calculations
updated log4j jar file name from log4j - log4j12 to slf4j - reload4j to ensure compatibility with the
[ hotfix ] [ test ] wait for offline configuration error to be resolve
changed the package structure of several activities from ` com . itsaky . androidide ` to ` com . itsaky . androidide .
[ drools - 1276 ] disable kiecontainersolverfactorytest until drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ avroSchema ` and ` GitHubAPICaller ` to enhance schema reading functionality
refactor AbstractExpressionPart class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix typo in taskslot javadoc
replaced ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket . java ` and related tests
added error handling for lock release in MoveTask . java to improve robustness by handling LockException during lock release
replaced the use of ` Properties ` with ` ResourceBundle ` for retrieving GEM _ PATH ` and ` RUBY _ VERSION ` to improve resource
transaction : use byteutil . empty _ byte _ array instead of zero _ address .
removed redundant initialization of ClassInfo in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix failure in jobmanagerstartuptest
chore : [ cloud ] add support for datastream : : v1a and datastream : : v2a in protos
added a new Bundle instance and set it in FileDisplayActivity to enhance the functionality by allowing customizable extras
changed the loop condition from ` break ` to ` continue ` in ` ParticleEmitter . java ` to ensure the loop continues when ` particle `
updated test cases in AmbariManagementControllerImplTest . java to expect a minimum number of clusters instead of 2 to ensure tests accurately reflect expected
removed nullable annotation from the SERVICE column in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry . java
updated Bug4823811 . java file to improve functionality to enhance performance and maintainability of the code
updated pattern handling in RmStep . java to use a path relativizer to improve path relativization for pattern deletions
[ deconz ] do n ' t request the state if there be an initial request .
updated ShibbolethCompatiblePersistentIdGenerator to include attribute handling and modified related methods to enhance attribute management and improve code clarity
reformatted the @ Inject annotation in RequestValidationService . java to improve code readability and maintainability
added a new ` STATS _ LOGGER _ KEY ` key and modified the keyboard hiding logic in ` UiThreadHelper . java ` to improve
removed redundant calls to ` MManager . getInstance ( ) . clear ( ) ` in ` MManagerBasicTest ` and ` MTreeTest `
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a test for the slurp file , and add a test case for it
changed access modifiers of several classes to private and added @ FunctionalInterface annotation to enhance encapsulation and clarify intentional interface usage
refactor span retrieval logic to use a new method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added support for DateWritable in Hive schema converters to enable proper handling of date data types in Hive
updated regex pattern in StyleConverter to use Patterns . COMMA _ SEPARATOR instead of a hardcoded string to improve code readability and maintain
ggb - 118 add validation to input dialog to prevent invalid input
refactor column count comparison logic in SemanticAnalyzer . java to improve clarity and maintainability of column count validation
refactor scoring logic in WANDScorer . java to improve clarity and correctness to enhance code readability and maintainability by simplifying conditions
refactor Correspondence class for improved clarity to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to enhance code clarity and maintainability by using specific AWT
initialized ` curPixVal ` with a default value of 0xFF000000 in ` XRSolidSrcPict . java ` and added a
replace subtypes with supertypes in BiomeDictionary . java to improve efficiency and clarity in type management
corrected the spelling of " withinTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve code readability and maintain
added stability annotations to the TaplTestsLauncher3 class to ensure compatibility with various test flavors
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check for non - empty logFileSuffix before processing to ensure that logFileSuffix is not only non - empty to avoid potential errors
refactor PythonBuckConfig class to improve code readability to enhance maintainability and facilitate future updates
added methods to add and clear system shared library names in ShadowPackageManager to enhance testing capabilities for system shared library names in the package manager
fix meiligao command ( fix # 118 )
added null check for the tile before accessing its properties in PowerDiode to prevent potential NullPointerException when the tile is null
added a new ` TrimCache ` class to trim the cache and updated its summary to improve cache management and provide user feedback during deletion
updated import statements to use ` com . google . common . collect . Lists ` instead of ` com . google . api . client . util
updated BasicAuthAccessControlFactory to throw NotAuthorizedException instead of returning false to improve error handling by providing specific exceptions for basic authentication
[ hotfix ] [ runtime ] make scheduler . scheduleperiodically ( ) method abstract
replaced refreshListOfFilesFragment ( false ) with onItemClicked ( getFileByPath ( operation . getRemotePath ( ) ) in FileDisplayActivity
added a check for multiple XML files and improved error handling in StreamUtil . java to ensure that only one XML file is processed and provide clearer
refactor create _ table methods to accept CreateTableRequest instead of EnvironmentContext to simplify table creation process and improve code clarity
added an ` aborted ` flag to the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to manage task
added indentation checks for block parsing in multiple parser classes to ensure proper handling of indent levels during block parsing
add multichat operation set definition and gibberish protocol implementation
removed redundant check for control frames in FrameGenerator . java to simplify the control frame validation logic
added visibility setting for collapse handle in WidgetsBottomSheet to ensure the collapse handle is visible for better user experience
added two new files , Issue475 . java and XSS . java , to implement HTML and JavaScript handling in the Jooby framework to
added a check for zero units to scroll in StandardGraphIO . java to prevent further processing when there are no units to scroll
updated condition from ` size ( ) > 1 ` to ` size ( ) ! = 1 ` in ` trxCap . getInstance ( ) .
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes and corresponding test cases to enhance functionality for adding and putting
added hashCode method to IPPPrintService and created TestRaceCond class for testing print service equality to ensure consistent behavior in hash code generation and
refactor : remove unused field from db2idialect and db2zdialect
added a condition to check if the transaction ' s platform fee is greater than zero in BaseStripeManager . java to ensure that connection is only
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
do n ' t increase data first sample when buffer be encrypt .
removed the ' public ' access modifier from several classes and interfaces to enhance encapsulation by restricting access to class members
added import statement for Retrofit in Part . java and PartMap . java to utilize Retrofit functionality in Part and PartMap classes
refactor JSON handling logic in JsonBuildHelper . java and ParamsBuildHelper . java to improve clarity and functionality to enhance code readability and
added a new flag ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to the ` AbstractFloatingView ` class to
chore ( deps ) : update gapic - generator - java with mock service generation fix
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on task
removed the ' true ' parameter from the createRenderScript method call to simplify the method call by removing unnecessary parameters
refactor PMD class to improve code readability to enhance maintainability and facilitate future updates
refactor ` PluginListCellRenderer ` , ` PluginManagerActivator ` , and ` PluginTableModel ` to use a new method ` isSystemBundle `
refactor import statements and formatting in IntegrationTestSparkBulkLoad . java for consistency to improve code readability and maintainability
replace hardcoded value ` 0.001 ` with a constant ` LOW _ FALSE _ POSITIVE _ RATE ` in KeyChainGroupTest
refactor rocket configuration handling in Overview . java to improve clarity and functionality to enhance code readability and maintainability by using a more descript
server : do n ' t try to create an agent attache if the host be n ' t find .
added a null check for the value before processing in DefaultRecordStore . java to avoid potential NullPointerException when accessing the data value
cloudstack - 1079 : throw discoveryexception instead of return null when host discovery fails
updated string constants for NO _ NAME and NO _ VALUE in ParamAction . java to improve clarity and consistency in error reporting
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbing classes to accept an Object instead of InvocationContainer
added a method to strip parameters from method names in the LocationOpener class to improve method clarity by removing unnecessary parameters from method names
updated version name and code for the GreatVoyage application to reflect the latest release and ensure versioning accuracy
use set instead of list to avoid concurrentmodificationexception
[ geot - 5576 ] fix typo in mblayers symbolizer option name
ggb - 221 fix popups not be resize when there be no overlap feature .
updated error messages in ValidationSuite . java to use hyphens instead of colons to improve clarity and consistency in error reporting
refactor ` QuickstepTransitionManager ` to encapsulate the ` StartingWindowListener ` implementation to improve code readability and maintainability by encaps
added a documentation comment inherited from MBeanServerConnection to improve code readability and maintainability
updated exception messages in CheckPackageAccess . java to reflect PackageAccess and PackageDefinition security to improve clarity of exception handling related to package access and definition
increased the timeout duration in ThreadSafetyTest from 30 seconds to 90 seconds and added an assertion to verify the termination status of the executor service
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and updated its initialization logic to improve flexibility in logging configuration and ensure
added @ JsonIgnore ( true ) annotations to the Schema class to exclude sensitive data from JSON serialization
increased the timeout duration for the TestNonTxIndexBuilder test from 5000 ms to 10000 ms to allow more time for the test to complete
updated train method signatures and variable names in SimpleNaiveBayesClassifier . java for consistency and clarity to improve code readability and maintainability by standard
updated CheckHelperModule to extend AuditLoggerModule and added a new CheckHelperAuditModule class to enhance audit logging capabilities in the application
refactor Prototype class to improve code organization to enhance maintainability and readability of the code
added a check to determine if the table is a transactional property to ensure proper handling of transactional tables in the semantic analysis process
[ java ] remove unused method from recordingwriter . writefragment ( )
[ cea ] return empty cue list instead of 0 when no cue .
add getalias ( ) method to datastoremetricqueryimpl to fix test failure
updated currency pairs from BTC , BTC _ CAD , and PPC _ USD to BTC , USD , and AUR
close entitymanagerfactory in test to prevent memory leak
updated import statements from ` kafka11 ` to ` kafka ` in Zipkin configuration files to ensure compatibility with the latest Zipkin library structure
added two new files , GwtBinaryIntegrationTest . java and A . java , to implement integration tests for GWT binary builds to ensure GWT
updated loading cause label visibility logic in BrowserContentPane . java and refactored ResultSetRenderer usage in SQLConsole . java to improve user experience by
reformatted code in EnhancedRandomImpl and added new test cases in EnhancedRandomImplTest to improve code readability and maintainability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance XML security property management for XML processing
added a new file ` InlineDefaultMethod . java ` implementing interfaces with default methods to demonstrate the use of default methods in subclasses of ` Subtype
updated SQL query patterns in SqliteFieldPredicateView . java to use GLOB instead of LIKE to improve query performance by avoiding unnecessary
[ drools - 56 ] make getdmnprofiles protect to allow subclassing
fixed - rscript . load ( ) method can not be call from redis master if slave node be n ' t find . # 4211
[ gr - 36464 ] move volatile field check from staticobject . setwordfieldvolatile ( ) to espressolanguage
updated log message format from " % s " to " % d " across multiple classes to improve clarity and consistency in logging messages
fix memory leak in fmloutboundhandler . sendproxy ( packet ) .
added HTTP _ JETTY _ SERVER _ HANDLERS constant and updated thread pool configuration in WebServer . java to allow dynamic configuration of
replaced the addition of shortcuts to the idsToWorkspaceShortcuts map with a removed list and added a check for empty shortcuts to improve shortcut
removed unnecessary check for String type in DefaultHttpClientBinderRegistry to simplify the code for better readability and maintainability
removed case handling for android . R . id . home in DetailFragment . java to streamline navigation functionality for better user experience
added a check for the AndroidMarket presence in the includesPlayServices condition to ensure that Play Services are only included when the market is present
refactor TableBlockParser to improve cell parsing logic and add a new test for pipes on whitespace after header to enhance code readability and ensure proper
added support for bridging headers in NewNativeTargetProjectMutator , AbstractAppleNativeTargetBuilder , and ProjectGenerator classes to enhance the flexibility
refactor PotentiallyDeadCode . java to utilize Set < JavaType . Method > and improve source path handling to enhance code clarity and
added diamond detection functionality and two new classes , DiamondRedundantArgs , T6939780 , and T6939780 to enhance
replaced calls to ` startSend ( ) ` with ` onStartSendRequest ( ) ` in ` HighwayClientFilter ` , ` RestClientSender
added debug logging for registering cache metrics in SolrCacheHolder . java to improve visibility into cache metrics registration process
added catch blocks for AuthenticationException in LdapCtxFactory . java to ensure proper exception handling for authentication failures
updated the comparison logic in Test6796786 . java to handle negative values correctly to ensure accurate validation of zero values in floating - point comparison
added " logback . dev . xml " to the configuration files in JoobyMojo . java and Main . java to ensure the application uses
added a new file ` JaasEventCheck . java ` that implements ` ApplicationListener ` to handle authentication events to ensure proper handling of failed and
refactor animation logic in QuickstepTransitionManager to use a list of views instead of a single instance to improve code readability and maintainability by
updated the string distance comparison logic in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest .
changed the type of the ` fetchers ` variable from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to ensure
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
cloudstack - 6319 : add a new config to wait for ready command to return .
updated JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider . java to improve clarity and maintainability of JDBC connection parameters
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to improve code readability and maintain consistency in
replaced synchronized block with computeIfAbsent for schemaTypeCache to improve thread safety and simplify schema retrieval logic
refactor header addition logic in StaticServerHttpHeadersWriter to check for existing headers before adding new ones to improve efficiency by avoiding unnecessary header additions
added JUnit @ Ignore annotation to LatticeDemo . java to ignore the test due to dependencies not available from CMU
added a line to create the storage directory in TestCollector . java to ensure the storage directory exists before running tests
added a method to set chunked streaming mode in StarTreeJobUtils to improve performance by reducing data transfer overhead
jsonschema : add basic syntax checker for multiple and single type
hbase - 25813 fix checkstyle issue in hbase - protobuf - java
added a new ` Node ` class and a corresponding test method in ` BeanPopulatorTest ` to ensure that nested structures do not cause stack overflow exceptions
added IOException to the getRemoteName method signature in AccountingTransceiver . java to ensure proper handling of IO exceptions during method execution
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl and refactored client creation in ClientFactoryImpl to enhance error handling and improve client
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration flexibility based on the AspectJ mode setting
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security and control over endpoint identification during SSL connections
added an ` remove ` method to the ` OHLCSeries ` class and a corresponding test case in ` OHLCSeriesTests ` to
replaced ` invoke ( ) . joinInternal ( ) ` with ` invokeUrgent ( ) . joinInternal ( ) ` in ` ClientSchemaService
removed redundant code in World . java to streamline the process of destroying joints to improve code readability and maintainability
change searchfilter to always return true if filterstring be null .
[ hotfix ] [ test ] move sourcereadertestbase to testutils
removed redundant null checks for document properties in DocumentsStorageProvider . java to simplify error handling for document not found scenarios
added new ` HookDefinition ` interface and ` JavaHookDefinition ` classes for hook execution to provide a structured way to register and invoke Cucumber
refactor code into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by reducing duplication
updated ` setExoOptions ` method to include a ` allowTs ` parameter and modified the container setting logic accordingly to enhance video playback options
remove the user and from role from the identifier collection in DMRDecoderState . java to clean up unused user and form identifiers during processing
added a static constant INVISIBLE and updated the toString method to use it to improve code readability and maintainability by centralizing color management
updated null handling logic in CountAggregationFunction and added a new test for total count with null handling query options in NullHandlingIntegrationTest to ensure correct handling
set the ` deep ` variable to - 1 in the ` InternalTransaction ` class to indicate that the transaction is not a deep transaction
fix xml escape in streaminitiation . getname ( )
updated the way the work directory is set across multiple classes to allow dynamic configuration of the work directory based on user - defined settings
added support for deprecated rules in the RuleSetFactory class to ensure proper handling of deprecated rules in the rule set
use codebuffer . position ( ) instead of create a dummy label for direct call .
updated minStamp and maxStamp to static final and added logic to initialize minStamp and maxStamp in TimeRange class to improve code readability and
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
refactor connection handling by extracting the emitMetricsJson method into a separate method to improve code readability and maintainability by reducing duplication
added an additional check for MIME type in DetailFragment , AttachmentIntent , and GalleryActivity to ensure proper handling of video files and videos in the
fix tank not be able to drop liquid when the world be remote .
refactor CsharpLibrary . java to handle RuleAnalysisLegacyBuildRuleView and PrebuiltDotnetLibrary to improve dependency checks and enhance rule resolution
add support for iq . get ( ) , iq . get ( ) and iq . get ( ) for dummy pep service .
added a null check for the runtime object in the IntrinsificationPhase class to ensure that the intrinsic graph is only evaluated when runtime is not
updated conditional checks in MetricTrackingWindmillServerStub and StreamingDataflowWorker to ensure that active work is only refreshed when not empty
pdfbox - 4892 : keep track of eof marker , a suggest by valerybokov
added constructors to LwjglApplet for initializing LwjglApplet with a Canvas and configuration to enhance the application ' s
updated the ` stringRepresentation ` method in ` EnvironmentAndSystemPropertyClientProviderStrategy ` to handle null configs more gracefully to improve code readability
refactored the doPostAuthentication method to handle account state and message list conditionally to improve code clarity and ensure proper handling of password policy application
refactor Int2ObjectCache class for improved performance to enhance efficiency of object caching operations
added a new private field ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize this field to
refactor Readable class to improve code readability to enhance maintainability and facilitate future feature additions
pdfbox - 551 : use testsupport . with _ font for page break test
updated menu item icon to use android . drawable . ic _ menu _ share to ensure consistent icon usage across the application
updated the JVM version checks in Constants . java to ensure compatibility with both Java 8 and Java 9 and above to improve compatibility with different Java versions
updated the handling of non - JDBC 41 compliant drivers to check if the network timeout is not equal to Integer . MIN _ VALUE to ensure
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filtered class handling to improve performance and memory usage by using a more efficient data structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes to ensure proper method
added new lines for png , jpg , and gif in ChartProvider . java to improve code readability and maintainability
fix bug where bibtex db do n ' t update the working directory
removed an unnecessary return statement in JavacParser . java and added a new file ExtraSemiTest . java with a JavaSource class to simplify
added support for ` AFTER ` and ` BEFORE ` keywords in the ` User ` class and corresponding tests in ` UserRepositoryTests ` to
refactor Test15FloatJNIArgs class for improved clarity to enhance maintainability and readability of the code
updated version and website links in plugin . java to enhance user experience by providing version information and website links
updated substring index calculation in MockProcessContext and added a new test for encryption and decryption in TestMockProcessContext to ensure correct extraction of the
[ java ] ensure that reentrant call be not permitted during callback .
added null check before merging dependency in OpProcFactory . java to avoid potential NullPointerException when the dependency is not found
added timeouts to the @ Test annotation in SslBytesServerTest . java to increase test execution time by allowing more time for tests to complete
fix javadoc typo in peer
added new methods and interfaces to the RealtimeIndexingCoordinator , StreamProvider , StreamProviderConfig , and StreamProviderConfig classes to enhance functionality and
updated FailureWatcher to check for null before writing exported data to avoid potential NullPointerException when exporting data
refactor popup handling in RecyclerViewFastScroller . java to improve clarity and maintainability to enhance code readability and maintainability by encaps
corrected a typo in BuckWSServerPortUtils . java and added a tool window instantiation check in BuckEventsConsumer . java to improve clarity
added a conditional check for Windows before creating a JCheckBox and adding it to the builder to ensure that preventSleep checkbox is only added on Windows platforms
updated import statements from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to align with the latest Jakarta EE
added cropping functionality and adjusted related calculations in QuickstepAppTransitionManagerImpl . java to improve app launch timing based on device profile orientation
added full - screen exclusive mode functionality to XWindow and XWindowPeer classes to improve user experience by controlling the visibility of the security warning visibility
added substring extraction logic and a new test class UMSUtilsTest for testing played duration strings to ensure correct formatting of played duration strings and validate functionality
added methods to handle URI credentials in DagUtils to improve the management and management of URI paths in the DAG
use entryset ( ) instead of keyset ( ) in camel - jbang
trim whitespace from the last element of the thread name to ensure consistent thread name formatting
updated the message in GpsMainActivity to indicate that the description cannot be logged to a file to improve user feedback by providing a more descript
refactor Job class to improve code readability to enhance maintainability and facilitate future updates
added a new abstract class ` Unused ` with methods ` getIntField ( ) ` , ` BooleanField ( ) ` , ` StringField (
updated the key for HBASE _ MASTER _ HOST from " hbase _ master _ host " to " hbase _ master _ hosts " and
deleted the EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused interfaces to streamline the codebase
updated the ` performJoin ` method to return a list of output records instead of a single record to enhance data handling by allowing multiple output records to
updated MAX _ DELEGATE _ LOCK _ PERIOD validation and adjusted related logic in ProposalUtil . java and CommonParameter . java
server : fix nullpointerexception in case networkrate be 0 .
removed default constructor and overridden applySpecification method in CmcExchange class to ensure proper initialization and configuration of exchange specifications
updated seed node IP configuration handling in GossipLocalNode . java and changed constant names in Constant . java to improve clarity and consistency in configuration management
set default value of hazelcast . client . tpc . enabled to false by system property
updated swagger version from 2.1 . 10 - 1 to 2.8 . 2 in multiple API application classes to ensure compatibility with the latest features and improvements in the
refactor division logic in MutableBigInteger . java and add a new ModInvTime . java file for testing modular inverse computation to improve code clarity
refactor key assignment logic in NamedObjectList . java to handle blank names more gracefully to improve clarity and maintainability of key assignment logic
updated cleanupEmptyDir method calls from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple classes to ensure proper cleanup of empty directories
refactor AsyncCache and Cache classes to improve code organization and maintainability
added RCFileInputFormat import and registered it in SerializationUtilities to enable serialization of RCFileInputFormat for data processing
added methods ` typeOf ` and ` categoryOf ` to ` TypeMapperComponent ` for retrieving Java types and categories to enhance type mapping functionality for
added error handling for invalid host headers in Request . java and improved test cases in RequestTest . java to improve robustness of host port parsing and
refactor ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` instead of direct API calls to improve code clarity
implement addoutgoingvalues ( ) and forEachoutgoingvalue ( ) to standardop .
refactor SegmentCoreReaders to use instance variables instead of instance variables to improve encapsulation and simplify code structure
add hasmainthreadprofile ( ) method to aggregate dao to check if the main thread profile exist .
added validation error message for non - required annotation definitions in Buck rules to ensure that non - required annotations are not allowed in non - required rules
corrected the casing of the name " greekLowerCase " , " irishLowercase " , and " uax29UrlEmail
refactor HSSFSheet and Sheet classes to improve code organization and maintainability
add backward compatibility for search servlets in dspace 4 . x
added a list to remove specific time zones from the ids list to ensure that only relevant time zones are processed for processing
updated SurfaceSyncGroup instantiation to include a specific name " TaskBarController " to improve clarity and specificity of the SurfaceSyncGroup '
updated file deletion and download stream retrieval methods in GridFsTemplate . java and added a new test method in GridFsTemplateIntegrationTests .
added unit tests for querying column indices in ShadowDownloadManagerTest and implemented total size and bytesSoFar methods in ShadowDownloadManager to ensure accurate
refactor character insertion logic in TextField . java to improve clarity and maintainability to enhance readability and maintainability of the code
do n ' t add group to the same group if it ' s the same group .
refactor ` afterSetStatements ` method in ` Block ` and ` BlockLexicalContext ` classes to improve code readability and maintainability by reducing
added hashCode methods to IntervalXYDelegate and modified equals method in XYSeriesCollection to enhance hash code generation based on interval width and interval position factors
make clientqueuedisruptiontest clean up after each test
reformatted code in CloudWatchAppender . java and renamed test methods in RegisteredServiceScriptedAttributeFilterTests . java to improve readability and
updated Gson method from serializeSpecialDoubleValues ( ) to serializeSpecialFloatingPointValues ( ) to ensure correct serialization of special floating - point values
added calls to waitProduceOneBlock in HttpTestZenToken002 . java and WalletTestZenToken007 . java to
added checks for empty language strings before canonicalizing and updated language tag handling to improve robustness and prevent potential errors when processing language tags
add kvm . ssh . to . agent config to allow ssh into kvm agent
removed the ` private ` access modifier from the ` ScheduledAction ` class and its constructors to enhance encapsulation by restricting access to
removed unnecessary import of PagerSlidingTabStrip from EmojiKeyboard . java to streamline code by eliminating unnecessary dependencies
added a condition to check if the input string does not contain a hyphen in the filter to ensure that only non - hyphens are processed in the
updated text in BrowserContentPane to " Natural column order " and refactored data model statistics retrieval in DataBrowser and Desktop classes to improve clarity
removed the method call to Arrays . copyOf in mmm Utils . java to optimize memory usage by eliminating unnecessary array copying
replaced direct call to ` write ( remoteAddr ) ` with a call to ` htmlEncodeButNotSpace ( remoteAddr ) ` to ensure
updated topic check in ItemStateTriggerHandler to use " smarthome / items / " instead of " / " to improve clarity and organization of the
remove unnecessary synchronization in fasthttpdateformat . updateformatcache ( )
refactor file movement logic to use a concurrent executor service to improve performance by allowing concurrent execution of file operations
added two overloaded ` trigger ` methods to the ` WrapTimer ` class and created a ` Timer ` with a period parameter to enhance timer functionality
[ hotfix ] [ table - common ] fix typestringutils # writetypeinfo to support local _ date , local _ time and sql _
added a verbose option to error logging in AbstractStatusReporter to enhance error reporting by allowing more detailed logging of error messages
updated ClickStartHandler to accept an additional boolean parameter and added menu toggle logic to ensure the menu is toggled based on the application ' s menu
s2s vpn : do n ' t allow VPN connection between the same account ' s VPN gateway
updated error handling logic in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to improve error handling consistency and ensure proper exception
pdfboxthumbnail and pdffilter : check for encryption before create / extract text
fix ( zk ) : make sure to shutdown the executor service in case of an exception
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code organization and maintainability
replaced getSelectedItemId ( ) method calls with a direct reference to ' id ' in HostsList . java to improve code clarity and maintainability by
refactor Java6Assertions and Conditions classes to improve code organization and maintainability
changed the return type of the replaceOrderBulk method from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > and updated its
updated method names from ` enterDefault ` to ` enterIdentNode ` in ` FindScopeDepths . java ` and added ` enterFunctionNode
added a new file ` J9ConstantHelper . java ` and refactored ` ObjectHash . java ` to utilize it to improve code
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification exceptions in Mockito invocations to ensure that concurrent
add a method to notify offline and remove a roster resource from a session . jm - 1027
replaced direct calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a new
updated loadHandle method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to prevent potential NullPointerException when extTypeCustomDesers
set the mock server ' s log level to WARN in Main . java to improve user experience by reducing unnecessary log output
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
updated the type of scoreMap from Map < Float , Float > to Map < String , Float > and added termScoreMap to enhance type safety
updated conditional checks from ` & 0x8000000000000000L ` to ` < 0 ` in ` U64 . java ` and added an ` eq
remove headline style that be no longer need
updated the notification logic in WallpaperColorInfo . java to include a check for the support of the dark text to ensure notifications reflect changes in the
[ hotfix ] [ checkpoint ] do n ' t reschedule checkpointrequestdecider on too many pending checkpoint .
updated MAX _ POOL _ SIZE from 2 to 8 and increased CORE _ POOL _ SIZE from 1000 milliseconds to 15 minutes to improve performance
replaced ` filter ` with ` anyMatch ` for filtering providers in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to improve clarity and
opencvimagefactorytest : do n ' t fail on window servercore container
fix for http : / / issues . apache . org / activemq / browse / amq - 2476 - add fetch option to connectionfactory
[ py4jnetworkexception ] do n ' t swallow throwables in getreturnvalue ( )
added a Repeatable annotation and a Repeatable annotation to the Issue class to provide a list of issues to be processed in a repeatable manner
updated user properties key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified test
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46187 - pgstream
[ hotfix ] [ runtime ] fix typo in slotstatus javadoc
added import statement for ClassUtils in ReflectionUtils . java to utilize utility methods from Apache Commons Lang
replaced instances of HashSet with LinkedHashSet in SslContextFactory to maintain insertion order for protocols , exclude cipher suites , and cipher suites
added a static variable ` systemResource ` and a check for it in the ` Resources . java ` file to improve resource management by caching the resource
[ java ] use a constant for plaintext segment size in stream decryption channel .
added a test for invalid circuit breaker fallback URIs in ServerMvcIntegrationTests . java to ensure that the circuit breaker filter correctly throws an
updated SSL connection factory in AppPage . java to enhance security by allowing hostname verification for HTTP connections
set the size limit for the input stream and remove the resetBytesReadCounter method to improve memory management and prevent potential memory leaks
added a ` preferAES ` boolean property and its getter and setter methods in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to
camel - opentelemetry : use log instead of system . out in camelopentelemetrytestsupport
[ hotfix ] [ test ] remove unused test method in elbintegrationtest
renamed the method from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to clarify the purpose of the method
added error handling for file creation in DiacriticTest to improve robustness by preventing file creation failures due to configuration issues
hhh - 14745 fix oracle timeouts issue
updated texture file handling and exception handling in TextureUnpacker . java to improve error handling and ensure proper file existence checks
refactor locking mechanism in AmbariManagementControllerImpl . java to ensure thread safety during concurrent access to service state changes
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method ` testResultSetShouldNotCloseStatement ` in ` TestJdbcDriver2 . java ` and modified ` HiveQueryResultSet . java
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56059 : remove unnecessary
added logic to remove pre - deleted databases from the schema map to ensure that the response reflects the presence of pre - deleted databases
removed the " chunkedWriter " pipeline and updated its usage in Http1xUpgradeToH2CHandler . java to ensure proper handling of
added a check to ensure the base item ID matches the last deleted item in EnhancedBrowseFragment and implemented a delete item confirmation dialog in Full
add a rulebank interface to make it easy to add a rule
added error handling in JcaTlsCrypto . java to improve robustness by throwing a fatal alert when initialization fails
added two new Java files , TestMonomorphicObjectCall . java and Object . java , to implement a testing framework for monomorphic object
replaced multiple instances of ` removeMetaDataSource ( session ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop
hbase - 25813 defaultmemstore . shouldseek ( scanquerymatcher ) do n ' t throw nullpointerexception
[ hotfix ] [ runtime ] use file [ ] instead of string [ ] for local _ state _ directory
updated AlterTimeSeriesStatement to accept a boolean parameter for altering view and made isAlterView final to enhance flexibility in setting statement type based on
fix ` ` matchtext ' ' condition to match human readable string
added error handling around the retrieval of the routing table builder in HelixBrokerStarter . java to improve robustness by preventing application crashes due to
refactor parameter handling in HttpClientIntroductionAdvice . java to ensure proper insertion of values in the map to avoid potential NullPointerExceptions
updated jms password handling from ` String ` to ` char [ ] ` across multiple test classes to enhance security by allowing passwords to be stored in
bug 13232 : do n ' t call session . invalidate ( ) when search for domain with recursive flag set to true
updated equality checks in Counters and CountersTest classes for consistency and clarity to improve code readability and correctness in counter comparison logic
updated the ` initialize ` method in ` BasicTumbleStepper ` to include warnings from the original ` SimulationStatus ` to ensure warnings are
truffle : fix miss call to system . currenttimemillis in llv64syscallclockgettimenode
replaced direct calls to readObject with a variable assignment in PrettyPrinter . java to improve readability and maintainability of the code
added null checks for indexToNode and resetting nodes in LRUDictionary . java to ensure proper cleanup and prevent potential memory leaks
refactor datagram packet filtering logic in DatagramSocket . java and DatagramChannelImpl . java to improve clarity and efficiency to enhance code readability and maintain
test : migrate testquerydns to junit 5 ( # 4423 )
added a new file ` NutchServerInfo . java ` that contains server - related properties and their respective getters and setters to provide a
replaced offset and position length attributes with AttributeSource in EdgeNGramTokenFilter . java to streamline token attribute handling and improve code clarity
added timestamp support to CqlInserter , ThriftInserter , and SettingsColumn classes to enable configuration of timestamps for better data management
refactor DSAParameterGenerator to improve error handling and simplify BigInteger instantiation to enhance code readability and maintainability while ensuring correct prime size validation
updated NumberUtils and Numbers classes to improve value handling and modify return statements to enhance code clarity and maintainability by standardizing method access levels and
updated the masking condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and validate
added constraint violation checks to DefaultJdbcOptimisticLockingExceptionMapper to improve error handling for SQL exceptions related to constraint violations
remove setzeroifnotfound ( false ) in remotebrokeroffsetstore , fix checkstyle issue
added a new method ` addTab ` and refactored the ` createTab ` and ` createTab ` methods in ` Tabs ` to
updated array size usage from ` size ( ) ` to ` 0 ` in multiple classes to improve code clarity and reduce potential array size issues
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment .
refactor conditional statements in MavenVisitor . java for clarity to improve readability and maintainability of the code
updated variable names from " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE " and added new functionality for SelectorData and Rule
added a new file FormatCheckingTest . java to verify the handling of class format errors to ensure that the application correctly identifies and reports illegal class names
updated line number assignment logic in CodeGenerator . java to ensure correct line number is used for method execution
added exception handling to the ` getDesiredConfigByType ` method in ` ConfigHelper . java ` to improve robustness by preventing application crashes due to
added methods to create toggles with both text and commands in RadioButton . java to enhance the RadioButton functionality by allowing dynamic selection of buttons
updated the initialization of LinkedHashMap in LRUCache and increased the CHUNK _ METADATA _ CACHE _ SIZE from 100 , 000 , 000
int - 1853 fixed the issue that messagebusparser do n ' t support capacity attribute .
added null check for symbolicName before quoting it to avoid potential NullPointerException and set default value to an empty string when it is null
fix problem with external mode not be load when run with - dmode system property .
added error handling for shutdown hook addition and improved logging in IOManager . java and YARNSessionFIFOITCase . java to enhance robustness
rename ` projectRoot ` to ` androidManifestPath ` and update related references in ` RobolectricTestRunner ` to better reflect the purpose of
added a check for non - existent headers in AbstractMessageProducingHandler and created a corresponding test in AbstractReplyProducingMessageHandlerTests
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests interface implementation to Arg class and added tests field to RustBinaryDescription and RustLibraryDescription to enable testing capabilities for Rust
updated placeholder and error drawable resources in FileMessageVH . java to improve clarity and consistency in image display
refactor OnExitTest class for improved clarity to enhance maintainability and readability of the test code
added onUserPreferenceChanged method to recreate the taskbar when user preferences change
refactor heap dump handling in HeapDump . java to differentiate between JVM and non - IBM VM environments to ensure proper heap dumping
camel - 14284 : camel - mybatis - ensure session be close in case of failure .
simonstewart : implement ie driver . switchtowindow ( ) and wdquit ( ) in the ie driver
updated JDK version from " JDK 5 for - loop " to " Java 5 for - loop " and refactored variable declarations
added a call to set the application state to unavailable to ensure the application is in an unavailable state before proceeding with further operations
refactor position and limit calculations in ByteBufferAs - X - Buffer , Direct - X - Buffer , and StringCharBuffer classes to improve code clarity
updated the method call from ` toUri ( ) . toUri ( ) . toString ( ) ` to ` toString ( ) ` in ` Conditional
refactor setEmpty methods across multiple array data classes for consistency to improve code readability and maintainability by ensuring consistent handling of empty indices
made enums public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
updated document creation in TestMultiPhraseQuery . java to use a new document variable to improve code readability and maintain consistency in terminology
do n ' t send offline payment if the payment method be offline
added a timeout thread and modified the handling of timeout events in HttpChannelState . java to improve timeout handling and ensure thread safety during timeout events
replaced stack trace printing with debug logging in multiple test classes to improve logging detail for better debugging and monitoring
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
use local _ quorum for local _ serial consistency for local _ serial and local _ quorum . patch by jbellis
added support for the " Home " model in the discovery process and updated player identification logic in HeosPlayerHandler to ensure proper handling of players without
added a new ` Wait ` class and updated ` PlainSelect ` and ` SelectDeParser ` to utilize it to enhance SQL parsing capabilities by
refactor Neo4j to use AttributeController and AttributeTable for node and edge data to improve code organization and maintainability by centralizing attribute management
added a null check for the from parameter in the SessionManager class to ensure proper handling of cases where the from parameter is null
nifi - 13939 : deprecate rocksdbmetronome in favor of rocksdbmetronome
updated the method call to retrieve the " IS _ GRANTABLE " value from a results object to ensure the correct retrieval of the " IS _
added logging statements and modified URL check condition in JavascriptContext . java to improve debugging visibility and ensure proper handling of URLs that start with "
camel - 14263 : camel - cxf : do n ' t run cxf test on macos
added logic to handle column modification based on whether a column is new and modifying it based on whether the column is new or not
added Disposable interface implementation to Texture class to ensure proper resource management and prevent memory leaks
added null checks for tldBundleLocation and updated WebBundleDeployerHelper to use WebBundleDeployerHelper instead of WebAppRegistrationHelper to
refactor GoQuorum privacy configuration checks into a separate method to improve code readability and enforce compliance with GoQuorum privacy settings
changed IOException to Throwable and updated suppressed handling in HttpInput . java to improve error handling by using a more generic throwable type
added a condition to skip Thailand when the country is " JP " in the LocaleTest . java file to address issues related to the change in era
updated ApiOperation annotations to use ` HostResponseWrapper ` instead of ` HostResponse ` for consistency to improve code readability and maintainability by using
added boost comparison and hashCode calculation in FilteredQuery . java to ensure accurate query filtering based on the boost value
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 248 text edit : use scrollpane instead of listbox , add geogebradebug parameter
added a new file TestCMSClassUnloadingDisabledHWM . java to implement a garbage collection test for CMS class unloading to ensure proper
do n ' t fire itemtossevent if there be no entity
refactor ` ColumnMapKeyMappingPreparedStatementSetter ` and ` MultipleColumnJdbcKeyCollector ` to ` ItemPreparedStatementSetter ` and update related
fix intermittent failure in compactionstest
added error handling for null ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java
added SPEL operator to the OperatorEnum and implemented SpELJudge functionality in OperatorJudgeFactory to support spel expression evaluation in the code
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in localexecutionplanner
bugfix # 244 , use java . awt . lookup instead of sun . swing . service
refactor Conscrypt - related classes and tests to improve code clarity and maintainability
updated variable types from ' l ' to ' L ' in AttributeResolution9 . java and ShadowArscAssetManager9 . java for consistency to
updated the source and target options in the fullOptions list from " 1.5 " and " 1.5 " to " 6 " to ensure compatibility with the latest
[ calcite - 2476 ] [ table - planner - blink ] add support for metadata column in pushprojectintotablesourcescan
added imports and modified the way localized names are retrieved in AboutActivity . java to improve code clarity and ensure consistent ordering of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a conditional check for live streaming status before updating shared preferences to ensure refresh behavior is only updated when streaming is disabled
added an exception parameter to the MappingException constructor in AuditConfiguration . java to improve error handling by providing more context about the exception
( chore ) camel - file : fix flaky test fileconsumerpollstrategystoponrollbacktest
updated generic type declarations in SchemaLoader and related tests to improve type safety and code clarity
added transport support functionality to the GitClientApplication class and updated RepositoryUrlPanel to utilize this method to determine if a transport is supported based on
updated trackpad gesture handling and added active gesture logging for various input consumers to enhance user experience by providing clearer insights and tracking capabilities
updated version filtering logic in ChangeParentPom . java to handle null mavenMetadata and improved version upgrade logic to enhance robustness and prevent potential null
added a check for " Large Page Support " output and updated logging statements in TestLargePageUseForHeap . java to ensure correct handling of large
cloudprofile : do n ' t migrate event if the database do n ' t exist
updated getTestParameters method to include IOException handling and modified path construction in BrokerXmlConfigStartTest . java to improve error handling and ensure correct
added a new test class ` TestObjectStreamClass ` and modified ` ObjectStreamClass ` to validate serialization behavior to ensure proper initialization and functionality of ` Object
refactor conditional checks in ZoneAwareDiscoveryFilter to simplify logic to improve readability and maintainability of the code
changed log level from error to warn in OpenTracingTracer . java to reduce the severity of log messages during tracing data capturing
added a toString ( ) method to the Generator class to provide a readable string representation of the registered generators
refactor ` doquote ` and ` dontquote ` handling in ` URI . java ` and add new test cases in ` Test . java `
added a null and empty check for resource predicates in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to
refactor error handling in AccepttoApiUtils to return an empty map instead of throwing an exception when the response is null to improve robustness and
updated VertexBufferObject to handle Android version less than 5 to ensure compatibility with devices running Android versions below 5
refactor SybaseASADatabase to improve code organization to enhance maintainability and readability of the code
added a ` forceProjection ` boolean parameter to the ` HashJoinInfo ` constructor and updated related methods to support it to ensure compatibility with previous versions
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the string distance value from other classes
added FLAG _ IMMUTABLE and FLAG _ ONE _ SHOT flags , modified PendingIntent behavior , and introduced a method to create mutable pending intent
refactored the method for appending read column IDs in HiveFileFormatUtils and HiveInputFormat to improve code clarity and maintainability by central
change method name from getUPNPAddress ( ) to getIPv4MulticastAddress ( ) in UPNPHelper . java to improve clarity and consistency
added multiple calls to ` DisplayTemporaryToast ( ) ` in ` SavedExperiments . java ` to enhance user experience by providing a toast
added version handling in ServiceModule and corresponding unit tests in ServiceModuleTest to ensure correct versioning behavior when resolving services
added a new test class ` RawSerializationTest ` for Gson serialization to ensure correctness of JSON serialization for various collections and objects
simonstewart : rename seleniumserver to sslcertificategenerator to make it easy to implement the sslcertificategenerator interface
updated the loop structure in ExpansionViewHelper to iterate through replies instead of using an enhanced for loop to improve code readability and maintainability by
increased the timeout duration in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource access tests to complete
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the payload of the NGram
refactor AclImpl class for improved readability to enhance maintainability and facilitate future updates
added a new test method to verify different array sizes in EasyRandom to ensure that different array sizes are correctly randomized with different sizes
cloudstack - 652 : do n ' t throw exception when stop a vm ( cloudstack - 657 )
added a ThreadLocal to manage write operations in SslConnection . java to improve thread safety during write operations
added a method ` ancestorsVisible ( ) ` to check if the parent of an actor is visible to enhance the functionality of the ` Actor ` class
added logging information for rolling - update steps in RollingUpdateOpFactory . java to improve error handling and provide clearer diagnostics during deployment failures
[ hotfix ] [ table - common ] add miss @ nullable annotation to sinkprovider . of method
added authentication failure handling in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to track authentication failures related to non - existent
updated AtMostXVerificationTest . java file to improve test coverage and ensure accuracy of verification logic
updated default QTYPE references to use ` LuceneQParserPlugin . DEFAULT _ QTYPE ` instead of ` OldLuceneQPlugin . NAME
updated SimpleDateFormat instantiation to include Locale . US in WeekDateTest . java to ensure consistent date formatting across different locales
added a new method ` isInitialized ( ) ` to ` ILanguageServer ` and modified the visibility of the method in ` JavaLanguageServer `
updated the parameter name from ` idToken ` to ` shouldHaveIdToken ` in the ` test _ fetch _ token _ from _ authorization _
added transaction management methods to the DatabaseAdapter class and refactored account deletion logic in GncXmlHandler to improve transaction handling and ensure accounts are
refactor byte array handling in MimeType . java to use ByteArrayOutputStream instead of byte array to improve performance and reduce memory overhead when reading data
added multiple @ Override annotations and modified exception message handling logic in MessagingTemplate . java to improve code clarity and maintainability by standardizing method overrides
added an ` isAcceptable ` method to the ` AutoFormatVisitor ` class to check if a source file is an instance of ` J .
added configurations for maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy to improve performance and resource management during index writing operations
added unit tests for managing and updating witness data in ManagerTest . java and NodeDelegateImpl . java to improve test coverage and ensure correct handling of
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing NoSuchElementException during iteration
flume : remove log4j . level parameter from logversion and logenvironment method
updated authentication metrics assertions in BasicAuthIntegrationTest . java and refactored parallel execution in DaemonStream . java to improve test reliability and ensure accurate
changed the implementation of the ` nodes ` variable from ` HashMap ` to ` LinkedHashMap ` to maintain the order of elements in the graph nodes
add internal error error handler to jersey support ( # 10715 )
refactor header validation logic in Http2TestBase . java to use a dedicated method to improve code readability and maintainability
added handling for specific Java property types in systemProperties to ensure compatibility with different Java versions and improve system property management
changed method parameter types from String to CharSequence in StringSubject . java and added corresponding test cases in StringTest . java to improve type safety and ensure
add jvm . countertime ( ) and jvm . eventwriter ( ) to the intrinsics .
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory from ` ds ` to ` ds2 ` in ` PersistenceManagerProvider . java ` to ensure the correct datasource is used for
refactor DeploymentOptions class to improve code readability to enhance maintainability and facilitate future updates
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` instead of a ` Drawable . ConstantState ` to simplify drawable handling
updated try - with - resources statements in XmlParser and YamlParser to use try - with - resources for InputStream and StringReader to improve resource management and
added support for the COALESCE function in RexNodeConverter and registered it in SqlFunctionConverter to enhance the functionality of the coalesce function
camel - 14263 : camel - hl7 - remove unnecessary test in camel - jbang
set the context class loader for the JavassistProxyFactoryFactory to ensure proper class loading and prevent potential class loading issues
refactor DefaultDateTypeAdapter to remove dependency on DateFormat and add final parameters to improve code clarity and enforce immutability of parameters
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to set the URI and update query parsing logic to simplify the logic for setting and parsing the URI to improve code clarity and
added a filterOldEntries method to filter out outdated feed entries to ensure that only valid feed entries are processed in the refresh process
changed log level from fatal to warn in FSHLog . java to reduce the severity of the log message from fatal to warn
refactor NodeMap to implement Iterable < T > and implement it in NodeMapIterable to improve code organization and maintainability by encapsulating
updated import statements and modified predicate creation in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency in predicate handling
added a check for non - empty fields before adding operations in MongoRecordReader and modified the return condition in RexToMongoTranslator to ensure that
add admin to list if there be no admin
replaced MultiFields with SolrIndexSearcher for term retrieval in multiple plugins to improve performance by avoiding unnecessary multi - field queries
updated the return statement in ConstantBeanHolder to include class name and identity hash code to improve clarity of the returned string representation of the bean
updated the logic for handling primitive types in GroovyParserVisitor . java to ensure that a valid primitive type is returned only when it is not null
[ gr - 26458 ] remove frameinfoquery . hashcode ( ) and frameinfoquery . hashcode ( ) from frameinfoquery . java
[ test ] fix sedablockwhenfulltest failure
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level documentation for
updated the calculation of readLen in MessageUnpacker . java to ensure proper buffer size handling to prevent potential index out - of - bounds errors
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core . lang . Nullable `
updated the IconDB query to include user information in addition to the current user to enhance the functionality by allowing users to access the icon database based on
( chore ) camel - core : use getbackpressureforasyncsendsize instead of getbackpressureforasyncsendnum
do n ' t add ` ` module - info . class ' ' resource to whitelist for module - info . class
cloudstack - 11420 : fix duplicate key error when upgrade from 4.1 to 4.2
removed the IJava2DRenderer interface from the Java2DRenderer class and removed it from the Java2DRenderer class to simplify the class
added onTearDown method to DefaultAudioSink to handle offload buffer emptying to ensure listeners are notified of emptying when the audio sink is stopped
refactor ` UpstreamCacheManager ` to utilize ` ScheduledThreadPoolExecutor ` for scheduling upstream tasks with configurable delay initialization to improve task scheduling efficiency and
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion message in Recording . java to include an additional context to improve debugging by providing more context in assertion failure messages
updated import statements and authentication checks in FilestorePage . java , RootPage . java , and FilestorePage . java to enhance security checks and
ignore camel - elasticsearch - rest test until camel - elasticsearch - rest be fix .
do n ' t try to find the method ' s declaring class if it ' s not a method
updated button texts from " leftButtonAltcoin " and " rightButtonFiat " to " buyAltcoin " and " sellWithFi
camel - 14263 : camel - restlet - allow to match on uris in the restlet endpoint
fix checkstyle issue in block . createnextblockwithcoinbase ( )
removed the ` Serializable ` interface from ` BTreeMapJava ` and updated test methods to use ` serialCloneNoCatch ` instead of ` Serializable
added null check for the cause before logging the error in RuleEngineImpl . java to improve error handling and provide clearer error messages for better debugging
reformatted conditional statement in Main . java for better readability to improve code clarity and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter . java
deleted the PlainVerifier . java file to the functionality was no longer needed in the project
added a conditional check to close system windows when triggered from an alt tab to ensure that system windows are closed when triggered from an alternative tab
updated DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog behavior management to enhance user experience by ensuring the dialog behaves as expected
updated charset parsing in RestAdapter to specify " UTF - 8 " encoding to ensure proper handling of character encoding in MIME types
added a call to the superclass ' s deinitialize method in TextField to ensure proper initialization of the TextField component
refactor LogFormatTest to use TestUtilities for serialization to improve code readability and maintainability by centralizing serialization logic
updated previous duration parsing from ` preRange ` to ` previousUntilLast ` in ` LogicalGenerator . java ` and modified ` GroupByFillDataSet
updated array size validation logic in JAXWSExceptionBase . java to throw a specific exception for negative array sizes to ensure proper handling of negative
test : migrate ctunresolvedimporttest to junit 5 ( # 4458 )
increased the timeout duration in the t . join method from 10 seconds to 60 seconds to allow more time for the thread to complete before proceeding
[ hotfix ] [ runtime ] change default scheduler strategy factory from legacy to region
added title field and methods to set and get the title in ShadowActivity and ShadowAlertDialog , ShadowAlertDialog , ShadowAlertDialog , ShadowAlert
use poilogger instead of commons - logging , a suggest by valerybokov
updated alarm handling logic and added channel state management in InstarHandler . java to improve clarity and functionality of alarm events and ensure proper channel state management
add map . delete ( ) and map . delete ( ) to track remove latency
refactor status checking logic in Response . java to use a switch statement to improve code readability and maintainability
added a method to find the Java compilation location in CheckResourceKeys . java to improve code organization and enhance error handling for missing Java files
add project name to build command if stable channel support platform
added a new test class DeprecatedStubbingTest for testing stubbing functionality to ensure correct behavior of stubbing methods in Mockito
updated the import statement for DispatcherType from org . eclipse . jetty . server . DispatcherType to javax . servlet . DispatcherType to ensure compatibility with
add support for nml ( nx ) and nx ( nx / nx / nx / nx / nx / nx / nx )
added a conditional check for RSA key exchange in FipsUtils . java to conditionally include certain cipher suites based on a configuration property
refactor variable name from ` output _ reader ` to ` reader ` for consistency and clarity to improve code readability and ensure proper resource management
added deleteoauthserviceandaccesstoken method to delete access token and pub / sd api
replaced AGGRESSIVE _ EASE interpolator with EMPHASIZED interpolator in TaskbarEduView . java to improve animation performance
added UpdateRegionLocation plan handling and updated log level from debug to info in multiple classes to improve consensus handling and provide clearer logging for region migration
added a new file ` FileDialogLeakTest . java ` to test the behavior of ` FileDialog ` with a finalizer to ensure proper resource cleanup
changed the package of TestOpenTableInCoprocessor from ` org . apache . hadoop . hbase ` to ` org . apache . hadoop . hbase
skip uninterruptible implementation method in trufflefeature # isuninterruptible ( )
[ flink - 15836 ] [ protobuf ] fix row format bug in pbcodegenrowdeserializer / pbcodegenrowserializer
updated condition to check if disi is not null before checking if it is not null to ensure correct handling of cases where disi is null
refactor methods in ExoPlayerTest , DynamicConcatenatingMediaSourceTest , DynamicConcatenatingMediaSourceTest , and FakeMediaSource
added JVM version handling and updated version check logic in Constants . java and Helper . java to ensure compatibility with newer Java versions and improve code
updated FileReporterTest to accept both String and File types to ensure proper type handling for null inputs to avoid runtime errors
updated the condition from ` isFalse ( ) ` to ` isTrue ( ) ` for end - to - end encryption key existence check to ensure correct
added home button display and back navigation functionality in DirectMessageConversation . java to enhance user experience by allowing easy navigation to the home screen
added GET _ USER constant and updated protocol version in Constants . java and RpcServlet . java , and introduced user retrieval functionality in RpcServlet . java
added an @ EnabledIfSystemProperty annotation to the TestJdbcPluginWithMSSQL class to enable specific architecture checks for JDBC plugins
replace ` startClass ` with ` originalStartClass ` for not found strategy to improve clarity by using the original start class reference
updated error handling and added local registration functionality in DexBody . java to improve clarity of error messages and enhance code readability
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` event . getSuppliedResponse ( ) ` in ` Test
add fixatelookandfeel ( ) method to manage look and feel .
corrected the regex pattern in AppPage . java to ensure the version format is consistent across the application
refactor animation listener handling in LauncherAppTransitionManagerImpl . java to improve clarity and maintainability to enhance code readability and maintainability by
dump private key : use version instead of base58 in error message
update editofferdatamodel to use newofferpayload instead of offerpayload
updated milestone parameters handling in TicketPage . java to differentiate between open and repository states to improve clarity and functionality of ticket parameters based on milestone status
updated the RFBattery size from 640 to 800 in PipeItemsWood . java to adjust the battery configuration for better performance
refactor getStateMachineClusterInstance method to include blueprintName and blueprintRev parameters to improve code clarity and maintainability by centralizing cluster key retrieval logic
set the default value of downgradeAllowed to true in UpgradePack . java and add a test for it in UpgradePackTest . java to
updated method calls from ` scanQName ( fAttribute ) ` to ` scanQName ( fElementQName , NameType . ATTRIBUTENAME ) `
added an EMULATE _ SYSTEM _ LOADLIBRARY configuration and modified the Library class to load native libraries based on its value to
refactor app name comparator to a separate method for clarity to improve code readability and maintainability by encapsulating comparator logic
updated ZipEntry handling to ensure the output stream is closed after each entry to ensure the directory exists before processing the entry
reformatted the ` doTest ` method and improved assertion messages in ` TestSecretKeyCredentialHandler . java ` to enhance code readability and provide
camel - 14284 : camel - spring - boot - optimize routebuilderfinder to avoid reflection
[ hotfix ] [ doc ] fix typo in metric option description
hbase - 26144 fix test failure in testfulllogreconstruction
added a ` reuseAddress ` flag and corresponding setter methods in ` DatagramSocketOptions ` to enable dynamic configuration of network buffer sizes and address reuse
update server shutdown message to use getshutdownmessage ( )
simonstewart : remove deprecate java . lang . llap . locatable interface
updated error messages in VersionInfo . java to clarify that the field must be searchable and not multiValued to improve clarity and accuracy of error
rename ` equalityPredicateColumns ` to ` predicateColumns ` for clarity and consistency to improve code readability and maintainability by using a more descript
reformatted code in HandshakeHandler . java for consistency to improve code readability and maintainability
updated newline formatting in Navigator . java to improve code readability and maintain consistency
[ hotfix ] [ test ] add test for parquetrecordreaderfactory
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL criteria in MongoQueryCreator to enhance query capabilities
refactor GROUP BY expression validation logic in CalciteSqlParser . java to improve code readability and maintainability by reducing duplication
replaced UnsupportedOperationException with a cleaner implementation in MappedByteBuffer and added buffer reference counting in FileChannelLinesSpliterator to improve memory management and prevent potential memory leaks
refactor code to use a local variable for the validator object to improve code readability and reduce repetitive method calls
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and updated ` CircuitBreakerTest ` to use ` ScheduledFuture <
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent configuration
rename ` ` ajax ' ' to ` ` progressbar ' ' in submissioncontroller and fileuploadrequest
added @ Disabled annotation to TableExtRetrieverTest to disable the test due to the retrieval strategy for column privileges
fix concurrentmodificationexception in entitygraph . addexportedcount ( )
replaced ` IntRangeUtil1 . requireNonNegative ` with ` IntRangeUtil . requireNonNegative ` in ` MetricsImpl . java ` to
updated character validation logic in HttpParser . java and added a test case in HttpParserTest . java to improve error handling for invalid characters and ensure
updated the activity layout from ` trends _ activity ` to ` configuration _ activity ` to ensure the correct activity is displayed in the user interface
updated the print statement to include the position of the SLWT in the document to improve clarity of the output message for better debugging
refactor ForceLeaderTest to conditionally use TlogReplicas and create a new ForceLeaderWithTlogReplicasTest class to improve test
refactor Thread class to improve code readability to enhance maintainability and facilitate future updates
refactor RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES to separate HTML , XML , CSS , JavaScript , and text template
camel - 14265 : camel - cxf - add support for xml namespace in camel - cxf component
reformatted code in YamlRepresenter . java for consistency to improve code readability and maintainability
updated output formatting in ToChar . java to include decimal places and added new test cases in TestFunctions . java to improve readability and ensure correct
added transaction validation and write ID handling to GenericUDTFGetSplits . java to ensure that valid transaction strings and write IDs are set
replaced ` ArrayList < String > ( ) ` and ` ArrayList < TypeInfo > ( ) ` with ` Collections . emptyList ( ) ` for empty
add a method to check if the book path exists before loading data to improve handling of cases where no data is available and enhance logging clarity
modified the ` manufactureStrings ` method to include a check for ` getNextSid ( ) ` in ` TestSSTDeserializer . java ` to ensure
refactor grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant for grid columns to improve code readability and maintainability by
updated the diff message in Platform . java and ComparisonFailureWithFieldsTest . java to provide a clearer indication of differences in line breaks to
[ java ] do n ' t wait for key in clippingmediaperiod if it be n ' t need .
updated API endpoint paths in OkexV3 . java to remove " / api / v3 / accounts " prefix to ensure consistency in API endpoint
updated mathematical expressions in LineUtilitiesTests . java for accuracy to improve readability and maintainability of the code
added error handling for old array syntax in JavacParser and created new classes for VarargsAndOldArraySyntax and T6569633 to
log a warning if defaultdrmsessionmanager be use on wrong thread .
added METHOD context handling in VariableContext . java and implemented new test cases in TestVariableContext . java to improve method access handling and ensure correct context
added tests for invalid compilation unit and profile string JSON in ExperimentParserTest . java to ensure proper error handling for invalid JSON formats
fix buffer limit to account for buffer . position ( )
added HttpClientProperties to manage response timeout properties in NettyRoutingFilter and NettyRoutingFilter to enhance the HTTP client ' s response handling by allowing
refactor ` CxxLibraryFactory ` and ` NativeLinkTargetGroup ` to use ` NativeLinkTarget ` instead of ` CxxPlatform `
add unit test base on user forum issue
added field access handling in ASTConverter and refactored conversion logic in RexNodeConverter to enhance field access functionality and improve code clarity
added a static final array for query log entries in QueryLogger . java to improve code readability and maintainability by avoiding repeated method calls
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 499 : do n '
refactor certificate handling logic in PKCS12KeyStore . java and update test cases in StoreSecretKeyTest . java to improve code clarity and
added reflection access checks in NativeObject , Bootstrap , and ReflectionCheckLinker classes to enhance security by ensuring proper access control for reflection classes
removed the ` public ` access modifier from constructors in ` CollisionMap ` to enforce package - private access within the package
marked the method ` getRawInputFromTransactionInput ` as deprecated and added a null check for the ` input ` parameter to indicate that the method should
refactor log level handling from conditional checks to a switch statement in ConfigurationValueConverter . java and Main . java to improve code readability and maintain
cloudstack - 6353 : fix npe when create user account in the same region
added exception handling for EncryptedDocumentException in OldExcelExtractor . java and updated test assertions in TestOldExcelExtractor . java to ensure proper exception
add -- add - exports = all - unnamed for basemicronautbenchmarksuite .
removed unnecessary whitespace in TimeLineCursorAdapter . java to improve code readability and maintain consistency
increased sleep duration from 10 to 50 milliseconds in BatchingStateChangeUploadSchedulerTest . java to improve test stability by allowing more time for attempts to complete
refactor file handling in ShadowContext and add tests for directory deletion in ContextTest to improve code clarity and ensure proper directory management during tests
replaced custom exception factory implementations with specific exception handling for OpenTest4j and JUnit exceptions to improve error handling robustness and provide clearer
increased the WAIT _ TIME _ MS constant from 10 , 000 ms to 60 , 000 ms in LauncherInstrumentation . java
updated ConnectOAuth2RequestFactory to use wildcard import and modified audience claim handling in ConnectTokenEnhancer to enhance flexibility in handling audience claims and improve
camel - 14263 : camel - kafka should use default value of false for breakonfirsterror
added a new constant selectableItemBackground to the R class to define a background color for the selectable items in the UI
replaced multiple individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and
updated eventType assignment logic in TxnSetOperation . java to ensure consistency in event type handling
add a resumablerandomaccesslistener to make it easy to implement
updated the class loader to use " AbstractAccessLogValve $ 3 " instead of " AccessLogValve $ 3 " to ensure compatibility with
fix hssfdataformat . getformat ( ) to always set the number of format
[ hotfix ] [ kafka ] deprecate unused method in kafkaproducer
updated the condition for calculating compressed chunk length in CompressedInputStream . java to ensure proper handling of compressed lengths based on maximum compression parameters
added idempotent repository to allow idempotent processor to use idempotent idempotent value .
fix vanilla use metadata here instead of damage .
added a conditional check for ` realLocalRepo ` in ` LegacyLocalRepositoryManager ` to improve handling of local artifacts based on layout type
[ flink - 11818 ] [ runtime ] log error if taskmanager can not be initialize
added configuration options for deploying files in AbstractArtifactResolutionException to enhance the flexibility and usability of the artifact resolution process
updated temporal path retrieval to use ` getInternalTemporalPath ` instead of ` getTemporalPath ` in ` UploadFileOperation .
added a method ` findByEntries ` to ` FeedEntryStatusDAO ` for retrieving feed entries by their subscription to enhance functionality by allowing retrieval of feed
added execution start and end methods for the current thread in ContextImpl . java and updated test cases in BlockedThreadCheckerTest . java to ensure
updated FormatterConverter methods to accept a formatter string as a parameter and added error handling for missing arguments to improve flexibility in handling formatters and ensure proper
added SDK version check for loading contact files in LoadContactsTask . java to ensure compatibility with devices running Android O and above
replaced setter methods for remote address and hostname with direct assignments to instance variables to improve code readability and maintainability by reducing method chaining
added a null check for realClass in Robolectric . java to ensure that the shadow class is annotated with @ Implements to prevent runtime errors
added tlsMutualAuthenticationRequired ( ) check in NettySslContextFactory and ExampleNettySslContextFactory to ensure proper handling of mutual authentication
added a test to verify that requesting plain HTTP endpoint over HTTPS throws SSLException to ensure that the server correctly handles SSL - related exceptions during
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to their respective consumer and producer properties
removed unnecessary else statement in PageChangeListener . java and added ArrayList import in FrameRenderer . java to improve code readability and maintainability
updated warning message from " address / subject / text " to " SMS " in CommunicationsManager . java to accurately reflect the absence of email / subject
no effective change - add draftqueryoptimise ( query ) method to beandescriptor and beandescriptordrafthelp
added exception handling for resource temporarily unavailable and refactored wait logic in MultipartBody . java to improve robustness and provide clearer logging for
refactor : fix checkstyle issue in java / awt / executables / zipfolder / executablefactory . java ( # 118 )
refactor EndpointConfiguration , SpEL , MainSupport , SpEL , package - info , and SSLContextParameters classes to improve code organization and maintain
fix ` ` attach file ' ' action to use the current file directory
added LoadOptionsBuilder and updated SchemaCrawlerOptionsBuilder to use it to enhance schema information retrieval during tests
rename ` TestLoadLegacyLibrary . java ` to ` j9vm . test . loadLibrary ` and update test method names for clarity to improve
replaced exception throwing with a null return in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set the name , enabled , and expanded properties based on the prototype ' s properties to improve the functionality of the ProjectProperty class by
refactor connection handling in AbstractDbmsOperationHandler to use a try - with - resources statement to ensure proper resource management and prevent potential memory leak
[ hotfix ] [ runtime ] fix typo in datastreamjob javadoc
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and prevent potential resource leaks
camel - 14284 : camel - cxf - getserviceclass ( ) now return the real class name if the class be not a string
added a condition to return true for " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure correct behavior when checking for
refactor LambdaToMethod to improve parameter handling and simplify conditional checks in ClassFileVisitor to enhance code readability and ensure correct handling of lambda expressions
alexeibarantsev : use what < wp > instead of what < wp > for sbarq
increased the timeout duration from 5000ms to 60000ms in DL4JInceptionV3Net . java to allow more time for URL
added a method to set the phrase slop in the mpq object to ensure the phrase slop is applied correctly during query parsing
updated sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time for event triggering
updated the default host value from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to align
refactor gameschedulers to use scheduleparallel ( ) to improve performance
update visibility logic in EditShareFragment to account for available edit options to ensure that edit options are only shown when available
added a minimum progress value to the DepthController to ensure progress does not exceed a defined threshold for better responsiveness
remove packetreceived ( packet ) method that be no longer need
added debug logging to ` DefaultCasDelegatingWebflowEventResolver ` and refactored authentication handling in ` DelegatedAuthenticationGenerateClientsAction `
added null checks for the service parameter in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy ` and ` SamlIdPMetadataUIAction `
added a ` hidden = true ` parameter to the ` Enable account level permissions ` command in ` PantheonCommand . java ` to enhance the
added a condition to exclude the CoroutinesRoom class from instrumentation to optimize performance by avoiding unnecessary instrumentation for the CoroutinesRoom class
added synchronized keyword to the isSupported method in NegotiateAuthentication . java to ensure thread safety when checking the support of NegotiateAuthentication
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the initialization process by using a single init script
camel - 14284 : fixed the issue of maxconcurrentconsumers be set to 1 in persistent and temporary queue reply manager .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added conditional logic to handle tagged elements in PdfDocument to ensure proper handling of text content when tagged elements are present
log4j2 - 1349 add unit test for patternselector
simonstewart : do n ' t throw unsupportedoperationexception when run the test in hta mode
added a new class ` MwThankPostResponse ` and updated the ` thank ` method signature in ` Service . java ` to improve code
added a new interface ` SocketBased ` and updated ` SslConnection ` and ` ChannelEndPointTest ` to utilize it to enhance socket handling
updated RevokingStore initialization and max size setting logic in Manager . java to improve clarity and maintainability of the revoking store configuration
no effective change - add test for hql collection implicit join
added line ending normalization for expected and actual strings in NonVisualRegressionTest to ensure consistent line endings across different operating systems
refactor IndexWriter to manage file references more effectively and add assertions for unreferenced files in MockDirectoryWrapper to improve code clarity and ensure proper
removed the ` final ` modifier from multiple methods in ` BaseError ` class to allow subclassing and enforce immutability of methods
added validation for consume user resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the percentage value is within the valid range
added a boolean check for showLegacyLogin in AuthenticatorActivity to ensure the legacy login display only occurs when the boolean flag is set
[ hotfix ] [ test ] fix typo in streamnetworkthroughputbenchmarktests
removed duplicate response page assignments in EditTeamPage . java to streamline code for better readability and maintainability
updated debug log message to include exception details to improve clarity of error reporting during plugin credentials initialization
added shutdown logic to the server socket channel in ConnectionManager . java to ensure proper resource management and prevent potential memory leaks
refactor Rocket class to improve code readability to enhance maintainability and facilitate future updates
refactor dynamic partition specification logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by reducing duplication
refactor round _ half _ up _ factor to getroundhalfupfactor , a suggest by valerybokov
implement the ` visitDirectory ` method in ` JarDirectoryStep ` and its corresponding test in ` DirectoryTraversal ` to enhance directory traversal functionality and ensure
added a new file ` JWKSetEditor . java ` that implements a text editor for JWK set handling to enable the configuration of JWK
refactor finish method in blocksblocktreetermswriter and blocktreetermswriter to use private fields instead of method parameters to improve code clarity
fix toespressonode . resolveparameterklasses ( ) to be consistent with toespressonode .
changed the default value of fetcher . threads . per . host . by . ip from true to false to disable the fetcher thread per host
simplified the condition for setting timeToLiveOfQuery in StatementUtil . java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and included target configuration hashing in HaskellGhciRuleIntegrationTest .
refactor ReplicaPosition class to improve code organization to enhance maintainability and readability of the code
server : fix delay in network usage stats update task
updated interpolators to use constants for FINAL _ FRAME and INSTANT to improve code readability and maintainability by reducing duplication
updated swipe length calculation in Background . java to improve UI responsiveness based on display density
added a new module - info . java file for the Jetty HTTP3 server module to define module dependencies and exports for better encapsulation
updated JSON handling to handle null values and replaced string literals with constants for JSON objects to improve code readability and maintainability by using named constants
removed unnecessary parentheses in Context initialization to improve code readability and maintainability
[ hotfix ] [ checkpointing ] fix default value of checkpointable _ failure _ number
refactor ` reportInnerClassReferences ` method to accept ` Element ` instead of ` TypeElement ` to improve clarity and functionality by distinguishing between class
updated command string formatting in TimestampCheck . java to improve readability of command output
replaced FluentIterable with Java Streams for file listing to improve code readability and reduce boilerplate code
fix ( service ) : allow register to be disable by default
[ xabber ] do n ' t close all session when security otr mode be disable .
added outline size , transparency , and transparency properties to PreviewProperty and updated renderProcessing method to include outline size , transparency , and color properties to
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added false and true flags to the Win32FontManager class to enhance font management functionality in the application
added null check for the variable ` v ` before visiting it in ` TreeVisitor . java ` to avoid potential NullPointerException when ` v ` is
fix error handling policy in jdtcompiler when there be no classpath
added content and text anchor properties with their respective getters and setters in LabelBlock . java to enhance label rendering capabilities by allowing customizable alignment
refactor mmm Class . java and ppp Parameter . java files to improve code organization and maintainability
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
refactor network interface handling to use Boolean instead of boolean to improve null safety and avoid potential NullPointerExceptions
updated the ` fromRfc1123DateString ` method to accept a ` Locale ` parameter to ensure consistent date formatting across different locales
fix test that fail on window due to miss file extension
nifi - 145 . add outputnohits property to abstractjsonqueryelasticsearch to control whether to output no hit for a new query
remove aggregationRatio parameter from updatequota methods to simplify code and improve performance by eliminating unnecessary calculations
refactor switch - case structure in Election . java for improved readability to enhance code clarity and maintainability
[ java ] remove uncheckrun from readfilesp / streamfilesp / drainwatcherevents / drainwatcherevents / drainwatcherevents ( #
refactor widget handling logic in PageChangeListener . java to improve clarity and efficiency to enhance maintainability and readability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` FileSharingRecord ` classes , and
added a try - catch block around the unregisterInvalidatedSessions ( ) method call to handle potential exceptions during session management
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the message from " reachable = false " to " not reachable " in HueLightHandler . java to clarify that the light is not reachable
add isloading ( ) method to fmlclienthandler , and add a gamesettings . isloading ( ) method to check if the fml client be
add unit ` ` thousands ' ' and ` ` mil ' ' to unit string in ui and blockinventory
refactor MessagePackParser to handle BYTES and STRING types more effectively to improve type safety and provide clearer error handling for invalid types
added parameterized test for querying with reserved words as identifiers in HqlQueryTransformerTests . java and JpqlQueryTransformerTests . java to
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct serialization and deserialization of nested maps in Gson
[ fix ] geometryutils . getquadraticcurve ( ) do n ' t respect offset .
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code readability and maintainability by reducing redundancy
added error handling for empty TestPlan in StandardJMeterEngine . java to ensure proper termination when no TestPlan is found
updated method names from " dbmsName " , " schemaName " , " tableName " , " schemaName " , " schemaName " ,
modified the handling of ` argIdent ` to include a null check for ` type ` or ` isNonStrictModeIdent ` to improve robustness
updated the default protocol setting in JettyHttpComponent9 to use the server ' s protocol instead of a hardcoded value to ensure compatibility with
set default value of displayVolume to true in VolumeVO . java to enable volume display functionality by default
updated version handling in JavahTask . java and added a new VersionTest . java file to improve versioning flexibility and provide more informative messages
refactor condition checks in ChangeLogParameters . java to improve clarity and handle global change log parameters more effectively to enhance code readability and maintainability
changed log level from warn to debug in JtaTransactionManager . java to improve logging granularity for better debugging
skip setoperationtest on oracle due to bug in basicformatterimpl
removed redundant calls to startHandshake ( ) and setSoTimeout ( ) in mmm Connection . java and ppp Connection . java to streamline the handshake process
updated status bar size calculations in HomeFragment , DMFragment , ListFragment , MentionsFragment , and MentionsFragment to account for
change the default value of the CHA option from false to true in EspressoOptions . java and make the class final in DefaultClass
http : / / issues . apache . org / jira / browse / amq - 4892 - add debug log for thread context class loader
refactor test methods in JodaTimeRangeRandomizersTest to use AssertJ assertions instead of static imports to improve code readability and maintain
updated resource handling for jakarta and webapp versions in WebDescriptor . java to ensure compatibility with Servlet 5.0 and improve resource management
fix readiness . isready ( ) : add node readiness condition to readiness .
replace liveEndpoints with handler . endpoints in StorageProxy . java to ensure compatibility with the handler ' s endpoint collection
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of RPC features and
added security checks in ObjectStreamClass and ObjectStreamField classes to ensure package access checks are performed only when security manager is present
modified methods in Utils . java and changed access modifier of UGSCommandCount in XLCDCommunicator . java to enhance encapsulation
refactor DefaultMetricsTagProvider to use a HashMap for storing tags instead of ImmutableMap to improve code readability and maintainability by using a mutable map
added ` MockBrowserTest . class ` to the suite in ` ClientDriverSuite . java ` to ensure proper testing of the ` MockBrowserTest
change default logging level from OFF to ERROR in mmm Launcher . java and ppp Launcher . java to improve user experience by providing a more
made several fields final in IconNormalizer . java to enforce immutability and improve code readability
added a boolean flag ` firstCallPrepareDo ` and modified the ` invokePrefixMethod ` method to handle it based on the ` firstCallPrepare
refactor showWorkspace and hideAppsCustomizeHelper methods to improve clarity and functionality to enhance code readability and maintainability by simplifying method
added @ Singleton annotation to AuthWithStoreFeature . java and removed unnecessary asEagerSingleton ( ) calls in Auth . java to improve dependency management and
added a boolean parameter ` ignoreInvisibleAssociations ` to the ` incomingAssociations ` method and updated the conditional logic for handling invisible associations to
server : fix npe when remove a pod from the capacity table
updated command instructions in ProfileServlet . java for clarity to enhance user experience by providing clearer instructions on async profiling functionality
swagger - v3 : add support for ` ` required ' ' flag also to ref field
rename classes from " CasCoreConfiguration " to " CasCoreConfigurationAutoConfiguration " across multiple files to improve clarity and consistency in naming convention
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future updates
updated UUID generation and unique identifier formatting in ConfigStore . java and added a new test case in CommonSetup . java to improve clarity of unique identifiers
added picture handling logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper image rendering when a picture is present
updated compaction descriptions in HiveConf . java to clarify compaction behavior for insert - only tables to improve clarity and understanding of compaction behavior
added a null check for the storage path in the waitingToSend state condition to ensure that the operation only proceeds when there is a valid storage path
refactor resize threshold checks into a new ` checkResize ( ) ` method across multiple hash table classes to improve code readability and maintainability by
refactor LDAPConnectionService class for improved readability to enhance maintainability and facilitate future updates
deprecated the @ XmlAttribute annotation in AggregateDefinition . java to indicate that the attribute should no longer be required and should no longer be used
added debug tracing log statements in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to improve debugging capabilities in the application
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated assertions in TestMultiSearcher to reference hits2 and hits3 instead of hits to ensure tests accurately reflect the expected lengths of hits and hits
added a new file ` LucenePackage . java ` to the ` org . apache . lucene ` package to provide a way to access the Lucene package
corrected the calculation of sizeInBytes in RAMDirectory . java to correctly account for negative size values to ensure accurate size adjustment based on the
add estimation for aggregation evaluators , and add estimation for the bloomkfilter
added a null check for the drawerToggle object before animating to avoid potential NullPointerExceptions during animation
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress warnings related to unused Subject parameter
added logic to conditionally scan classpaths based on override and system class loaders to enhance flexibility in class loading behavior based on classloader overrides and
[ msbib ] fix msbib export format test for corporate module
added a method to cancel core recovery when ZooKeeper is aware and modified log message formatting to improve code readability and ensure proper resource management during shutdown
replaced occurrences of ` System . currentTimeMillis ( ) ` with ` currentTimeMillis ( ) ` and added a new method ` currentTimeMillis ( ) `
removed debug print statements and modified conditional logic in RepoEditView . java to improve code readability and maintainability by simplifying condition checks
updated connection parameter descriptions in PGProperty . java and related classes to improve clarity and consistency in the startup message and database connection handling
added trust resolver , role hierarchy , and permission evaluator configurations to the SecurityExpressionExtension class to enhance security configuration by allowing additional fields to be set
added a check to set exponentSize to primeSize if it is zero to ensure exponentSize is correctly set based on primeSize
updated file operations to use the getUsableSpace method directly instead of creating a new File object to improve code readability and maintainability by
updated the combine method in DistinctSqlAggregation to handle multiple values instead of a single delegate to ensure all values are accumulated before accumulation
added a test method to verify the execution of post - login activities during user authentication to ensure that the user service correctly executes login activities upon successful
make extractorspanishstrippedverb a constructor , so that it can be use from an argument .
removed unnecessary conditional checks in CharArraySet . java and simplified the contains method in TestCharArraySet . java to streamline code and improve readability
[ java ] fix checkstyle violation in muxerwrapper .
refactor JsBundleGenrule and related tests to use AndroidPackageable instead of JsBundleAndroid to improve code clarity and maintainability by
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4949 : fix
updated the case name from " Logical Analyzer " to " Logic Analyzer " and modified drawable resource references accordingly to improve clarity and consistency in
added instanceClassName and instanceClass variables to manage vector instantiation to improve efficiency by avoiding redundant instantiation of the Vector class
removed the call to syncMetaLeader ( ) in CMManager . java to streamline the synchronization process by eliminating unnecessary synchronization
[ # 718 ] instructor : feedback question : fix issue with miss response
added TestLoggingExtension import and annotation to DiagramRendererTest to enable logging functionality for better debugging and monitoring
updated the ` findProperty ` method to include a ` mapUnderscoreToCamelCase ` parameter and adjusted property name handling accordingly to enhance property mapping functionality by
added a new device type VIOMI _ WATERHEATER _ E1 to MiIoDevices . java to support the integration of
replaced direct calls to ` getSslSessionData ( ) ` with a single instance of ` SslSessionData ` to improve code readability and
added a new file ` CreateNewSpreadsheet . java ` to demonstrate the use of ` XSSFWorkbook ` and ` XSSFClientAnchor `
replaced ` Duration ` with ` long timeToLive ` in ` CacheProperties ` and updated related methods in ` RedisCacheConfiguration ` to improve clarity
updated LauncherBackupHelper and LauncherModel to use CONTENT _ URI _ NO _ NOTIFICATION for content URIs to improve user experience by avoiding
updated wiremock version from 2.14 . 0 to 2.17 . 2 in SwaggerResolveTest . java to ensure compatibility with the latest features and
replaced ` lucidaFontName ` synchronization with ` this ` synchronization in ` SunFontManager . java ` to ensure thread safety when accessing
added a condition to check if the character ' < ' is equal to 1 in DocClassUtil . java to ensure proper handling of special characters in
removed the ` String . format ` method from the ` getString ` method in ` Workspace . java ` to simplify the code by directly returning the string
added a check for validation errors in ValidateCommandStep . java to provide user feedback when no validation errors are found
refactor IntegrationTestContextLoader to utilize DefaultResourceLoader and FileSystemResourceLoader for web application context management to improve resource loading efficiency and ensure correct context context
updated method calls and variable names from ` getResponderAt ` to ` getComponentAt ` in multiple classes to improve clarity and consistency in component retrieval
updated conditional check for UUID type in RamlType . java to improve code readability and maintainability
added a new ` ClientStat ` class and updated ` StatsService ` and ` DefaultStatsService ` to use ` String ` instead of ` Long
updated the ` expression ` assignment in ` CellContentConverter . java ` to use a new newline character to ensure proper formatting and formatting of the
updated regex patterns in SeleneseTestCase . java for improved regex matching and output formatting to enhance accuracy of glob transformations by including newline characters
mondrian : fix typo in mondrianproperties javadoc
added thread dump handling and improved launcher permission checks in CustomLauncherTest . java to enhance debugging capabilities and ensure accurate permission checks during process startup
removed the test method from TumblrRipperTest . java to streamline the test by eliminating unnecessary test cases
added a condition to check if the symbol has a slot for the storeType before converting it to ensure conversion only occurs when there is a available slot
[ java ] do n ' t initialize data source when there ' s no load position .
refactor ` BaseLockFactoryTestCase ` to utilize ` PrintStreamInfoStream ` and replace ` IndexWriterConfig ` with ` IndexWriterConfig `
tika - 358 : add support for dynamic service loader in tika - config . xml and add a dummyparser . xml .
added package - info compatibility checks and refactored generic type declarations in DocLint . java and DocLintTester . java to improve code clarity and
added a new constant ` IMPORT _ CMD ` in ` DataImporterHandler ` and updated the conditional check in ` DataImporter ` to include
added a test to ensure that inner classes do not modify if the ignoreDefinition flag is set to true to ensure that inner classes are not modified when
removed unused import of android . util . Log in JettyService . java to clean up the code and improve readability
modified the ` checkItemPlacement ` method to include an ` ArrayList < Long > workspaceScreens ` parameter and updated related logic to improve item placement
simonstewart : add a new / quitquit servlet to kill the jvm
fix ( refactor ) : fix npe in llrealtimesegmentdatamanager
added a check to skip processing for " Teredo " devices on Windows to skip processing for Teredo devices that are not in the " Windows "
add contact dialog : do n ' t show error dialog if contact be not connect
updated the registration of the USER _ DETAILS _ SERVICE _ FACTORY bean to use BeanComponentDefinition instead of registering it directly to improve
updated the drawBitmap method call to use null parameters instead of left and top parameters to improve flexibility in rendering bitmaps for better visual consistency
[ te ] fix minor typo in Meitrack and Totem protocols .
changed access modifiers of ` getFontPath ` methods in ` SunFontManager ` and ` X11FontManager ` to enhance encapsulation and
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods should no longer be used and may be removed in
[ hotfix ] [ test ] fix test failure in clientmapstoretest
added a configuration option to keep empty sentences in the DocumentPreprocessor and MaxentTagger classes to control sentence processing behavior based on user preference
refactor createArtifactSubdirectory method to return a boolean indicating success to improve error handling and provide clearer error messages for directory creation failures
removed the ` IDELazyTreeLoader ` class and updated ` setupWithProject ` method to return ` No _ MODULE _ COMPILER
added null check for answer in DirectAgentAttache . java to ensure that a valid answer is returned before processing
modified the ` sendEmail ` method to throw ` MessagingException ` to improve error handling and logging for email sending failures
fix npes in obsidian pipe when item be n ' t contain
updated DateFormatEvaluator and FileListEntityProcessor to accept a Locale parameter and modified test cases accordingly to improve locale handling and ensure consistent date formatting across different
added a boolean flag ` includeDecals ` to the ` StorageOptions ` class and integrated it into the ` StorageOptionChooser ` class to
updated the ` generateDocumentation ` method to include a null parameter and added a suppression warning in the ` getImplementedDatabases ` method to
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to improve performance logging functionality and enhance test assertions to enhance performance logging accuracy and ensure accurate
updated log messages in SolrIndexConfig and DocExpirationUpdateProcessorFactory for consistency to improve clarity and accuracy of log messages
updated the class file version check in ignoreRecordAttribute . java to include the major version to ensure compatibility with the latest Java features and fixes
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP password authentication functionality to ensure proper handling and retrieval of user attributes in the LDAP
replaced ` OrcInputFormat ` with ` BasicStatsNoJobTask ` and updated the condition in ` TaskCompiler . java ` to improve code clarity
fix an npe in saveall when reload on save
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
fix # 1711 : fix informer reconnection issue ( # 1711 )
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance functionality to support dynamic number column handling
added null checks for groupId , artifactId , and getVersion in RawPom . java to ensure that null values are properly handled and prevent potential NullPointerException
updated API assignment to handle null apiInfo case to ensure safe access to the api variable when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added debug logging and disposal methods in PhotoPanel and FlameRenderer classes to improve texture management and resource management during rendering
fix an issue with the menu item when there be no local variable in the method editor .
modified conditional checks in CSSParser . java to ensure index bounds before processing to prevent potential ArrayIndexOutOfBoundsException and improve code robustness
uiservice : make the default look and feel a little nicer by default
updated SQL query in HostRoleCommandDAO to remove unnecessary ' this ' reference to improve code readability and maintainability by removing unnecessary ' this '
updated LJ1200Message . java to replace F5 _ UNKNOWN with F5 _ TRANSPONDER _ TEST _ REPLY
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe detection logic
replaced HostDatabase with ColorStorage in ColorsActivity to utilize ColorStorage for better color management functionality
refactor String class to improve code readability to enhance maintainability and facilitate future updates
removed unused imports and initialized logger in multiple classes to improve code clarity and maintainability by eliminating unnecessary dependencies
added a method to retrieve global entries in MapGlobalResolver to enhance functionality by providing access to global entries from the map
added multiple assertions to the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method behaves
test : migrate cufiltertest to junit 5 ( # 4458 )
updated classpath appending to use the system ' s path separator to ensure compatibility across different operating systems by using the system ' s path separator
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow external access to the method without needing an instance variable
updated field retrieval methods in InheritanceTest . java and TestUtil . java to ensure proper field presence checks for properties in the metamodel
pdfbox - 4892 : remove conf parameter from outlink constructor
removed the ` LexicalContext ` parameter from several methods in the ` Lower ` class to simplify method signatures and improve code readability
updated the ` UseLambdaForFunctionalInterface ` to include ` withModifiers ( Collections . emptyList ( ) ) ` and modified the ` TypesInUse
removed the appendClassSelector method from the classFilesets addition in TestNGAntTask . java to simplify the code by directly adding the file set
removed an unsupported check for aggregate input in HiveCardinalityPreservingJoinOptimization . java to streamline the optimization process by eliminating unnecessary debug logging
add a registry pool to the mapping so that it can be load from the active registry .
corrected the assignment order of x3 and y3 in the Intersector class to ensure proper functionality of the intersection calculations
[ java ] add default implementation for messagedecoder flyweight default method .
replaced hardcoded Elasticsearch version strings with constants and added a new test method for client cluster health to ensure compatibility with the current ELASTICSEARCH
fix memory leak in peermessage . parse ( ) .
added cluster version identification and updated related methods in ClusterDefinition and GSInstallerClusterProvider classes to support versioning and improve cluster configuration management
camel - 14263 : camel - ftp should use source code generate configurer to avoid reflection configuration .
[ zeppelin - 2576 ] fix interpreter setting error when dependency can not be load .
added a conditional check to ensure that no local variables are reserved for DCEedVars in the code generation process to ensure that only reserved local variables
added a conditional check to return early if the basic constraints are - 2 in ForwardBuilder . java and created a new class BuildEEBasicConstraints .
added an initialization method to JdbcPostgresqlDAO to ensure values with the same time are upserted after the database connection is established
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 64487 - websocket -
lucene - 145 : remove unnecessary variable in segmentreader . undeleteall ( ) and add a test for it
added null checks for scopes in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to improve robustness by preventing potential NullPointerException
added null check for orderBy before adding it to expression and explanation to prevent potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t allow back - up snapshot in kvm when vm be in back - up state
added debug logging for the initialization of Log4j in HiveServer2 . java to improve visibility into the initialization process for better debugging
added a check to ensure the number of tasks exists before accessing the first element to avoid potential NullPointerExceptions during asset loading
change the return type of deletenode to boolean and add error handling in openpgppubsubutil . deletenode
add some comment and fix some typo in relationentity
added checks for empty resultString in Code128Reader and Code39Reader , and implemented image null check in FalsePositivesBlackBoxTestCase to ensure
replaced TreeSet with LinkedHashSet for cipher suites in SSLContextImpl . java to ensure consistent iteration order for cipher suites
updated character validation logic in Escaper . java to include a new method to improve code readability and maintainability by encapsulating character validation
updated SqlSource to handle CharSequence return types and changed return type to StringBuilder in SqlProviderTest to improve type safety and simplify SQL source creation logic
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code clarity and prevent potential NullPointerExceptions
added a new method ` getLayoutTransitionOffsetForPage ` in ` PagedView ` to calculate the layout transition offset for a specific page index to
updated variable names and refactored processing logic in JavaTemplate . java to improve clarity and functionality to enhance code readability and maintainability while ensuring
added setAccessible ( true ) method to WidgetInterceptor to allow access to the method for better encapsulation
added a condition to check if the field ' s default value is not " database . server . id " before setting literal initializers to ensure proper
updated Firefox version from " Intel Mac OS X 10.7 " to " AppleWebKit / 537 . 36 " in AbstractRipper
added a web interface menu item to display a URL using the server ' s host to enhance user experience by providing easy access to the server ' s
refactor HandleGetter to improve the handling of inner statements and add a new LocalDeclaration and SingleNameReference to enhance code clarity and maintainability by
added error handling for record creation in EncryptedSlideShow . java to improve robustness by preventing application crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ checkpointing ] add more debug info to queue and checkpointio
added a call to ` loadBattlePassManager ( ) ` before calling ` loadBattlePassManager ( ) ` to avoid null pointer issues
updated SSHD version from 1.0 . 0 to 1.0 . 0 and modified SSH connection parameters to ensure compatibility with the latest SSH version and enhance security options
added a bigObject array and a call to System . gc ( ) in ThresholdTest . java to force an initial full - garbage collection to
updated conditional checks in StdErrLog . java and added new debug statements in StdErrLogTest . java to ensure proper logging behavior and improve test
fixed - rremoteservice . getremoteserivce ( ) method do n ' t return a redissonremoteservice instance . # 42
added ` isSelected ( ) ` and ` setSelected ( boolean ) ` methods to ` MultiButton ` , ` RadioButton ` , and ` CheckBox `
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align playback functionality with the new navigation
fixed checkstyle violation in brokercontroller
fix : do n ' t wait for redis health indicator to complete
updated background color handling in ProgramGridCell . java and modified getBrandColor method in Utils . java to accept resource IDs to improve theme management
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and
added multiple type adapter registrations to the ToolingApiLauncher class to improve code clarity and maintainability by reducing redundancy
updated the values in TestPayloadCheckQuery . java from ' 55 ' to ' 955 ' in TestPayloadCheckQuery . java to correct the
modified the ` putChar ` method in ` ConsoleReader ` and added a new test for reading lines with masks in ` ConsoleReaderTest `
added user identification and command execution logging in BaseCommand . java to improve user feedback during command execution
move modulesupport and exportingclassloader from test package to api
[ hotfix ] [ runtime ] remove unused code in slotsharinggroup
[ streamex ] disable java 8 in streamexinternals if emulatejava8 be true .
updated texture files in DecalTest . java , MusicTest . java , and SimpleDecalTest . java to replace " wheel . ogg
removed duplicate registration and unregistration of mCloseSystemDialogsReceiver in Launcher . java to improve code clarity and ensure proper receiver management
updated import statements in HostsRemovedEvent . java for consistency to improve code readability and maintainability
added ` allowIntrospection ` property and modified client introspection logic in ` ClientDetailsEntity ` , ` ChainedTokenGranter ` , ` 
replaced direct calls to ` write ( ) ` with ` write ( htmlEncode ( ) ) ` in ` HtmlSessionInformationsReport . java `
added new link elements for PhrasePrefixQuery and SpanQuery in Query . java to improve documentation for phrase and span queries in the application
replaced ` size ( ) = = 0 ` calls with ` isEmpty ( ) ` in ` CommentsInserter ` and ` CommentsParser `
refactored the ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` methods to improve clarity and
changed method parameter types from ` A ` to ` Object ` in ` AbstractAssert ` , ` Assert ` , ` DateAssert ` , and `
updated the package and type of the ThrowingFunction interface from ` lambda ` to ` exception ` to improve type safety and clarity in the codebase
refactor PreferenceManager methods to use instance methods instead of static methods to improve code readability and maintainability by centralizing preference management
fix ( prettyprinter ) : improve initialization of final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to ensure proper instantiation of BitmapDrawable using Robolectric ' s
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and removed the ` c ` variable from ` DutchStemmer `
updated the drawable resource for the current page indicator from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to improve
added a volatile variable ` reinvocations ` and updated log messages in ` BasicInvocation . java ` to track the number of reinvocations processed
updated the calculation of topPadding to use ` getInnerHeight ( ) ` instead of ` getHeight ( ) ` in ` DefaultLookAndFeel . java `
added a break statement in the Recognize . java file to ensure proper termination of a loop execution
added haptic feedback functionality for the lock home screen in multiple UI components to enhance user experience by providing tactile feedback when the home screen
added handling for STRING and FLOAT8 cell types in ExcelBatchReader and created a corresponding test in TestExcelFormat to improve formula processing and ensure correct
fixed bug 1410606 - immutablefield no longer report false positive for assignment in anonymous inner class method .
added a new ` userAgent ` field to ` CommaFeedConfiguration ` and modified the user agent retrieval logic in ` HttpGetter ` to ensure the
added ` required = true ` to the ` @ XmlAttribute ` annotation in ` PropertyDefinition ` , ` BarcodeDataFormat ` , and ` Base
changed log level from info to debug for file not found messages to reduce log verbosity and improve performance by reducing log verbosity
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use OfflinePlayer ' s getUniqueID method instead of checking the server version directly to improve
gracefully handle case where no route can be find from resource .
add a ` ` vertexcolor ' ' property to pshape3d to allow customization of vertex color .
added a new boolean parameter ` isPkColumnFiltered ` and updated related logic in ` printForeignKeys ` and ` printForeignKeys ` methods to
removed ShadowMatrix extraction from ShadowMotionEvent . java to simplify code by directly accessing matrix values
removed the import of MetaRules from the com . facebook . buck . parser . api package to simplify package structure and improve code organization
refactor GroovyEngine to simplify class definition handling and improve clarity to enhance code readability and maintainability by simplifying the logic
[ hawtio - plugin ] move the brandingservlet into the hawtio - plugin package .
removed duplicate println statements in NativeCodeGenerator . java to improve code readability and maintainability
replaced multiple calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with a single call to ` fireChangeEvent ( )
added a new test method for verifying the cause of exceptions in ThrowableAssert _ hasCause _ Test . java to ensure proper exception handling and validation
updated variable assignments for flatten name and package name in AutomaticDependencies . java to improve clarity and maintainability of the code
changed the condition from ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to ensure proper scope handling
simonstewart : add test for set profile in firefox option and capability
add a route description property to make it easy to set the route description .
refactor JavacTreeMaker to improve code structure to enhance maintainability and readability of the code
added a method to set the weight of an edge in ImporterCSV . java to enhance edge processing by allowing dynamic weight adjustments
[ bugfix ] fix calculation of tariff cost per hour for usage record
added a new field ` adsrc ` and ` adsrc ` to the ` DatabaseMetaData ` query and updated the ` tuple [ 12 ] `
fix npe in sentimentannotator when binarized sentence be not build by parser
added detailed user information to the toString method of the User class to improve debugging by providing more context about the user ' s state
updated body extraction logic in MessageHelper . java to handle null bodies to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to execution .
change the method parameter name from ' subJID ' to ' owner ' in RosterAccess . java to improve clarity and functionality of group visibility
added Maven test classpath reference to AbstractJRubyMojo and removed unchecked suppress warnings in CucumberMojo to enhance project configuration and improve code clarity
updated method handle assertions in MethodHandleImpl . java and added a new userMethod method in MethodHandlesTest . java to improve code clarity and ensure correct
added imports for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , and LegacyHTML
updated width and height comparisons in URLImage . java from ` > ` to ` ! = ` to ensure accurate image size validation
added a condition to check if the name ends with " . class " and does not start with " META - INF / " before processing class
refactor createImageToFileSystem and createImageToStorage methods to use final parameters and schedule background tasks based on the Edt type to improve code
updated assertions in StackWalkerTest to use a specific expected value based on VersionCheck to ensure compatibility with versions 22 and above in tests
changed the access modifier of the addViewportJob method from protected to public to allow external classes to access the addViewportJob method
removed the ` partitions ` parameter from the ` buildFlow ` method and related calls to simplify the code and improve readability by eliminating unnecessary parameters
updated server shutdown settings and running logic in TestDatabase . java to ensure proper server behavior during application shutdown
added null and empty checks in NodePathsConvertOperator and modified child iteration logic in SchemaQueryMergeOperator to improve robustness and prevent potential NullPointerException
add gettotalharvestingtime ( ) to callinfoframe . display the total harvest time of ice and sip call .
updated font sizes and parameters in ParticleEditor . java for improved visual presentation to enhance readability and maintainability of the code
added Hadoop environment configuration handling in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog240Test . java to ensure
added a transparent background color and set it in SvgViewerFactory to enhance visual appearance by providing a transparent background
removed the minimum SDK requirement from the ShadowKeyguardManagerTest and ShadowKeyguardManager classes to simplify the code by eliminating unnecessary configuration settings
updated the method signature of ` containsExactly ` to accept varargs instead of rest to enhance flexibility by allowing variable argument handling
updated Bucket4jFilterFunctions to include capacity and refillGreedy parameters and improved bucket retrieval logic to enhance bandwidth management and error handling
added GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance language analysis capabilities and improve text processing functionality
added a new ` isMaterializedView ` flag and modified the ` Generator ` and ` SemanticAnalyzer ` classes to include post - execution hooks to
added error handling for NoClassDefFoundError in REngine . java to ensure proper handling of cases where no class definitions are found
refactor TraceWebFilter to use SpanAndScope instead of Span to enhance span management and ensure proper scope management
updated exception handling in AbstractUpdateCommandStep to check for null causes before retrieving the message to prevent potential NullPointerException when the cause is null
updated SolrServerException constructor to include the base URL as a parameter to improve error handling by providing more context in exception messages
modified the logic for setting and retrieving the landscape state in HSSFPrintSetup . java to ensure correct behavior based on the state of the print
modified the return statement to handle null values in JavaVoidObjectInspector to ensure proper handling of null values to avoid potential NullPointerExceptions
added validation to check for invalid argument names to ensure that invalid argument names do not lead to runtime errors
added in - memory background location listener handling in AndroidLocationPlayServiceManager to improve location updates management and ensure proper background location listener integration
changed the condition from ` ! = ` to ` = = ` in ` MeshBuilder . java ` to ensure proper handling of primitive types in the
trufflestring : do n ' t use array . equals ( ) if the array be empty .
added a method to set the command list in the ComboBox to ensure the ComboBox reflects the current command list state
nifi - 13232 : fix filenames with forward / backward slash issue in tls client .
updated ` zkcli . sh - cmd ` calls to use ` localhost : 9983 - cmd ` with different port values to ensure consistent port
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` . getStatus ( ) ` for consistency to
added a conditional check for remote grpc status before posting the console event to ensure that the event is only posted when the remote grpc status is OK
refactor method signatures in multiple classes for consistency to improve code readability and maintainability
add entityid to tick if it ' s not already add to the world . close # 889
added a method to return a string representation of error codes in GLSurfaceViewAPI18 . java to improve error handling by providing specific error messages for
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 499 : add
updated the server URI handling in RFC2616BaseTest . java to ensure tests point to the correct host address in the response
added a method call to addToHelperList in Construction . java to enhance the functionality of the construction helper list
added a condition to skip the first character of the escape sequence in GlyphLayout . java to ensure proper handling of cases when the length is - 2
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security management and improve code readability
refactor file synchronization logic to handle null folder and folder cases to improve robustness and prevent potential NullPointerExceptions during file synchronization
added null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when loading the service loader
removed debug logging statement from BarrowmanCalculator . java and adjusted deltap calculation in TubeCalc . java to improve code cleanliness and
updated column handling logic in TimelineControllerImpl to differentiate between Node and Edge tables to improve code clarity and ensure proper column addition for different node types
added a method to register extra components in BaseBrokerStarter to enhance the functionality of the BaseBrokerStarter class
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` and modified ` QueryUtil . java
peergroup : do n ' t check for versionmessage . iswitnesssupported ( ) and do n ' t support witness .
fix the builder not reliably reliably reliably
updated config node configuration to use a Supplier for retry attempts and schema max retry attempts to enhance flexibility in managing retry attempts and schema retry attempts
updated multiple Java files for consistency and clarity to improve code readability and maintainability
added a check for the ManagedService annotation before unregistering and unregistering the object to ensure JMXHelper is only unregistered when the ManagedService
tika - 2576 : fix for detect non - unicode entry name .
c2 : testsplitthruphidivmod and add testsplitthruphidivmod and testsplitthruphidivmod
added methods to lookup generic interfaces and superclasses in TemplateRegistry to improve type handling and support for parameterized types
updated the initial capacity of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for better performance
added comments to the languagesExcluded array in PlayerSettingsScreen . java to clarify language exclusions to improve code readability and maintainability by clarifying
modified byte array initialization and processing logic in TransferCompletionHandler . java to ensure that bytes do not exceed 8192 to avoid potential ArrayIndexOutOfBoundsException when
move windowfocusevent listener from addwindowfocus to addWindowListener in selectavatarmenu
refactor error handling in SemanticAnalyzer to check for null source nodes before throwing an exception to improve code robustness by preventing potential NullPointerExceptions
added scaling and centering logic for the aabb in SkeletonRenderer . java to ensure the aabb is centered within the specified scale
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide a
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the application context
removed the getAccount ( ) method from UserListItem . java to simplify the code by eliminating unnecessary method
added unit tests for installing a package with default process name and improved null handling in ShadowPackageManager and ShadowApplicationPackageManager to ensure proper functionality of package manager
refactor AvailableSettings class to improve code organization to enhance maintainability and readability of the code
added constructors and methods for TransactionCapsule and ReceiptCapsule in TransactionTrace . java to initialize TransactionCapsule instances and
add option to shuffle member list by default for client .
replaced Text with CrawlDatum in SegmentReader . java to improve data handling by utilizing CrawlDatum instead of Text
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future modifications
updated fetch size handling in QueryProcessExecutor to use ThreadLocal instead of a hardcoded value to improve performance by avoiding repeated initialization of fetchSize
hive - 13232 : fix trunc ( ) error message ( ashutosh chauhan via ashutosh chauhan )
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialized the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure that title defaults to an empty string when it
added handling for empty response bodies in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure proper response behavior when no body is provided
[ runtime ] deprecate the old embeddedserverinstance interface in favor of the new one
refactored macadapter to make it easy to register event on window .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity and consistency in
added a return statement to the toEnum method in HandlerLibrary . java to ensure proper handling of enum types during enum conversion
fix : make hideunprivilegedobjects final for pgconnection
change log level from info to fine in ThreadedAcousticScorer . java and add assert in AudioDataSourcesTest . java to
added a conditional check for AndroidQ and saved video URLs in IoUtilKotlin to ensure compatibility with Android Q and save video URLs
fix serialization of service task variable with deserializedObject
refactor various classes related to authentication and service to improve code organization and maintainability
simplified logger instance retrieval by using computeIfAbsent to improve code readability and maintainability
deleted the DataOutputOutputStream class and updated references in HbaseObjectWritableFor96Migration to remove unused code to streamline the codebase
updated transaction IDs in TestAcidOnTez . java from " 1 " to " 2 " and added a new column to the
changed log level from info to debug for enhanced class logging to reduce log verbosity and improve performance during development
added a method to retrieve the default provider name from the Platform class and updated OpenSSLProvider to use this method to improve clarity and consistency in provider
added Captor annotation processing in MockitoBeforeTestNGMethod . java to enhance field processing by processing annotated fields annotated with the Captor annotation
added error handling for missing test cases in TestSuiteBuilder . java to improve user feedback when test cases are not found
updated import statements and modified method parameters in GroovyAutoComplete . java and GroovyLanguage . java to improve code readability and ensure proper prefix processing
use graphhopperosm instead of graphhopper for import .
simonstewart : do n ' t retry the client if the server do n ' t support it .
removed the ` final ` modifier from ` mHideSysUiScrim ` and added top shadow visibility logic in ` SysUiScrim ` to
added an ` enqueue ` method to the ` Call ` class and modified the cancellation logic in ` OkHttpCall ` to ensure proper execution order and
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability of swipe detection logic
modified the RequestMatcher interface to extend from org . springframework . security . util . matcher . RequestMatcher to ensure compatibility with Spring Security ' s
added a new ` IF ` keyword to the ` DeferredAttr ` class and created a new ` ImplicitLambdaConsideredForApplicability
[ j2kt ] move boxed and devirtualized type test from testboxedanddevirtualizedtypes to testboxingconstructors
added unit tests for device density qualifiers in DeviceConfigTest . java and updated DisplayMetrics handling in DeviceConfig . java to ensure proper display metrics
( chore ) camel - pinot : remove reflection from pluginclassloader . addurl
updated the icon resource in the RootCursor to use mipmap resources instead of a generic logo to improve visual consistency and maintainability of the icon
added content text setting to errorBuilder in FileUploader . java to improve error handling by providing clearer error messages
refactor ConcurrentHashMap to improve concurrency handling to enhance performance and reliability of concurrent access operations
added methods to adapt user trades from AbucoinsFill arrays to UserTrade objects in AbucoinsAdapters and AbucoinsTradeService
modified plot claim logic to return true instead of false to ensure proper handling of plot claims and improve player behavior
simonstewart : enable the htmlunitdriver to run on the ie driver
added support for handling VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY types in database operations
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 640 : fix cookie handling
add synchronization to libfficontext . simpletypemap to avoid race condition
replaced ` Vertx ` with ` ContextInternal ` and updated context validation logic to ensure compatibility with Vert . x thread handling in the Inbound
modified the ` LdapTimeoutTest ` class to include a method for killing server timeouts and updated timeout handling to improve test reliability and ensure proper timeout
updated the usage message from " UniocdeData . txt uniName . dat " to " UnicodeData . txt uniName . dat " to
camel - 14263 : camel - cxf : add inout header to camel - cxf test
refactor multiple UI classes to improve code organization to enhance maintainability and readability of the codebase
added support for handling BoosterSet instances in ComponentAssemblySaver and changed return value from true to false in BoosterSet to improve functionality and
add proxy password support to jabref . java
replaced occurrences of ` MetricsUtil . getInterval ( ) ` with ` MetricsUtil . getInterval ( ) ` for consistency to improve code readability
replaced InternalError with a return statement that indicates support for JEP 359 to simplify error handling by returning false instead of throwing an InternalError
updated logging imports in TestIPCUtil . java for consistency and clarity to improve code readability and maintainability by using standard logging framework
removed chunked transfer handling in NettyRoutingFilter . java to simplify the code by directly using the HttpClientResponse object
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that attributes are reset before processing new data
added a polling period parameter and improved error handling in VerificationAfterDelayImpl and After classes to enhance verification reliability and provide more informative feedback during
added authorization manager configuration and compaction handling to the SemanticAnalyzer and SessionState classes to improve authorization handling and ensure proper session state management during compaction
[ zeppelin - 4071 ] add support for jar file in docker interpreter process
hbase - 26144 fix typo in hbaseadmin . gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to improve
added a try - finally block to release XML content and error handler resources to ensure resources are released properly to prevent memory leaks
release the header buffer in the HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use diamond operator
added null and closed checks before closing the result set to prevent potential NullPointerExceptions when the result set is closed
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and from - 1 to 6 in DerbyDatabase . java to ensure compatibility with the
fixed bug 1190606 - usestringbufferlength no literal no longer report false positive for stringbuffer . toString ( )
removed logging of error messages in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary error logging
refactor createDb method to return a Connection object and close it to improve resource management and ensure proper closure of the database connection
refactor CreateCustomMetric , ListResources , and CreateCustomMetricTest classes to improve code organization and maintainability
hbase - 27119 add option to disable off - peak compaction when compaction be disabled
updated BitstampDepositAddress to handle both " address " and " address " properties correctly and added corresponding JSON test cases to improve error handling and validation
replaced IllegalStateException with response . abort ( new IllegalArgumentException ( " Buffering capacity exceeded " ) ) to improve error handling by providing a clearer
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` in ` ProjectView . java ` to ensure the correct
updated ` InvocationFinishedEvent ` class to implement ` MetricsEvent ` instead of ` Event ` and changed ` operationType ` to ` InvocationType `
updated loop condition to check for multicast support in OptionsTest . java to ensure proper handling of network interfaces that support multicast functionality
refactor check for valid checksums in ChangeSet . java to use a loop to improve code readability and maintainability
added a ` clone ` method to ` BufferedChecksumIndexInput ` that throws an ` UnsupportedOperationException ` to provide a placeholder implementation for cloning the input
replace Math . sqrt ( x * y ) with radius * radius in Circle . java to improve accuracy of circle intersection checks
[ hotfix ] [ network ] fix bug in p25channel . getfrequencyband ( )
replace ` inTapSquare ` and ` inTapSquare ` variables with ` inRectangleWidth ` and ` inRectangleHeight ` and ` inTap
change default _ replicate _ on _ write from true to false to disable replication on write operations
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and implemented date formatting in Util class to enhance functionality by allowing users to
added ` getDelegate ( ) ` method to ` TraceCallable ` and ` TraceRunnable ` classes and corresponding tests in ` TraceCallableTests ` and
updated error handling in FileActivity and added synchronization intent filters in FileDisplayActivity to improve user experience by providing more informative feedback during file synchronization
added a method to handle stream writable operations in ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to improve error
added a boolean parameter to the method call in JavascriptContext . java to enable additional functionality in the method
removed the Align . left parameter from TableCell constructors in BaseTextFormattingHelper . java and TableCell . java to simplify the constructor and
added a new file ` TracingAutoConfiguration . java ` for tracing configuration to enable automatic tracing functionality in the UAA application
added a new Para object and updated the content addition logic in Submissions . java to ensure the first paragraph is included in the submission list
updated the ` getPrunedQueryableSegments ` method to accept a list of queryable segments and adjusted segment retrieval logic to improve the handling of segment
updated test cases in VertxBufferTest . java to improve clarity and maintainability of the test code
msmf : fix issue with extra hyphen in messagesubmissionchunk .
changed the access modifier of the mContext variable from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it instead of ` DataIntegrityViolationException `
[ hotfix ] [ runtime ] return the job completion future in jobcoordinationservice .
refactor ` bitsToHumanReadable ` to ` bytesToHumanReadable ` and replace ` bitsLen ` with ` bytesToHumanReadable ` to
updated MergePolicy initialization in TestUpgradeIndexMergePolicy . java and added a new test method in TestMergeOnFlushMergePolicy . java to simplify
added a conditional check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
[ hotfix ] [ core ] improve error message for multi - project backends
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for loading properties to enhance functionality by allowing the method to accept an additional
added null checks for incoming Fields , TermsEnum , and LeafReader in FilterLeafReader . java to ensure that incoming parameters are not null to
add support for default key size in jcecrmfencryptorbuilder .
replace IOException with IOException message in NetSocketReader and remove redundant constructors in SoftEndOfStreamException to improve error handling by providing clearer error messages
removed unnecessary imports and added @ Inject annotations to multiple classes to streamline dependency management and improve code clarity
updated the expected size in BundledDistributionTest and added assertions for database user attributes in PostgreSQLTest to improve test coverage and ensure accurate
[ hotfix ] add ` ` pipeline . name ' ' option to specify job name
updated scale calculation logic in OverviewState . java to differentiate between two - panel devices to ensure correct scaling based on the device ' s layout dimensions
fix ice plains biome populator to use spruce .
removed DateTimeZone parameter from method signatures in DataUpdateManager and StorageUtils to simplify method signatures and improve code readability
[ java ] add a boolean field to indicate if the type be fully qualify .
fix xhamster ripper to support wmde and wmde .
refactor entity iteration to use a mutable list to improve performance by reusing the entities list
mondrian : fix oracledialect . gettablename ( ) to work with oracle schema
fix a syntax error in the FlutterConsoleFilter class to improve code readability and maintainability
added functionality to select and deselect all files in the FileMenuFilter class to improve user experience by allowing users to select multiple files efficiently
[ java ] fix termoffset calculation in networkpublication .
refactor GuildUpdateOwnerEvent class to improve code readability to enhance maintainability and facilitate future updates
fix player . inportalticks to account for creative .
added support for compressed chart data and adjusted spacing and text color settings in ClusterMonitorTileSkin . java to enhance visual appearance by allowing items to be
refactor ResponseTemplate , TransactionalListCodecTemplate , TransactionalMapCodecTemplate , TransactionalMultiMapCodecTemplate , TransactionalQueueCodecTemplate , TransactionalQueueCodec
changed data types from int to long for length calculations in Base64 . java to ensure proper handling of larger integer values and prevent potential overflow issues
removed unnecessary null check for header in RendererConfiguration to simplify the condition for better readability
vms with custom service offering do n ' t change the disk offering if they do n ' t match
replaced ` Builder ` with ` LimitOrder ` and updated imports in ` HitbtcAdapters . java ` and ` Order . java `
replace idleCount with consecutiveIdleCount for better clarity to improve code readability and maintainability by using more descriptive variable names
updated the service description from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to clarify the purpose of
replaced the variable ` name ` with ` displayName ` for clarity to improve code readability and maintainability
added a condition to check if the preciseExchangeAmount is less than or equal to - 0.0000001 in ParticipateAssetIssueActu
removed the loop condition from FeedUtils . java to streamline the code by eliminating unnecessary iterations
added a test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF parsing functionality to ensure compatibility with
[ calcite - 6092 ] fix cast ( [ calcite - 6092 ] ) test ( calcite - 6092 )
reformatted conditional statement in IDEEditor . java to improve code readability and maintain consistency
added methods to quiet close multiple AutoCloseables in CloseHelper . java to improve resource management by ensuring all AutoCloseable instances are properly closed
updated the positive button text in the RemoveFileDialogFragment to use a string resource to improve user experience by providing a clearer confirmation message
added null checks before drawing images in Pixmap . java to avoid rendering errors when dimensions are zero
replaced ReflectionHelpers with ProtectionDomain and refactored method invocation in UnsafeAccess . java to improve compatibility with Java ' s security framework and enhance
updated the regex pattern in GUIUtil . java for matching FqDN addresses and added unit tests in GUIUtilTest . java to improve regex accuracy
replaced boolean conflict flag with long conflicts in CachedRowSetWriter . java to track the number of conflicts instead of a boolean flag to improve clarity and
update version check to include pubspec . yaml file instead of version string . ( # 633 )
refactor REFERENCE case handling in ReferenceMemory . java to improve readability to enhance code clarity and ensure correct reference assignment logic
updated seed file injection logic in Injector . java to check for existing seed files before adding input paths to improve input handling by skipping non - file
added a condition to hide the original view in FloatingIconView . java to ensure the original view is hidden when hiding the original view
update maxNodes calculation and condition check for maximum trips in DefaultLoopPolicies . java to ensure maxNodes does not exceed maxNodes and adjust the condition
add a warning if the uv coordinate type be not support in combinedtexture .
added error handling for file deletion in EncodeActivity and improved validation checks in SupplementalInfoRetriever , DecodedBitStreamParser , and MatrixUtil
added seek and close methods in TracingConsumer and modified close method in TracingProducer to enhance consumer functionality and ensure proper resource management
updated the query string in HandleDAOImpl to use the correct substring length and set the oldPrefix length in the query to improve the accuracy of the
replaced ` addAll ( collection ) ` with ` addAll ( collection ) ` in ` convertedValsList ` initialization to simplify the code and improve performance
added a deprecated constructor to the AbstractTimer class to indicate that the constructor is outdated and should no longer be used
added a nightly warning dialog for the Universal Gcode Sender version in MainWindow . java to inform users of potential bugs related to night
updated team name handling and added sorting functionality to the getResponsesSortedByRecipient method to improve user feedback by ensuring responses are sorted by team for better
updated the return message in UnnecessaryThrows . java to include ` ` throws ` declarations . ' ' to clarify the purpose of the
deleted ` CacheApplication . java ` and renamed ` cacheObj ` to ` cacheData ` in ` CommonsApplication . java ` to improve code organization
replaced calls to ` realObject . getApplicationContext ( ) . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated RuntimeEnvironment to conditionally update configurations based on SDK version to ensure compatibility with devices running KitKat and above
added a new constant for updating the stack repository update link existence in VersionDefinitionResourceProvider . java and a corresponding test in StackManagerTest . java
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during index processing
added " com . sun . org . apache . xml . internal . resolver . helpers " and " com . sun . org . apache . xml
renamed methods ` save ` and ` persistExecutionContext ` to ` add ` and ` updateExecutionContext ` across multiple classes to improve clarity and consistency in method
added logic to handle LoopExitNode instances in GraphUtil . java to ensure proper input formatting for loop exit nodes
refactor ` SearchAndRecommendationsScrollController ` to use ` WidgetsRecyclerView ` instead of ` RecyclerView ` and add margin calculations to improve layout
added a condition to check if the terminal is supported before proceeding to improve user experience by preventing operations on unsupported terminals
changed ` long ` to ` int ` in ` CloudExitableDirectoryReaderTest ` , ` LBHttpSolrClient ` , and ` 
added a check for session validity in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure that only valid sessions are processed during response commit
refactor column name handling in ChangedIndexChangeGenerator to check for null values before processing to improve code clarity and prevent potential NullPointerExceptions
replaced Vector with ArrayList for buttons and added action listener methods to improve performance and simplify code by using more efficient data structures
updated UserManagerCompat to differentiate between NYC and MARSHMALLOW versions and introduced a new UserManagerCompatVM class to enhance user management
added getDatabaseMajorVersion and getDatabaseMinorVersion methods to MockDatabase , AbstractDatabase , AbstractDatabase , HibernateDatabase , and ReorganizeTableStatement
updated ActionGraphCache to include lastActionGraphAndResolver for better handling of mismatched rules to improve clarity and debugging by providing more context about mismatch
added LockDatabaseDesc and UnlockDatabaseDesc classes with corresponding descriptions for LockDatabase and UnlockDatabase to provide structured representations for LockDatabase and Unlock
refactor RankingUIModel and RankingToolbar to use setter methods instead of direct field assignments to improve code readability and maintainability
added handling for disconnect messages in HandshakeHandler . java and improved logging in NodeImpl . java to enhance disconnection handling and provide clearer logging for
[ iotdb - 4076 ] add test case for set / delete storage group
chore : move document / ai / v1beta1 to documentai / v1beta2 / v1beta1 / protos
refactor variable declaration validation logic to handle ` NamedVariable ` and improve type validation to enhance type safety and provide clearer error messages for missing types
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to enable handling of test execution
replaced specific imports with wildcard imports and updated buffer size checks in CountersManager . java to improve code readability and maintainability by reducing
updated the ` toString ( ) ` method in ` MultiSteps ` and ` SendEmail ` classes to use parameterized logging to improve log readability and
added logic to clone joinKeys from joinDesc if it is not null to ensure that the original array is not modified when the joinKeys are not
added PrincipalResolver to authentication handler registration and updated authentication handler registration to support custom principal resolution for improved authentication handling
updated the ` addSettingsFromFile ` method to accept an additional ` ImmutableList < Path > searchPaths ` parameter to enhance functionality by allowing custom search paths
added ' final ' modifier to several fields in Oracle class to enhance immutability and prevent unintended modifications
[ hotfix ] [ checkpointing ] default to true until rescaling of unaligned checkpoint be complete
[ hotfix ] [ table - planner - blink ] throw unsupportedoperationexception instead of unsupportedoperationexception when query be not valid .
add log option to compiletheworld to make it easy to run test
added a check to throw a CannotDelambaException if lValue is an instance of LocalVariable to ensure that only valid LocalVariable instances are
added support for MySQL ' s timestamp column type in CreateTableGenerator to ensure proper handling of timestamp values in MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper context class loader management during application shutdown
added logic to set the ejection delay when the stageNr is zero in SimulationListHandler . java to ensure proper handling of motor configuration
renamed FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig and updated related test methods to improve clarity and consistency in naming conventions
refactor TransactionUtil2 to improve code readability to enhance maintainability and facilitate future updates
updated the ` validateIssuer ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance issuer resolution flexibility based on
added null check for coll before returning its string representation to improve robustness by preventing potential NullPointerExceptions when coll is null
replace ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in ` TextArea .
added FOREIGN _ DATABASE _ NAME and FOREIGN _ SCHEMA _ NAME constants and methods to manage foreign database and schema
[ java ] change election state to init and throw timeout when fail to join leader bid .
replaced static import of Shadows . shadowOf with a private method Shadow . extract for PackageManager in ShadowActivity and ShadowBluetoothDevice to
added wildcard support and improved error handling in FileSelection . java and TestBugFixes . java to enhance robustness and ensure proper path resolution and
deprecate itemstack . oninventorytick ( ) and replace it with itemstack . onarmortick ( ) .
fix export of jar file with war class prefix
added a null check before invoking invalidateOptionsMenu ( ) in SingleUploadFragment . java to prevent potential NullPointerException when getSherlockActivity ( )
updated widget binding logic to handle options more effectively to improve widget configuration flexibility and prevent potential null pointer exceptions
[ ecobee ] add air quality and air quality information to the sensor thing handler ( # 10277 )
reformatted code in OperationSetServerStoredContactInfoFacebookImpl . java for consistency to improve readability and maintainability of the code
added environment variables for AAPT and AAPT2 in Genrule . java and updated tests in GenruleTest . java to include additional AAPT
only dump access table when truffle branch be enable .
added null check before disposing of message to prevent potential NullPointerException when message is null
made the ` db ` field final in ` TronStoreWithRevoking ` and modified the ` init ` method visibility in ` TxCacheDB
updated log warnings in CoreContainer . java to indicate that log watching is not yet implemented for log4j and the LogWatcher will be disabled when
replaced printStackTrace ( ) calls with fail ( ) and return statements in CategoryPlotTests . java to improve error handling and ensure proper test execution flow
replaced ` ByteArrayOutputStream ` with ` SmallByteArrayOutputStream ` in ` IOSImplementation . java ` and added a new class ` SmallByteArrayOutputStream .
refactor shader attribute to use intmap instead of hashmaps to reduce memory usage
updated database connection settings from " territory = en _ US " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure proper resource cleanup
fix npe when get lastexchangecompletedtimestamp ( ) be null
updated TestHtmlTag . java and TestUseOption . java to include defaultLanguage and added multiple output links in TestUseOption . java to improve
added a condition to check if the result is incomplete and has more than 10 items to ensure that completion only occurs when there are items to complete
updated command - line usage instructions and modified argument handling in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality by using a more de
updated output format handling in SiteSnapshotVariationsTest . java and OutputOptions . java to ensure correct extension is used based on the output format type
updated condition in DeviceProfile . java to check if QSB is disabled before applying minQsbMargin to ensure proper handling of QSB visibility
added ` equals ` and ` hashCode ` methods to ` AnimationList ` class and updated equality checks in ` SceneKey ` and ` GltfModel
added date handling functionality to AbstractGenerator , Generator , HttpGenerator , and modified HttpConnection to utilize this new method to improve date management and ensure
replaced ` Adler32 ` with ` CRC32 ` in the ` Store . java ` file to standardize the code by using a more appropriate
updated the XenHeartBeatInterval configuration to use a default value of null instead of a hardcoded value of " any # of
added a new warning constant for zero area in Warning . java and updated its usage in FinSetCalc . java to improve code clarity and maintainability
[ beam - 12105 ] fix serialization of document metadata in elasticsearchio backend version 2 and 6 .
hhh - 14386 add trunc ( ? , ? ) and trunc ( ? , ? ) function to h2 and oracle
added memory pool error handling in MetricUtils . java and updated expected error keys in MetricUtilsTest . java to improve error reporting and ensure correct gauge
[ java ] add usejavascript parameter to ensuresignedup ( ) .
[ hotfix ] [ runtime ] improve error message in validationtask
[ te ] change backfill url to / replay ( # 11823 )
update PrecompiledContracts . java to return a new data object containing the current proposal number instead of a new one and update the method to include
refactor badge update logic in AllAppsContainerView . java to handle BubbleTextView instances to improve code clarity and ensure proper badge state application
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated comments in ResourceHandlerTest . java and ServletContextHandler . java to clarify the behavior after ContextHandlerCollection is started to improve code readability and
removed conditional check for WORKSPACE _ CUSTOM in Cling . java to simplify the logic for handling custom drawing identifiers
trufflejdkservices : remove assert that lookupmodule be n ' t null
added JUnit @ Ignore annotation to the test methods in ClassicSuperHandlingTest . java to ignore the test until call - through is turned on by
updated import statements for ItBit classes to use the correct package structure to ensure compatibility with the latest version of the ItBit library
ww - 3952 use parameter . isdefined ( ) to check if the parameter be present
add private constructor to prevent instantiation .
do n ' t swallow ioexception when read user account from xstream
replaced instances of ` Object . getClass ( ) . getName ( ) ` with ` java . util . Vector ` , ` java . util . Hashtable
added tableNameWithType to the warning message in RetentionManager . java to provide more context about the table being logged
added trim ( ) method to string length check in QueryExecutorImpl . java to ensure accurate validation of fragment strings without leading or trailing spaces
fix resourcepackfilenotfoundexception by use modfile . getfilepath ( ) instead of modfile . getpath ( ) . tofile (
refactored button handling in PartitionToolbar to improve clarity and maintainability to enhance code readability and maintainability by using more descriptive variable
removed unnecessary condition in RecentsView . java and added a check for task view focus and visibility to improve code readability and ensure proper handling of
updated method signatures to return BMIViewObject instead of Map < String , String > to enhance the functionality of the calculator service to include process ID
removed unnecessary comparison operator in QueryCommand . java to simplify the comparison logic for better readability
fix a crash when place a mana on a mana pool
updated environment variable handling and conditional checks in WindowsProcessAddressSpace , J9DDRImageProcess , and NewElfDump classes to improve clarity
added support for custom plugin configuration in OptionsParser . java and corresponding tests in OptionsParserTest . java to ensure proper handling and inclusion of plugin properties
updated hashTable check to use isEmpty ( ) method to improve code readability and prevent potential NullPointerException
updated timestamp assertions and test method names in Timestamp . java and TimestampTest . java to improve clarity and consistency in timestamp handling and enhance test coverage for
[ java ] clean up unused variable in clusteredserviceagent .
added a condition to check if the method is not compiled in LambdaForm . java to ensure that the code only executes when the method is not
added test case for db2 , mysql , db2 _ joined and db2 _ joined
refactor TogglableFlag to replace getInitialValue method with getOverridenDefaultValue and add change listener for property changes to improve clarity and
updated logging statements in DockerClientFactory to use parameterized messages to improve readability and maintainability of error messages
added a conditional check to return early if the device is Android to optimize performance by avoiding unnecessary processing on Android devices
updated assertions in RoutesTest to use assertThat with containsString and containsString to improve readability and maintainability of the test code
added new functional interfaces for various predicates , floats , and shorts in the functional package to enhance the functional programming capabilities for
change the type of ` getSubsColor ` method from ` int ` to ` String ` and adjust related methods accordingly to improve flexibility in handling different
added a conditional check before deregistering the invocation registry to prevent unnecessary deregistering of the invocation registry if the future is complete
replaced manual frame handling with output method in AbstractWebSocketConnection to improve code readability and maintainability by using a unified output method
added a check for redirected state before starting WelcomeActivity in LoginActivity and set the " redirected " flag in SignupActivity to prevent
added a new class ` ShadowCheckedTextView ` and modified ` CheckedTextView ` to extend it to provide a shadow implementation for the ` CheckedTextView `
added Serializable interface to ParserState class and made several fields transient in AccessorProperty . java and Property . java to ensure proper serialization and prevent serialization
added a new certificate " identrustdstx3 [ jdk ] " to VerifyCACerts . java to support verification of the identrus
removed redundant attributes for TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to improve code clarity and maintainability by
add a test to verify that the occupant ' s nick be the same a the user ' s nick .
updated QuicConnection and QuicConnection classes to include context as a parameter and refactored connection handling to improve code clarity and maintainability by
replaced direct calls to ` writer . setMergeScheduler ` and ` writer . setMergePolicy ` with calls to ` writer . getConfig ( ) .
refactor code for improved readability and maintainability to enhance code clarity and maintainability by reducing duplication
added handling for ComputedDateValue , ComputedNumericValue , and ComputedNumericValue in AddDefaultValueChange . java and AbstractDatabase . java
updated NbtScoreboardIoService . java file to improve code clarity and maintainability
refactored metadata handling and improved error logging in SAML2Configuration , SAMLFileSystemMetadataGenerator , and SAML2ServiceProviderMetadataResolver classes to enhance resource
changed access modifier of printer from private to protected and refactored printer creation logic to enhance encapsulation and improve code organization
added rounding and average price calculation in HuobiAdapters . java to ensure correct handling of order amounts by rounding to 8 decimal places
updated ProjectionOperation and TypeBasedAggregationOperationContext to use Field objects instead of Strings and modified field handling in TypeBasedAggregationOperationContext to improve type safety
modify the viewer logic to check if the player is already in the viewer before proceeding to improve performance by avoiding unnecessary processing when the player is already
added constant state management to FolderAdaptiveIcon , FolderAdaptiveIcon , and ShiftedBitmapDrawable classes to improve drawable state management and ensure
refactor SPDYClient to utilize AsyncSPDYConnection and AsyncSession instead of creating a new one each time to improve code clarity
fix : fix npe in protostuffobjectoutput # writeobject ( null )
pdfbox - 4071 : improve javadocs for extracttext and decompressobjectstreams
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future updates
added a condition to check if axes are displayed in DrawAxis . java to optimize performance by avoiding unnecessary processing when axes are displayed
replaced calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` to improve code clarity and
removed unnecessary whitespace in returnToWorkspace method call to improve code readability and maintain consistency
updated SSL connection handling in CustomUrlJob . java and added a new CustomUrlTrustEverything class for secure URLs to enhance security by allowing
fix clock rate for g722 and add getrealusedclockratestring ( ) method to mediaformat
refactor TextureAtlas class to improve code organization to enhance maintainability and readability of the code
updated ` getProductNameForBuildTargetNode ` to ` getModuleName ` and added a method ` setModuleName ` to ` AppleLibraryBuilder `
[ hotfix ] [ test ] fix deadlock in testslot
# 118 - add support for findidswithinheritance to sqltreebuilder . subquery
updated WebSocketServletRFCTest to use a ByteBuffer for response header parsing to improve readability and maintainability of the WebSocket response header handling
[ wasm ] fix memory leak in wasmfunctionnode .
[ clickhouse ] add ttl to log collection query ( # 10297 )
changed serialization type from NESTED _ OBJECT to NAMED _ FIELD and updated related methods in CustomChangeWrapper , CustomPreconditionWrapper , and XML
updated DeploymentExceptionTest . java to use Jetty Server and HandlerCollection instead of QueuedThreadPool and QueuedThreadPool to improve test structure and ensure
added error handling around Fresco initialization and vector drawable creation in CommonsApplication . java and NearbyController . java to improve robustness by
added null and empty checks for objectName before trimming to prevent potential NullPointerExceptions when objectName is null or empty
updated error messages in Command . java and TestPrint . java to improve clarity of error reporting for file access issues
[ hotfix ] [ table - planner - blink ] make old plannerfactory and executorfactory a constant
updated X500Signer usage to use issuer instead of owner and modified subject handling in KeyTool . java to improve clarity and handle null subject names more
added a deprecated annotation to RuntimeOptions . java to indicate that the class is outdated and should no longer be used
replaced manual byte array encoding with a direct method call to getBytes to simplify code and improve performance by eliminating unnecessary byte array creation
added a new interface ` PermissionEvaluator ` to the security expression package to provide a mechanism for evaluating permissions based on authentication and domain objects
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and modified ` LineReaderImpl
do n ' t try to connect to a server that do n ' t exist
updated TypeEnum references from CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ MERKLE _ ERROR in P2
refactor ExpandWar . java to use URLConnection for jar file handling to improve code readability and maintainability by reducing redundancy
catch throwables in defaulthttpclient instead of exception and log them in fullnettyclientresponseresponse .
updated the center method of the wrapper Container from center to centerAbsolute to ensure the spinner is centered on the absolute position
[ hotfix ] [ runtime ] fix npe in networkbufferpool . requestmemorysegments
refactored MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper resource management
replaced AndroidJUnit4 runner with RetryTestRule in AbstractIT . java to improve test reliability by allowing retries during tests
refactor ` QueryStateMachine ` to remove the autoCommit parameter and simplify constructor parameters to improve code readability and maintainability by reducing complexity in transaction
[ ci ] add package - info . java and fix checkstyle issue
updated the condition to check for both " javax . net . ssl . DistinguishedNameParser " and " javax . microedition .
[ hotfix ] [ test ] remove unused constructor from streamtasktimertestharness
refactor URI handling in ` mmm Request . java ` and add a new test in ` RequestTest . java ` to improve clarity and functionality of
updated ` MainApp ` and ` WhatsNewActivity ` to use ` getLegacyAvailableStoragePoints ( ) ` instead of ` getAvailableStorage
added methods to handle session availability and unavailable states in SessionManager to improve session management by notifying listeners of available or unavailable sessions
added a package scan for " liquibase . pro " in ServiceLocator . java to enable scanning of Liquibase for Liquibase applications
removed the ` syncedFolderList ` parameter from the ` deleteSyncFolders ` method in ` SyncedFolderProvider . java ` to simplify
updated the ` loadWithNewGlobal ` method to accept an additional variable number of arguments to enhance functionality by allowing more flexible argument passing to the global
updated path handling logic in FastPathResolver . java to correctly increment startIndex for both HTTP and HTTPS protocols to ensure correct parsing of relative
replaced ` length ( ) ` with ` getRetainedSize ( ) ` for ` weigher ` calls in ` HiveClientModule . java `
corrected spelling of " hasRandomizedType " and " hasExceededRandomizationDepth " across multiple files to improve code readability and maintain
[ calcite - 3596 ] do n ' t support lead parameter in window frame ( griffin )
added a line to clear headers in the AbstractProxyServlet class to ensure that the request headers are reset before processing new requests
added a conditional check for SA attach functionality in CompressedClassSpaceSizeInJmapHeap . java to skip test execution when SA attach is not
added null check for bgColor in GraphicsDevice . java and created TranslucentWindow . java for testing fullscreen window translucency support to
added null checks for user information in UserInfoActivity to ensure proper handling of cases where user information is unavailable
added custom field serialization for Boolean values in PrecompiledHeaderData . java and removed precondition check in PreprocessorDelegate . java to ensure Precompiled headers
[ flink - 20536 ] [ table - planner - blink ] validate update - mode property in kafka connector
added a new integration test class ` MultipleOutputsIntegrationTest ` for testing multiple output scenarios to ensure that named outputs can be built and used in
updated string formatting in FileSettings . java to ensure consistent formatting to improve readability and maintainability of the code
[ hotfix ] [ stateless ] add versioned flow variable to input variable
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode switching for improved performance
added new device commands for " leave - dock " and " energy - save - mode " in DeviceStatus . java to enhance functionality for energy saving
make modelloader log more informative when an item be load from a block .
removed unused imports and added the @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to potential
[ fix ] glgetcurrentsurfacescale ( ) should return 1 for 2x
rename RussianLowerCaseFilter class to improve clarity to enhance maintainability and readability of the code
phoenix - 2476 fix test failure in phoenix - server
replace File . separatorChar and File . pathSeparatorChar with ' _ ' in displayName to ensure consistent file path formatting across different operating systems
add a ` ` resettablestream ' ' method to the wavloader so that we can use it .
added a ` repeatFirstLineIndent ` parameter to the ` setIndent ` method and updated related logic in ` ColumnText . java ` to enhance
updated the equals method to cast the Oid object to Object to ensure type safety and prevent potential ClassCastException
[ hotfix ] [ table - common ] fix checkstyle violation in hikaripool
make controlflowanchored a controlflowanchored , not a controlflowanchornode
added a call to setFocusPainted ( false ) on buttons [ i ] to disable focus painting in the WindowsPlacesBar component
added support for UniqueConstraint and ForeignKey in the backing index handling logic to ensure proper handling of PrimaryKey and ForeignKey instances in the database snapshot
[ k8s ] deprecate getaccountledgerswithparams ( ) and add getaccountledgerswithparams ( ) method to account
[ ds - 296 ] fix communityadmingrouplink and communityadmingrouplink api to not throw unprocessableentityexception
do n ' t throw an error if there be no hypothesis utterance
added unit test base on user forum issue
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater . java ` and added ` databaseUpdateThreads
updated the FASTSCROLL _ THRESHOLD _ MILLIS constant from 40 to 10 milliseconds to improve user experience by allowing more time for fast scrolling
updated the initialization of SystemClassName to use a hardcoded string to improve clarity and maintainability of the code
hhh - 13644 fix npe in procedurecallimpl . getresultstream ( )
added null check for apiProperties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing API properties
added new file ` BinaryFrameGenerator . java ` and ` TextFrameGenerator . java ` for WebSocket frame generators to handle binary and text frames
simonstewart : make the test more robust by wait for the element to be locate .
updated calculations for latitude and longitude in RandomGeo3dShapeGenerator . java to improve randomness and handle edge cases more effectively
added a keepAlive method to the ResourceBundle class to ensure thread safety during resource loading
changed the return value from false to true in SQLiteDatabase . java to reflect the intended functionality of the SQLiteDatabase class
[ jsr166 ] fix handling of concurrent signal in lockmonitorenter .
added MkdirStep to directory creation in multiple classes to ensure proper directory structure for generated files
updated coordinate handling and exception messages in MeshLeveler . java to improve clarity and accuracy of error messages for better debugging
[ drools - 1342 ] skip applypmmlmodelcommand if jpmml library be unavailable
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure correct handling of thermal status conditions
added OS _ MAC _ TMP _ DIR constant and modified temporary directory creation logic to support both macOS and non - macOS environments by
[ geot - 5582 ] make use _ memory _ lifted _ buffers system property configurable .
added a null check for the organization in the pom . xml file to ensure that the plugis have a valid organization in the pom . xml file
updated license agreements in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the application
updated the method call to use the system ' s java . class . path instead of an empty string to ensure that the child process uses the correct
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to address issue # 3198 to ensure Javadoc
change the LAUNCHER3 _ PHYSICS feature flag from false to true to enable PHYSICS feature for the launcher
added a noPrint class to the HTML element in HtmlThreadInformationsReport . java to improve the visual presentation of thread information in the report
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and added LUCENE _ 40 to the version
added macOS - specific variables for symbolicator and task handles in BsdDebuggerLocal . java and modified platform detection in PlatformInfo . java
fix memory leak in networkdispatcher and fmlclienthandler .
do n ' t log networkdispatcher exception when connection reset by peer
[ java ] do n ' t create aeron client conductor when there be no admin buffer .
added a break statement in TouchImageView . java to prevent fall - through behavior in a switch statement
chore : [ dialogflow ] update gapic - generator - java to 2.1 . 0 and update gax - java to 2.1 . 1 (
removed SSL handshake completion logic from FeedableBodyGenerator . java to simplify the flushing process by directly flushing the feeder ' s feeder
added type checking logic for ` java . lang . Object ` and ` Variance . CONTRAVARIANT ` in ` TypeUtils . java ` to
replace nonblockinghashset with concurrentset for memtablespendingflush
added null check for ` errs ` and modified error handling in ` MemberEnter ` , ` JavaCompiler ` , and created new classes ` A `
changed the browser ' s background color from NO _ BACKGROUND to NONE to improve the visual appearance of the browser
updated the method call from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity . java ` to ensure the dialog is properly
fix bug in integerstamp . divide ( int , long ) when min / max be negative .
added a method to read an InputStream into a byte array and updated the image retrieval process to improve efficiency by reducing the number of bytes read from the
added local variable handling and related methods in CaseStmtToken and ExprGenerator classes to improve variable handling and scope management in the code
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by handling potential exceptions during key exchange
added psapi . lib to the AdditionalDependencies list in WinGammaPlatformVC10 . java to include psapi . lib in addition to WinGamma
updated SQL string concatenation to use the system ' s line separator to ensure consistent line endings across different operating systems
added version compatibility and output encoding settings in TemplateEngineFreemarker . java and updated alert message in ApplicationController . java to ensure compatibility with newer
pdfbox - 4071 : remove usage of bytearrayinputstream in crdgeneratortest
changed ` holdSamples ` and ` type ` variables from ` private static ` to ` final ` in ` SampleSenderFactory . java ` to allow
added a conditional check for the existence of the TestNG emailable reporter before adding it to the emailable reporter to ensure that the emailable reporter
added a boolean variable ` quoted ` and updated assertions in ` CommandLineBuilderTest ` to improve handling of quoted strings to ensure that escaped characters are correctly
removed the ' public ' access modifier from interface and class declarations across multiple classes to enforce package - private access control and improve encapsulation
added a call to setNumReduceTasks with numFetchers in FreeGenerator . java to set the number of reduce tasks based on the number of
fix nullpointerexception in schemageneratorhelper # getfielddefinitions ( )
updated the file version from " 505365 " to " 532077 " to reflect the latest version of the application
updated extension checks in FloatTextureData . java to use constants for texture float and ARB texture float to improve code readability and maintainability by
add filewriter . write ( string , string ) method to fileserver . write ( string , string ) .
added a null check for outputDirectory and jarStream before setting the output directory to avoid potential NullPointerExceptions when both outputDirectory and jarStream are
added performance measurement to the ` getFuture ` method in ` ShadowSQLiteConnection ` to improve performance monitoring for SQLite operations
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeap
[ geos - 10576 ] add resourceerrorhandling enum for better error handling
updated buffer position calculation in RAMInputStream . java and added EOFException handling in TestRAMDirectory . java to improve buffer management and ensure proper eof
improve error message to be more user friendly
modified ForkJoinPool and ForkJoinWorkerThread to include an innocuous parameter and added AccessControlContext class for permission testing to improve thread management and enhance access control
updated the constant CHECK _ EVERY _ N from 10000 to 0xFFFF and modified memory check logic to improve memory management and enhance logging clarity
hbase - 14545 testsplittransaction fail on slow ci server due to race condition
added null check for currentSelectionArea before accessing its properties to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test for the Jaas demo in DemoModulesTests . java to verify the functionality of the Jetty server with HTTP and HTTPS
added span checks to the folder creation logic in CellLayout . java to ensure that the layout calculations correctly account for span values when creating a folder
refactor CacheOffHeap class for improved performance to enhance memory management efficiency in the application
add a check to prevent the database from be re - opened when a table depend on another table .
added error handling for invalid XML gid values in TiledLoader . java to log a warning when extra XML gid values are ignored and improve data validation
added synchronized keyword to setWorkingSet method to ensure thread safety during job execution
added a new Java class to implement a solution that calculates the minimum and maximum steps for a given stone to implement a solution that calculates the
add addresschecker to make trackerrequestprocessor a little easy to understand
fix translucent move block render in multilayermodel . rendertype . gettranslucent ( )
add a method to remove a tag from the config entry tooltip to improve code readability and maintainability by reducing duplication
[ netatmo ] change thingtypeversion from int to string in moduletype .
added null check for recieptents before mailing and modified time conversions from seconds to milliseconds to improve robustness by preventing potential NullPointerException
move issingle check into a separate method to improve code readability and maintainability
updated DockerClientFactory to conditionally execute commands based on failFast parameter and improved logging in RemoteDockerImage to enhance error handling and profile client management
added a new ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated its usage in ` RobolectricTestRunner ` to enable
hhh - 14199 fix bug in HistoricProcessInstanceQueryImpl . getlastmodifiedtimeofmonth ( ) .
updated import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to utilize core project import functionality
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve user feedback during command failure scenarios
refactor TreeMap implementation to improve code readability and maintainability
add display . isenableasyncstacktraces ( ) and display . setenableasyncstacktraces ( true )
added a method to set the glow color in BubbleTextView and updated Folder to use it to enhance visual feedback by allowing customizable glow colors
added style class settings for link and desc in LinkedFilesEditor . java to ensure proper styling styling for file links in the editor
added a new table and a test method for verifying column class names in ResultSetMetaDataTest to ensure correct retrieval and validation of column class names in
removed unnecessary try - finally block around the write operation in Lucene40LiveDocsFormat . java to simplify the code by directly calling IOUtils . deleteFiles
added null check for _ info before determining if protocol status is 101 to prevent potential NullPointerException when accessing _ info
added a constructor to the ShadowLocation class that initializes the provider to provide a way to initialize the ShadowLocation instance with a specific provider
added a condition to check if deviceRam is less than 2048 to ensure maxRAM does not exceed 2048 for 32 - bit devices to
add no - data map stats to localmapstatsprovider ( # 18389 )
add logger interface to fileprofileactivator so it can be use for profile activation
updated the error message in the addToBody method from " noname1234 " to " invalid _ " to provide a more descriptive error message
changed the collection type from List to Set for roles in GuildImpl . java to ensure that the roles are added as a set instead of a list
updated return value and array size check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java
added multiple assertions for delete operation in DashboardUserMapperTest . java to ensure that the delete operation returns the expected results
renames occurrence of recipient to primaryparticipant in feedback result page data
[ gr - 26405 ] fix auto - deref handle for llvm store node .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
make ` ` -- headless ' ' -- help auto - width ( no graphics )
updated action bar title setting logic in DrawerActivity . java and added a condition to update old interactions text to improve user interface clarity and ensure
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line parsing functionality
added new interpolators and constants to manage animation fade thresholds in the launcher to improve animation smoothness and responsiveness during app transitions
update javaName method to use javaNameFromExternal instead of Character : : toUpperCase to improve clarity and consistency in handling external names
added native methods for setting , frame , and release of NSObject in CWrapper . java to enhance functionality and improve resource management in the application
added constant value checks to the mmm Checker class and created a new ValueTest class for testing to ensure proper handling of constant values and improve error
refactor test classes for improved clarity and consistency to enhance maintainability and readability of the codebase
[ hotfix ] [ core ] remove unnecessary null check
[ hotfix ] [ javadocs ] fix typo in jiraconfiguration
updated error messages in UploadBuild . java to include " ( FAILED ) " and " ( COVERAGE ) " to improve clarity of error
updated bounds settings in DeviceProfile . java to account for search bar offset to ensure proper layout adjustments based on search bar positioning
[ pulseaudio ] fix disconnect when idletimeout be 0 .
refactor OverviewCommandHelper to run tasks on the UI thread using runOnUiThread to improve responsiveness by ensuring tasks are launched on
added a method to retrieve the source group as an Optional < Pair < String , ImmutableList < AppleSource > > > to ensure that the getSourceGroup
increase timeouts in TestSimTriggerIntegration from 220000 milliseconds to 320000 milliseconds to allow more time for triggers to be triggered
updated variable names from ` outputPositionCount ` to ` positionCount ` in ` FloatSelectiveStreamReader . java ` to improve clarity and consistency in
added null checks for bestSoFar in AbstractNodeCostSearch . java to improve robustness by avoiding potential NullPointerExceptions
added a condition to skip processing for specific component types in ResourceEditorView . java to improve performance by avoiding unnecessary processing for specific component types
replaced ` UiThreadHelper ` with ` LauncherModel . getWorkerLooper ( ) ` in ` DragView . java ` and ` Float
added a null check for commitPoint in ReplicationHandler . java to ensure the correct commit point is used based on the current deletion policy
added methods to retrieve imei and meid from telephony managers in ShadowTelephonyManagerTest and ShadowTelephonyManager
refactor debug methods in SimpleHostRoutingFilter to improve request debug logging to enhance debugging capabilities for HTTP requests in the application
added ` destory ( ) ` method to multiple classes and implemented it in ` OfflineResourceDataManager ` , ` IndexSegment ` , `
[ issue # 6204 ] fix test failure in normalmessagesendandrecvit
replaced Charset . forName ( " UTF - 8 " ) with StandardCharsets . UTF _ 8 in StatVisualizer . java to improve code readability and
hbase - 27334 bulkload : do not retry if multiple hbase family be not in table
added a commission parameter to the DefaultWithdrawFundsParams class and updated its usage in the RippleWithdrawFundsParams class
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve readability
refactor catch blocks in LoadSolrBuilder and SolrLocator to simplify exception handling to improve code readability and maintainability by consolidating multiple catch
added a check for abstract overloaded methods and improved error handling in Java2TypeScriptTranslator . java to ensure that abstract overloaded methods throw an
added StacklessLogging imports and modified the disk sweep method call to use a try - with - resources statement to improve logging performance by avoiding unnecessary
updated ` MutableColumnDataType ` , ` SqlDataType ` , ` Entities ` , ` HTML32 ` , ` HTML40 ` , and ` HTML
refactor SubExactLConstantTest and SubExactLNonConstantTest classes to improve clarity and maintainability of test cases
added a null check for the claimRequestString before parsing it in ConnectOAuth2RequestFactory . java to improve robustness by handling potential null or
refactor HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve code clarity and maintainability by centralizing the
datadoc - 260 - fix null value mapping for simple and date type
updated CoreAdminResponse to use CoreStatus instead of CoreAdminResponse and added a new getCoreStatus method in CoreAdminRequest to improve core status
initialize transformers and locators with empty ArrayLists to improve memory usage and prevent potential NullPointerExceptions
[ hotfix ] [ table - common ] improve error message in abstractquerydslprocessor
[ gr - 28686 ] fix bailout exception message in pegraphdecoder .
renamed methods and variables from ` setOf ` to ` copiedSetOf ` to improve clarity and consistency in naming conventions
( chore ) camel - mail : use objecthelper . getidentityhashcode ( ) instead of mailutils . dumpmessage ( )
do n ' t set prefetch subscription original destination if it ' s null
updated the return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure that the identifier name is correctly recognized as a property
added WaveGeneratorActivity and modified InstrumentsFragment to launch it instead of displaying a toast message to enhance user experience by providing a dedicated activity for
added logging functionality and null checks in KeyedProperties . java and SheetOverlaysManager . java to improve error handling and provide clearer warning
fix ( kubernetes - client ) : add integration test for log and exec
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to verify the behavior of ` SolrCore . initIndex ` when no
added a call to ` super . dispatchMethodKernelOkra ( range , args ) ` in ` GraalKernelTester . java ` to ensure
[ java ] sort dns and mx record by priority .
refactor thread creation in XToolkit . java to use a privileged action and adjust sleep duration in TestShutdown . java to improve code readability and
added validation in SelectBox and set the dropdown to " Linux6 " in UITest to ensure proper validation and selection of the dropdown on Linux6
replaced IllegalStateException with Collector . printStackTrace for error handling to improve error reporting by providing stack traces instead of throwing an exception
added a SplitState parameter to the createState method and updated state management logic in FlowBuilder and SplitState classes to enhance state management by associating
changed ` connectionState ` from ` int ` to ` volatile int ` and updated its usage in ` SSLSocketImpl . java ` to ensure visibility
change default polling period from 10 to 1000 and add a test for the periodic trigger
refactor memory allocation and encoding methods in MemoryStack and MemoryUtil classes to improve code readability and maintainability by reducing boilerplate code
added handling for DocletAbortException in HtmlDoclet and AbstractDoclet classes to improve error reporting by providing clearer context for aborted documents
[ java ] unusedmodifier : fix false positive with enums
refactor multiple logging statements to use method references instead of lambda expressions to improve code readability and maintainability by using method references
added a name parameter with a value of " ssl = { 0 } " to the Parameterized . Parameters annotation to provide clearer identification of the SSL
[ hotfix ] [ table - common ] catch illegalformatexception in transformationhelper
updated method call from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` in ` ActiveConnectionRESTService . java ` to ensure
replaced direct equality checks with Apache Commons Lang ' s EqualsBuilder for better performance to enhance readability and maintainability of the code
updated the process method to handle null outputRoot in FileProcessor . java to ensure proper handling of null outputRoot when processing files
pdfbox - 4071 : add an annotationfilter interface to allow users to filter out unwanted PDAnnotations
refactor StackTraceCleaner class to improve stack trace handling to enhance performance and maintainability of stack trace management
added content type handling for CSS and JavaScript files in PluginServlet . java to ensure proper content type is set for both CSS and JavaScript files in the
hhh - 11732 skip testliteralinselectexpressiontest until it ' s fix
updated the ` upgrade ` method to use ` slotSize ` instead of ` slot ` to improve clarity and correctness in version handling logic
added getStats ( ) method implementations to AbstractDataImportHandlerTest , Context , ContextImpl , DocBuilder , and DocBuilder classes to provide
[ scb - 2576 ] add longpolling support to kie - client ( # 2576 )
refactor gesture handling in BaseOverview and LauncherInstrumentation to use scroll methods instead of fling calls to improve code readability and maintainability by
removed duplicate initialization of UnlocksDialog in UI . java and added a button in PausedDialog . java to streamline the code by eliminating redundancy
clear the drops list in PlayerEventListener to ensure the event ' s drops are reset before processing new data
added a default parameter constant in StreamResult . java to provide a default value for the input name parameter
updated exception type from MalformedURLException to IOException in testNormalizeOrder method to ensure proper handling of IOException instead of MalformedURLException
updated the ` printlnBoth ` method to include the chunk type in ` TsFileSketchTool . java ` and adjusted the ` LocalTs
added a header exclusion mechanism to the UmbrellaHeader class to exclude specific Swift headers to improve header management by allowing exclusion of specific Swift headers
updated method name from ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java ` to improve
added encode ( ) method call in RequestPlugin . java to ensure proper encoding of request data
mondrian : fix a bug in mondrian - 1260 . fix for mondrian - 1260 .
added null or blank password validation in LdapAuthenticationProviderImpl . java and created a corresponding test class TestLdapAuthenticationProviderImpl . java to ensure proper
pdfbox - 4071 : remove unnecessary long . tostring ( ) call , a suggest by valerybokov
added a line to clear complex writers in ProjectRecordBatch . java to ensure proper cleanup of complex writers when conditions are met
added @ SuppressWarnings ( " serial " ) annotations across multiple classes to suppress warnings related to serialization in the cache implementation
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and updated the conditional check in ` ClassGraphClassLoader . java ` to
added error handling for " _ errors " names in ErrorResponseException . java and modified error message formatting to improve error reporting and provide clearer error
add a constructor to the eventsourcingrepository that accept an eventstore and a snapshottriggerdefinition
refactor symbol handling in mmm Attr . java and ppp Attr . java to improve code readability and maintainability
updated SearchedPeopleCursorAdapter to append " @ " to the current text and modified QustomDialogBuilder to adjust the search text
[ nimbus ] add standby mode support ( # 10717 )
change default planar configuration from TAG _ PLANAR _ PLANAR to TAG _ PLANAR _ CHUNKY in TIFFImage
added a call to close the input stream in ItemListTag . java to ensure proper resource management and prevent potential memory leaks
add an averageutil class to provide a way to update the laser table , and fix a typo .
added two new files , SigInt . java and SigIntBarrier . java , implementing signal handling in a concurrent environment to facilitate signaling
refactor graph handling in ExporterGEXF to differentiate between hierarchical and hierarchical graphs to improve code clarity and maintainability by centralizing graph
replaced byte array with Text for null handling in TCTLSeparatedProtocol . java to improve text processing efficiency and handle character encoding errors
add validation for rubric question index and sub question index .
updated the comparison logic in CatalogComparator to use CatalogAndSchema ' s ORIGINAL _ CASE instead of DB2Database to improve clarity and
simonstewart : make the browsermobproxytest less flaky
updated the formatting method in ModelRepositoryImpl . java to use Integer . toString for diagnostic information to ensure consistent integer representation for diagnostic information
removed redundant call to mTextWatcher . reset ( ) in InPlaceEditView . java to streamline code by eliminating redundancy
refactor InternalByteArray and TruffleString classes to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] fix type inference for outedgesfunction
refactor multiple assertion classes to improve consistency and maintainability to enhance readability and maintainability of the assertion framework
added a new file ` DiacriticTest . java ` and modified existing file ` ClassA \ 314 \ 201 . java `
[ hotfix ] [ test ] fix deadlock in clustermembershiptest
added error handling and improved workspace reader logic in DefaultMaven . java and DefaultGraphBuilder . java to enhance robustness and prevent potential null pointer exceptions
updated SSL scheme check from ` startsWith ` to ` equals ` in ServiceRegistryConfig . java and modified IP port assertions in TestServiceRegistryConfig .
refactor Mockito class for improved readability to enhance maintainability and ease of understanding for future developers
removed unnecessary whitespace in the constructor of Jdbc3Connection to improve code readability and maintain consistency
refactored the ` ensureInstance ( ) ` method into a separate ` ensureInstance ( ) ` method to improve code readability and maintainability
added logging functionality and modified the clearDeltaServerTime method in BinanceExchange and BinanceBaseService classes to improve accuracy of server time calculations and
added a binding check for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8 . 5 " in Tomcat
added null check for the component form before deregistering animations to avoid potential NullPointerExceptions when the component form is not initialized
updated ` decodeResource ` , ` decodeStream ` , and ` decodeBitmap ` methods to accept ` BitmapFactory . Options ` as a parameter to
[ java ] add number of message to example and fix executor usage in example .
added click handling and linkifying functionality to the TimelineArrayAdapter to enhance user interaction by allowing users to click and linkify tweets
added " text " to the list of supported data types in PostgresDatabase and updated condition checks in NumberType and ColumnSnapshotGenerator to ensure compatibility
remove @ ignore from entryprocessorbouncingnodestest . testentryprocessorbouncingnodestest ( # 3683 )
updated state checks from hardDeletableState to removableState in AmbariManagementControllerImpl . java and modified related state handling in
added a check to ensure the existence of the thing registry before adding it to the inbox in CreateBridgeServlet to prevent potential null pointer exceptions when
refactor robot expiration logic in PreconditionEnforcer . java and synchronize method in CrawlServer . java to improve code clarity and ensure thread safety during robot
added null checks for the display name before checking if it contains " Teredo " to prevent potential NullPointerExceptions when checking for " Teredo "
updated SpriteBatch constructors to accept a default ShaderProgram parameter and modified shader creation logic to enhance shader handling flexibility based on GL20 availability and
added synchronous commit option to properties in TestUtil . java to enable synchronous commit functionality for improved performance
added element coercion functionality to SortedSetTypeCoercer and updated related test cases to improve type coercion efficiency and ensure
refactor confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to differentiate between folder and favorite status to enhance user experience by providing clearer confirmation options
added a condition to check if the character is less than 256 before accessing the safe array to prevent potential ArrayIndexOutOfBoundsException when accessing the safe
updated the address construction in UserContext . java to use a dynamic port variable instead of a hardcoded value to improve code readability and maintain
added an expectation to return an empty map instead of an empty map in HostResourceProviderTest . java to ensure that the test returns an empty map
[ hotfix ] remove unused logger parameter from yarnentrypointutils # loadconfiguration
refactored sipcommframe to initialize color and style to improve code readability and maintainability
deleted the ShadowHtml . java file and updated test assertions in HtmlTest . java to eliminate unnecessary shadowing and simplify the codebase
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface to implement a
updated JettyLogger to include H3 and QUIC loggers in HttpClientLoadTest . java to enhance logging capabilities by including additional Jetty
changed method visibility from private to package - private in MockSettingsImpl . java and added unit tests for listener validation in MockSettingsImplTest . java
[ hotfix ] [ doc ] fix typo in statehandlestore
replaced import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . jetty . http . security . Constraint
[ # 7751 ] instructor : add team info to result page ( # 7751 )
use try - with - resources instead of try - with - resources to prevent resource leak
camel - 1145 : make the test more robust by use the available port instead of hardcoded 9000
added ` libraryTarget ` parameter and refactored related methods in ` JarBuildStepsFactory ` and ` AndroidPrebuiltAar ` to improve
remove ' validating - cerficates ' from the link in trustEverythingtrustmanager . java
api : remove overridden getpagesizeval ( ) from listcapacity api
added a case CLOSED to the IteratingCallback class to prevent further processing when the callback is closed
added a new boolean field ` isAuthorized ` and updated method signatures in ` AccessControlContext ` , ` ProtectionDomain ` , and ` AccessController `
refactor OSGiDeployer to check if the app is an instance of AbstractOSGiApp before sending events to ensure proper handling of
added support for TIFF files in DLNAMediaInfo to enhance media handling capabilities for TIFF files
optimize call target : do n ' t profile argument if they be null
added a new file ` CubocDesktop . java ` and refactored ` Map . java ` and ` MapRenderer . java ` to
updated PolicyMonitor initialization to use target directories instead of test resource directories to ensure test classes are loaded from the correct directory structure
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure the trashbin list adapter is reset before further operations
replace ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) . allConnectors ( ) ` with ` com . sun .
fix checkglobalvariablestoragenode and add checkglobalnode to the runner
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and modified its implementation to enhance event data handling by incorporating
added a maximum burn amount constant and updated the return statement in BurningManPresentationService . java to ensure the maximum burn amount does not exceed a
updated imports and refactored the snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake . java to utilize H2Database and
modified the insert statement logic to handle empty namedValues and valueList cases to improve clarity and correctness of SQL query generation
updated import statements and changed the service ticket URL from " http " to " https " in ServiceValidateControllerTests . java to align the test with
modified the getDefaultValidFunctionName method to include a isStatement parameter and added logic to hide the default function name to improve handling of function names based on
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated generics in multiple classes to use generics for better type safety to enhance code clarity and maintainability by using generics
g - talk : do n ' t send hole punch packet if it ' s not a call peer .
added a test for updating pgobject with PGobject in ResultSetTest . java to ensure correct functionality of date updates in PostgreSQL
added error handling for invalid email queries in PasswordResetEndpoints and created a new test for non - UAA origin in PasswordResetEndpointsTest to improve
replaced the retrieval of the first child element with a direct call to getDocumentElement to simplify the code by directly accessing the document ' s root element
refactor caching logic in Cache . java to improve performance and maintainability of cache operations
rename timeInSec and prevTimeInSec to timeMillis and prevTimeMillis in Isochrone . java and SPTResource . java
fix the light relay not be able to place the bind block on the client side
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to utilize it to enhance the chaining
refactor Model class to improve code readability to enhance maintainability and facilitate future feature additions
updated the calculation of recordedTime from a fixed value to a fixed value of 619315200000 to ensure accurate tracking of the addition of 1024
added a check to resize the status if the terminal type starts with Windows to ensure proper resizing behavior for Windows terminals
updated log messages and modified host version state handling in UpdateDesiredStackAction . java and RepositoryVersionState . java to improve clarity and ensure host version
[ java ] move the integration test to a separate directory to avoid conflict .
use linkedhashset instead of hashset in maven - core to maintain order of artifact .
[ hotfix ] [ network ] remove unnecessary try / catch block in operationserviceimpl
reformatted the method call to resolvePropertyConfigurer in KnativeEnvironment . java to improve code readability and maintainability
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to ensure consistency in naming conventions
added connection and configuration upload tests in CloudSolrClient and TestCloudSolrClientConnections to ensure proper functionality and error handling when uploading configurations to
synchronize access to allBindings in Breakpoint and DebuggerSession classes to ensure thread safety when modifying and modifying bindings
added methods to clear files and cache in RobolectricTestRunner and ShadowContext classes to improve file management and ensure proper cleanup of temporary files
xstream : add test case for style in xstreampersistertest .
[ drools - 371 ] make kiehelper . setkiemodulemodel ( kiemodulemodel kiemodulemodel ) more flexible
updated soil handling logic in BlockEventListener . java to use Farmland ' s moisture instead of Material type to improve accuracy of soil dryness
added a default implementation for the getLocalIp method in FinishedSpan . java to provide a default implementation that returns null for the method
updated JdbcStepExecutionDao to use SerializationUtils for deserialization and added a new test for storing and updating integer values to improve data handling and ensure correct
pdfbox - 4892 : fix typo , a suggest by valerybokov
added " libs " and " python37 " to the resource paths in python . java and tensorflow . java to support additional Python libraries and
refactor plugin handling by introducing a refresh button and modifying the initialization of the plugins list to improve code organization and enhance user interaction by encap
changed log level from info to warn for reloading , saving , and trimming history file errors to improve log granularity for better troubleshoot
cloudstack - 10715 : fix npe in vmwarestorageprocessor when vm be n ' t find in the datacenter .
do n ' t stop the sshd instance if it ' s already stop
rename ExperimentalMockitoJUnitRunner class to improve clarity and consistency in naming conventions
added a utility method to retrieve the build serial from the Utilities class to ensure compatibility with older devices and improve code maintainability
refactor SwapGBuffers class to improve code readability to enhance maintainability and facilitate future updates
added null check for spatial before removing skeleton control in AnimControl . java to ensure proper management of spatial controls during animation
added smart replies functionality and updated ReflectionHelpers usage in ShadowRanking and ShadowRanking classes to enhance testing capabilities for smart replies in Robolec
[ java ] do n ' t try to add segment to the archive when there be only one recording .
refactor carrot2ResourcesDir assignment to use initParams directly instead of resourceLoader . getConfigDir ( ) to improve code readability and maintainability
added null check for ` testRect ` in ` WindowsTreeUI . java ` and created a new file ` bug8004298 . java ` to
updated ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with newer
do n ' t return null in get ( ) , throw a tasteexception if the key be null
added client information to the SurrogateAuthenticationEventListenerTests to enhance test setup to include client - specific information during tests
added a new variable ` isUserView ` and initialized it to false in ` CardPresenter . java ` to ensure proper handling of user view state
corrected the method name from ` isGraphvizJavaAvailable ` to ` isGraphvizUtility ` across multiple files to ensure consistency in
refactor histogram creation to use a local variable for clarity to improve code readability and maintainability
added a new module - info . java file for the SQLite connector to define module exports and dependencies for the SQLite connector
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " api " in permissionsManager initialization to simplify the code by directly assigning the PermissionsManager instance
refactor DateParser and TestDateParser classes to improve date parsing functionality and maintainability
added a method ` getDepth ` that returns a value of 0.0 f in ` SpringLoadedState . java ` to set the depth of the state
replace byte array copy with Arrays . copyOfRange for data manipulation to improve code readability and maintainability by using a constant for minimum size
[ hotfix ] [ javadocs ] fix typo in executiongraph
removed unnecessary swipe layout bindings and replaced it with an onBottomLayoutClicked method in NotificationActivity and NotificationRenderer to streamline notification handling and improve code
updated exception messages to include " none " in multiple test files to improve clarity and accuracy of exception handling in tests
fix checkstyle issue in entity / glowcontainer . java ( # 485 )
replaced MethodHandle with reflection - based method retrieval in ProxyMaker . java to simplify setter retrieval and improve error handling
updated casting of int values to Integer in MathTest . java to ensure type safety and prevent potential ClassCastException
updated the return statements in BaseEmailContentFormatter to remove the use of StringUtils . join for metrics and datasets to simplify the output by removing unnecessary
added a layout provided panel and modified visibility settings for the layout providedPanel to improve user interface responsiveness and layout management
added a null check for the location in the ServerCallable class to ensure proper handling of dead servers to avoid potential NullPointerExceptions
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added null check for key parameters and simplified return statement in BasicChecker . java to enhance error handling for missing key parameters and improve code clarity
added a method to ignore specific media types in MediaTypeRequestMatcher and a corresponding test in MediaTypeRequestMatcherTests to ensure that all acceptable media types are
updated task number handling and debug logging format in LlapBaseInputFormat . java to improve clarity and maintainability of log messages related to task attempts
add spring . main . allow - bean - definition - overriding = true to test
added a null check before closing the indexReader to avoid potential NullPointerException when closing the indexReader
refactor package structure and access modifiers for BTCMarketsStreaming classes to improve organization and encapsulation of the BTCMarkets streaming
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to verify rendering behavior of code blocks
added a new file ` CompatibilityTest . java ` to test XML DTD compatibility to ensure proper handling and validation of DTD properties in the
added new utility classes for push registration , signature verification , and security to provide utility methods for push registration and security management in the application
updated the logic for determining the number of replicas from ` currentReplicas ` and ` targetReplicas ` to use a loop for iterating over
bump version to 2.7 . 0 and update release note
[ java ] replace \ r with line separator in test .
fix apr / native - image / ajp / ajp / ajpprocessor # readtimeout to throw a sockettimeoutexception
set default values for friction , restitution , density , and isSensor to zero in FixtureDef . java to ensure default values are set
[ te ] add scaling factor to anomaly classification and classification task runner
added a try - catch block around the command execution in LauncherInstrumentation . java to handle potential IOException when waiting for broadcast idle
added unit tests for font and link tag attributes in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure that strings
fix a typo in the guistatscomponent patch .
added permission request handling for call phone access in Launcher . java to ensure proper user experience by granting necessary permissions before starting a call
updated return values in SimulationPanel , PlotDialog , and SimulationEngine to include FlightData and improved warning handling to enhance user experience by providing
changed BUF _ SIZE _ LONG and TOLERANCE constants from public to private and modified the fromBytes method to improve encapsulation
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to ensure thread safety when checking for Docker availability
added a constant for the VPX format in CodecTypes . java to standardize the representation of VPX codecs
added a coordinator address option to the DistBuildFactory and modified the getCoordinatorAddress method to be abstract in AbstractDistBuildExecutorArgs to allow
added a static method ` match ` to ` FsUtils ` and refactored timer usage in ` WrapTimer ` to improve path matching and
added a conditional check before adding label values in TestTaxonomyFacetSumValueSource . java to ensure labelValues is only added when the value is greater
app : fix npe when getboolean ( ) return null
removed the @ Test annotation from the TestPerfBenchMarkDriver class to streamline test execution by eliminating unnecessary test annotations
added a method to set the materialization time in ObjectStore and created a test for it in TestObjectStore to ensure that creation metadata updates correctly
[ vosk ] catch unsatisfiedlinkerror and log it
remove jmsampler . is _ one _ way and add response code ok to jmsampler .
updated break weight logic in GlyphView . java to improve clarity and correctness of break weight evaluation
refactor synchronization logic in RCFile . java to improve efficiency and readability to enhance performance and maintainability of the synchronization process
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address the issue identified in SOLR - 13028
refactor data storage to store unwound entries in a structured format to improve clarity and maintainability of the data structure
removed unnecessary parameters and simplified the ` DataFlavorComparator ` implementation in ` ClipboardTransferable ` and ` DataTransferer ` classes to simplify the code
added functionality to generate a random free port for the Thrift server to enable dynamic configuration of the server ' s information port for testing
added an end - of - file check in the RegExpScanner class to ensure proper handling of end - of - file scenarios
updated the condition to check for enabled metrics and timers instead of Boolean . getBoolean for enabling metrics and timers to improve performance by avoiding unnecessary retrieval
fix nullpointerexception in chatroomjabber when the nickname be null .
add check for null or empty filename in papplet . close ( )
refactor the refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve clarity of error reporting when path is not found
[ hotfix ] [ runtime ] remove dead code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` that returns null in ` ShadowNativeImageReaderSurfaceImage . java ` to provide a placeholder implementation
updated BTCChinaMarketDataService initialization to set the SSL URI and set the SSL URI to ensure the market data service connects to the correct server
pmd : make cpdtask work on window
added OauthController and Oauth2PluginTest classes to handle OAuth requests to enable integration testing of OAuth2 and HTTP requests in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and clarity of the codebase
move flatmap ( ) and flatcollection ( ) from entrystream to abstractstreamex
added error logging and exception handling in ExceptionToProducerResponseConverters . java to improve error reporting and enhance error reporting for better debugging
updated the condition in RobolectricClassLoader to include an additional check for Android projects with mixed scala and Java tests to ensure compatibility with Maven Sure
do n ' t try to transmit sdp if we do n ' t support it
updated default value type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added new test cases in CreateTableGeneratorTest
added methods to check station 3 GML and measurements in NormalizedMultiValuesTest . java to enhance test coverage for station 3 GML formats
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
fix bug in rowprocessor when regexmappingprocessors be not configure . patch by jbellis
refactor CustomSeekProvider to use a constant SEEK _ LENGTH instead of a hardcoded value to improve clarity and maintainability of the
added XLCDCommunicator and XLCDController classes and refactored FirmwareUtils to handle XLCD command processing to improve firmware handling
[ drools - 371 ] make the kiemodulemarshaller . loadschema use the system classloader to load the schema .
added ` retryTimes ` to ` EventQuery001 ` , ` EventQuery002 ` , ` EventQuery003 ` , and ` Assert
refactor WorkerProcessPoolTest to use a constant WAIT _ FOR _ TEST _ THREADS _ TIMEOUT for thread state management to improve
updated equals and hashCode methods in DelegatingMethod . java and added a new test class DelegatingMethodTest . java to improve object comparison and ensure
updated resource values in EnergyCost . java from 20000 and 20000 to 10000 to optimize resource usage for better performance
removed unnecessary calls to save ( ) and reload ( ) in the command method to improve error handling and ensure configuration is properly managed
deleted the ` SpringTransactionHooks ` class and replaced it with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest ` to streamline transaction
refactor AbstractClassAssert to improve code structure to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` that implements a test for retrieving an uninitialized string to ensure that the application correctly
added functionality to handle provided dependencies and updated query patterns in AndroidLibraryDescription and GraphEnhancementQueryEnvironment to enhance dependency resolution and improve test coverage for
added a new boolean flag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` in ` FeatureFlags . java ` to
added a static boolean variable ` sSavedBugreport ` and modified the system anomaly message handling to improve performance by avoiding unnecessary log messages and
added a constant for " cinepack " format in FormatConfiguration . java and updated LibMediaInfoParser . java to utilize this constant to
added camera bobbing functionality and modified hand movement animations in the Player class to enhance user experience by allowing customizable hand movement and poking behavior
replaced ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java ` to ensure
deleted the HSQLDBServerFilesFilter class and updated its usage in TestUtility to streamline the code by eliminating an unnecessary class and simplifying
added a check for both restoreFromSeed and restoreFromKey to ensure both restoreFromSeed and restoreFromKey are validated before proceeding
updated the method from ` getApiDataVideoVersion ` to ` getApiDataSeriesVersion ` and added a trace log statement for missing titles to
added a new method ` visitMethodInvocation ` to check if a method invocation is a method invocation to ensure that method invocations are processed only once to
replaced hardcoded array size from 6 * 3 to a constant NUM _ VALUES in AmbientCubemap . java to improve code readability and
bugfix # 219696 , show profiler dialog when profiling mode be reset .
added handling for maskedNumber in multiple UDF classes to return appropriate data types based on charCount to ensure accurate representation of maskedNumber when it is
move bitcoinj . unittest . derby to junit . rules . temporaryfolder so that test can be run in parallel .
add itemtype . isitemdamageable ( ) and itemtype . gethassubtypes ( ) to itemstack .
fix mc - 167447 ( linewidth not set correctly )
simonstewart : fix a bug in the firefox profile that cause the firefox driver to fail to start
updated HTTP status code check in Http1xClientConnection to include additional request methods to ensure proper handling of HTTP status codes for connection upgrades
updated task acceptance from " compile " to " process - classes " in JoobyMojo . java to provide a more descriptive task name
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 459 : close idle connection
added a check to ensure the aggregate function suffix is present before processing metric entries to avoid unnecessary metric additions when the metric name does not have a
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to use mCurrentFullscreenParams instead of TaskCornerRadius to
added a new Java file containing a solution that counts the frequency of an integer to provide a solution for counting the number of frequencies based on
[ java ] set ch1 to null in clusteredagentmanagerimpl to avoid npe .
updated MutisignOperationerGodicTest . java file to improve test coverage and ensure proper functionality
added exception handling for NoSuchElementException in StaxEventItemReader . java and created a corresponding test in StaxEventItemReaderTests . java to
replaced specific TextPaint imports with a wildcard import and updated return logic in ShadowTextView . java , and added null checks in TestAttributeSet . java
replaced ` com . nimbusds . jose . shaded . json ` with ` net . minidev . json ` in `
added a check for " AIX " family in OS . java and updated OS mapping in PKCS11Test . java to ensure compatibility with
server : fix npe when get private ip address for router ip
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to provide a convenient way to invoke a runnable without blocking
remove presencemessagecomboboxtests since it be no longer in use
replaced integer arithmetic with Math . round for positioning calculations in PortraitPagedViewHandler . java to improve code readability and maintainability by
[ hotfix ] fix checkstyle violation in kmeansdriver
updated return statements in KeyValue . java to include additional class size calculations to improve readability and maintainability of the code
camel - 14284 : add type converter to the camelcontext so we can add the type converter to the registry .
added support for dispatching conditional tasks in SparkCrossProductCheck . java to enhance task management functionality in the application
added handling for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED
updated conditional logic in ` LoginInfoEndpoint . java ` and added new test cases in ` LoginInfoEndpointTests . java ` to ensure proper handling
hbase - 13232 add a todescriptivestring ( ) method to the assignmentmanager to provide more detailed state and server information
renamed ` message ` to ` result ` and updated related methods in ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw `
added support for the " PERIOD " keyword in MariaDBDatabase and created a corresponding test in AddColumnGeneratorTest to ensure compatibility with MariaDB
( chore ) camel - jbang : add support for external transforms in portablepipelineoptions
updated VersionChangeLogs . java to include new version changes for Android 7.1 to enhance compatibility with newer Android versions and improve user experience
updated the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in TestUtil . java to allow external access to the constant
removed System . out . println statement from ImageResourceLoader . java to clean up unnecessary console output during resource loading
[ java ] do n ' t invoke aeron client in sequenceragent when not need .
updated validation logic to handle implicit lambda parameters and added a new class for testing to enhance type safety and improve handling of implicit parameters in lambda expressions
refactor menu item visibility and visibility handling in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by reducing duplication
updated the ` BTCETransHistoryResult ` and ` BTCETransHistoryJSONTest ` to use ` BTC _ deposit ` instead of `
replaced List with Set for series and exceptions in RetryFilterFunctions . java to improve performance by eliminating duplicate entries
mark the PluginLoader class as deprecated to indicate that it should no longer be used in favor of an alternative implementation
fix ( iotdb - 4895 ) : fix last query when unseq time be larger than sequence time ( # 6995 )
added a newline character to the request string in HttpResponse . java to ensure proper formatting of response data
set slf4j . simplelogger . log . org . apache . http . wire to error
added safe area setting for title bar in Sheet . java to enhance security by preventing potential area leaks
modified the loop to iterate backwards until the last element of TimeSeriesChunkMetaDataList is available to improve performance by avoiding unnecessary iteration over the last element
added SQL renaming and deparsing test to verify SQL parsing and deparsing functionality
make abstracthikariconfig . copystate public so that it can be use by other class .
fixed - rexecutorservice . execute ( ) should return a future instead of throw an exception
h2 : add . part a a suffix to filelister and use it in filelister
refactor multiple classes related to Orc processing to improve code organization and maintainability
removed unnecessary null check for valueArg in CompareFunctionsProcessor . java to improve code readability and maintainability
fix checkavailablediskspace ( ) and reducescopeforlimitedspace ( ) to take expected size
removed unnecessary ` toString ( ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to
added checks for invalidated state in AbsSwipeUpHandler and unregistered task stack listener in TaskAnimationManager to ensure proper handling of gesture state and
refactor getLockTimestamp and setLockTimestamp methods in AppPreferences and PassCodeManager to use instance methods to improve code readability and maintainability
refactor artist retrieval logic to use a helper method to improve code readability and maintainability by centralizing artist retrieval logic
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
nifi - 136 : fix npe in splittext when no header be specify .
updated key store type handling in HttpsConnectorFactory to support Windows - specific key store configuration to ensure compatibility with Windows - specific key store configurations
increased DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to
added a conditional check for FILE _ NOT _ FOUND in FileSyncAdapter . java to ensure proper handling of cases where a file not found is
added animation functionality to the Slider class to enhance user experience by allowing customizable animation effects
updated assertions in LineSeparatorProcessorTest to use lineSeparator instead of eol to ensure correct comparison of line separators in tests
increased maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to improve image quality and reduce memory usage
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest . java `
camel - 14284 : camel - hazelcast - queue - consumer should n ' t throw exception if the body be null
added a new TextFeedbackTest class and integrated it into the TestRunner to facilitate testing of text feedback functionality
replaced ` Math . round ` with ` Float . compare ` for score comparison in ` DefaultSolrHighlighter . java ` to improve accuracy of score comparison
updated DENSITY values in AddAndScaleMultiImage . java and ResourceEditorApp . java to use try - with - resources instead of direct
added a method to retrieve the array class element offset in HotSpotReplacementsUtil . java and updated ArrayCopySnippets . java to use this
[ log4j2 - 1342 ] log4j2 - 1349 fix log4j2 - flaky test
added support for remote SCM systems in multiple classes to enable users to enable or disable remote SCM functionality based on user input
added additional states to the OnOffType state assignment in MieleApplianceHandler . java to enhance functionality by allowing state transitions
replace ` StatsLogCompat ` with ` SysUiStatsLog ` for launcher events and events to align with the new logging framework for launcher events and
corrected the spelling of " log " to " LOG " in LocalZookeeper . java to improve code readability and maintain consistency
added tests for serialization of ProjectGenerationEvent finished and started events in EventSerializationTest . java to ensure correct serialization and serialization of project generation events
ggb - 221 add a new feature preview _ points to allow selection of special point .
refactor JavaCompiler class to improve code organization to enhance maintainability and readability of the code
[ flink - 24497 ] [ test ] log error if the number of key be not positive for the test to execute random read
updated multiple Java files including DumpHeap , TimSortStackSize2 , JMap , BasicLauncherTest , JMapHeapConfigTest , and Dead
added " -- gc - sections " and " nocopyreloc " flags to the ldflags list in NdkCxxPlatform . java
refactor fallback URI handling in SpringCloudCircuitBreakerFilterFactory to utilize ServerWebExchangeUtils for improved URI expansion to enhance flexibility in URI
refactor multiple test classes to improve code organization to enhance maintainability and readability of the test suite
updated conditional checks to use ` uri ` instead of ` name ` for attribute checks in ` ReadOnlySharedStringsTable . java ` to ensure proper handling
added a new method ` getAccountNet ` to the ` HttpMethed ` class and a corresponding test in ` HttpTestAccount001 `
added a check for available text width in SwingUtilities2 . java and modified the Look and Feel initialization in Test6635110 . java to
replaced the instantiation of ` FlatteningIterator ` with a call to ` push ` and refactored the ` FlatteningIterator ` class
removed HTML tags from the title and body in NotificationUtils . java to improve readability of the notification data by removing HTML entities
doc : generate sample code in the java microgenerator ( # 241 )
add a test method to reload and delete existing questions in InstructorFeedbackEditQuestionsUiTest . java to ensure that existing questions are deleted
updated return values in HSSFSheet and modified conditional logic in BaseTestSheet to improve clarity and correctness of row comparison logic
added permission checks and refactored intent handling in InstallShortcutReceiver , Launcher , and LauncherHelper classes to enhance security by ignoring malicious intent
[ java ] send cluster session event instead of notifysessionopened ( ) and sendevent ( ) .
refactor hashCode and equals methods in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector to
added a condition to flush the queue and release the buffer if remotelyClosed to ensure proper resource management when the remote session is closed
added AutoCloseable interface and modified close method implementation in SplitReader to ensure proper resource management and prevent potential memory leaks
removed the ` deepCopy ( ) ` method from the ` GsonBuilder ` class to streamline the GsonBuilder configuration by eliminating unnecessary properties
[ gr - 24144 ] llscanner should not return null for miss source , and add assertion to llsourcebuilder .
refactor file handling in RestClientRequestImpl to use CompletableFuture directly instead of an array to simplify code and improve readability by leveraging
reformatted the dispatchStatusString method call in GrblController . java to improve code readability and maintainability
replaced ` MockFactory . class . getClassLoader ( ) ` with ` SearchingClassLoader . combineLoadersOf ( toMock ) ` and added a
add a test for the refresh flag bug
added LEFT _ SEMI _ JOIN condition to the condition check in ConstantPropagateProcFactory . java to ensure proper handling of LEFT _ SEMI _
updated HTTP response handling in HttpReceiver and HttpSender classes to improve response completion logic to ensure proper handling of continuation - 100 responses
rename arraylengthoffset to arrayoopdesclengthoffset for clarity
http : / / issues . apache . org / jira / browse / amq - 4237 - add default policy to brokertestsupport to
refactor multiple Java classes related to Kerberos and SSL to improve code organization and maintainability
added a check to ensure the appCtx is running before stopping it to prevent unnecessary calls to stop ( ) when the appCtx is not running
changed the return type of the drawItem method from void to GlyphLayout to improve method usability by providing a more descriptive return type
refactor metrics handling in SpringmvcClient and throw InvocationException in CodeFirstSpringmvc to improve code clarity and error handling for JSON processing
removed the ` SAFE _ ACCOUNT _ AGE _ DATE ` and replaced ` accountAgeWitness1 ` with ` accountAge ` to simplify
refactor whitespace and formatting in StructureHeader and StructureReader classes to improve code readability and maintainability
added support for ResourceUrlProviderExposingInterceptor in CasWebflowContextConfiguration to enhance webflow functionality by integrating resource URL providers
add dexreturninliner so that it can be use by the dexpler .
[ automation ] add additional field to enrichedruledto ( fixes # 118 )
removed NOFOLLOW _ LINKS option from isDirectory method in PathResource . java and updated test arguments in AliasCheckerSymlinkTest . java to simplify
[ hotfix ] [ table - runtime ] remove unused sqldialect from executioncontext
refactor ` rDotJavaPackages ` to ` rDotJavaPackagesSupplier ` and introduce a ` Supplier < ImmutableSet < String > > ` for
[ net . pmd . lang . java . ast ] add a test case for deprecate package declaration .
added a method to set the minimum compaction unseq file level in IoTDBDescriptor to allow dynamic configuration of the minimum compaction unseq
[ hotfix ] [ runtime ] move activeresourcemanager and yarnresourcemanager to flink . runtime . resourcemanager . active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify its
updated URI construction in ZipResource . java to handle URISyntaxException and added a new test class ZipResourceTest . java to improve URI handling robustness
refactor ExpandableUploadListAdapter to improve thumbnail handling and formatting to enhance code readability and maintainability
refactor RobolectricTestRunner to handle nested classes with @ Config annotation to ensure that the Config annotation is correctly applied to all parent classes and
filter out block and item registry in modelloader .
removed the ` abstract ` keyword from method declarations in ` AbstractDataChangedListener ` and replaced ` SyncDataService ` with ` onWebsocketConnect
added support for enum types in JSONPojoConvertor and improved color handling in JSONPojoConvertorTest to enhance functionality for enum types and ensure correct
added a deprecation warning for the ` -- view ` option in IjProjectCommandHelper . java to indicate that the option will be removed soon
refactor GWTRequestWrapper to use TransportFormat for reading payloads instead of String to improve performance and simplify data handling during GWT RPC method
added orientation correction functionality and modified sensor event handling in GyroControl . java to improve sensor event correction based on device orientation
updated BIOME _ LIST _ SIZE to use BiomeGenBase . getBiomeGenArray ( ) . length instead of a fixed value to
updated print method calls from ` println ` to ` print ` in ` GetInterfaceTest . java ` and made interfaces public in ` Foo ` and
removed duplicate declaration of the Environment variable in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a structured
added a preload option to the map directory to control the loading behavior of the map directory based on user preferences
added custom metrics for various components in BukkitPlatform . java to enhance monitoring capabilities for various components in the game
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio and default card image initialization in CardPresenter . java to ensure proper rendering of the default card image in the application
do n ' t increment authmethodcount if it ' s implicit
updated the initialization of longValues , doubleValues , decimalValues , byteValues , and byteLengths to check for non - empty lengths before cloning
[ gr - 26458 ] add test for criu nanotime jit .
added trimming and null check for input lines in MultiPartFilter . java and logged a request parameter in MultipartFilterTest . java to ensure proper
add livingexperiencedropevent . getexperiencedrop ( entityplayer ) to handle mob mob mob mob mob mob mob mob mob mob
updated error messages and status updates in OpenUVBridgeHandler and OpenUVReportHandler to provide more informative feedback to users regarding API key and quota
remove unsupportedoperationsvisitor since it be no longer need
added RdepsFunction and updated GraphEnhancementQueryEnvironment to handle reverse dependencies to enhance query processing and ensure correct behavior of reverse dependencies
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added logic to scale the entire rocket if the selection is not an entire rocket to ensure that the selection option is set correctly based on the component type
removed unnecessary ` Arrays . toString ( ) ` calls from assertion statements in ` UpdateableResultTest . java ` to improve code readability and maintain
added checks for offline and realtime time boundary information in BaseBrokerRequestHandler . java to ensure proper handling of time boundaries for offline and realtime queries
do n ' t add the socket to the poller if it ' s already there
updated the regex pattern in EightmusesRipper . java and modified the image handling logic in the EightmusesRipper . java file to
replaced instances of ` mDevice . getDevice ( ) ` with ` TestHelpers . wait ( ) ` in multiple test files to standardize the
added a condition to check if the profile is not a phone and not in landscape orientation to ensure proper layout handling for phone devices in non - landscape
updated query handling in PartTreeJpaQueryIntegrationTests to use QueryImpl for better type safety to ensure compatibility with different query implementations in the
replaced ` Files . readAllLines ` with ` subsystem . readMatchingLines ` and added a new method ` readMatchingLines ` to improve
removed dynamic check for the result stream method in JpaQueryExecution . java to streamline the query execution process by eliminating unnecessary dynamic checks
fix nullpointerexception in physicsprocess . start ( )
add a test to ensure entry processor with predicate clears map when value attribute attribute be indexed
add callsip . add callroom capability to call room . add call room capability .
updated HTML message formatting in Utils . java and modified test cases in UtilsTest . java to improve clarity and consistency in color calculation and enhance test coverage
add disable option for non - empty value in text menu
updated the scratch path format in Aapt2Link . java and added a new RmStep in Aapt2Link . java to
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and
ggb - 126 : update selection after clear all geos , not just one
refactor error handling in ysldvalidator to improve code readability and maintainability
implement isCanceled ( ) method in BehaviorCall , Calls , OkHttpCall , and ExecutorCallAdapterFactory classes to ensure consistent behavior for
refactor ` isAnnotationPresent ` method across multiple classes to use a default implementation in ` AnnotatedElement ` , ` Package ` , ` Package ` ,
added a default implementation for the removeAllWidgets method to provide a default implementation to indicate that the method is not yet implemented
[ hotfix ] [ yarn ] fix test failure in yarnsessionfifoitcase
opensslcipher . getoutputsizeforfinal ( ) should return max output size , not just output size .
added video stream handling logic in PlaybackController . java to ensure proper transcoding of high - resolution content based on Fire TV Stick dimensions
[ beam - 12199 ] fix readsourcetranslatorbatch to show dataset
updated listener handling in GpsLoggingService to prefer cell tower , network , and passive settings to improve user preference management by removing specific listeners based on
changed the return type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` in ` vt320 . java
added support for BaseItemDragListener in FolderIcon to enhance shortcut handling capabilities in the launcher
added a method to create empty artifacts and updated type casting in AbstractRepositoryConnector , AbstractRepositoryConnector , FileSystemConnector , and SignavioConnector
removed unnecessary comments in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed the condition for checking if the video link contains " . m3u8 " to simplify the condition for better readability and maintainability
camel - 14263 : camel - sftp should compact the path before send it to camel - sftp
updated the mock assertion from ` assertIsSatisfied ( ) ` to ` assertMockEndpointsSatisfied ( 20 , TimeUnit . SECONDS ) ` in ` Base
corrected a typo in the variable name from " groupSortStr " to " sortWithinGroupStr " to improve code readability and maintain
fix a bug in doubleplant and doubleplantspecies . LARGE _ FERN .
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to enable focus
added multiple calls to throw an exception in VirtualMachineManagerImpl . java to improve error handling by ensuring exceptions are properly propagated
removed unnecessary method ` acceptLicense ( ) ` from ` DB2TestSystem ` and updated import statements in ` DockerDatabaseWrapper ` to streamline
updated DoubleModel and GeneralOptimizationDialog to allow setting and updating unit groups to enhance flexibility in unit management and improve user interaction
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading operations for BTC and ZMW currencies
added logic to set the number of samples in TestPBRLighting . java to ensure that the number of samples is greater than zero to avoid
updated step names in StepWithSimpleTaskJobParserTests to use lowercase " step " instead of " job . step " to improve clarity and consistency
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to enforce immutability for better code safety
make sure ggbabs ( ) return ( ( ( ) ) instead of ( ( ) )
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` and refactored the ` addServiceOutput
[ jbrules - 2423 ] fix conversion of bigdecimal to biginteger in constraint parser
added " org . eclipse . jdt . " to WebAppContext . java to hide the JVM used by Jetty in the web application
modified the return value of the ` useAuthCache ( ) ` method from ` super . useAuthCache ( ) ` to ` false ` to
updated namespace assignment to capitalize the first segment to ensure that the namespace is properly capitalized for better user experience
( chore ) camel - direct : throw directconsumernotavailableexception instead of camelexchangeexception
added null check for zooKeeper before setting its state to prevent potential NullPointerException when zooKeeper is null
updated the progressBar step message format in Loader . java to improve readability and maintain consistency in the code
added a new method ` runOnUiHelperThread ` to execute vibration effects on the UI thread to improve UI responsiveness by ensuring
added a method to update the last remote stream ID in HTTP2Session to enhance session management by tracking the latest stream ID
set text antialiasing on graphics2d in editor header and toolbar to improve text appearance for better user experience
[ java ] : do n ' t increment termwindowsize when send a message to the publisher .
refactor ( annotation ) : remove static import of enums in ctannotationimpl . java
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future updates
replace the method ` getRGBPixelImpl ` with a call to ` getRGBPixels ( Rectangle x , y ) ` with a call to ` getRGBPixels
added a new method ` newPrintStream ` to handle encoding in ` System . out ` and ` System . err ` streams to improve output stream
updated vibrate duration from 1 to 25 in TouchableMovementMethod . java to improve user interaction responsiveness
updated import statements in AppEngineSqlCloudSession . java and FlybushDataClearer . java , and added necessary imports in Test
refactor WebSocketClient constructor parameters for clarity and consistency to improve code readability and maintainability
simonstewart : do n ' t open the test html twice in the i18n test
[ gr - 26464 ] handle load constant error more gracefully .
[ hotfix ] [ test ] restore auth system state after test
added a LowercaseComparator class and updated superclass constructors in CoNLLUFeatures . java to utilize it for sorting features to enhance functionality for
refactor parsing logic in JavadocTool to improve handling of duplicate source files to enhance code readability and maintainability by reducing redundancy
simonstewart : add a test for the ability to toggle an option in a multiselect
added a check for the length of keys in HighestKvno . java to ensure that only valid keys are processed to avoid runtime errors
added exception handling for retrieving attributes in HDF5BatchReader to ensure robustness by logging warnings when only specific objects with 1 record are supported
[ beam - 10786 ] fix a couple of npe in bigqueryio and batchloadbigquery
change the entity name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and add the template parameter to the ProcessGroupResource to
added a new file TestMultiANewArray . java to implement a class for testing multi - dimensional array initialization to ensure proper error handling and
added a configuration option ` ` usesecondarystoragevm ' ' to the ` ` usesecondarystoragevm ' ' configuration to control the deployment of secondary
refactor ID retrieval logic in SyncBlockChainMsgHandler . java for clarity to improve code readability and maintainability by reducing redundancy
set the theme of the preview tab to the user ' s preferences to ensure the preview view reflects the user ' s preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a test method to set a idle timeout and set a timeout of 60 seconds in ConnectorTimeoutTest . java to ensure that the idle timeout behavior
add new configuration property to make it easy to configure
renamed ` readIdentifier ( ) ` to ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity and
updated import statements and modified parameter values in JpaPagingItemReaderIntegrationTests . java and JobLaunchingGatewayParserTests . java to improve code
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for non - critical issues
refactor color extraction logic to utilize a new method for retrieving the hotseat palette to improve code organization and ensure compatibility with newer Android versions
added setter methods for DefaultDataTableEntryTransformer and TableCellByTypeTransformer in TypeRegistry and TypeRegistry classes to enable configuration of default data table entries
removed assertion to check if newAvailableShared is less than initShared to streamline the code by eliminating unnecessary assertions
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` boolean field and its getter method from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator ` to
corrected a syntax error in the if statement in DriverUtils . java to improve code readability and maintain consistency
added contact form and post methods to the application router and created a new Contact class to enhance the application ' s functionality by allowing users to submit contact
guacamole - 642 : refactor user permission class to use objectpermissionset and simplesystempermissionset .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version of the application
[ hotfix ] [ runtime ] fix typo in traitfactory . setmode
updated SQL query to include alias matching for metric configurations to enhance query accuracy by allowing aliases for metric configurations
replaced multiple for - loops with IOUtils . closeSafely for closing perDocConsumers to improve resource management and avoid potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
replace menu . show ( ) with overflowButton . setOnClickListener ( ) to enhance user interaction by providing a click listener for the overflow button
updated error messages from " is null " and " is not null " to " is non - null " and " is not a non - null
ggb - 2033 fix for line height of the help button
move protobufferutilitiestest to core . util and fix package name
fix divider position and side pane width change .
added support for crossref in the aux sub generator .
[ geos - 9933 ] fix compilation error in geoserver
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity by using a more descriptive variable
add listener to notify listener when the meta contact avatar change
updated the import statement for Command from org . apache . sshd . server . Command to org . apache . sshd . server . command .
added a test method to clean up the audit log table post parameters by position in AuditLogTest . java to ensure that the audit log table is
added type casting to the inject method in ComponentContext . java to ensure type safety and avoid potential ClassCastException
added regex patterns for comment lines and updated parsing logic in ACLFileParser . java to improve code readability and maintainability by utilizing regex patterns
updated the ` isReadable ` method in ` MapRDBFormatMatcher ` to include ` FileSystemPlugin ` and ` userName ` parameters to enhance functionality
added an ` Map < String , String > ` to ` StarTreeNodeImpl ` and modified ` StarTreeImpl ` and ` TestStarTreeNodeImpl
added user unlock check before dumping plugin information in TouchInteractionService and refactored closeOpenViews method in BaseQuickstepLauncher and Launcher
updated the condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to ensure the correct variable is used for positioning
refactor certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance code readability and maintainability
[ hotfix ] [ test ] add archunit test for test code
updated package names for AlibabaDubboIntegrationBootstrap , ApacheDubboIntegratedBootstrap , and ApacheDubboPluginTest
cs - 15536 : enable project / project network by default for vpc
updated the method of removing a JsonElement from ` remove ` to ` get ` in ` RuntimeTypeAdapterFactoryFunctionalTest ` to ensure correct
added methods to manage and store undo info for properties in App . java to enhance user experience by providing insights into property management
refactor the retrieval of the xrgradcache property to use a privileged action to enhance security by ensuring the property is accessed within a privileged context
updated StreamCloseTest to use awaitility for checking the size of streams instead of asserting that the size of the stream is zero to improve reliability
added ` doAfterFlush ( ) ` method implementation in ` DocConsumer ` , ` DocFieldProcessor ` , and ` TermVectorsConsumer `
added handling for non - deprecated configuration properties in ConfigurationMetadataGenerator . java and annotated AbstractJpaProperties with @ NestedConfigurationProperty in AbstractJpa
updated capacity and mask calculations in BiInt2ObjectMap and Int2ObjectHashMap classes to use the length of the array instead of hardcoded
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and corrected variable names in Hive configuration to improve
add more logging to parallelniosender to aid in debugging
added a null check for the context in SchemeAndroidIDE . java to avoid potential NullPointerExceptions when context is null
[ gr - 24486 ] fix nativeimagesystemclassloader to be use by nativeimagegeneratorrunner and nativeimagegeneratorrunner .
changed the return type of the modifyGrantedAuthorities method from void to List and updated its implementation in SwitchUserAuthorityChanger and SwitchUserProcessingFilter
refactor ` JaxrsIntegrationTest ` to extend ` JaxrsIntegrationTestBase ` and add multiple ` JaxrsSpringMain ` classes to
handle sqlfeaturenotsupportedexception in hikaripool # setquerytimeout ( )
added TestNG data providers for GeneralTestsData and SupplementaryCharactersTestData in XslSubstringTest . java to enhance test coverage and
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and added
added support for sequence handling in MariaDBDatabase and updated condition checks in CreateSequenceGenerator to enhance functionality and ensure compatibility with different database versions
updated string concatenation syntax in multiple buffer classes to improve code readability and maintain consistency
replaced ` BrokerResponse ` with ` TableDataManagerProvider ` in multiple test files to utilize the new ` TableDataManagerProvider ` for
updated the method to check for both " jsse . enableMFLExtension " and " jsse . enableMFLNExtension " properties to
refactor ObjectHashSetIterator to remove generic type parameters and simplify iterator initialization to enhance type safety and simplify iterator initialization
updated character count calculations from 22 to 23 in Compose . java and TweetFragment . java to correct the calculation of character remaining and shortened
add ttl for cassandra datapoint ( # 11818 )
modified the ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter and updated related logic to enhance user experience by
added a method to get a terrain at a specified cell coordinate in TerrainGrid . java to enhance functionality by allowing retrieval of terrain based on cell
added default value printing in mmm Pretty . java and created a new file T6665791 . java with a Java compiler task to implement a default
added error handling for missing quest encryption keys in ResourceLoader to improve robustness by logging an error message when quest keys are not found
updated the condition to check if push support is disabled before determining if push support is supported
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
added a call to ` blockCapsule . sign ( ) ` in ` BlockUtil . java ` to sign local witnesses using the private key
modified FileSystemView to return null if no roots are available and added security checks in Win32ShellFolder2 and Win32ShellFolderManager2 to
fix columntext and pdfprow . copycontent ( ) to copy the last row of the table .
added a SparseArray for managing selected notes and modified note removal logic to improve memory management and manage selected notes
add feedback question id and comment to the backup data so that it do n ' t collide
added a null check for data in the getTransferData method to ensure that the method handles non - null transfer data gracefully
no effective change - remove unused pstmtdelegate
replaced custom Padding class with Rect from AppWidgetHostView in AppWidgetResizeFrame . java and Launcher . java to simplify padding retrieval and
refactor MethodHandle initialization and add a filter for ConsString in NashornBeansLinker . java to improve code readability and maintainability
refactor ClassGraph and ScanResult classes to improve code organization and readability
replaced ` latch ` with ` goAwayLatch ` in ` IdleTimeoutTest . java ` to improve clarity by using a more descript
replaced multiple instances of ` getMessage ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java `
replaced ThreadLocal usage with direct assignment of currentBook to null across multiple classes to simplify code and improve performance by avoiding unnecessary object creation
added support checks for object type support in the ContactSecurityVoter class to ensure proper handling of method invocations and prevent runtime exceptions
removed unused imports from DataLoader . java to clean up the code and improve readability
added an AtomicInteger to track the number of rows affected in postUpdateLog methods to track the number of rows affected during updates to improve tracking of the
ggb - 205 fix for margin in euclideanDockPanelWAbstract . java
set default value of foregroundFPS and backgroundFPS to 60 to ensure consistent fps usage across the application
added object release tracking and release tracking in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and prevent memory leaks
replaced DefaultWebSocketFrame creation with a ChannelFutureListener for closing WebSocket frames to improve code readability and maintainability by using a more descriptive
updated TestApplicationEventListener to TestApplicationEventListener1 and TestApplicationEventListener2 , and added new interceptors in DocsConfigurationSampleTests to improve test
refactor background setting logic in SettingsActivity to use a dedicated method to improve code readability and maintainability by centralizing background setting logic
updated import statement from Apache Commons Lang to OpenHAB ' s StringUtils and added null check for line to utilize the core utility for string utility
added an ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to update the accumulator ' s sum and count based on a weight
[ hotfix ] [ test ] fix checkstyle violation in put and replicationsink
refactor REGEXP _ CACHE to use a Map instead of a Set for pattern caching to improve performance by reducing the need for a set -
added a static method ` reset ( ) ` to reset the game thread to ensure proper resource management by resetting the game thread
added a login method to the DigestAuthenticator class to check if the realm matches the login service to ensure that the login service is valid before proceeding
refactor parameter handling in SavedRequestAwareWrapper to incorporate multiple values from a map to improve parameter merging efficiency and prevent potential null pointer exceptions
updated logging messages in BasicConfigurator , LoggerContext , and ContextInitializer to use lc instead of hiddenSingleton to improve clarity and consistency in logging messages
refactor synchronization logic in CommitLog and HAService to use a direct call to wakeup ( ) to improve code readability and maintainability
added a check for Android O in PhotoViewerActivity to ensure compatibility with devices running Android O and above
updated SchemaInfoLevel from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to improve schema information management by using a more appropriate schema
replaced ` zipOut ` with a ` BufferedOutputStream ` for XML output handling in ` SaveTask . java ` to improve performance by reducing the number
updated character encoding handling in TestPayloads . java to use UTF - 8 instead of byte array conversion to improve compatibility with UTF - 8 encoding and
fix mc - 103516 not be able to spawn an entity that do n ' t exist in the world .
added Tomcat container adapters for Tomcat 10 and Tomcat 1 to the list to support additional Tomcat container configurations
[ drools - 520 ] fix inputmarshaller inputmarshaller to use deep equal ( ) instead of hashcode ( )
refactor case statements in NowSearchTerm and SearchTermBuilder for consistency to improve code readability and maintainability
pdfbox - 4071 : remove public modifier , a suggest by valerybokov
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and headers to improve flexibility and maintainability of HTTP method handling
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` instances to improve code readability and maintainability by central
added notification for command start in AsyncBackgroundTaskManagerTest to ensure that the manager responds appropriately to command start events
refactored ` computePreviewDrawingParams ` method to ` recomputePreviewDrawingParams ` and added null check for ` mReferenceDrawable ` to
refactor LukeRequestHandler to use CharFilterFactory for enhanced token filtering to improve code clarity and maintainability by using a more descriptive variable name
replaced manual null checks with ParamChecks . nullNotPermitted method for plot , generator , and hotspot to improve code readability and maintainability by
added verbosity parameter to the createSubContext method to control output verbosity based on verbosity settings
added a check to convert the schema to uppercase if the database type is oracle to ensure consistent schema formatting for Oracle databases
updated the string construction in AsyncLoggerAllThreadContextImplementationsTest . java to include the class name in the context description to improve clarity of the
added a new file TestShrinkToOneRegion . java that performs a garbage collection test to facilitate testing of shrink - to - one region behavior
replaced string splitting with Splitter for improved readability to enhance code maintainability and reduce boilerplate code
updated ` AnalyzingInfixSuggester ` and ` AnalyzingInfixSuggesterTest ` to remove ` utf8ToString ( )
updated the attachment handling logic in PushsaferMessageBuilder to use a local variable for encodedString to improve clarity and maintainability of the code by
update stripprovenance to use jsonresult instead of provenancehash
pdfbox - 4071 : remove unnecessary null check , a suggest by valerybokov
change ` FORMATTER ` from ` private final static ` to ` private static ` in multiple test classes to allow for dynamic modification of the FORMATTER
updated the evaluate method in UDFRound . java to accept an Integer parameter and modified related imports to improve clarity and functionality of the evaluate method
refactor configuration retrieval in GraalJSScriptEngineFactory to use ConfigParser for injection and inclusion settings to improve code readability and maintainability by
changed class declarations from package - private to public in Test1 . java and Test2 . java to allow access to these classes from other packages
updated permission and plot entry messages in PlayerEventListener . java to improve clarity and consistency to enhance user experience by providing a more descriptive message for
fix ( sql ) : do n ' t cache additional value for or in conditioninconstantset .
updated test cases from ` doTestNormsStoredFields ` to ` doTestNormsVersDocValues ` and ` doTestNorms
added tests for creating boxes , circles , and contact objects in Box2DCharacterControllerTest . java to enhance test coverage for dynamic body transformations
added tests for maximum size limits in FLIGHT _ RECORDER _ OPTIONS and modified ThreadBufferSizeExceedMemorySize in TestMemoryOptions
removed redundant assertions in ObjectAlignment . java and Options . java to improve code clarity and ensure correct validation of input types
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` and implemented target package extraction in ` AndroidInstrumentationTest `
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of ` acceptableThrowawayItems ` from an empty list to a new ` ArrayList < > ( Arrays . asList ( ) ) `
replaced explicit generic type usage with explicit casting for boolean , char , and int types in Test6987555 . java to improve type safety and
reformatted code in MessageHandler . java for consistency to improve readability and maintainability of the code
refactor Inflection class to improve code organization to enhance maintainability and readability of the code
added locale getter and setter methods in EvaluationContext . java to provide access and modification functionality for the evaluation context
removed unused import of ` Plugin ` from ` SummaryPrinter . java ` to clean up the code and improve readability
added a break statement in DrawerActivity . java to prevent fall - through behavior in the switch statement
updated import statements in MongoQueryCreator . java to use wildcard import and modified debug log message to use query object to enhance code readability and improve
added userloggerfactory system property ( xwork . loggerfactory ) to allow customization of loggerfactory
rename adminaddpeerwithp2pdisabledapplicabilitytest to avoid confusion
updated @ ConditionalOnMissingBean to use a name attribute instead of a hardcoded value to improve clarity and consistency in bean naming conventions
added concurrency support for PStore configurations in LocalPStoreProvider to improve performance by avoiding redundant operations when write is disabled
changed the access modifier of the deleteFiles method from public to private to encapsulate the method within the class for better encapsulation
replaced instances of ` Provider < T > ` with ` ServiceProvider < T > ` in ` ServiceLoaderSpliterator ` and updated related methods in ` Type
[ gr - 21144 ] fix javainteropreflect . getfield ( object , object ) to throw runtimeexception instead of unsupportedmessageresolution
added toolchain creation checks and corresponding tests in AbstractCell , DefaultToolchainProvider , and DefaultToolchainProvider classes to ensure proper handling of tool
do n ' t remove the context if it be already add to the engine .
updated string index checks from ` indexOf ` to ` contains ` in ` AbstractCheckDescriptor . java ` to improve code readability and maintainability
updated linker flag names in PrebuiltCxxLibraryDescription and related classes to improve clarity and consistency in naming conventions to enhance code readability
replaced the ` onConfigurationChangedInternal ( ) ` method with ` updateRecentsRotation ( ) ` in ` AbsSwipeUpHandler ` and `
updated type checks to use generics in multiple classes to improve type safety and eliminate unchecked warnings
updated the method call to retrieve the hash string from the newBlock object to ensure the correct hash is used for the newBlock instance
messagestore : use getstorepathphysic ( ) instead of getstorepathcommitlog ( ) . getstorepathcommitlog ( )
[ hotfix ] [ micrometer ] remove try - with - resources in micrometermetricmanager
add get message stats to compaction log
added @ Deprecated annotations to multiple classes and classes to indicate that these classes are outdated and should not be used in new development
added methods to check for the existence of a system UI object and execute a shell command for the " keyguard _ status _ view " key event
[ java ] remove static from sessionregistryimpl . logger , make field final .
added a check for empty cookieJar in InMemoryCookieStore and a corresponding test in NullUriCookieTest to ensure proper handling of empty cookie jars
[ bonsai ] add debug log for bonsai archive
change the parameter type of getText method from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to
added a @ NotYetImplemented annotation to AlertsTest . java to mark the test as not yet implemented for marionette
added a try - catch block around the connection return logic in SocketConnector . java to ensure proper resource management and handle potential IOExceptions
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update references accordingly to clarify the purpose of
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing shared resources
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsync ` and introduce tracing and cancellation handling in ` CachingBuildEngine `
added updateFirstLineShowing ( ) method to TextArea . java to fix drag - selecting text out of the TextArea ' s bounds to ensure
added temporary and staging directory configurations to the configuration overlay in TestInformationSchemaWithPrivilege . java to ensure the application uses the correct temporary directory for
refactor graphics configuration retrieval logic to improve clarity and efficiency to enhance readability and maintainability of the code
tika - 358 : fix legacy test failure in tika - server
refactor pipeline . doprocess ( exchange , callback ) to use reactiveexecutor instead of doprocess ( exchange , callback )
refactor PrintTagList to accept command - line arguments for model parsing and improve tag handling to enhance flexibility and usability by allowing users to specify
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test for SQL
updated exception handling in JournalCorruptionEofIndexRecoveryTest to use EOFException to improve clarity and correctness of message draining logic
[ java ] make startfromtruncatedrecordinglogtest more reliable .
updated the calculation of the arc value in the RoundRectangle2D class from an integer to a float and adjusted the outer rectangle calculation accordingly to improve
added checks for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure that galleryImages is not null or empty before proceeding
updated deployment ID column handling in ` StandardChangeLogHistoryService ` and removed nullable constraint in ` CreateDatabaseChangeLogTableGenerator ` to ensure proper
pdfbox - 4071 : rename fdf / setfield to interactive / form / printfields
removed the boolean parameter ` moreColumnOk ` from multiple method signatures in ` AlterTableAddConstraint . java ` to simplify method signatures and improve code
added a provisional engine map and modified engine management logic in QuickfixjComponent . java to improve engine management and ensure proper cleanup of engine entries
added support for display zoom controls in RoboWebSettings to enhance user experience by allowing control over zoom display settings
add corporea block , and add corporea spark to the game ' s corporea block .
refactor ConnectionFactory class to improve code readability to enhance maintainability and facilitate future updates
added a method ` EnableDisableMenuItems ( ) ` to conditionally disable menu items based on application settings to improve user experience by providing a clear
updated the message resource from " file _ list _ empty _ server _ search " to " file _ list _ empty _ favorites _ filter _
hhh - 16465 fix test failure on oracle
added auto resize mode and column creation settings to the table in MotorMountConfigurationPanel . java and changed the constructor parameter in MotorConfigurationPanel . java
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner . java
added getter and setter methods for creator and subject properties in POIXMLProperties . java and updated test cases in TestPOIXMLProperties . java
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] do n ' t try to read cnc file if it do n ' t exist .
rename ` NonMarkedFoo ` and ` Marker ` classes to ` Command ` and ` FooCommand ` , respectively to improve clarity and consistency in
added methods for detecting and delving JMod files in ClassFileSourceImpl . java to improve the handling of JMod files and ensure proper class
updated constructors and parameters in TreeBackedElement , TreeBackedPackageElement , and TreeBackedPackageElement to remove unnecessary canonicalizer parameter
refactor token request handling in Saml2TokenGranterTest and UserTokenGranterTest to improve code clarity and maintainability by encap
updated the method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure the correct
added a sync method to the ZooKeeperWatcher class and invoked it in ZKAssign . java to improve synchronization functionality for nodes in the ZooKeeper
added checks for EGL _ NO _ CONTEXT in GlUtil . java to ensure proper error handling when the current context is missing
[ drools - 1010 ] do n ' t remove ruleflowgroup activation if it ' s active
added a return statement to HystrixDashboardConfiguration . java to ensure proper termination of the configuration process
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added exception assertion in IoTDBPipeIT . java to improve error handling
make clientqueuedisruptiontest clean up after each test
refactor : use defaultprettyprinter instead of signatureprinter in ctreferenceimpl # tostring ( )
changed the visibility of the validateInstance method from public to protected to allow subclasses to access and override the validateInstance method
updated imports in GeoPointField , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoPointPrefixTermsEnum files to
added a new file ` FakeBuildable . java ` and refactored ` OnDiskBuildInfoTest . java ` to use it to provide
use itemstack . isempty ( ) instead of item . getitem ( ) . getitem ( ) in guiingameforge . close
updated variable and variable names from " path " to " timeseries " in RewriteRuleSubtreeStream . java and SQLParserTest . java to
added a check to return 0 if the velocity is less than EPSILON to prevent potential errors when the velocity is less than EPSILON
[ hotfix ] [ gcs ] use storage . list ( ) instead of getbucket ( ) in gcsuri
updated the transport closure logic in TestHighwayTransport . java to ensure proper resource management and prevent potential memory leaks
hhh - 14105 - add ddl for create or replace history view and column name in postgres history ddl
updated the expected value in the checkEngine method from 2 to 3 in CarrotClusteringEngineTest . java to ensure the test reflects the correct
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable the test due to potential issues
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand . java ` and added a new class ` ParserStateObject
updated object quoting strategy initialization in ChangeSet . java and added null checks in DatabaseChangeLog . java to enhance flexibility by allowing customizable object quoting
updated the method for parsing Metainfo from ` parse ` to ` fromXmlStream ` in ` SliderAppsViewControllerImpl . java ` to
deleted the CsrfControllerAdvice . java file to remove unused CSRF token handling code to streamline the codebase
[ java ] quote the endorsed directory path in the antcompiler . java file .
added scrim animation functionality for background drawables in the launcher to enhance user experience by providing visual feedback during background transitions
updated the bitwise operation from 2 ^ 24 to 1 ^ 24 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added validation to ensure long path prefixes are only used with absolute and UNC paths to ensure proper path handling and prevent invalid path exceptions
removed specific InetSocketAddress parameters from MulticastSocket instantiation in Promiscuous . java to simplify the code and improve readability
removed duplicate calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
return a clone of nBits instead of a direct reference to nBits to ensure that the original nBits array is not modified externally
updated the visibility of the ` deriveCollectorName ` method in ` ProfilerCollector ` and added new test cases in ` TestProfilerCollector ` to
refactor type hint handling in MappingMongoConverter to improve readability and maintainability of the code
added performance measurement for creating a proxy factory in ProxyMaker . java to improve performance monitoring during factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
added exception handling for ConnectException in TCPConnection . java to improve error reporting by including the original exception context
refactor reinflateWidgetsIfNecessary ( ) method to use getWorkspace ( ) instead of LauncherModel . getWidgets ( ) to
added a new file ` DeleteInsideFileDialogTest . java ` to implement a test for deleting a file dialog to ensure that the file dialog correctly
[ fix ] lwjglabstractdisplay . update ( ) should call processmessages ( ) when renderable be set to false .
add verifyhtmlpart ( ) method to instructorstudentlistpageuitest . testshowphoto ( )
added methods and environment variable handling in TestIgnorance . java to manage test execution based on specified only and method parameters
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature by eliminating unnecessary parameters
added null check for pageable in QueryDslJpaRepository to ensure correct retrieval of content when pageable is null
add memorymanager . computememorysize ( ) method and corresponding unit test
increase test timeout for jmspublisherconsumertest and publishjmstest to reduce flakiness
refactor SnowballAnalyzer to improve code structure to enhance maintainability and readability of the code
updated previousIndex initialization and batch initialization in StreamingAggTemplate . java to ensure proper initialization of internalBatch and prevent potential null pointer exceptions
refactor bytecodeparser to throw a graalerror if the plugin do n ' t require the receiver
added a new method ` stream ( TableIdentifier < ENTITY > tableId ) ` to ` StreamSupplierComponent ` that computes the intensity default
updated logging messages to reflect the file ' s fully played status instead of being watched and added a retry mechanism for file renaming to improve clarity
updated the ` newInstance ` method in ` InjectorProxy ` and ` StandardInjectorProxy ` to accept ` initargs ` and ` InvocationTargetException `
[ hotfix ] [ stream ] fix resource leak in flinkstreamingcreatefunction
added unit tests for handling unsupported SQL statements in multiple classes to ensure proper parsing and deparsing of SQL statements in the database
changed return value from null to an empty ImmutableList to return an empty list instead of null to ensure that the method returns an empty list instead of returning
updated the query criteria in NamedSetTest . java to include Quality Distribution and Inc to enhance test coverage for quality distribution functionality
updated WebSocket connection handling and connection state management in DeconzBridgeHandler and WebSocketConnection classes to improve connection management and error logging for better debugging
replace ` setAttribute ` with ` removeAttribute ` for security authentication and target URL in ` AbstractProcessingFilter . java ` to ensure proper cleanup of session attributes
hbase - 11732 addendum addendum fix testregionreplicareplicationendpoint test failure
added configuration initialization for PMS in FormatRecognitionTest to ensure proper initialization of the PMS instance during testing
fix ( template ) : add templatedatafactory method to createovadatadisktemplates to the state machine
updated test imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to improve test structure and compatibility with JUnit4
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to enhance code clarity
updated table and column names in AppendOnlySchemaIT . java to use ' metricVal1 ' instead of ' metricVal ' to ensure consistency in
added a check to ensure deleted documents match the segment document count to prevent corrupt index errors due to mismatched document counts
add a method to get the name of the logger , and add a method to log trace .
updated the stave length from 1.0 to 0.9 and added a comment to clarify the need for shorter length for staves w / no starting barline
changed the default value of handleFileUploads from true to false in VertxPlatformHttpServerConfiguration . java and set it in VertxPlatform
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to the ` CsrfFilterTests `
[ hotfix ] remove static field from hotspotobjectconstantimpl . java
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in method naming conventions
added a ` withWatermark ` method call to ` Instant . now ( ) ` in ` FileIO . java ` to ensure proper watermarking
sqm : fix npe in sqmctestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable handling of SQL metadata in tests
updated command - line arguments in JsLibrary . java to include the project ' s root path to ensure that the project root path is used for
updated slider size from 180 to 180 degrees in RailButtonConfig . java to ensure consistent slider orientation across different angles
updated the y - coordinate in OverlayRenderer and refactored save handling in Saves . java to improve rendering accuracy and enhance error handling in
added expression language support configuration in KerberosProperties . java to enable expression language support for improved security
removed conditional checks for remoteMountPointComponent before setting translate and rotate degrees in ThirdPersonRemoteClientSystem . java to simplify code and improve readability
updated the setupViews method to include ScrimView as a parameter and adjusted related animation interpolators to enhance the animation effect by incorporating
[ flink - 20536 ] [ state - backend - changelog ] add option to enable periodic materialization
added a new private String field ` value ` and its getter and setter methods to the ` ProtocolParameter ` class , and updated the ` List `
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 499 : add test to
add isbumped flag to checkrouteranswer to indicate if a user have be bump or not .
added a Content - Type header in SwitchToPostInterceptor and updated SearchRequestUnitTest to set the Content - Type to " application / x - www
[ hotfix ] [ connector ] fix typo in embeddedclientconnector javadoc
replaced SQLFeatureNotSupportedException with a warning log statement to improve error handling by logging warnings instead of throwing an exception
added a new instance of AndroidNet with null parameters in AndroidDaydream . java to ensure proper initialization of the AndroidNet object
[ ci ] remove unused parameter ` _ segmentmaxrowcount `
removed the ' false ' parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify the method calls by eliminating unnecessary boolean
hbase - 26105 remove unused prefixtreecodec from tablemapreduceutil
added inflation failure handling in DesignerActivity and made root variable final in XMLLayoutInflater to improve error handling and ensure immutability of the root
refactor PushbackInputStream class to improve readability to enhance maintainability and facilitate future updates
make loweringphase . lowerable abstract , so that it can be use in the control flow graph .
updated error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter . java
replace ` Scanners . among ( ) ` with ` Scanners . string ( ) ` and update newline handling in ` Makefiles ` to
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` in ` ReadTask . java `
replaced the call to super . setTransformRefresh ( ) with a call to setBoundRefresh ( ) in SimpleBatchNode . java to ensure proper
[ gr - 26499 ] remove unnecessary method . isguaranteedsafepoint ( ) from sharedmethod .
added framebuffer size callback functionality to handle window size changes to improve handling of framebuffer size changes for better resource management
replaced ` centerTaskParallaxToRight ` and ` centerTaskParallaxToRight ` with ` centerTaskParallaxOffscreen
updated the ` LiteralNode ` class to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` for handling null values to improve type safety
added a method to set the length of a file in CompoundFileWriter and implemented it in FSDirectory and IndexOutput classes to ensure accurate file handling and
updated Android manifest handling in AndroidNdkScriptGenerator . java and added new test classes in LwjglDebugStarter . java to
camel - 15836 - camel - aws2 - s3 : use sourcebucket / sourcekey in camel - aws2 - s3
added permission handling for " * " role in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to enhance role - based authorization functionality
refactor ` ZookeeperClientServerRegisterRepository ` to use ` EventType ` instead of ` CollectionUtils ` for handling register paths to improve code clarity
refactor methods and variables in ReturnsDeepStubs . java for improved clarity and consistency to enhance code readability and maintainability by standardizing method
replaced repeated calls to ` toByteArray ( ) [ 0 ] ` with a conditional check for ` getCallValue ( ) . size ( ) ` to
fix log message when date parsing fails
updated the method signature of ` mapPBEAlgorithmToOID ` to throw ` NoSuchAlgorithmException ` and modified the return value in ` mapP
refactor TIFFReader to use a new input length variable and add validation checks for input offsets to improve code clarity and ensure proper handling of input
added validation for input parameters in CommandLineJobRunner and a corresponding test in CommandLineJobRunnerTests to ensure that invalid job parameters are properly handled and provide
removed unnecessary carriage return characters from the message content assertion in SmtpTests and MailTests to simplify the test by removing unnecessary carriage return characters
refactor string literals in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve code readability and conciseness
refactor LongSequenceGenerator to use AtomicLong and AtomicLongFieldUpdater for sequence ID increments to improve thread safety and maintainability of sequence ID management
added a new file ` Test . java ` containing a class ` Test ` with a ` sum ( ) ` method and a main method to calculate
updated minSdk and maxSdk configurations in ShadowWifiManagerTest . java and changed fields in WifiUsabilityStatsEntryBuilder . java
added a new file ` Solution . java ` that implements a algorithm for permuting queries to implement a solution that determines if a query is permuted
fix concurrentmodificationexception in table and gossiper
refactor taskbar recreation logic to improve clarity and maintainability to enhance readability and maintainability of the code
[ hotfix ] [ javadocs ] fix typo in syncfuturecache javadocs
updated DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and modified LOWEST _ VERSION _ FOR _ 
[ java ] uselessstringvalueof no longer report false positive for string literal .
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to validate ellipse drag
add targetmaxtypeshardsize option to hollowproducer to limit the number of shard to 16mb
added new versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBackwardsCompatibility . java to
[ hotfix ] [ runtime ] fix typo in compilationtask javadoc
updated assertions in TestSemanticAnalysis . java and refactored database parameter handling in DDLTask . java to improve code readability and maintainability
added a call to ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to execute a clear database change log statement to ensure that the database changes are
added version handling and improved path comparison logic in RestClient and CallPath classes to enhance functionality to support versioning and ensure accurate URL generation based on
updated exception handling and added closed state management in PhoenixDriver . java to improve error reporting and ensure proper resource management during driver registration
[ fix ] fix typo in javadoc
added cleanup after tests in ConflictsResolveActivityIT and refactored FolderPickerActivityIT to improve test structure and ensure proper cleanup after tests
[ gr - 26444 ] do n ' t replace input with constant when run in dev mode .
fix stringhelper . removeleadingandendingquotes ( string ) to return ` ` ' ' instead of ` ` ' '
refactor JpaQueryCreator to improve type handling and add NOT _ CONTA feature to enhance query flexibility and improve error handling for unsupported keywords
do n ' t try to push a branch if it be too long
added a call to dispatch a new P25Message object in P25MessageFramer . java to ensure proper handling of message data during processing
added a null check for the handler before calling checkClosed ( ) in WebSocketImpl . java and implemented a test for clearing client handlers on the end of
[ ds - 2635 ] fix test case to work with new workflow item
updated padding calculations in AppWidgetResizeFrame . java and Launcher . java to use default widget padding instead of resource dimensions to improve widget layout consistency
added hideAllApps methods to TaskbarUIController , TaskbarAllAppsController , and BaseActivityInterface to manage the visibility of all
removed synchronization from the launch method and replaced Thread . sleep with launcher . join to simplify the launch process and improve thread safety
update coordinates calculation in JavaSEPort . java to account for canvas dimensions to ensure correct positioning of elements within the canvas
replaced notificationManager calls with startForeground for notification handling to improve code readability and maintainability by using a more descriptive method
added a new test method ` testStaticFinal ` to ` ExcessivePublicCountTest ` and modified ` ExcessivePublicCountTest `
hbase - 24497 addendum set retries to 3 in testthrifthbaseservicehandler . testthrifthbaseservice
changed log level from info to debug for half offset committed / rolled back messages to reduce log verbosity and improve performance during debugging
added exception handling for FileNotFoundException and changed logging level from debug to trace in ResourceUtils . java and AbstractCipherExecutor . java to improve error handling
added a new method ` getmarketsummaries ( ) ` in ` Bittrex ` and created a ` BittrexTickersResponse
refactor enumConstants handling in EntityEntry . java to improve clarity and maintainability to enhance code readability and ensure consistent access to enumConstants
refactor session registration and unregistration methods to use Object instead of Class < ? > for better type safety to improve code clarity and reduce potential type
added new Unicode characters ' \ u0001 ' , ' \ u0002 ' , ' \ u001 ' , ' \ u001 '
refactor stylesheet handling in ResourceService and ResourceHandler to use Resource instead of String to improve flexibility in stylesheet management for better resource management
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before processing new data
changed the method call from ` ObjectParameterStrategy ` to ` PointerParameterStrategy ` in ` X86MethodGenerator . java ` to ensure compatibility with
updated the database type check from PostgresDatabase to CockroachDatabase in the sequence generation logic to ensure compatibility with CockroachDB
removed the condition for checking if the name equals " java . lang . String " in ObjectStreamClass . java to simplify the code by eliminating unnecessary checks
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and added a new class ` SymbolNotFoundError . java `
added logic to handle pseudo fields in BinaryResponseWriter to improve handling of document retrieval based on return fields
added WebSocket pausePing and PONG handling in WebSocketImplBase . java and a corresponding test in WebSocketTest . java to enhance WebSocket functionality and
added a hyphen character " - " to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of
refactor DnsResolverProvider to utilize DnsCache and update test methods accordingly to improve cache management and enhance test coverage for server selection options
added a conditional annotation to check if the MessagingTracing class is present in TraceMessagingAutoConfiguration to ensure that MessagingTracing is only enabled when the Messaging
mondrian : fix ` ` db2 ' ' syntax error in sqlquery . concat
updated import statements to reflect changes in IDELanguageClientImpl , IDEEditor , and IDEEditor classes to improve code organization and clarity by
added a condition to handle the ' / ' character in XMLLightweightParser to ensure proper handling of XML close tags in XML parsing
removed setVisibility ( GONE ) from TouchCharInput . java to improve user interface responsiveness
added a null check for the current user before comparing it to avoid potential NullPointerExceptions when comparing user IDs
modified JSObjectLinker to conditionally set members based on the index to ensure proper handling of JSObject assignments based on the index
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to initialize randomStringGenerator without a suffix and update related methods accordingly to
mark SecurityConfig class as deprecated to indicate that the class should no longer be used and may be removed in future versions
added @ Deprecated annotation and forRemoval = true for multiple classes and methods to indicate that these classes and methods are outdated and should not be used
deleted the JoglDebugAdaptor . java file to remove unused code related to debugging functionality
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and corresponding test cases in ` ExtraFieldPropagationTest ` and ` AWSPropagation `
added contentIntent initialization in FileDownloader and FileUploader classes to enable updating of content intents during file operations
refactor nextOrd method to return a boolean indicating success or failure to improve code readability and maintainability by encapsulating the logic
refactor DateTimeFormatter class to improve date formatting to enhance readability and maintainability of the code
removed class loading for DnD autoscroll properties in WToolkit . java to simplify code and improve readability
updated the ` setAdministratorCredentials ` method to include validation checks for null , password , and keytab parameters to ensure that the administrator credential is valid
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and adjusted width calculation for large screens to ensure
added render calls in PSurfaceJOGL to ensure proper rendering of the sketch window color
refactor Hashing class for improved performance to enhance efficiency of data hashing operations
updated the accept method to use a folder path and file name instead of a string to improve file validation logic for better compatibility with different file systems
updated ` addToListIfNeeded ` method to include ` contentDescriptionInt ` parameter and replaced drawable resource references with string resources to improve user interface clarity and
removed redundant null check for newType in J . java to improve code clarity and prevent potential null pointer exceptions
updated ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to improve user experience by allowing more time for activities to start
added a static constant for the web application home in SolrJettyTestBase . java and updated its usage in JettyWebappTest . java
updated motor selection logic in ThrustCurveMotorSelectionPanel . java to reset selectedMotorSet to null and clear the table ' s selection state
added import for BufferUtil and invoked clearToFill method in ByteBufferPool to enable buffer clearing functionality in the ByteBufferPool implementation
add test case for alarm trigger via rest api
updated configuration keys from " authorization " to " authentication " in Configuration . java to align configuration with authentication requirements for LDAP groups
added deleteExchange ( " x " ) and queueDelete ( " q " ) calls in DurableOnTransient . java to enhance exchange management and
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest . testbulkslotallocationfulfilledwithnewslots
updated connection handling in ServerInfoService to include error handling for connection failures to improve robustness by providing clearer error reporting when connection fails
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code readability to enhance maintainability and facilitate future updates
added a try - catch block to handle IllegalStateException when executing the lookup execution to improve error handling and prevent application crashes due to illegal state exceptions
updated Spring Security schema versions from 6.2 to 6.2 in multiple files to ensure compatibility with the latest Spring Security features and improvements
updated the ` newNameResolver ` method to use ` Args ` instead of ` Helper ` and modified synchronization logic in ` DiscoveryClientNameResolver `
added a check for non - empty annotations and implemented an earlier method for position handling in JavacParser to ensure correct positioning when annotations are present
added a new package name " com . sun . naming . internal " to CheckPackageAccess . java to support internal naming functionality in the application
changed the default value of strict from false to true in StaxEventItemReader . java to enable strict mode for improved event handling
lucene - 164 : fix infinite loop in offlinesorter . readpartition ( bytesequencesreader inputstream )
refactor ActionResetingPool class to improve code organization to enhance maintainability and readability of the code
added a null check for the color mode before converting from XY to HSB type to improve code readability and prevent potential NullPointerExceptions
refactor folder creation logic to use a target cell array instead of a single view to improve code readability and maintainability by centralizing folder creation
added a call to ` showLoadingDialog ( ) ` in ` FileDisplayActivity ` and removed it from ` FileDetailFragment ` and ` 
added null checks for uigestureFile before loading LogReader and return null if xmlLogs is null to improve robustness by preventing potential NullPointer
updated ` FieldNamingPolicyTest . java ` to use ` Locale . getDefault ( ) ` for string comparisons to ensure consistent behavior across different locales
added a method to set listeners on the result object to ensure that the result has the correct listener configuration
added a new method ` loadWithNewGlobal ` and modified existing methods in ` Global . java ` to support new global context loading to enhance the
added JSON serialization methods to ` StarTreeIndexSpec ` class and updated test assertions in ` TableConfigTest ` to improve JSON handling and ensure correct
added ObjectPostProcessorConfiguration import to HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2LogoutConfigurer , and ServerHttpSecurity classes to
replace occurrences of double quotes with single quotes in multiple files to ensure consistency in character replacement across the codebase
[ jbrules - 2448 ] add null check for ' in ' operator ( # 2423 )
added FieldCache import and commit method in TestDistributedSearch . java to ensure there ' s more than one segment and avoid insanity in
add test case for message boundary event on subprocess and in multi instance
add resolvestaticcall ( ) method to jimpleprogrammanager to resolve static call
reduce the number of message hash bucket when remove consumer from the queue .
added constants for NETSCAPE _ SLOT _ ID and PRIVATE _ KEY _ SLOT _ ID , and modified slot handling
added alignment support to the add method in Layout . java and modified the startRenderering method in GdxRenderer . java to enhance widget addition flexibility
[ hotfix ] [ test ] ignore unalignedcheckpointitcase for now
added imports for sound - related classes and modified a conditional check in JK13Services . java to ensure only relevant classes are processed to avoid
added a conditional check before adding a keyword to the keywordToReference map to prevent duplicate entries in keywordToReference
camel - 14263 : camel - multicast - do n ' t call size ( ) on collection < processorexchangepair >
remove unused method , and remove unused method from worddictionary
fix telegraf escape ( # 644 ) ( # 644 )
[ java ] add support for udp port to member .
rename the class ` OperatorMulticast ` to ` OperationMulticast ` and update references accordingly to improve clarity and consistency in naming conventions
updated delivery timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve reliability of message delivery during tests
added a try - finally block around the failure handling in VertxTestBase . java to ensure latch is released even if the operation fails
fix memory leak in sessionfactoryserviceregistry # destroy ( )
simonstewart : make the test more reliable by use local storage instead of hardcoding home page
[ pytorch ] fix ivalueutilstest and add test for map of tensor
added a task stack listener to clear the invisible state in RecentsView to ensure the UI reflects the correct state during animations
pdfbox - 4071 : improve performance of checkdatepattern ( ) and add unit test
camel - 14263 : camel - cxf should initialize the property on the factory bean if it ' s null
refactor animation handling by extracting logic into a separate method to improve code readability and maintainability
added logging functionality and modified play time handling in LauncherAnimationRunner to improve debugging capabilities and ensure correct play time based on device type
added a conditional check for bailoutOnException in C1XCompilation . java and introduced a new option BailoutOnException in C1X
changed default values for signup and passwd from " / forgot _ password " and " / forgot _ password " to null in Link
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reservedallocations
refactored date format handling in TimeConverter to use a new method to improve clarity and maintainability of date formatting logic
[ geotiff ] add nodatacontainer property to geotiffreader
[ gr - 26464 ] handle null source section in llvm exception .
replaced ` toString ( ) ` method with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and ` DefaultExecutionContext
replace blocking the ` blockUntilConnected ( ) ` method with a ` CountDownLatch ` for connection state checking to ensure proper timing and synchronization of connection state
removed redundant code lines in ArrayTypeHandler . java to improve code readability and prevent potential NullPointerExceptions
updated JakartaRegexpCapabilities to use reflection for retrieving the prefix and removed the RegexpTunnel class to improve performance by avoiding reflection - based access to the
updated application selection to use Application class instead of null to ensure proper type handling for application configuration
[ jbrules - 2441 ] fix npe on mutable global
added validation checks for asset name , URL , and description in AssetIssueActuator . java to ensure asset names , URL , and description are
fix copypaste for textfield and conel
[ lgbwebos ] add miss ` ` @ text / / offline . config - * - host ' ' and ` ` @ text
replaced direct calls to setSeedNodes and setActiveNodes with addAll methods for node configuration to improve code clarity and ensure all active and trust nodes are
added debugging information to test assertions and introduced failure handling in BaseTokenStreamTestCase . java to improve debugging capabilities and ensure proper thread management during tests
log4j2 - 1349 refactored patternprocessor . getnexttime ( ) to use cal . increment ( ) instead of direct current
refactor ` performItemClick ` and ` clickFirstItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to improve
pdfbox - 4071 : avoid npe in setitem ( ) , a suggest by valerybokov
add graphdecoder . aftermethodscope ( ) method to debug graph
updated HttpSessionDestroyedEvent to retrieve attribute values from the session instead of the source to improve accuracy in handling security contexts during session destruction events
added a test to verify the service name change in Zipkin using a manually provided one to ensure that the tracer behaves correctly when a service name
added logging statements to JavaInMemoryFileManager , JavaInMemoryFileManager , and JavacToJarStepFactory classes to improve traceability and
renamed ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` and updated related imports and tests accordingly to improve clarity and
increase timeout in clientmultimaplocktest from 4 second to 10 second
added a new parameter ` DEFAULT _ CACHE _ CAPACITY ` to the ` of ` methods in ` ConfluentSchemaRegistryDeserializerProvider ` to
replaced the " remind " checkbox with " checkAtStartup " for better clarity to improve user experience by providing a more descriptive text for update
[ java ] add getfactory ( ) method to nodegenerator .
refactor conditional logic in CascadingActions . java to improve readability to enhance code clarity and maintainability
added support for prototype property access in ScriptObject to enhance object extensibility checks in the scripting environment
changed the default read mode from " heap " to " mmap " in CommonConstants . java and added logging in ImmutableSegmentLoader . java to
added support for ByteArrayTemplate in ArrayTemplateBuilder to enhance functionality for handling byte array templates
added Hipchat support to SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class to enable integration with Hip
replaced List < URL > with Set < URL > for commandRegistryUrls and updated resource handling to improve resource management and ensure uniqueness of command
updated warning log message to include current context and added debug logging for uncovered HTTP methods to improve clarity of warning messages for better debugging and monitoring
remove checkloggedin ( ) from svnrepositoryconnector . login ( )
camel - 14284 : do n ' t set the transactionmanager in the endpoint if the session be not transacted .
vmware : fix checkstyle issue in api / agent / vmwareresource . java
refactor Timers class to improve code readability to enhance maintainability and facilitate future feature additions
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java `
removed deprecated token type constants from UAX29URLEmailTokenizer . java and updated constructors in TestUAX29URLEmailTokenizer . java to
removed unnecessary Map < Object , Object > implementation from ScriptObject class and updated related assertions in ContextTest to simplify the code and improve type safety by
refactor EventBusMetrics class for improved event handling to enhance performance and maintainability of event bus metrics
add getepersonlocale ( eperson ) and add getepersonlocale ( ) method to get eperson locale .
remove @ postconstruct from javerstransactionaldecorator , use @ initializingbean instead
removed null check for pgTypeName in TypeInfoCache . java to simplify code by eliminating unnecessary null check
added multiple server assignments in ScopedHandlerTest . java to ensure consistent server setup across different scenarios
fix calltimeoutexception when call time out during call - notify phase .
updated the condition to check if the password is empty in RestLoginProcessingFilter . java to ensure that the username and password are validated correctly before proceed
updated permission node comparison from an empty string to a wildcard string to improve code readability and reduce potential null pointer exceptions
renamed the ` encoding ` variable to ` sourceCharset ` and updated related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity and
changed the data type of postLogin from byte [ ] to String in HostBean and related classes to simplify the login handling by using a string representation
added imports for GenericComponentModifier and FlightConfiguration , and refactored simulation handling logic in GeneralOptimizationDialog . java to improve code clarity and
camel - 14263 : camel - main - spring - boot - spring - boot - spring - boot - spring - boot - spring - boot
updated log configuration properties in CommonTestUtils . java to improve logging configuration to enhance clarity and functionality of console - related configurations
refactor PrologSizeSanityCheck class for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a conditional check for non - mark support before invoking invokeSafely in RequestBody . java and created a corresponding test in RequestBodyTest .
added a check for ` embeddedSettings . isEnabled ( ) ` in ` EmbeddedNeo4jServer . java ` and modified ` DefaultBeanContext
update movementdebugcommands . java to use prefab asset instead of prefab default .
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted related calculations to improve the randomness of the load balance
refactor GsonParser to simplify cache string handling and remove redundant validation checks to improve code readability and maintainability by eliminating unnecessary checks
added comments to the " gcmsort " and " gcmdir " parameters in ApacheHttpClientMediaWikiApi . java to clarify the purpose of
replaced multiple instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` across multiple classes to improve clarity and consistency
replace ReentrantLock with PipeTaskCoordinatorLock in PipeTaskCoordinator . java and add a new PipeTaskCoordinatorLock class to improve thread safety and manage task
added a conditional check for usePreinstrumentedJars in DefaultSdkProvider to conditionally include preinstrumented JARs based on system properties
changed the condition from " ! isSilent " to " isSilent " in ExecDriver . java to ensure the condition accurately reflects the silent state of
added checks for default value and required attributes in IndexSchema to ensure proper error handling for unsupported attributes on dynamic fields
remove unnecessary randomlyreadrepair ( ) call in storageproxy . repair ( )
replaced ImmutableSortedSet with Iterables for adding system include paths in PrebuiltCxxLibrary to improve compatibility with the project filesystem ' s absol
refactor AdaptableX509CertSelector to initialize startDate and endDate with default values and add isSKIDSensitive and isSNSensitive flags to
[ log4j2 - 1349 ] nosqlappender should use abstractappender . parseint ( int , 0 ) for buffer size
mark the GuiScreenEvent class as deprecated to indicate that it should no longer be used in favor of an alternative implementation
remove unused method from categoryeditsearchrecyclerviewadapter
no effective change - add type parameter to servercachefactory . createcache ( )
refactor RocketComponent to reset massOverriddenBy , CGOverriddenBy , and CDOverriddenBy to null for each component to ensure
updated method names and added error handling in JavaCompilerService , SynchronizedTask , and JavaDiagnosticProvider to improve code clarity and ensure proper resource management
refactor Task class to use a Supplier for better null safety to improve code readability and reduce boilerplate
refactor wanreplicationserviceimpl to ensure thread safety when accessing the executor instance
added null checks for tPartition and table properties in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to improve robustness by
replaced anonymous inner classes with lambda expressions in LocalServiceRegistryClientImpl and RemoteServiceRegistry to improve code readability and reduce boilerplate code
added a new test class ` FilesTest ` and implemented file deletion functionality in ` Files ` to ensure proper handling of file deletions and
removed try - catch blocks around socket closing in ServerSocketAdaptor and SocketAdaptor to simplify code by directly calling close ( ) without unnecessary exception handling
updated the class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replaced the manual addition of a working directory with a call to addWorkingDir to improve code readability and maintainability by using a dedicated method
added null check for ` cn ` in ` ItemInfo . java ` and updated ` mInsets ` in ` Workspace . java ` to ensure
changed the access modifier of the String constant from public to private to enhance encapsulation and restrict access to the constant
updated the Java files to remove the " solr / update / json - jar " URL to simplify the configuration by removing unnecessary URLs
ggb - 205 fix for issymbolictoggle ( ) for twin geo
refactor client container startup handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve shutdown management and ensure proper resource cleanup
updated condition to check for null type in Linux . java to improve clarity and correctness of type validation logic
added resource cleanup and teardown methods in multiple test classes to ensure proper resource management and prevent memory leaks
added a search functionality to retrieve a string from the request URI and modified resource retrieval logic to enhance user experience by allowing dynamic search based on query parameters
removed the visibility of the neutral button in SetupEncryptionDialogFragment to improve user interface by hiding the neutral button when not needed
add includearchived and includewithdrawn parameter to itemdao . countitems ( ) and itemdaoimpl . countitems ( )
updated string concatenation syntax in DDLTask . java to use single quotes instead of single quotes to improve consistency and readability of SQL statements
added exception handling in CheckTokenEndpoint to handle OAuth2 exceptions to improve error management and debugging capabilities in the application
refactor multiple classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized parameters and improved HTTP response handling to enhance code readability and maintainability
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and added tooltips in SQLConsole . java to improve user experience by
updated Surefire version handling and warning messages related to JUnit 5 in ActionProviderImpl . java to ensure compatibility with newer Surefire versions and
replaced ` HumanReadableException ` with ` RuntimeException ` in ` WorkerShellStep . java ` to improve error handling by providing a more specific exception
[ hotfix ] [ runtime ] add experimental annotation to datastreamutils , collectsink , collectsink , socketstreamiterator and datastream
refactor StreamCepstrumSource class to improve code readability and maintainability
added a check to prevent index out of bounds errors in the List class to ensure that the index does not exceed the bounds of the list
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct type validation for SQL expression handling
added a confirmation flag to the DebugPaste command in DebugPaste . java to ensure that the debug paste command can be executed without requiring a permission
( chore ) camel - web - api : remove unnecessary call to . get ( ) in camel - management - context
refactor focus handling in DrawEquationWeb . java and add preventDefault ( ) call in RadioButtonTreeItem . java to improve code readability and
replaced ` Arg ` class with ` AbstractGoBinaryDescriptionArg ` and updated related imports and method signatures to improve code clarity and maintainability by
updated the logic for retrieving application environment configuration in Jooby . java to improve clarity and functionality of logback configuration handling
refactor ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of extending ` RetryListenerSupport ` to simplify retry listener implementation and improve code
fix ( meter ) : fix decimal format issue in elasticmeterregistry ( # 498 )
refactor Contribution class to use a constructor that initializes email , author , and commits to improve code readability and enforce immutability of
replaced a loop with a do - while loop for appending a space in JUnitFormatter . java to improve code readability and maintainability by
modified the handling of the " elements " field to create a new LinkedList if it does not match the class type to ensure that the original LinkedList is
updated exception messages in StaxEventItemReader to include the resource URL to improve clarity of error messages for better debugging
make testmultirendertarget more tolerant to change body of generated method
added null check for currentProfile before retrieving the client to avoid potential NullPointerException and log a debug message when the current client cannot be found at all
updated the method call from ` target . addNamespaceDeclaration ` to ` newElement . addNamespaceDeclaration ` to ensure the namespace declaration is added to
added cryptographic algorithms and variables for " p " , " q " , and " g " in KeyStoreManager . java to enhance security by
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in GImpactCollisionShape . java and Mesh
set bpmn engine version to activiti - 5 for bpmn deployer
updated resource loader properties in SpecificCompiler . java to use " resource . loaders " and " resource . loader . file . class " instead
added verification methods for thread attachment and next thread state in VMThreads and VMThreads classes to enhance thread management and ensure correct thread state during execution
updated GenericUDFMapValues to handle null maps and added a new test class for GenericUDFMapValues to ensure robust handling of null maps
corrected the term " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure consistency with naming convention
add config for oil spring generation rate and enableoilspouts to make it configurable
added functionality to create and check the " . clean - me " directory in ImportContext . java and updated conditions in JobQueue . java to ensure
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 463 : make exception
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
updated EXTID constants in ZipConstants64 . java and added an import statement in ZipEntry . java to improve code readability and maintainability by
refactor ` newFileSystem ` methods in ` ZipFileSystemProvider ` to improve file validation and error handling to enhance code clarity and ensure proper file existence
updated the layout addition method in IfControllerPanel to use a horizontal glue to improve layout consistency and readability of the code
added an @ Override annotation to the createConnection ( ) method in FailoverUpdateURIsTest . java to ensure proper initialization of the connection object
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enable serialization
rename deleterecord to deletebook to make it easy to delete book in test
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
ajp : fix off - by - one error in response message .
adminconsoleplugin : change startup / shutdown method to restart
removed the unregisterHandlers ( ) method and updated references to binaryConsumer and textConsumer in WebSocketImplBase . java to streamline resource management and improve
added properties for device ID transformation method , ID table , and log file in IoTDBDescriptor . java to enhance configuration options for device ID transformation
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and changed the search component name from " delaying " to " delaying
updated the condition in TestSignatureInfo . java to check if the access error is not null to ensure that the access error is not mocked when
transaction . hashforwitnesssignature : use witnessscript instead of scriptcode .
updated the expression to include " / schema / types / fieldType " alongside " / schema / types / fieldtype " to enhance functionality by allowing access
updated Completers . java to check for NullCompleter and added a new OptionCompleterTest . java file to enhance functionality and ensure correct behavior of
[ hotfix ] fix checkstyle violation in s3utils
[ iotdb - 4892 ] change the type of sourcepeerid and selfpeerid from string to int in iotconsensus
refactor FtpHelper to handle file uploads in a separate method to improve code readability and maintainability by encapsulating file upload
removed unused imports and set alpha values for the reply button in TweetFragment . java to improve code clarity and enhance button visibility for better user
updated the expected timestamp string format in AccessLogSupportTest . java to include an additional hyphen to improve readability and maintain consistency in the expected output
test : move testfiles - deleteme to tmp
removed null checks for subscribers and simplified the logic in SettingImpl . java to improve code clarity and eliminate unnecessary null checks
added a null check for the marshaller in AbstractSamlObjectBuilder and removed unnecessary static imports in AbstractSaml10ResponseView to improve error handling
replaced printStackTrace ( ) calls with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of printing to
added a condition to check if the assets directory is not in dev mode and updated tests in AssetsControllerTest to ensure proper handling of assets directories
[ hotfix ] [ state ] add writeoptions to rocksdbkeyedstatebackend
updated the default format string from " value - tag - index " to " value - index " to improve clarity and consistency in naming conventions
fix for dijkstrabi . minprecision = 0 in mainactivity
[ beam - 11486 ] change native secp256k1 , native altbn128 and native altbn128 to true .
rename ` DuclsSandboxTest ` to ` SandboxTest ` across multiple files to improve clarity and consistency in naming conventions
camel - 14297 : camel - cxf - cxf should set exception to exchange . setexception ( ex ) instead of log a warning
changed the access modifier of the forwardPropagateTree method from package - private to public to allow access from outside the package
updated SQL query to include a timeout value of 20ms to improve query performance and reduce execution time
add a warning when profile activation fails due to missing . file . location
refactor Style class to improve code readability to enhance maintainability and facilitate future feature additions
added zoom functionality to ShareActivity to handle back navigation to improve user experience by allowing users to exit the fab when zooming back
added a condition to skip deprecated fields in Json . java to improve handling of deprecated fields during JSON processing
added animations for showing and hiding views in the LauncherFragment to enhance user experience by providing visual feedback during floating compose transitions
[ hotfix ] [ yarn ] fix checkstyle violation in yarn module
added progressable parameter to multiple methods in Utilities . java and HiveBinaryOutputFormat . java to enable tracking of progress during sequence file writing operations
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider
added functionality to remove contributions and update panel ordering and colors in ContributionListPanel to improve user interface responsiveness and visual consistency
renamed the ` HyervisorTemplateAdapter ` class to ` HypervisorTemplateAdapter ` and removed the ` @ Component ` annotation to improve
added a check to set dPath to the user ' s directory if it is empty to ensure dPath defaults to the user ' s home directory
do n ' t use samplerate . e _ ac3 _ joc if format . samplerate be null .
log4j2 - 1349 add mapfilter . filter ( mapmessage ) method to avoid call getdata ( ) .
updated VerificationInOrderWithCallsTest . java file to improve test coverage for verification functionality
updated the axis reference from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method to ensure the method uses
updated the COLLECTION _ DELIM constant from " colelction . delim " to " collection . delim " to ensure consistency with naming convention
add a test to verify that the listener be connect at the start of the server .
[ gr - 5355 ] fix completion documentation for method with null type .
replaced direct calls to ` SystemProperties . getBoolean ` with a boolean variable ` mIsOneHandedModeSupported ` to improve code readability and
added onDetachedFromWindow method to manage async tasks in AppsCustomizePagedView to ensure proper cancellation of tasks when the view is
[ morfologik ] add dictionary resource to morfologik analyzer and filter
replaced the count variable with a thrown flag in ResultSetTest . java to simplify the exception handling logic by eliminating redundant count increments
updated the initialization message to use an empty string instead of " debug " to simplify the initialization message for better readability
replace AtomicReference with AtomicBoolean for thread - safe handling of lock timeouts and connection close exceptions to improve thread safety and ensure proper exception handling for lock timeout
refactor tooltip text handling in ComponentTreeRenderer to use a dedicated method to improve code readability and maintainability by reducing duplication
increased the timeout duration in ZipkinStreamTests from 5 seconds to 10 seconds to allow more time for the zipkin server to become up
fix deviantart login fail if username or password be not provide .
replaced hardcoded Google Signature constants with constants for platform and legacy keys to improve maintainability and readability of the code
updated method call from ` commonApp . solutionBusiness ` to ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAllT
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes in the application
added email description to the template data in EntityGroupKeyContentFormatter . java and set it in TestEntityGroupKeyEmailContentFormatter . java to
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
refactor language retrieval logic in Locale . java and add a test case in LocaleTest . java to improve clarity and correctness of ISO3 language
refactor change log parsing and update execution to use a dedicated createUpdateVisitor method to improve code readability and maintainability by encapsulating
added a condition to return early if screen pinning is active in OverviewCommandHelper to optimize performance by avoiding unnecessary processing when screen pinning is
added methods to set and draw no data text in the Chart class to improve user experience by providing clearer feedback when no data is available
added synchronized blocks around checkValid ( ) and checkHeadWritten ( ) methods in Http1xServerResponse and Http2ServerResponseImpl classes to
fix the issue that nettyresponse do n ' t support ssl
updated Http2TestBase , TestHttp2Limits , TestHttp2Section _ 8 _ 1 , and TestHttp2Section _ 8 _ 1
fixed - rlocalcachedmap . getkey ( ) and getvalues ( ) method throw npe if storemode = localcache .
camel - 14284 : fixed npe in jpaendpoint when use camel - jpa with camel - jpa
corrected the spelling of " fallSpeed " to " jumpSpeed " in PhysicsCharacter . java to ensure consistency in variable naming conventions
added a null check for reparsedFunction in the condition to ensure proper handling of cases where reparsedFunction is null
updated logging statements and variable names in BitstampPusherService . java for consistency and clarity to improve code readability and maintainability by using more
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient . java to indicate that these methods are outdated and should no longer be
updated findOne method to accept a filter parameter to enable filtering of results based on the specified filter
camel - juel : add fail predicate test for juel
added a range check for alpha values in RecentsView . java to ensure alpha values are within the valid range of 0 to 1
updated the version string formatting in the Import - Package attribute to ensure proper formatting of the version string in the import package
refactor DataSyncConfiguration class to improve code readability and maintainability
added import for JavaSnippetRepository and called JavaSnippetRepository . INSTANCE . init ( ) in JavaLanguageServer . java to initialize the snippet repository for
added a loop to update sums based on the number of time buckets in StarTreeRecordStoreCircularBufferImpl . java to ensure sums are
[ java ] update link to chromedriver . storage . googleapis . com
camel - 18105 : fix pgeventconsumer and pgeventproducer to use preparedstatement to execute statement .
replace sun . sun . syndication . feed package with rometools . rome . feed . synd
added content - length header handling in TransferCompletionHandler and updated NettyTransferAdapter to use FluentCaseInsensitiveStringsMap in NettyAsyncHttpProvider to
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
removed the constructor from the EnhancedRuntimeException class to streamline the exception handling by eliminating unnecessary parameters
[ log4j2 - 1342 ] fix flaky test in socketappendertest
( chore ) camel - dsl : remove unused import
updated method signature and exception handling in ByteArray . java to improve error handling and maintain consistency in method signatures
added a method to disable input proxy and modified touch event handling in RecentsAnimationWrapper . java to improve touch event management and ensure proper handling of
camel - 6770 : camel - restlet should use camel - restlet instead of camel - rest
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify the method signature and improve code readability
rename modulepathtest to modulepath to make it easy to run .
added a new method ` getSourceDirs ( ) ` to ` JavaServerConfiguration ` and modified formatting in ` JavaLanguageServer ` to improve code
updated menu item ID from ` menu _ open _ web ` to ` menu _ mute _ hashtags ` in ` TweetPager . java
updated method names and assertions from " nodeIsAncestorOf " to " nodeIsNotAncestorOf " and " nodeIsDescendantOf " to " node
fix an off - by - one error in the worldeditplayer .
added ` PathNotExistException ` to the ` selfCheckDataTypes ` method and refactored conditional checks in ` InsertNode . java ` to
removed extraneous characters from the closing brace in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ operator ] fix npe in asyncwaitoperatorfactory
hbase - 24499 add support for settablestateinmeta and fixmeta method in hbck
updated method reference from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests . java
updated BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure compatibility with the current test class
[ hotfix ] [ runtime ] use lasttimedata instead of remoteitems in kerberoswatcher
updated calculation to include padding in allAppsCellWidthPx to improve layout consistency for app display
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
updated references from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistency in
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure a single merge operation is
refactor session . close ( ) to session . close ( ) to make it compatible with java 8
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
schemavalidatortask : do n ' t print stacktraces if exception be null
refactor exception handling in Contents . java to simplify exception management to improve code readability and maintainability by simplifying exception handling
updated ` GeneratePubkeyActivity ` to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with newer Android features and improve
ruby flavor : add ruby code point quantifier support for ruby flavor .
changed logging level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
[ java ] remove the usecaches attribute from the nio endpoint .
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for database reading to improve flexibility and reduce dependency on Maxmind
update instructorfeedbackresultspageuitest to reflect new html view
phoenix - 4892 : do n ' t use encoded qualifier list optimization if scan be not raw
removed the ` public ` access modifier from several methods in ` ApprovalStore ` , ` ApprovalsControllerService ` , and ` Approval
added a flag to manage download progress in FileDownloader to ensure notifications are canceled when the download process is stopped
replaced ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController . java ` and added a new method ` getView
updated project version in JFreeChartResources . java from " 1.0 . 11 " to " 1.0 . 13 " and corrected a typo in
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure consistent thread execution
refactor GsonBuilder class for improved readability to enhance maintainability and ease of understanding for future developers
added null checks for circleCenters before adding it to fixedPoints to avoid potential NullPointerExceptions when adding circleCenters
remove -- java . espressohome option , use homefinder . languagehomes instead .
doc : fix typo in javadoc of ctcodeelement , ctif , cttypeinformation , ctqueryable
make deletesessionaction final and remove unnecessary boolean field
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " in the exception class to
initialize ` sz ` to 0 in ` JoinQParserPlugin . java ` and modify ` result ` initialization in ` SolrIndexSearcher . java `
updated triggerMediaScan method to include the file parameter to enhance media scan functionality by associating media scans with their respective files
removed conditional printing of test results in TestRunning . java to streamline the execution of test results based on verbosity settings
added methods to set custom G - code settings in MainWindow . java to enhance custom G - code functionality by allowing dynamic text updates
updated Writer initialization to use OutputStreamWriter instead of PrintWriter to ensure proper character encoding for output stream operations
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future feature additions
added imports for SolrTestCaseJ4 and modified exception handling in TestBadConfig . java to ensure proper exception management during test execution by ignoring specific
added a method to remove fragments and the action bar in GpsMainActivity to ensure the UI reflects the removal of fragments and the support action bar
corrected the spelling of " ( " to " ( " ) " in the TokenizerAnnotatorITest . java file to ensure
updated Range handling in RemoteMediaHandler , RemoteRawHandler , RemoteRawHandler , RemoteMediaHandler , RemoteRawHandler , and RemoteUtil classes to
updated the gcode file path and modified G - code output messages in VisualizerCanvas . java and GcodeViewParse . java to improve clarity
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwardsCompatibility .
updated assertion syntax in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintainability
added a condition to close the exchange client when the query is completed to ensure proper resource management and prevent potential resource leaks
fix integrity check to use temporary folder instead of file directory .
added import for SolrClient and a map < String , List < SolrClient > > shardToClient in ChaosMonkey . java to facilitate
do n ' t try to use database config store if there be no database file
removed unnecessary whitespace in NestedRepositoryTreePanel . java to improve code readability and maintainability
make extensiontypeheader constructor public and add validation for extension type .
pdfbox - 4071 : do n ' t swallow exception when update pdfield / pdtextfield
changed the default value of pushOnShutdown from false to true and added getter and setter methods in PrometheusProperties . java to ensure proper configuration
added a trigger callback and modified event handling logic in ReactiveStateMachineExecutor . java to improve error handling and logging for state machine triggers
added a test method to verify the behavior of the Python interpreter when multiple executables on a path is set to ensure that the first path is returned
added a default button to the user interface in InitialAccountRegistrationFrame to enhance user experience by allowing the sign - in functionality
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN and modified
updated error logging messages in RegistrationRestRepository . java to include exception details to improve debugging by providing more context in error messages
move reflectionutils from org . axonframework . util . reflection to org . axonframework . util
added a static method ` listableCollector ( ) ` in ` OidcIdTokenClaimCollector ` and created corresponding unit tests in ` O
removed unused center field from Circle , Ellipse , Polyline , and Rectangle classes to streamline code by eliminating unused center variables
[ flink - 18335 ] [ runtime ] fix the bug of registerandprocessbundleoperation . checktransformoutputpcollectionname ( #
updated SslContextFactory to enhance SSL context handling to improve security and performance of SSL connections
[ hotfix ] [ test ] remove @ ignore from configurationpropertiestest
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive error message for better user
fix : add consumerclassloaderfilter ( ) to support servicemodel . getcontextclassloader ( ) ( # 9986 )
added a boolean parameter ` copyRowHeight ` and modified the ` shiftRows ` method to include a ` resetOriginalRowHeight ` parameter to control row height
renamed ` setRolloverIcon ` and ` setRolloverPressedIcon ` to ` setRolloverIcon ` and ` setRolloverPressedIcon
refactor TaskViewUtils , TaskViewSimulator , RecentsView , and TaskViewSimulator to improve grid translation handling to enhance code clarity and maintain
refactor assertion methods in Assertions . java to improve code readability and maintainability
added null check for currentDateTimeFunction in multiple database classes to ensure consistent retrieval of the current function when it is not null
added an anonymous path utility method in IOUtils . java and updated Log4jUtils . java to use it to improve path handling and ensure correct file
updated the ` call ` method in ` DigitalWellBeingToast ` and ` TaskView ` to include a content description parameter to enhance
added a timeout condition to the metaAvailable wait method in CatalogTracker . java to allow for a default timeout when the metaServerConnection is not available
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
fix genericitem . getstate ( ) to return stateconverterutil . defaultconversion ( )
added Hibernate integration tests and updated import statements in BidirectionalOneToOneNPlusOneTest . java to enhance testing capabilities for Hibernate integration and
removed extra empty screen from the workspace and updated start search page index logic to ensure search page index is reset when no workspace screens are available
updated HashMap and HashSet initializations in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve memory efficiency and
replace single quotes with double quotes in GoogleLineChart and GooglePieChart to improve consistency in string representation across chart components
do n ' t wait for batch to complete in sendingaccountor . waitforbatches ( ) .
added a position field and its setter method in WALPrettyPrinter to track the position of the WAL file to enhance the WALPrettyPrinter
updated the timeout parameter in the Transceiver constructor from 1 to 0 to ensure the Transceiver connects to the correct port when the server
updated event sorting logic in SimpleReport . java and added a new test in SimpleReportTest . java to ensure consistent ordering of log events before generating
added a test method to verify CSV line description contains double quotes to ensure correct handling of escaped quotes in CSV output
make sure we do n ' t try to run the chinese benchmark in the test suite
iqrouter and iqhandler should n ' t send message to remote jid . jm - 121
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unnecessary annotations
updated configuration keys in Fetcher2 . java to use Protocol constants instead of hardcoded strings to improve code readability and maintainability by using
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java to
updated package references from " other _ package " to " other _ package2 " in AstTests . java to ensure correct references to the new package
fix worldborder diameter not be adjust correctly ( # 118 )
hbase - 25836 do n ' t try to create a regionserver replication if the master do n ' t have user region
refactor error handling in ` AppWFull . java ` to include ` EventRenderable ` parameter to improve clarity and functionality of the ` checkOpen `
refactor routingTable to use a new method for generating instance configurations to improve code readability and maintainability by reducing redundancy
changed the access modifier of the FieldAttributes class from package - private to public to allow access to FieldAttributes from other packages
add a test to verify that the problem with a pom contain a reference .
removed multiple null checks from the conditional check in PropertyMap . java to simplify the logic for better readability and maintainability
refactor getControllerId methods to accept a configId parameter and streamline relay addition logic to improve code readability and maintainability by lever
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper resource management
removed the check for refresh token generation in the consent approval view resolver to simplify the condition for better readability and maintainability
removed a debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with a custom NoopGetter implementation in BaggagePropagation . java to provide a standardized implementation of the NoopGetter
refactored ConditionalOnEnabledResourceChain class to improve resource management to enhance performance and maintainability of the resource chain logic
added a condition to check if the tree root has children in BarrowmanCalculator . java to ensure that the tree root is valid before proceeding
updated the input stream from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter .
updated FacebookImpl to use CN1 logging messages and added method calls for restoring intent result listeners to improve logging clarity and ensure proper handling of session
replaced hardcoded " h : mm a " with " skeleton " in ShadowICU . java and added new tests in ShadowICUTest
removed the KeyguardManager dependency and simplified the condition check in TouchInteractionService . java to streamline the code and improve readability by eliminating unnecessary
cloudstack - 1186 : fix npe when createvolume fail due to null diskoffering
replaced ` FileChannel ` with ` AsynchronousFileChannel ` and added position tracking in ` UtowBodyHandler . java ` to improve performance and
reformatted code in SigInt and SigIntTest classes for consistency to improve readability and maintainability of the code
remove ` ` update by boundingboxresize ' ' method , use ` ` prepareboundingresize ' ' instead
change return value from - 1 to 0 in Asset . java to correct the behavior of the method
make computebenchmark more efficient by reduce the number of iteration
added a refresh listener to the UploadListFragment to notify the adapter when the data set changes
fix : change file type to path in bibdatabasecontext .
replaced direct access to ` emitters . items ` with ` emitters . get ( i ) ` in ` ParticleEffect . java ` and
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13939 -
updated error message formatting in Console . java and BuildRuleFactoryParamsTest . java to improve clarity and consistency in error reporting
added a check to return early if the playback state is not PLAYING to prevent further processing when the playback state changes
replaced the retrieval of ` ServiceComponentDesiredStateEntityPK ` with a direct retrieval of ` findById ` to simplify the retrieval of ` ServiceComponentDesired
refactor Java2TypeScriptTranslator to improve inner class handling and add a new test class for inner class field clash to enhance code clarity and ensure
added follow - redirect filter functionality to DockerClientFactory and DockerClientProfile classes to enable configurable logging and follow - redirect behavior for Docker clients
replaced direct calls to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) to ensure thread safety during display change operations
hhh - 10183 fixed flaky testnationalizedscalarquerytest
added a try - finally block around the verifyZipHeader ( ) method in ZipHelper . java to ensure proper resource management and prevent potential memory leak
changed the access modifier of the ` storeClassFile ` method from private to public to allow access to the method from other classes
added a new test class ` TestSortedSetDocValues ` and modified ` ecj . javadocs . prefs ` to use ` error ` instead
removed specific error messages in CGIHandler . java and added a callback handler in JavaVM . java to improve error handling and ensure runnable execution is
updated condition to include additional newline characters in LineReaderImpl . java to ensure compatibility with additional line endings in the application
replaced List < String > with Set < String > for hash pairs in multiple classes to improve performance by allowing multiple hash sets for file hashes
added a check to return early if the mesh has no vertices to avoid unnecessary processing when there are no vertices in the shader
updated test methods to print argument types and added verification error handling in IncorectBindingPuzzleFixedTest . java and IncorectBindingP
replaced ` FileUtil . createData ( root , menuPath ) ` with ` FileUtil . createFolder ( root , menuPath ) ` to
fix checkstyle violation : remove unused import
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
updated idle time condition in SelectChannelEndPoint . java and modified HttpConnection . java to return low resource max idle time instead of idle time to improve
fix farmlandblock . cansustainplant ( ) not call the blockstate . cansustainplant ( ) method . close #
added a new database table ' s SALT _ BUCKETS ' attribute and updated the query handling in multiple classes to enhance database metadata validation and
updated HttpCookie . java to use Locale . US and added a new class B6791927 . java to ensure consistent date formatting across different locales
added multiple redundant calls to db . close ( ) in DbHelper . java to ensure proper resource management and prevent potential memory leaks
increased the timeout duration for processed and recovered results from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow more time for
add tracera and globalliveness analysis phase to economyallocationstage when tracera be enable
fix keybindings . save ( ) not store the source when the key be press .
refactor ObjectMapper initialization to use a static block and set the line separator to ensure consistent line endings across different operating systems
change windows path to [ / ] in nativeenvironmentrepository . getname ( ) .
refactored test classes to replace ` Application ` with a static ` Application ` instance and added a ` @ PostConstruct ` method to ensure proper
[ java ] remove record log validation code that be no longer need .
[ ci ] use errorgroupname instead of groupname in itsystemtest
do n ' t sleep when run testfuzzyoptimizations on travis
added a private boolean variable ` reverseImage ` and removed its assignment from ` PreferenceManager . getDefaultSharedPreferences ( context ) ` to streamline code
updated string comparison from " META - INF / " to " META - INF / " in multiple files to improve code readability and maintain
add replacefields ( ) and replacefieldsbypredicate ( ) method to terserutil to make it easy to use
updated test annotations and method visibility from public to package - private for compatibility with JUnit 5
refactor settypes to avoid use of new . arraylist ( ) .
refactor TypeUtil methods for improved readability to enhance maintainability and facilitate future updates
updated the trigger time formatting in AbstractAlertNotifyHandler to include timezone - specific timezone handling to ensure accurate representation of date creation time in the application '
added a method ` maybeCreateAbstractMethodErrorThrower ` in ` MethodHandleResolver . java ` to handle abstract method errors to improve error handling for
camel - 14263 : simple : do n ' t allow $ { bodyxxx } to be valid ognl syntax .
do n ' t return an empty targetgraph when there be no toexplore
camel - 14284 : jcloudspayloadconverter should copy the inputstream to the outputstream , not the inputstream .
remove ignore annotation for the OSGi bundle not release yet .
added a condition to check for both ABSTRACT and DEFAULT flags in Check . java and created a new test class CheckACC _ STRICT
[ java ] increase timeout for channel validation test .
added a new file ` FileExtensions . java ` that defines file extensions for Clang to provide a standardized way to define file extensions for C
replaced ThreadLocalDateFormat instantiation with a static final instance and modified the initialization of FORMAT _ THREAD _ LOCAL to improve performance by avoiding unnecessary object creation
remove deprecate usecgroupmemorylimitforheap from vmdeprecatedoptions . java
added a displayName property and modified DelegatedClientIdentityProviderConfiguration to support custom display name configuration to enhance customization options and improve code maintainability
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a more descriptive exception type
removed unnecessary whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
refactor HttpBindServlet , HttpConnection , and HttpSession classes to improve response consumption and connection management to enhance code clarity and ensure proper handling of connection
fix npe in event . getcapabilities ( ) when parent be null
wallettool : catch all exception , not just keycrypterexception
updated AsyncCompletionService and SubmitOrderedCompletionService to indicate that the service should no longer be used and may be removed in future versions
updated the calculation of the hyphenation length in HyphenationTree . java to correctly reflect the current length of the hyphenation string
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to ensure that the operation completes before proceeding with further operations
move resources . java to package javax . swing . * so that it can be use by swing .
corrected the spelling of " javac flag - parameters " in the PARAMETER _ NEEDS _ TO _ BE _ NAMED string
added a flag ` providersChanged ` initialized to false in ` ConfigurationManager . java ` to track changes in provider state during configuration changes
added a method ` quoteIdentifierTokens ( TokenRewriteStream tokenRewriteStream ) ` to handle identifier token quoting to ensure proper handling of special characters in
modified the null check for ' type1 ' in FileSystemFontProvider . java to handle cases where ' name ' is missing to ensure proper handling of
updated type casting and removed unchecked warnings in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings
updated boundary condition in Window . java to include a check for the current actor ' s parent to ensure proper handling of cells within the window boundaries
added null check for appManifest before retrieving targetSdkVersion in ShadowContextWrapper . java to avoid potential NullPointerException when accessing appManifest
refactor ` ConfigurationMetadataGenerator ` and ` CasConfigurationMetadataCatalog ` to improve code readability and maintainability by consolidating configuration metadata
added userName property and its getter / setter methods to Driver , HiveSemanticAnalyzerHookContext , and SQLOperation classes to allow configuration of the user name
added methods for setting different Transformer configurations in XsltBuilder . java and updated XsltComponent . java to use newInstance to improve flexibility
added HadoopShim dependency to ContainerRunnerImpl and TaskRunnerCallable classes to enhance compatibility with Hadoop features in the Tez framework
updated test cases in ShadowAssetManagerTest , ShadowContentObserverTest , ShadowDownloadManagerTest , ShadowAssetManagerTest , and ShadowAssetManagerTest
do n ' t log access when there ' s no context available
updated ThroughputLogger to return early if startTime is zero and improved message formatting in ThroughputLoggerTest to enhance performance tracking and provide clearer feedback
replaced ` CompilerConfigFileWarning ` and ` ConfigFileWarning ` with ` Platform . isDebugBuild ( ) ` and added a new ` VMOption
replaced instances of ` MeterStatisticsManager . statisticsOperationMap . clear ( ) ` and ` MeterStatisticsManager . statisticsModelMap . clear
updated logback configuration handling in FrameworkLauncherExtended . java to improve clarity and functionality of logback configuration management
added @ NotNull annotations to method parameters and methods in various classes to enforce non - null values and improve cookie value management
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` across multiple files and added ` SHELL _
refactor ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` to use try - with - resources for container retrieval to ensure proper resource
rename ` TestLucene50FieldInfoFormat ` class to ` TestLucene60FieldInfoFormat ` to reflect the new test case
updated the closing brace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate shield addresses in RpcApiService to facilitate the generation of shield addresses in the wallet
change return type of readConsoleInput method from byte [ 0 ] to String in JansiWinSysTerminal and JnaWinSysTerminal classes to
updated regex patterns and variable initialization in TestStabilityRule . java to enhance input validation for platform detection
updated the handling of multi - valued fields in DefaultSolrHighlighter and added a test for multi - valued fields in HighlighterTest to improve highlighting functionality
modified the ` tryToLogin ` method to accept an additional parameters for username and password to enhance security by allowing credentials for the login process
updated entity handling in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to improve entity validation and
fixed checkstyle violation in jmsproducer
replaced wrapCollection ( parameter ) with direct parameter parameter in the update method to simplify parameter handling and improve code readability
added exception handling for currency conversion in BTCEAdapters . java to improve robustness by ignoring unknown currency exceptions
refactor subscription creation logic in DurableConduitBridge . java to improve clarity and maintainability of subscription handling logic
pdfbox - 4071 : fix typo find by codespell on fossies . org
updated ` startController ` method to accept a boolean parameter and added new methods for broker and server tenant creation in ` ClusterTest ` and ` 
replaced ImmutableMap . Builder ( ) with direct casting of response value to simplify code and improve type safety
added a check for non - empty attributes in ProjectWorkspace . java to ensure that the attribute list is not empty before processing to avoid potential errors
added new methods ` getProjectJdkName ( ) ` , ` getProjectJdkType ( ) ` , ` getProjectLanguageLevel ( )
changed the experimental flag from Experimenal to Experimental in HiveSessionProperties . java to indicate that the optimization is intended for future development
added a new test method for resolving ACLs with user details in GrantedAuthorityEffectiveAclsResolverTests . java to improve test coverage and ensure
use typesolver . getsolvedjavalangobject instead of reflectionmodel . getsolvedjavalangobject .
added button management logic to XToolkit for retrieving the number of buttons to ensure that the system does not exceed a defined maximum limit for button support
updated import statement to use com . oracle . java . testlibrary . Asserts . assertEquals instead of jdk . testlibrary . Asserts to ensure
refactor MessagePack and MessageUnpacker to use a new MessagePackFactory class for creating MessagePacker instances to improve code organization and facilitate
added new biome tags IS _ DESERT and IS _ CAVE to the Tags . java files and updated their usage in ForgeBiomeTags
rename ` present ( ) ` method to ` draw ( ) ` in multiple screen classes to improve clarity and consistency in method naming
added conditional logic to update UIIDs based on the horizontal orientation of the ComponentGroup to ensure correct UI ID assignment based on the element ' s UI
updated regex pattern in DOIServiceImpl . java to use a direct matcher instead of a regex pattern to improve code readability and maintainability by
replaced ` touchHandler instanceof androidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput
[ java ] remove unnecessary volatile from clusteredserviceagent . tryclaim ( ) .
add example record support for @ idclass ( usersiteid , @ embeddable ) .
refactor HttpConverterRegistrar to handle URLs and port retrieval more robustly to improve error handling for invalid port formats and provide clearer error messages
api : do n ' t update storage capacity if it ' s storage _ allocated or storage _ storage
replaced ` dir . openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` dir . fileLength ( fileName ) `
refactor JavascriptCompiler to use final modifiers and improve code readability to enhance immutability and maintainability of the code
added synchronized block around the store method in UISettings . java to ensure thread safety when accessing shared resources
added a condition to return early if native text input is active and text editing is active in TextField . java to improve user experience by preventing unintended text
fix spannerio retry on multi - transaction emulator
2 . x : remove redundant type parameter in compilertest
updated array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java to ensure correct handling of short arrays
changed the method of retrieving the nonce claim from ` getClaim ` to ` getStringClaim ` and changed the error logging level to ` warn ` to
added a condition to check if a field is a relationship field in DCInputSet . java to ensure proper handling of relationship fields in input processing
added server slogan support to the capabilities table and updated related code to enhance user experience by providing a customizable server slogan for the capabilities table
refactor conditional statements in DrawerActivity . java for clarity to improve code readability and maintainability
added JUnit Assume import and modified test failure message to use System . out . println and Assume . assumeNoException in SolrRequestParserTest .
added a check to return early if there are no missing symbols to optimize performance by avoiding unnecessary processing when no symbols are present
updated the data structure in StringHelperTest . java to include additional data to ensure proper formatting and formatting of output data
added a warning log when the data provider returns an empty array or iterator to ensure that the test does not proceed if the data provider returns an empty
use collections . emptymap ( ) instead of collections . empty _ list
update freeplane version to 9.0 . 8 and add new feature to map style model
replace mass with restitution in setPhysicsRigidBody method call to improve clarity by using a more descriptive variable name
added a new AutoFtpActivity class to handle FTP test success and failure scenarios to facilitate automated testing of FTP operations in the app
refactor token type handling in BaseSemanticAnalyzer to improve readability to enhance code clarity and maintainability by reducing repetitive code
added methods to retrieve and set component state across multiple classes to improve state management functionality across the UI components
added a new class RemoteExecutionEnabled with serialization and deserialization methods to enable and disable remote execution in the build system
pdfbox - 4071 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` and added ` StandardCharsets . UTF _ 8 ` suppressions in ` ImportCsv . java ` to
added assertWorkingScoreFromScratch method call to assertShadowVariablesAreNotStale in AbstractScoreDirector . java to ensure that shadow variables are not stale
updated the configuration property from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " to improve performance
added logging functionality to various decoder classes to ensure ignored message content is not an instance of ` ByteBuf ` , ` byte [ ] ` , ` byte
updated ` removeFile ` method to include a boolean parameter and modified directory removal logic in ` SynchronizeFolderOperation ` and ` FileDisplayActivity `
added assertions for transaction hash presence and verification in PollingTransactionReceiptProcessorTest . java to ensure proper validation of transaction hash in transaction processing
[ iotdb - 4071 ] fix schemaregionbasictest . testconstructschemablacklist ( ) for delete timeseries .
added a null check for sampleMimeType in MediaCodecRenderer . java to ensure proper handling of null sampleMimeTypes to avoid runtime exceptions
replaced calls to ` this . notify ( ) ` and ` this . wait ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to ensure proper
added support for create an index on a view in MetaDataClient . java to ensure that index creation is planned for future implementation
added a new ` Website ` class with properties and corresponding getters and setters to the ` PopulatorImplTest ` class to provide a
added a setup method to the BSFormatterTest class to set the default locale to US to ensure consistent locale settings for tests
add a check to make sure we do n ' t try to download a bunch of badly downloaded jar .
updated assertions in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve test readability and maintainability by using
added a condition to check for single expressions in SimpleExprGenerator to ensure proper handling of variable expression tokens when processing parameters
added a volatile boolean field ` createdVertx ` and updated the conditional check in ` VertxComponent . java ` to ensure that the component only
updated attribute calls in NodeStyleBuilder to use the node object instead of null to improve code clarity and maintainability by using a single instance of Node
corrected the spelling of " Synchronized " in Log _ OC . e to " Synchronized " and added null checks for
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated related classes to set the ignored read status based on keywords
replaced MavenTestingUtils . getTargetURI ( ) with MavenPaths . targetDir ( ) for resource resolution to improve code clarity and maintainability by
added validation checks for URIRegisterDTO and updated imports in RegisterServerConsumerExecutor . java to enhance data validation logic and improve code clarity
updated sound playback logic to check if the sound is paused to ensure proper playback behavior when the sound is not paused
added a new permission PERMISSION _ ADMIN _ SUDO _ AREA caption in MainCommand . java and updated Captions . java
refactor query option handling in ServerRequestPlanVisitor to use HashMap instead of ImmutableMap to improve code readability and maintainability by encapsulating
updated path equality checks in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8Parser
refactor assertions in ResourcesTest to use constants for Emoji to improve readability and maintainability of the test code
added new native methods NMTOverflowHashBucket and NMTMallocWithPseudoStack in WhiteBox . java to enhance functionality and improve memory allocation
[ hotfix ] [ serializer ] migrate javaeitherserializersnapshot to javaeitherserializersnapshot for compatibility
updated AddressResolverOptions to use a new default rotation option and introduced a new resolvOption method to improve flexibility in handling different rotation configurations
added a call to the superclass ' s __ associate method in RequestRockerTemplate and created a corresponding test in RequestRockerTemplateTest to ensure
pdfbox - 4071 : return empty string instead of null if no value be find
updated XML namespace paths from " liquibase / parser / core / xml / " to " www . liquibase . org / xml / ns / dbchange
move commonmimetypelocator to test so it can be use by other test .
replaced instances of ` INIT ` with ` NOT _ REQUIRED ` in multiple classes to improve clarity and consistency in repository version state representation
updated the comparison logic in GenerateChangeLogTask to include additional schema comparison parameters to enhance the comparison process by allowing for more flexible schema comparisons
[ hotfix ] [ test ] migrate backward anoamlyfunctionutils to testng
added a new file ` ProgressiveJPEGTest . java ` for progressive JPEG rendering to implement a graphical rendering test for progressive JPEG images
updated material loading logic by replacing setAlphaTest and setAlphaFallOff with setFloat and resetting properties to null to improve memory management and
[ gr - 36411 ] improve error message for native - image building on window .
added a null and empty check for the text before setting the size in the Label class to ensure that the setSize method only calls when the text is
updated readVarInt ( ) method to use modulo 1 _ 000 _ 000 instead of a fixed value to ensure correct handling of variable
added private constructors to PushUtils and ThumbnailsCacheManager classes to enforce singleton pattern and prevent instantiation
replaced the calculation of the ` length ` variable with a direct call to ` curConfig . getLength ( ) ` to simplify the code by directly using
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code by removing unnecessary type casting
updated the regex pattern for loading presets from " . * csv " to " ( ? ? i ) . * csv " to enhance flexibility in
added a condition to check if the app is in the app before announcing accessibility in TaskbarStashController to ensure accessibility is only announced when in
replaced the usage of ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNodeId ( ) ` in `
pmd : add targetjdk15 and targetjdk13 to pmdtask , a suggest by valerybokov
replaced PowerMock with MockitoJUnitRunner for testing QuotaResponseBuilderImplTest and updated Mockito usage to improve test reliability and maintainability by using
added error and error output streams to TestSchemaToolCatalogOps . java to manage error and output streams for better debugging and monitoring
added a DFSClient parameter to the constructors and methods in FanOutOneBlockAsyncDFSOutputSaslHelper . java to enhance functionality
added RepositoryMetadata parameter to MongoQueryMethod constructor and related methods to enhance query functionality by associating repository metadata with the query method
http : / / issues . apache . org / jira / browse / http : / / issues . apache . org / jira / browse
removed redundant import statements and updated static import statements in MetaDataEndpointImpl . java to streamline code by eliminating redundancy and improving readability
increased ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added a retry interval in TxnHandler . java to allow
renamed ` xl ` to ` xAxis ` in ` BarChartActivity . java ` and updated ` yOffset ` calculation in ` LineChartActivity
added methods to check for printable characters and Windows system names in FsUtils . java to enhance character validation and ensure compatibility across different operating systems
rename ` ` in ' ' to ` ` using ' ' in selenide test
add processpluginconfiguration option to projectbuilder and defaultlifecycleexecutor to allow plugins to be process by default
updated decimal places in ProxyConnectionManager , ServerTrafficCounter , and ProxyConnectionManager to use decimal places for precision to improve code readability and maintain
[ google - cloud - vision ] fix integration test for google - cloud - vision
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , ActiveConnectionRecord , ActiveConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser
do n ' t show admin button in communitylistservlet if user be not admin
added a long and short compaction thread counter to the ThreadPoolExecutor to track the number of compaction threads for better debugging and monitoring
updated the method of obtaining the package name from ` getApplication ( ) . getPackageName ( ) ` to ` getResourcePackageName ( ) ` to ensure compatibility with
updated the method for retrieving players in a plot by introducing a new method to filter players in the plot ' s visible list to improve user experience by
refactor AndroidManifest , ResName , ShadowMediaPlayer , ShadowActivity , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest class for improved readability to enhance maintainability and facilitate future updates
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant ` OPERATING _ SYSTEM
corrected the spelling of " referencedContainer " in ` SchemeGenerator . java ` and added a new test in ` SchemeGeneratorTest . java
updated key and initialization logic in UploadFileOperation . java to use generated keys and random bytes to simplify key generation and initialization logic for file encryption
added stability annotation for LOCAL and POSTSUBMIT platforms in WorkProfileTest . java to address issue b / 243688989
added a check to skip processing if the bucketing version is not set in TezCompiler . java to ensure that only valid bucketing versions are
replace ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` GwtTestWrapper
refactor LockFreeBucket to be an abstract class and add LockFreeBucketContendedTimeMeter and LockFreeBucket _ FinalFields _ CacheLine
patch by jbellis ; review by brandonwilliams for cassandra - 118
updated max bitrate retrieval to use user preferences in ExternalPlayerActivity and PlaybackController to ensure correct bitrate is set based on user preferences
refactor ZipkinHttpSpanExtractor to encapsulate trace and span ID checks to improve code readability and maintainability by reducing duplication
refactored userpaymentaccounts method to be abstract to allow subclassing .
remove reflection - based code that be not need any more .
added a line to set the project in LauncherUtils . java to ensure the project is correctly set for the file system
updated JsBundle , JsBundleBuilder , JsLibraryBuilder , JsTestScenario , and JsBundleWorkerJobArgs to include
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ runtime ] fix typo in metricsdslcontext javadoc
removed the implementation of the VersionConfig interface and updated its usage in VersionBuckConfig . java to simplify the class structure and improve code clarity
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by preventing application crashes due to
changed the visibility of the ` validateTypes ` method from static to public to allow access to the method from other classes
fix : update gapic - generator - java with mock service generation fix ( # 118 )
added SLF4J logging imports to SimulationStatus . java to facilitate debugging and monitoring of simulation status updates
updated font position and font size for the splash screen from 138 to 150 to improve visual consistency and readability of the application
refactor notification addition in UserInterfaceComponentImpl to run on the main thread to ensure notifications are added on the main thread for thread safety
added a new mock method ` ReturnsElementsOf ` to the ` AdditionalAnswers ` class to ensure that the mock correctly returns an array of elements
corrected a typo in the error message from " not allowed " to " only allowed " in ErrorMsg . java to improve clarity and accuracy of
added a test method for LineFileDocs in BaseStoredFieldsFormatTestCase to verify the functionality of LineFileDocs in the indexing process
added a method to retrieve the version code of MainApp and updated references in FeatureList and WhatsNewActivity to utilize this method to improve
camel - 14266 : fixed the issue that beaninfo . requestbody ( string , inputstream ) do n ' t throw ambiguous method call
replaced calls to ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to ensure
added buffer ownership checks and usage logic in IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper resource management and prevent memory leaks
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing users to reset their password
[ hotfix ] fix typo in JerseyClientConfiguration . java
[ java ] remove unnecessary class import for characterreaderreaderreadermessagesource and characterstreamwritingmessagemessagehandler .
updated variable names from ' s ' to ' o ' in multiple test files to ensure consistency in variable naming and improve code readability
added methods to manage column and row counts in StringDict and Table classes to ensure proper handling of empty arrays and maintain data integrity
deprecate container . withcustomizer ( consumer < createcontainercmd > ) and add it to container . withcustomizer ( ) method .
updated logging level from info to error in MediaInfo . java and refactored exception handling in RendererConfigurationTest . java to improve error visibility and
added schemapattern option to the ` BundledDriverDatabaseConnector ` and ` PropertiesDataSourceDatabaseConnector ` classes to allow users to specify a schema pattern
do n ' t create a tlssession if there be no tlssession
refactor bitmap creation logic to use separate variables for width and height to improve code readability and maintainability by reducing redundancy
refactor Base64 encoding implementation to improve performance and reduce memory usage
sulong : add a fallback method to llvmglobalcontainer to make it easy to use it .
simonstewart : unignoring a test that pass on the iphone driver
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
changed the ` resName ` field from ` ResName ` to ` resId ` in ` AttributeResource ` and updated related constructors accordingly to
refactor Docker context handling in DefaultDockerClientConfig and DockerContextMetaFile classes to improve TLS file resolution logic to enhance code clarity and maintainability by
changed the test method from ` tearDown ` to ` setUp ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to ensure proper setup and teardown
modified type variable handling in mmm Attr . java and added a new class T6450290 . java with generic classes T6450290
added logging level configuration to LoggingFlags and LoggingOptions classes to enable configurable logging levels for better debugging and monitoring
added logging statements to various classes for better traceability to improve debugging and traceability of package removal processes
added allFilesOption ( ) method implementations in FileActivity , FileDisplayActivity , and PreviewImageActivity to enhance file management functionality and ensure
added methods ` forEachOperation ` and ` hasMatching ` with ` BiConsumer ` and ` BiFunction ` to ` MutationOperationGroup ` to enhance
updated the calculation of predictive app columns based on device type to improve accuracy of app column prediction based on device type
updated string initialization to use UTF - 8 encoding to ensure proper handling of character encoding in string processing
added RequestMatchers class with methods for matching request matchers and corresponding tests to enhance the flexibility and usability of request matching functionality in the security
ggb - 1856 make sure text field be visible in applet , not in applet
updated calculations in ProgressBar to account for background height and width adjustments to ensure correct positioning of the spinner based on the background dimensions
[ native ] use external _ functions . json instead of external _ functions . json
changed instance variables to final and added a native method to permuteArgs to enhance immutability and improve encapsulation of the permute
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gestures when the handler is invalidated
updated layout metrics calculations in DynamicGrid and Workspace classes to improve layout responsiveness and ensure consistent metrics across different orientations
added a condition to check if the file is " / robots . txt " in the URL validation to ensure that the robots . txt file
add a warning icon for the nb - javac library installation
changed button subscription methods from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen . java to
updated null and zero check in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to ensure
refactor code formatting and improve readability in Job and FlowJob classes to enhance code readability and maintain consistency in formatting
updated filter configurations in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use constructor - argument matchers and set filterProcessesUrl and requiresAuthentication
added onDestroy method to ShareActivity and ContributionsActivity to unbind the upload service connection to ensure proper resource cleanup during activity destruction
updated variable names from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity and consistency in variable
refactor multiple Java classes related to BeeLine to improve code organization and maintainability
added a call to set the request timeout in RaftServerConfigKeys to ensure that the request timeout is correctly set for the Raft server configuration
updated logging level from error to debug and refactored test cases in TsFileResourceManager and ResourceManagerTest to improve clarity of error reporting and
added system property setting in MavenModuleLoader . java to ensure system properties are correctly set during the model loading process
added server metrics for readiness checks in various classes to enhance monitoring capabilities for readiness checks in the application
add support for custom itemblock for animated torch . close # 118
added null check before closing the writer to prevent potential NullPointerException when closing the writer
added a method to retrieve the Hive configuration from a specified directory in UtilsForTest . java and updated multiple test classes to use this method to improve
added a link to the Muting Users feature in FeaturesActivity . java to enhance user experience by providing direct access to the Muting Users feature
added initialization property for " jdk . reflect . useDirectMethodHandle " to disable direct method handle usage for improved performance
hbase - 24497 splitonleadingvarcharcolumnspolicy should extend stepsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] add log for plugins and lib folder in yarn deployment
updated method calls in BuildTranscriptHMM . java and TrainerDictionary . java to use getWord ( word ) . getPronunciations
updated JSON string formatting in JsonUtilsTest . java to remove unnecessary newline characters to improve code readability and maintainability
added extra data for tweet ID in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure proper handling of tweet IDs
[ hotfix ] [ network ] add a warning to messagerunner when a messagelistener be lose .
replace IOException with a new NoClassesFoundToAnalyzeException for improved error handling to provide a more specific exception for cases where no class is found
replaced ` Key ` import with ` PublicKey ` import in ` KeyFetcher . java ` to ensure compatibility with the latest security standards
updated the initialization of the ` isIncompatible ` variable in ` DLNAResource . java ` to ensure proper handling of incompatible resource types
updated the ` createAccount ` method to use ` AccountCreateContract ` instead of ` Account ` to ensure compatibility with the new contract structure for account
pdfbox - 4892 : do n ' t throw an exception if there be no range in the range
[ amq - 7195 ] do n ' t set poison cause for dlq ' d message
set enableOffHeapFormat to true and update default format version from " v1 " to " OFF _ HEAP " to enable off - heap
updated title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to ensure titles do not exceed the maximum allowed length for
updated JColorChooser and BasicColorChooserUI to utilize ColorChooserComponentFactory for previewPanel retrieval to improve code clarity and ensure previewPanel is
changed logging level from info to debug for model extension checks to reduce log verbosity and improve performance during development
added a null check for reusableBitmap before processing bitmap options to avoid potential NullPointerExceptions during bitmap decoding
added layout parameters and a method to retrieve layout parameters in FakeView to enhance layout management by providing access to layout parameters
added a check to throw an IllegalStateException when a Cursor is already closed in DefaultCursor . java to ensure that an illegal state exception is thrown when
pdfbox - 2576 : avoid classcastexception in getindexofpage ( ) , a suggest by valerybokov
ignore jmsclienttest until it ' s fix
added a new private String ` ts ` field with getter and setter methods to manage the timestamp value to allow external access and modification of the timestamp
move genericexceptionmapper and validationexceptionmapper from genericexceptionmapper to validationexceptionmapperutils
changed the access modifier of AbstractExecutor from package - private to public to allow access to the class from other packages
make routeresource . removelegacyparameters a static method , and add a test for it
removed ' public ' access modifier from class declarations in multiple test files to enhance encapsulation by restricting access to test classes
refactor CSRF handling into a separate method ` setCSRF ` to improve code readability and maintainability
added a bootstrap condition to handle class loader bootstrapping in EclipseLoaderPatcherTransplants . java to enhance flexibility in class loading by allowing
add support for numericdisabled listener to excel parser
updated log level from info to debug for default value logging to improve logging granularity and reduce log verbosity
fix npe in lwjglcontrollermanager . connect ( ) when there be no joystick .
updated the ObjectFactory import from cucumber . api . java to io . cucumber . core . backend . ObjectFactory in WeldFactory and WeldFactoryTest
refactor port forward handling in PortForwardListActivity to use HostDatabase to improve code clarity and maintainability by centralizing host database access
added a new configuration property ` SHOULD _ SNAPSHOT _ DATA ` and its getter / setter in ` GlobalConfiguration ` to control snapshot
updated the synchronization logic in SyncedFolderObserver . java to check for null files before scheduling a new job to improve robustness by avoiding unnecessary job
camel - 15836 - camel - aws2 - * : fix typo find by codespell on fossies . org
simplified conditional checks in StatusBarTouchController , TouchInteractionService , and OtherActivityInputConsumer classes to improve code readability and maintainability by reducing
refactor VectorReader and related classes from ` VectorReaderImpl ` and ` VectorReaderImpl ` to ` VectorReader ` and its implementation to improve
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to ensure compatibility with the latest Mockito API changes
updated method signatures to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` for consistency to improve code readability and maintain
updated method signatures and variable names from ` RecordReader ` to ` RecordReaderFileConfig ` across multiple classes to improve clarity and consistency in configuration handling
added a null check for the extractor before instantiation in ControllerMethodInvoker . java and updated annotation usage in Param . java and Params . java to
cloudstack - 10715 : add findcorrectresourcelimitforaccount and findcorrectresourcelimitfordomain method to the service
add Potionshiftevent to guiscreenevent so that it can be fire on the client .
added a deprecated constant COLD _ READS _ TO _ OMIT _ KEY and marked the option as deprecated to indicate that the option should no
added a call to stop the leech in ClientTest . java to ensure proper resource management and prevent potential memory leaks
updated PopMessageProcessor to include retry status in metrics for message processing to improve accuracy of message processing metrics based on retry status
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable the test due to time issues
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to improve clarity
added websocket upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to ensure proper handling of websocket upgrade requests and responses during websocket
added timeout functionality to the AndroidImplementation class to enable dynamic timeout settings based on user input
refactor user and team access permission methods in GitblitClient and RepositoriesPanel to improve permission handling to enhance security by ensuring only authorized users
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL parsing and deparsing correctly handles quoted
added a check for root directory and modified executable assertions to differentiate between writable and executable checks based on operating system type
refactor FixedThreadExecutor to utilize dynamic thread group configuration and improve thread selection logic to enhance flexibility and maintainability by allowing dynamic configuration of thread
added null check for the field before checking for " catalogname " in AbstractChangeGenerator . java to prevent potential NullPointerException when processing fields
replaced ` CasEventListener ` with ` InitializingBean ` and updated method signatures to use ` InitializingBean ` instead of ` CasEventListener
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added a custom close method to the DeflaterOutputStream to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` implementing methods to retrieve system properties and agent properties to facilitate testing of JVMTI GetSystemProperty
fix issue with bean definition processor when bean be annotate with @ configurationproperties and @ injected .
added read / write method to cameranode and lightnode , and minor cleanup .
refactor PopupNotificationPanel to simplify window disposal logic and improve error handling to enhance code readability and maintainability by reducing redundancy
replace NoInstanceException and InvalidInstanceException with InferenceException in the Infer . java file to simplify exception handling and improve code clarity
added a method ` getFeatureValue ( ) ` to return the feature value to provide access to the feature value for external use
changed the parameter type of the method ` after ` from ` int ` to ` long ` in the ` Mockito ` class to allow for larger time
added ` OnBuild ` and ` ExecutionDriver ` fields with their respective getters and setters to ` ContainerConfig ` and ` Info ` classes
updated icon setting logic in Toolbar and FlowLayout classes to handle right - to - left and left - to - right layouts to ensure proper icon
added support for enabling position increments in StopFilterFactory to enhance functionality by allowing configuration of position increments
replaced direct assignment of " noreply @ " with a new InternetAddress instance in EmailsTest . java and SystemErrorEmailReportTest . java
added a new boolean variable ` mTryShareAgain ` to ` FileActivity . java ` to control sharing behavior in the application
added support for tty name extraction in JansiNativePty . java to enhance user experience by allowing dynamic TTY name resolution based on configuration
refactor bandwidth handling in BandwidthProcessor to use bytesSize instead of bytes to improve clarity and maintainability of bandwidth calculation logic
replaced Awaitility ' s assertions with Awaitility ' s await method in Issue410Tests . java to improve test reliability by ensuring tasks
[ easee ] move api base url to api . easee . com
updated sleep duration in KafkaIOIT . java and added withStartupAttempts ( 3 ) in kafkaContainer . withStartupAttempts ( 3 ) to improve
refactored the matchers in SearchResultMatcher to use is ( itemName ) instead of allOf to improve code readability and maintainability by
added SSL trust management functionality and improved SSL context handling in OkHttp . java to enhance security by ensuring all certificates are trusted for secure connections
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code readability and maintainability by centralizing long
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of ` byte
added null checks for stdout and stderr in ShellStep . java to ensure that workingDirectory is not null to avoid potential NullPointerExceptions
increase timeout in asyncappendertest from 1000ms to 2000ms .
refactor ` escapeDatabaseObject ` methods to use ` objectName ` and ` objectType ` instead of ` tableName ` for consistency to improve code
replace setGlassEnabled ( true ) with a boolean variable inputChanged to improve logic for determining if the input field has changed
added unit test for state change functionality in ShadowDisplayTest . java and implemented setState method in ShadowDisplay . java to ensure proper handling of display state
add directinvocationservice interface and test for it
ggb - 164 fix for macos x / y key ( x ^ x | y ^ y )
updated SQL query conditions in PgDatabaseMetaData . java to handle different server versions to ensure compatibility with PostgreSQL versions prior to 9.0 and
[ hotfix ] [ network ] fix npe in queuechannel
removed IOException from the method signature of getPathsFromResource and replaced jarPath with pathUri for improved URI handling to enhance code clarity and maintainability
added functionality to handle Jenkins nodes in the CollectorServer to support monitoring and collection of Jenkins nodes in the application
refactor header attribute retrieval in HeadersBeanDefinitionParser to use a new resolveAttribute method to improve code readability and maintainability by centralizing attribute resolution
updated exception handling and logging in ProtobufLogReader . java to improve clarity and correctness of EOFException messages
[ aarch64 ] fix memory leak in nacosregistry . close ( ) .
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to utilize a new method for writing status codes to improve code clarity and maintainability
updated the formatting of the code in AuditEventTests . java to improve code readability and maintainability
added a check for float rounding error in Interpolation . java to ensure that the interpolation returns a non - negative float value to avoid potential errors
fix path to / defaults / instead of / defaults /
refactor code to store the DX executable path in a variable before adding it to the builder to improve code readability and maintainability by reducing
added unit tests for PointRangeQuery instances in PointQueries . java to ensure correct functionality of PointRangeQuery comparisons
hbase - 13257 testhfilecleaner should use mockarchivedhfiledir instead of hardcoded ' / table / region '
added a condition to check if the file name matches the file transfer request ' s file name before displaying it to ensure the correct file name is displayed
do n ' t throw unhandled exception in jedisclustercommand . execute ( )
[ hotfix ] [ table - planner - blink ] make rowtimeminibatchassgineroperator chain strategy always
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap and added new test cases for URL
added benchmark benchmarks for reading and writing a random hash map in multiple benchmark classes to improve performance and accuracy of hash map operations
added a new HashMap instance and initialized G _ SCH _ B in HybridPlotWorld . java to initialize G _ SCH _ B to
added a check for empty fields and refactored identifier conversion logic in GroovyEngine . java to improve code robustness and ensure consistent handling of identifier
added a call to setDrawable ( false , false ) in AlgoDependentNumber . java to set the drawable state of the number to false to
added TCP _ KEEP _ ALIVE configurations to HiveConf and modified TServerTransport initialization in HiveServer to enhance server performance by allowing configurable
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java ` to
no effective change - remove log sql in deletehandler
refactor RealtimeSegmentRelocator to use lambda expressions instead of anonymous classes to improve code readability and reduce boilerplate code
do n ' t initialize the success variable when start the vpc
updated the calculation of windowAlpha in WindowTransformSwipeHandler . java and modified the condition in FloatingIconView . java to ensure windowAlpha is
updated fatal error message to include Spring Security version in SecurityNamespaceHandler . java to ensure compatibility with Spring Security 4.0 by updating schema declarations
[ hotfix ] [ protobuf ] fix typo in protosubject javadoc
[ hotfix ] [ runtime ] fix checkstyle violation in disruptorprovidermanage
added a new UDF class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` and ` ExprNodeGenericFuncEvaluator `
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve regex matching accuracy and enhance test coverage for
replaced repetitive logger initialization with direct method calls to improve code readability and maintainability
updated SQL queries in SchemaDao , ShardDao , ShardCleaner , and ShardDao to use ` delete ` instead of ` update ` for deletion operations
added new Java versions " 17 " and " 17 - preview " in JavaLanguageModule . java and corresponding tests in LanguageVersionTest . java to
fix fileappenderresiliencetest and remove lossiness factor from fileappenderresiliencetest
added a null check for lastLocationAccess before asserting its usages in VolatileReadNode . java to ensure that lastLocationAccess is only
added a method to return an unmodifiable list of steps in SimpleJob . java to enhance immutability and prevent unintended modifications to the steps list
removed redundant ` fromBase58 ` and ` toBase58 ` fields in ` TronJsonRpc . java ` to streamline code by eliminating
refactor currency pair handling in BitstampAdapters . java to improve code readability and maintainability
[ micrometer ] fix duration measurement in meterregistrycompatibilitykit .
[ euphoria - euphoria ] fix partitioning in reducebykeytranslator
updated color handling in HostEditorActivity to use ListPreference for better preference management to improve code clarity and ensure correct color retrieval from preferences
updated the ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and refactored related methods in ` InitializerTest ` to improve clarity
added a limit to the number of tweets in the conversion process to limit the number of tweets processed during query processing
updated the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map to refresh after
http : / / issues . apache . org / jira / browse / amq - 4242 - persistedbytesize correctly for fully ack
fix incorrect usage of getclass ( ) . getimplementationtitle ( ) .
refactor grow method to improve readability and maintainability to enhance code clarity and maintainability by reducing duplication
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide access to the submitted file name from the part
added markReadForLoad ( ) method to LauncherFragment . java to ensure proper marking of loaded files during loading
added ` ClassNotFoundException ` to the ` main ` method signature and modified exception handling in the ` instrumentJar ` method to improve error handling and provide
[ hotfix ] [ table - common ] check spill position in hashaggtemplate to avoid outofmemoryexception
replaced calls to ` getDocStoreSegment ( ) ` with a final variable ` dsName ` in ` IndexFileNames . segmentFileName ` to
added a default name ID format constant and a check for it in the SamlProfileSamlNameIdBuilder to ensure that the name ID format is
added redirect setting and error handling in ChangePasswordPage . java to improve user experience by preventing password change attempts during password change
added a semicolon to the closing brace in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time
deleted the FontScalingTest . java file to remove unused test code to streamline the codebase
replaced direct calls to ` getBeginDate ( ) ` and ` getEndDate ( ) ` with local variables ` filterBeginDate ` and ` filter
added a check for non - positive numVectors in GenericUDAFComputeStats . java to prevent processing when numVectors is less than
test : migrate executablereftest to junit 5 ( # 4423 )
added null checks before setting view and glass pane in JLayer . java and created a new test class bug6994419 . java with a
camel - 14263 : add a wiretap ( expression expression ) processor to allow to configure the expression for the tap endpoint .
change visibility of setAction method from public to protected to enhance encapsulation and restrict access to the method
[ calcite - 4071 ] enable topn by default in planner . enable _ topn option
[ java ] remove redundant call to tostring ( ) in test .
fixed - rconnection . setqueued ( ) method throw redisconnection . getqueued ( ) method throw npe if redissonbatchexecutor .
refactor ` getConfVarInputStream ` to ` getConfVarURL ` and update its implementation to use ` FileOutputStream ` instead of ` InputStream
updated the device reference in the createModel method from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` to ensure
added onCreateOptionsMenu and onMenuItemSelected methods to the SimulationViewer class to enhance user experience by providing an option menu for motor details features
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
updated the way the home directory is determined by adding a property for the HAWTIO dirname property to ensure the application uses the correct directory for
added a condition to return SINGLE _ SPACE when comments are empty and the whitespace is empty to improve handling of whitespace cases when comments are empty
changed ` mClosed ` , ` mActualDictionary ` , ` mNativeDict ` , ` int ` , ` int ` , and ` Word
added printStackTrace ( ) method to Throwable in ContextHandler . java to improve error handling by providing stack trace information
move customitemdroptest to integration / regression , and move it to test - framework
added a conditional check for non - existing partitions in DDLTask and AddPartitionDesc classes to enhance partition creation logic based on specified conditions
[ hotfix ] [ storage ] fix inputstream . read ( bytebuf ) in nfssecondarystorageresource
[ hotfix ] [ network ] remove unused controlrequeststreamid from servicenode
[ wfs ] add support for spatial operator in wfs capability
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitsFix to address a known issue related to SOLR - 2161
refactor preface matching logic in Http11InputBuffer . java to improve readability and maintainability of the code
[ java ] change default value of isingressexclusive from true to false .
added support for multiple HBase cache keys in HBaseStorageHandler to enhance flexibility in managing HBase configurations
added methods to track and update the running record count in JSONRecordReader . java to improve tracking of record counts for better error handling
added filtering logic to remove specific year entries from mergedItems to ensure only relevant items are processed in the app
updated drawColor calls from 0x00000000 to 0 with PorterDuff . Mode . CLEAR in CacheableTextView , CellLayout , and Hol
added a check for OpenGL ES 2.0 availability in Mesh . java to ensure compatibility with rendering methods using OpenGL ES 2.0
ww - 3853 set actioncontext to null in backgroundprocess to avoid npe
updated ` getUnescapedName ` method to include database name and modified table handling in ` SemanticAnalyzer ` and ` QBParseInfo `
added connection timeout configuration and made the count variable final in StubConnection . java to improve connection reliability and enforce immutability of the count variable
added tests for percentile functions in TestHiveAggregationQueries . java to ensure correct functionality of percentile calculations in the application
updated DEFAULT _ IDLE _ TIMEOUT from Duration . ZERO to Duration . ofSeconds ( 30 ) and refactored idleTimeout and idleWrite
updated the method to retrieve shares using the user ' s platform account name to ensure the correct user context is used for sharing files
updated type declarations and added null checks for InetAddress and scope _ ifname in Inet6Address . java to enhance type safety and prevent potential ClassCastException
refactor button enabling methods in PlaybackControlView . java to use a unified setButtonEnabled method to improve code readability and maintainability by
updated method signatures in Session and Token classes to use session ID instead of session object to improve clarity and accuracy in session validation logic
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to ensure
change default value of useexceptionprobability to ` ` true ' ' .
updated the color assignment logic in PredictedAppIcon . java to differentiate between themed and non - themed icons to improve visual consistency and
refactor MySQLUser initialization method to accept parameters for username , password , and permissions to improve code readability and maintainability by reducing redundancy
updated aliases to include " center " to ensure consistency in naming conventions across the application
added a method to inject a direct upload in CommonsApplicationComponent and made DirectUpload public to enhance the functionality and accessibility of the DirectUpload class
added space top settings for left and right axes in BarLineChartActivity and adjusted legend positioning logic in BarLineChartBase to improve layout consistency
added support for multiple ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance support for ABI processing in the application
added operationEventStatusType to requestParams in OnlineHubService and initialized the services list in CompositeLogService to ensure proper handling of operation event statuses
added logging for parameters and implemented visibility annotations in DexAnnotation . java to improve debugging capabilities and ensure proper handling of annotations
use @ teardown instead of @ startbundle and @ finishbundle to clean up the jmsio session
refactor process creation in SortedArrayStringMapTest to include classpath as a parameter to improve clarity and maintainability of classpath handling in the process
updated file separator assignment in PackageResourceLoader . java to ensure consistent file path handling across different operating systems
removed ' this ' keyword from method calls in DataSet . java to improve code readability and maintainability by removing unnecessary ' this ' keyword
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
added percent escaping functionality to error messages in ShouldHaveMessage . java and updated test method names in ShouldHaveMessage _ create _ Test . java to
fixed - jcache . getcachemanager ( ) . getcachemanager ( ) . getcachemanager ( ) . getcachemanager ( ) .
reduce log level for activititaskalreadyclaimedexception in commandcontext
added a brace to the instantiation of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
change entitypropertiespacket to use instance . getbasevalue ( ) instead of instance . getvalue ( ) .
[ snossus ] fix npe in sonosaudiosink when the thing be not initialize
try to fix flaky unit test on slow ci server
changed log level from info to debug for effect light type determination in LightThingHandler . java to improve logging granularity for better troubleshoot
fix asyncjobmanagerimpl to use a thread pool size of 2 / 3 of db . properties
updated import statements and string formatting in Reporter . java and ReturnsSmartNulls . java to improve code readability and maintain consistency in formatting
updated the parameter type from ` Frame ` to ` DataFrame ` in the ` generate ` method to ensure type safety by directly referencing the ` DataFrame `
updated module - info . java files for mmm and ppp packages to ensure consistent formatting across module - info . java files
added a check for non - empty physical column names in OrcPageSourceFactory . java and created a corresponding test in TestHiveFileFormat
added a return statement to the mixPlay method in the Engine class to enable the mixing of audio based on the input parameters
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
fix a bug in the qr code finder pattern finder that cause the finder pattern finder to fail .
removed condition for checking if leadingIncludePaths is empty in PreprocessorDelegate . java to simplify the logic for determining serialization status
refactor matrix vector multiplication logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
add a few more method to the selenide element proxy to make it easy to find element by name .
do n ' t use samplerate . e _ ac3 _ joc if format . samplerate be null .
add name . get / setformula ( ) and name . setformula ( formulatext ) method to xssfname to allow
updated the target value from 60000 to 90000 in HighDimensionsTest . java to accommodate larger datasets during testing
fix a bug in the xml parser that cause an exception when parse a pattern schema .
added a new test class ` ClassPathXmlJobRegistryContextTests ` to verify the location of jobs in the classpath XML job registry to ensure proper
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` and ` add
camel - 12320 : camel - restlet should use camel - restlet instead of camel - restlet
[ hotfix ] [ log ] remove unused method in logendpointbuilder
refactor ChromeTraceBuildListener to encapsulate the creation of ChromeTraceEvent to improve code readability and maintainability by encapsulating trace event
added status checks before adding limit orders in HuobiAdapters . java to ensure only valid and non - canceled orders are added to the limit
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to improve image layout validation and ensure correct pixel sizes are used
refactor timestamp handling in Event . java and JrubyEventExtLibrary . java to improve clarity and maintainability of timestamp retrieval methods
added path handling logic in ContextHandler and a new test for real path retrieval in WebAppContextTest to ensure correct retrieval of resource paths and validate
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SET
update scroll handling logic in JEditTextArea to differentiate between horizontal and vertical states to improve user experience by ensuring correct scroll behavior based on device orientation
add guard stage and stage flag to graphdecoder if callerloopscope be null
test : migrate sniperjavaprettyprinter to junit 5 ( # 499 )
refactor URLOutputStream and related test classes to use try - with - resources for resource management to improve resource management and ensure proper handling of URL streams
added entity relationships to the Mail class to prevent relationships between entities in the database
updated default value of ' includeTablespace ' from false to true and modified command parameter from ' includeTablespace ' to ' includeTablespace '
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffers for better data management
added a check for non - empty file reading in ScanBatch . java and implemented a test for jsonDirectoryWithEmpyFile in TestJsonReader
updated failure strategy to include custom name in failure messages to improve clarity of failure messages for better debugging
added a regex pattern matching for library names in LibUtils . java to improve accuracy in detecting JNI libraries based on their names
updated exception handling in JrtJavaBasePackages and PackageHelper to catch all errors instead of just ClassNotFoundException and NoClassDefFoundError to improve
hbase - 26144 ensure that hbase . hbase . master . hadoop . hbase . hadoop . hbase . hadoop . hbase . hadoop . hbase .
updated error message to include class name and message in TranslatingJavacPhaseTracer . java to improve debugging by providing more context about the failure
remove unused code in defaultplugincache . getplugindescriptor ( plugin )
do n ' t fire the contact status change event if there be no connection
refactor : remove unused method in resourcemethodtest . java
added a new integration test class AccountInfoFetchIntegration to verify the retrieval of account information from the BTCE exchange
added mouseWheel functionality to VDUInput and vt320 classes and implemented mouse wheel reporting in TerminalView to enhance user interaction by enabling mouse
updated library path handling in Natives . java to use a local variable to improve code readability and maintainability by reducing repeated method calls
# 241 - remove deprecated columnhstore annotation ( # 245 )
add player skin flag to metadata ( fixes # 390 )
updated LoadBalancerWithServiceTests to use SLF4J logging instead of RequestFieldMatcher and modified service creation methods to enhance debugging capabilities and improve service
[ hotfix ] [ runtime ] fix npe in mapservice . createsimpleentryview ( )
replaced System . getProperty with AccessController . doPrivileged for retrieving the OS version to enhance security by using privileged actions for property retrieval
updated fileSuffix handling in TemplateEngineFreemarker . java to allow dynamic configuration of the file suffix to improve flexibility by allowing dynamic file suffix configuration
updated hashCode and value calculation in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to ensure
refactor ToolbarPanel to use AnimationCallback for animation handling to improve animation responsiveness and maintainability of the code
replaced ` EasyBind . bindConditionally ` with ` EasyBind . when ( hasCaret ) . bind ` in ` StyledTextAreaVisual
added ` declaredPlatforms ` field and updated related methods in ` PrebuiltAppleFrameworkDescription ` , ` CxxBinaryDescription ` , `
replaced instances of SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator , JpaQueryExecution , and PartTreeJpaQuery classes to
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added array type handling in DataUtilities and a corresponding test in DataUtilitiesTest to ensure proper functionality of the defaultValue method for different data types
updated SSL engine creation logic to handle null address and client authentication to ensure correct host name verification based on client authentication requirements
updated assertions in TestFSTableDescriptors to use greater than or equal for cachehits to improve clarity and correctness of cachehits validation
simonstewart : refactored internetexplorerdriver . deletecookiebypath ( ) and wddeletecookiebypath (
added a boolean variable ` mHasEndedLauncherTransition ` and modified gesture state checks in ` AbsSwipeUpHandler ` and ` RecentsView
added UTF - 8 character set to the HTML header in HTMLListWriter . java and HTMLWriter . java to ensure proper handling of character encoding in
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and modified path handling in Utilities . java
removed unnecessary whitespace in BasicComboBoxUI . java and added a new test class bug6337518 . java to address bug6337518
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and facilitate future modifications
refactor UserInfoActivity to improve code organization to enhance maintainability and readability of the code
added HomeContentProvider import and updated broadcast notification in multiple services to ensure that changes to the HomeContentProvider are properly notified of changes
added methods to manage pressed or focused state and background in BubbleTextView to improve UI responsiveness and ensure proper background invalidation
updated the ` getFallbackResponse ` method to include an ` Throwable ` parameter across multiple classes to include error handling in the response retrieval process
removed the conditional check for ` env . _ dest _ dir ` in ` DumpBytecode . java ` to simplify the code by removing unnecessary condition
[ java ] fix potential npe in channeluri . get ( ) .
updated regex pattern from " - + " to " . " in RegexpUtil . java and modified test methods in TestSqlPatterns . java to
updated action bar title handling in FileActivity and added null check in FileDisplayActivity to improve user experience by ensuring the action bar title reflects the current
replaced ` getOnlyElement ` with ` getLast ` in ` PythonDslProjectBuildFileParser . java ` and added a new test method in
changed the hour from " * " to " 0 " in the @ Schedule annotation from " * " to " 0 " to ensure the scheduled time
refactor TransactionalValidationListener to handle partitioned tables and table path retrieval to improve validation logic for partitioned and non - partitioned tables
added polling functionality to SnapPuller class to enable polling functionality for improved performance
updated the ` generatedKey ` type from ` int ` to ` long ` and modified SQL statement execution to scrub the generated key to ensure compatibility with
refactor the proxy retrieval logic in SimpleReferenceCache . java to improve code readability and maintainability
updated error messages in tests to include " failed to inline " instead of " disallowed " to improve clarity and accuracy of error reporting related to inline
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 486 : set stoptimeout
deleted the HttpTestAccount001 . java file to the test class is no longer needed for the current functionality
changed exception handling from Exception to Throwable in Dispatcher . java and updated test cases in DispatcherTest . java to improve error logging and ensure proper resource management
camel - 18197 : camel - cxf - should not send attachment to cxf message if the dataformat be not cxf _ message
added a case for the ' ~ ' character in ClientUtils . java to handle special characters in the application
camel - 14263 : camel - slack should use java . time . duration instead of java . time . long
change blockutil . getblockdropped to use event . fireblockharvesting instead of block . getblockdropped .
updated layout parameters in TranscodingTab . java and added an additional space before the checkbox in encodedAudioPassthrough to improve layout responsiveness and
added a new file ` bug8057791 . java ` to test the rendering of a JList to address bug 8057791 related to
updated flag assignment logic in LambdaToMethod . java and added a new class LambdaInterfaceStaticField . java with a static field interface to improve clarity
updated RunnerBuilder to use WebSocketMethodsFactory for subscription management and added a new test for EthSubscribeAvailable in RunnerBuilderTest to ensure
updated null check for the ' to ' variable in ComposeActivity . java to improve code robustness by preventing potential NullPointerException
updated ParquetFixedWidthDictionaryReaders to conditionally handle dictionary reading and added a new test for big integers with a dictionary to improve handling of
refactor layout scaling logic in PortraitPagedViewHandler . java to improve clarity and correctness to enhance code readability and maintainability by
added a new annotation ` Log ` and ` LogInterceptor ` to enhance logging capabilities in the Spring Cloud application
added a conditional check for trace length in the QueuedThreadPool dump to ensure that trace information is only included if trace length is greater than zero to
added an ` Implementation ` parameter to the ` combinations ` and ` filterTypes ` methods in ` CacheGenerator ` , ` CacheProvider ` ,
updated the createReferenceMap method to include totalFrameSize parameter to ensure correct computation of the reference map based on the total frame size
refactor TypesafeConfigurator class to improve code readability to enhance maintainability and facilitate future updates
add a karaf test for camel - graphql in karaf
added two new test methods , bug1 ( ) , bug2 ( ) , and bug3 ( ) , in RFE2891944
removed URL encoding from entry keys and values in HttpClientIntroductionAdvice . java to simplify code and improve readability by avoiding unnecessary encoding
replaced the implementation of ` unsupportedPlatformTool ( ) ` with a new class ` UnsupportedPlatformTool ` to improve code readability and maintainability by
updated the variable type of ` loopCount ` from ` double ` to ` int ` and modified the log message to include ` startingRecoveryDelayMilli
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide functionality for retrieving the size of the flight configuration map
[ drools - 1149 ] fix kieaddressmanagertest and abstractaddressmanager to use a random value for the index .
updated column specifications and row specifications in VLCVideo . java to improve layout consistency and alignment in the user interface
rename bisq to bitsquare for consistency
updated the credential string from " talon . provider " to " twitter . provider " in HomeContentProvider . java to align the provider with the
updated user configuration directory and repository path handling in MavenCli . java and MBoot . java to ensure correct user configuration and improve handling of Maven profiles
added a call to bind the GL _ ARRAY _ BUFFER with a buffer handle in VertexBufferObjectWithVAO . java to ensure the
refactor ServerHttpSecurity class to improve security handling to enhance performance and maintainability of server operations
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests to disable tests that are not ready for execution
added default headers to HttpClientProperties and CasCoreHttpConfiguration classes to enhance HTTP client configuration flexibility by allowing custom headers
add userpasswordnotvalidexception to handle credential vulnerabilities
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the project
replaced Codec . base16Decode with Bytes . fromHexString for signingKey to simplify key decoding by using a more efficient byte array conversion method
updated FloatUtil . java to utilize CSSName for handling float values and added validation checks for the current style to improve code clarity and ensure proper
planner - 241 : move planningfactcollectionproperty and planningfactproperty to optaplanner
refactored the ` getDefaultHeaders ` method to be private and updated its implementation to improve encapsulation and ensure consistent header handling across the
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 : use charset instead
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job ID
replaced ` compareTo ` method calls with ` compare ` method calls in ` ExpandableUploadListAdapter . java ` and ` FileStorageUtils . java
change defaultjdkhttpclient to log at debug level instead of error
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler instead of GeneralSecurityException to improve clarity and maintainability of the authentication
changed the access modifier of the WingDings class from package - private to public to allow access to the WingDings class
added validation to ensure that invalid filters are only removed from the network if their owner key matches the filter ' s public key to improve error handling and
add pgpkeyring , pgpsecretkeyring , pgppublickeyring , pgpsecretkeyring , pgppublickeyring
updated MinimalLockingWriteAheadLog to use BufferedOutputStream and ensured dataOut is closed in a finally block to ensure proper resource management and
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified column qualifier handling in ` HiveBaseResultSet
refactor FocusTransitionTest class for improved clarity to enhance maintainability and readability of the test code
updated import statement from ` org . gwtproject . core . client . GWT ` to ` com . google . gwt . core . client .
added a null check for sourceTask before retrieving job counters in CounterStatsAggregator . java to ensure proper handling of MapRedTask instances and prevent potential
removed extraneous whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color setting logic to use a new ` changeComponentColor ` method to improve code readability and maintainability by encapsulating color
updated the parameter from ' false ' to ' hidden ' in the TaskHelper constructor to ensure that the task helper uses a hidden state instead of a
make failovertimeouttest more robust by not use exponential backoff
pdfbox - 4071 : ensure resource be close to prevent resource leak
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize DefaultParameterHandler for improved parameter handling
lsra spill optimization : do n ' t set spill state when loop depth be less than or equal to def loop depth
[ micronaut ] add a method to compile a groovy file to make it easy to run test
added a new method ` closeInternally ( ) ` to ` PgResultSet ` and made ` firstUnclosedResult ` volatile in ` P
set default value of serviceAdvisorType to PYTHON to ensure proper service advisor type is used for compatibility
added thread - local support for resolving decoders in GenericDatumReader to improve performance by reusing the resolver instance across multiple threads
use append instead of write , a suggest by valerybokov
replaced instances of ` new byte [ ] ` with ` byte [ ] ` for generating random bytes in ` SendCoinShieldTest . java ` to
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class for setting personalisation with a specified locale and email address
removed redundant code in CodeGenerator . java to streamline code by eliminating redundancy
removed ' percent ' parameter from scroll method calls across multiple files to simplify method signatures and improve code readability
changed the access modifier of the pointer variable from private to public and added reset methods for pointer and position to allow external access to the pointer variable and
rename ` ` contentdigesthistory ' ' to ` ` bdbcontentdigesthistory ' ' for consistency
fix : cast to boolean should not be implicitly cast to integer .
replaced ArrayList with a boolean variable acceptsAll for better clarity to improve code readability and maintainability by using a more descriptive variable name
added a boolean variable ` false ` to ` TaskView . java ` to indicate that the task is now disabled by default
added an ` isAutoIncrement ( ) ` method to ` LiquibaseDataType ` and implemented it in ` LiquibaseDataType ` to ensure
initialize errorText with a default value of " Command failed due to Internal Server Error " to provide a default error message when the command fails due to
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils to enable performance data usage in tests
replaced ` add ( currentStatus ) ` and ` boosterStatus ` with ` push ( currentStatus ) ` and ` boosterStatus ` in
added AJP support for binding and disabling the AJP connector to enhance server configuration flexibility and ensure proper configuration of AJP
added type coercion handling for IntersectionClassType in TransTypes . java and created a new Intersection03 . java file with a
renamed the class ` EmbeddingTest ` to ` EmbeddingITest ` to better reflect the purpose of the class
added a native method ` startToolkitThread ` to check if the toolkit thread starts before starting it to ensure that the toolkit thread is only started if
add compression option to store bundle content in parallel .
hide surface on android if it ' s hide in opengl
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability of
added boolean parameters for fullNodeHttpEnable and solidityNodeHttpEnable in CommonParameter . java and updated service addition logic in Args . java to
added a new property " service " to the Google FirestoreTicketDocument and implemented the countTicketsFor method in GoogleCloudFirestoreTicketRegistry to
refactor methods in the Generate class to improve code readability and maintainability
updated the nullable parameter specification in JsonFunctions and added tests for JSON null functions to ensure correct handling of null values in JSON format functions
updated BadgeRenderer to conditionally calculate width and icon size based on DOTS _ ONLY flag to enhance UI responsiveness based on the
removed the ' final ' modifier from the getConfiguration method in FreemarkerManager . java to allow for the method to be overridden in subclasses
[ hotfix ] [ ognl ] add test for invalid exclude package name pattern
updated device Udid assignment logic in AppleTest . java and added SDKName parameter in IdbRunTestsStep . java to ensure correct simulator
updated DefaultHttpClientFilter to change log level from error to warn and modified test cases accordingly to improve logging clarity and ensure correct response status handling
removed redundant null checks for mScript in AllAppsView . java to improve code readability and maintainability
added a new boolean variable ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to conditionally set shadow layer based on
added teardown methods for table and view drops in TestColumnAccess and TestReadEntityDirect classes to ensure proper resource cleanup after each test execution
[ hotfix ] [ security ] fix namespace handler for namespaces with multiple parsers .
removed unnecessary whitespace in BoundedLocalCache . java and added a new fastpath method in BoundedLocalCacheTest . java to improve code read
updated RawConnection and FrameBytes to extend WebSocketConnection and added complete and flush methods to enhance WebSocket connection management and improve flushing handling
added multiple test methods for soft assertions in SoftAssertionsPerfTest . java to improve test coverage and ensure assertions pass consistently
added a constant ` TEST _ FAILURES _ EXIT _ CODE ` and updated the ` execute ` method in ` PythonRunTestsStep `
added conditional logic to handle markup enabled scenarios in GlyphLayout . java to ensure proper rendering of glyphs when markup is disabled
refactor score comparison logic in TestBooleanRewrites . java to use a set for expected and actual scores to improve readability and maintainability of
replace getEnclosingClass ( ) with getSuperclass ( ) in TypeHandlerRegistry . java to ensure correct class hierarchy is used for anonymous classes
simplify playerconnection . flush ( ) , remove unnecessary type check
added a check to prevent multiple calls to removeOnDrawListener in Launcher . java and LauncherAnimUtils . java to improve performance by avoiding
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added NOT _ APPLICABLE check to improve code readability
changed the default return value of the method from false to true in RendererConfiguration . java to enable media parserv2 validation by default
[ hotfix ] [ config ] add support for @ interceptor annotation on method .
added assertions and permission verification for warehouseDir and tableName in FolderPermissionBase . java to ensure proper permissions are enforced for the database operations
do n ' t publish presence status if provider in registration state change
updated the random color calculation in PastelColor . java to use a variable colorBase to improve randomness based on the color base value
refactor ScriptEngineFactory to improve code organization to enhance maintainability and readability of the code
refactor image handling in HolographicViewHelper to use original and outline bitmaps instead of drawables to improve visual consistency and maintainability of bitmap
refactor request method handling in CloudClient . java to use HttpMethod . fromString and add debug logging for unsupported requests to improve code readability and reduce
add a method to infer the position of a phrase in the multi - word preprocessor
[ hotfix ] [ test ] fix checkstyle violation in iochannelutilstest
updated class loading logic in mmm Table . java to handle Hive pass - through output formats to ensure correct output format is used when selecting a class
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated boundary checks in DOMBuilder . java to ensure proper handling of character boundaries to prevent potential ArrayIndexOutOfBoundsException
updated handling of hierarchical undirected graphs in ClusteringCoefficient . java and changed method calls in DiameterUI . java to improve code clarity and
camel - 15836 - camel - translate : improve the verifier to check if a particular service work on a specified region , e . g .
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to demonstrate the use of static methods in
camel - 14297 : camel - core - defaultkeyselector now support resolve property placeholder in password property .
replaced instances of ` instanceof ThreadDeath ` with ` catch ` for ` ThreadDeath ` to simplify exception handling and improve code readability
refactor KeyManagerFactory , PolicyFile , KeyStore , CertPathBuilder , Policy , Policy , CertStore , CertPathValidator , CallbackHandler , Policy , Policy ,
updated JGit version from " 1.0 . 0 " to " 1.0 . 0 " and modified jar order in Launcher and Build classes to reflect the
replaced ` clientId ` with ` clientKey ` in ` HttpClientIntroductionAdvice . java ` to improve clarity and ensure the correct client key is
int - 1198 added namespace handler for ' transformer ' namespace to support methodinvokingtransformer ( ) methodinvokingtransformer ( )
updated BACK _ FACTOR to REWIND _ TIME and added a new REWIND _ TIME constant in ResumeObj .
added isScrollWheeling method to CodenameOneImplementation and implemented it in Button and JavaSEPort classes to ensure actions are fired only when scrolling
updated usage formatting in UtilityCommands . java and modified DocumentationPrinter . java to improve code readability and ensure consistent usage formatting
corrected a typo in the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure
[ hotfix ] [ compaction ] remove unused setseqfiles ( ) method from crossspacecompactionresource
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactored ruleset synchronization logic in ProjectPropertiesModelImpl . java to improve clarity and maintainability of ruleset synchronization logic
fix synchronization issue in abstractsootfieldref . getstatic ( ) .
add elasticnamingconvention to make it easy to use elastic name / tag convention .
added new methods and imports to IController and TinyGController , and updated BackendAPI to use IController instead of AbstractController to enhance
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to verify rendering of horizontal rules to ensure proper rendering behavior
replaced System . out . print with TTY . print in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to standardize output
refactor multiple classes to improve code organization and consistency to enhance maintainability and readability of the codebase
loginspector : fix off - by - one error in loginspector .
updated return statements in IntFloatMap and IntIntMap to use a local variable for zeroValue and defaultValue to improve code clarity and ensure consistent return
refactor ImageDownloadService to use Display . getInstance ( ) for setting icons and preferred sizes to ensure UI updates occur on the Event Dispatch Thread
added a null check for the registered variable before proceeding with demand checks to improve robustness by avoiding potential NullPointerExceptions
removed the ` hasNextSibling ( ) ` method from multiple node classes and updated the return statement in ` IeNavigator ` to improve code clarity and
fixed - npe in redisdistributedmapcacheclientservice # poll ( ) method if result be null
updated logging statements in MobFileCache . java to include cacheSize , evictPeriods , and evictRemainRatio to improve clarity of log
refactor ColConvCCMTest class for improved readability to enhance maintainability and facilitate future updates
refactor code to use local variables for ` target ` , ` allowCovariantReturns ` , and ` syntheticNameChar ` to improve code clarity
pdfbox - 4071 : use generics in constructor , a suggest by valerybokov
replaced Float . toString ( ) with a String . asString ( ) method in Json . java and added a new X class with a main method
added a return statement to the GenericFileConsumer class to ensure proper termination of the method execution
added an EventQueue . invokeLater ( Runnable ) to run the event dispatch thread to ensure that the event dispatch thread is executed on the Event Dispatch Thread
updated the method call from ` getMaxTextMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` in ` CompressExtension . java
updated steeringValue increments from ` + ` to ` - = ` in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more efficient
updated JdbcSerDe to utilize LocalDate and LocalDateTime for date and timestamp conversions to improve date handling and ensure accurate representation of date and time
updated the VERSION constant from 2 to 3 and modified metadata handling logic to ensure compatibility with different metadata versions and improve data processing efficiency
updated FlywayAutoConfiguration to conditionally use FlywayJpaDependencyConfiguration and added FlywayWithJpaConfiguration class to enhance
added a sorted ( ) method to the ClassesImpl class to ensure that the classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and modified the ` AbstractLauncherUiTest ` to use
refactor SharedInformer class to improve code readability to enhance maintainability and facilitate future updates
refactor memory and resource scope handling in TestCloseScope0 . java to support different versions of MemoryScope and ResourceScopeImpl to ensure compatibility with
updated test parameters from 500 to 5000 in AdaptServerSocket . java to increase test coverage for server socket functionality
refactor CaptchaChannelProcessorTests to improve test coverage to enhance reliability of captcha processing functionality
added a condition to update the owning collection in MetadataImport . java to ensure the item ' s owning collection updates correctly when changes occur
added retry logic for saving registry cache properties in AbstractRegistry . java to improve reliability by allowing retries when saving properties
updated the parameter in TrackingDirectoryWrapper from mergeDirectory to directory to ensure the correct directory is used for tracking CFS directory tracking
pmd : fix # 156 - unusedimports no longer throw an illegalargumentexception when use for loop
added validation for SinkDesc in HiveIcebergStorageHandler and a bucketed table check in IcebergTableUtil to ensure insert overwrite operations
updated assertions in BootstrapTests to check for legacy SAML keys to ensure proper validation of legacy SAML keys for the identity zone configuration
updated methods to check for non - static and non - static local types in Excluder . java to improve clarity and correctness in identifying anonymous
modified the ` getAddressVector ( ) ` method to use ` addressees ` instead of ` theAddressie ` to improve code readability and maintain
removed multiple comment waiting for line and block comments from CommentsParser . java to streamline comment processing and improve code clarity
added IOException handling to lock release methods and introduced a new LockReleaseFailedException class to improve error handling and provide clearer exception messages for lock release failures
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to align with the new package structure for
updated SpelExpressionTransformer to check if the current node is a unary operator before transforming to ensure proper handling of unary operations to avoid unnecessary transformation
added TypeValidation import and disabled ByteBuddy initialization to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling and improve code clarity
updated locking mechanism in LockModePessimisticReadWriteIntegrationTest to throw PessimisticLockException and adjusted timeout values in MySQLTableLock
refactor ` setSystemProperties ` method to remove dependency on ` LogFile ` to simplify the method signature and improve readability
refactor HTTP redirect handling in ServiceApiRequest . java to improve clarity and functionality to enhance code readability and maintainability by encapsulating
added environment mapping constants for service and version , version , and application IDs in MicroserviceFactory . java and ServiceCombConstants . java to improve
updated method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to improve clarity by using
updated database path and prefix handling in BaseAndroidTestCase . java and GeocodeHelperTest . java to improve code clarity and ensure consistent database deletion behavior
updated return statement to retrieve unread count from HomeDataSource to ensure accurate tracking of unread count for the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for virtual thread pool preview to improve
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and modified the Wallet class to limit the number of orders
updated user retrieval logic in HomePage . java to handle null user cases to improve robustness by preventing potential null pointer exceptions
[ hotfix ] [ test ] fix localfilesystem . match ( ) to return absolute path
added maximum width and height limits for instance bounds in ComponentBuilders . java to ensure instance dimensions do not exceed predefined maximum sizes
added logging functionality and deprecated the request method in CommonsHttpSolrServer . java to enhance error handling and provide clearer logging for configuration issues
added error handling for document creation in PrintController . java to improve error reporting for document creation failures
refactor CrateType . java to use a map for filenames instead of an Optional to improve code readability and reduce boilerplate in
added checks for empty and digit numbers in SpellChecker and a corresponding test case in i53643Test to ensure correct spelling behavior for numbers
removed an extra space in the MESSAGE constant declaration to improve code readability and maintain consistency
refactor file action handling in FileDisplayActivity to improve code organization and clarity to enhance maintainability and readability of the file action display logic
added a call to ` puller . setDaemon ( false ) ` in ` ReplicationHandler . java ` and wrapped the ` logReplicationTimeAndConf
updated the call to ` e . update ( recid , Serializer . LONG ) ` in ` StoreCachedTest . java ` to ensure consistency in
renamed the parameter ` materials ` to ` theMaterials ` and updated the constructor to accept ` theMaterials ` instead of ` materials ` to
updated DependencyBank . java to include additional project descriptions to enhance clarity and usability of the project ' s documentation
added a dynamic view pool for maximum recycled views in AppsContainerRecyclerView to optimize memory usage and improve performance by optimizing view pooling
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest . java ` to ensure the build process
update examplebaritonecontrol to deal with mining
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating parsing and
added null bitmap handling in FilterOperatorUtils and a new test for range filtering in FilterOperatorUtilsTest to enhance filtering capabilities and ensure correct behavior when
added validation for bootstrap method parameters in JDynamicInvokeExpr . java to ensure correct argument types and improve error handling for bootstrap method signatures
updated the port number in JmsHttpJmsTest from " http : / / localhost " to " http : / / localhost "
removed the clear ( ) method call from runtimeOptions . getFormatters ( ) to streamline the code by eliminating unnecessary formatters
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and updated
added a conditional check for workspace cell padding before adjusting to hide workspace labels to ensure that workspace labels are only visible within the appropriate cell boundaries
updated assertions in ReplicationFactorTest to use a new assertRf method for clarity to improve code readability and maintainability by using a unified assertion
sulong : fix llvm pre - initialization of llvm language
removed JUnit @ Ignore annotations from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java to enable
replaced RuntimeException with JsonIOException in Gson . java to improve error handling by providing a more specific exception type
bugfix : use integer . parseint instead of integer . valueof in visualscoretagtest
updated error messages from " Unable to create " to " Unable to copy " and modified file traversal parameters to improve clarity of error reporting and
add islowlevelconsumersegmentname ( ) and hlcsegmentname . ishighlevelconsumersegmentname ( ) method to segmentname ( #
added methods ` startActivity ` and ` startActivityForResult ` to ` ShadowFragment ` and corresponding unit tests in ` FragmentTest ` to ensure proper handling
updated the method to return a current date using the clock reader ' s current time instead of the current time to ensure the date reflects the current time
updated the return statement in TargetCpuType . java to include a specific CPU target to ensure compatibility with Android ' s CPU architecture
added a method to delete all files in a FileDataStorageManager and integrated it in ManageAccountsActivity to improve file management functionality for accounts
updated command - line argument for re - running SchemaCrawler from " - ? " to " - h " to improve user experience by providing clearer
added a static factory method ` createSuiteDescription ` to create a ` Description ` instance with a unique identifier to enhance flexibility in creating suite descriptions
updated the decoding method in SnapshotThread to use MultiFormatReader instead of MultiFormatReader to simplify the decoding process and improve code readability
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor to simplify the constructor and eliminate unnecessary complexity
added unit tests for range range handling in GWCZoomContextFinderTest . java to ensure correct functionality of range retrieval based on end and start
added a dependency tracking feature to JRubyScriptEngineConfiguration and updated its usage in JRubyScriptEngineFactory to enable dependency tracking functionality based on configuration
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
do n ' t try to add a keyspace if it already exist . patch by jbellis
refactor image handling in WelcomeWindow to use cached images instead of bgImage to improve performance by reducing unnecessary image updates
updated tuner configuration handling to include a unique identifier and improved error logging in the TunerManager and R820TTunerController classes to
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test method in ShBinaryRuleIntegrationTest to enhance functionality and ensure proper handling of
added a condition to set the includeString to " db : hsqldb " in TestFilter . java to ensure proper handling of database - specific
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t materialize host exception when there be no stack trace
graalservices . exportjvmcito ( ) now call services . exportjvmcito ( ) instead of services . load (
add test for duplicate command handler resolution in aggregateannotationcommandhandlertest
[ flink - 20865 ] [ runtime ] enable fine - grained resource management in batch mode
fix entityfishhook not be able to place block in the blockstate , close # 442
camel - 14263 : camel - ftp should use source code generate configurer for camel - ftp
rename methods and variables from " getCommandRunner " to " getStepRunner " across multiple files to improve clarity and consistency in naming conventions
replaced the ` useShortNames ` boolean with ` compressPackageNames ` in the ` GangliaReporter ` class to enable package name compression to enhance
added a check for empty items in AppsContainerRecyclerView . java to prevent processing when there are no items to display
added a conditional bean definition for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the REPORTER
add property to xmllayout , and make it easy to configure .
added a new parameter ` OMIT _ HEADER ` to ` CommonParams ` and implemented the ` remove ` method in ` NamedList ` , `
[ bug - 64278 ] escherproperty . getpropertynumber ( ) should return the property number , not the id
replaced direct calls to ` getBuildRuleType ` with calls to ` Description . getBuildRuleType ` to improve code clarity and maintainability by
refactor scene . v ( ) . getmethodnumberer ( ) . remove ( ) to scene . v ( ) . modifyhierarch
[ java ] fix npe in testifdisputeriesreplay .
added hashCode and toString methods to AbstractNamedObject and updated retrieveColumns method to accept NamedObjectList < MutableTable > to improve hash code generation and
wallet : set confidencetype . not _ seen _ in _ chain to not _ seen _ in _ chain .
refactor HttpClientIntroductionAdvice to improve handling of body and header annotations to enhance code readability and maintainability by reducing redundancy
fix craftinghelper . processconditions ( ) to skip empty condition
hbase - 25813 add log when fail to open region
refactor null and byte length comparisons in Credential . java to improve code readability and maintainability
[ java ] fix checkstyle violation in clientconductor .
updated the ` destroy ` method to throw an ` InterruptedException ` and modified the process destruction logic to improve error handling and simplify the process destruction process
added support for Oracle in MySQL database checks to ensure compatibility with Oracle database interactions
camel - 14263 : camel - mail : do n ' t try to connect to the store if the store be n ' t connect
added token handling logic in mmm Parser . java to ensure that the query consumes more tokens to avoid parsing cancellation errors
camel - 18131 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
added methods to retrieve the data file name in Model . java and modified model initialization in Voice . java to improve model handling based on duration and F
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable dynamic configuration of email domain for identity provider
added timeout configuration constants and methods to retrieve read and connect timeouts in Configuration . java and updated ViewRegistry . java to utilize these configurations
do n ' t call processdeferredconcepts ( ) if there be no deferred concept
added RedisCategory category annotation to RedisServiceRegistryTests to improve test organization and categorization of Redis services
updated FindDeprecatedMethodsTest and FindDeprecatedUses to use ParameterizedTest annotations and improved type pattern handling to enhance test coverage and ensure proper handling of
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the component in the waterfall panel
removed unused imports from multiple configuration files to clean up the code and improve readability
updated contract event trigger methods to use ` setEventSignatureFull ` and ` setEventName ` instead of ` setEventSignature ` to improve event
updated filter condition in FileTestHelper to check for session IDs ending with " _ " to ensure that the session ID ends with a specific suffix instead
updated fillRect method to use a background color instead of a clearRect call to enhance visual consistency by using the background color for rectangle rendering
add rule compilation error if invokers do n ' t exist
removed unnecessary print statements from multiple Java files to improve code readability and maintainability
added a conditional check for NaN values before assertions in TestFieldCacheSort . java to ensure that assertions are only performed when both score values are valid
updated the initialization of oldKeys to use Set . copyOf for better immutability to ensure oldKeys is immutable and avoid unintended modifications to the
added handling for zeroTime in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure proper functionality and validation of date default
rename ` ` multisig ' ' to ` ` btc ' ' for clarity .
updated generics in multiple collector classes from ` Map ` to ` Map < ? , ? > ` across multiple collector classes to enhance type safety and
[ rhdm - 271 ] fix npe when edit a kiesession with multiple kiesessions ( # 243 )
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure consistency and avoid potential null pointer exceptions
added a conditional check to return early if modalness equals mModalness to optimize performance by avoiding unnecessary processing when modalness changes
added a test for the ` CodecCapabilities ` constructor and implemented a native ` getGlobalSettings ` method in ` ShadowMediaCodecList ` to ensure
fix # 5460 ( when enter key use , focus be wrong )
added width and height validation checks in SunVolatileImage , X11SurfaceDataProxy , XRPMBlitLoops , and XRSurfaceData
updated thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure consistent formatting of thousands in
replaced ` int [ ] _ loops ` with ` AtomicInteger [ ] _ loops ` in ` AsyncStressTest . java ` and `
added a check for beta flavor in AchievementsFragment and modified progress bar visibility in LeaderboardFragment to improve user experience by notifying users when
added access , name , and desc properties to the SearchMethodVisitor class to enhance the functionality of the Search class by providing access , name , and
added sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve
reformatted the duration setting logic in DLNAResource . java to improve code readability and maintainability
removed the ' required ' attribute from the ` @ XmlElement ` annotations in ` BatchResequencerConfig ` and ` StreamResequencerConfig `
refactor tablereader . acquiretx ( ) and tablereader . readtxslow ( ) to improve code readability and maintainability
flume - 132 . add support for keymanager algorithm in ssl . properties .
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code readability and
added exit ( ) method call in Blockmania . java and modified key event handling in Keyboard . java to improve user experience by providing quick exit
replace PACKAGE _ PRIVATE access specifiers with NONE in multiple classes to align with Java ' s access specifications and improve code clarity
renamed the method ` unHandled ` to ` unhandledErased ` and introduced a new file ` unhandledUneras
updated the logic for retrieving stripes and statistics in OrcInputFormat . java to ensure correct initialization of stripe statistics based on the specified conditions
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions during execution
change url for myhentaicomics ripper from http to https
added version option handling in mmm App . java and ppp App . java to provide users with information about the current JAR version for better tracking and
use splittokens ( appletlist , string , string ) instead of split ( appletlist , string , string )
updated the handling of rotation preferences in ConsoleActivity . java and added input connection methods in TerminalView . java to improve user experience by ensuring proper rotation
updated the type of the ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ScoreDoc > ` and added a suppression
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when accessing ownerConnectionAddress
add headersmapfactory attribute to jmx to make it easy to configure .
updated formatting in JavaCompiler . java and Diagnostic . java files to improve code readability and maintain consistency
refactor jmsoutboundgateway to make it easy to configure the jmsoutboundgateway
updated the index parameter from ` i + 1 ` to ` i 2 ` in the ` expect ` method call to correct the index used in the
refactor script engine initialization and error handling in AbstractScriptProcessor . java and InvokeScriptedProcessor . java to improve code clarity and ensure thread safety
added ` org . postgresql . PGStatement ` to the proxy invocation in ` PooledConnectionImpl . java ` to support additional PostgreSQL
[ hotfix ] [ test ] fix cassandraiotest failure
changed log level from error to warn in AtomicRemainder . java to improve log granularity for better debugging
do n ' t sort candidate in compactioncontroller when it ' s full
fixed - rblockingdeque . poll ( ) and rblockingdeque . poll ( ) method do n ' t respect timeout .
updated printMap method calls in JobInspectCommand . java for consistency to improve readability and maintainability of the code
refactor Engine class to improve code organization to enhance maintainability and readability of the code
updated sorting logic in ChildHolder to use CLASS _ COMPARATOR for better sorting to ensure consistent ordering of child entries based on class comparison
[ rocketmq - 102 ] fix acl test to use sessioncredential .
updated condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling
[ hotfix ] [ notebook ] do n ' t print stacktraces if interpretergroup be null
replace ` funN ` with ` lt ` in ` ExpressionNodeEvaluator . java ` to align with the intended usage of the variable ' lt '
removed the ` public ` access modifier from ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java `
fix error message when try to attach a volume to a vm before create a snapshot policy
removed public access modifier from write , flush , and clear methods in ItemWriter . java to restrict method visibility to package - private for better encap
updated the thing name from an empty string to " test " in RoombaHandlerTest . java to ensure the test reflects the intended functionality of the
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutor
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a more efficient RAMDirectory instance
added a static variable ` mLineHeight ` and modified the calculation of ` lineHeight ` based on its value to ensure that ` lineHeight `
refactor WalletAppKit class to improve code organization to enhance maintainability and readability of the code
do n ' t hardcode hat . js when load profiler engine
remove transport menu and button group in chat transport selector box .
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl ` classes
do n ' t set bsq explorer if it do n ' t exist
added a attributes map and methods for retrieving and removing attributes in the StandardSession class to enhance session management capabilities by allowing retrieval and removal of attributes
added assertions to verify the properties of the plain bean in TestDbJson _ List . java to ensure the correctness of the bean ' s name
updated averages array initialization from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to use initialPageCount instead of pageSize
refactor BatchCommandLineLauncher to improve code organization to enhance maintainability and readability of the code
added DataSource and JdbcTransactionManager beans for HSQL database and transaction management in BatchMetricsApplication . java to enable support for HSQL database and JDBC
make glowrootloghttpservice implement httpservice instead of unauthenticatedhttpservice
pdfbox - 4071 : use nonstrokejavacompositecompositecomposite and nonstrokejavacompositecomposite
removed unnecessary notifyAll ( ) calls in DocumentsWriter . java and added refresh method in DocumentsWriterPerThread . java to improve thread safety and ensure proper
added methods to retrieve multiple choice options and validation constraints in UiBinding . java to enhance functionality for managing multiple choice options and validation constraints in the UI
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for string representations across multiple classes to improve code clarity and
added a conditional check to only update the stored copy of the tree for a full save operation to ensure that the saved tree is only updated when necessary
refactor Affix and Dictionary classes to use a Pattern object instead of a String condition to simplify the condition setting process and improve code clarity
replaced explicit generic type declarations with the diamond operator in KrakenAdaptersTest . java to improve code readability and adhere to coding standards
removed dependency on CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unused attribute retrieval
refactor NBJavacTrees to improve code structure to enhance maintainability and readability of the code
removed unsupported encoding check from VectorizedPrimitiveColumnReader to simplify error handling for unsupported data encodings
added SLF4J marker handling in HttpSolrCall . java to improve logging consistency and enhance code readability
added call to destroymetadataserviceproxy on serviceinstanceschangedlistener to destroy metadata service proxy when instance change
fix infinite recursion in defaultentityqueryrepository when maxlevel = = 10
updated error message formatting in HubChangeExecListener . java to handle null changelog ID to improve clarity of error messages for better debugging
alexeibarantsev : add try - hard test to make test more robust
updated ` executeCompilation ` method to return ` ProcessExecutor . Result ` and added a new test for compiler errors in ` BuildReportIntegrationTest ` to
refactor event range handling in ObjectStore . java to simplify the logic to improve code readability and maintainability
removed redundant validation checks in ValidatedLocalValidatorFactoryBean . java to simplify the logic and improve readability
fix memory leak when remove temporary block entity
[ hotfix ] [ runtime ] remove unused code in intrinsifyarraycopyphase
do n ' t set log level to all when run test
removed the WantedAnywhereAfterFollowingInteraction exception class and updated related tests to include the current location of the stack trace to improve debugging information
added account validation checks for owner and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator classes to ensure accounts exist and
replaced Comparator with TreeMap for command sorting to improve performance and readability of command output
chore ( regen ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.16 . 0
updated property settings in BaseSingleTreeBuilder . java to use setProperty instead of addProperty to improve code readability and maintain consistency in property management
updated AsmLibraryLoader to use the ClassLoader for class loading and added constructors in AsmLoader to improve class loading flexibility by allowing the class
pdfbox - 4071 : add warning for rlineto and rrcurveto , a suggest by valerybokov
updated the export syntax in Java2TypeScriptTranslator to conditionally use " declare " or " export " to improve clarity and maintainability of the
replaced ` EmptyServerHandler ` with ` AbstractHandler ` in ` HttpClientTest . java ` to enable handling of request input streams for improved test reliability
removed unnecessary array creation for actionListener and analogListener in HelloInput . java to simplify listener registration and improve code readability
[ hotfix ] [ sqm ] make sure sqmpath . getlhs ( ) return the root if it ' s null
updated package declaration in CreateFolderTest . java , DeleteFileTest . java , ReadFolderTest . java , and TestActivity . java files to
updated BufferedImage creation logic to handle BYTE _ INDEXED and GRAYSCALE _ INVERT cases to improve image processing efficiency and ensure correct
add libgraal initialization to libgraal for libgraal .
[ hotfix ] [ test ] remove dataflowportabilityapiunsupported from test
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 11 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
refactor CallStack class to improve code readability to enhance maintainability and facilitate future updates
log a warning if the max size configuration of a map do not allow any data
updated references from " AST " to " LST " across multiple files to ensure consistency and accuracy in terminology across the codebase
[ java ] improve performance of threadedacousticscorer . getscoreablesperthread ( ) .
replaced AssertionError with a return statement that returns null instead of throwing an assertion to improve error handling by returning a null value instead of throwing an assertion failure
updated method calls in ApplicationControllerFluentLeniumTest . java to use $ ( ) . title ( ) instead of getServerAddress ( ) to improve
added makeString method implementations across multiple iterable classes to enhance string creation functionality for better performance
updated the order setting in OidcServicesManagerRegisteredServiceLocator to use a static constant DEFAULT _ ORDER to improve code readability and maintainability by
added a ` Predicate < ProposedWeakAssociation > ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related tests accordingly to enhance
refactor Deflater class for improved performance to enhance compression efficiency and performance
added exception handling for IOException in Font . java to improve robustness by throwing an IOException when an exception occurs
added a null and empty check for the content in VersionTypeBinding . java to ensure that a valid content string is provided to avoid potential NullPointerException
refactor NearbyListFragment to return the places list directly instead of storing it to improve code readability and maintainability by using a more
updated content type check to be case - insensitive to ensure consistent handling of content types regardless of case
fix ( crypto ) : make opensh authentication magic public and add format to spec
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and modified related logic to enhance folder name suggestion handling based on binding
updated import statements in InheritanceCacheTest . java to use wildcard imports and added logging for third access to improve code clarity and ensure proper entity
updated import statements in ConnectOAuth2RequestFactory . java and added user approval request handling in TofuUserApprovalHandler . java to improve code organization
fix influx name convention not apply to tag value ( # 645 )
add a dump ( string , double d2 ) method to the abstractquickfixtest to make it easy to debug
updated cookie key check from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the updated cookie handling mechanism
replaced the private method ` classMetadataUnsupported ( ) ` with a static method ` classMetadataUnsupported ( ) ` in ` Platform . java ` to
added functionality to manage the visibility of the clear all button based on user preferences to enhance user experience by allowing users to enable or disable the clear all
made ` desiredRepoVersion ` a final variable and adjusted the timeout duration in ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider
deleted the MemoryLeakTest . java file to the test class is no longer needed in the project
updated the return statement to include the local host address if localhost is true to ensure the application connects to the correct local address when localhost
added a condition to check if MVDWAPI is enabled before accessing the MVdWPlaceholderAPI plugin to ensure compatibility with Plot
added cluster size assertion in abstractpartitionassignmentscorrectnesstest . testpartitionassignmentscorrectnesstest . testclustersizeeventually
implement singleton implementation for FFIProvider in FFIProvider . java to improve flexibility in loading FFIProvider instances based on JNA usage
[ tika - 2476 ] add test for hierarchical file list in batchprocesstest
added null checks for objectToSave and idProperty , and introduced tests for saving maps and primitive objects in MongoTemplateTests to improve robustness and
use node _ list instead of node _ input when direct successor count > 0
added a new field ` accTradeValue ` and its getter method in ` BithumbTicker ` , modified ` BithumbTradeServiceRaw ` ,
updated logging statements to include the segment name in log messages to improve clarity and traceability of log messages for better debugging and monitoring
changed ` maxParallelThreads ` to ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java `
replaced ArrayList with CopyOnWriteArrayList for header , data , and readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex to
fix a few javadoc warning in the java . net package
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
try to fix the camel - azure - azure - azure - azure - azure - azure - azure - azure - azure - azure - azure - azure
updated the condition from ` = = ` to ` > ` in ` DelegationService . java ` to ensure correct handling of cycles in the delegation
updated random value generator from 6 to 10 in JdbcExpiringCodeStore . java and modified assertions in CodeStoreEndpointsTests . java and Auto
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching logic for UniqueConstraint instances
refactor description handling in MediaDetailFragment . java to improve clarity and efficiency to enhance readability and maintainability of the code
catch arrayindexoutofboundsexception and classcastexception in findbugs2 . java .
added a new method ` withReferenceFilter ( ) ` to ` ListImagesCmd ` and its implementations in ` ListImagesCmdImpl ` to
camel - 14263 : camel - jms should exclude the bridgeerrorhandler property in camel - jms
added checks for conditional statements in OpExclusionUtils . java to handle cases where no ops are excluded to ensure proper handling of cases where no ops are
added return statements in DatabaseCommand . java to ensure that the method correctly returns a boolean value
updated Politician instances from " blair " and " chirac " to " Prime Minster of Cheeseland " and " Omni
use stringutils . isblank instead of string . length ( ) > 0
camel - 14284 : camel - restlet should use port = 0 when port be set to 0 in camel - restlet
fix a typo in schematicformat . getblockid ( ) .
added a system property for Hive query maximum length in QTestUtil . java and removed overridden configurations from SessionState . java to improve query performance
changed access modifiers of ` userName ` and ` securityMgr ` to private and refactored HTTP configuration initialization to enhance encapsulation and improve
rename sinks / sources to hdfss / sinks / kafkas / s3sink / s3sink / s3sink
modified the condition for determining if the application name is not equal to " spark . app . name " in HiveConf and HiveSparkClientFactory
rename ` ` whitename ' ' to ` ` includedname ' ' in managedclassfactory .
simonstewart : remove the window . restore ( ) test and add a driverservlet for maximize window
refactor methods in ` AbstractEmbeddedCellBuckOutInfo ` to use ` getMainCellRoot ( ) ` and introduce ` getCellBuck
updated assertion to check for " entity expansions " in TestXMLEntityExpansion . java to ensure that the exception message is not null to avoid potential
modify table offset and length assignments to mask them to ensure that the values remain within the valid range of 0x7FFFFFFF
added a customize method to the DirectMethodHandle class to ensure that the customized form is not null to avoid potential null pointer exceptions
refactor LineChartRenderer to improve readability and maintainability to enhance code clarity and maintainability by reducing redundancy
refactor flavor handling in AndroidBinaryDescription to support multiple flavors instead of a single condition to improve code readability and maintainability by consolid
updated buffer assignment from ` offset ` to ` i ` in ` Lwjgl11 . java ` to ensure correct indexing for generating buffers
added two new classes , Property . java , PropertySuper . java , and TestClassResolutionFail . java , and modified Property . java to extend and
[ java ] only remove shutdown hook if groupproperties . shutdownhook _ enabled be set to true .
updated the FilterChainProxy class to use FilterChjainProxy instead of FilterChainProxy and removed the URL parameter from the VirtualFilterChain constructor
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( values ) ` and updated return statements to use ` values [ 0
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure tables are loaded only when the schema is
set ` baseType ` to null and initialize ` literalPrefix ` , ` literalSuffix ` , and ` localizedTypeName ` in ` MutableColumnDataType
updated link references in multiple Java files to use { @ link } instead of ` ` href ' ' to improve code readability and maintainability by
replaced instances of ` getInstance ( ) ` with ` getInstance ( ) ` for multiple evaluator classes to improve performance by reducing unnecessary instance creation
updated references from " osx " to " osx _ x86 _ 64 " in multiple test files to ensure consistency and correctness in the
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound feedback on clicks
changed the exception type in the main method from Exception to IOException to provide a more specific exception type for better error handling
added granularity support to the left axis in BarChartActivitySinus to enhance the visual representation of the left axis in the chart
refactor version comparison logic into a separate ` compareVersions ` method to improve code readability and maintainability by reducing duplication
updated ContextHandlerGetResourceTest to use MavenTestingUtils for directory handling and added OS alias support checks to improve test reliability and ensure compatibility with
added a ` close ` method to multiple ` PinotClientTransport ` classes to ensure proper resource management and prevent potential resource leaks
[ hotfix ] [ test ] make mockappender . awaitevent ( ) thread - safe
[ beam - 4142 ] add check for directory in hadoopresourceid .
removed unused import statements from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability
removed duplicate unbindHandle calls in ItemServiceImpl . java to improve code clarity and maintainability
refactor configuration handling in Config and Attribute classes to improve code readability and maintainability
removed unnecessary condition for screen shot handling in OtherActivityTouchConsumer . java to simplify touch tracking logic for better readability and maintainability
updated theme handling in NavbarButtonsViewController to use UI _ MODE _ NIGHT _ MASK and UI _ MODE _ NIGH
[ java ] throw exception instead of abort when language can not be determine for a file .
updated variable names from ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` to ` refKind ` and ` memberIndex ` to improve clarity
added BlockFormattingContext parameter to multiple methods in BasicPanel . java to enhance functionality by allowing block formatting context customization
added a new method ` getStdErrorOutput ( ) ` in ` WorkerProcess ` and improved error handling in ` WorkerShellStep ` to enhance
added null checks and error handling in CheckedListReplaceAll . java to ensure proper handling of null operators and prevent runtime exceptions
added volatile variables and a new test method for writing connections in SslConnectionTest . java to improve test coverage and ensure proper handling of write operations
refactor DeviceFlag and FeatureFlags classes to improve listener registration and property change handling to enhance listener management and ensure immutability of feature flags
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to version 2.1 . 0
added import statement for MalformedURIException in StandardRequestHandler . java to handle malformed URI exceptions more effectively
update instructorfeedbackeditpage to show the end date when click on the first element in the browser .
refactor synchronization logic in KrakenStreamingTradeService . java to improve code readability and maintainability
changed ` System . err ` to ` System . out ` in ` ChangeableUrls . java ` to standardize the output format for logging
added a shallow copy option to the SparseRowMatrix constructors and modified constructors accordingly to enhance flexibility in creating SparseRowMatrix instances based on the
server : do n ' t create usage event for delete volume if the volume have no pool id
refactor plan file handling to differentiate between local and global configurations to improve code clarity and ensure correct path resolution for local Hive configurations
[ beam - 10786 ] fix udftestprovider to use vendored guava .
[ hotfix ] reset profilerclient in memorycallgraphbuilder . resetinternalstate ( )
add a check for a non - null operationset in the conferencechatmanager
added file validation to ensure the output file can be written before proceeding to ensure that the application does not fail to write to a non - writable
added a new ` FolderSyncActivity ` class and modified ` DrawerActivity ` to handle folder sync functionality to enhance user experience by providing a dedicated
[ hotfix ] [ test ] fix flaky test in sequentialchannelstatereaderimpltest
spanish tree normalizer : add support for comma and %
use heappointwriter . getpackedvalueslice ( i ) instead of pointreader . getreader ( 0 , pointcount )
added a new class ` LocaleRandomizer ` and its corresponding test class ` LocaleRandomizerTest ` to facilitate the generation of random locales based on available locales
add unit tests for font printer metrics and type data in TestMimeTypes . java to ensure correct handling of font type data in the application
added version " 10.0 " to the list of supported versions in Installer . java and AutoUpgrade . java to ensure compatibility with the latest
reformatted the ` run0 ( ) ` method call in ` TCPTransport . java ` to improve code readability and maintainability
updated the ` read ` method to include a default value of 0 in ` Http2AsyncParser . java ` to ensure a default read timeout is
updated WATCHER _ INITIAL _ DELAY value from 120 to 600 in TimelineMetricConfiguration . java to increase the initial delay from
updated the error message format in SelectStatement . java to include the column name to improve clarity and consistency in error reporting for PRIMARY KEY columns
added date handling functionality using Joda - Time and DateTimeFormatter in ThirdEyeJiraClient . java to ensure accurate representation of date - time values
refactor priority handling in HeadersGenerator and PriorityGenerator classes to improve code clarity and maintainability by consolidating priority frame generation logic
added a constant for maximum scalar replacement code size and updated the condition for scalarReplace to ensure scalar replacement logic does not exceed a defined maximum code size
added DATE _ TAKEN to the projection and folder sort order in MediaProvider . java to ensure accurate sorting and ordering of media files based on
updated drawImage parameters in TexturePacker2 . java to correct positioning of images to ensure proper rendering of images by adjusting the rectangle boundaries
refactor ` JettyWebSocketServerContainer ` and ` JettyWebSocketServletContainerInitializer ` to use ` ServletContextHandler ` directly to improve context handling
added shutdown calls to validateSignService , TransactionsMsgHandler , and TransactionsMsgHandler , and initialized nodePersistTaskTimer in NodePersistService
added RawJsonRequestBody annotation processor and registered it in JaxrsSwaggerGeneratorContext and Echo classes to enable handling of raw JSON input in Swagger
added a new method ` newTarget ( int targetType , TargetExtension extension ) ` to create a ` Target ` instance with specified type and extension to
updated the return type of ListBeanContainer to use ArrayList instead of a raw List to improve performance by leveraging a more efficient data structure
hbase - 26464 fix typo in testmetricsregionserver . testblockcachehitpercent
camel - 14105 : cachedoutputstream should clean up fileinputstreamcaches on exchange completion .
fix ( teltonika ) : set deviceid on position .
replaced ` Files . readFirstLine ` with ` Files . asCharSource ( buildFile . toFile ( ) ) . readFirst
added a null check for the operator in the visitAssignop method and created a new Test class for testing to ensure that an empty operator is created
added a boolean flag ` enableAccountHandling ` and modified the ` onCreate ` method in ` BaseActivity ` to conditionally create the mixin registry based
bugfix : heuristically find the main connected component of a polygon in isochrone
updated DrillViewTable to include a path list and modified its constructor to accept a List < String > path to enhance the flexibility of view path
[ java ] add additional configuration for pooledbytebufallocator .
updated array type check from double to short in ObjectInputStream . java and added a new class CloneArray . java to ensure correct handling of short arrays
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE in HiveConf . java and updated the executor initialization in Llap
added Java version checks and rerun initialization for " sun . security . ssl . Debug " and " sun . security . ssl . SSLLogger "
updated latitude and longitude range checks and added assertions in LatLonGrid . java , and modified test cases in TestLatLonGrid . java to ensure grid
simonstewart : add invisibilityofelementwithtext and refreshed ( ) method to the expectedconditions class
added an additional parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and updated related method calls to enhance file replacement functionality by allowing insertion
added a test for the ` getOuterClass ` method in ` SomeInnerClassReflector ` to ensure that the ` getEnclosingObject ( ) `
added a new configuration option " auto _ generate _ android _ facet _ sources " and updated its value in IjProjectBuckConfig to enable
updated message formatting and improved logging messages in HubChangeExecListener . java to enhance readability and maintainability of the code
added properties field and related getter and setter methods to Link class , and created corresponding tests in QuickLinksConfigurationModuleTest to enhance property management and ensure
updated ` InitialConfig ` and ` YamlConfigFileDTO ` classes to implement ` toString ` method to enhance object representation for better debugging and logging
updated generic type parameters in SimpleForwardingClientCall and SimpleForwardingClientCallConfiguration to improve type safety and clarity in the code
refactor ` forName ` methods to accept ` Class < ? > caller ` as a parameter and implement caller - sensitive adapters to enhance class loading
updated assertions in RequestItemRepositoryIT to use is ( is ( emptyOrNullString ) ) instead of Matchers . isEmptyOrNullString to improve test
replaced instances of ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread safety by using a more appropriate
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
refactored HumanTime and TimeStepdefs classes to use Jchronic ' s Options and Calendar for improved date handling to enhance code clarity
fix a minor typo in the logo . close # 1338
updated ` BitstampPollingAccountService ` , ` BitstampMarketDataService ` , ` BitstampPollingTradeService ` , ` BitstampPollingM
removed multiple print statements from RecordGenerator . java to simplify output formatting to improve code readability and maintainability
[ flink - 18126 ] [ kafka ] remove auto commit when auto commit enable
removed lock release logic in Liquibase and added database change log table flag in StandardLockService to improve lock management and ensure proper handling of database
updated @ SuppressWarnings annotations to include " rawtypes " and " rawtypes " in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to
refactor database methods to use synchronized keyword to improve thread safety and reduce potential contention issues
camel - 14284 : camel - spring - boot - auto - configuration - maven - plugin : fix a bug in camel - spring - boot
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure the ticker adapt
( chore ) camel - core : fix checkstyle violation
replaced UUID . randomUUID ( ) . toString ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to
added synchronization around date and number parsing in DefaultJobParametersConverter to ensure thread safety during concurrent access to properties
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated heightmap ' s height scale from 256 to heightScale in FractalHeightMapGrid . java to allow dynamic adjustment of the heightmap
updated equality check from assertEquals to assertNotSame in SecurityConfig and SecurityConfigTests to improve clarity and correctness of security comparison logic
[ hotfix ] [ connectors / common ] disable dump - partition - id by default
added unit tests for TronTXOutput functionality in UTXOSetTest . java to ensure correct behavior of TTXOutput handling during testing
[ java ] fix bug in unusedassignmentrule , unusedlocalvariablerule , unusedformalparameterrule , unusedlocalvariablerule , unusedlocalvariable
pdfbox - 4071 : avoid npe in cosarraylist , a suggest by valerybokov
added a new test for overriding job restart parameters in JsrJobOperatorTests to ensure that job parameters override previous restart parameters are correctly validated and
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform
removed duplicate code for principal initialization in JaasAuthenticationHandler . java to improve code readability and maintainability
refactor core closure process to use an executor service to improve thread safety and resource management during core closure
removed unused imports and added visibility setting for mActionsView to improve code clarity and ensure proper visibility behavior based on fullscreen progress
refactor parameter handling in RunIdIncrementer . java to ensure a default JobParameters object is used when parameters is null
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added tests for retrieving matched devices in SchemaRegionBasicTest . java to ensure correct functionality of device matching functionality
( chore ) camel - metrics : add tryinvoke ( ) to invoke metric event in case of exception .
added a conditional check for max in EigenvectorCentrality . java and created a new EigenvectorCentrality
updated registry handling in LookupIPv6 . java to use a random port instead of a hardcoded value to ensure consistent registry port usage and improve
update geometrygenerator to use createbuffer ( ) instead of createbuffer ( )
change beacon amplifier to 0 instead of 2 , to fix a bug .
refactor TubeCalc class to improve code readability to enhance maintainability and facilitate future updates
disable http client health check by default
refactor DefaultValidator to support generics and improve group validation logic to enhance type safety and prevent potential runtime exceptions
added a new key and a timeout for bug 8057791 in Nimbus L & F . java to address related bug 8057791 and
allow speedment application to exit via main method completion ( # 322 )
alexeibarantsev : do n ' t replace a number with a space in the lexicon version .
added a call to ` ReflectionCheckLinker . checkReflectionAccess ( type ) ` in ` JavaAdapterFactory . java ` to ensure proper access
[ hotfix ] [ test ] add lazysessioncreation = true to all test case
updated initialization logic in CombineHiveRecordReader and HiveContextAwareRecordReader to include a recordReader parameter to enhance functionality by allowing initialization of I
deleted ClassLoaderHolder and LoaderManager classes to remove unused classes to streamline the codebase
refactor filestore . getjrtfilesystem ( ) to use filestore . configurationchanged ( ) .
added try - catch blocks around session callback registration and unregistration to handle potential exceptions during callback registration and unregistration
removed " src / test / org / apache / lucene / index / org / apache / lucene / index / index . cfs " and added
[ hotfix ] [ runtime ] fix npe in akkarpcserviceutils # createandstart
added a configuration setting to limit the number of attempts in TestExportSnapshot . java to ensure that the test runs with a minimum number of attempts for
pdfbox - 4071 : remove afm - specific check , a suggest by valerybokov
added a new test class ` SslConnectionTest ` for verifying SSL connection behavior to ensure that the SSL engine properly closes after the SSL
added validation for address family type and family types in InetAddress . java and NetworkInterface . java to ensure only valid IPv4 and IPv6 addresses are
added a test method for serializing dates in a collection using Gson to ensure proper serialization and deserialization of lists of dates in JSON format
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
added debug logging and modified conditional logic in PutDatabaseRecord . java to improve debugging capabilities and ensure proper handling of the first update key condition
updated loop condition in TableOutput . java to correct the width calculation to ensure that the loop does not exceed the maximum allowed width
pdfbox - 4071 : remove null check , a suggest by valerybokov
updated priority handling in FormatStringChecker to use HIGH _ PRIORITY when formatString contains " { 0 " to ensure proper priority is set for
[ java ] : add rule to ignore non - final loop variable in for - each statement .
updated PDFExporter to set PDF version and full compression settings , modified sample file name , and modified properties in PDFExporterTest to enhance PDF export functionality
added unit tests for LdapUserDetailsMapper to ensure correct mapping and handling of role attributes in LDAP mapping
cloudstack - 1186 : make ldap read timeout configurable
refactor multiple test classes to improve code organization to enhance maintainability and readability of the test suite
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` in multiple classes to clarify the purpose of the boolean variable to improve code readability
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gestures when the handler is invalidated
updated mMaxDistanceForFolderCreation and mOldRotationYs variables and adjusted their initialization and initialization values to improve folder creation responsiveness and
updated OciConfigConfigSource to use ConfigProviderResolver for configuration property handling to improve code clarity and maintainability by using a more appropriate configuration provider
refactor Testjsig class for improved readability to enhance maintainability and facilitate future updates
fixed mana tablet , greater ring , terra pick , and terra tool not be able to place mana in the mana
chore : update license year for generated file ( # 1 )
removed the serialVersionUID field from P11TlsPrfGenerator . java and added a suppression warning in P11TlsPrfGenerator
replaced ` tsFileNotValid ` with ` isValidateTsFileFailed ` for clarity and consistency to improve code readability and maintainability
added new files Switch21 . java and Switch19 . java with switch pattern matching and guard pattern matching methods to enhance switch - case handling functionality and
updated error messages in ComparableSubjectTest . java to remove redundant details to improve clarity and consistency in error reporting
add standalone flag to streamhelper to enable xml output in standalone mode
updated size validation logic and improved object comparison in Int2ObjectCache . java to ensure proper handling of size limits and provide clearer error messages for
added order handling to security filter chains in WebSecurityConfigurationTests to ensure that security filters are processed in the correct order based on configuration
removed TimeInForce . GTC from the OrderType parameter in BinanceTradeService . java to simplify the order type handling by eliminating unnecessary time
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update related methods to improve code structure and ensure min and max values are validated correctly
updated the separator character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure the correct separator is
camel - 14284 : fix the issue that camel - jms do n ' t return the documentation for the jms component .
added error handling to the ` getSourceBound ` method in ` SourceUtils ` and created a new test class ` TestGetBound ` to improve robust
refactored filter predicate creation logic into a separate method to improve code readability and maintainability by reducing duplication
updated BatchPropertyBeanPostProcessor to conditionally modify originalArtifactName based on the presence of SCOPED _ TARGET _ BEAN _ 
update httpssegmentfetcher to read all available certificate and log the serial number
modified the return type of ` getDefaultBooleanValue ` from ` boolean ` to ` String ` and added a new ` DnsFallback ` class with multiple
ww - 3853 add more detail to exception message when write tag fails
changed the data type of the ` success ` variable from ` boolean success ` to ` String url ` to provide a more descriptive parameter for
replaced the implementation of the Privilege class with a lambda expression and a try - finally block to ensure proper resource management and avoid potential memory leaks
removed " address " and " phone " scopes from the CommonOAuth2Provider and its tests to simplify the scope criteria for better usability
refactor the asynchronous execution of the ManagedSelector to use a separate Start class to improve thread safety and ensure proper synchronization during selector updates
added hue and saturation values in WLedHandler . java and modified the request handling in WLedHandler . java to enhance color representation and
replaced the validation method in VectorizationProvider to use a Set of valid callers instead of a Stream to improve code readability and maintainability by
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to handle JSR instances in the InstSwitch class
added transaction management to the SubscriptionActivatingSubscriber class to ensure subscriptions are registered in a transactional environment
refactor SQL statement handling in DBMSProcessor . java to improve clarity and functionality to enhance code readability and maintainability by using more descript
added elevation handling for the contact item in ContactItemInflater to ensure proper elevation settings for devices running Lollipop and above
rename ` typeInformation ` to ` identifier ` for consistency to improve code readability and maintainability by using a more descriptive variable name
refactor file reading and writing operations to use AccessController for security to enhance security by ensuring file operations are executed within the privileged context
updated GroovyParserVisitor , GroovyPrinter , and G classes to improve the handling of binary operations and add support for access operators to enhance code clarity and
updated warning message to include exception class name to improve clarity of error messages for better debugging
updated character handling and compression checks in RecordInputStream and UnicodeString classes to ensure correct handling of compressed and uncompressed character values
add a test to verify that the file name contain no orway character .
updated AsyncResource to use a custom CancellationException and added methods to check if a request is cancelled to improve error handling and provide more informative
[ hotfix ] [ runtime ] fix npe in timedmemberstatefactory when statistics be null
refactor MongoTemplateTests to improve code readability and add a new test for removing an object from an explicit collection to enhance test coverage and ensure
pdfbox - 4071 : fix typo in copyright header
corrected the newline character in the format string in Coder . java to ensure consistent newline formatting across different operating systems
added a new boolean variable ` mIsClearAllButtonFullyRevealed ` and modified scroll handling logic in ` RecentsView ` and `
replaced direct calls to ` hmsTable . getParameters ( ) ` with a static final ` COMMON _ HMS _ PROPERTIES ` map
added a method to check if an address is already in use and replaced instances of BindException with a new isAddressInUse method to improve address usage
added a command - line argument to the argument list in TestNestmateAttr . java to enable dynamic configuration of the test class path during execution
replaced ` VERBOSE ` with ` verbose _ schema ` in ` Grep . java ` to improve clarity by using a more descriptive variable
add miss @ override annotation and remove unused import
# 239 - add nestedusesavepoint ( ) and setnestedusesavepoint ( ) method to scopetrans
replaced ` int fetchSize ` with ` ThreadLocal < Integer > fetchSize ` in ` QueryProcessExecutor ` and ` MemIntQpExecutor `
[ java ] remove unused idlestrategy in embeddedpingpong .
refactor ` handleBlockingCall ` method to accept a ` Supplier < Object > ` parameter and improve error handling in ` HttpClientIntroductionAdvice
added HDP _ VERSION property handling in SliderAppsViewControllerImpl . java to ensure system properties are set correctly based on the HDP version
refactored the handling of ServiceLoader and added close methods for resources to improve resource management and ensure proper closure of service loader resources
added deep cloning functionality to the ParameterizedRobolectricTestRunner and created a new DeepCloner class to enhance testing capabilities by allowing deep copying of
added a bind method to Boolean . FALSE with JETTY _ SHOW _ STACKTRACE annotated with WebServer . JETTY _ 
added a check to return null if the object is an instance of JSType . OBJECT to handle cases where the object is not an instance of JS
replaced instances of ` sun . jvm . hotspot . types . OopField ` with ` sun . jvm . hotspot . types . BasicOop
updated JsonSerializer and JsonWebKeyEndpoint to support RSAPublicKey and ECPublicKey types to enhance serialization support for both RSAPublicKey and ECPublicKey types
[ gr - 26465 ] fix ` ` useonlywritablebootimageheap ' ' flag for iso image .
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBean management functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies and improve code clarity
added getOwnerAddress method implementations to multiple actuator classes and updated validator methods to return the owner address to enhance functionality by providing access to the
http : / / issues . apache . org / jira / browse / amq - 4892 - add a demo class to demonstrate how to
updated command execution to handle negative values for min and max values in BinaryClient . java to ensure correct handling of inf values in range operations when min
add empty index to edge if node have an empty index .
[ java ] remove duplicate correlationid from asynccommandidset in clienteventsadapter .
added saveConflict method calls in FileDataStorageManager , FileDownloader , and FileUploader classes to handle file conflicts more effectively during file operations
updated generics in multiple classes to use generics for better type safety to enhance code clarity and prevent potential runtime type errors
replaced usage of ` StrUtils . splitFileNames ( ) ` with direct calls to ` splitFileNames ( ) ` in multiple filter and token
added support for oracle and mysql driver properties in DatabaseFactory to enhance database connection configuration for better compatibility with Oracle and MySQL
updated the constructor of the MockMethodInterceptor to include a handler parameter and added a serialVersionUID to the mockedMethods field to ensure proper handling of
updated timestamp logic in FileChangedExclusiveReadLockStrategy to use minimum file trigger time instead of a fixed value to improve clarity and accuracy in tracking file changes
[ hotfix ] [ table - planner - blink ] wrap class loader in environmentinstance
added UI thread handling in TerminalView and updated buffer height calculations in TerminalTextViewOverlay to improve UI responsiveness during buffer updates
reformatted code in ConfigDispatcher . java for consistency and readability to improve code maintainability and ensure proper handling of pids
refactor freeze operation logic to differentiate between allowTvmFreezeV2 and allowTvmFreezeV2 to improve clarity and maintainability of freeze
added support for insecure TLS configuration in TlsConfig and updated TlsUtils to utilize this feature to enhance security by allowing users to configure
refactor code to use a variable for source path and class path in JavadocTool . java and add a new class T7091528
replaced ` toLowerCase ( ) ` with ` equalsIgnoreCase ( ) ` for edge columns and introduced a new ` EdgeColumnsGDF ` class to improve
added cascade option to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the target entity is marked as CascadeType . ALL for
replaced the ` hashCode ( ) ` and ` equals ( ) ` methods with ` Arrays . equals ( data ) ` in the ` Message ` class
updated character encoding from " ? ? " to " \ u017D " in AsyncProvidersBasicTest . java to ensure proper handling of special
[ hotfix ] remove unused method rocksdbserializedcompositekeybuilder # iskeyserializertypevariablesized ( )
added a method to retrieve static permissions from a ProtectionDomain and updated the SubjectDomainCombiner to use it to enhance security checks for the static permissions field
fix a crash when recipe be null in recipehandler ' s recipehandler .
refactor parsing logic in mmm Parser . java and ppp Parser . java to improve readability and maintainability of the parsing logic
added a method to show a connection error dialog in UploadMediaDetailFragment and modified error handling in UploadMediaDetailsContract to improve user experience by providing
added a new test class ` Issue596 ` and modified ` Status ` and ` HttpHandlerImpl ` to handle unsupported media types to ensure proper
change bitwise operation from bitwise & ~ ( 1 < < bitIndex > ) to bitwise & & ~ ( 1L < bitIndex
refactor ImportLayoutStyle class to improve code readability to enhance maintainability and facilitate future updates
refactor ConsoleUIService to support both headless and non - headless environments to improve flexibility in controlling input handling based on headless environment
replaced Mockito mock with TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest . java to improve test readability and maintainability by using a
make analysistype . getenclosingtype ( ) non - final
renamed methods in Pairs and InPairsExpression for consistency to improve clarity and consistency in method naming
[ flink - 20536 ] [ runtime ] remove unnecessary timeout from putall callable
added null check for mqConsumerInner in MQClientInstance . java and a test for consumerRunningInfo in MQClientInstanceTest .
[ java ] do n ' t generate source identity for channel in driverconductor .
added a new file ` TopTabAction . java ` that implements a toolbar action to provide a layout for the top tab in the application
camel - 14297 : dynamicrouter : fix to allow match filter to work in all recipient mode .
updated test class imports and annotations in AggregateItemReaderTests . java to improve test structure and align with JUnit ' s testing framework
added generic type parameter ` < T > ` to the constructor of ` Procedure ` in ` AbstractObjectValueTypeMap . java ` to improve
updated AchievementsActivity , OkHttpJsonApiClient , NetworkingModule , and NetworkingModule to improve the handling of wiki data edits and
added a validation check for the length parameter in OfflineSorter . java to ensure that the length does not exceed Short . MAX _ VALUE to prevent
do n ' t report all bug when constant long . max _ value be less than long . min _ value .
refactor dataset classes to improve code organization to enhance maintainability and readability of the dataset implementations
updated InvalidTopologyTemplateException message to include acceptable values for credential types to improve error reporting for better debugging and tracking of invalid credential types
updated the initialization of ` v [ 0 ] ` and ` v [ 1 ] ` in ` TestVectorUtil . java ` to use random float
change the return type of the ` compareBy ` method from ` int ` to ` long ` and simplify the comparison logic for date comparisons
added SSL handling and getter method in TestUtil . java and updated assertions in PGPropertyTest . java to enhance SSL property management and ensure proper configuration
simonstewart : enable safebrowsing in chrome by default
added null check before cloning flight configuration in BaseMotorMount and RecoveryDevice classes to prevent potential NullPointerExceptions during flight configuration updates
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding behavior based on configuration settings
updated TableDiffer to handle empty top cells and improved comparison logic to enhance robustness and prevent potential NullPointerExceptions when comparing lists with empty lists
added a new constant ` CustomIgnoreTag ` and a condition to remove it from the section if it starts with ` CustomIgnoreTag ` to ensure
camel - 14284 : jdbcaggregationrepository should throw optimisticlockingexception instead of runtimeexception for optimisticlockingexception
fix : add parent config property for @ configurationproperties ( ` ` parent ' ' )
updated PreferencesActivity to extend LimitlessIDEActivity and modified onInsetsUpdated method to improve UI responsiveness and ensure proper padding for toolbar
deleted the ClusterNodeInfo . java file to the functionality was no longer needed in the project
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output statements for standard and legacy cipher suite selection in ServerHandshaker . java to enhance visibility into cipher suite selection during the handshake process
refactor template handling logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve clarity and functionality to handle single and multiple templates
added a ` nodeLabelMap ` to store node labels and implemented duplicate label handling in ` ImportContainerImpl ` and ` ImportContainerParameters ` to
added a new file R2303044ListSelection . java that implements a list selection feature to demonstrate the functionality of selecting an item in
[ java ] do n ' t create a publicationregistration if it already exist .
added null check for mWorkspace in Launcher . java to prevent potential NullPointerException when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure that the compound property is correctly
added a new ` rowCounts ` list and updated the computation of ` newRowCount ` to use it to improve clarity and maintainability of the
added path URL and query parameters handling in SpringBootDocBuildTemplate . java to ensure only relevant API parameters are processed and improve code clarity
minor refactoring to improve code readability
updated the ` createBuildEngineDelegate ` method to return ` CachingBuildEngineDelegate ` instead of ` DistBuildCachingEngineDelegate ` and
updated RuntimeException to provide more informative error messages when parsing JSON to improve error reporting for better debugging
added a conditional check for DEBUG mode before logging the widget tray message to improve performance by avoiding unnecessary log messages when not running in debug mode
refactor Console and Scanner classes to improve code organization and readability
fix similaritybase . getnumterms ( ) for discountoverlapsboost
added method checks for ` send ` method in ` SimpleMailMessage ` , ` MimeMessage ` , and ` SimpleMessageItemWriterTests `
added exit and quit functions with their respective accessors in Global . java and removed the old quit method from ScriptingFunctions . java to streamline
refactor application context usage in LoanBrokerSharkDetectorDemo . java to improve clarity and maintainability of application context management
renamed methods in ` InvocationsAnalyzer ` and ` NumberOfInvocationsVerifier ` to ` findFirstUnverified ` and ` findLastUnverified
vmware : apply relevantcookies instead of setrequestrequestheaders ( ) to get the cookie
corrected spacing in assertion statements in ResinAcegiAuthenticatorTests . java to improve code readability and maintainability
updated ECKey to include a length of 32 bytes for both r and s in ECKey . java to ensure proper data size for key operations
updated the configuration property from " fml . disabledMods " to " fml . modStates " to ensure the application uses the correct configuration for mod
refactor account selection handling into a separate method for better code organization to improve code readability and maintainability by reducing duplication
[ hotfix ] [ table - common ] improve exception message when fail to connect to the client
throw error if unexpected empty simulation result from smart contract call
added a null check for the root file before reading it in TexturePackerFileProcessor . java to handle cases where the settings file is empty and
removed a conditional check for datasource and JNDI in PooledConnection . java to streamline the code by eliminating unnecessary checks
updated TARGET _ MB and WINDOW values from 10 , 000 , and increased WINDOW size from 10 , 000 to 1 ,
added null checks for ` currentConsole ` and ` systemErr ` before writing bytes to prevent potential ` NullPointerException ` when ` currentConsole ` is
added a call to set the credentials refresh delay in KinesisConfigUtil . java to improve the efficiency of credential refresh operations
refactor AlertDialog usage to a new method ` showInfoAlert ` to improve code readability and maintainability by reducing redundancy
modified the ` test ` method to include a ` pack ` parameter and added a conditional check in the ` test ` method to enhance functionality by allowing
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in multiple test files to ensure compatibility with the latest Jetty and
removed specific imports and updated dependency handling logic in PluginBundleManager . java to simplify import statements and improve dependency management logic
added a HashSet to manage ZipFileInputStream instances and ensured proper resource management to improve resource management and prevent memory leaks
renamed ` DATAMATRIX ` to ` DATA _ MATRIX ` and updated references accordingly to improve clarity and consistency in the codebase
added methods to run active and idle based on key ranges in SequenceGeneratorSource . java to improve handling of idle state during source execution
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in BlobServer . java and BlobServerGetTest .
replaced ` findAny ( ) ` with ` findFirst ( ) ` and added a new ` getAnnotations ( Class < T > type ) ` method
added support for ppc64le architecture in Bits . java and ByteArrayAccess . java to ensure compatibility with additional 32 - bit architectures
add a link to github . com / robolectric / robolectric / pull / 4736 for the error message
updated waitWithDeadline parameters from MINUTES and ROLLBACK _ TIMEOUT _ MINUTES to MILLISECONDS in TransactionImpl . java to
refactor dateutiltest to use java . time . instant instead of java . time . zoneoffset
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a toast message to indicate that the YouTube Player does not work on Lollipop yet to notify users that the YouTube player can be updated
added error handling for unterminated dollar quotes , string literals , and block comments in SQL parsing to improve robustness by providing clearer error
added a null and vibrator check to the vibration condition in AnySoftKeyboard . java to ensure that the Vibrator is available
updated table borders and modified background color handling in DotRenderer . java to improve visual appearance and ensure correct arrowhead and arrowtail based on foreign key
added a new method ` isEncodedPar ` to ` HiveConf ` and modified ` SetProcessor ` to handle encoded parameters to improve configuration handling and
pdfbox - 4071 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved certificate handling to enhance security and maintainability of certificate processing logic
fix wavefront uri implementation ( # 3903 )
added image loading functionality to NetworkedCacheableImageView and updated related classes to utilize NetworkedCacheableImageView to improve image loading efficiency and support
removed unnecessary parameters from the ` ofFloat ` method across multiple classes to simplify the method signature for better readability and maintainability
updated controllers version handling in BuildScriptHelper and DependencyBank classes to ensure compatibility with the latest controllers features and improvements
refactor LaunchedURLClassLoader class to improve code organization to enhance maintainability and readability of the code
added imports for ResultSet , ResultSetMetaData , and RowMapper , and updated the query method in DataSourceHealthIndicator . java to ensure proper handling of
add no - cache to layout tag to prevent caching .
added Locale . ENGLISH to warn message formatting in ZkController . java to ensure consistent message formatting across different locales
refactor SolrQueryParser constructor to accept an Analyzer parameter to enhance flexibility by allowing custom analyzer configuration
updated copyright year from " Copywrite " to " Copyright " across multiple classes to ensure compliance with licensing requirements and improve code clarity
removed an unnecessary semicolon in MainTest . java to improve code clarity and maintainability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector instances
updated the method call from templateName to req . getName ( ) in StatementGenerator . java to ensure the correct request name is used for data processing
removed unnecessary type matching logic in AbstractConfig . java to streamline code and improve readability
[ java ] add sessiondecorator . offer ( publication , correlationid , timestampms , messagebuffer ) method .
changed method names from trustAllXForwardedRemoteAddressResolver and maxTrustedIndexXForwardedRemoteAddressResolver to trustAll and maxTrustedIndex
added a new annotation interface ` NoBootstrap ` and modified the ` BootstrapInserter ` class to check for bootstrap annotations before building a static block to
hbase - 25813 tabledescriptorchecker should use tabledescriptorbuilder . getvalue ( ) instead of getmaxfilesize ( )
updated the logic for handling the ` maxCommits ` and ` numCommits ` variables in ` BranchGraphServlet . java ` to ensure accurate
added InvocationTargetException handling to main method and invokeLater methods in bug6794831 . java to improve exception management and ensure proper thread execution
added a new constant ` BUILD _ ID ` and refactored metadata handling in ` CachingBuildEngine ` to improve build metadata management and
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to clean up the code and improve maintainability
removed duplicate call to markAsDone ( future , channel ) in HttpProtocol . java to streamline code by eliminating redundancy
added TezConfiguration import and a static instance of TezConfiguration in TezConfigurationFactory . java to facilitate the creation of TezConfiguration instances
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is null
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added null check before stopping the least recent sound and implemented a forget method in OpenALSound to ensure proper resource management and prevent potential NullPointerExceptions
fix invalidatestate and otheroperation to report discontinuity only once
added decimal formatting for various number tick units in NumberAxis . java to improve precision of number representation in the user interface
replaced ` TargetGraphAndBuildTargets . builder ( ) ` with ` TargetGraphAndBuildTargets . of ( ) ` for building target graphs
removed the ` IndexFileNameFilter ` class and its usage in ` IndexFileDeleter ` to simplify the code by eliminating unnecessary dependency on the `
add a config option to disable the texture stitcher for ladders instead of disable the texture stitching .
added a compression level parameter to the constructors and methods in ApkBuilderStep , SignedJarBuilder , ApkBuilderStep , and SignedJar
added a new test method ` shouldIncludeStaticFields ` to verify the inclusion of static fields in a stub jar to ensure that static fields are correctly
added support for BYTES data type in multiple classes to support byte data handling in the data model
updated string formatting in multiple failure messages to include newlines to improve readability and consistency of error messages
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in Trade and KucoinDealOrder classes to improve
added caching functionality and updated test cases in SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , ForumService ,
mary : fix for german locale in pronunciation model .
refactor form body handling in SimpleHttp and add a new test for null post configuration in TestHttpPlugin to improve code robustness and ensure proper
added OkHttpClient dispatcher configuration and shutdown logic in ClientSideSlb and ClientSideSlbTest to improve resource management and ensure proper shutdown of the
added conditional logic to handle Y - flipped textures in TextureRegion . java to ensure correct positioning of texture based on flipping behavior
throw invalidconfigurationexception instead of hazelcastexception for unknown property .
added a null check for the contextPath variable and set it to " NA " if it is null to ensure that contextPath defaults to " NA
[ jbrules - 2423 ] reinit types in kiecontainer should not be reinited if the resource classloader be null
added validation for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and introduced B _ TREE _ MAP _ ROOT
added support for precompiled headers and updated related methods in C++ source rule factories to ensure compliance with preprocessor and preprocessor configurations and improve error handling
replaced WeakReference < ImageObserver > with AccWeakReference < T > in ImageWatched . java to enhance security by ensuring access control when updating images
modified access modifiers of ` findNextIndex ( ) ` method in ` ObjectMap ` , ` ObjectSet ` , and ` OrderedMap `
changed the isDirect variable from true to false in VertexBufferObject . java to correct the logic for setting isDirect to false
remove duplicate code in maryclient . audioeffecthelptextsmap . get ( effectname )
change return type of localToAscendantCoordinates and localToDescendantCoordinates from void to Vector2 to allow retrieval of local coordinates from other
pdfbox - 5764 : use buffer . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added a null check before removing the close hook to avoid potential NullPointerException when context is null
updated CellLayout and DeviceProfile classes to use folderCellLayoutBorderSpacingPx instead of cellPaddingPx to improve layout handling for folder folders
refactor numeric parsing to use a custom ValueNumeric class to improve code readability and maintainability by encapsulating numeric parsing logic
updated authentication condition to check if the response is not deferred to ensure that authentication is only returned when not deferred
updated argument checks in StartArgs . java to use " -- add - to - start " instead of " -- module - ini = " to
added a default partition value variable and modified the addition of dynamicPartValues to use it to ensure that dynamicPartitionFileRecordWriterContainer correctly handles null
[ hotfix ] [ runtime ] add null check for operatorfactory
updated return statements in DefaultArtifact . java to handle classifier presence to improve clarity and correctness of artifact ID and type representation
camel - 14297 : kafka consumer should subscribe to the same topic multiple time for the same topic . thanks to sergey shelukh
improve error message when noclassdeffounderror be throw in annotationsubstitutionprocessor
updated the configuration key for GMAIL notifications from " GMAIL _ NOTIFICATIONS _ ENABLED " to " ENABLE _ GMAIL _ 
doc : ( chore ) doc : [ cryptokey ] [ doc ] update docstring
updated the expected message count and loop conditions in LumberjackMultiThreadTest . java to use a configurable concurrency level to improve test performance by reducing
fix playerupdatehandler . getplayerdisplayname ( ) to check if the player be not dead .
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
api : updateuser api : allow secretkey to be specify with apikey
replaced switch - case statements with if - else statements in multiple classes to improve code readability and maintainability
refactor AbstractMetaDataExportMojo to improve code organization to enhance maintainability and readability of the code
added handling for SQL integrity constraint violations in Hive to ensure proper error reporting when dropping tables used by materialized views
corrected the casing of " githubAccessToken " to " gitHubAccessToken " to ensure consistency in property naming conventions
added a new file ` RoboExecutorService . java ` that extends ` RoboExecutorService ` to indicate that the ` RoboExecutorService ` should no
added condition to check if the group is a root group before adding subgroups and sorting subgroups to enhance user experience by allowing subgroups to be
updated method and variable names for consistency and clarity to improve code readability and maintainability by using consistent naming conventions
refactor command - line argument handling for dynamic GC threads in TestDynamicNumberOfGCThreads . java to improve readability and maintainability of the process
changed ` ImmutableFlavor ` to ` Flavor ` in ` CxxPlatforms ` and ` KnownBuildRuleTypes ` classes to improve type safety
added create operations handling and improved SQL syntax in CreateTable . java and CreateTableDeParser . java to enhance table creation functionality and maintain consistency in
refactor background drawable assignment in ChatViewerFragment to use a variable for clarity to improve code readability and maintainability by encapsulating background
test : migrate ctiteratortest to junit 5 ( # 4563 )
added clear ( ) method calls in multiple tokenizer classes to ensure proper resource management and avoid potential memory leaks
[ net . pmd . pmd ] do n ' t crash on block statement
refactor StateMachineConfiguration and StateMachineFactoryConfiguration to use generic type parameters instead of extending Enum to improve type safety and provide clearer error handling
simonstewart : do n ' t check for link = in the element finder
fix float - to - string conversion for bigdecimal and float
remove duplicate code in aggregatelifecycle . getcurrentscope ( ) .
updated the method for setting touchable insets to use TOUCHABLE _ INSETS _ REGION instead of TOUCHABLE _ IN
removed a conditional check for the ' ~ ' character in FencedCodeBlockParser . java to streamline code by eliminating unnecessary checks
added socketTimeout property to manage socket read operations to allow users to specify a timeout value for socket read operations
added a sleep delay in ElementAttributeTest . java to handle InterruptedException to improve error handling during thread sleep and propagate exceptions
updated BufferedReader initialization to specify UTF - 8 encoding to ensure proper handling of character encoding in HTTP requests
refactor List class to improve code structure to enhance maintainability and readability of the code
added constructors to AsyncFileImpl for handling URI and file paths and updated error handling in the context to improve error handling and ensure proper context management
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the class is immutable and should not be modified
nimbus vsp : return an empty list instead of null if the vsp device be not configure on the physical network
renamed method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` ConnectivityAction
updated Java version handling in ConstantPoolTagTests to use classFileVersion instead of getJavaVersion ( ) to ensure compatibility with newer Java versions and
fix for error / warning / recompile with - xlint : do n ' t throw exception
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 43939 - add method
replaced Vector with ArrayList and updated related method calls to improve performance and readability by using more appropriate data structures
updated the default grid column from 4.0 f to 3.0 f in AppPreferencesImpl . java to improve the visual appearance of the user interface
added a condition to check if ` forViewCreation ` is false in the Calcite planner to ensure that the query is only executed when
updated date pattern formatting and improved assertion clarity in TestHS2HttpServer . java to enhance readability and maintainability of the test code
added try - catch block around object creation in GraphPrinter . java to handle potential exceptions during object conversion
simonstewart : update the ie driver to the current version and add a test for page access with an insecure ssl certificate
updated byteOffset calculation in ByteBlockPool . java and added a test forTooManyAllocs in TestByteBlockPool . java to ensure accurate byte
changed static variables to instance variables in InteractionValueEncoder . java and updated string formatting in InteractionValueEncoder . java to ensure consistent locale handling
added exception handling for uncaught exceptions in TcpTransport . java to improve error management and ensure proper cleanup of the stoppedLatch
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serialization warnings related to the class
updated ` OcamlDebugLauncher ` to extend ` AbstractBuildRule ` instead of ` AbstractBuildRuleWithResolver ` and removed ` SourcePath
add ` ` discard change ' ' and ` ` return to jabref ' ' to save change .
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator . java and updated error messages in OAuth20AccessTokenEndpointController .
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to initialize the chk ( index , 1 )
added support for input format class in the initTableMapperJob method to enhance flexibility by allowing different input format classes for job creation
removed redundant call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to streamline code by eliminating redundancy
make polygloteval throw an exception if the language be not available .
added deprecation warning and validation for the RESERVE parameter in ReplicationHandler . java to ensure that the master reserve is mutually exclusive to maintain compatibility
renamed cacheVariableName to cacheForeignKey and updated related references in DIHCacheSupport . java to improve clarity and consistency in naming conventions
updated ECKeyPairGenerator to use Object [ ] instead of long [ ] for key bytes to ensure type safety and improve code clarity
[ hotfix ] [ runtime ] suspend job in cancelling state should complete termination future on cancel
replaced singleton instance of RotationTouchHelper with a direct instantiation in RecentsAnimationDeviceState and made the constructor public to improve flexibility and encap
refactor port table and port override filtering to use flatMap for improved readability to enhance code maintainability and reduce boilerplate
updated method signatures and variable types from ` int lwp _ id ` to ` long unique _ thread _ id ` in multiple classes to improve clarity
refactor offer removal logic to check for existing offers before adding new ones to improve code clarity and prevent duplicate offers in the offer book list
refactor tls test to use constant instead of hardcoded value
updated MockitoMethodInvocationControl to handle Class instances and modified MockitoMethodInvocationControl to use System . class instead of String to improve type safety and clarity in mock
replaced instances of NotLoadedException with a new PartialDatabaseObject parameter across multiple classes to improve error handling by providing more context in exception messages
removed import of DisplayUtils and added an extra variable for the file to streamline the code by eliminating unnecessary dependencies
added error handling and file management methods in StoreDirect and StoreWAL classes to improve resource management and provide clearer error messages for file operations
replaced direct calls to ` SystemUiProxy . INSTANCE ` with a task snapshot retrieval in ` AbsSwipeUpHandler . java ` to ensure task snapshot
added a ` hidden ` property and corresponding methods to ` CommandArgumentDefinition ` and ` LiquibaseCommandLine ` to enhance command argument handling by allowing
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct server
[ geos - 8427 ] add geoserver . styledlayerdescriptor to styleinfo interface and use it in geoserver . stylegrouphelper
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by ignoring potentially malicious intents
added ` getId ( ) ` and ` setId ( id ) ` methods to ` TiledMapTile ` , ` AnimatedTiledMapTile
refactor Manager class to improve code organization to enhance maintainability and readability of the code
updated JDBC connection and session configuration to include versioning to ensure compatibility with the latest features and improvements in the database
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo to enhance schema management capabilities in the generate change log generation process
replaced ` putIfAbsent ` with ` put ` in ` registryCache ` to ensure that the cache is updated correctly to avoid overwriting existing entries
make plannerbenchmarkrunner exception log a warning instead of error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to allow subclasses to override the
fix file selector fragment to work with ` ` / ' ' directory
added new test methods for handling large response content in FastCGIProxyServletTest . java to enhance test coverage for HTTP GET requests with different response
added a service start for ReadInteractionsService in MarkReadService . java to enhance user experience by providing quick access to read interactions
added a conditional check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are only logged when lintClassfile is
added logic to set the SMTP port in Email . java to allow configuration of the SMTP port for improved communication
added retry mechanism for SSLFactory renewal in TlsUtils . java to improve reliability and error handling during SSL factory renewal
updated date format from " yyyy - mm - dd ' T ' HH : mm : ss ' Z ' " to " yyyy - mm -
corrected a typo in the assertion message in SpyingOnRealObjectsTest . java to improve clarity of the error message for better debugging
added functionality to handle line endings with br tags in InlineBoxing and LineBox classes to ensure correct rendering of lines endings with br tags
updated filePathString to handle null parent cases to avoid potential NullPointerException when retrieving the parent path
removed unused import of DocCollection from TopicStream . java to clean up the code and improve readability
refactor NinjaServletContextTest to use createHttpServletRequestInputStream and add a new test for handling Windows - 1250 parameters in multipart requests to
updated properties configuration in AbstractCasEndpointTests . java to enhance endpoint management functionality by allowing exclusion of specific endpoints
added a check to ensure the current graph is a dynamic graph before proceeding to prevent runtime errors when attempting to access a non - dynamic graph
add eager init factory to allow scopeone to be lazy initialize
added a suppressExceptions option to JsonPathExpression and related classes to enhance the flexibility of exception handling in JSON path expressions
removed duplicate instantiation of ControllerLeaderLocator in HelixServerStarter . java to streamline the startup process by eliminating redundancy
updated usage messages in CLHSDB and HSDB classes from " java " to " clhsdb " and " hsdb "
refactored the configureChunkProvider method in FaultTolerantStepFactoryBean and removed redundant registration in SimpleStepFactoryBean to improve code
[ beam - 10786 ] remove write . java deprecate in favor of write . java
refactor ` ShadowAccessibilityManagerTest ` to use ` AccessibilityManagerInstance ` instead of ` getAccessibilityManager ( ) ` to improve code clarity
add analytics group display id to the flutter usage statistic
removed the dependency on ` AbstractBuildRuleWithResolver ` from ` AbstractBuildRuleWithResolver ` in multiple classes to simplify the class hierarchy by eliminating
refactor ` enumDataTypeHelper ` initialization into a new class ` PostgreSQLEnumDataTypeHelper ` to improve code organization and encapsulate enum data
updated log path assertion in LogFileTests to use File . separatorChar to ensure compatibility across different operating systems
updated method and variable names from ` getMapLocalWork ` to ` getMapRedLocalWork ` across multiple files to ensure consistency in accessing
added a check for index tables in HiveMetaStoreClient and handled UnsupportedOperationException to ensure proper handling of unsupported operations when dropping index tables
added a check to update disabled flags when visibility is not VISIBLE in RecentsView to ensure proper handling of scrolling behavior in the action view
added a conditional check to set a specific highlighter for non - Windows platforms to ensure proper syntax highlighting for non - Windows environments
add optional local variable support for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id =
use uri . tostring ( ) instead of uri . touri ( ) . touri ( ) . touri ( ) . getRawPath (
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency
changed the value of _ metaDataComplete from true to false to indicate that the metadata is no longer complete
refactor removeTaskTarget method to use THREAD _ POOL _ EXECUTOR instead of returning a boolean to improve thread safety and ensure
added environment variable handling for " RELEASE " in JsBundleGenrule and corresponding tests in JsBundleGenruleDescriptionTest to improve environment
updated type casting logic in mmm Lower . java and added a new class T6500701 . java with a test method in ppp T
added tests for crlf newlines in comments and Javadoc in AddImportTest . java to ensure proper formatting of import statements in javadocs
added a hubMode parameter to AbstractLiquibaseChangeLogMojo and defined it in AbstractLiquibaseMojo to allow configuration of the hub mode
removed redundant null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to streamline code for better readability and
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure linkDb is
refactor the method for setting the indexer thread pool to use a reflection - based approach to improve code readability and maintainability by reducing complexity
removed the " : 5000 " suffix from the SMS address to simplify the address construction for better readability
added serialization logic to ` MapJobExecutionDao ` and introduced a ` copy ` method for job executions to improve the handling of job executions by
added a new file ` DownloadTest . java ` to implement a test for downloading Pixmaps to ensure that the application can download images
updated language handling in Format and DefaultTrackSelector classes to ensure consistent language normalization to improve code clarity and maintainability
updated UDF arguments in GenericUDFRound . java to include a new argument type exception for primitive types to improve error handling and provide clearer
added null check for selectedVersion before processing the dependency tag to avoid potential NullPointerExceptions during dependency management
added multiple AntPathRequestMatcher matchers to SecurityConfig . java to support additional security URLs in the application
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests during development
fix : do n ' t create bean definition if it ' s the same as the super class .
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
changed ` SUPPORTED _ THING _ TYPES ` to ` SUPPORTED _ THING _ TYPES ` and ` scheduleWithFixedDelay `
remove unnecessary check for socketstatus . open , socketstatus . stop and socketstatus . timeout
deleted the SunToolkitSubclass . java file to the class was deemed unnecessary for the current implementation
refactored translation handling in DefaultRenderableSorter and added a new method in Matrix4 to improve code clarity and maintainability by centralizing translation logic
added a new test method to register a wrapper handler before a primitive in TypeHandlerRegistryTest . java to address issue # 165 related to type
pdfbox - 4071 : fix for pdfbox - 4071 , a suggest by valerybokov
updated API URL references to use BuildConfig for consistency to improve maintainability and reduce hardcoding of URLs across the codebase
camel - 14297 : camel - health - add a fake health check for camel - http - main
added null check for blockpos in thornhornchakram . close # 1343
added a test method for altering tables with indexes extending primary keys in AlterTableWithViewsIT . java to ensure proper functionality of index creation in
updated the offset initialization in FileFloatSource . java and added conditional assertions in TestFunctionQuery . java to improve code clarity and ensure randomness in
removed DrillMongoConstants . ID from the fields in MongoRecordReader to ensure that the ID field is not processed in the database
added dispose method implementations in YeelightHandlerBase and DeviceBase , and modified connection handling in WifiConnection to ensure proper resource management and
added handling for the " AUTO _ INCREMENT " column in Parser . java and created a test table in TestCompatibility . java to ensure
fix ( kubernetes - client ) : add support for custom resource resync period .
server : do n ' t save template detail for private template when user vm be delete
replaced ` imageSizeFromStream ` with ` RobolectricBufferedImage ` and updated initialization logic to improve image handling and enhance code clarity
removed deprecated constants and added new ones in LauncherSettings . java to clean up code and encourage the use of updated alternatives
[ jbrules - 351 ] move data file to examples / org / drools / examples / broker
added a new variable ` legendTop ` and updated calculations for ` mOffsetTop ` and ` mOffsetBottom ` to improve legend positioning by
added a check to return early if the world transform is zero in BaseShader . java to optimize rendering by avoiding unnecessary processing when the world transform is
add a script to create a file that can be use to create a mary file .
nifi - 10205 : add the source host attribute to the flowfile in listenhttpservlet .
refactor compaction logger and log file closing logic in LevelCompactionTsFileManagement . java to ensure proper resource management and prevent potential memory leak
updated attribute references from " xlink : href " to " href " in ComponentDescription . java to ensure proper URL handling by using the correct attribute
camel - 15836 - camel - aws2 - s3 : make timeout checker configurable in camel - aws2 - s3
hbase - 25836 log regionserver state when cluster shut down and regionserver be close
updated logging logic in Slf4jSpanLogger and DefaultTracer to check for null span before logging to enhance robustness by preventing potential NullPointerException
trim whitespace from the active option string before adding it to the configuration to ensure that options are not added with leading or trailing spaces
added depth effect preference handling in DepthController to control wallpaper zoom behavior based on user preferences
added an assertion to verify the success count of the overseer ' s OverseerAction to ensure that the overseer ' s statistics are accurately
removed the method ` getKernelVersion ( ) ` and simplified the return logic in ` LinuxFileStore . java ` to streamline the kernel version
refactor ExecConstants class to improve code organization to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for testing purposes
added a method to set scan attributes for paging in TableSnapshotResultIterator and invoked it in ScanUtil to enhance scan handling capabilities for better data retrieval
added a condition to check if lowRange is less than 100000000000L in Request . java and RequestV2 . java to ensure that lowRange
changed access modifier of ` keySizeEstimator ` and ` valueSizeEstimator ` from private to protected in ` AbstractCachedSource ` and updated cache size
cloudstack - 10715 : fix zoneid for host response in listhosts api
updated Content - Type header to use MediaType . APPLICATION _ JSON _ UTF8 _ VALUE instead of a hardcoded value to ensure proper handling of
updated filesystem removal logic in ZipFileSystemProvider . java to improve clarity and maintainability of filesystem management
replaced ` Object obj ` with ` String json ` in ` HttpRequestBuilder . java ` to improve clarity and consistency in JSON handling
increased the polling threshold for hard commits in SoftAutoCommitTest . java to improve the reliability of hard commit operations
added error handling and logging for listener invocation in SelenideLogger . java and updated test cases in SelenideLoggerTest . java to improve
refactor multiple classes related to dial functionality to improve code organization and maintainability
updated error logging format in SyncQueue . java to improve readability and consistency of error messages
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to incorporate the latest features and improvements in the container
updated ` BootClassLoaderHook ` to return ` getAdditionalBootstrapPaths ( ) ` instead of ` getBootstrapPaths ( ) ` and added a new
fix bug where legacyxmllayout . jar do n ' t exist
[ hotfix ] [ yarn ] remove unused yarnclient parameter in yarnitcase
fix npe in localmapstatsprovider when there be no data in the distributed object name
deleted the AllTests . java file to remove unused test suite functionality
added Unicode characters for non - breaking hyphens and zero - width spaces in AbstractWordConverter . java to enhance the handling of Unicode characters in the
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations do not star
updated ` createRowKeyForMappedProperties ` to use ` getResultMappingsForRowKey ` instead of direct access to result mappings to improve clarity and
added a new boolean variable ` eventHandled ` initialized to true in ` UIText . java ` to track the event handling state for better event
deleted the Controller annotation and renamed Weldby class to WeldModule to improve clarity and consistency in naming conventions
ruby : do n ' t monitor capture group in regex if the flavor be not ruby .
removed the retrieval of the Liquibase license key from AbstractLiquibaseMojo . java to streamline code by eliminating unnecessary property retrieval
refactor : add method setmeasureshierarchymemberreader to improve code readability
add - g option to generate debug info
mondrian : fix typo in mondrianproperties javadoc
added support for friend paths in Kotlin compiler and library configurations to enhance Kotlin integration by allowing customizable friend paths
added aliases for BATAK , BRAHMI , and MAND in Character . java and modified main method in CheckScript . java to
updated equality check from ` = = ` to ` . equals ` in ` ExecutionCommand ` and added ` stringToExecutionCommand ` method in `
refactor Mockito class for improved readability to enhance maintainability and ease of understanding for future developers
refactor OCFile class to improve code organization to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object
added handling for percentage and percentage types in the cmyk ( ) function to improve error handling and provide clearer feedback for invalid parameters
added tests for local index reverse scan functionality in LocalIndexIT . java to ensure correct behavior of local index operations during reverse scans
updated imports and assertions in BaseAndroidTestCase . java and modified test assertions in BackupHelperTest . java and LanguageHelperTest . java to improve
updated messages in multiple activities to use string resources instead of hardcoded strings to improve user experience by providing clearer and more descriptive messages
refactor loop conditions in RendererUtilities and add a new test case in RendererUtilitiesTests to improve readability and maintainability of the code
updated KrakenStreamingAdapters to use ArrayNode for retrieving ask and bid data instead of Iterator to improve type safety and ensure accurate size calculations for
added error handling for column addition in FileContentProvider to improve robustness by catching potential SQLiteException during database upgrade
removed System . err . println ( line ) from AsyncServletIOTest . java to clean up unnecessary console output during tests
added hash table load factor and updated data size calculations in ConvertJoinMapJoin . java to improve data size estimation for better performance
updated the ` buildView ` method to accept a ` Context ` parameter and added background resource configurations for selectable items to enhance UI consistency and
added a ` Consumer < Authentication > ` to the ` SecurityMockMvcResultMatchers ` class and corresponding tests in ` SecurityMockMvcResultMatcher
vpc : set vpcid to null to avoid npe
[ beam - 10955 ] disable flinksavepointtest on version 1.11
updated access modifiers from ` @ @ ` to ` @ ` in multiple classes to improve code readability and maintain consistency in naming conventions
updated loop conditions in Actor . java to ensure action processing only occurs when the index is within bounds to prevent potential index out - of - bounds errors
updated the BitmexStreamingExchange class to extend the BitmexExchange instead of BaseExchange to align with the new Bitmex API and
add integration test for virtual relationship metadata in relationshiprestrepositoryit
added null check for spatial before processing in LodControl . java to avoid potential NullPointerException when spatial is null
updated ConditionalTokenFilter to set lastTokenFiltered to true and added new filter classes to enhance token filtering logic and improve test coverage
fix unsafestorenode . setstateafter ( ) to be consistent with graph . unique ( ) .
updated the method call from ` super . putAddress ( base + offset , value ) ` to ` io . putAddress ( base + offset ,
added an assertion to verify that casEventRepository . load ( ) . findAny ( ) returns an empty list to ensure that the event repository is
removed the ` attributeTemplateName ` and ` attributeLine ` parameters from ` AuthenticationAttrProcessor . java ` to streamline the code by eliminating unnecessary
added null key validation in MacOSXPreferences . java and created a new RemoveNullKeyCheck . java file to ensure that null keys are not
added a method to set the Typeface in CodenameOneTextPaint that throws a RuntimeException to ensure that the setTypeface method does not throw
added ` open ` method implementations in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS
[ java ] remove deprecate fail ( string message ) method from webdriverrunner
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to simplify the handling of constructor mappings by removing the ResultObject class to improve code readability and maintainability by reducing redundancy
updated SQL string format in CreateTableGeneratorTest to include quotes around the table name to ensure consistency in SQL syntax for better readability
modified the filtering logic in VectorizationContext . java to handle boolean values correctly to ensure proper handling of filter expressions in filtering mode
added generic type parameter ` MoveSelectorConfig ` to ` inheritConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to improve type safety
replaced the instantiation of ` ReorganizeTableStatement ` with a direct call to ` modifyDataTypeStatement ` to streamline the code by eliminating unnecessary
replaced string literals for cluster _ name with constants from IoTDBStartCheck and ConfigNode to improve code readability and maintainability by central
updated exception handling and logging in PeerGroup . java and ClientConnectionManager . java to improve error handling and provide more informative logging for peer connection
added support for multiple style strings in Nano . java to enhance styling flexibility based on user - defined styles
update schematic fixer to use datafixer . frombinarytag instead of fixer . fixup
updated the return message in NoToStringOnStringType . java from " Use ` String ` to " No # toString ( ) on String " to
updated the JVM memory parameters from 64m to 32m in TestThreadFailure . java to improve performance by reducing memory usage for better performance
updated the retry logic to return a FailureContext instead of a int and added a new DataProviderRetryAnalyzer and DataProviderRetryTest classes to improve
updated return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure correct retrieval of the bandwidth
simonstewart : add support for selectpopup , deselectpopup , and capturenetworktraffic in webdriverbackedselenium
refactor doPrintEntry method to remove unnecessary boolean parameter and simplify method signature to improve code readability and maintainability by reducing complexity
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added checks for dialog opacity , shape , and background color in Dialog and Frame classes to ensure proper component state management and prevent illegal state exceptions
changed the state variable from non - final to final in DefaultProjectFilesystem . java to ensure immutability of the state variable
refactor RedisObjectFactory to improve sentinel configuration handling to enhance code clarity and ensure proper configuration for Redis connections
chatroom : add delay message to jabber chat room when receive a message .
replaced instances of ` Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify the notification process
refactored share creation logic to use OperationsService instead of CreateShareOperation to improve code organization and maintainability by consolidating related operations
[ hotfix ] [ core ] remove redundant condition in fieldpropertyinject .
replaced calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` for better readability to improve code clarity and maintainability by
added null pointer exception handling in SmackIntegrationTestFramework to ensure proper handling of NullPointerExceptions during integration tests
tmi - 16 : do n ' t try to read exif sub directory if interop sub directory
added support for ENABLED _ LS mode in VersionTargetGraphMode and modified executor assignment logic in VersionedTargetGraphCache to improve flexibility in
added a check for video format in DLNAResource . java to ensure proper handling of video formats in the parser
refactor AutoMlClient to improve code organization to enhance maintainability and readability of the codebase
added a static load method to LwjglNativesLoader and modified LwjglNativesLoader to dynamically load the PersistenceService to
updated CSVRequestHandler to utilize a new escape strategy and improved encapsulator handling to enhance flexibility in character escaping and ensure proper error handling
updated authorization grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure only valid GrantType types are accepted to
updated exception messages to include the current context and enhanced self - suppression handling in Throwable and SuppressedExceptions classes to improve error reporting and
added a new SQL query in DerivedTableIT . java and modified the iterator parameter in ClientAggregatePlan . java to use null instead of limit
added functionality to retrieve the RSquare value from the regression object to ensure accurate evaluation of the RSquare value in the regression evaluation
added request header handling in ThreadContextMDCServletFilter . java to ensure proper context attributes are added based on request headers
replaced direct casting of ` work ` with a variable ` mapWork ` in SparkPlanGenerator . java to improve code readability and maintainability
refactor folder image retrieval logic in PdfJndiReport and PdfSessionInformationsReport classes to use a map for unique country images to improve
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added new test cases in JwtIssuerAuthenticationManagerResolverTests to improve caching performance
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for database
[ gr - 26458 ] fix interop type cache for function with method .
updated sleep duration from milliseconds to milliseconds in AbstractBasicMockingIntegrationTest . java to ensure proper timing during test execution
added a new file ` KernCrash . java ` that implements a GUI that displays a kerning crash with different font attributes to provide a
added a failure ( ) method call to LinkedHashTreeMapTest . java to ensure that the test fails gracefully without causing a failure
added a method ` getInterfaceAddresses ( boolean addPrefix ) ` to retrieve network interface IPs to enhance network address retrieval functionality and improve error handling
fix : cancel housekeeper task when shutdown .
updated the method call from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to ensure
refactor assertions in mmm Assert . java and ppp Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to verify the functionality of ` createTreeMap ` and ` getTreeMap ` methods to
updated the ` doInBackground ` and ` doPostExecute ` methods to accept ` ArrayList < String > ` instead of ` Set < CategoryItem
added validation for today ' s leap year to ensure that the person ' s x year 1 day is over the maximum age to ensure that the test
added GrblLookups for alarm and error codes and modified response handling in GrblController . java to improve error handling and provide more informative
updated the workspace scroll format to return the home button label when no screens are available to improve user experience by providing a clearer feedback when no screens
removed the ' count ' parameter from the getTrades method across multiple classes to simplify the method signature by eliminating unnecessary parameters
updated string handling in ConsoleReader and adjusted index bounds in MemoryHistory to improve code readability and ensure correct indexing logic
removed the " . jdk " suffix from the file path in JavaBuild . java to simplify the path construction for the PlugIns folder
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple classes to improve code readability
updated JFCModel constructors to accept a Consumer < String > logger parameter to enhance logging capabilities and improve error handling
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is non - negative to prevent illegal argument exceptions
added methods to create views and drop views in TestUtil . java and implemented a test for view privileges in DatabaseMetaDataTest . java to enhance
added platform - specific checks for stable floats and double tests in NaNTest . java to ensure tests are skipped only for stable floats and double
added a new ` DesktopTaskbarUIController ` class and modified ` TaskbarManager ` to check system features to enhance taskbar UI functionality for
added task count listener functionality and improved button state management in ModItemAdapter to enhance user experience by tracking task progress and ensure proper button state management
refactor file handling logic in Files . java to improve code readability and maintainability
updated method signatures and variable types in AnnotationGrpcServiceDiscoverer , GrpcServerFactory , and GrpcServerAutoConfiguration to improve code clarity
refactored the DomainAwareServicesManager interface and its implementation in ChainingServicesManager and removed the @ FunctionalInterface annotation from ChainingServices
add debug log to resourcepackloader to debug mod file generation
chore : update gapic - generator - java version to 2.1 . 0 ( # 51 )
added grow ( ) and growx ( ) , growx ( ) , and growy ( ) methods to the Cell class to enhance functionality for
refactor DefaultInputHandler to use generics for bindings and simplify keystroke handling to improve code readability and maintainability by reducing complexity in binding
fix for http : / / issues . apache . org / activemq / browse / amq - 2476 - add try - catch block
replaced long [ ] [ ] with byte [ ] [ ] in MetricsMemoryTester . java and added memory failure count check in TestDockerMemoryMetrics
deleted the JobParametersPrototype . java file to the functionality was no longer needed in the project
added support for security configuration in the MappingsTable class to enable or disable data connection mapping functionality based on security settings
updated the metadata type from APPLE _ SWIFT _ OBJC _ CXHEADERS to APPLE _ SWIFT _ 
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable dumping to a file for
do n ' t try to emulate eos decoder for amazon , android , and fts
[ java ] : do n ' t increment publisherlimit when there be no spy position .
added a check for ` options . getOutputOptions ( ) . isNoInfo ( ) ` in the ` BaseFormatter ` class to ensure that `
fix http : / / code . google . com / p / mybatis / issues / detail ? id = 443 ? ssl = false
updated DOMConverter to use DOMOutputOptions for error output to improve error handling by allowing custom error output options for latex elements
refactor assertions in mmm Assert . java and ppp Assert . java to improve code readability and maintainability
updated the ` Publish ` and ` Event ` classes to include a ` retained ` parameter and modified related method calls to enhance event handling by associating
added ` testCaseName ` to ` EventSerializationTest . java ` and removed ` @ JsonIgnore ` annotation from ` TestResultSummary . java ` to
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - b
updated import statement from ` fastparse . core . Parsed ` to ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java `
refactor AbstractSessionContext to use read - write locks and improve session timeout handling to enhance thread safety and maintainability of session context management
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` and refactored ` Watcher ` constructor to
[ calcite - 2486 ] sqlnodeconvertcontext should use ansi instead of calcitesqldialect
change the logging level from debug to trace in FirmwareUpdateService . java to improve logging granularity for better troubleshooting
added unit tests for handling null dates and timestamps in GetObjectTest . java to ensure proper handling of null values in SQL queries
refactor string formatting in StringSubject , Subject , and tests to improve readability and maintainability of the code
added unit tests for repository permissions in UserModelTest . java to ensure correct permission handling for multiple teams in the user model
added a new file Test7088020 . java that implements method handles with varying stack frames to facilitate testing of method type mismatches and ensure
refactor audience restriction validation to use a set to improve code readability and maintainability
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener classes to improve code organization and ensure consistent cache updates
replaced direct calls to ` _ stderr ` with null checks for ` _ stderr ` and ` System . err ` to handle cases where ` _ stderr
added a new warning ` SEPARATION _ ORDER ` constant in ` Warning . java ` and modified ` BasicEventSimulationEngine . java ` to
updated the optimization parameter from offlineTableConfig to realTimeTableConfig to improve query performance by using real - time data instead of offline data
updated the aggregation table SQL query to include split points and modified the handling of HBase normalization settings to enhance performance by allowing dynamic configuration of split points
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added BluetoothClass support to ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of Bluetooth class functionality in ShadowBluetooth
updated method names from ` contains ` to ` containsProfile ` in multiple classes to improve clarity and consistency in method naming conventions
improve error message for sum ( [ ] ) function
replaced ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with ` graph . readUnlockAll ( ) ` to simplify code
updated coreNodeName construction to use getCoreName ( ) instead of coreName to ensure the correct core name is used for node properties
added updatebackpressure to chatactivity so that it do n ' t refresh the contact list .
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for tag parsing functionality
added a suppression annotation for SimpleText codec in BaseVectorSimilarityQueryTestCase to suppress tests that are not compatible with SimpleText codec
modified type checking logic in mmm Types . java and added a new class T7005671 . java with multiple array tests in T7005671
updated triangle calculations in DelaunayTriangulator . java and replaced EarClippingTriangulatorTest with Delauna
added @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern for improved readability and maintainability to enhance code readability and reduce boilerplate
refactor state manipulation logic in StackOverflowCheckImpl . java to improve clarity and maintainability of state management
added shadow methods for SQLiteDatabase , ContentValues , and ShadowContentValues in Robolectric to enhance shadowing capabilities for SQLite and SQLite databases in
lwjgl2 : make lwjglgraphics . initgl ( ) a little easy to use .
replaced the ` int ` bytesPerDim with a ` ArrayUtil . ByteArrayComparator ` for comparison to improve code clarity and maintainability by using a
updated language , region , and variant variables to include a script property and adjusted default locale initialization logic to enhance locale management by allowing dynamic property retrieval based
updated the method to return the last set text alpha instead of the current text alpha to ensure the correct alpha value is returned for the last set text
corrected a typo in the warning message from " Confimap " to " ConfigMap " in ConfigurationChangeDetector . java to improve clarity
replaced specific test class imports with a call to UaaJunitSuiteRunner . allSuiteClasses ( ) in DefaultConfigurationTestSuite . java to
trimmed whitespace from token values in GzipFilter and updated initialization parameters in GzipFilterDefaultTest to ensure consistent handling of input without leading or trailing
updated the output type assignment in Response . java to ensure consistency in output type assignment
updated the default regexp implementation from JDK to JONI to ensure compatibility with the latest regexp implementation
replaced ` Handler ` with ` Executor ` and updated task handling in ` ViewCapture . java ` to improve asynchronous processing and enhance message capture functionality
fix for ticket : 1 : http : / / style should not be return for unknown voice .
added folder creation checks in GitBlit . java to ensure the parent directory exists and exists before proceeding to prevent runtime errors
updated the fallback IP from 0.0 . 0.0 . 0 to 127.0 . 0.1 in the Args class to ensure the application uses a valid IP address
( chore ) camel - jbpm : fix checkstyle violation
pdfbox - 4071 : remove unused import , a suggest by valerybokov
updated AllAppsGridAdapter and AlphabeticalAppsList to change the class name from WorkModeToggleContainer to WorkFooterContainer to improve
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor : use typeparameter . getsuperclass ( ) instead of getreference ( ) . getdefaultboundingtype ( ) . ( #
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder , JpaPersistentPropertyImpl , StringQuery , and StringQuery classes to improve consistency in error messages
replaced long eviction counter with AtomicLong and updated related methods in ConcurrentLRUCache and FastLRUCache classes to improve thread safety and tracking of eviction
refactor DefaultTaskExecutor to use runAndWaitInJavaFXThread instead of runInJavaThread in SourceTab . java to improve thread handling and
do n ' t use inetaddress . getlocalhost ( ) if the destination be Inet4address
[ opensolaris ] set dataroot , sourceroot , and sourceroot in mainframe to avoid npe .
added constructors to MarkedClientBootstrapConfiguration and MarkedServerEnabled ( String mode ) to MarkedClientBootstrapConfiguration and MarkedServerBootstrap
[ hotfix ] [ table - common ] fix typo in tableenvironment
removed the setStatementTimeout method and updated statement timeout settings in MapperBuilderAssistant and MappedStatement classes to streamline timeout handling and improve code clarity
[ jsweet 2 catch - up ] fix typo in typescript transpiler
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration . java to enable serialization of geo - related classes
updated preconditions in ArtifactFilesystem to ensure destination is not a Source Artifact and modified test assertions to reflect this change to ensure proper handling of build artifacts
fix for tika - 118 : do n ' t throw exception if document be not a hssf
ggb - 311 : avoid concurrent modification in updatescript ( )
fix a race condition in tcpnioconnection . writetopipe ( ) when there be no data available .
added error messages for value comparison in GuavaOptionalSubject and corresponding unit tests in GuavaOptionalSubjectTest to improve clarity of assertion failure messages for
updated return statement in BackgroundAppState . java and modified visibility logic in ShelfScrimView . java to ensure proper handling of vertical swipe indicators
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions when nav is null
mow - 390 remove redundant mow _ pin _ image check in drawimage .
[ hotfix ] [ runtime ] fix typo in erroroccurredinonexceptionroute
[ astro ] use schedulewithfixeddelay ( ) instead of schedulerandomly ( ) in astrodiscoveryservice
removed conditional checks for ` irrUnit ` and ` pemUnit ` in ` SinglePassAndImageBasedLightingLogic . java ` to simplify
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to mark tests as ignored due to
updated import statements in GuiceFactoryTest . java to include specific Guice classes to improve code clarity and maintainability by explicitly defining dependencies
added a system feature list to the RobolectricPackageManager and corresponding tests to enable tracking of supported system features in the PackageManager
refactor path handling in RCAFrameworkLoader and add a new test class for path augmentation to improve code clarity and ensure correct functionality of path
removed logging statement for the start cancellation watch dog to clean up unnecessary log output during task cancellation
added a null and empty check for enumerationValues in RADProperty . java to ensure enumerationValues is set to null when no values are provided
updated variable names and logic in BoxBuilder , InlineBoxing , and InlineBoxing classes to improve clarity and functionality to enhance code readability and
added asynchronous data collection and a method to retrieve the public IP from a remote IP to improve performance by deferring data collection until the remote IP is
removed conditional logic for altering the UPGRADE _ ITEM _ ITEM _ TABLE column type in UpgradeCatalog260 . java to
updated error messages for directory creation failures in BaseTableDataManager . java to provide clearer guidance on available space and write permissions for the directory
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future updates
added a method to append the selector ID to the key in Matcher . java to improve the clarity of selector identification in the output
updated logging statements and formatting in GouraudShadingContext . java to improve code readability and maintain consistency
updated taskbar animation constants and enhanced taskbar visibility handling in multiple classes to enhance user experience by providing visual feedback during taskbar interactions
removed redundant lines in KeyExchange . java to improve code readability and maintainability
added a check for JdbcConnection before attempting to cast the connection to avoid potential ClassCastException when interacting with different database connections
updated file index handling and assertion logic in ServerMainTest . java to ensure correct file existence checks based on the specified prefix
added methods to retrieve the media recording MIME type in CodenameOneImplementation , MediaManager , Display , and ImageIO classes to provide a consistent way to
make shaderhelper . useshaders public so that it can be call from other package .
[ flink - 23578 ] [ druid ] [ test ] update bindablefilter to work with druid 1.1 . 0
removed unnecessary whitespace in ZkStateReader instantiation to improve code readability and maintainability
alexeibarantsev : do n ' t use sax / sax / features / disallow - general - entities for xmp meta parsing
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package to
updated the condition to check for the presence of a " < script > " tag in the result string to improve code readability and maintainability
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and modified the handling of varargs access
refactor border property checks into a separate method for clarity to improve code readability and maintainability by reducing duplication
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during debugging
updated the ` register ` method to include ` HubRegisterResponse ` and modified its return type in ` InternalDropAllCommandStep ` and ` Hub
updated byte handling in multiple classes to use Byte . toUnsignedInt ( b [ 0xff ] ) instead of Byte . toHexString ( b [ 0
removed unnecessary parentheses in string concatenation to improve code readability and maintainability
changed the default value of DepFiles from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to align caching behavior with the
changed the value of ` rangePannable ` from true to false to disable the range feature for better user experience
update main active state logic in AllAppsContainerView . java to ensure proper handling of the work mode switch based on the current active page
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` from package - private to private to enhance encaps
added handling for CancellationException in FunctionTest . java to ensure proper handling of cancellation exceptions during execution
changed access modifiers of constructors in JarFileResource and JarResource classes from package - private to protected to enhance encapsulation and restrict access to
refactor DefaultTrackSelector class to improve track selection logic to enhance performance and maintainability of track selection functionality
added a loop to wait for unseq merging to complete before proceeding to improve stability during unseq merging operations
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the test accurately verifies the correct
updated database table references in Post . java and refactored test assertions in HibernateDTOProjectionTest . java and JPADTOProjectionTest .
refactor Unicode class to improve code readability to enhance maintainability and facilitate future feature additions
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added a new ` updateHiveLLAPSettingsIfRequired `
[ java ] fix checkstyle violation in sendheadersfirstpublisher
use @ jsonpojobuilder instead of @ jsondeserialize with @ jsonpojobuilder ( with prefix = ` ` ' ' )
added support for BIG _ DECIMAL type in RangePredicateEvaluatorFactory to improve error handling for unsupported value types in range evaluation
refactor variable names from ' inner ' to ' javacRoundEnvironment ' in TreeBackedProcessorWrapper . java to improve code readability and
removed annotation print statements from ParameterInfo . java to clean up the code and improve readability
added a new user preference for AC3 streaming and modified playback logic in PlaybackController . java and VideoManager . java to enhance video seeking functionality
added a new HashMap to return a new HttpResponse with a content setting to ensure that the response contains a null value for better data handling
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to address deprecation issues related
added a test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to verify the functionality of SQL queries in the
refactor RTimerTree class for improved performance to enhance performance and maintainability of the timer functionality
updated package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . rules . graphbuilder `
fix ( jme3 ) : add testcase for issue # 358
added a client thread pool and updated the scheduler initialization in ClientConnector . java to improve thread naming for better debugging and tracking of client connections
refactor ViewResultsFullVisualizer to use Box instead of protected JScrollPane and resultPane for improved layout management to enhance code readability and maintainability by
added multiple phone number field descriptions and a user ' s phone number to ScimUserEndpointDocs . java to enhance user information by providing clear
added private constructors to several classes to enforce singleton pattern to prevent instantiation of these classes
added null check for responseMap and improved error logging in JsonHttpPropertyRequest and URLStreamProvider to enhance error handling and provide clearer logging for
refactor SolrRequestHandler class to improve code organization to enhance maintainability and readability of the code
added a condition to check if ` DEFAULT _ PARALLEL ` is not equal to ` DEFAULT _ PARALLEL ` to ensure that
fix checkstyle issue in java / util / logging / testvmwaremo / testvmwaremo / testvmwaremo . java
added a check for SCARD _ E _ NO _ SMARTCARD in the error handling logic to ensure proper handling of card removal and smart card
added @ SuppressSysoutChecks annotation to Test2BTerms . java to suppress sysout warnings during test execution
camel - 14263 : camel - bindy - add support for multiple key - value pair with multiple key - value pairs to the bindy
changed default value of useOwner , useOwner , and useTimeStamp from Boolean . TRUE to Boolean . FALSE in JabRefPreferences . java to
updated method signatures in Utils . java to use ThrowingRunnable instead of Runnable to improve type safety and ensure proper throwable handling
crawluri : fix npe in hash ( ) method
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws sdb component
updated version number from " 4.2 . 1 " to " 4.2 " and refactored type casting methods in LiquibaseXMLTransformer to improve
change default for proxy . cert . validity from 7 to 90 .
added smoothDelta and lastDeltaUpdate variables to ThreadHandler . java and updated related calculations to improve the accuracy of time measurements by incorpor
added pagination support in HttpBatchReader and HttpScanBatchCreator , and implemented new test cases for JSON pagination in TestPagination to enhance functionality and ensure
added null check for the CompactionInfo client in Worker . java and implemented a test for marking a compaction request in TestWorker . java to
updated the onSaveInstanceState method in ShadowFragmentActivity and added a corresponding test in FragmentActivityTest to ensure proper handling of fragment state changes during instance
reformatted code for consistency in BatchResourceFactoryBean . java to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the resource loader correctly parses color references for Android colors
added error handling for NoResultException in AbstractJPAQuery and created a new test for uniqueResult in AbstractStandardTest to improve robustness by
fix a bug in the collection . getallparents ( ) method that cause a nullpointerexception .
updated the method to retrieve the wallpaper depth effect from LawnchairApp to LawnchairApp to ensure compatibility with the LawnchairApp
removed an unused import statement for ProcessTools in LocalManagementTest . java to clean up the code and improve readability
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method to simplify the method signature by removing unnecessary parameters
[ java ] fix npe in extensionstack . tostring ( ) .
[ hotfix ] [ flatmap ] fix error handling in flatmap . flatmap
updated MultiGetRequest , ControllerStarter , and ServerTableSizeReader to use connection timeout configurations and improved error handling to enhance connection management and
removed unnecessary whitespace in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to test model functionality instead of
replaced multiple instances of ` SystemResourcesEdgeEventFetcher ` with ` TenantResourcesEdgeEventFetcher ` in ` EdgeSyncCursor . java ` and modified
added a new test to verify output hash calculation when cache is not writable to ensure that output hash is calculated correctly when cache is not writable
camel - 14284 : camel - netty - allow to turn off bytebuf by default for camel - netty
updated the partition alteration method to use the qualified name of the table instead of the old name to ensure the correct table name is used for alter
updated IllegalArgumentException message to provide clearer context about the requirement for creating a Vertx instance with the preferNativeTransport option to enable domain socket creation
move enumtypehandlerserializertest to typehandling . coretypes and add colortypehandlertest
[ hotfix ] [ streamex ] fix typo in streamex javadoc
removed query and lock timeout hints from the query in SessionImpl . java to streamline the query and lock timeout handling for improved performance
added a new file ` StaticLoggerBinder . java ` implementing ` LoggerFactoryBinder ` to implement a static logger binding mechanism to provide a centralized way
[ flink - 18346 ] [ table - planner - blink ] remove unnecessary clone of family in familymap
added orientation checks for window configurations in TaskbarManager . java to ensure proper handling of orientation changes in the UI
unescapes xml in jabber occupant ' s nickname , so that they do n ' t contain special character .
added unit tests for the ` longStackPut ` method in ` StoreDirect . java ` and ` Issue265Test . java ` to ensure
added @ SuppressWarnings ( " mutable " , " Comparison " , " ImmutableEnumChecker " ) annotations across multiple classes to suppress warnings related to
[ jbrules - 2458 ] add executionflowcontroltest . Holder class with getter / setter for val / outcome
reformatted code for consistency and improved readability in DLNAMediaInfo , DLNAResource , and FFMpegVideo classes
updated NBWriteServlet and TestWriteListener constructors to accept an unlimited flag and modified related logic to enhance flexibility in handling write limits and improve
fix incorrect totaldifficulty when import the genesis light
simplified the logic for determining actions in DefaultPlaybackController . java to improve code readability and maintainability
make verificationcachecleaner thread - safe
added uniform allocation and adjusted bend distance calculations in AllAppsView . java to improve the responsiveness of the UI by adjusting the
added a check for the presence of a colon in the key in HttpURLConnection . java to ensure that the condition correctly handles cases where the key contains
added PrincipalResolver support to the casSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance the functionality by integrating principal resolution capabilities
replaced ObjectMapper with noggit for JSON parsing in DelegationTokenResponse . java to improve compatibility and maintainability of the code
added a method ` removeTrailingSlashes ` to the ` StringBuilder ` class to remove trailing slashes from the StringBuilder to improve code readability and
added pattern matching methods and corresponding unit tests in PatternsMatcher and PatternsMatcherTest to improve pattern matching functionality and ensure correctness through comprehensive unit
updated error message formatting in LoadIncrementalHFiles . java to improve readability and maintainability of error messages
fix fire not be able to remove water from potion . close # 118
updated the formatting of the method call in CellLayout . java to improve code readability and maintain consistency
updated calculations in ContractStateCapsule , ReceiptCapsule , ReceiptCapsule , and ResourceProcessor to improve code clarity and
updated AsyncContentProducer and BlockingContentProducer to improve readiness checks and debug logging to enhance code clarity and ensure proper handling of input readiness states
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that a mandatory parameter is provided to prevent runtime errors
added variable substitution functionality for plist variables in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest . java to improve code clarity and
fix terra shatterer not be able to turn on .
updated method signatures to cast to OrderCreateApiRequest and changed return type to Object to improve type safety and clarity in order creation logic
added a new file ` PreParseGrammarTest . java ` for XML grammar parsing to facilitate testing of XML schema parsing functionality
2 . x : add ` @ suppresswarnings ( ` ` doclint : missing ' ' ) ` to all java . desktop module
added FontManager import and overrideFont method calls to ExtendedEditText to enable customizable font rendering in the user interface
added a null check for currentUser in AuthorizeTag . java and a corresponding test in AuthorizeTagTests . java to prevent unauthorized requests when
camel - 14263 : camel - cxf - should warn about unsafe character in uri
added an overridden setUpData method to JDBCGeometryTestSetup class to ensure proper initialization of data during tests
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] throw exception when attempt to restore a task that be already cancel
remove main ( ) method from remotejmeterengineimpl , add server . rmi . create = true property to enable rmi registry creation
replace String . join with StringUtils . join for anticompactRanges in CompactionManager . java to improve code readability and maintainability by using a
added display metrics settings and modified qualifier handling in multiple test classes to ensure accurate display metrics and improve test coverage for default qualifiers
[ java ] : add cluster member id to service heartbeat counter .
added conditional logic to set TotalThreadAllocatedBytes based on version check to ensure compatibility with versions greater than 21 and above
added handling for NaN and hash code generation in CustomExpression . java to ensure correct evaluation and hash code generation for positive and negative values
updated logging statements and error handling in AjaxListener . java to improve clarity and accuracy of log messages related to continuation state
added authentication methods to the AuthenticityController and a corresponding test in AuthenticityFormTest to enhance the authentication flow and ensure proper handling of
added assertion to check if the nextNode is alive in LoweringPhase . java and removed redundant code in SnippetTemplate . java to improve code
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for HTTP client requests
refactor track selection comparison logic in DefaultTrackSelector . java to improve code readability and maintainability
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of serialization processes
refactor corner handling in DrawImage . java to include cropping logic to improve image rendering by allowing the image to be cropped based on the
refactor UnitOfWorkFactory class to improve code organization to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated related calculations in ` WidgetPreviewLoader ` and
tika - 358 : add content - type name parameter to the mail content handler ( tika - 355 )
updated URI construction in ThumbnailsCacheManager . java to use fileId instead of getRemotePath to improve clarity and functionality of thumbnail generation
added mark and reset methods in Source . java to ensure proper handling of input streams based on mark support and reset functionality
added @ Deprecated annotations to AsyncProcessor , BehaviorProcessor , BehaviorSubject , SerializedSubjectTest , and SerializedProcessorTest classes to indicate that these
added a configuration property to control server error stack visibility on the error page to enhance user experience by allowing users to see error stacks on the error
server : do n ' t try to cleanup a domain if it fail to delete an account
remove unnecessary null check when emit foreign call in sparcarcirgenerator
[ drools - 57 ] add ruletemplateconfiguration method that be not support in drools 5 . x api
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to call ` Display . getInstance ( ) . callSerial
increased the DEFAULT _ TIMEOUT _ MILLIS from 100 to 1000 in UnboundedSourceSystemTest . java to increase the timeout duration for improved
updated import statements and modified the way the style name is qualified in ShadowAssetManager . java to improve code clarity and ensure proper handling of parent style
deleted MrefStat . java and MrefStat1 . java files to remove unused classes to streamline the codebase
added import for StringUtils and modified scope handling in DependencyInsight . java to ensure proper handling of blank scopes to improve code clarity and prevent potential errors
refactor error handling for no trades and status in BTCETradeServiceRaw . java to improve code clarity and reduce redundancy in error handling
use hamcrest assertion instead of junit in integrations / micronaut - core ( # 1749 )
added a method to retrieve payment request URLs in BitcoinURI . java and corresponding unit tests in BitcoinURITest . java to enhance payment
planner - 383 add type argument check for collection wrapping ( # 383 )
removed redundant call to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
fix a bug in jfrbuffernodelinkedlist . acquire ( ) and notifyeventwriter ( ) .
refactor null value handling in BasicAbstractTuple to use a for - each loop to improve readability and maintainability of null checks
refactor LintUtility to use InputResourceUtility for reading linter configurations to improve resource management and streamline file reading process
replace direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a post to execute background and padding updates to
fix inventory tick not be incremented correctly . close # 118
added handling for OCELOT _ BABY event in PlayerEvents . java to enhance gameplay experience by providing a new event type
[ hotfix ] [ runtime ] add miss @ publicevolving annotation to statettlconfig
added null handling in PreparedStatement and Array classes to ensure proper handling of null values to avoid potential NullPointerExceptions
[ java ] add describe command to archive tool to include invalidated recording .
replaced double quotes with single quotes in append0 method to improve code readability and maintain consistency in formatting
added a new test method for JSON snapshot serialization in SiteSnapshotVariationsTest . java to ensure proper serialization and deserialization of JSON snapshots in the
refactor BroadTest to use a private method for removing the transaction and block to improve code organization and ensure proper cache invalidation during tests
added functionality to enable camera settings based on the presence of LensMask conditions in AmcrestHandler . java and DahuaHandler . java
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify method signatures by eliminating unnecessary
updated the constructors of ChangeLogIterator to accept both List < ChangeSetFilter > and List < ChangeSetFilter > as parameters to improve flexibility
do n ' t swallow guest exception in polyglot launcher
updated the method to retrieve the OUT _ TRACKING option from ` Utils . getenv ` to ` Utils . getEnvOrSystemProperty ` to ensure
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor spaceBefore logic in SpacesVisitor . java to use dropParentUntil for better readability to improve code clarity and maintainability by reducing
# 118 - add nearcache option to servercacheoptions . copy ( boolean )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify border visibility behavior on float elements with overflow hidden
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` and ` ProjectCommand
updated the Kucoin exchange URI from LIVE _ URI to PROD _ URI and added logging for exception handling to improve clarity and consistency in the
updated resource loading and search path logic in SpringResourceAccessor . java to improve clarity and correctness of resource path handling
added unit tests for microgram and square metre conversions in SmartHomeUnitsTest . java and SmartHomeUnits . java to ensure consistency in
updated the method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to
deleted the Tls12SocketFactory . java file to the functionality was no longer needed in the project
fix ( tex ) : fix duplicate bib entry in texbibentriesresolver
added a method to check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric ' s legacy resources
added a check for FirebirdDatabase to return a specific database data type to ensure proper handling of double precision in Firebird databases
added null checks for dataSource and transactionManager before assigning to DefaultBatchConfigurer to ensure proper initialization of DataSourceTransactionManager when dataSource is null
added @ API annotation to the unittest . stubs package to provide package - level documentation for the unittest stubs
updated the command from " google . com " to " ping - c 127.0 . 0.1 " and modified timeout annotations in the OutputStreamTest class
no effective change - use try - with - resources in savealltest
modify TermScorer ' s postings return logic to conditionally use FREQS or NONE based on scoreMode requirements to ensure proper handling of
fix npe in dataflowmetrics # setmetrics ( list < metricupdate > empty )
cloudstack - 6253 : fix search for vms by accountid and accountid when search for nic
refactor DynamicPartitionPruner to use a new method for finding the target object inspector to improve code clarity and maintainability by centralizing target object
added a method to remove build artifacts from the ArtifactFilesystem to ensure that existing build artifacts are deleted before execution
added row selection interval handling in ThrustCurveMotorSelectionPanel . java to ensure correct row selection when the table is empty
move assertthrowsarraystoreexception from main to asserts . assertthrowsarraystoreexception
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future updates
added support for user agent configuration in HttpClientBuilder and HttpClientConfiguration to enhance flexibility in configuring HTTP parameters based on the environment name
refactor session handling in MemorySessionStore to use a computeIfAbsent method to improve code readability and maintainability by encapsulating
updated assertions in IssueTest and changed the data provider ' s results set type from Set < String > to Set < Object > in Reporter to improve
camel - 14284 : fix nullpointerexception in consumeews when no content - type be specify .
change actiationid to activationid and add interactionendevent to send the interaction end event .
added @ Override annotations and corrected spacing in GraphApplet . java to improve code readability and maintainability
added a method to update the snapshot radius in RecentsView and modified the visibility of the updateSnapshotRadius ( ) method in TaskView to improve
added logging for Swagger generation in StaticMicroserviceVersions . java to improve visibility into the generated Swagger for 3rd party services
changed the return type of put methods from void to int in ArrayMap . java to allow the put method to return the index value instead of void
updated KafkaContainerCluster to use a startup timeout of 1 minute instead of a deep start to improve startup timeout handling and streamline broker startup process
do n ' t try to send a message back if the consumer can not send a message .
refactor header addition logic in StaticServerHttpHeadersWriter to check for existing headers to improve efficiency by avoiding unnecessary addition of duplicate headers
added package access check before loading a listener class in EventListenerList . java to ensure proper access control before loading the listener class
added a CustomAdapter class and modified the onCreateView method signature in ApplicationsFragment . java , and created a ListView in CustomAdapter . java to
added null checks for icons in applyIcon method to ensure proper handling of null tasks to avoid potential NullPointerExceptions
refactored ` DownloadTracker ` , ` DownloadManager ` , and ` DownloadStateCursor ` to use try - with - resources for resource management
fix ( sql ) : use currentclausestack . pop ( ) instead of currentclausestack . push ( ) .
added JUnit @ Test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursor
refactor DataInputStreamWithTimeout to use ExecutorService and Future for polling byte values to improve concurrency handling and ensure accurate slip message reading
added support for ENABLED _ TS in VersionTargetGraphMode and VersionedTargetGraphCache to enable thread - based dependency management in the version
refactor UpgradeCatalog150 class to improve code readability to enhance maintainability and facilitate future updates
rename networkparameters . testnet3 to oldtestnet to avoid confusion .
ggb - 136 : do n ' t update the property panel when there be only one geo
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code robustness and
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling for resource closure to improve resource management and enhance error handling during index output
pdfbox - 4071 : do n ' t create a new rectangle if the clippingpath be n ' t complete
removed synchronization from localAddress assignment in SocketChannelImpl . java to simplify the code and improve performance by eliminating unnecessary synchronization
refactor TemplateTransformer to use a dedicated method for adding values to a row to improve code readability and maintainability by reducing duplication
added a method to check if the operating system is Windows and updated file renaming logic to improve code readability and ensure proper file handling during
replaced char array with a constant string for ALPHABET and ASTERISK _ ENCODING in Code39Reader and Code39Writer classes
refactor execution type handling in NodeGenFactory . java to improve readability and maintainability of the code logic
removed unnecessary check for fieldType . stored ( ) in IndexingChain . java to simplify the code and improve readability
fix ( sql ) : fix timestamp with nanos in where clause
removed conditional check for postedRunnableStacktraces in LwjglCanvas . java to simplify code logic for adding runnables
fix typo find by codespell on fossies . org
replaced ` assertInitialized ( conn ) ` with ` waitUntilInitialized ( conn ) ` in ` ConnectionPoolTest . java ` to improve synchronization to
updated directory retrieval from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistency in directory type usage across
refactor FaultTolerantChunkProcessor to streamline data handling and improve filter count management to enhance clarity and maintainability of the fault tolerance
modified the method signature of ` tabbedMethod ( ) ` and refactored the main method in ` T4994049 . java ` to
replaced ` if ( ! ( TerminalFactory . get ( ) instanceof WindowsTerminal ) ) ` with ` assumeTrue ( TerminalFactory . get ( )
remove unnecessary check for admin in getfeedbacksessions
updated calculations for newSelection and modified velocity and position checks in AllAppsView . java to improve user experience by adjusting selection boundaries based on
bugfix # 218484 - remove unnecessary call to threadinfo # initialize ( )
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog . java , modified connection handling in ExportPanel . java , and
updated write buffer size to a static final constant and replaced repeated calls to ` valueOf ( ) ` with ` parseFloat ( ) ` in multiple classes to
replaced the segment size calculation with a SegmentInfo instance in DocumentsWriter . java and added a test for no documents index in TestIndexWriter . java
blender : do n ' t validate the mesh structure if it do n ' t exist
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
replaced direct instantiation of UnsupportedOperationException with a custom implementation that avoids filling in the stack trace to improve error handling by avoiding unnecessary stack trace filling
update label height calculation to use average line height to improve accuracy of label rendering based on line height
replaced singleton instance of RotationTouchHelper with a constructor that accepts a DisplayHolder parameter to improve flexibility in managing display - related instances
added a check for already quoted strings in valStr and modified the for loop condition to improve handling of quote conditions to ensure proper processing of quoted strings
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ` for span ID conversion and modified ` setStateCurrentTrace ` method to handle
renamed the method ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig ( ) ` in `
updated substring method call in TestSqlEntityProcessorDelta . java to improve clarity to enhance readability and maintainability of the test code
refactor caching logic in Cache . java to improve performance and maintainability of cache operations
updated variable names and scopes in ResourceSetRegistrationEndpoint . java for consistency to improve code readability and maintainability
updated the ` doBefore ` method to use a ` newSearcher ` with a ` false ` parameter and made the ` BitSet ` final to improve
added a new Java file to display a GcodeTable with a JScrollPane and a JTextArea to demonstrate the functionality of displaying a number of rows in a
use configuration . getconnecttimeout instead of a hardcoded value
refactor multiple classes to improve code readability and maintainability to enhance code clarity and maintainability
refactor TestMediaService class for improved readability to enhance maintainability and facilitate future updates
removed the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK constant from Messages . java to clean up unused code and
add a new file MarketsPrintTool . java to implement functionality for printing market currencies in various locales to provide a utility for processing market data based on
added validation for component names and maximum lengths in EndpointAddressInterceptor to ensure that only valid hostnames are accepted and prevent potential runtime errors
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration functionality and improve proxy handling
refactor ServerSpanThreadBinder class to improve code readability to enhance maintainability and facilitate future updates
updated user object reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and corrected spacing in `
updated the key in the builder to " the _ geom " and " number " to " the _ geom " and " number " to improve clarity
updated variable names from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve clarity and maintain
refactor parameters class for improved clarity to enhance maintainability and readability of the code
added a call to ` setIgnoreNullValues ( true ) ` in ` MultiplePiePlot . java ` to enable null values in pie plot
refactor loading logic in ResourceBundle . java to improve code readability and efficiency to enhance performance and maintainability of the loading process
updated the character ' c ' from ' _ ' to ' - ' in TaggedPdfReaderTool . java to improve the readability of the PDF
do n ' t allow @ allowedduringediting for action that be not allow during edit .
added a userModified flag to the LoginSamlAuthenticationProvider class to indicate that the user has been modified during the authentication process
added a new file TestSealedObjectNull . java to test the behavior of SealedObject with a null cipher to ensure that the SealedObject
replaced the ` onOpen ` method with ` setResponse ` and renamed the ` succeeded ` method in ` ConnectPromise ` to improve clarity and consistency
added a static final Set to manage SNOW materials based on server version to ensure compatibility with server versions 17.7 . 5 and maintain compatibility with server
added an ' id ' field to the ` CryptsyPublicTrade ` and ` CryptsyAdapters ` classes to track and
added error handling and closure of MMS connection in HiveStreamingConnection to ensure proper resource management and avoid potential memory leaks
change seed initialization to use random number generation instead of current current time to improve randomness and prevent potential errors in seed generation
updated the icon size and added a new device profile for Nexus 5 in DynamicGrid . java to enhance the user interface by including a new device profile
[ hotfix ] [ runtime ] fix flowablerefcount . resetif ( ) for disconnect before connection .
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to utilize a
added handling for WHITESPACE _ AROUND _ TEXTUAL _ OP in FormatToken . java and corresponding tests in TokenFormatter . java and PHPFormatter
added checks for file existence and non - empty length in SaveTask . java and implemented new test cases in SaveAndLoadTaskTest . java to
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during concurrent access to these methods
log4j2 - 1349 fix bug in smtpmanager . add ( log4j . core . mutablelogevent )
replaced LengthLike with NonNegativeLengthLike in PrimitivePropertyBuilders . java to improve padding handling for non - negative lengths
remove call to getuser ( ) in createcontext ( )
fix handling of jimple catch in methodirbuilder .
updated ` JUnitRunner . java ` and ` AndroidPlatformTarget . java ` to improve error message formatting and directory structure to enhance code readability
updated cacheSize calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for better performance
added a condition to check if ` start ` is zero in ` InvocationStageTrace . java ` and modified a test in ` TestInvocationPublishModel
do n ' t throw npe when try to load a non - existent keystore
updated server socket initialization and modified port handling in UpstreamCheckUtilsTest . java to improve test reliability by using a dynamic port instead of a fixed
ggb - 164 fix : do n ' t add the panel to the dockpane if it ' s the same dimension
added conditional checks for OpenGL shader extensions before setting maximum storage limits in GLRenderer . java to ensure shader storage limits are only applied for specific shader
refactor PopulatorContext class to improve code readability to enhance maintainability and facilitate future updates
skip saveall action if project be not the current project
[ zeppelin - 4611 ] fix encoding issue in zqljobmanager
added a check for non - empty arguments before processing Table instances to ensure that the argument is not null before processing to avoid potential ArrayIndexOutOfBoundsException
replaced hardcoded string strings with a constant PREFIX in FakeOSSOHeaderDecoder . java to improve maintainability and reduce hard - coded
camel - jbang : deprecate -- suffix - strategy option in favor of -- suffix - strategy .
removed debug log messages related to Apache Derby driver class loading and version check to clean up the logging and improve error reporting for better debugging
[ hotfix ] [ test ] add timeout to cepepeptest and cepjavatypetest
replaced ` . parallelStream ( ) ` with ` . stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by reducing
updated the ROLLBACK operation type check and added a warning message for liquibase mode updates to ensure that the liquibase . hub . mode property is
added constants for IBM and OpenJ9 version success and failure keys in Constants . java and implemented a test method in TestDDRExtensionGeneral .
updated logging message format in FontFamily . java and added a new DebugFonts . java file to improve clarity of font addition requests and facilitate debugging
added HTTP version check in NegotiatingServerConnectionFactory to ensure proper handling of HTTP version in negotiation logic
added RateControl import and set it in MaxConcurrentStreamsTest . java to disable rate control for HTTP / 2 operations
added a new Java file Test6741426 . java that implements a JComboBox with a BufferedImage to demonstrate the use of Nimbus Look and Feel
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of error reporting for CSRF
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure that managedDir , dbMgd
move s3copyobjectrequest to package com . cloud . bridge . service . core . s3
removed accentColor parameter from setup methods in SettingsActivity . java to simplify method signatures and improve code readability
updated the exception message in TemporaryFolderUsageTest to include the fileAtRoot to improve clarity of the error message for better debugging
replaced instances of ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation . OBJECT `
fix clientnetworkconfig . addaddress ( string , null ) to throw an illegalargumentexception .
added a new certificate key " keynectisrootca [ jdk ] " to VerifyCACerts . java to enable verification of root certificates
[ logstash ] change compute ( ) method to return the output count instead of void .
added a conditional check before setting the mode of the popup menu to ensure the menu mode is only set when the popup is clicked and the popup is
pdfbox - 4071 : fix arrayindexoutofboundsexception in memoryttfdatastream
added a new file ` FinalizerInfoTest . java ` to implement a test for garbage collection to ensure that finalizer information is correctly initialized and
( chore ) camel - core : use doonnext instead of map in CachingRouteDefinitionLocator and CachingRouteLocator
refactor burningmanservice . getcompactionrequest to use custom address if available
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
updated the byte array size from 1 , 000 , 000 to 1000 , and added an @ Ignore annotation to the longData variable to temporarily
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to improve clarity
replace " from : " with " @ " in the recent query and save recent query to ensure correct handling of queries that start with " from :
added a conditional check for rebalance in SimulatorDiscoverer . java to ensure proper handling of rebalance scenarios during simulator recovery
added a new POST endpoint to handle account imports in YubiKeyAccountRegistryEndpoint . java and updated tests accordingly to enhance account management functionality and
added multiple shader programs in ShaderManagerLwjgl . java and updated material handling in FontMaterialProducer . java and FontMaterialProducer . java
added null check for ` cnt ` in paintOnTopLoop ` and modified safe area settings in ` SideMenuBar ` and ` Toolbar ` to
refactor AbiWriterProtocol class to improve code structure to enhance maintainability and readability of the code
added null check for subName in HierarchyBase . java to ensure caption is set correctly when subName is null
updated data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to align data
updated conditional checks and variable names in CustomExpression . java to improve code readability and prevent potential NullPointerExceptions
voteresultservice : send republish request instead of call requestblindvotelistfromnetwork .
[ hikari ] add a test case to show that postgres do n ' t throw exception .
replaced double quotes with single quotes in SubtitleUtils and RemoteUtil classes to improve code readability and adhere to Java best practices
updated line separator handling in DefaultJavaPrettyPrinter and CommentTest to ensure consistent line endings across different operating systems
truffle : use atomicupdater for snapshot update in singleimplementor snapshot .
added null check before adding queries in SimpleFacets . java and added a test case in SimpleFacetsTest . java to ensure proper handling of
added handling for Bridge and GenericThingBuilder in ThingHelper . java to ensure proper merging of Thing instances based on Bridge implementation
replaced calls to ` printHelp ( ) ` with ` error ( " command must be provided " ) ` and ` error ( " unknown command "
added a check for the existence of the outFile before returning it to ensure the output file is accessible before proceeding with further operations
added date parsing logic to DateConverter for T , plus , and minus signs in date strings to enhance date parsing capabilities for better handling of time formats
added assertions to validate the existence of a post by its slug in SpringDataJPALockTest . java and implemented a query in PostRepository .
change the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and modify related logic to improve clarity and
added SimpleClientHttpRequestFactory to set connection and read timeouts in ClientRegistrations . java to ensure proper connection and connection timeout settings for HTTP requests
updated the file path and name handling in SourceTest . java to ensure correctness of the source path and its name to improve test coverage and ensure
removed the static block for setting the GRAALVM version in DefaultHomeFinder . java and updated its usage in GraalVMLocator . java
added validity checks for access token and refresh token in ClientAdminBootstrap . java to ensure proper handling of token and refresh token validity settings
update androidAPIVersion return logic to conditionally use Android API version to ensure compatibility with newer Android API options
removed unnecessary ' this ' prefix from substring calculations in PropertyPlaceholderHelper . java to simplify code and improve readability by eliminating unnecessary ' this ' references
removed the " ( { number , number , algorithm } ) " from the formatted string in the Resources . java file to simplify the string representation of
refactor ZkSolrClientTest to use synchronized blocks and synchronize collection processing to improve thread safety and ensure accurate collection processing status during tests
added BigInteger type to simpleTypes in MongoMappingContext . java to ensure proper handling of BigInteger types in the mapping process
added a condition to check if the buttonText equals the buttonText in HomeFragment . java to ensure toast notifications are displayed correctly when the button is
added a condition to check if Mencoder does not have out - of - sync and disableMc0AndNoskip to ensure proper handling of
increased the default event loop count from 10 to 15 in ConfigurationProperties . java and its test in ConfigurationPropertiesTest . java to increase the number of
refactor ` CountMin4 ` , ` IncrementalResetCountMin4 ` , ` PeriodicResetCountMin4 ` , ` AdaptiveWindow
refactor ExternalFileField to return FileFloatSource instead of throwing an exception and add a new test class ExternalFileFieldSortTest to enhance functionality
updated error message from " Invalid URL " to " Connection error " in FetcherException to improve clarity of error reporting for connection issues
added source ID handling and updated event logging in OpenRocketSaver , DocumentConfig , FlightDataBranchHandler , and FlightDataBranchHandler classes
changed the access modifier of the check method from private to protected to allow subclasses to access and override the check method
added synchronization handling for file operations in FileActivity . java to improve user experience by notifying when a synchronization operation finishes
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for file handling to improve URL encoding and enhance security when generating preview images
added a check to ensure the InfiniteContainer is initialized before proceeding with further operations to avoid unnecessary processing when the container is not initialized
changed the initial value of the ` total ` variable from 0 to 1 and adjusted the calculation of ` total ` based on the ` value ` to
added a lock check before updating feed entries in FeedRefreshUpdater . java to ensure that updates are only performed when the feed is locked
refactored conditional statements in SolarisAclFileAttributeView . java to streamline user principal assignment logic to improve code readability and maintainability
refactor edge management in LatLonTree . java to use an array instead of a list for better performance to improve code efficiency and readability by
added IOUtils import and closed the input stream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
replace \ \ n with \ \ x0a and \ \ x0a in comment .
added strict parameter handling and corresponding tests in Main . java and MainTest . java to ensure proper parsing of properties files based on strict mode settings
fix : defaultvalidator do n ' t validate ` ` invalid ' ' constraint
camel - 14263 : camel - http should use http4 instead of http
added a waitForThingsToLevelOut ( 30000 ) method to TestCloudPivotFacet . java to improve test reliability by waiting for level out before
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class for improved clarity to enhance maintainability and readability of the test code
replaced String with StringBuffer for constructing the details string to improve performance and readability of the code
replaced instances of ` Type ` with ` RoboType ` across multiple files to ensure compatibility with Robolectric ' s type system
[ java ] add cancellation action to record descriptor poller when dispatch complete .
added cache key and lookup key handling in EntityProcessorBase . java and updated related tests in TestCachedSqlEntityProcessor . java to improve cache management
added a new file PutfieldError . java that tests the throwing of IncompatibleClassChangeError to ensure that a IncompatibleClassChangeError is
do n ' t send connection to remote address if it be already in the public table
patch by jbellis ; review by gdusbabek for cassandra - 136 . patch by brandonwilliams for cassandra
replaced instances of ` Space . build ( " " ) ` with ` Space . SINGLE _ SPACE ` in multiple files to standardize the
removed the redundant method ` encodedLength ( ) ` from the ` Flyweight ` class to streamline the code by eliminating redundancy
refactor TestMethodResultMapBuilder class to improve code readability and maintainability
do n ' t try to find null dereference on ints that do n ' t exist .
[ hotfix ] [ runtime ] remove unused constructor from tasklocalstatestoreimpl
updated return statements in mmm Utils . java to return string representations of minutes , hours , and days to ensure consistent formatting of time representation across different
updated conditions for handling DeepShortcutView in Utilities . java and FloatingIconView . java to improve shortcut handling and ensure correct drawable retrieval based on
changed the type of the ` validator ` from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` and
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate ` , and
added a new configuration class ` CoverageConfig ` and refactored the ` CoverageController ` to use it to improve code maintainability and
added a check to prevent registration of the sticky event in ThumbnailView . java to ensure that the event bus is only registered once to avoid potential
added a ` asciiOnly ` flag to normalize strings based on their length in ` NormalizerBase . java ` to ensure normalization is performed only when
[ hotfix ] [ runtime ] fix migration permission check in jobcoordinatorservice
added error handling for SQL update failures in SpillableGroupByIT and NoOpStatsCollectorIT to ensure accurate error reporting for database operations and
( chore ) camel - cometd : upgrade camel - jetty to junit4
added ` OK ` attribute to ` HR ` and ` attrs ( AttrKind . OK , WIDTH ) ` in ` HtmlTag . java
added a line break to the output in HtmlCoreReport . java to improve the readability of the report output
updated the calculation of ramBytesUsed to include a null check for scores to avoid potential NullPointerException when scores is null
added a new class ` StringHolder ` and its methods for serializing and deserializing ` StringHolder ` objects in ` CustomTypeAdapters
[ java ] set extradata from miningparameters in mergecoordinator .
added a static final map for number of arguments and updated the method to pass them to the argsToProperties method to enhance flexibility by allowing the number
refactor PathParamServerEndpointConfig class for improved clarity to enhance maintainability and readability of the code
updated variable name from ` configedThreshold ` to ` configuredThreshold ` and introduced a default delay constant in ` MigrationRuleListener ` to improve code
updated parameter names from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity and consistency in
move bootstrap . css to twitterbootstrap / src / org / drools / planner / benchmark / core / statistic / twitterbootstrap
remove unused code from spanishtreebanklanguagepack
no effective change - refactoring of entityloader . loadbyuniquekey ( ) to entityloader . load ( )
hbase - 25813 regionserversnapshotproceduremanager . removecancelledelements ( ) do n ' t remove cancelled element from taskpool
fix ( java2d ) : do n ' t set size when width or height be zero
remove unnecessary whitespace in hikaripool . fillpool ( ) .
replaced the ` assureMatchVersion ( ) ` method with a default value of ` Version . LATEST ` in multiple filter factory classes to ensure compatibility
add defaultmethodclient interface to allow proxy creation to work with abstract method .
do n ' t try to parse a comma after a comma in the drl parser
refactor GuavaOptionalSubject , IterableOfProtosSubject , MapWithProtoValuesSubject , MultimapWithProtoValuesSubject , and ProtoSubject
added a check for negative payload length in WsFrameBase . java to throw a WsIOException for invalid protocol errors
move PublishSubscribeChannelParser and PublishSubscribeChannel from ` channel ` to ` dispatcher ` to align with the new package structure for better organization
updated ` OptimisedBootstrapUtils ` , ` ReplLoadWork ` , ` ReplLoadWork ` , ` DumpMetaData ` , and
added byte update calls for width and height in ImageProcessor . java to ensure correct handling of image dimensions for processing
removed logging of the overlay version in SolrConfig . java and added import statements in SolrConfigHandler . java to improve code clarity and utilize new
updated the delay duration from 24 hours to 3 minutes in FileSyncAdapter . java to improve synchronization efficiency by avoiding unnecessary automatic synchronization
updated the variable name from ` afterConversionTime ` to ` afterConversionTime ` in ` SegmentV1V2ToV3FormatConverterTest
replaced String fullPath with Path path in QueryProcessExecutor . java to improve code readability and maintainability by using a more descriptive variable name
added URI handling and improved error logging in DefaultPackageScanClassResolver and added a new test for filter package inclusion in jar URLs to enhance URL
[ hotfix ] [ table - common ] add utility method for timestampextractor
added a new file ` SpringSecurityAuthenticationSource . java ` that implements the ` AuthenticationSource ` interface to provide a structured way to retrieve authentication details
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest features and
replaced ` Dialogs . autoSuggestDialog ` with ` SimpleFormDialog . build ` for file suggestions to improve user experience by allowing users to suggest
added a new test method ` testNewPut ` in ` TxInputUtilTest . java ` and updated assertions in ` StoreAPITest . java
updated the parameter name in the stream method from ` collectionName ` to ` collectionName ` to improve clarity by using a more descriptive variable
updated zoom calculation and type casting in MapOverviewImageMouseHandler . java to improve zoom accuracy and prevent potential casting issues
added similarity handling to KNearestNeighborClassifier and updated related tests to use LMDirichletSimilarity to improve the accuracy of classification results based on
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance by using a more efficient query implementation
updated the method to retrieve the reason from ` lowResourceCheck . toString ( ) ` to ` lowResourceCheck . getReason ( ) ` to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added MTU request handling tests in ShadowBluetoothGattTest and implemented it in ShadowBluetoothGatt to ensure correct MTU
move testpayloadnamerequestwrapper to a separate method so it can be use by other test .
[ vosk ] set vosk log level to warn for unsatisfiedlinkerror
use concurrenthashmap instead of hashmap in channelprocessingmanager to avoid concurrentmodificationexception
updated Japanese resource files to include " all " , " grouped " , " summary " , and " summary " to improve clarity and accuracy of
updated condition from ` size > 0 ` to ` size > 1 ` in JDBCTypeMapping . java ` and corrected variable names in JDBCType
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety when modifying player operations
refactor accessibility detection logic in TerminalView . java to use AccessibilityStateTester and Pattern classes to improve code organization and enhance accessibility checks for better
added support for side navigation in the MenuBar and SideMenuBar classes to enhance functionality to support additional command behaviors in the menu bar
removed unnecessary ` Disposable ` declaration in ` PoloniexManualExample . java ` and added debug logging in ` WampStreamingService . java `
updated energy limit validation logic in UpdateSettingForEnergyLimitContractActuator . java and UpdateSettingForEnergyLimitContractActuatorTest .
renamed variable ` url1 ` to ` javaUrl ` and added protocol handling in ` UrlBean ` to improve code clarity and ensure consistent naming convention
add getter / setter for namespaceprefixref in soap data format to allow customization of the namespace prefix reference
updated assertions in TestRange . java to use a new method ` isSameDay ` for date comparisons to improve code readability and maintainability
added logic to check if a Solr server is found in BasicAuthIntegrationTest . java and updated security data retrieval in ZkStateReader . java to
add pricefeed to tradeschartsviewmodel so it can be use for sticky market price
refactor hbase configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve code readability and maintainability by consolid
updated variable names from ' from ' to ' end ' and adjusted related logic in NativeString . java to improve clarity and correctness in handling string
added file downloading functionality to FileDataStorageManager in FileDownloader . java to enable automatic downloading of files during file operations
updated the initialization of RandomAccessFile in MappedRawLog . java to use a separate variable for the logChannel to improve code readability and ensure
added a method to check if a registry is running and a method to delete a file if it exists to improve error handling and file deletion reliability during
removed unused imports from multiple Java files and added a call to startLoading ( ) in Quick3dMain . java and TextureTest . java
removed unused fields and suppressed unchecked warnings in multiple Java files to improve code clarity and reduce potential runtime errors
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
phoenix - 1084 set isolation level only if transaction be enable ( phoenix - 1084 )
added transaction attribute handling in AbstractStepFactoryBean and updated exception handling in ItemOrientedStep and SkipLimitStepFactoryBean to ensure proper exception
updated CasManagementSecurityInterceptor to extend DirectCasClient and modified profile management logic to enhance security handling and improve profile management functionality
added category functionality to the menu in ListFragment and updated navigation drawer item handling in NavigationDrawerFragment to enhance user experience by allowing category addition in the
changed method name from ` cancel ` to ` cancelMatchingOperation ` and renamed ` observeDownloadWorkerState ` to ` observeWorkerState ` to improve
pdfbox - 4071 : avoid classcastexception , a suggest by valerybokov
replaced the method ` onFontSizeChanged ` with ` onFontSizePx ` and updated text size retrieval to improve clarity and consistency in font size handling
do n ' t modify constant frame in constantanalysis if fact be invalid
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
replace direct return of spans with a new ArrayList instance to ensure that the returned spans are not modified externally
removed unnecessary locking and improved readability in Liquibase . java to streamline the code and enhance maintainability
added a ` setRevision ` method to ` MicroserviceVersions ` and modified ` InstanceCacheChecker ` and ` TestInstanceCacheChecker ` to handle
updated foreign key and index handling in TableRetriever and AbstractRetriever classes to ensure consistent formatting of foreign key and index names to improve code readability and
camel - 15836 - camel - aws2 - s3 : add uriendpointoverride option to the endpoint configuration
removed currencyPair parameter from getBitstampUserTransactions method in BitstampAccountService and added error handling in BitstampAccountServiceRaw to streamline
added error handling for component retrieval in BlueprintContainerRegistry to improve robustness by preventing application crashes due to missing components
change the push ( ) method to return a boolean instead of void , and add a push ( ) method that return the result of the push (
refactor LegacyAddressTest to use CSV files for data comparison instead of hardcoded values to improve readability and maintainability of the legacy address
changed the access modifier of the method ` findDropTargetAt ` from package - private to public to allow access to the method from other classes
added a snackbar setup method and refactored push notification handling in NotificationsActivity to improve user experience by ensuring the Snackbar is displayed
close the channel when the exception handler throw an ioexception .
updated null checks and method names in LdapPasswordPolicyEnforcer . java to use StringUtils . isEmpty for consistency to improve code readability and maintainability by
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to issue PHOENIX - 2840
nifi - 114 : add timezone property to aboutdto to allow time zone information to be read from xml file .
fix bug in storageservice . splitownedranges ( ) when there be more than one local range
removed exception handling for deserialization in BeanContextSupport . java to simplify code and improve readability by directly reading objects
replaced synchronized block with synchronized block for adding activeCircuits to ensure thread safety when modifying activeCircuits
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more specific exception type
flume - 236 : move pollablesink and pollablesource to their own class .
updated logging behavior in FastBindLdapAuthenticationHandler to use info level instead of error level to improve log readability and provide more informative error messages
refactor ContainerOrderFocusTraversalPolicy to improve code organization to enhance maintainability and readability of the code
change return type of getpointlength ( ) from double to int and implement geolocusable
removed unnecessary whitespace in the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor database connection handling and logging in SchemaCrawlerMain and Executable classes to improve resource management and error handling for database connections
switch default tl version from v1.3 to v1.3 . 2 in connectionfactory .
corrected a typo in the exception message from " labels buffer is full " to " metadata buffer is full " in CountersManager . java
updated audio stopping logic and adjusted index calculation in MediaManager . java to ensure proper handling of audio queue position and prevent potential index out - of -
updated debug logging statements in HttpConnection . java to include the connection status to improve logging detail for better debugging
added a ` @ Transient ` annotation to the ` JpaPersistentPropertyImpl ` class and a corresponding unit test in ` JpaPersistentProperty
updated assertions in UpgradeResourceProviderTest to use HDP - 2.1 . 1 and HDP - 2.3 . 0 instead of 2111 to ensure
trufflevm : fix eval ( ) to return object instead of symbol
[ java ] make isbinarytype public and add debug message if it ' s binary .
corrected the spelling of " TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE
refactor : remove unused code in javaeditor . findproblem ( int )
replaced ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` , ` BloomFilterHandler ` , and ` Dictionary
updated line separator handling in TableWriterTest to use a configurable line separator to enhance flexibility by allowing different line separators across different operating systems
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate future updates
added ownership check for texture in ParticleEffect . java to ensure particle effects are only processed if the texture owns
added additional Hive configuration properties for LDAP authentication to enhance security by integrating LDAP authentication features
fix checkstyle issue in api / datacatalog / datacatalogsearch
updated input method management in DetailActivity . java to use Context instead of Activity to improve user experience by enabling or disabling input method notifications
added unit tests for converting a map of primitive to a map of primitive to an object in DataTableTypeRegistryTableConverterTest . java to ensure correct
updated the size calculation in TestFileSystem . java from 500 to 50 and modified the size calculation from 500 to 50 to optimize memory usage and improve test
updated error message for M2 . 4 exception to include check that code is closing open resources before filing a bug report to improve clarity of error reporting
changed the ` dropSequences ` method to be abstract in ` AbstractDatabase ` and added an import statement for ` MigrationFailedException ` in multiple database
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
replaced a variable assignment with a variable assignment in DocumentBuilder . java to improve code readability and maintainability
[ bugfix ] improve hierarchical icon event handling .
added a new test method ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` to ` MongoTemplateTests ` to ensure that the
updated calculations in RowIndexSeekerV1 , ByteBuff , Bytes , CellFlatMap , and BoundedPriorityBlockingQueue to use the correct division
added statistics recording functionality to AppsCustomizePagedView , Launcher , and Stats classes , and improved intent broadcasting in Stats . java to
added graphical rendering functionality to the JavaSEPort class to improve rendering performance by avoiding unnecessary data setting
[ # 7778 ] instructor : add team to the result page to show team detail in the result page
refactor inventory ID handling in Inventory . java and add a test case in InventoryTest . java to improve code clarity and ensure correct inventory ID generation
added a conditional check for ` found ` before breaking a loop in ` ConfigDescriptionRegistry . java ` to ensure that the loop only proceeds if a
added returnType parameter to method declarations in ReloadableJava parser visitor classes to improve clarity and consistency in method signatures
refactor TileMapRenderer to handle null blended tiles and create a default IntArray when it is null to improve robustness by avoiding potential NullPointer
removed unused ` value ` references from ` @ Classes ` annotations in ` mmm Probe . java ` and ` ppp Probe . java `
[ fix ] ifctools2d do n ' t handle last segment correctly .
updated the initialization of ` lockOnSync ` to use ` this ` instead of ` currentThrottleRate ` to improve code clarity and maintainability by
refactor event handling in PipeEventBus and add tests in PipeBehaviourEmzuli and PipeBehaviourEmzuli to improve code clarity and ensure proper
updated the timeout duration in ZkController instantiation from 1000ms to TIMEOUT to improve responsiveness by allowing more time for the ZkController
added a new test method to verify passcode and client parameters in TokenMvcMockTests . java to ensure proper handling of client - specific access tokens
added constructors for KeepWordFilter , LengthFilter , and CharArraySet to brokenOffsetsConstructors in TestRandomChains . java to
removed the JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability
updated LLVMMemory . putI1 , putI8 , and putI32 to use Integer . toUnsignedLong and Integer . to
refactor btCollisionObjectArray and btRigidBody to use btCollisionObject . getInstance instead of btCollisionObjectArray
added a copyright year to the BuildProperties class and updated the AboutDialog to include additional contributors to ensure users have a clearer understanding of the
added getdistributedobjects ( ) method to JetClientInstanceImpl and a corresponding test class JetClientInstanceImplTest to enhance functionality and ensure
added print statements to FinSet . java and updated the expMOI _ tr variable values in MassCalculatorTest . java to enhance debugging capabilities and
replaced TOTAL _ MEMORY with MAX _ MEMORY in SmartDexingStep . java to use maximum memory instead of total memory to ensure
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified method parameter name in CreateAlignedTimeSeriesPlan . java to
do n ' t throw an invalidtxexception if the btc wallet do n ' t match
updated JsonLoaderTest to use json method and added exception handling for " big _ integer _ t " to improve code clarity and ensure proper exception handling
updated the limit check for tableSize from 1 to 0x40000000 in ObjectSet . java to allow for a larger table size to accommodate larger
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure dataScale is only set when it is non
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the field declaration and improve code readability
added error handling for security exceptions in FileHelper . java and updated content limit logic in TextHelper . java to improve robustness of file retrieval and
added a new constant StyleWithMultipleAttributes and corresponding tests in ShadowThemeTest to support multiple style attributes in the theme application
updated the sheet name check in HSSFWorkbook . java and modified the test cases in TestHSSFWorkbook . java to ensure the correct sheet
changed the theme color from primaryColor to elementColor in ManageAccountsActivity to ensure the correct color is applied to the user interface
added a null check for replyHandler in DefaultEventBus . java and modified path resolver in DefaultPlatformManager . java to improve robustness by preventing potential
added ` binaryCollationName ` configuration and updated ` getCollateFragment ( ) ` method across multiple classes to enable proper handling of binary collation
added a new method ` whenType ( Class < T > treeType ) ` that returns an ` Optional < T > ` for type safety to
refactor destination handling in ItemLauncher by introducing a method to retrieve the user view destination to improve code readability and maintainability by centralizing the
updated the response handling in FeedREST to redirect to the public URL instead of a normal status to improve user experience by providing a temporary redirect to the
[ hotfix ] [ kinesis ] improve error message when deserializer be not serializable
( chore ) camel - jbang : fix javadoc error
refactor LeaderElectionTest to use a boolean flag for creating a ZkStateReader instance to improve resource management by ensuring the zkClient is
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to include a subtitle parameter to
replaced direct calls to ` _ endPoint . fill ( ) ` with a new ` read ( ) ` method to improve code readability and maintain
replaced ` BufferUtil . allocate ( length ) ` with ` ByteBuffer . allocate ( length ) ` in ` ABCase1 _ 2 . java `
modified the return type of ` prepareStreamsToUpload ` from ` void ` to ` boolean ` and updated the method to return a boolean indicating success
replaced direct comparison with Integer . compare for order comparisons in AbstractConfigLoader . java to improve comparison accuracy by using Integer . compare instead of integer
added a new file ` PicOfDayAppWidget . java ` that implements an application widget with image loading functionality to enhance user experience by providing a
server : make internallbvmserviceofferingid a default value if it be not specify .
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` and updated join condition handling in ` HiveParserCalcitePlanner . java ` to
[ hotfix ] [ runtime ] deprecate input / savepoint and input / savepoint class
added user and password options for jmx access in NodeToolCmd . java to enhance security by allowing users to access sensitive information
removed duplicate BytesRef instantiation in Stemmer . java to streamline code and improve readability
updated widget application parameters in AppsCustomizePagedView . java to use a dynamic calculation based on the number of pages to improve widget management
ggbapplet . getviewforthumbnail ( ) now return the 3d thumbnail if the 3d thumbnail be available
updated rotation calculations in GcodeRenderer . java to ensure rotation values are within the valid range of - 180 to improve rendering accuracy
added a new option ` WORKSPACE ` to the ` OptionEnum ` class and updated the ` TerminalClient ` to set the workspace directory to
update climanagertest to use html instead of apt
updated ScimUtilsTest to use JUnit 5 annotations and assertion methods to enhance test structure and maintain compatibility with JUnit 5
refactor ` confimAccess ` method to use a ` Map < String , Object > ` model instead of a ` @ ModelAttribute ` to
refactor session handling in HibernateIT to use assertTrueEventually to improve event - driven test reliability and ensure accurate cache hit count verification
refactor EventBusHook class for improved event handling to enhance event management efficiency and maintainability
refactor MultiPaintEventTest class for improved clarity to enhance maintainability and readability of the test code
removed the ` final ` modifier from the ` mNewScale ` assignment in ` WorkspaceStateTransitionAnimation . java ` to simplify the code by removing
refactor SyncFactory class to improve code readability to enhance maintainability and facilitate future updates
added unique key handling in LukeRequestHandler to ensure data integrity by associating unique fields with their names
added round border color handling in BorderEditor and updated EditableResources to use this new method to enhance the functionality by allowing customization of border colors
add miss @ truffleboundary annotation to binaryparserexception and make it not part of compilation .
[ hotfix ] [ test ] move slotpool implementation from slotpoolimpl to slotpoolbridgebuilder
added logging statements in GatewayRSocket , GatewaySocketAcceptor , and PingPongApp classes , and modified sleep duration in PingPong
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener and added menu item click functionality to enhance user experience by providing a toast message when under
updated ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` and modified methods for starting details activity
refactor method names from ` add ` to ` push ` and ` removeTail ` in ` SymbolTable ` and ` ContextManagerImpl ` to improve
updated API and home URLs to use " commons . wikimedia . org " instead of " test " and " testwiki " to enhance documentation
refactor index setting logic into separate setIndex and updateIndex methods to improve code readability and maintainability by reducing duplication
replaced ` Collections . sort ( ... , AnnotationAwareOrderComparator . INSTANCE ) ` with ` configurers . sort ( ... ) ` in multiple classes
added a new string " DateTimePatterns " to the FormatData _ hr _ HR . java file to support date and time formatting in the application
added a call to clearFocus ( ) in DetailFragment . java to ensure the clicked view reflects the current focus state
updated selection handling in DescriptionsAdapter and adjusted language code logic in SpinnerLanguagesAdapter to improve user experience by ensuring correct selection behavior and handling empty
updated time zone representation from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple language files to ensure accurate representation of time
added native methods for registering global , weak , and accessing fields in FastGetField . java to enhance functionality for managing global and weak items
added default value handling for UNION and NULL types in ReflectData . java and updated test cases in TestReflect . java to ensure correct retrieval of
[ java ] increase timeout in sedablockwhenfulltest from 300 to 1000 .
added a null check before remapping the R class in ResourceMerger . java to avoid potential NullPointerException when remapping resources
fix ( sql ) : add default constructor to hapifhirdialect
camel - 11615 : camel - http - add a connection close header to the httpproducer so we do n ' t have to close the
increased the timeout duration from 60 seconds to 12 seconds in BasicDistributedZkTest . java to allow more time for connections to complete before timing out
[ java ] add test for count ( ) on ticket where status = ' ' free ' and price = 0
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class to improve code readability to enhance maintainability and facilitate future updates
replace thymeleaf . dom . nestablenode with document . getfirstelementchild ( ) . getchildren ( ) . getfirstelement
planner - 311 : make sure lookupmanager . getworkingobject ( ) return immutablelookupstrategy
[ java ] add waittoshutdown ( ) method to wait for cluster node to shut down .
change log level from warn to info for cached beans removal to provide clearer feedback on the absence of cached beans
added a default content type of " application / octet - stream " in WebdavEntry . java to ensure proper handling of octet - stream
added a ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and created corresponding unit tests in ` LazyTraceThreadPoolTask
[ geot - 5578 ] distanceop : do n ' t use envelope to calculate the minimum distance
change the variable name from ' required ' to ' requiredLabel ' in AbstractUITag . java to improve clarity and consistency in naming conventions
removed the ` next ( ) ` method and added ` updateProgress ( ) ` call in ` PurgingPartitionIterator . java ` to streamline the
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated calls to ` VectorUtil ` to
add getheight ( ) and getwidth ( ) method to basemonchromebitmapsource .
added validation to ensure polygons contain at least 3 points and updated localVertices assignment accordingly to ensure that polygons contain at least 3 points and prevent
replaced ` ObjectMapper ` instantiation with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to standardize object mapper usage across the codebase
do n ' t create coeffsquarefree array if it be a polynomial
updated ExternalNameRecord to handle multi - byte names correctly and added a test case for bug 47384 to improve handling of Unicode names and ensure correct
updated the description of the JMS destination type in AbstractJMSProcessor . java to correct the spelling of " QUEUE " to " 
added logic to exclude specific prompts based on the ` returnLoginPrompts ` flag in ` LoginInfoEndpoint ` to enhance user experience by allowing
replace ` remove ` with ` removeIf ` for listener removal to improve code readability and maintainability by using a more descriptive method
added a switch case to toggle the spin animation in PieChartActivity to enable users to interact with the chart with the spin animation feature
cloudstack - 2526 : kill vhd copy process when vhd be delete .
hbase - 25813 do n ' t normalize table that have quota ( pengcheng xiong )
updated import statements and added a resize method in AndroidInput . java to improve code organization and enhance input handling functionality
refactored the visibility annotations and added a new method ` propertyValuesOf ` to improve code readability and provide a convenient way to retrieve property
ignore clientmapnearcachetest that be always fail and blocking PRs
fix the hopperhock ' s apothecary ' s apothecary ' s apothecary do n '
refactor authentication dialog creation in SsoWebViewClient . java to use AlertDialog and EditText for username and password input to enhance user experience by providing
refactor TestStressIndexing2 to improve term document handling and add deleteDoc and deleteByQuery methods to enhance code clarity and functionality for
[ hotfix ] [ test ] ignore upsertkafkatableitcase for now
replaced ` pg . types . get ( j ) ` with ` pg . types . computeIfAbsent ( j ) ` for better performance to
added a configuration to accept single values as an array in DefaultEntityMapper to ensure proper handling of data types during deserialization
updated localization message to include support for BE , UK , and SL to improve user experience by providing clearer localization options
[ netbeans - 4071 ] use resourceutils . getstring ( ` ` cl . app . categories ' ' ) . split ( ' '
updated ASTBuilderVisitor to visitRelExpressionInstanceOf and added new test cases in FEELParserTest to improve expression handling and ensure correct parsing of
nifi - 114 : add mime . type attribute to gethttp and add it to the flowfile
fix transactionr5test . testconditionaldeleteandupdateonsameresource ( ) and testconditionalupdateonresource ( )
updated button click listener from exitButton to doneButton and added a searchable check in SearchBookContentsActivity to improve user experience by providing clearer
[ hotfix ] [ network ] fix typo in natsconfiguration javadoc
refactor invalidateStalePartition method to invalidateStalePartitions with an additional MetastoreContext parameter to improve code clarity and maintainability by encaps
make viewresultsfullvisualizer more efficient by use circularfifobuffer and unboundedfifobuffer
updated icon resources from ic _ group to ic _ chat _ bubble in UsersAndGroupsSearchProvider , ShareUserListAdapter , and UserListAdapter
[ java ] use buffer . getlongvolatile ( ) instead of buffer . getlong ( ) in broadcastReceiver
updated test method names in MocksCreationTest . java for consistency and clarity to improve readability and maintainability of the test code
added a constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
increased the timeout duration from 10 seconds to 30 seconds in the awaiter method calls to allow more time for the phaser to complete before proceeding
removed the ` BuildSlaveFinishedStatusEvent ` class and updated event handling in ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
vmware : fix utf - 8 encode issue when create vm template
add a test for depositing a workspace item without a workflow
( chore ) camel - core : use distinct ( ) instead of distinct ( ) for distinct classpath file
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to use contains for " - encoding " , " - string " , and " - templateDir "
added a check for external tables before deleting a directory in HiveMetaStore . java and implemented assertions in TestHiveMetaStore . java to ensure
updated asynchronous execution configurations and improved exception handling in HiveServer2 to enhance performance and provide clearer feedback on asynchronous operations
added a try - catch block around dismissing the dialog to handle potential exceptions when dismissing the dialog
refactor RequestResourceFilter initialization and add a new EXECUTE _ TASK _ ROLE constant in UpgradeResourceProvider . java to
added a variable for current conference information in OperationSetTelephonyConferencingSipImpl . java to store and store the current conference
add a clearentries ( ) method to the flutterlogtree to clear all log entry . ( # 4112 )
added checks for socket shutdown status in ChannelEndPoint . java to ensure proper handling of output and input shutdown scenarios
refactor SetNullableGenerator class to improve code readability to enhance maintainability and facilitate future updates
camel - 14105 : add support for servlet transport in camel - example - reportincident .
replaced specific imports with wildcard imports in NettyRoutingFilter . java and updated FormIntegrationTests . java to improve code clarity and ensure compatibility
added API operations with nickname " hello " and implemented it in multiple classes to enhance API functionality and improve consistency across service implementations
[ fix ] lwjgl3window . update ( ) should call lifecyclelistener . pause ( ) before applicationlistener . close ( ) .
updated the FG _ FK color from ( 0 , 90 , 0 ) to ( 0 , 200 , 0 ) to improve the visual appearance
set require audio format to false in soundmanager
refactor secondaryindexmanagertest to use system keyspace . getbuiltindexes ( )
pmd : add ' about ' and ' eclipse version ' label to the about page
[ hotfix ] [ test ] fix test failure in customserializationitcase
refactor MediaFormatUtil to improve code readability to enhance maintainability and facilitate future updates
added a method ` isCellEditable ` to the ` GeneralTab ` class that always returns false to provide a default implementation for cell editing functionality
added a new method ` isUnusedDependenciesOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and ` JavaBuckConfig ` to
added a temporary count variable in VocalTractModifier and updated vscales value in VocalTractScalingProcessor to track the number of
updated import statements in BaseScalarUdfTest . java and TestGenericUdfConcat . java to ensure consistent usage of the BaseScalarUdf
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
update testkinecontrolrefresh to use animcomposer instead of animchannel
rename nodefilter to nodecountfilter to make it more descriptive
updated the condition to check if the sync block size is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure that
updated debug expression state from 365 to 366 and modified type handling in DebugExpressionParser . java to improve clarity and maintainability of debug expression
updated dependency filtering logic in ExcludeDependency . java to improve accuracy in determining dependencies based on scope conditions
replaced ` tmp ( ) ` method with ` dst2 ( T v ) ` and updated the ` lerp ( T target , float alpha )
added default value to the ` args ` array in ` GridHubConfiguration . java ` to ensure that the ` args ` array has a default value
updated RustBinaryDescription to use ImmutableList < String > for linker arguments and changed the type of rustcFlags to ImmutableList < String >
simonstewart : fix test to work with travis and appveyor
added DAG name configuration to Hive configuration and modified log message formatting in GenericUDTFGetSplits to include externalDagName to enhance
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
do n ' t throw an ioexception when try to write a closed stream . no longer throw an ioexception .
updated the ` validateQuery ` method to include additional arguments as a parameter to improve error handling by providing more context in error messages
updated index version from 1 to 2 and refactored getTree method for clarity to improve code maintainability and reduce redundancy
[ hotfix ] [ kryo ] add unit test for kryoserializerregistrations
added null check before adding configTypesUpdated in BlueprintConfigurationProcessor . java and updated test assertions in BlueprintConfigurationProcessorTest . java to ensure
refactor boolean handling in MetaStoreDirectSql to utilize Apache Commons Lang to improve code readability and maintainability by utilizing Apache Commons Lang
added a call to hideCustomizationDrawer ( ) in mmm Launcher . java and ppp Launcher . java to improve user experience by hiding the custom
refactor TermVectorComponent to use a constant for warnings and simplify the handling of warnings in distributed queries to improve code readability and maintainability by
updated compiler logging to conditionally log optimistic types and improved log message formatting to enhance log clarity and ensure optimistic types are logged only when optimistic types are
refactor Expect class to improve code readability to enhance maintainability and facilitate future updates
added UnixSocketConfigurationStrategy to DockerClientFactory and integrated it into DockerClientFactory to enable Unix - based docker client access using Docker
added JUnit 5 @ Tag ( " flaky " ) test methods to CloseableDoSFilterTest . java and CloseableDoSFilterTest
( chore ) camel - reactive - stream : improve error message when there be no active subscription .
refactor Vectorizer to utilize TezWork instead of MapRedTask for processing MapWork to improve code clarity and ensure compatibility with Tez
updated constructor calls in StringAppender and LogDivertAppender to include an additional boolean parameter to ensure proper initialization of appenders in the logging framework
add null check for guipackage in jmetertreemodel . updatecurrentnode ( )
[ gr - 36486 ] fix linkage . isweak ( ) to return true if the function be weak .
refactor multiple classes related to XShareAuto , LoadClassNegative , LoadClassNegative , LoadClassNegative , and ReadFromNoaccessArea to
no effective change - add test for defaulttransactionthreadlocal
added a check for invalid operation handles in HiveStatement . java to improve error handling and logging for invalid and non - existent operations
fix ( core ) : fix typo in command name for drop column
camel - 15836 - camel - aws - secrets - manager - add integration test for aws secret manager component
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed exception message from the returned response in UserREST . java to simplify error handling by providing a clearer error message
modified the ` fromContent ` method to include a ` boolean subTree ` parameter to enhance functionality by allowing the creation of ` Result ` objects based
updated column width calculation in Sheet . java and added unit tests in TestHSSFSheet . java to ensure accurate column width calculations and validate functionality
added a configPath parameter to the Commands . less method call to provide additional context about the configuration path used for command execution
replaced ` Set ` with ` Collection ` in ` DotWriter . java ` and ` GraphExecutable . java ` to use a more general collection type
updated the SSHD image reference from a SHA256 value to a version 1.0 . 0 to ensure compatibility with the latest testing environment
server : do n ' t throw npe if hostid be null
refactor the key generation logic in DefaultGroupKeyGenerator to simplify the handling of single - value group - by columns to improve code readability and
updated the test method name from ` testSeekNegative ` to ` testSeekingExceptions ` and refactored the seek logic to improve clarity
fix recipes to use nbt bc instead of pluggate .
rename graphhopperconfig . put ( string , object value ) to graphhopperconfig . putobject ( string , object value ) .
updated visibility handling in CellLayout and refactored drag exit logic in DragController to improve code readability and maintainability by reducing complexity
updated the modify request body handling in ModifyRequestBodyGatewayFilterFactory and added a test for upstream request body is empty in ModifyRequestBodyGatewayFilterFactoryTests
added package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure proper access control checks in constructors , fields , and methods
changed log level from warn to trace for various log messages in LoggingHandler . java to improve logging granularity and reduce noise in logs
fix whiteblacklist handling of wildcard resource ( # 348 )
added options menu functionality for displaying images in GalleryActivity to enhance user experience by allowing users to view images directly from the gallery interface
refactor MongoDBServiceFactory to initialize the instance and service if it is null to improve resource management and avoid redundant calls to the builder method
added tests to prevent code formatting in inline constant mutators to ensure correct behavior of boolean values in mutants
added a blackhole to the decode method in RecordTest . java to enhance memory management during decoding operations
fix : update gapic - generator - java with mock service generation fix ( # 133 )
[ knx ] fix device thing handler to work with group address notation
removed the clear ( ) method call from dbManager . getWitnesses ( ) to streamline the code by eliminating unnecessary method calls
do n ' t throw prestoexception in jdbcpagesink . abort ( )
updated stack property handling in NativeError . java to use new functions for retrieving and setting stack to improve code clarity and maintainability by centralizing
removed a conditional check for path names starting with " . " in DrillPathFilter . java to simplify the code by eliminating unnecessary checks
renamed ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before running tests
updated the BOLDWEIGHT _ NORMAL constant value from 190 to 0x190 to correct the BOLDWEIGHT _ NORMAL value to improve
modified ` fThreadGroup ` to be volatile and made ` fLookForStuckThread ` final in ` Timeout ` class to ensure thread safety
reformatted code in ValueResultData for consistency to improve readability and maintainability of the code
update FuzzyQuery to use superclass ' s hashCode ( ) method instead of a static hashCode ( ) method to improve performance by avoiding unnecessary null checks
removed System . err . println statements from PushedResourcesTest . java to clean up unnecessary console output during tests
changed return types of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` and ` List < SharedRandomAccessFile > ` to `
updated JDBC driver version assertions from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest . java and SchemaCrawlerCoverageTest . java to
updated the principal retrieval logic to use a resolved principal and improved logging to enhance clarity and functionality of principal resolution process
changed log level from info to warn for various connection error messages in OpenWebNetBridgeHandler . java to improve log granularity for better
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to improve clarity and consistency in method naming
added a constructor to ` ThumbnailGenerationTask ` to handle null storage and image view reference to ensure that ` mImageViewReference ` is not null
updated the condition in GroupSelectionQuery to check if ` nrFound ` is within a maximum of 5 attempts to ensure that the loop does not exceed
added a new file ` Bug1933922 . java ` that implements a thread - safe method for retrieving program information to address bug 1933
removed unnecessary parentheses in multiple classes to improve code readability and maintain consistency
updated the validation condition to check for control characters 0 - 31 and space character 32 to ensure correct handling of control characters with space characters
added a call to requestFocus ( ) in the Display class to ensure the component receives focus to improve user experience
[ # 8842 ] instructorhomepageuitest : move test data to test / home page ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
replaced Crouton . cancelAllCroutons ( ) with Crouton . cancelAllCroutons ( ) in Detail
added a test method to verify schema query and fetch functionality in IoTDBSchemaTemplateIT . java to ensure correct handling of unrelated templates and
refactor Dialog class to improve code readability to enhance maintainability and facilitate future updates
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder . start ( args ) ` in ` SourceCompiler . java `
[ test ] fix hintedhandofftest failure on macos
refactor subsystem assignment logic to use a loop for processing controller names to improve code readability and maintainability by reducing redundancy
added assumptions to skip tests on macOS platform in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
jvmciversioncheck : add miss property check for java . vm . version . vendor
refactor Mockito class for improved readability to enhance maintainability and ease of understanding for future developers
refactor TestLargePageUseForAuxMemory class for improved readability to enhance maintainability and facilitate future updates
updated ` readAllBytes ` method in ` BinaryParser ` , ` PlainTextParser ` , and added charset handling in ` ParsingExecutionContextView `
added support for ` MultiPartFormDataCompliance ` in ` HttpConfiguration ` and created a new enum ` MultiPartFormDataCompliance ` in ` Request `
added JDK - 17 version number to GradleDistributionManager . java to ensure compatibility with JDK 17 in the project
refactor type addition logic into a separate ` addType ` method in ` SnapshotControl ` to improve code readability and maintainability by centralizing
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
updated the return statement to handle null or empty runWith cases to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4892 - add unit test for xaresource .
refactor multiple classes related to audio device and input handling to improve code organization and maintainability
pdf417 : fix a bug that could cause the test to fail .
replaced direct calls to ` setDimAlpha ( amount ) ` and ` setIconColorTint ( mTintAmount ) ` with a new
added a new file ` SumZeroFunctions . java ` to implement the aggregation function ` sum0 ` to provide functionality for summing zero functions
updated the ` id ` field in ` FirstValueFunctionIT ` and ` NthValueFunctionIT ` to be nullable to ensure consistency in data
hbase - 13232 add bucketallocationfailuremessage to help diagnose the issue of allocation fail in hfile
added a null check for propName before adding it to the properties map to avoid potential NullPointerException when propName is null
refactor ` StatusBarTouchController ` and ` RecentsView ` to use ` @ VisibleForTesting ` annotations and improve task removal logic to enhance
added methods to log a container stream and modified the logContainer method to accept a boolean parameter to improve flexibility in container logging by allowing indefinite stream access
add a performance test for mvstore cache performance
changed the string representation of LONG from " L " to " J " in PrimitiveType . java to ensure consistency with Java naming conventions
changed the method ` delegatingApplicationListener ( ) ` from instance to static in ` WebSecurityConfiguration . java ` to allow the method to
camel - 14284 : camel - rest should remove the body from the response so it do n ' t leak memory
added FileDeletingTasklet and TaskletFunctionalTests classes to handle file deletion in batch processing to enhance file management functionality and ensure proper functional
mow - 499 update size keep drawables in plane compositing , not just center and orientation
updated index references in BitUtil , Int2IntCounterMap , Int2IntHashMap , and Int2IntHashMap classes to improve code clarity and
updated ` sendEventToTest ` method to accept an integer state ordinal instead of a string tag to enhance test accuracy by incorporating state
added user agent checks for video thumbnail requests in MediaMonitor , RequestHandler , and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests
refactor error checker service to handle error cases and improve text selection logic to enhance user experience by providing clearer error reporting and improving error handling
updated button layout logic to differentiate between top and bottom buttons based on the user ' s theme settings to ensure proper layout behavior based on the user '
added " libskia " to the list of supported libraries in Skia . java to enhance compatibility and support for additional Skia libraries
added a constant for " com . google . bitcoin . unittest " in NetworkParameters . java and updated the return statement in NetworkParameters . java to
added error handling for invalid format arguments in QueryCommand to improve user experience by providing clear feedback when no format arguments are specified
refactor IntIterator to use length instead of capacity for better clarity to improve code readability and maintainability by using a more descriptive variable
updated ` walkRuleAndAdd ` method to include ` srcTarget ` as a parameter and modified dependency traversal logic to ensure dependencies are visited correctly based
add support for override module name in module file patch
[ java ] remove unnecessary check for protocol _ major _ version in election .
added conditional logic to set the default policy for SAML authentication to ensure proper client behavior based on authentication type
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that required resources are provided when building a ReadBatch and WriteBatch
replaced try - catch block with a utility method to close resources to improve code clarity and reduce redundancy
refactor AnonymousAuthenticationFilter to utilize a Supplier for deferred context handling to improve flexibility and clarity in managing security contexts during anonymous authentication
updated the removeActor method to include an unfocus parameter to ensure proper parent - child relationship management when removing an actor
refactor cloudConfig prompt to use a validConfigs variable to improve code readability and maintainability by reducing redundancy
added logging functionality and modified response handling in NettyHttpServer and RoutingInBoundHandler to enhance server performance monitoring and logging capabilities
refactor multiple classes including DatumAliases , AbstractParser , Formatter , Formatter , and Parser to improve code organization and maintainability
replaced direct call to update ( ) with SwingUtilities . invokeLater ( update ( ) ) in CodeDependenciesPanel . java to ensure UI updates occur on the
camel - 14284 : refactor groovyexpression to make it easy to create a script from a class .
[ mng - 7342 ] remove dependency on maven - plugin - plugin in favor of maven - plugin - plugin
[ hotfix ] [ python ] make clioptions . java and programoptionsutils . java public
replaced ShadowSharedPreferencesEditor with TestSharedPreferencesEditor and added a TestSharedPreferencesTest class for testing SharedPreferences functionality to improve testability and ensure
remove useless debug code in httpsmesender . java
added error handling for response conversion in HttpCommandExecutor to improve robustness by catching potential ClassCastExceptions during conversion
changed access modifier of updateImage ( ) methods from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the
add miss patch for dropresource ( # 4988 ) ( # 4988 )
added native methods ` hasSpatialLocationCalculatorConfig ( ) ` and ` getSpatialLocationCalculatorConfig ( ) ` to ` DataOutputQueue ` and `
[ java ] fix typo in javadoc of communitydetection , gsa , pagerank , and sourceshortestpaths
replaced the ` keySet ( ) . isEmpty ( ) ` method with a new ` isEmpty ( ) ` method for better clarity to improve code readability
updated foreground and background calculations in AttributedStringBuilder . java to improve clarity and consistency in foreground and background rendering
updated PeerSync to conditionally enable fingerprinting based on system property to ensure that fingerprinting is only enabled when the system property is set to true
changed the visibility of the moveFunds method from private to public to allow external access to the moveFunds method for better usability
replaced ` BeforeConvertEvent ` with ` BeforeConvertEvent ` and added a test for ` PersonWithIdPropertyOfTypeUUID ` in ` MongoTemplate
fix flaky settransactiontest ( # 18389 )
close the input stream if it ' s null , to avoid memory leak .
replaced ` ApiBag . ExceptionWithErrObject ` with ` ApiException ` in ` TestCollectionAPIs . java ` to ensure proper handling of API
removed unnecessary whitespace in the configuration loading logic to improve code readability and maintainability
[ java ] remove longfsname from teammateslog message in test .
[ hotfix ] [ runtime ] fix checkstyle violation in externalworkerservice
[ homematic ] remove step field from hmdatapoint , it be no longer need
updated logging messages and added functionality to acquire and write shared locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity
[ hotfix ] remove redundant call to schedulejobs ( ) in baseschedulerserviceimpl
simonstewart : fix the lameness of the testgettextcontent test
refactor Logger class to use a ThreadLocal for better thread safety to improve performance by reusing Logger instances instead of static variables
added @ VisibleForTesting annotation to convertToCompilationUnit method and replaced JMockit with MockitoJUnitRunner in FunctionInitializer and FunctionInitializerTest to enhance test
added boxedTypeOrType method to handle primitive types and updated type checks in Infer . java and T6638712a . java
updated orientation handling in RecentsView and removed redundant initialization in TaskView to improve code clarity and ensure proper orientation state management
[ hotfix ] [ test ] do n ' t use liveregionserverthreads in testflushfromclient
added logic to clone and delete track details in TransactionExecutor . java to ensure tracking of changes to the original repository when contract details are present
updated token issue fee calculations to use dynamic properties instead of hardcoded values to improve flexibility and maintainability of the code by centralizing asset issue
refactor texture cache management by introducing URI - based clearing and cache management to improve cache management and resource management for textures based on URIs
refactor variable names for clarity in Blit . java and add a new Bug7049339 . java file to improve code readability and
added functionality to handle unselected styles in mmm Component . java and updated string width calculations in mmm Label . java and DefaultLookAndFeel . java to improve
updated various classes to initialize arrays with a size of zero and modified action list handling to improve memory efficiency and ensure consistent handling of action lists
removed the flags parameter from several method signatures in ShadowApplicationPackageManager . java to simplify method signatures and improve code readability
refactor PingRequestHandler class to improve code readability to enhance maintainability and facilitate future updates
remove test that do n ' t pass on api level below 25
refactor TradfriGatewayHandler to improve firmware version checking and logging to enhance clarity and maintainability of the code
refactor AjaxElementLocator class to improve code readability to enhance maintainability and facilitate future updates
updated BoxLayout to use DefaultLayout instead of InlineLayout and added a condition to check for " table - cell " display in DefaultLayout to enhance layout
updated JsonDecoder to handle different JSON token types and added a new test for field reordering to ensure proper handling of start and end arrays in JSON
updated the ` releaseLocation ` method to include ` removalCause ` as a parameter to improve clarity and functionality of the cache release process
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added two @ Test annotations to DroolsMvelParserTest . java to enable test execution for the DroolsMvelParser functionality
changed private fields to final in ContextRegisterListener . java to enhance immutability and prevent unintended modifications
refactor ObjectHashSet to accept a cacheIterator parameter and improve iterator initialization logic to enhance performance by reducing unnecessary object creation during initialization
added batch byte handling and validation in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure batch size does not
replaced ` Context . MODE _ WORLD _ READABLE ` and ` Context . MODE _ WORLD _ WRITEABLE ` with `
updated logging messages in JdbcProxyGenerator . java and added abort handling in JdbcProxyGenerator . java to improve clarity of log messages and enhance error handling
updated the method call in Workspace . java to use mState instead of getState ( ) and added accessibility support for accessibility features
updated log level from warn to debug for malformed edit messages in ProtobufLogReader . java to reduce log verbosity and improve performance during development
updated scope handling in UaaTokenServices and added a new test for persisting revocable tokens in UaaTokenServicesTests to ensure proper
updated AvailableJDBCDrivers and TestAvailableJDBCDrivers classes to improve test clarity and maintain consistency in naming conventions
[ jbpm - 5342 ] add executablecommand interface to allow execute command with a context ( # 118 )
remove jdbctableservice since it be no longer use
added padding getter methods in CellLayout . java and modified bitmap creation in Launcher . java to improve padding handling and optimize bitmap scaling based on the
added a conditional check for ` sb ` before initializing ` cands ` to handle cases where ` sb ` is empty to ensure that candidates are
updated ` SamlMetadataUIParserAction ` type to ` Action ` and added a null check in ` SamlMetadataUIWebflowConfigurer `
added a method to check if processes use a specified port in LdapMockMvcTests to ensure proper handling of LDAP ports during testing
log4j2 - 1349 change default shutdown timeout from - 1 to 0 .
updated URL filtering logic in Fetcher . java and modified refresh URL handling in HTMLMetaProcessor . java to improve redirect handling and enhance logging clarity for
updated SolrQuery to use " name : samsang " instead of " * : * " and changed the spell check query from " homer
updated Terminal and ThreadIO handling to support both old and new Console APIs to ensure compatibility with the Karaf Console API and improve code clarity
change visibility of getVerticesColors method from public to private and adjust initialization of mCol to enhance encapsulation and optimize memory usage based on
added a FileFilter to exclude timestamped reports directories and updated directory copy logic to enhance file filtering capabilities and improve code clarity
refactor tests in DataValidatorTest to use @ ParameterizedTest annotation and update method names for consistency to improve readability and maintainability of the test
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for the bindStatus variable in FieldUtils . java to ensure that a template processing exception is thrown when bindStatus is null to
removed debug print statements from JoglInput . java to clean up the code and improve readability
added a boolean flag ` allowExtractingPrivateFields ` and modified the ` readField ` method to accept it to enable conditional extraction of private fields
added a replacement for the device name in WebDataHandler to ensure the application uses the correct device name for better data management
refactor lookup handling in Platform . java to use MethodHandles for improved flexibility to enhance compatibility with Java 8 by using MethodHandles for method invocation
added a deprecated method ` weights ` and renamed the old method ` weights ` to ` weightsByDouble ` in ` ZParams ` to indicate that
added a Database parameter to multiple writeCustomHTML methods across multiple writer classes to enhance database handling capabilities during custom HTML writing operations
added assertions to ensure the index is valid and modified key deserialization logic to enhance code robustness and ensure proper handling of null values during key deserialization
updated exception handling in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and TransactionTrace to throw specific exceptions to improve
added a conditional check for the " org . netbeans . lib . profiler . heap . zerofile " property in AbstractLongMap . java
refactor logging and license key handling to use UI messages instead of stream output to improve code readability and maintainability by centralizing message sending logic
updated the buffer size from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java and removed a generic record in Hortonworks
added imports for ChunkListener , ItemReadListener , ItemWriteListener , and SkipListener in multiple Java files to enhance functionality and support for processing
refactored code formatting and improved property retrieval logic in AbstractProviderModule . java to enhance readability and maintainability of the code
removed unnecessary calls to getLiveDocs ( ) in multiple classes to simplify code and improve readability by eliminating unnecessary method calls
updated Test7005594 . java file to improve test coverage and functionality
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
server : do n ' t allow vms that have an ip address to map to a vm in case of an ip address
updated the handling of analog triggers in Gamepad . java to use MCOptionUtils and MCOptionUtils to improve user experience by providing feedback on
updated the ` iteratesOver ` method to accept ` Iterable < T > ` instead of ` Object ` and added a new test for it to
camel - 14284 : camel - http - add support for filter header in defaulthttpbinding
added assertions for various SQL queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure accurate results are returned for various stored procedure scenarios
added a new ` LargeValueFormatter ` class and updated ` BarLineChartBase ` and ` Chart ` to utilize it to improve value formatting
refactor character handling in CommentsParser to use a constant INNOCUOS _ CHAR to improve code readability and maintainability by avoiding magic
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform class to suppress warnings related to argument type compatibility
updated printLir call formatting in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency
added a TODO Auto - generated method stub in NullAssertionValidator . java to improve code readability and maintainability by eliminating unnecessary code
added RuleKeyAppendable support to DefaultRuleKeyBuilderFactory to support rule key generation for better rule management
added system profile directory creation and modified test setup and teardown methods in PmsConfiguration and DLNAMediaInfoTest classes to ensure the system profile
[ hotfix ] [ test ] fix checkstyle violation in testcontainersdockercmdexecfactory
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to use LongAdder for message counting to improve code clarity and maintainability by centralizing
added an " accept " attribute to the " image / * " dialog in ImageFileInputDialog . java to enhance user experience by allowing image files
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient instead of NodeBuilder to improve transport configuration and streamline client initialization
added witness class and witnesses class information to the ForkController to improve debugging by providing more context about the witness and witnesses classes
added a new test class ` NullPointerAndEmptyArrayTest ` to validate handling of null and empty arrays to ensure proper functionality of ` CustomURLClassLoader
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` from ` BaseIjModuleRule ` and updated ` IjProjectBuckConfig
updated UaaStringUtils to include a new method for constructing wildcard patterns with any character delimiters to enhance flexibility in wildcard pattern construction by allowing
added validation for table scan operator aliases in Vectorizer . java to ensure only one alias is processed to avoid validation errors
replaced MockitoJUnitRunner with MockitoJUnitRunner in WeatherQueryTest . java to ensure proper exception handling when retrieving the current geo location
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting values fail
refactor ` getLangs ` method to return a ` Set < String > ` instead of an array to improve language handling by leveraging
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency to improve code readability and maintainability
hbase - 25813 add prepare ( ) method to tablesnapshothandler to allow takesnapshot ( ) to throw exception
[ j2kt ] fix nullpointerexception in reference equality expression
added a test for verifying the modification of the HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the explorer endpoint behaves correctly
added a volatile boolean field ` isSuspended ` and modified thread state handling in ` Thread . java ` to improve thread state management and ensure proper
updated JavadocVisitor classes to replace Author , Since , and SerialData with Hidden , and modified Javadoc . Since , and Javadoc .
refactored code to use ObjectHelper for checking non - empty camelContextId and added two new test classes for ProducerTemplate and SpringRemotingTwo
removed multiple redundant @ Override annotations across multiple classes to improve code readability and maintainability
added module import handling in Java2TypeScriptAdapter and updated test assertions in EnumTests to improve module management and ensure correct usage of static fields in
fix xssfexporttoxml to use http : / / www . w3 . org / 2001 / xmlschema
added content description handling for badged app notifications in BubbleTextView to improve user experience by providing clearer feedback on badged app notifications
added mouse wheel support to the TestMouseWheelScroll class to enable dynamic scrolling behavior based on mouse wheel movement
pdfboxrenderer : close docactual and docexpected in visualtester to prevent resource leak
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests . java
[ fix ] do n ' t use vacuumenvironment . location . a when add agent to view .
removed currency conversion logic for DSH , QTM , and QTUM in BitfinexAdapters . java to simplify currency handling by directly
updated JsonFormat . java to use TreeMap for field printing and added a new option to always output default value fields to improve performance and flexibility in handling
remove unused code in jacksonxmlformatmapper . writevalue ( byte [ ] , byte [ ] . class )
added ` PARKED _ SUSPENDED ` and ` PARKED _ SUSPENDED ` constants and updated
updated DirectoryTaxonomyWriter and related classes to improve code clarity and consistency to enhance code readability and maintainability by standardizing variable usage
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
corrected the calculation of the Y - coordinate in BrowserContentPane . java to correct the vertical positioning of the content pane based on its height
pdfbox - 4071 : remove unnecessary throw declaration , a suggest by valerybokov
added unit tests for handling short and long support messages in ShadowDevicePolicyManagerTest . java to ensure security exceptions are thrown for security - related operations
ggb - 1856 close button do n ' t show menubar when click on the help button .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated ` BackendInitializerHelper ` and ` TerminalClient ` to use ` ThreadHelper . waitUntil ` and modified sleep duration in ` TerminalClient `
updated version handling logic in SwingStartup . java to check for exception and release status to improve error handling and ensure accurate version updates based on release status
add option to include generated file comment in migration xml
updated usage patterns in multiple Java files to allow wildcard usage for players to enhance flexibility in player usage instructions
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused filters to streamline the codebase
[ hotfix ] [ table - common ] use optionname instead of namevariablename in optionprocessor
added a condition to check if PARALLEL _ CLASSES is equal to PARALLEL _ CLASSES in TestNGContentHandler to ensure
http : / / issues . apache . org / jira / browse / amq - 4892 - fix the regression in the registration logic
refactor ( ctmethodimpl ) : remove static import of enums in ctmethodimpl
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ShibbolethCompatiblePersistentIdGenerator to accept a separator parameter and added a new test for SHA - 64 hashing to ensure correct
added a null check for the SYSTEM _ ACTIONS _ ENABLED parameter in Parameters . java and updated the condition in TestAction . java to
added a new class ` Person ` with a private ` name ` field to the ` org . apache . maven . it0074 ` package to
remove redundant localendpoint parameter from gossiper . start ( ) method
added a call to ` toUpperCase ( ) ` on the ` timeStr ` variable in ` AbstractClient . java ` to ensure consistency in string comparison
added assertions to validate ` timeColumn ` , ` timeUnit ` , and ` totalDocs ` metadata in ` SegmentMetadataImplTest . java `
updated foreground color from java . awt . Color to net . sf . openrocket . util . Color to ensure consistent color usage across the application
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper handling of disconnect
refactor : use annotation type instead of string to improve type safety
simonstewart : fix an issue with click on an element hidden by double overflow
added a try - catch block around dismissing the dialog to handle potential exceptions when dismissing the dialog
add system property jbpm . tsr . jndi . lookup to allow use of custom jndi location .
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the method ` hasFunction ( String function ) ` from the ` Library ` class to simplify the code by eliminating unused functionality
rename ` enabledCiphers ` to ` result ` for clarity to improve code readability and maintainability by using a more descriptive variable name
[ beam - 10297 ] fix timestamp conversion for bigquery ( # 10223 )
replaced ` if ( null ) ` with ` requireNonNull ( null , null ) ` in ` Identifiers . java ` and ` DatabaseConnector . java
fix a typo in valuesresolver . coercevalueforinputobjecttype ( ) .
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that the row and column indices do not exceed the table '
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure the scroll selection is visible during the motor
[ java ] unnecessarylocalbeforereturn : fix false positive on unnecessarylocalbeforereturn
refactor script engine initialization to use a single variable for better clarity to improve code readability and maintainability by reducing redundancy
remove unnecessary nan check in euclideandistancesimilarity . calculatecorrelation ( )
do n ' t run incremental backup if sstables be null
updated relativize method to accept both base path and input paths to ensure that extra dots are not added to path relativization
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve clarity and functionality in handling column size and decimal digits
[ hotfix ] [ test ] skip current writer head file 1 . log . tmp
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpcImpl
renamed ` ErrorHandlerController ` to ` Error403Controller ` and created new ` Error404Controller ` and ` Error404ControllerTest ` classes
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and WindowsTerminal classes
fix ` ` netbeans . java . collection . toarray ( ) ' ' and ` ` netbeans . java . collection . toarray (
refactor connection acquisition logic to use an iterator for cleaner code to improve code readability and maintainability
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` in multiple classes to improve clarity and consistency in naming conventions
pdfbox - 4071 : do n ' t throw an exception if the destination file do n ' t contain the id _ tree
updated error message format in JavassistUtils . java to include the class loader context to improve debugging by providing more context in error messages
added exception handling for reader and writer exceptions in LargeStreamletTest . java to improve exception management and ensure proper thread join timing
updated the way extra pages are displayed in the HomeFragment based on user preferences to improve user experience by allowing dynamic page navigation based on user preferences
added error handling for image creation and Gaussian blur detection in AndroidImplementation . java to improve robustness by preventing crashes due to Gaussian image processing
added ` @ SuppressSubnodes ` annotation to ` BaseParser . java ` and updated return statements in ` ImplicitActionsConverter . java `
refactor FDFParser instantiation to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed in the project
added a shell command to execute a key event in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to ensure the
added functionality to map output file names to URLs in FileDumper . java to facilitate the mapping of output file names to URLs for better
bugfix # 21106 , reset profilerserver ' s resultnotified flag when profilerserver be stop .
change texturehelper . gettexturefromimage ( ) to loadimage ( ) and add loaded feature to blendercontext
updated application ID assertion from " application : " to " application " in multiple test files to ensure consistency in the context ID format
updated random number values in RandomizersTest . java from " 9781797745008 " to " 9781797845005
added a ringtone URI to the notification sound setting in AlarmReceiver . java to allow customization of the notification sound based on user preferences
added a method to report loop count in the RootNode class to ensure proper handling of loop count reporting in the call target
added a condition to finalize the cluster version in FinalizeUpgradeAction . java and modified cluster entity merging in ClusterImpl . java to ensure proper version
updated the search condition from " rangeId " to " regionId " in the PortableIpDaoImpl class to ensure the query retrieves the
removed duplicate calls to streamManager . open in ItemOrientedStep . java to improve code clarity and maintainability
added a new file CountedLoopProblem . java that implements a counted loop implementation to provide a structured way to test and verify the hash code of
[ gr - 26475 ] remove unused varargs parameter from executecompiledmethod ( )
[ gr - 36444 ] fix getfieldoffset for graalhotspotvmconfig . pendingfailedspeculation .
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to enhance tracing capabilities by using ValueTransformerWithKeySupplier
add received point to the list of answer to the constant sum question
added DynamicColors . applyToActivitiesIfAvailable ( this ) to the BaseApplication class to enable dynamic color application for activities when available
added thread management and stack dumping functionality in CloseRace . java to improve thread management and error handling for child threads
updated the return statement to use ` val . intValue ( ) ` instead of ` val ` in ` IntPointField . java ` and added new
updated arcSize from an integer to a double and adjusted related calculations in MyButton . java to improve the visual representation of the arc size based on
updated image dimensions from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to improve image quality
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` and update related methods to improve clarity and functionality related to whitespace handling in SQL
removed the ` waitForStateTransitionToEnd ` method from ` AbstractLauncherUiTest ` and refactored state transition handling in ` WorkProfileTest
added imports for ` CasCoreConfiguration ` and ` CasCoreHttpConfiguration ` in multiple test classes to enhance configuration handling and improve code
replace raf . readLong ( ) with dataIO . readFully ( buf ) for byte array reading to improve performance by using byte array reading instead of
camel - 14297 : camel - http - optimize to reduce log noise .
refactor ClasspathInfo creation to use a local variable for the module boot path to improve code readability and maintainability by encapsulating
automation : add a scriptscopeprovider to control the scope of audio and voice
added methods to retrieve and set the layer manager in the AnimComposer class and updated AnimEvent and TestJaime classes to improve layer
added a check to return early if the queue is empty to avoid unnecessary processing when no items are available
added null checks for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve error handling and provide clearer
refactor center and center2D handling in CylinderRegion . java to improve clarity and functionality to enhance code readability and maintainability by
refactor error handling in TestBadUseCases to use JUnit ' s ExpectedException rule instead of a static try - catch block to improve
added null check for subqueries in QueryExecutorImpl . java and implemented a new test method in StatementTest . java to ensure proper handling of parameters
do n ' t try to customize the security environment if it be already customize
added a new query parameter ` & rctag = android% 20app% 20edit ` to the API endpoint to enhance the API functionality by allowing
updated test cases in mmm Test . java and ppp Test . java to improve test coverage and ensure accuracy
updated PBEKeySpec to use keyLength instead of blkSize * 8 to ensure the correct key length is used for password encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
pdfbox - 4071 : add writesectiondefinition ( ) method to rtfdocumentheader , a suggest by valerybokov
added distance calculation and error handling for location accuracy in GpsLoggingService . java to improve accuracy checks and prevent excessively large jumps in GPS
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up code and improve readability
doc : generate sample code in the java microgenerator ( # 241 )
refactor InsightFilter class to use WeakReference for rootNameFn and sourceFilterFn to improve memory management and prevent potential memory leaks
removed binary search for app names in AllAppsList . java to simplify code by directly adding elements to the data list
refactor SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and remove the unused ThemedPreferenceActivity to simplify the activity structure and improve
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to accurately reflect the purpose of the class
removed unnecessary whitespace in assertRootArcs ( ) method call to improve code readability and maintain consistency
added an assertion to verify the existence and type of the security policy in JstatdTest . java to ensure that the security policy is valid and
camel - 15836 : camel - olingo2 - add miss getconfiguration ( ) method to camel - olingo2 - camel
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution during testing
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception details
added ` ` sendimagebyhttp ' ' and ` ` publishxmppimagebyhttp ' ' method to ` ` xmppclient ' '
camel - 14284 : camel - netty - producer should not have a channellocal so we can reuse it .
updated URL pattern in BalancedClickhouseDataSource to allow hyphens and hyphens in JDBC connection URLs to enhance flexibility in URL parsing for
remove the system property ` ` org . apache . jasper . compiler . disablejsr199 ' ' in favor of ` ` org .
added support for handling null string values in CSVRecordReader and CSVRecordReaderConfig to enhance CSV functionality by allowing users to specify null values for CSV
added ` @ LiquibaseService ` annotation and ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to skip
updated the cursor type in VariableNameUtils to use JavaSourceFile instead of J . CompilationUnit to ensure compatibility with Java source files by using the correct
updated event topic handling in ItemCommandTriggerHandler and ItemStateTriggerHandler to include the item name to improve clarity and organization of event topics in the
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve exception handling by
deprecate zkcredentialsprovider in favor of zkaclprovider and zkcredentialcredentialsprovider in favor of zk
remove mana bar from mana tablet , and add displaydurabilitybar to mana tablet .
added a method to set the identifier collection in the P25P2DecoderState class to ensure that the current call event has the correct identifier collection
removed the import of HyphenationCompoundWordTokenFilter from TestRandomChains . java to streamline the code by eliminating unused imports
removed the prefix " - % d " from the thread pool name in ScryptUtil . java to simplify the code and improve readability
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix npe in typedefinitionregistry . remove ( )
removed the shareWithMeIcon view from LocalFileListAdapter . java to hide the sharing icon when not needed
updated link to use HTTPS instead of HTTP in multiple filter classes to enhance security by ensuring links are secure
updated RouterFilter and RouterServerListFilter to enforce non - null headers and changed service loading method to use emptyMap ( ) instead of null to improve
updated assertion to include detailed context in TestIndexWriterMergePolicy . java to improve debugging by providing more context in assertion messages
[ hotfix ] [ network ] deprecate some class that be no longer in use .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 464 : do n '
added security checks to the getJspApplicationContext method to enhance security by restricting access to JSP applications based on security settings
updated the calculation of the length in RocketComponentConfig . java to use minimum and maximum values for component dimensions to improve accuracy of component length calculations
removed Singleton annotation from NonceService and updated OpenIDAuthenticationProviderModule to use Scopes . SINGLETON to enable dependency injection for Nonce
[ java ] update child link in filewrapper . updatechildlinks ( ) .
refactor method signatures in SpringCloudPlugin . java for consistency and clarity to improve code readability and maintainability
increase timeouts to reduce test flakiness
added a new boolean variable ` mShiftCodesAlways ` and modified the logic for determining ` mShiftCodesAlways ` to ensure ` mShiftCodes
[ hotfix ] [ test ] make isleader ( ) synchronize on the leader election manager .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated filtering logic in AbstractKerberosDescriptorContainer to use isReference ( ) instead of isName ( ) to improve clarity and maintainability of identity validation
updated method signatures in ArtifactCacheFactory and related classes to use a boolean noop parameter instead of AbstractCommandOptions to improve code clarity and maintainability by
added a sleep delay of 3000 milliseconds in TestListenTCPRecord . java to ensure proper timing during exception handling
refactor argument handling in PatchExtensionMethod . java to ensure consistency in argument copying to improve code readability and maintainability
replaced Map < String , RawNativeLibraryImpl > with Set < RawNativeLibraryImpl > for managing loaded libraries to improve performance and simplify library management
added namespace support for ' apply - sequence ' and ' ignore - send - failures ' attributes in DefaultRouterParser and AbstractChannelNameResolving
removed the x509PublishUrl and related methods from ClientKeyPublisherMapping and JwkViewResolver classes to streamline the handling of X.509
updated the handling of the SolrIndexReader in QueryComponent . java to ensure the first reader is used when no readers are provided to avoid potential null
added support for the " min " and " max " functions in ValueSourceParser to enhance functionality by allowing maximum and minimum value calculations
removed conditional check for focus and pointer events in Container . java to simplify the return logic for better readability and performance
removed unused variables and modified the next ( ) method signature in TokenSources . java to improve code clarity and eliminate unnecessary exception handling
cloudstack - 6353 : add user _ id column to the list of user ' s vlans in the db
added ConditionalOnWebApplication annotation to CasMultifactorAuthenticationWebflowConfiguration and modified CompositeProviderSelectionMultifactorWebflowConfigurer to use ObjectProvider
updated database connection settings and refactored SQL command handling in WriteJdbcPTest . java to enhance database connection management and improve code readability
removed conditional check for the " editor . laf " setting in DefaultPlatform . java to simplify the code and improve readability
refactor code to remove redundant calls to getStateEntity ( ) in ServiceComponentHostImpl . java to improve code readability and reduce redundancy
simplified margin calculations in FloatingTaskView . java for RTL support to improve code readability and maintainability by removing conditional logic
added a condition to break if the application is not running in RootFolder . java and updated the status line in NavigationShareTab . java to improve
bugfix # 241 , do not increment threadid in cpucallgraphbuilder ( # 244 )
use default toolbar instead of hardcoded 0 for perspective . probability
added NetworkAddressChangeListener implementation and improved logging messages in HomekitImpl . java to enhance network address management and provide clearer error reporting
replaced lease retrieval logic with leaseRenewalTime handling in TestHDFSEventSinkOnMiniCluster . java to ensure that lease renewal is validated
added ` linkStyle ` and ` prefixHeader ` to ` arg ` in ` CxxLibraryDescription . java ` to enhance the argument configuration by
added null check for the message in ExceptionHandlerRegistryFactory and created a corresponding test in ExceptionHandlerRegistryTest to improve error handling by preventing potential NullPointer
updated the ` nextID ` variable to be ` volatile ` and modified the ` getSize ` method to use ` nextID ` instead of ` index
make test more reliable by wait for message to be receive .
added ` HasSourcePath ` interface and updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and `
removed unnecessary StringBuffer creation from IllegalArgumentException in Arrays . java to simplify error handling for better readability and performance
added custom index field handling for " tag " in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to enhance the functionality
updated the ` toEpochMilli ` method to handle negative seconds and added unit tests for the ` Instant ` class to ensure accurate conversion of time values
updated OGLESShaderRenderer and LwjglRenderer to use ` getAttribute ( ) . name ( ) ` instead of ` getAttribute ( )
added logic to block update scripts in CopyPaste . java to ensure scripts are blocked during application updates
added a new file ` TestCMoveLimitType . java ` for testing loop behavior with ByteBuffer and CharBuffer to facilitate testing of move limit types in
do n ' t reset temporal attribute in channelstate when recording be disabled .
camel - 14297 : sql stored sql parser now support scale token in sql stored template . thanks to daniel for the patch .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to align the code with the
refactor console creation and version printing logic into a separate method to improve code readability and maintainability by reducing duplication
updated token validation logic in InputStreamBinder and NextcloudRequest classes to use a new encryption utility to enhance security by using a secure hashing algorithm for
added EOFException handling in Http11InputBuffer . java to improve error handling for end - of - file conditions
added unit test for delete member from a group in the defaultgroupprovider
( chore ) camel - core : remove unnecessary object [ ] usage
deleted the V2ReplicationProtocol . java file to remove unused replication protocol implementation
updated references from ` ImmutableSortedSet < BuildRule > ` to ` ImmutableSortedSet < SourcePath > ` across multiple classes to improve clarity and
added new classes ` ConstructorArgsDemo ` , ` StupidFinal ` , and ` StrictDemo ` , and renamed ` Stupid
make directtemplatefeaturecollectionfactory thread - safe to close iterator
updated the assertion condition in WriteResponseHandler to allow a maximum of 2 responses to ensure that the response count does not exceed the specified replication factor
added a null check for the index number in the ItemRowAdapter to avoid potential NullPointerException when accessing the index number
corrected the spelling of " ShowAncestors " to " ShowAncestors " in multiple classes to improve code readability and maintain consistency in
added a check to return early if the app width is less than 12 to ensure that the application does not proceed with large data sets
updated equality check in ChangeLogParameters . java and added a new test in ChangeLogParametersTest . java to ensure correct comparison of change log parameters
changed loggers from static to final in LogFactory . java to ensure that loggers cannot be reassigned after initialization
updated return statement to use getBasePlot ( false ) instead of p to retrieve the base plot directly to ensure that the method retrieves the correct plot
do n ' t log warn when upload directory do n ' t exist
added a boolean parameter to the ServerGenerator , HttpTransportOverFCGI , and ServerFCGIConnectionFactory classes to control the handling of HTTP status
added a check for non - empty comment length in the Space . java file to ensure that the logic only executes when there is a valid comment
added imports for BuckFileType , FileTypeManager , and FileTypeMatcher , and modified file type handling in BuckModule . java to ensure
replaced specific function imports with a wildcard import and changed return types from ToLong < T > to ToInt < T > in Composed
added error handling for RTM unsupported CPU and OS version in command line option tests to improve clarity of error reporting for unsupported RTM locking options
reformatted code in AccountsActivityTest . java for consistency to improve code readability and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added a static method ` mockitoPackageImport ( ) ` to ` AbstractModbusOSGiTest ` to retrieve the class type to facilitate testing
fix index out of bound exception when check for guest to host reflective call
reset the system context in ShadowFontsContract . java and reset the system context in AndroidTestEnvironment . java to ensure proper context management and prevent
added a method to convert a number of milliseconds and adjusted date handling in TimeGranularity . java and PinotDataSourceMaxTime . java
refactor control flow handling in ControlFlow . java to improve clarity and control flow analysis to enhance code readability and maintainability by simplifying control
updated assertions in ` Assert . java ` and ` ArrayEqualityAssertTest . java ` to improve clarity of error messages for array comparisons to enhance
fix default click logic to return false instead of false .
corrected a syntax error in the index calculation in MeshBuilder . java to improve code readability and maintainability
nifi - 145 : remove redundant ` ` this . controllerserviceprovider ' ' field from processcontext
added handling for AP _ PROCESSORS _ ARG in KotlincToJarStepFactory and a test in KotlinLibraryIntegrationTest to
updated the RESCROLL _ DELAY constant and refactored page snapping logic in PagedView . java to improve code readability and maintainability
added shortcut permission checks and refresh logic in the Launcher and DeepShortcutManager classes to ensure shortcuts are only updated when necessary to improve user experience
added case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle the HISTORY _ SEARCH _ BACK
added null check for core name in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to ensure robust handling of null
added marker selection functionality to the NearbyMapFragment to improve user experience by allowing users to deselect markers in the bottom sheet
added error handling to print stack traces in FileSyncAdapter to improve debugging by capturing stack traces during error scenarios
refactor assertions in TestMemoryAwareness to use OutputAnalyzer for better error handling to improve test reliability by handling potential runtime exceptions more gracefully
added filtering logic to filter out idle load feeds based on application settings to improve performance by avoiding unnecessary feed processing when offline loading is disabled
log a warning if defaultdrmsessionmanager be use on wrong thread .
updated packageType , resourceCompressionMode , and resourceCompressionMode to use Locale . US and added a setPackageType method to AndroidBinaryBuilder to
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure consistency in MIME type usage across the
updated configuration file references to use INSTANCE . confFile instead of INSTANCE . confFile to ensure consistency in configuration handling by using the instance variable
removed a sleep statement from the waitUntilReadyAndTimeout method call in HostPortWaitStrategyTest . java to simplify the test by removing unnecessary sleep
updated the handling of distinct group counts from int to long in HiveExpandDistinctAggregatesRule . java to accommodate larger group counts and improve precision in
added multiple checks for headless mode in mmm Toolkit . java and ppp Toolkit . java to ensure proper handling of headless environments by throwing a
added a condition to check if the furnace can be smelt based on the recipe ' s world to ensure that the furnace
add ` ` move thread count ' ' to solver log to aid debugging
fix bug in r4 search when revinclude be set to true .
added a new test class ` Issue582Test ` for sorting features to address issue # 582 related to feature sorting in the map database
[ native ] add test for decimal overflow and division by zero
refactor LoadingCache class for improved performance to enhance efficiency of cache retrieval operations
added a new rule " AvoidNonConstructorMethodsWithClassName " to the NamingRulesTest class to ensure that non - constructor methods are excluded from the
simonstewart : add ability to check if an element be select or not
updated the view existence check logic in ViewExistsPrecondition . java and added a new method in DatabaseSnapshotGenerator . java to improve error handling and provide
refactor DOMUtil class to improve code readability to enhance maintainability and facilitate future updates
added translation calculations for Y , X , Y , and touch response in TaskViewUtils . java and implemented a logMatrix method in Utilities . java
changed FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a walk method to process arcs in TempFSTTermsReader . java and modified output handling in TempTermOutputs . java to improve
updated the ` create ` method across multiple augmenter factories to include ` SolrQueryRequest ` as a parameter to enhance the functionality of the augmenter
added SQL trigger checks and updated database queries in SingleTableMySQLTriggerTest . java to ensure proper handling of null values and validate that the announcement
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a dedicated setComparator method to improve code readability and maintainability by
updated expected query strings in PhoenixQueryBuilderTest to use double quotes around special characters to improve readability and maintain consistency in SQL syntax
added Spark initialization call to the init method in RequesterTest . java to ensure proper synchronization during the initialization process
added methods to retrieve and save total storage pool , fee , limit , and used in DynamicPropertiesStore . java to improve error handling and provide clear
added NinjaProperties handling and improved resource URL retrieval in AssetsController to enable dynamic configuration of file URLs based on development mode and enhance
updated mapMark key retrieval to use getMapMarkKey method to improve clarity and maintainability of map mark retrieval logic
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance the method ' s functionality to support token rewrite
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` classes to simplify method
updated file path handling in JxBrowserManager . java and added exception handling in FileUtils . java to improve logging clarity and handle potential exceptions during URL
updated image file creation logic to use ` . equals ( ) ` instead of ` = = ` to improve robustness by preventing potential null pointer exceptions
[ somfytahoma ] use thing . getuid ( ) instead of thing . getbridgeuid ( ) . getid ( )
[ hotfix ] [ test ] disable flaky test on github
update openwireconnectiontimeouttest to use keystore instead of truststore and truststoremanager
[ dynatrace ] log nan value if the weak reference to the backing object expire
added a method to remove a session ID from the session info to ensure proper cleanup of session - related data
updated HeartBeatHandler to set the hostname if it is null to ensure that the alert ' s host name is set if it is null to
replaced the boolean flag ` all _ flushed ` with ` return false ` for buffer clearing to simplify the logic for determining if the buffer is empty
kmodulexsdtest : move kmodule . xsd to org / kie / api / kmodule / kmodule . xsd
added unit tests for the seekTo method in ShadowMediaPlayerTest and implemented the seekTo method in ShadowMediaPlayer to ensure compatibility with devices running Android O
rename ` createTask ` to ` createThrowingTask ` across multiple classes to clarify the purpose of the task being created as a throwing task
added border settings for aQUA _ LAF condition in CloseButtonTabbedPane . java to improve visual appearance and consistency of the close button
updated HTTP request and connection settings in TSPTimeStampService . java and improved test assertions in TestSignatureInfo . java to enhance HTTP request handling and
jbrules - 2423 : add permission to the xstream class for kie - jbpm - jbpm
added error logging for non - generic diamond types in mmm Attr . java and ppp Neg12 . java to ensure proper handling of non - generic
[ hotfix ] [ table - common ] fix typo in reloptutil
updated validation conditions for setting id and value in Http2Settings . java to improve clarity and correctness of validation for setting values
deleted the file Issue664Test . java to remove obsolete test files to streamline the codebase
[ hotfix ] [ test ] remove unnecessary exception from sessionpooltest
[ geot - 5576 ] fix root object creation in geojsonwmsbuilder
updated PopupMenuButton to use selectedIndex . intValue ( ) instead of a method to improve code readability and maintainability
added a method to check if manually unstash can be performed in TaskbarStashController to ensure proper handling of state transitions during manual
camel - 14297 : camel - jbang - do n ' t use customid in route coverage helper
modified the ` getEventMismatchMessage ` method to accept a boolean parameter to control the timing of event mismatches based on the expected count to improve event
added a new file ` HeaderFixer . java ` to handle file processing and fix header files to implement functionality for processing and fixing license headers in
added first load broadcast permission handling in Launcher . java and updated app widget binding logic in LauncherProvider . java to enhance user experience by allowing
deleted the file ` SuperJumperAndroid . java ` to remove unused code from the project
[ flink - 20586 ] [ table - planner - blink ] fix broadcast join not work for distributed table
[ hotfix ] [ core ] remove obsolete keyvalueprovideraware interface
add miss item to the list of missing block when remapping
updated return statements to cast ` i ` to ` long ` in ` AtomicIntegerArray ` , ` AtomicLongArray ` , and ` AtomicReferenceArray ` to ensure
added caching for date and format records in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the URL query in RemoteAuthenticationEndpointTests to include username in the response to enhance security by ensuring sensitive information is included in the response
changed the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure proper handling of
added container info to the logging statement for the ALLAPPS _ EXIT event to improve logging detail for better debugging and tracking of app exit events
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
deleted the DeadlockTest . java file to the test class is no longer needed for the current implementation
updated marker handling logic and improved print statements in BugContentProvider . java and BugGroup . java to enhance code clarity and ensure marker existence checks are
added a new menu item to open a server in a browser and modified server handling logic to improve user experience by allowing users to open a server in
added semantic exception messages for output specification multiple times in SemanticAnalyzer . java to improve error handling and provide clearer context for semantic exceptions
updated the ` addEntryListener ` method calls to include ` EqualPredicate ` as a parameter to ensure correct behavior of the ` addEntryListener `
refactor CoordinateArraysTest to extend GeometryTestCase and add reverse tests for edge cases to improve test coverage and ensure correct handling of edge cases
corrected a syntax error in the setOpen method call to improve code readability and maintain consistency
added a boolean variable ` first ` and initialized it to false in ` TestPayloads . java ` to ensure proper initialization of the ` first `
replaced the enterOverviewMode ( ) call with a showOverviewMode ( true ) call to improve code readability and maintainability
added a line to set the destination for the message dispatch in NetworkRouteTest . java to ensure the correct destination is used for message dispatching
[ hotfix ] [ runtime ] return max _ value instead of min _ value for messagehandlerinterceptor
refactor variable declarations and suppress warnings in NestedArithmeticTest . java and AMD64FloatConvertNode . java to improve code clarity and maintainability
refactor HttpClientRequestImpl to simplify component addition and improve buffer handling in HttpTest to enhance code readability and maintainability by reducing complexity in buffer
updated the regex pattern for replacing " analysis - " with " ! solr - " in GetMavenDependenciesTask . java to ensure proper formatting of the
pdfbox - 4071 : use getcosstream instead of getdictionaryobject , a suggest by valerybokov
removed unnecessary print statements in ReferenceUtil . java to clean up the code and improve readability
use the query type to determine if a field be visible in the ` ` visible ' ' schema
added support for ` solidityNodeHttpJsonRpcPort ` configuration in multiple classes to enable dynamic configuration of the JSON - RPC Solidity port
added a type check for ` folder ` before removing it from ` mDragController ` to ensure that only ` DropTarget ` instances are removed from the
refactor stub jar creation logic into a separate method for better readability to improve code organization and maintainability by encapsulating the creation logic
added new features for the Setup wizard and Workflow helper in StartPageTopComponent . java to enhance the functionality and usability of the setup wizard and
[ hotfix ] [ cassandra ] fix typo in cassandradaemon . java
[ java ] remove unnecessary cast to boolean in onlinetestcase .
change return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository to ensure all user attributes are returned for user authentication
refactor idle timeout handling in HttpChannelState . java and add failure listener in ServerTest . java to improve error handling and ensure proper callback execution
changed the CreateEndPoint class from implementing Runnable and Invocable to extending Invocable . NonBlocking to ensure that the CreateEndPoint class extends the
updated TABLE _ HEADER _ SEPARATOR regex and added a new test for one - column header without a body in TableBlockParser . java to improve
updated return value from 320.0 f to 315.0 f in Camera . java to improve accuracy of camera intrinsics
added a preference for the " startonbootup " preference in GpsSettingsActivity and adjusted return values in Utilities and GeneralLocationListener to improve
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to improve security by using a more secure random number
updated error message in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to specify that null parameters are enabled to ensure accurate error reporting for
ignore scheduledmethodmetricstest due to race condition
refactor PinotFS methods to use PluginManager instead of PinotFSFactory to improve plugin management and ensure proper initialization of PinotFS instances
added locale - specific date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting across different adapters based on the application
added MetalLookAndFeel import and set it to UIManager in bug8032878 . java to enhance the visual appearance and usability of the application
refactor PingTask handling in Bot . java to improve thread safety and resource management to ensure proper cleanup of resources and prevent potential memory leaks
removed the message from the error object in GlobalErrorHandler . java to simplify error handling by using the throwable object directly
rename parameter ` module ` to ` from ` in ` ModuleTable ` , ` PackageTable ` , and ` ModulesHelperVM ` classes to
updated exception handling in PinotAdministrator . java to catch CmdLineException and added logging for exceptions to improve error handling and provide clearer logging for
replaced usage of ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and marked the ` hashCode ( ) ` method as deprecated
refactor ` CustomPlaybackOverlayFragment ` , ` ImageButton ` , and ` ImageButton ` classes to improve code readability and maintainability by
updated zoom level min and max values in BasicMapViewer . java from 10 , 20 , and 7 to 24 to adjust map zoom settings for improved
refactor adminUsers and adminUserGroups handling in DrillRoot . java to use ImpersonationUtil for user and group processing to improve code
replace AccessController with sm . checkPermission in UnixFileSystemProvider . java and WindowsFileSystemProvider . java , and modify assertCheckPermission method in CheckPermissions
added support for argument extraction in DelegatedClientAuthenticationAction to enhance service resolution by integrating argument extraction capabilities
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure immutability of
fix memory leak in tilesizechanger by destroy the cache instead of destroy it
removed redundant calls to removeAllViews in CustomPlaybackOverlayFragment . java and ensured all views are removed from the layout in InfoLayoutHelper . java
refactor the ` cleanEntriesForFeedsWithoutSubscriptions ` method to accept a list of feeds to improve code readability and maintainability
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to improve clarity
nifi - 10246 : make filebasedclusternodefirewalltest run in a temporaryfolder so that it do n ' t fail on window
fix for conic five point ( if not zero )
reformatted conditional statements in RandomAccessReader . java for consistency to improve code readability and maintainability
added @ SuppressWarnings ( " unchecked " , " vararg " ) annotations to Fields . java and MockitoBeforeTestNGMethod . java to suppress
refactor CImage class to improve image handling methods and add new methods for processing multiple images to enhance code readability and maintainability by encap
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to ensure compatibility with the updated ByteArrayComparable implementation
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity and consistency in naming convention
refactor equality checks to use ` Objects . equals ` for better readability and performance to improve code readability and reduce boilerplate code
refactor method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` across multiple classes to improve clarity and consistency in
added verification checks for default property retrieval in NinjaDefaultTest to ensure proper handling of various error and error scenarios in the application
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity and consistency in
updated padding values in DetailFragment . java and adjusted listViewPositionOffset in ListFragment . java to improve layout responsiveness and ensure proper
updated exception handling and added interrupt logging in ZkStateReader . java to improve error handling and ensure proper thread interruption handling
added null checks for field values in HttpFields . java and implemented a new test method in RequestTest . java to ensure proper handling of empty headers
cloudstack - 10715 : do n ' t allow static nat rule to be use in the specified network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure
remove extra empty screen from the workspace to improve user experience by eliminating unnecessary screens
added a fixedWidth flag and modified glyph width calculations in BitmapFont . java to enable flexible rendering of glyphs based on fixed width settings
removed the boolean parameter ` showTitle ` from the ` createFragment ` method and refactored related logic in ` ChangeLogFragment ` to simplify
added methods for preEvent , preTransition , postTransition , and error handling in AbstractStateMachineFactory to improve state machine functionality by encapsulating
refactor ConfigDescriptionProvider class to improve code readability to enhance maintainability and facilitate future updates
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf initialization in StorageBasedMetastoreTestBase to enhance compatibility with Windows and improve metastore configuration
added a boolean variable for counting facets in FacetComponent . java and updated test cases in TestDistributedSearch . java to improve code clarity and
updated the cache file path in CheckstyleReport . java to use the current build directory instead of the target directory to ensure the cache file is correctly
added functionality to stop Jetty and replicas in DeleteInactiveReplicaTest . java to ensure proper handling of active slices and improve error messaging
added a file name parameter to the ` newInstance ` method in ` FileActionsDialogFragment ` and updated its usage in ` OCFileListFragment `
added a constant for invalid direction and updated the condition for handling reorder direction in CellLayout . java to ensure proper handling of external mode scenarios and
updated fields in InnerTransferRequest . java and adjusted API path annotations in AccountAPI . java to improve clarity and consistency in API endpoint structure
fix sink stress test on slow machine
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to provide
replaced specific imports with a wildcard import and added additional visitIdentifier method implementations to streamline import statements and enhance type identification functionality
added action text color setting for action text in AuthenticatorActivity to enhance user experience by providing a more visually appealing action text
added a new method ` find ` to the ` Manager ` , ` StreamSupplierComponent ` , ` MockManager ` , ` MockManager ` ,
rename method ` addTestStepsForBeforeHooks ` to ` createTestStepsForAfterHooks ` for consistency to improve code readability and maintainability
corrected a typo in the test method name from " noArgMethodIsNotValid " to " validNoArgMethod " in multiple files to
added a method to cancel a client in the RpcServer class and modified the startDriver method to improve client cancellation handling to ensure proper resource management and
added support for implicit pre - coercion values in Skylark and related classes to improve the handling of implicit pre - coerc
initialized ` lastDisplayedUser ` to ` Optional . empty ( ) ` in ` FileDisplayActivity . java ` to ensure ` lastDisplayedUser `
added an ` findAll ` method to ` QueryDslMongoRepository ` and a corresponding test case in ` AbstractPersonRepositoryIntegrationTests ` to enhance
added null checks before calling stop ( ) on SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerException
defaultplannerbenchmark : exit warm - up loop in case of a failure
add xread pipeline api to multikeypipelinebase and multikeybinaryredispipeline to support xreadgroup and xreadgroup
[ java ] fix read byte count calculation in LinkedBufferInput and StreamInput classes to improve clarity and correctness of byte count handling
added WebSecurityCustomizer bean and modified security configuration methods in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance security configuration flexibility
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore . java ` to
added methods to register content providers in ShadowContentResolver and updated ContentProviderController to utilize this method to enhance functionality and ensure proper registration of ProviderInfo
updated the version parameter in the AttributeReader constructor to use ClassFile . Version to ensure compatibility with the latest ClassFile version format
[ java ] set keepalive to true in singleconnectionmanager .
[ java ] add optional multicastsenderflowcontrolsupplier to driver .
fix for nullpointerexception when draw locus with no point in 2d
added concurrency support and improved error handling in HttpServerTestBase , HttpServerTestBase , WebSocketConnectionD13 , WebSocketMessageD13 , and WebSocketGeneratorD13
simonstewart : allow selenium to take screenshots from the selenium . take . screenshot configuration
replaced JUnit assertions with AssertJ assertions in multiple test files to improve readability and leverage AssertJ ' s assertion framework
trufflelanguage : remove deprecated contextreference . getcontextreference ( ) .
initialize Throwable e to null and reset mocking progress in StubberImpl . java to improve error handling and ensure proper resetting of mock progress
updated error handling in Actor and Group classes to throw an IllegalArgumentException instead of breaking to improve code clarity and ensure proper exception handling for invalid actors
refactor location access handling in LocationPickerActivity to use LocationPermissionsHelper for user interaction to enhance user experience by allowing users to access location - related
http : / / issues . apache . org / jira / browse / amq - 4892 - add countermdb example
added CookieSpecs import and set cookie specification in requestConfigBuilder to ensure consistent cookie handling across requests
replaced a conditional check with a call to ` r1 . overlaps ( r2 ) ` to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering in AirspyTun
updated the ` ScrollingPanel ` and ` SystemInformationsButtonsPanel ` classes to include a monitoring URL parameter to enhance functionality by allowing users to
[ hotfix ] [ k8s ] remove unused config option ` ` kubernetes . service . create - timeout ' '
updated icon setting logic in NearbyListFragment to differentiate between " landmark " , " city " , and " empty _ photo " to improve
added a null check for the type ' s getPackage ( ) before accessing its properties in DefaultPackageScanClassResolver . java to avoid potential NullPointer
added a new file ` PrintInlining . java ` with a main method that prints " Passed " to provide a main method for testing
fix ( javadoc ) : fix parsing of nested brace in javadoc tag
[ java ] remove unused variable in archivetest . java
updated edges retrieval from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java ` to
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve readability
updated log message format from ` ` Invalid playback speed ' ' to ` ` Setting playback speed ' ' and added logging for playback speed settings to improve
add roomremoved event to chatroom when cluster be start .
updated the ' minimize ' attribute from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to align the test with the
added key configurations to the TextureHelper class to enable flipping and generating mips for texture generation
refactor PythonDslProjectBuildFileParser to use EventReportingProjectBuildFileParserDecorator instead of ProjectBuildFileParser to improve event handling
[ j2kt ] add normalization pass to enable normalization of library
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactoryTest `
[ hotfix ] [ test ] add visiblefortesting annotation to memorysegment
fix : add timestamp to consolesessionvo . getsession ( ) method
added a new file ` Hbs . java ` and ` HbsTest . java ` for Handlebars template processing to implement a custom Handlebars engine and
updated visibility handling for hint and incoming messages in ChatMessageAdapter . java to improve user interface responsiveness by hiding appropriate UI elements based on message
updated iteration from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to use ` values ( ) ` instead
simonstewart : add a test that waits until the alert dialog appear
added a null check for distinct column indices in ReduceSinkDeDuplication . java to ensure that the method does not throw an exception when
refactor MiscUtils to improve path handling and error logging to enhance code clarity and ensure correct file path resolution
regenerate client with updated copyright year ( # 4382 )
updated websocket bundle identifiers from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty - websocket
make samlauthenticator . getattributes ( ) return immutable map instead of unmodifiable map .
added functionality to set the modified state of SketchCodes in the editor to ensure the Sketches are updated correctly based on the saved program text
replaced instantiation of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return of ` bytes ` in multiple classes to
updated method call from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource . java ` to ensure correct timestamp retrieval from the result set
added a condition to check if the class name is " javax . naming . Context " in HtmlJndiTreeReport . java to ensure proper
refactor database options handling in StorageUtils to use a switch statement for better clarity to improve code readability and maintainability by consolidating options
updated edge type check from " double " to " mutual " in ImporterGEXF . java to correct the logic for handling mutual edge types
replaced a hardcoded constant with an import statement for FLAG _ SLIPPERY in StatusBarTouchController . java to improve code read
truffle : fix array dimension calculation in truffleconstantfieldprovider .
added methods to get and set the Google Drive folder path in PreferenceHelper and updated GoogleDriveJob and GoogleDriveSettingsFragment to utilize this new
ggb - 1387 : add option to shuffle suggestion on click , up , down , etc .
added @ Nullable annotation to method parameters in Truth . java to improve null safety by indicating that target parameters can be null
updated bitwise operations in ArrayUtil . java to correct bitwise operations to ensure accurate size calculations for array operations
added a new test class ApiExceptionTest and modified ClassInstrumentor to conditionally instrument constructors to ensure that the ApiException is properly handled and instrumented
added a synchronized multimap for waiting for ANTicompaction in StreamInManager and StreamInManager , and updated related methods in StreamIn
added a method to check if the keyguard is secure in ShadowKeyguardManager to enable testing of keyguard locking behavior on API level 23
added serialVersionUID fields to the StringDialog class to ensure compatibility during serialization and deserialization processes
[ fix ] grblutils . getgrblstatus ( ) do n ' t handle more than 3 overrides .
rename the method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionFor
added a condition to checkDrained ( ) in AsyncFileImpl . java and a new test in FileSystemTest . java to ensure that the drain
updated LIGHTS _ NUM , LIGHT _ INTESITY , and LIGHT _ INTESITY values in HybridLightTest . java
replaced ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` across multiple test files to standardize filesystem access across integration tests
replaced ` String path ` with ` PathWithLines ` in ` RuntimeOptions ` and ` CucumberFeature ` classes to improve type safety and
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from TEST _ DIRS array in PubRoot . java to clarify the purpose of the TEST _ DIRS
added a call to close the ParcelFileDescriptor object to ensure proper resource management and prevent memory leaks
added thread - local support for prefix index management in BasisLibrary . java to improve performance by reducing contention in a multithreaded environment
added debug logging for HttpConnection in TestDistributedStatsComponentCardinality . java to improve debugging visibility for HTTP connections during testing
added two calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure that ` IntList . java ` is immutable
added nullability annotations to the onApplicationEvent method in GrpcServerRunner . java and modified the URI creation in GrpcClientBuilder . java
updated package structure and refactored workDir method to use Supplier < Path > instead of a static method to improve code organization and enhance readability
invalidate the functions array only if it ' s valid .
added platform - specific handling for writing the manifest file on Windows to ensure proper formatting of the manifest file on Windows systems
updated priority in FindNullDeref . java from LOW _ PRIORITY to HIGH _ PRIORITY and added a new class RFE35
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and added null checks in ThingResource to improve null safety and prevent potential NullPointerException
change return type of masterjobcontext # createcancellationexception from throwable to runtimeexception
pdfbox - 4071 : do n ' t initialize stream when there be no cropbox
[ hotfix ] [ javadocs ] fix typo in managerbase
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to enable accessing All Apps from the system Task
refactor FragmentActivity initialization to use Robolectric ' s activity creation and resume methods to improve code readability and leverage Robolectric
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and added a new method ` getDecimalCoords ` in ` ShareActivity ` to
rename ABCase classes to TestABCase1 _ 1 , ABCase2 , and ABCase3 to improve clarity and consistency in class naming
renamed the parameter ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` method and added a null check for the blackhole address
refactored rocket event handler initialization in OpenRocketViewer . java to improve code clarity and ensure proper handling of simulated simulation changes
added a new file ChangeDependencyGroupIdAndArtifactId . java to change Maven dependency group ID and artifact IDs to facilitate the modification of Maven dependencies
refactored path handling in IndexingJob and added segment validation in SegmentChecker to improve code clarity and ensure only valid segment paths are processed
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure correct
refactor PreprocessorDelegate to use Suppliers for storing replacement paths and source paths to improve performance and readability of the code
rename ` JsonExamples ` class to ` Examples ` and update package documentation accordingly to improve clarity and consistency in naming conventions
added debug logging statements to the ViewExtractor class to improve traceability and troubleshooting during the extraction process
refactor FindsByLinkText class to improve code organization to enhance maintainability and readability of the code
added a new Main class that prints a message for the Java oop entry point to provide a demonstration of the Java oop entry point functionality
fix thread safety issue in sip account registration
removed redundant continue statements in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` to organize the test
refactor dependency handling in AndroidLibraryDescription by replacing ImmutableSet . Builder with Supplier for queriedDepsBuilder and exportedDeps to improve performance and reduce
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` for remoteContainsResults in ` DistBuildArtifactCacheImpl .
added charset extraction from content type in ExtractingDocumentLoader to ensure proper handling of character encoding based on the content type
updated SQL insert statements to use placeholder syntax and set values for id and username to improve code readability and maintainability by using placeholder syntax
fix a crash when open the player ' s inventory .
added support for ignoring transitive repositories in Maven execution requests to enhance user control over repository behavior during execution
removed duplicate declaration of BackgroundJobManager in ContactsPreferenceActivity . java to streamline dependency injection for better code clarity
updated ColorsActivity to extend AppCompatActivity instead of Activity to improve compatibility and support for newer Android features
[ java ] add null check for selection before call close ( )
added a condition to break a loop if the current index equals the string length and the matcher ' s start and end to improve performance by avoiding unnecessary
updated the @ IntegrationTest annotation to specify the server port to avoid port conflicts during integration tests
added a new UDF ` reverse ` to the ` FunctionRegistry ` class and registered it in ` FunctionRegistry . java ` to implement a reverse
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` in multiple classes to improve clarity and consistency in path
refactor Tracer class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] ignore rocksdbstatebackendreaderkeyedstateitcase for now
updated import statements in XMLChangeLogParserTest . java to use wildcard imports to simplify import statements and improve code readability
added synchronization and buffer clearing functionality in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety when modifying the buffer
updated forecast parameters from 0 to 60 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0
[ hotfix ] [ table - common ] fix test timeouts in abstractpageoperationtemplatetest
refactor RemoteTargetGluer and FloatingHeaderView to improve content animation and suggestion mode handling to enhance user experience by providing smoother transitions
refactor CucumberPropertiesParser methods to return a Stream of Collection < FeatureWithLines > instead of a Collection < FeatureWithLines > to
added support for livingwood and livingrock in the creative tab to enhance the creative experience by allowing users to customize their decoration
updated assertions in TestRadioButtons to use consistent parameter order to improve code readability and maintainability
added functionality to handle file sizes in RCFileCat . java and implemented a method to retrieve the number of rows in RCFile .
updated multiple classes related to the TriadicCensus , TriadicCensus , TriangleListing , TriangleListing
add checkndarray ( ) method to jnautils to avoid npe
refactor BlobServer class for improved readability to enhance maintainability and facilitate future updates
fixed bug 1180505 - unusedprivatemethod no longer report false positive on unused private method call from initializer
renamed ` lexicalScope ` to ` lexScope ` for consistency to improve code readability and maintainability
add test for sftp auto - startup
added methods to retrieve the level and item boundables in Node , Quadtree , AbstractNode , AbstractNode , and STRtree classes to improve
updated version parsing logic to handle minor version numbers correctly to ensure correct parsing of version strings based on the presence of a minor version number
updated the logging level from warn to debug for item tags and added a check for non - empty tags before adding them to ensure tags are only added
added methods ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and ` fromDateTime ` in ` DateTimeFunctions ` to enhance date
hhh - 17100 : avoid npe when disassemble a stringwrapperusertype . getparameter ( )
refactor Log4j2ConfiguratorServlet for improved clarity to enhance maintainability and readability of the code
replaced the creation of ` HiveException ` with direct return statements in ` StorageBasedAuthorizationProvider . java ` to simplify exception handling by directly returning the
updated the CC key format in CGoCompileStep . java and added a new test for C++ prebuilt dependencies in GoBinaryIntegrationTest . java
fix ( kubernetes - api ) : add buildable annotation to customresource . java
removed the @ Override annotation from mmm Only . java and ppp Only . java to ensure proper method overriding and improve code clarity
added timeout configuration for HTTP connections in HttpClientFactory to improve connection handling by allowing more time for connection timeouts
added new pipeline names to the PerBuildStateFactoryWithConfigurableAttributes and updated the event scope in RawTargetNodeToTargetNodeParsePipeline to
simonstewart : add support for disable all but trace method
removed the @ Singleton annotation from ApplicationController . java to eliminate unnecessary dependency on the singleton pattern
updated username retrieval logic in ShareActivity to handle OwnCloudAccount and handle potential exceptions to improve user experience by allowing dynamic username retrieval based on account
added imports for BatchStatus and BatchStatus , and a test for resuming paused jobs in JobLauncherTests to ensure that the job launcher correctly handles
add null check for cacheconfig in HttpSyncDataService . java and modify data refresh handling in DataRefreshFactory . java to improve code robustness
simonstewart : make the DockerSession public and move it to the LocalNode class to improve accessibility and organization of the code
fix compilation unit context to use the default package name .
pdfbox - 4071 : make nonsequentialpdfparser and nonsequentialpdfparser nonsequentialpdfparser
fix checkstyle violation in testdistributedlanczossolvercli
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate future updates
add more test to ensure that portletapplicationmap . getallkeys ( ) do n ' t return null
add dynamodbignorenulls support to nestedbeanignorenulls
add redissonautoconfigurationcustomizer interface to allow customization of redisson configuration
fix indicator . todouble ( ) and add test
add execincontainerwithuser ( ) and execincontainerwithuser ( ) method to containerstate , execincontainerpattern , and execin
refactored interestedInByteMessages and interestedInTextMessages assignments for clarity to improve readability and maintainability of the code
add a few more test for the semgrex algorithm
added a broadcast intent for CLEAR _ PULL _ UNREAD in HomeFragment . java to provide users with the ability to clear unread tweet
removed conditional checks for preGingerbread and scroller initialization in TouchImageView . java to simplify code for better readability and maintainability
add a ` ` flush ' ' method to defaultprofilevalidationsupport to make it easy to destroy
camel - 14284 : fix npe in abstractcamelcontext . vetostart ( ) .
added functionality to manage a FAB menu in ShareActivity to enhance user experience by providing easy access to map functionality
added an inline parslet implementation and updated date parsing logic in ToDateTokenizer . java and TestFunctions . java to enhance date parsing functionality and
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading scenarios
updated Swedish error messages to use " toppniv " instead of " det " for clarity to improve user experience by providing more accurate and
added checks for server check before binding and binding operations service in AuthenticatorActivity . java to ensure proper handling of server state during operations service binding
updated the method calls to use ` getBeginLine ( ) ` and ` getEndLine ( ) ` instead of ` getBeginColumn ( ) `
added ` waitFor ` method to ` CxxPreprocessAndCompileStep ` and implemented it in ` ManagedThread ` to ensure proper process termination and
added a new boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and modified ` CoreAuthenticationUtils ` and ` CasPerson
remove checkifloaded ( ) from defaultrecordstore , make maxSizechecker . getapproximatemaxsize ( ) public
added SSL protocol configuration and improved SSL context initialization in NettyWebServer to enhance security by allowing customizable SSL protocols based on configuration
refactor SetOnce to use AtomicReference instead of AtomicBoolean for thread - safe operations to improve performance and simplify atomic operations in concurrent scenarios
updated the key retrieval logic in QueryDslMongoRepository to handle null property cases to ensure that an empty string is returned when no path expression is
updated assertions in RoundRectBorderTest to use default and self references instead of hardcoded values to improve clarity and maintainability of the test code
update acceptance test to use bfttype instead of ibft
refactor : remove paralleltest , no longer need
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a length check for the ' sign ' array to ensure correct
updated conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` in ` ProcessInformationsPanel . java ` to ensure
replaced multiple instances of ` maxN ` and ` minN ` with ` greatest ` and ` least ` methods in ` MoreCollectors . java
added null checks and updated method calls in BitmexStreamingExchange , BitmexStreamingMarketDataService , BitmexManualExample , and Bit
added validation checks for lat and lon in GeoPointField . java and created corresponding test cases in TestGeoPointField . java to ensure that invalid
updated method names and variable names related to workflow file handling in OozieProxyImpersonator , WorkflowFilesService , and WorkflowFilesService classes
refactor ResponderId class to improve code organization to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to include a ` withDependents ` parameter to allow conditional addition of dependent tables based on the ` withDependent
added a condition to check the number of consecutive uploads without coordinates in UploadActivity and UploadPresenter to enhance user experience by informing users when multiple
added caching functionality and a new endpoint to view profile data to improve performance by reducing redundant query profile retrievals
refactor JpaMetamodelEntityInformation to improve property value handling and support for nested ID classes to enhance code clarity and ensure proper property value extraction
added index and table timestamp assertions in UpgradeIT and refactored method names in UpgradeUtil and ConnectionQueryServicesImpl to improve test accuracy
added default exception mappers for LoggingExceptionMapper , EarlyEofExceptionMapper , and ConstraintViolationExceptionMappers in AbstractServerFactory and Dropwizard
updated the method call to include a boolean parameter to indicate that the parameter should not be used in the constructor
updated the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter and modified its usage in the ` CPlatformWindow ` class
updated SQL command from ` FILE _ REMOTE _ ID ` to ` FILE _ TABLE _ NAME ` in ` FileContentProvider . java ` to
added support for the Stock tile skin in the Tile class to enhance the functionality and usability of the Tile class
fixed - commandasyncservice . getbuckets ( stringcodec codec ) do n ' t work with stringcodec . # 3131
add findunrelatedtypesingenericcontainer ( findunrelatedtypesingenericcontainer . class ) to typeframemodelingvisitor .
added ` BackProgressAnimator ` and refactored back animation handling in ` LauncherBackAnimationController . java ` to improve animation management and ensure
removed the ` final ` modifier from ` _ initialPageNo ` and added logic to update ` _ contentLimits ` based on the ` page
fix bug in JedisClusterCRC16 . java : use bitwise AND instead of bitwise OR to ensure accurate crc calculation and reduce the total operations
added comment parsing functionality to ` FormattedSqlChangeLogParser ` and a corresponding test in ` FormattedSqlChangeLogParserTest ` to enhance
remove the need to create a new jararchiver instance in maven - maven - plugin
replaced ` HumanReadableException ` with ` BuckUncheckedExecutionException ` in ` DefaultClassUsageFileReader . java ` to use ` BuckUncheckedExecutionException
removed redundant condition checks in TSServiceImpl . java and added a multiAggregationTest method in DaemonTest . java to improve code readability
added support for handling UNSIGNED _ BYTE and RGBA formats in GwtGL20 . java to ensure compatibility with GWT backends that only
added a new test method ` testDebugInfo ` and modified method invocations in ` PrintR ` , ` PrintR ` , and ` Var
added error handling for unmodifiableClassException in InlineBytecodeGenerator . java to provide clearer error messages when classes cannot be instrumented
trace class initialization trace on bytecode for debug purpose
updated the parameter name from ` queryLevelTimeoutMs ` to ` queryTimeoutMs ` in ` BaseBrokerRequestHandler . java ` to ensure consistency in
refactor TopicRouteService to use Caffeine cache instead of Google Cache to improve cache management and enhance error handling during topic route loading
mbtiles : make the mbtiles data source read - only
updated the regex pattern for INVALID _ SOURCE _ TARGET _ RELEASE and added a fatal error message in FailureLogAnalyzerTest to improve error handling
updated location intent creation logic in DetailFragment . java to ensure the location intent is available before creating a location URI to enhance user experience by providing
added null check for getInheritedParameterContexts ( ) in StandardParameterContextDAO to avoid potential NullPointerException when accessing inherited parameter contexts
refactor ClassLoader class to improve code organization to enhance maintainability and readability of the code
added origin response header handling in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure that origin response headers are correctly set in the
added a new instance of ProfileSettingDrawerItem to the GpsMainActivity to enhance user experience by providing additional profile settings
add a configuration attribute to enable xml validation in the servletcontext .
simonstewart : fix a bug in the firefox driver when execute a javascript string with ` ` return undefined ' ' .
added maxRows handling and error handling in IoTDBStatement . java to ensure fetch size does not exceed the maximum limit for performance optimization
[ flink - 18314 ] [ table - planner - blink ] fix sqlstreamtermination for filter action
added event handling for node and mouse click events in VizEventManager to enhance user interaction by allowing clicks between nodes and mouse clicks
refactor memory management in ManyToOneRingBuffer to use a dedicated method to improve code readability and maintainability by reducing duplication
replaced direct references to ` this . xorGroup ` with a reference to ` this ` in ` TerminalNodeMemory ` to improve encapsulation
remove unused method from LCDUIImageMonochromeBitmapSource . java to improve code clarity and maintainability
refactor SourcePathResolver to improve path resolution logic and introduce a new method for retrieving absolute paths to enhance code readability and maintainability by reducing
fix bug with dstu2 attribute in xml parser
changed the visibility of ` changeSchemeIfIsWebSocketUpgrade ` from private to static and modified the ` toUrl ` method to accept an encoded URL
add ` ` compile ' ' to all test suite configs ( llvm , nwcc , llvm )
refactor CxxPlatform retrieval logic into a separate method ` getCxxPlatform ` to improve code readability and maintainability by encapsulating
added imports for ` org . apache . lucene . index ` , ` IndexReader ` , ` IndexWriter ` , and ` Hits `
updated ConcurrentLinkedStack to handle null values and renamed methods for clarity to improve code readability and maintainability while ensuring accurate naming conventions
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes
added a null check for mDirectories before accessing its properties to avoid potential NullPointerException when mDirectories is null
added a condition to check if overview state is not enabled and the first layout is not first to ensure proper handling of gestures when the overview state
added multiple package - info . java files for various Lucene packages to provide clearer documentation and usage of backward codecs functionalities
added a text setting for the visible AutoLeveler panel in AutoLevelerTopComponent to improve user interface clarity by providing localized text
added optimization callback functionality to DirectUpdateHandler and DirectUpdateHandler2 , and implemented postOptimize callbacks in UpdateHandler to enhance performance by optimizing
updated decompressor and compressor initialization to include a dummy byte flag to ensure proper handling of compressed data during compression
removed the check ( user _ data ) method from Shaderc . java to streamline code by eliminating unnecessary checks
added a condition to check if the base is a local meta store in RetryingMetaStoreClient . java to ensure retry logic only executes when
updated exception handling logic in HeliosSoloLogService . java to include checks for TimeoutException and ConnectionClosedException to improve logging accuracy and
refactor Subject class to improve code organization to enhance maintainability and readability of the code
use weak reference hash map to avoid concurrentmodificationexception .
updated color distance calculation in HSSFPalette . java and added unit tests in TestHSSFPalette . java to improve accuracy of color distance calculations
chore ( regen ) : regenerate with update license year
simonstewart : add test for find element by id and add some more test
added a flags parameter to several methods in ShadowApplication , ShadowContextImpl , ShadowInstrumentation , ShadowInstrumentation , ShadowInstrumentation , and ShadowInstrumentation classes to
refactor FFmpegTest to use Mockito ' s Answer for BufferedReader to improve mock behavior to enhance test readability and maintainability by encap
refactor Ogg and OpenALMusic classes to use a previous input stream and manage memory more effectively to improve resource management and prevent memory leaks
replaced a hardcoded failure message with a constant to improve code readability and maintainability
updated anomaly failure and warning count check in DetectionMigrationResource . java to ensure both anomalyFailureCount and anomalyWarning
refactor BaseActivity and DetailActivity to use showToast method for Toast messages to improve code readability and maintainability by standardizing method
updated the request creation method in TracingFeignClient to include a request template to enhance request handling by incorporating the request template
updated LDAP handling in LDAPCertStore . java to improve name validation and error handling to enhance robustness and provide clearer feedback on LDAP referrals
refactor retain logic into a separate retain method for clarity to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test for item click functionality to improve clarity of the test ' s purpose
[ hotfix ] [ test ] remove unnecessary setup method from checkpointfailuremanageritcase
remove genericitemuiprovider since it be no longer use
add a select object to the selector box , so that it can be use by other selector box .
added JUnit 5 @ Isolated annotation to MetaInfConfigurationTest . java to indicate that the FileSystemPool accesses the static method of FileSystem
set the server connector ' s bind address to HTTP _ INFO . bindAddress in HttpServer . java to ensure the server connects to the correct bind
updated token validity settings based on grant types in DynamicClientRegistrationEndpoint . java to improve flexibility in token validation based on client grant types
add a clover instrumentation filter so that it do n ' t fail on java 8 .
added a new device type ZHIMI _ HUMIDIFIER _ CB2 in MiIoDevices . java and updated readme in
fix mineprocess . plausibletobreak ( ) to use the calculationcontext instead of the state interface
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added a check for empty repository information in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to log an error if the repository list is empty
updated the condition to check for missing values in the IntHashSet class to improve clarity and correctness of the logic
added Serializable interface to RuleAdministratorImpl to ensure proper serialization of RuleAdministrator instances
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 479 : allow
updated file paths in BaseG3dHudTest . java to include " knight . g3d " instead of " cube _ anim
updated code formatting and added error handling for solidifiedPosition in Manager . java to improve code readability and provide clearer error logging for invalid solid
hbase - 26105 fix npe in execresult . getvalue ( ) when value be null
added a new method ` hasAccess ` to check user access status and updated error handling in ` HttpServer . java ` to improve access control logic and
replaced the writeTo method with getStubClassBytes method in ClassMirror . java and refactored the stub class creation logic in StubJar . java
added a TextView to display the internal link text based on the file ' s type to improve user experience by providing clearer text for sharing links
updated the assertion in PredictionTest to use Locale . ENGLISH for accuracy to ensure consistency in accuracy formatting across different locales
changed the condition from ` = = ` to ` ! = ` for ` SATURDAY ` in ` ModelZooTest . java `
added methods to hide the IME keyboard in AllAppsContainerView and updated logging in LauncherAllAppsContainerView to improve user experience
add inmemory event store to eventhandlingconfigurationtest and sagaconfigurationtest
refactor BsdFileStore to utilize a new getmntonname method in BsdNativeDispatcher to improve directory handling and
add test case for issue # 1599 symbolsolver issue
added command syntax for spawning monsters with position parameters and improved error handling to enhance command functionality and allow for optional spawn arguments
added a minimum content diameter constant and refactored content area calculations to use this constant to improve code readability and maintainability by centralizing content
add debug scope to test for hotspotcryptosubstitutiontest and hotspotcompilertest
updated the directory creation from ` newDirectory ( ) ` to ` newMockDirectory ( ) ` to depend on Windows semantics to ensure compatibility with
added plugin check classes to UpgradeCheckRegistry and modified addColumnsToUpgradeTable method formatting to improve code readability and maintainability
refactor Environment class to improve code readability to enhance maintainability and facilitate future updates
added a BadApple annotation to the RecoveryAfterSoftCommitTest class to address a known bug related to SOLR - 7421
refactor home concatenation logic in CodenameOneImplementation . java and remove unnecessary warning in HashtableContent . java to improve code readability and maintainability
[ hotfix ] [ ts ] change flag _ ignore _ hdmv _ dts _ stream to flag _ enable _ hdmv
updated LiquibaseEntityResolver and XMLChangeLogSAXParser to utilize FileSystemResourceAccessor instead of individual resource accessors to improve resource handling and
added security property " jdk . tls . disabledAlgorithms " set to " " in ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS
updated ` CxxDeps . EMPTY ` to use ` CxxDeps . of ( ) ` instead of ` CxxDeps . EMPTY ` to
renamed ` expectedDirectory ` to ` actualStubDirectory ` and introduced ` actualFullDirectory ` for clarity to improve code readability and maintainability by
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name hint handling to check for empty titles before setting hints to improve user experience by providing clearer feedback when no folder information is available
updated ` loadClientByClientId ` method to include an additional parameter " uaa " to enhance client loading functionality to include additional client information for
changed access modifier of methods ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` from public to private in ` ShadowSQLiteDatabase .
updated string concatenation to handle isClosed state in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to ensure accurate representation of values when the system is
refactor MimetypeIconUtil for improved code clarity to enhance maintainability and readability of the code
corrected the spelling of " supportsViewFor " in multiple view provider classes to ensure consistency and accuracy in method naming conventions
added a test for negated instanceof in UnwrapParentsesTest . java and updated instanceof checks in UnwrapParentses . java to
add teleportation support to the location class .
replaced ` Base64 ` encoding methods with ` Base64Utils . encodeToUrlSafeString ` in ` TokenKeyEndpoint ` and its tests to
updated imports in TranslatorManagerHelper . java and modified Statistics . onGenerate method to report statistics instead of onGenerate to improve code clarity and
rename the interface from ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and consistency in naming conventions
added a null check for the getId ( ) method in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null
refactor ` setUpRevampedTweet ` and ` setUpRevampedTweet ` methods to improve handling of retweeter and muffled
updated UserProfileActivity to conditionally display the verified text based on the application ' s theme to enhance user experience by allowing customization of the verified
removed the instance variable and made timeDiffFromServer final in AbucoinsDigest . java to improve encapsulation and ensure thread safety
camel - 14263 : camel - mongodb - add autowired option to enable autowire on mongoconnection .
added a new parameter ` sourceIndex ` to the ` AttributeMapping ` class and updated related methods to support it to allow dynamic retrieval of the last
handle corrupt statistics in hivetransactionalhivemetastore when alter table ( sergey shelukhin , review by ashutosh ch
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to check the security status of user
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 7195 ] escape email in geoserver home page
move reflection from modulemanager . getregistry ( ) to modulemanagerimpl . getmodulemanager ( ) .
updated the JoinModeller class to use the number of features instead of a hardcoded value to ensure the output reflects the expected number of features
ggb - 2195 fix for stringindexoutofboundsexception in ggb
added checks for debug and trace logging before logging messages in SingleNodeKafkaResumeStrategy . java to optimize logging performance by avoiding unnecessary string concatenation
use playbackstatecompat . action _ set _ playback _ speed instead of action _ set _ playback _ speed
removed deprecated ' automatic ' separation warning and updated launch configuration settings across multiple classes to improve code clarity and ensure proper handling of launch stage configurations
tika - 205 : fix ascii and unicode length issue in msownerfileparser
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to compatibility issues with J
refactor MavenDependencyResolver to encapsulate lock file creation logic to improve code readability and maintainability by encapsulating lock file creation logic
updated version preference from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new sync interval configurations to
added a check to return null if the username equals FEDERATION _ USER to prevent unauthorized access to the FEDERATION _ USER constant
truffle : do n ' t convert truffleobject to truffleobject in executemethodnode .
removed the usage of Collectors . toList ( ) in the JakartaClientShutdownWithServerWebAppTest and JakartaClientShutdownWithServerWebAppTest
added filterattachable to logbackvalve so that it do n ' t fail if a filter do n ' t exist
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed unused import of Version from CreateIndexTask . java to clean up the code and improve readability
added logic to handle database indexing and schema updates in MissingPrimaryKeyChangeGenerator . java to ensure correct schema handling and improve compatibility with Oracle databases
updated exception handling in ` execute ` method to include ` MetastoreException ` and added a new test for invalid partition names to improve error handling and
[ hotfix ] [ kafka ] retry commit transaction in kafkacommitter
updated ForwardMessageToDLQActivity to include ReceiptHandleProcessor and modified receipt handle retrieval logic to enhance receipt handling functionality and ensure proper cleanup of
added a service list to DockerComposeContainer and modified the service execution logic to handle cases where no services are provided to improve service management and ensure correct
[ java ] use copyset ( ) to avoid concurrentmodificationexception in export . java and structcontextdecorator . java
removed HTML cleaning and XML declaration handling from FeedParser . java to simplify the code and improve readability by eliminating unnecessary dependencies
removed condition for app customization in Launcher . java and updated child layout retrieval in Workspace . java to streamline code logic and improve performance by
changed ` int ` to ` double ` in ` MeterRealtimeBodyDataDTO ` and related methods from ` int ` to ` double `
added a new JApplet class to handle file selection in a temporary directory to address bug 4150029 related to file selection to ensure proper functionality
added a boolean flag ` isSparkConfigUpdated ` and its getter / setter methods in ` HiveConf ` , modified ` SparkClient ` to
added ` getLongPressIndicator ( ) ` methods to ` AppIcon ` , ` AppIconMenuItem ` , and ` Launchable ` classes , and
added checks for polygon and spatial empty points in WKBWriter and updated test cases for POLYGON EMPTY to ensure correct handling of edge cases
refactor ` UnflavoredBuildTarget ` and ` AbstractUnflavoredBuildTarget ` to use ` UnflavoredBuildTarget
added a new file ` MultiplyByMaxInt . java ` containing a class ` MultiplyByMaxInt ` with a test method to calculate
updated search view behavior and drawer indicator settings in OCFileListFragment . java to improve user experience by enabling drawer indicator based on the current file
removed unused imports from TestRAMDirectory . java to clean up the code and improve readability
replaced FixedBitSet with BitSet in Automaton and Operations classes to improve performance by using a more efficient bitset implementation
drools - 139 dmn evaluator : improve error message when no expression define for a node
replace ` @ ContainedBy ( ) ` with ` @ Repeatable ( ) ` in multiple test files to improve clarity and consistency in annotation usage
updated the file sending message to include a formatted duration to provide clearer feedback on the duration of the file sending process
updated class loading logic in OpenMBeanAttributeInfoSupport . java to use safeGetClassName ( ) instead of safeGetClassName ( ) to ensure proper
patch by jbellis ; review by gdusbabek , review by brandonwilliams for cassandra - 118
added a calculation to freeSize in StoreDirect . java to ensure freeSize reflects the correct size based on input size
updated touch event handling in ` AnyKeyboardView ` and ` AnyKeyboardViewBase ` to accept a ` MotionEvent ` parameter to improve touch event management
updated SslContextFactory usage from SslContextFactory to SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to
removed the PrivilegedSocket class and replaced it with a direct instantiation of Socket in PG _ Stream . java to simplify the code by eliminating unnecessary privilege
refactor InputTest class for improved readability to enhance maintainability and facilitate future updates
updated methods in AbsSwipeUpHandler and DepthController to include a new pauseBlurs functionality to enhance user experience by controlling blur behavior during task
removed the current location marker and added a null check for curLatLng before adding it to prevent potential NullPointerExceptions when curLatLng is null
updated the client retrieval method to use ` clientDetailsService . retrieve ( client . getClientId ( ) ) ` instead of ` client ` to ensure
updated SqlSourceBuilderTest to use @ BeforeEach instead of @ BeforeAll and modified SQL query formatting to improve test readability and maintainability by
fix for http : / / issues . apache . org / jira / browse / amq - 4237 - wait for the executor service to
added unit tests for handling unknown keys in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys during task series retrieval
added null checks for conditionDataList and added return statements in ZookeeperSyncDataService to improve code robustness and prevent potential NullPointerExceptions
lightcontrol : use cloner instead of spatial . getworldtranslation ( ) to save memory
added @ SuppressWarnings ( " UnusedAssignment " ) annotations and modified conditional statements in StdErrLog . java to improve code clarity and maintainability
refactor ` HttpSessionEventPublisher ` to use ` getContext ( ) ` instead of direct context publishing to ensure that ` getContext ( ) ` is not
added a semantic check for the syntax change in CREATE CQ statement to ensure compatibility with the latest version of the CREATE CQ statement
[ hotfix ] [ table - common ] fix typo in flinkiotdbsink
add a counter for custom simplification when a node be delete .
updated fileIcon method to include context parameter to ensure correct context is used for file type icon rendering
updated ` readIdentifierWithSchema ` method to include ` schema . getName ( ) ` in ` Parser . java ` and modified test cases in `
added support for timestamp fields in BigQueryTableRowIterator and corresponding tests in BigQueryUtilTest to ensure accurate representation of timestamp values and validate functionality
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` classes and corresponding unit tests in ` ViewGroup
refactor for - each loop to use generics for type safety to improve code clarity and reduce casting warnings
updated import statements in IndexToolForDeleteBeforeRebuildIT . java and MetaDataClient . java to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants and modified enum value retrieval logic in ` JavaClassUtil ` and ` SpringBootDocBuildTemplate
svm : do n ' t try to load jar in resourcesfeature if the classpath file be not a jar
fix ( cublas ) : fix checkstyle issue in java / awt / cuda / cublas . java
updated ResourceLoader class to accept FileFilter for layout directories to enhance resource loading functionality by allowing layout directories to be processed
blockredstonetop . getattachface ( ) now return the correct blockface . down if the block be n ' t a valid materialdata
[ hotfix ] [ table - planner ] [ table - planner - blink ] [ table - planner - blink ] fix
added import statement for DateHelper in NoteAdapter . java to utilize date utility functionalities for improved date handling
updated backup error messages and added backup load validation logic in Backup . java and Captions . java to improve user feedback and enhance backup management functionality
ggb - 148 change position of eview1 to relative ( not absolute )
removed the check for file deletion in ShadowParcelFileDescriptor . java to simplify the file creation process by eliminating unnecessary file deletion checks
int - 1197 remove unnecessary call to getsecuritycontext ( ) from stack - basedsecuritycontextholderstrategy
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to improve clarity and specificity of the rule
fix for xor neutral reference in integerequalsnode .
removed the static final Type STRING _ ARRAY from TypeFactory . java to streamline the code by eliminating unused constants
refactor ` hideIme ( ) ` method to ` hideIme ( ) ` in ` AllAppsContainerView ` and ` 
fix network issue by force bit density to fix network issue .
updated assertion messages in TimelineMetricCacheSizingTest and refactored cache removal logic in TimelineMetricCacheTest to improve readability and
add gl _ max _ texture _ size hook to optimize texture size calculation .
[ java ] : do n ' t call trystoplogrecording ( ) in case of failure .
added a condition to reset startPosn when in transform mode to ensure startPosn is reset when in transform mode
refactor ` isStarTreeDisabled ` method to ` isSkipStarTree ` across multiple classes to utilize a new ` isSkipStarTree
added a locking mechanism for nearby views in NearbyActivity . java to manage the visibility and visibility of nearby places to improve user experience by
add maptransformer . of ( map < k , v > map ) and bimap ( map < k , v > map ) method to
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for retrieving launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management functionality and improve user experience
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to improve event handling consistency and align with
added methods to manage calling process ID and UID in ShadowBinder to enable proper handling of calling UID and process UID in the Robolectric framework
updated ExpectationFailure class to use final fields and improved nullability annotations to enhance immutability and encapsulation of the ExpectationFailure
do n ' t log a warning when deserializing message with name .
removed conditional checks for newW and newH in ImageReplacedElement . java and added conditional calculations for newW and newH if they are
added handling for special characters " &# 9 ; " and " &# 32 ; " in MarkdownNodeRenderer and updated related tests in SpecMarkdown
added a new method ` setPassword ` and refactored password handling logic in ` SharePasswordDialogFragment . java ` to improve code readability and
refactor file channel method retrieval to use Class . forName for reflection to improve compatibility with different file channel implementations
removed the ` public ` access modifier from several methods and classes in ` AbstractAssert _ describedAs _ printed _ to _ console _ Test ` and
added new options for Slider AM keytab and their default settings in LlapOptionsProcessor . java to enhance functionality for managing Slider AM key
updated tearOutGraphViewContainer method to accept a JFrame parameter and added animation control registration in ExtractionModelFrame . java to enable and disable animations
added a loader completion check and modified shortcut handling methods in LauncherModel . java to ensure shortcuts are added only once and improve error handling during
updated NodeManageMemoryMergeOperator , NodePathsConvertOperator , NodePathsConvertOperator , NodePathsCountOperator , and NodePathsCountOperator to simplify
updated method signatures in IssueInterface and ValidationReport classes to include a GUID parameter and added a check validity flag in ValidationReport to enhance clarity and
added a method ` safeProviderName ` to retrieve the cipher provider name and updated exception handling in ` RSAClientKeyExchange . java ` to improve
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration in containerspec
set the logging level from WARNING to OFF in CCJSqlParserUtil . java to improve logging behavior and reduce noise in logs
removed a conditional check for ` i ` in ` AggregateLifeCycle . java ` to streamline output formatting for better readability
updated BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public static in DefaultMapScaleBar . java to
removed the @ Ignore annotation from CovariantOverrideTest . java to enable the implementation of the covariant override functionality
refactor curly method to return Qtype . GREEDY instead of creating new Node instances to improve code readability and maintainability by
camel - 14265 : camel - core - reloadstrategy should not try to load route definition from xml when reload strategy be enable .
added space minimum and maximum settings for the X - axis in ScatterChart to improve visual spacing for better data representation
updated the formatting of the INTERVAL string in ExpressionStringBuilder . java to improve consistency and readability of the code
added a method ` shouldPreserveDataStateOnReapply ` to ` SplitScreenSelectState ` and implemented it in ` BaseState ` to ensure
added a check for the presence of the " UTF8 " key in the properties file to ensure that a valid UTF - 8 key is present to
updated TestReproduceMessage . java to use MixWithSuiteName and modified test runner annotations in LuceneTestCase . java to enhance test coverage and
added a new UI event for long - pressing on an AllApps item in StatsLogManager . java and integrated it in ItemLongClickListener
added null check for log in StoreWAL . java and created Issue112Test . java with a test for double commit in Issue112Test
added a condition to check if sector land info is displayed based on the rules ' preset settings to ensure that sector land information is displayed only when the
updated type casting in multiple classes to use wildcards for better type safety to enhance code clarity and prevent unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future feature additions
update nearbyrandom to use lineardistributionnearbyrandom instead of betadistributionnearbyrandom
remove temporarycache . remove remove executor service and use cachebuilder instead .
updated visibility settings for SQLViewContainer , WMSLayerImportContainer , and WMSStoreInfo in NewLayerPage . java to ensure proper visibility
initialize the ` _ availability ` variable to ` Availability . UNAVAILABLE ` to ensure a default value of ` Availability . UNAVAILABLE ` is
updated PBFT synchronization logic to include peer synchronization finish handling to ensure correct processing of commit messages and improve logging for peer synchronization
chore : update gapic - generator - java version to 2.1 . 0 ( # 51 )
replace the boolean flag ` _ freeSpaceReclaimDisable ` with an integer ` _ freeSpaceReclaimQ ` and adjust related methods accordingly to
changed KDC _ OPT _ PROXIABLE and KDC _ OPT _ FORWARDABLE from public to private static final and updated
removed ' this . writer ' reference from ' writer ' assignment and added null assignment for ' writer ' to streamline code by eliminating unnecessary ' this
removed unnecessary whitespace in ProfilePager . java to improve code readability and maintainability
changed the method name from ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to clarify the purpose of background painting
added a new method ` valueFromClassConstant ` to retrieve object value from a class constant to improve the handling of object value constants by ensuring proper
added error handling for KafkaService initialization to improve stability by logging errors during service initialization
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE from a Set to an ImmutableSet and added " usr / share / zoneinfo /
( chore ) camel - core : re - enable auto - creation of default channel for message bus
added keywords support to the HTMLDocument class and implemented a test for keywords in TestDemo to enhance document indexing functionality by allowing keywords to be recognized and
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional block to initialize ` _ addresses ` in ` MemcachedSessionDataMapFactory . java ` to ensure that ` _ addresses ` is initialized
replaced instantiation of ` CorrespondenceSubclassToFactoryCall ` with a direct reference to ` CorrespondenceSubclassToFactoryCall ` to improve code
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
switch to ebook . de instead of mana . tungare . name - > isbn2bibtex
increase keepalive time from 1 second to 10 second .
added null check for text before firing data change events in TextField . java to prevent potential NullPointerExceptions when handling text changes
refactor : make it possible to use the rnnutils . paramstovector ( ) method in sentimentmodel .
added trimming of whitespace in SuffixURLFilter . java to ensure consistent formatting by removing leading and trailing spaces
added a conditional check to return early if the player is in godmode to prevent further processing when the player is in godmode mode
ggb - 118 text input dialog : do n ' t register or unregistration for checkbox creation dialog .
removed the ` true ` parameter from the ` LinkedHashMapCache ` constructors in ` CacheType . java ` and added statistics in ` TCache .
removed redundant calls to ` _ channel . close ( ) ` in ` ChannelEndPoint . java ` to improve code readability and maintainability
updated key index handling in ` FixAcidKeyIndex ` and modified key index builders in ` OrcRecordUpdater ` to improve validation
updated exception handling in DirectUpdateHandler2 . java to use Locale . ROOT for better locale - specific error reporting
add a storechecknode . setstorecheckguard ( ) method to writenode .
graalvm : fix exceptiondispatchblock reachability check in bciblockmapping .
added getclassificationdisagreement ( ) method to abstractcloud , dbcloud implement getclassificationdisagreement ( )
removed the use of ` BuildTarget . copyOf ( buildTarget ) ` and replaced ` @ Value . Parameter ` annotations with ` @ JsonIgnore ` in
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorage
refactor DefaultSdkProvider to improve knownSdks management and access methods to enhance code clarity and maintainability by standardizing the management of known SDK
replace progressindicator with confidenceprogressindicator in createofferview .
updated user agent check from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes to ensure compatibility with
make it possible to use the iterator , even if the builder do n ' t have an iterator
added constants for message and message noflex views in CrowdfundingChatAdapter to improve clarity and functionality of message handling in the user interface
updated encoding method from ` memEncodeUTF16 ` to ` memEncodeASCII ` in LinuxLibrary and MacOSXLibraryDL to ensure compatibility with
change CONJP relation to use $ -- instead of $ - to make it easy to understand
removed the ` canvas ` parameter from the ` insert ` method and updated related calls in ` TexturePacker . java ` to simplify the method signature
replaced the ` getVisitors ( ) ` method with an ` apply ( Refactor < S , T > refactor ) ` method in `
added methods to retrieve child elements by name and recursively in Xml . java to enhance functionality for accessing child elements by their names
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and its corresponding tests to ensure correct handling of character encoding in the
added SystemUiControllerFlags annotation and modified UI state updates in TaskThumbnailView and AllAppsTransitionController classes to enhance UI state management and improve
removed the private clientService field from IntrospectingTokenService . java to streamline the code by eliminating unused variable
updated exception message in HiveRecordSet . java to include additional context to improve debugging by providing more context in exception messages
removed the ownerId field and its assignment in NodeEntry . java to streamline the code by eliminating unnecessary field
updated the backup configuration key from " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot " in the configuration
added score calculation to the merge method in TextFragment . java to ensure that the score remains within the fragment ' s boundaries
removed the private Digester field from Md4PasswordEncoder . java to eliminate unnecessary dependency on the Digester class
added validation to ensure maximumUnimprovedStepCount is non - negative to ensure that the property is non - negative to prevent runtime errors
added a check to return early if no currently opened editors are open to improve efficiency by avoiding unnecessary processing when no editors are open
replaced direct calls to ` verify ( mock ) ` with ` Mockito . verify ( mock ) ` and added new test cases in ` BDDMock
updated the class loader reference from ` Thread . currentThread ( ) . getContextClassLoader ( ) ` to ` PathScanner . class . getClassLoader ( ) `
refactor ` sayHi2 ` method to accept an instance of ` CodeFirstPojoClientIntf ` and implement asynchronous operation in ` CodeFirst
fix checkstyle issue in abstractsplitbrainprotectiontest
added null checks for logoutConfigurer before adding the logout filter in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure proper handling of logout configurations and
fix for gbasis ( degree ( ) = = 0 ) in giac
added logging consumer functionality to DockerComposeContainer and created corresponding unit tests to improve log handling and ensure correct behavior of log consumers in Docker containers
updated the generic type in the testMapping method signature from ` Function < ? > ` to ` Function < ? > ` to improve type safety and
removed unused import statements from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to create a ` ThrowingSupplier `
replace ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to improve control flow by returning the result of the method
camel - 15836 : camel - platform - http : add support for text content content type to text / post endpoint
added platform - specific path handling methods in MorePaths . java and updated dependency paths in CopyStep . java and AarWithLibsIntegrationTest .
added a null check for authorizationContext parameters before processing to avoid potential NullPointerException when processing parameters
added a method to throw an exception if the load fails and modified the return statement to include a check for the existence of the file before loading to
updated SDK version from " 4611349 " to " 4514284 " and added stopped state tests in ShadowTextToSpeechTest to
fix queuetransactionlog . getitemid ( ) and queuetransactionlog . getname ( ) to be consistent with transaction log .
added a new boolean property ` enableSqlWithoutProfile ` and its getter / setter methods in ` JdbcEnvironmentProperties ` and ` JdbcEnvironmentRepository `
added a try - finally block around the data assignment in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
fix eclipse compiler warning in modloadingstage . createregistry ( ) .
updated the parameter name from ' date ' to ' calendar ' in DateUtils . java and modified the assertion in FontParsersTest . java to
updated the ` loadValue ` method in ` CachedThreadStatesGaugeSet ` and modified the ` getThreadInfo ` method to include a stack trace
added a ` prevTlogOnPrecommit ` field to ` UpdateLog ` and modified sleep duration in ` LeaderTragicEventTest `
updated the FastAsyncWorldEdit job file version from " P2 - V6 / " to " FastAsyncWorldEdit - 1.77 / "
refactor file existence checks in SegmentGeneratorConfig . java to ensure output directory exists before validating input and output path to improve robustness by ensuring
added a new method ` calculateNormalVector ` to ` ObjUtils ` for calculating normal vectors to improve code readability and maintainability by central
updated the ` find ` method to include ` identityZoneId ` parameter and modified the query to include ` identity _ zone _ id ` to enhance
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future feature additions
added a null check before accessing the session info in AuthorizationFilter . java to avoid potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class to improve code organization to enhance maintainability and readability of the code
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController . java to improve code readability
added thread name setting for forwarding to a specific remote URL in TestSession . java to improve clarity and traceability of the thread ' s purpose
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
replaced the creation of an ArrayList of ComponentKey with a direct return of a new ArrayList to simplify code and improve performance by eliminating unnecessary object creation
added a new OverviewToAllAppsTouchController to the list to enable interaction with the all apps touch controller in the user interface
refactor hotseat scaling and translation logic in LauncherState and WorkspaceStateTransitionAnimation classes to improve clarity and functionality of hotseat scaling functionality
fix stack trace filter to not filter element above junitrule
replaced specific references to ` dstnull ` and ` srcnull ` with ` dstByteArray ` and ` srcByteArray ` for clarity and consistency to improve
added a private ` BalanceListener ` variable and updated its usage in ` DepositListItem . java ` to improve code readability and maintainability by
updated color conversion logic in RealisticRenderer to handle different edge modes to ensure proper color conversion based on edge mode settings
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and removed redundant logging statements in multiple test classes to improve code robustness and maintain
fix gl200 decoder ( fix # 118 )
updated playback timing logic in FullDetailsActivity . java to include a check for last playback time to improve playback timing accuracy and enhance user experience
spanishxmltreereader : fix truffle / spanish xml tree reader for elliptic token
added a condition to clear the " language " field in the InstallItem class to ensure proper handling of empty language values during item installation
updated the ` ReactiveLoadBalancerClientFilter ` to override the HTTP scheme based on the service instance ' s secure status to ensure correct scheme is used based
[ hotfix ] [ network ] fix code style issue in defaultmessagestore
make nativeimagedebuginfoprovider . fullfilepathfromclassname ( ) non - final so it can be use by other class .
refactor Correspondence instantiation to use lambda expressions to improve code readability and reduce boilerplate code
replaced instances of " USLocales " with " ENLocales " in JRELocaleProviderAdapter and LocaleDataMetaInfo to standardize
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify the code and improve readability
add a MinecraftForgeClient class for tesselating textures to enable customization of the terrain texture for the Minecraft engine
added a return statement to TxCacheDB . java to ensure proper termination of the method execution
updated import statements from ` com . sun . xml . internal . ws ` to ` jdk . internal . org . objectweb ` in BoundMethod
refactor FastDictionary class for improved performance to enhance efficiency and maintainability of the code
use session . status _ closed instead of wasclosed to close the iosession . close ( ) method .
updated the parameters of ` GROUND _ HIT ` and ` SIMULATION _ END ` events in ` FlightEventsTest . java `
chore ( proto ) : move protobuf . byteiterator to vendor . grpc . v1p0 . com instead of com . google . protobuf
updated the method call from ` target . addNamespaceDeclaration ` to ` newElement . addNamespaceDeclaration ` to ensure the namespace declaration is added to
add courseid and fq name to the result page for instructor ' s feedback session
added a shortRules list and modified defaultRules initialization in DefaultPasswordValidator . java to enhance the flexibility of password validation by allowing alphabetic and numeric
simonstewart : change the return value of the remote control handler to 20 instead of 50 .
removed JUnit ' s @ Test annotation from ProxyClassSerializationTest . java to streamline test execution by eliminating unnecessary annotations
updated string concatenation syntax in DLNAMediaInfo . java to improve readability and maintainability of the code
truffle : remove unnecessary replacement of speculativeguardmovementphase in test
added checks for multiple authentication manager bean definitions in AuthenticationManagerBeanDefinitionParser to ensure proper handling of multiple authentication manager configurations
refactor ForwardedRequestCustomizer to handle both host and server attributes based on their type to improve code clarity and ensure proper handling of forwarded headers
added a call to setLength ( 0 ) in ConsoleReader . java to reset the StringBuilder ' s length to ensure that the output buffer is reset before
changed visibility of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists for better extensibility
update manifest . mf and openide - module - specification version to 1.26 . 0
hbase - 26144 make nettytls wrap size configurable ( addendum )
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated FixedLengthTokenizerTests to use JUnit assertions and added tests for IncorrectLineLengthException handling to improve test coverage and ensure proper exception handling
refactor protocol binding handling in OpenSamlAuthenticationRequestFactory and add corresponding unit tests to improve protocol binding validation and ensure compliance with SAML 2.0 protocol requirements
refactor SurfaceControl transaction handling in DepthController . java to improve code readability and maintainability
updated version check from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility with the latest version
hbase - 26156 use create action for bulk load preprepare , precleanup , and prepreparebulkload
[ iotdb - 4892 ] fix unseq compaction when there be no open file
camel - 14284 : fixed the issue that file inputstream can not be convert to an inputstream . thanks to daniel for the
added a login method to DefaultShardManager and modified its usage in DefaultShardManagerBuilder to conditionally call the login method based on the login parameter
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
changed the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " in AbstractRegisteredService . java
refactor response handling in HttpSender to check if the response is marked as marked to ensure that the response is only processed when the response is marked
do n ' t show team comment for student that have no giver
added security checks for linked profile restrictions in BMPImageReader . java to ensure proper handling of color space and device path based on security policies
updated the positioning of setSimpleCuboid method calls in ClassicPlotManager . java to ensure proper positioning of plot blocks in the plot
pmd : wait until pmd check the file in the current package
refactor grid size setting logic into a separate method and update the number of columns based on poster size settings to improve code readability and maintain
updated return values in ContributionsListFragment . java from false to true to ensure that all contributions are considered in the correct state
added a test for skipping a range query in DistinctPrefixFilterIT . java and modified the filtering logic in BaseResultIterators . java to
pdfbox - 4071 : add test for acrobatcheckboxgroup property , a suggest by valerybokov
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to provide functionality for retrieving the last modified timestamp of a file
added a condition to check for metadata tables in Hive Iceberg storage handler to ensure compatibility with metadata tables during file format validation
add currency combo box to cash deposit account
replaced IOException with Throwable in WriteFlusher . java to improve error handling by catching all throwable types
added a new boolean variable ` mStartedEnterAnimation ` and modified animation handling logic in ` IconRecentsView . java ` to improve animation control
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to track the active key ID for better configuration management
updated action definitions and method names in SendMailActions . java to include " @ text / / sendMessageActionLabel " and " @ text / send
changed the ` isActive ` variable to be ` volatile ` to ensure visibility of the ` isActive ` variable across multiple threads
updated method names from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext ` and related tests to improve clarity
make sure tostring ( ) do n ' t throw classcastexception
added a check for the ownCloud app name in the display condition to ensure that the application name matches the ownCloud application name to improve user experience
hbase - 27144 masterfilesystem should automatically set permission for kerberos and restart master
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange . java ` and ` JavaxServletWebExchange
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
updated state format handling from int to String in multiple files to ensure consistent state format usage across the application
removed the " type " variable from the logging statement in CentralAuthenticationServiceImpl . java and modified the condition in AbstractTicket . java to improve clarity
pdfbox - 4892 : handle illegalargumentexception in pdfbox - 4892
updated the condition to check if the file name ends with a slash in AbstractFileResourceSet . java to improve code readability and maintain consistency in
[ mng - 4970 ] fix the issue of the file path be not align to the base directory of the project .
( chore ) camel - protobuf : move protobuf coder registration to protobuf extension .
updated JpaQueryParsingToken to include a boolean parameter and added a new test for querying with signed numeric literals to enhance query parsing functionality
updated the ` generateLaunchLugFromRASAeroRailGuide ` method to include parent length and adjusted separation settings to enhance launch responsiveness
removed the ` getNonceFactory ( ) ` method from ` BitmexStreamingExchange ` class to provide a default implementation of ` getNonceFactory
updated string concatenation to parameterized logging in MailBinding . java to improve code readability and maintainability
[ java ] use default value instead of configuration . mtulength ( ) in driverconductortest
change default value of initializeLoadedClasses from true to false to disable loading of loaded classes by default
added a call to grabFocus ( ) in the searchField to ensure the search field receives focus to improve user experience by ensuring the search field is
refactor NioParams initialization for clarity to improve readability and maintainability of the code
updated the assertion in StatementTest to use a random value for the result set to improve clarity and maintainability of the test code
updated assertion messages in TestSolrConfigHandler to include server base URL to improve clarity of error messages for better debugging
replaced HttpMethod imports with ServerHttpRequest and ServerWebExchange mocks in CsrfWebFilterTests . java to improve test reliability by using re
updated the string construction in FilterResourcesStep . java to use a variable for density to improve code readability and maintainability by reducing method calls
added a method to handle component prefixes in the ComponentGroup class to improve UI ID generation by distinguishing between Button and ButtonGroup components
removed density check for displayInfo rotation in RecentsAnimationDeviceState . java to simplify the condition for displayInfo rotation
added two new Java files : TestCloneArrayWithDifferentLengthConstness . java , TestArrayCopyWithLargeObjectAlignment . java , and Test
added an import for LuceneTestCase . AwaitsFix and annotated ReplicationFactorTest to indicate that the test is awaiting a fix for a known issue
fixed - rexecutorservice . schedule ( ) method throw npe if nextstartdate be null
refactor the condition for updating credentials in FileDownloader and FileUploader classes to improve code readability and maintainability
[ bugfix ] close storefilescanners when createfilescanners ( ) return null
[ java ] use getordefault ( ) instead of get ( ) for inetmetricmanager .
added nonce parameter and assertion for token claims in TokenMvcMockTests to ensure that the nonce is correctly retrieved from the token claims
refactor multiple chart editor classes to improve code organization to enhance maintainability and readability of the chart editing components
added methods to set the width and height of formLayeredPane to ensure proper layout behavior for the user interface
updated import statements and added a method to calculate the maximum Y value based on the owner ' s height to improve code clarity and ensure proper handling of
do n ' t try to open a shared database if it be already connect
updated DockerCommand usage to use Platform . DOCKER _ COMMAND instead of a static constant to improve accessibility and maintainability of the Docker command
added a null check for the input stream in the initializeParameters method to improve error handling and provide feedback when no input files are found
updated the ` drawLeaveBehind ` method to accept a color parameter to allow customization of the folder ' s leave behind color to enhance
report a error dialog when the canary version do not match with the android studio
api : do n ' t throw npe if identityproxy table name be null
added module persistence enable and disable lists and their corresponding getters and methods to manage module persistence settings to enhance functionality by allowing users to enable or disable
updated argument checks and error message formatting in GeminiMarketDataService . java to improve clarity and correctness of error messages for better debugging
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to maintain insertion order for question keys in the flow scope
add unit test which verify the behavior of the test realm
updated the AuthCheckFilter to remove specific URL exclusions for various setup configurations to ensure proper exclusion of specific JSP files during authentication checks
refactor runnable execution logic in Scheduler . java and add a new test case in SchedulerTest . java to improve code clarity and ensure correct sequence handling
updated method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , and ` CommandRunner ` to accept varargs instead of an array
updated character reading logic in XMLParser . java to handle end - of - file scenarios to ensure proper handling of end - of - file scenario
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address overflow issues with text
added pivot adjustments for arrow elements in DeepShortcutsContainer . java to ensure the arrow position aligns correctly with the icon ' s position
remove printstacktraces , use map . values ( ) instead
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter and adjusted related logic in the ` AbsSwipeUpHandler ` class to
pdfbox - 4071 : use the class name instead of the package , a suggest by valerybokov
added a boolean parameter to the InternetAddress constructor and modified hostname validation logic in HostnameFormatSpecifier . java to ensure proper handling of invalid hostnames
updated references from ` AuthenticatorActivity . this ` to ` this ` across multiple classes for consistency to improve code readability and maintainability by removing
refactor SizeBasedDocIdIterator and related classes to improve clarity and consistency in handling document IDs to enhance code readability and maintainability by
added overloaded promptToOpenFile methods to FileDialoger and updated its usage in FilePanelEntry to enhance file selection functionality by providing additional parameters for
updated widget span and sPageSleepDelay values in AppsCustomizePagedView . java and refactored related methods in AppsCustom
added instance context transformation and updated bounding box calculations in FlightConfiguration . java to improve the handling of instance contexts and ensure accurate bounding box calculations
[ java ] rename ` ` seda ' ' to ` ` direct ' ' in micrometer test
updated DateTimeFormatter to use Locale . ROOT for default date format to ensure consistent date formatting across different locales
[ scb - 2576 ] add permission filter to objectrest to filter out hidden metadata field
added a test method for missing required dimensions and metric names in StarTreeConfig . java to ensure that the configuration builder correctly handles null and null values
camel - 14284 : camel - spring - boot - enable recipient list builder for dynamic and static exchange
refactor InlineLayoutBox and HoverListener to improve layout handling and repaint logic to enhance performance and maintainability by reducing unnecessary method calls
refactor AuthenticatorActivity to use OperationsService instead of DetectAuthenticationMethodOperation to improve code organization and enhance authentication method handling
