updated SocketAppender initialization to set remote and port settings to ensure proper handling of remote and port configurations
refactor BasicAuthPlugin to use a new method for retrieving prompt headers to improve code readability and maintainability by reducing duplication
updated the method call from ` RecordDescriptor . msgLength ` to ` msgLength ` in ` ManyToOneRingBuffer . java ` to ensure
do n ' t set cpuovercommit / ramovercommitratio if there be no vm detail
added a flags field to the ShadowPaint class and updated related tests in PaintTest to ensure that anti - alias flags are correctly handled in the paint
updated the title in MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content " to
added a check to ensure that no bugs were reported only when the Eclipse project is available to improve error handling and provide clearer feedback on
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 423 .
added a new interface ` RemoteInputListener ` and modified the ` onConnected ` and ` onDisconnected ` methods in ` RemoteInput ` to allow
removed unnecessary whitespace in OrcEncodedDataReader . java to improve code readability and maintainability
added a check for ` thing . isEnabled ( ) ` in ` HomeConnectBridgeHandler . java ` to ensure that ` thing . getHandler (
added null check for bs before calling removeAllPolicies ( c , bs ) in AuthorizeAdminServlet . java to avoid potential NullPointerExceptions
updated assertions in DefaultTypeAdaptersTest and ObjectTest to use ` matches ` instead of ` if ` if ` for Java 9 or higher to
added JSON parsing and logging for DAG information in TezTask . java to enhance debugging capabilities by providing insights into the DAG information
updated heap time calculation in ComputedSummary . java and added getHeapTime method in HprofHeap . java to improve accuracy of heap time retrieval
replaced RxJava2Tasks . java with CommonsApplication . getInstance ( ) . getMWApi ( ) in ContributionsActivity . java and
removed redundant lock mode checks in MVTable . java to simplify locking logic and improve code readability
fix ( messagestore ) : do n ' t calculate maxmessagesize for commitlog .
added null check for the open folder in the launcher to ensure that the folder is marked as open to avoid potential NullPointerExceptions when the folder is
added a test method to verify sorting of PGProperty names in ascending order to ensure correct ordering of PGProperty names in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a clear
updated the ` supportsDrop ` and ` getUninstallTarget ` methods to use ` ItemInfo ` instead of ` Object ` to improve type safety and
updated assertions in RequestBuilderTest to use e . getMessage ( ) and isIn ( ) instead of hasMessage ( ) to improve clarity and accuracy of
rename ` RetainedFragment ` and ` NearbyMapFragment ` to ` NearbyListFragment ` to improve clarity and consistency in
[ hotfix ] fix typo in FlatProfileContainerFree constructor .
added a new boolean field ` sendZeroAnomalyEmail ` and its getter and setter methods to ` EmailConfiguration ` to enable sending zero an
[ hotfix ] [ kafka ] fix npe in kafkaconsumerbase
added methods to retrieve user , geofence , and geofences in DataManager . java to enhance functionality for managing user and geof
added a constructor to BlockingResponseListener that accepts a maximum size of 2MB to enhance flexibility in response handling by allowing a maximum buffer size
refactor member broadcast handling in McastServiceImpl to use byte array instead of Thread . getName ( ) to improve code readability and maintainability
replace system . out . println with logger . info in multileaderserverimpl . sendsnapshotfragment ( )
updated error messages in LoginSAMLAuthenticationFailureHandlerTest from " https : / / error _ description " to " https : / / error _
[ hotfix ] [ test ] fix typo in configmetadataprovidertest
updated import statements and modified the ` updateNoteReminder ` method to use ` noteToUpdate ` instead of ` note ` to improve code clarity and
added a new ` AcceptAllFilter ` class and updated directory stream handling in ` Files . java ` and ` WindowsDirectoryStream . java `
refactor JdbcTestDataSet class to improve code organization to enhance maintainability and readability of the code
added exception handling for ClassNotFoundException in lookupType methods to improve robustness by providing a clearer error message when a class is not found
refactor DockerImageName validation logic into a separate utility class to improve code readability and maintainability by encapsulating tag validation logic
corrected the spelling of " login _ failed _ credentials " to " login _ failed _ credentials " in LoginActivity . java to ensure consistent
added autofocus functionality to multiple form classes to enhance user experience by providing a clearer auto - focus option
added unit tests for the ` IdentityZone ` configuration in ` SamlIDPRefreshMockMvcTests ` to ensure that the ` IdentityZone `
added checks for non - empty and non - empty lists in ComparableVersion . java and created a corresponding test in ComparableVersionTest . java to ensure
updated mode settings from topLeftMode to bottomRightMode and adjusted return values in Sheet . java and UIManager . java to ensure correct positioning
updated package names from ` org . robolectric . android . ParallelUniverse ` to ` org . robolectric . android . internal ` in multiple test files to
replaced ` constructor . type ( ) . changeReturnType ( ) ` with ` FACTORY _ CALL ` in ` LocalCacheFactory . java `
updated the color pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to
added self loop drawing functionality to the ProcessingPreview class to enhance visual representation of self loops in the graph
updated the TVM solidity configuration from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ T
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
added translation to the drag handle indicator in AllAppsTransitionController to ensure the drag handle indicator reflects the correct position of the drag handle
removed logging statements from CollectionViewer , CommunityViewer , and ItemViewer to streamline log output for better readability and maintainability
updated error messages related to query optimization in HiveConf . java to clarify that filters may be pushed down in the operator tree during query optimization
added an assumption to the ScanningAppProviderRuntimeUpdatesTest to ensure tests do not fail on non - OSX environments
added Maven bundles for Jetty ALPN client and its dependencies in TestJettyOSGiAnnotationParser . java to ensure proper bundle
refactored executionentitymanager # updateprocessinstancelocktime ( ) to use commandexecutor . execute ( )
refactor Transaction class implementation to improve code readability and maintainability
replaced CustomFieldBehavior annotation with @ ExcludeFromRuleKey annotation in GenruleBuildable . java to exclude Genrule execution from the artifact caching
refactor AsyncExecute and FirefoxCustomProfileLauncher to use a new method whichExec to improve code readability and maintainability by encaps
added a check to ensure ` colFamToDynamicColumnsMapping ` is only added if it does not already exist to prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] fix checkstyle violation in tupleunwrappingiterator
added a condition to check if the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATALOG and modified table creation logic
do n ' t update student cascade if courseid be null
updated import statements in AllXSSFTests . java to use TestCellReference instead of TestCellReference to improve code clarity and maintainability by
add a check for the block ' s thickness in the LensPiston . java file to ensure that the block ' s thickness
added a new file LongPointerPressTest3049 . java to implement a test for network error handling to verify the functionality of the LongPointerPress
truffle : fix inlining of inline method in partial evaluator
refactor null checks for alias and alias in BaseBuilder and XMLConfigBuilder to improve code readability and maintainability
refactor ListBlockParser to remove unnecessary conditional check and add a new test for deeply indenting in SpecialInputTest to improve code clarity and ensure
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to extend it to enhance the functionality of ` Optional `
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to mark tests as ignored due to issue # 1070
removed the use of ` NativeString ` from the ` saveMessage ` method in ` TestCaseLogger . java ` to simplify the method signature and improve
updated closing brace in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a check for video formats in RemotePlayHandler . java to ensure that video subtitles are only processed when the format is a video format
added security imports and set disabled algorithms to an empty string in ComHostnameVerifier and JavaxHostnameVerifier to ensure that SSL algorithms are
cloudstack - 132 : do n ' t allow local storage pool for local storage .
updated logging statements in ` Driver . java ` and ` QueryResultsCache . java ` to use ` cacheEntry ` instead of ` cacheEntry `
add manageddependency : skip update model after update the model .
added a test for the last intent sending method in ShadowActivityTest and implemented the send method in ShadowActivity to ensure proper handling of intent sending and
refactor the FBO handling in RocketFigure3d . java to utilize a new method for creating GLCanvas and GLCanvas to improve
added synchronized block for controllerListeners in HydrawiseAccountHandler . java to ensure thread safety when accessing the controllerListeners list
added a beforeClass method to TestCoreAdminApis . java to ensure EasyMock does not work with Java 9 to ensure compatibility with Java 9
updated year retrieval from ` Math . abs ( ) ` to ` ChronoField . YEAR _ OF _ ERA ` in ` TimestampUtils . java
http : / / code . google . com / p / mybatis / issues / detail ? id = 421 : do n ' t
corrected the spelling of " cur _ ws _ commit _ id " to " cur _ ws _ commit _ id " in TxnHandler
replaced ` ByteChunk ` with ` ByteBuffer ` in ` BufferedInputFilter . java ` to improve performance by using ` ByteBuffer ` instead of ` Byte
added a new method ` toSync ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to ensure proper handling of
added ActionGraphBuilder import across multiple compiler factory classes to enhance action graph handling by utilizing a unified action graph builder
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to verify the functionality of uploading with
added exception handling for creating tables in SQLManager to improve robustness by catching potential exceptions during database creation
added a check to return the local maven directory if it does not exist to ensure that the local maven directory exists before proceeding
do n ' t show the algebra label if it ' s a hidden prefix .
added null check for metadata in CtElementImpl . java to avoid potential NullPointerExceptions when metadata is null
change buffer flag from setFlags ( BUFFER _ FLAG _ DECODE _ ONLY ) to addAddFlag ( C . BUFFER _ FLAG
do n ' t update sorted by id when reordering be disable .
updated error message from " Method call not specified " to " Missing method call " to improve clarity of error reporting for missing method calls
added a null check for backupFolder before logging expire information to avoid potential NullPointerExceptions when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the instantiation of a void array to demonstrate the behavior of ` Array . newInstance
added @ AddToRuleKey annotation to ClangCompiler and GccCompiler classes to ensure that the toolType field is added to the rule key
added a new constant ` PINCODE _ TIMEOUT ` and updated the conditional check to use it to improve code readability and maintainability by
add issampled ( ) to PrometheusMeterRegistryTest , PrometheusExemplarsSample , and PrometheusExe
[ hotfix ] [ test ] remove @ ignore ( ' requires mongodb server ' )
[ java ] fix checkstyle violation in consumeuncompressedcompressedcompressedmessagetest
updated conditional check to use isArtifical ( ) instead of getName ( ) for table name validation to improve code readability and maintainability by
updated fileStatus checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty check for session attributes in MongoSessionManager . java to improve robustness by preventing potential NullPointerExceptions
replaced setFixedSize with setSizeFromLayout ( ) in CameraSurfaceView . java to simplify surfaceHolder initialization and improve code readability
refactor the stopping handling logic in AbstractConnector . java to improve readability and maintainability of the code
removed unnecessary whitespace in the WebSocketClientHandshaker parameter to improve code readability and maintain consistency
camel - 14247 : camel - defaultmessagehistory : fix nullpointerexception when timestamp be null
refactored error handling in DelayedMonoPublisherTest to use lambda expressions to improve code readability and maintainability by reducing duplication
replaced assertTrue with a conditional check for WebSocketHandshakeException before verifying that the error is not an instance of WebSocketHandshakeException to ensure that the assertion
refactor AllAppsTransitionController to use View . OnLayoutChangeListener instead of View . OnLayoutChangeListener to improve code readability and maintainability
reformatted code for improved readability in PolicyBasedAuthenticationManager . java to enhance maintainability and readability of the code
[ springframework - integration ] fix xpathrouterparser to set default output channel
updated cacheSeconds from ` int ` to ` String ` and modified the way the cacheSeconds is set in ` CasCoreWebConfiguration ` to
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a call to append ( buffer , true ) in ByteBufferPool . java to ensure proper handling of buffer operations
added a check for the " alt - rt . jar " property and implemented a method to check for the presence of " alt - rt . jar
updated SQL query parameters in JdbcScimUserProvisioningTests . java for consistency and clarity to improve code readability and maintainability by using consistent naming
replaced ` Arrays . asList ` with ` ArrayList < String > ` and modified the return statement in ` FlightRecorderProfilerProfiler . java ` to ensure
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check if
added a condition to check if the content view has content in HttpParser and implemented a test for chunked put in ProxyServletTest to ensure proper
updated AtmosEndpoint . java file to improve clarity and maintainability of the code
added support for " printf " and " print " targets in Java2TypeScriptAdapter . java to enhance functionality to support additional functionalities in
added a new file ` TestCapacityUntilGCWrapAround . java ` and modified ` WhiteBox . java ` to implement a native method for
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
removed conditional calculation of endTime based on stamped at start in SamplingStatCalculator . java to streamline the calculation process by eliminating unnecessary checks
added unit test base on user forum issue
updated error handling in JPEGImageReader and added a new test for invalid icc single chunk bad sequence in JPEGImageReaderTest to improve clarity and
fix a bug that cause reequip animation not work on sea level .
refactor JoobyModule , SpringModule , SpringModule , SpringModule , and JoobyExtension to include a check for entry type to
use container . getparentclassloader ( ) instead of thread . currentcontextclassloader ( )
add nameupdater . properties to add nameupdater . properties file
set the start state of the ellipsoid region selector in EllipsoidRegionSelector to true to ensure proper initialization of the ellip
updated URLs in JavaSEPort . java to use a dynamic URL instead of a hardcoded URL to improve security by using a more secure
[ geos - 13939 ] getfeature . getfeature ( ) do n ' t validate sort by attribute
updated null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null values
added GraphicsEnvironment and GraphicsConfiguration imports and modified image processing logic in DiagramGenerationTest . java to improve image processing accuracy and ensure compatibility with
add a check for null sidedDelegate in FMLCommonHandler . java to prevent potential NullPointerExceptions when attempting to getMinecraftLogger
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
update locktest to use asserttask instead of wait for lock . islocked ( )
added methods to handle whole - word tokenization and join tokens in StringUtil . java to enhance string concatenation functionality for better user experience
use response . senderror ( 404 ) instead of response . status ( 404 )
refactor command handling in SystemHighlighter to utilize a command index instead of a hardcoded value to improve code readability and maintainability by
updated version and VERSION _ DATE constants from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and updated the VERSION _ DATE to
updated the position method from idx to dimensionSize in StarTreeRecordStoreCircularBufferImpl . java to ensure correct positioning for dimension sizes
added support for handling drag state in the SystemUiProxy and updated related classes to utilize it to enhance drag - and - drop functionality for better
added unit tests for socket traffic class checks in SecureSocketAppenderSocketOptionsTest . java and SocketAppenderSocketOptionsTest . java to ensure compatibility with
added support for PSK - AES256 - GCM - SHA384 and TLSv1 ciphers in TestCipher . java to enhance encryption
updated the method from ` getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java ` to ensure accurate
added the @ JsonProperty annotation to ScimGroupMember . java to enable JSON serialization and deserialization of the object
added handling for reserved words in HqlQueryRenderer and created a test for schema scoping in HqlQueryRendererTests to ensure proper functionality
corrected a typo in the parameter name from " d " to " s " in SubscriptionHelper . java to improve code readability and maintain
refactor Parser class to improve code organization to enhance maintainability and readability of the code
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method and updated related logic accordingly to enhance functionality by allowing
[ tekat - 697 ] add test case for cpio mime type detection
[ hotfix ] [ table - planner - flink ] [ table - planner - jbang ] [ table - planner ]
added equals , hashCode , and toString methods to OneTimeTokenAccount and OneTimeToken classes to ensure proper serialization and deserialization of one - time tokens
added a condition to check if the assistant is not launched in AssistantTouchConsumer . java to ensure that AssistantTouchConsumer is only called when the assistant
added a new Java file ` SolarisShortDSA . java ` that implements a utility for signing and verification of DSA key pairs to facilitate
added a call to toggleSearchLabel ( false ) in ListFragment . java to ensure the search label is properly toggled
cloudstack - 1164 : ensure snapshot be lock before create a snapshot .
added a new ` DetailsServiceConnection ` class and modified the connection handling logic in ` FileDetailActivity . java ` to improve code clarity and ensure
refactor error handling in HttpClientTLSTest to use AtomicReference for better readability to improve code maintainability and ensure proper exception handling
removed the equals method from ConjunctionScorer . java to simplify the code and improve readability
added null check for ` v ` in ` Launcher . java ` to prevent potential ` NullPointerException ` when unbinding items
[ java ] wait for the metadata group to complete before wait for the leader election .
updated cache size calculation and added logging statements in DefaultCache . java to improve cache management and provide clearer logging when cache size exceeds desired values
updated API endpoints from v2 to v3 in CryptoFacilities . java and CryptoFacilitiesAuthenticated . java to align API
added a method ` empty ( ) ` to ` freenect2 ` to check if the size is zero to provide a way to check if
added Optional import and modified test cases in AsyncPageReader , TestDrillParquetReader , TestEmptyParquet , and TestEmptyParquet
[ java ] improve error message for invalid market data type in serum streaming service
add config option to disable charge animation when item be charging on top of mana pool .
[ java ] make cluster node restart test more robust .
added error logging for InterruptedException in WaitForHelper . java to improve error handling and logging for better debugging
refactor DefaultServletTest to use assumeTrue for directory existence checks to improve code readability and maintainability by reducing redundancy
removed unnecessary whitespace in StyleInjectorFull . java to improve code readability and maintainability
updated the type of ` changeLogFile ` and ` outputFile ` from ` String ` to ` FileResource ` in ` BaseLiquibaseTask `
updated comparison logic to use ` getX ( ) ` and ` getY ( ) ` instead of ` this . x ` and ` this . z `
updated the ` LongConcurrentLRUMap ` class to use ` final ` instead of ` TODO ` to ensure immutability of the ` CacheEntry
added regex handling to the resource configuration in ReflectionProcessor . java to ensure proper handling of regex patterns in resource configuration
http : / / issues . apache . org / jira / browse / amq - 4667 - fix filecredentialscache . gettemp
updated the database path for ValidateMultiSignContractTest from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract
[ java ] remove unnecessary implementation of hassufficientpeers ( )
[ java ] fix checkstyle issue in webdriverservlet
added a condition to return false if the operation is equal to a boolean value in ExpressionNode . java to ensure that the expression expands only when
added a check to clear pendingRenderingOperations in AndroidAsyncView . java to ensure pendingRenderingOperations are cleared only when minimized
added a boolean variable ` passedTheDeadline ` and modified the sleep logic in ` HazelcastTestSupport . java ` to ensure that the deadline is
fix race condition in writebehindwritedelaysecondswindow . setvalue ( )
set the icon to null in GroupTreeCellRenderer to prevent potential null pointer exceptions when rendering groups
updated test methods in TestBlacklistAwareRedirectResolver to set strict match to false instead of strict to improve test clarity and ensure strict matching behavior
added IO closing for the server socket in ShutdownMonitor and updated test methods in ShutdownMonitorTest to ensure proper resource management and improve test coverage
updated the calculation of moveSize and adjusted chunksFillRate in RandomAccessStore . java to improve readability and maintainability of the code
added a new method ` setFields ` to cache fields in ` ObjectMap ` and refactored exception handling in ` Json . java ` to
[ hotfix ] [ runtime ] move componentclosingutils from util to coordination
cloudstack - 132 : cleanup volume after vm transition to error state
do n ' t use ip - range from ip - range if it be n ' t empty
corrected the spelling of " userDetails " to " bean " in the InitializeAuthenticationProviderManagerConfigurer and InitializeUserDetailsBeanManagerConfigurer to
updated the leader retry duration from 15000 to 30000 milliseconds in CollectionsAPIDistributedZkTest . java to increase the leader retry duration for better
refactor error handling to use SLF4J Logger for improved readability to enhance maintainability and reduce redundancy in error messages
corrected the order of parameters in the drawImage method calls in URLImage . java to ensure correct positioning of images in the image
updated the condition from ` solrDocument1 . getFieldNames ( ) . size ( ) ` to ` solrDocument2 . getFieldNames ( ) `
refactor the check for zero high card dimension in SetFunDef . java to improve code readability and maintainability by encapsulating the
[ hotfix ] [ runtime ] add exception parameter to streamconfig
refactor processing logic in Preprocess . java for improved readability to enhance code maintainability and readability by reducing duplication
refactor method signatures in MessagePack . java for improved readability to enhance maintainability and readability of the code
added a new annotation ` Mapper ` in the ` org . apache . ibatis . annotations ` package to implement a Mapper interface with a default value
[ hl7 ] do n ' t encode empty extension list in jsonparser
updated regex patterns and modified artifact extraction logic in LibraryManager . java and LibraryManager . java to improve code readability and maintainability by using a
added alias for node _ popup _ scripting in ScriptingMenuEntryVisitor to enhance menu entry functionality for better user experience
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView
camel - 14284 : camel - jms : use class instead of cast to jmsmessage .
[ java ] fix checkstyle violation in java . lang . file
deleted the ` AbstractDelegatedVerb ` and ` FailureContext ` classes and updated the ` FailureContext ` class to remove outdated code to streamline
http : / / issues . apache . org / jira / browse / amq - 4071 - add a test for gzipnotmicro
replace ` getAndAdd ( n ) ` with ` BackpressureUtils . getAndAddRequest ( n ) ` in ` OnSubscribeRedo
added logging functionality and improved error messages in SpeedmentImpl . java to enhance debugging capabilities and maintainability of the code
dspace - oai : load dspace - oai config from servlet context
added null check for kv before resetting matchers in StoreScanner . java and updated batch processing in TestWideScanner . java to improve robustness
camel - 15224 : camel - jbang - fix test failure on ubuntu .
added a constant for the CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation . java and modified sourcePath construction in SourceCodeDisplay
added YARNBIN functionality to HiveConf and updated RemoteSparkJobMonitor to handle YARN binary paths and app IDs to improve compatibility with
added support for " maria " database in the database check to ensure compatibility with different database types
updated log message formatting in SplitLogManager . java and modified startTime calculation in SplitLogManager . java to improve readability and maintainability of log
added a new test class ` ExecuteAndReturnStringTest ` to verify the behavior of network error handling to ensure that the application correctly handles network errors
added a new file ` InvokespecialInterface . java ` that implements an interface and implements an interface and a generic interface interface to implement and manage dynamic
refactor EvictingBoundedList class implementation to improve code readability and maintainability
use edge _ based _ 2dir instead of edge _ based _ 2dir for turncosts
added a null check for ` style . backgroundDisabled ` and added a validation check for ` selection ` in ` SelectBox . java ` to ensure
added a null check for the ` md ` variable in ` RpcServer . java ` to prevent potential NullPointerException when ` md ` is null
updated hotseatCellSize calculation to use border spacing instead of hotseat padding to improve layout consistency and maintainability of the code
refactor key equality handling in ExpressionTree . java to use values . get ( ` ` partitionName ' ' ) instead of ` ` partitionName
add versioned support to taskdefinition and taskdefinition
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure the
changed the ` equal ` variable from false to true and modified the comparison logic in ` DisplayModeTest . java ` to improve the accuracy of the
updated UnicodeToLatexFormatter and HTMLUnicodeConversionMaps to handle surrogate surrogate characters to ensure correct formatting for high codepoint unicode characters
added null check for value and modified value assignment logic in OAIDCCrosswalk . java and Item . java to ensure proper handling of character values
webdriverbackedselenium : do n ' t select window if the window handle be null
added a clear button to the StringSearchPanel and modified the BookmarksPanel to check if the name ends with BOOKMARKFILE _ 
refactor OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for URL handling to improve code readability and maintainability by utilizing UrlUtils for
updated timestamp assertions in SoftAssertionsTest to use ` parseDatetime ` instead of ` new Date ( 1 ) ` to improve accuracy of date comparison
updated the ` adaptOrders ` method to include a ` reverse ` parameter and modified the ` adaptOrders ` method to include a ` boolean
updated PrettyPrinter to handle null and pos cases and added a new Java11Var class with a test method to improve robustness of variable type handling
[ java ] removed unused imports from multiple test files to improve code cleanliness and reduce unnecessary dependencies
updated Configuration initialization to use a default value of false instead of a hardcoded value to ensure compatibility with Hive ' s default value in the configuration
removed the call to super . drawChildren ( batch , parentAlpha ) in WidgetGroup . java to simplify the draw method call for better readability
added unit test base on user forum issue
[ java ] use system . getcatalinabase ( ) instead of system . getProperty ( )
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and ` ShadowICU ` classes to ensure correct
added color codes to the ` object ` map in ` PlotSquared . java ` to enhance visual representation of color codes in the PlotSquared class
added zuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enable customization of zuul properties in
[ tika - 116 ] fix unit test for fontparserstest
added two new files , SampleApplication . java , and modified the build time parameter handling in BuildInfoMojo . java to improve testing capabilities and ensure
updated the calculation of ` xDist ` to use ` Math . abs ( ) ` instead of ` mScroller . getFinalX ( )
deleted the GUIRWTester . java file to the file is no longer needed in the project
removed the @ NullableDecl annotation from the LazyMessage constructor and adjusted the countPlaceholders method to simplify the method signature and improve code readability
updated error message format from " Got : " to " Got : % s " in TestStream . java to improve clarity of error reporting for better
[ thymeleaf ] move xmltemplateparser from org . thymeleaf . templateparser to org . thymeleaf .
added a new test method ` testXPathString ` in ` XPathTest . java ` to validate XPath functionality to ensure correct parsing of XML strings
added nullable annotation to FutureUtils . java to ensure proper handling of null values in FutureUtils
do n ' t warn if invokedynamic be not resolve during call - graph construction .
updated email addresses from " myfakeemail . com " to " myfakeemail @ example . com " in ContextTest . java to
updated HTTP response handling in HttpConnectionTest . java and modified URIUtil . decodePath method in URIUtil . java to improve clarity and maintainability
added a method ` getColumnDataType ` to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a way to
camel - 14284 : camel - aws - saml : use default method for serviceclientconfiguration in camel - aws - saml
refactor HSSFPictureData class implementation to improve code readability and maintainability
replaced ` System . currentTimeMillis ( ) ` with ` Instant ` and updated time handling methods to use ` Instant ` instead of ` long ` to
refactor LibMediaInfoParser to use a version - based versioning mechanism to improve clarity and maintainability of the code by encapsulating
added reflection - based proxy creation for Idea dependencies in ProjectReader . java to enhance compatibility with IDEA versions in the project
added a new ` SerialHeap ` class and modified ` CollectedHeapName ` to use it to improve memory management by encapsulating the
added multiple @ SuppressWarnings ( " serial " ) annotations to the Gson $ Types class to suppress serial - specific warning messages
add mouse position to the mouse wheel event to make it easy to use .
updated the method to handle null values in MongoQueryCreator and added a null check for the first name in AbstractPersonRepositoryIntegrationTests to ensure robust
[ hotfix ] [ map ] add multiset annotation for multiset
added a method to retrieve a IncorrectResultSizeDataAccessException for duplicate providers in XOAuthProviderConfigurator to improve error handling for duplicate providers in
added delimiter checks in CMapParser and implemented a test for nasty CMap file parsing to ensure proper handling of character whitespace in CMapParser
refactor ContactsBackupJob to utilize OperationsServiceConnection for better service management to improve code clarity and maintainability by encapsulating operation
added a new method ` inst ` in ` ForAll ` and refactored related methods in ` Infer ` and ` Infer ` classes
add accountid . isconfighidden ( ) and add isconfighidden ( ) method to accountlist .
added a check to ensure supported bounds are not equal to the current list to improve debugging and traceability of supported display states
updated schema removal logic from ` getSchemaName ( ) ` to ` getSchemaKey ( ) ` in ` PMetaDataImpl . java ` and added a
ggb - 139 add passive login event to the login operation
added a new file ` Box2DTest . java ` and modified ` Box2DTest . java ` and ` GDXTester .
[ java ] add debug log for new column and index tombstones
updated the DEFAULT _ BUFFER _ REQUEST _ TIMEOUT from milliseconds to minutes in HybridShuffleConfiguration . java to increase the default buffer request timeout
[ java ] add default generation header to speechsettings .
added a help button to the OpenOfficePanel to enhance user experience by providing a more informative help message
[ java ] add child option for TCP _ NODELAY to NettyAcceptor , ProtocolDecodingServer , and ProtocolPublishDecodingServer to ensure
updated method signatures in BinanceAuthenticated , BinanceFundingHistoryParams , and BinanceFundingHistoryParams classes to improve type safety and clarity
added a transient class reference and refactored class retrieval logic in ScanResultObject . java to improve code readability and maintainability by reducing redundancy
refactor connection handling and logging in DecodeServlet . java to improve code readability and maintainability
added a method to query DSL ' s null handling in Querydsl . java and created a new test class QuerydslIntegrationTests .
added null check for actor before processing actions in ParallelAction and SequenceAction classes to ensure actions are only processed when the actor is not null
fix checkstyle violation in cttypetest . java
added synchronization to the ` sfWritersLock ` block to ensure thread safety when closing ` sfWriters `
added a new interface ` Issue888 _ JavaI ` and ` JK ` implementing ` Issue888 _ JavaI ` and ` Issue888 _
added a new constant REVOKE _ AGENT _ CRT and modified the script argument handling in CertificateManager . java and CertGeneration
added a check for non - body responses in AbstractHttpTest . java and modified conditional logic in HttpServerTestBase . java to ensure that the response is
added null checks for script text and language in ScriptTransformer . java to improve error handling for script loading failures
added support for " Hikaricp " connection poolingType " and " NONE " in multiple files to enhance compatibility with Hikari configuration
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to standardize
added lock and unlock functionality to the FileMenuFilter and updated related logic in OCFileListFragment to improve file locking functionality and ensure proper
updated version handling logic in mmm Version . java and ppp Version . java to improve code readability and maintainability
[ java ] clear endpoint cache in updatestorestore ( )
refactor wait state handling by introducing a new method ` waitForState ` in ` Locks . java ` to improve code readability and maintainability
replaced calls to ` getRule ( ) . getCoercedAttrValues ( ) ` with ` getCoercedAttrValues (
refactored localstorage and sessionstorage interface to extend storage .
added null check for existing views before accessing it in PlanExecutor . java and updated test cases in CreateViewStatementTest . java to ensure that
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling and provide clearer context for the error message
added a null check for the query string before retrieving the Q parameter to avoid potential NullPointerExceptions when the query string is null
added validation for character and whitespace in header values to ensure proper handling of illegal characters and improve error handling for illegal characters
renamed ` instanceSize ` to ` arrayBaseOffset ` and updated related methods in ` HybridLayout ` , ` HostedInstanceClass ` ,
add @ Experimental annotation to abstractapexcommentcontainernode
hhh - 16464 add log message for association with lazy = true
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of SwaggerSpecFilter to
added assertions to verify database and table names in TestCompactionTxnHandler and TxnHandler to ensure correct database and table names are used for compaction
camel - 15284 : timer consumer should not throw exception during graceful shutdown
added a condition to check if the block is processed before adding it to the worklist to ensure that the worklist is only removed when the block
updated ProviderManager to use CollectionUtils and added new test cases for handling null providers to ensure proper handling of null elements and prevent potential NullPointerExceptions
removed unnecessary check for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to simplify the code and improve readability
added assertion checks for the local index limit in ` LocalIndexIT ` , ` BaseScannerRegionObserver ` , and ` ExplainTable ` to
added validation for adding a collection with the same name and its type in AlterTableStatement . java to ensure that a valid collection is added to the
updated cursor handling logic in VDUBuffer . java and vt320 . java to adjust positioning based on screen base to ensure correct cursor
removed the static final constant ` USE _ RETRIES ` from ` HttpShardHandlerFactory . java ` to streamline the code by eliminating unnecessary
updated the VERSION _ NUMBER format in JavaVersion . java and added a new test case in TestJavaVersion . java to ensure compatibility with Java 11
[ hotfix ] [ runtime ] do n ' t run streamtask if there be no input gate
added a new test method ` test ` to ` TestReceivingMessageSourceParserTests ` to mark the test as a test method
added null check for properties before retrieving the key to prevent potential NullPointerException when properties are null
updated IOException handling in FileSystemBlobStrategy to use initCause instead of throwing an IOException to improve error handling by ensuring the original exception is properly propagated
updated error messages in ClusterStackVersionService , AmbariManagementControllerImpl , HostRoleCommandDAO , and HostRoleCommandDAO classes to improve
added a new listener for transaction confidence updates in TxIdTextField . java to ensure that the confidence listener is only added when the transaction is closed
added a new constant G1 _ PERM _ GEN with a value of " G1 Perm Gen " in JmxSupport . java
removed unnecessary imports and refactored the loadAttractionsFromLocationToPlaces method in NearbyController . java to streamline code
pdfbox - 4071 : make clonefornewdocument public ( tcobase )
added imports for TaskInfoCompat and updated activity type check in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activity types
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants to improve clarity and consistency in the codebase
changed method names from ` shouldGiveNetworkCountryIso ` to ` shouldGiveNetworkCountryIsoInLowercase ` and added case - insensitive
removed the setUnfreezeAmount method from UnfreezeBalanceV2Actuator . java to simplify the code and improve readability
[ xlsx ] use minute instead of minute in sentence description
replaced ` Files . copy ` with ` FileUtils . copyDirectory ` in ` FirefoxProfile . java ` to utilize ` FileUtils . copy
refactor assertions in AbstractListAssert , AbstractUriAssert , AbstractUrlAssert , and Lists classes to improve code organization and maintainability
refactor Observable class implementation to improve code readability and maintainability
replaced DBObject with addMultiFieldOperation in Update . java and added unit tests in MongoTemplateTests . java to enhance functionality by allowing multiple push
added null check for randomUUID before setting it to avoid potential NullPointerExceptions when randomUUID is null
added onHoverEvent method to InputConsumer and implemented hover event handling in OverviewInputConsumer and OverviewInputConsumerProxy to improve touch event handling
modified the initialization of the ` boostrapConf ` variable in ` CoreContainer . java ` to include a timeout check for ` zkRun ` and
change default value of ` ` consumer ' ' to ` ` consumer ' '
hbase - 16464 update hbaseclientretries _ number from 5 to 35
refactor template file handling in SourceSnippetHelper to use a new File object to improve code readability and maintainability by using a consistent file path
refactored encodedgraphcachetest . testcachecontains ( ) to improve test coverage
updated query command from " customer _ count " to " all _ tables " and added a new test method for querying over output to improve query
added functionality to adapt and adapt currencies for the kraken assets in KrakenAdapters . java to enhance currency management by allowing dynamic adjustment of
added a ` toString ( ) ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test `
updated the handling of email names in AlertTaskRunnerV2 to use dimensions instead of key to improve clarity and maintainability of email name generation logic
[ influxdb ] add check for non - blank measurement in influxdb
rename ` doTransform ` methods from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in naming conventions
added a method to check for unique local addresses in NetUtils . java to improve address validation logic for better readability and maintainability
added a method to quote column names in DataTextFormatter to improve code readability and maintainability by encapsulating column name quotes
added methods to set system property and property properties in WrapSystem and StrUtils classes to enhance system property management and improve code clarity
added a constructor to UpdateRequest that accepts a URL to provide a default constructor for the UpdateRequest class
removed the static modifier from the EnumSerialization enum declaration to improve code readability and maintainability
solr - 10226 : remove experimental response format warning from dataimporthandler and replicationhandler
[ jpm ] use string . format ( list < string > value ) instead of string . tostring ( )
fix issue with row height of table ( issue # 117 )
[ java ] fix checkstyle violation in defaultbrokerheartbeatmanager
refactor the calculation of mean partition size , partition count , and split count in CqlInputFormat . java to improve clarity and maintainability of the
removed unnecessary null check for the name in JUnitTestsShouldIncludeAssertRule . java to simplify the condition for better readability and maintainability
added equals and hashCode methods to RuleTerminalNodeLeftTuple class to ensure proper equality and hashing of RuleTerminalNodeLeftTuple instances
added import for StageIDsRearranger and resolved StageIDsRearranger in TezCompiler . java to ensure that StageIDsRearranger
[ hotfix ] [ runtime ] change mbean type from mESSAGING - SERVICE - POOL to messagingservice
updated memory consumption logic in LotsOfOutput . java to include a check for the total memory before processing to improve memory management and provide clearer
added imports for ` org . apache . lucene . document . Document ` and ` org . apache . lucene . document . Document ` across multiple
updated ` LdapAutoConfiguration ` and ` LdapProperties ` to use ` anonymousReadOnly ` instead of ` source . getAnonymousReadOnly ( ) ` to
refactor DatabaseMetaData class to improve code organization to enhance maintainability and readability of the code
updated the access modifier of the EchoInputDoFn class from public to private to allow external access to the EchoInputDoFn class for better en
added a ` finishMocking ` method to ` DefaultMockitoSession ` and modified ` DefaultMockitoSession ` to accept a ` Throwable `
refactor dependency handling in GoTestDescription and add new test cases in GoTestIntegrationTest to improve code readability and maintainability by reducing duplication
refactor SPDYAsyncConnection to use writeBuffer instead of flushing to improve readability and maintainability of the code
replace ` getStaticBlock ` with ` getFlowingBlock ` in ` BlockLiquidWrapper . java ` to improve code readability and maintainability
updated the URL handling in AndroidLocationPlayServiceManager and modified the LocationListener instantiation in BackgroundLocationHandler to improve URL handling and ensure proper handling of
refactor AprEndpoint class for improved readability to enhance maintainability and readability of the code
[ hotfix ] [ cli ] use streamingplan instead of planjsondumpgenerator for optimized plan
use computeifabsent instead of computeifabsent in craftingmanager . get ( )
flume - 1299 : fix flaky testfilechannelrestart . testfilechannelrestart . testfilechannelrestart
refactor conditional checks in TabsAndIndentsVisitor . java for improved readability to enhance code readability and maintainability
added a regex pattern for " pg _ temp _ . " in NeuteredLinesFilter . java to enhance the functionality of the Neutered
update gapic - generator - java to 2.16 . 0 and update gax - java to 2.16 . 0 ( # 17 )
added conditional checks for " INTERVAL " and " NCLOB " data type in DataTypeFactory and ColumnSnapshotGenerator classes to ensure compatibility with
[ wavefront ] add ispublishinghistogram ( ) method to wavefrontdistributionsummary .
added a warmup timestamp to the DivideUpstreams in ShenyuClientRegisterSpringCloudServiceImpl . java and updated the DivideUpstream
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable registration of sensors with specified rate limits
added multiple test methods for SocketException in SelectChannelServerSslTest . java to ensure proper handling of socket exceptions during test execution
camel - 14284 : camel - ignite should close the ignite if it ' s not null
added a conditional check for ` cnt ` and modified the logic for retrieving the total line number to ensure that the total line is only processed when the
pdfbox - 4071 : catch unsupportedflavorexception instead of ioexception
added unit tests for ` setDisplayHdrCapabilities ` method in ` ShadowDisplayTest . java ` to ensure correct behavior of ` setDisplayHdrCapabilities
set classLoader to null in JavacInMemoryStep . java to ensure proper resource management and avoid potential memory leaks
updated SemanticException messages to include source and target names in SemanticAnalyzer and added a toString method in SemiJoinHint to improve error reporting and provide
added a constructor to the Message class to provide a default constructor for the Message class
added a new boolean flag ` isGUIClass ` and modified priority calculations in ` SerializableIdiom . java ` to improve clarity and accuracy of
updated PhoenixDecimalObjectInspector and PhoenixObjectInspectorFactory to use PrimitiveTypeInfo instead of DecimalTypeInfo to improve type handling and ensure correct precision scaling for decimal
refactor gzip stream handling in CompressionFilterTestServlet and CompressionServletResponseWrapper classes to improve code clarity and ensure proper handling of committed responses
updated regex patterns and method signatures in Authenticator . java for consistency and clarity to improve code readability and maintainability by using a more descript
removed conditional checks for " EJS " and " omg " directories in DCD . java to simplify the code logic for better readability and maintain
updated thread group name retrieval to use a dedicated method for better clarity to improve code readability and maintainability by encapsulating thread group name
added logging functionality and improved debug logging in MethodInvocationPrivilegeEvaluator . java to enhance code readability and maintainability by reducing duplication
changed the package of DmozParser from org . apache . nutch . crawl to org . apache . nutch . tools to align the
updated import statements in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy classes to improve code clarity and reduce unnecessary dependencies
[ flink - 26464 ] [ vm ] add iso path to the vm for the same iso type .
refactor signal handling in SigInt . java and update test assertions in SigIntTest . java to improve code readability and maintainability
replaced static import of ` org . apache . commons . lang3 . ArrayUtils ` with ` ArrayUtils . isEmpty ` in ` NodeTool .
updated imports and annotation annotations in AxonAutoConfigurationWithSpringCloudTest . java to use Spring Boot and added a discovery client bean to
added multiple @ Override annotations in ColorRGBA . java to improve code readability and maintainability
[ hotfix ] [ plan ] remove deprecated planningentityselector . resetinitializedplanningentity ( )
added build time handling to RuleKey and ManifestRuleKeyManager classes to ensure accurate tracking of build time in the cache
refactor field retrieval to use getDeclaredFields ( ) and getDeclaredFields ( ) in GroupByOperator . java to improve code readability and maintainability
added null check for the block before adding block appearance to avoid potential NullPointerExceptions when the block is null
added new currency pairs CNC _ BTC and CNC _ BTC to the CurrencyPair classes to support CNC and CNC currencies in
updated the skewAllowance value from 5 to 15 and modified related methods to use CasConfigurationProperties to improve flexibility and maintainability of the SAML
added ItemSortBy import and modified sorting logic in SongListActivity and Utils classes to enhance sorting functionality for better user experience
removed unused imports and modified the body writing logic in Utils . java to streamline the code by eliminating unnecessary dependencies
[ jnbt ] deprecate legacybaseblockwrapper in favor of legacybaseblockwrapper
updated IcebergBranchExec to check for the existence of a tag before retrieving the snapshot ID to improve error handling and provide clearer error messages for
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest . java
refactored photonmappingdemo to use glgetprogramresourceindex instead of glgetprogramresourceindex .
added validation for requirePasswwordChangeRequired in IdentityProviderEndpoints . java and improved error handling in IdentityProviderEndpointsMockMvcTests . java to
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that all instances are removed from the constructor
added URL handling for closed connections in JdbcExecutor . java to ensure proper error reporting for closed connections
added a new test method ` testRequiredBody ` to ` SpringmvcClient ` to verify the presence of required parameters to ensure that required body
updated regex patterns in CredentialInjector . java and modified password pattern in CredentialInjectorTest . java to ensure correct matching of passwords in the
added a new menu item " Item4 " to the menuItems array and implemented a keyboard shortcut for the ENTER key to enhance user experience by
updated test assertions to use getClass ( ) instead of string concatenation to improve readability and maintainability of the test output
updated equality checks from ' id ' to ' id ' in SimpleNode . java to improve code readability and maintainability
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the PopulatorContextStackItem class
updated the handling of numDocs in MoreLikeThis . java and added a test for small sample in TestMoreLikeThis . java to ensure accurate
reformatted code for improved readability in QuestManager . java to enhance readability and maintainability of the code
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated the append method in MongoSessionDataStore from " $ gt " to " $ lt " to ensure proper handling of query parameters in the query
added a native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to enable dynamic retrieval of long values in the compiler
updated time zone name from ARAST to EET in multiple language files to ensure consistency in time zone representation across the application
updated the id from 90000010 to 90000011 in DeprecationLogger . java to correct the id from 90000010 to 900000
hhh - 16464 - do n ' t throw jdbcexception if rollbackonly be false .
updated conditional logic in DownloadExternalFile . java to handle empty suffix cases to improve code readability and maintainability by reducing redundancy
do n ' t show menubar on macosx
add piecewise integration test for geogebracas
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected in `
added a new test method ` testConfigWhiteList ` to ` HiveConf ` and a corresponding test in ` TestJdbcWithSQLAuthorization ` to
removed duplicate entry name mapping in EntryLoader . java to streamline code by eliminating redundant entries
use player . team ( ) instead of team . sharded .
updated Cookie . Builder to use domainHelper . getHostName ( ) instead of a hardcoded value to ensure consistency in cookie naming conventions
added checks for non - null values in MissingColumnChangeGenerator , MissingTableChangeGenerator , and ColumnSnapshotGenerator to ensure proper validation of nullable values
refactor multiple security - related classes to improve code organization to enhance maintainability and readability of security - related classes
added query functionality and improved null checks in CompositeIdRouter . java and CompositeIdRouter . java to enhance query functionality and ensure proper handling of document
added snapshot storage functionality in ExecutablePreparedStatementBase and updated dependenciesChangeLog initialization in PostgreSQLIntegrationTest to enhance compatibility with Postgres databases
updated conditional checks for ` _ cache ` and ` _ cached _ file _ size ` in ` DefaultServlet . java ` to ensure proper handling of
added drag - and - drop functionality to the jabref frame to improve drag - and - drop functionality for better user experience
refactor ExecutionUnitRunner and related tests to use Description . createTestDescription for better clarity to improve code readability and maintainability by standardizing
updated conditional check to use StringUtils . isNotEmpty ( myVersion ) instead of string . isEmpty ( myVersion ) to improve code readability and maintainability
removed the ` public ` access modifier from several methods in ` TimeUtils ` , ` TimeUtilsTest ` , and ` TimeUtilsTest ` to
added a method handle check in ` RefectionMHTests ` and refactored class name checks in ` RefectionMHTests ` to
updated file name check from " jpg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with the new file extension
make native - image - debug - info provider work with hosted method
added getIcon ( ) method to Data , Data , DataData , and DataTableTopComponent classes to provide a way to load icon resources from the data
updated substring method to check for non - negative indexing before returning the request name to improve performance by avoiding unnecessary substring operations
updated regex replacement logic in FindAndReplace . java and added a new test case in FindAndReplaceTest . java to ensure proper handling of regex
[ java ] use connection instead of xmppconnection to avoid unnecessary casting .
refactor SchemaExtractionProcessor to improve code organization to enhance maintainability and readability of the code
added a new method ` copyDir ` in ` IO . java ` and modified ` SpecWebAppTest . java ` to utilize it to
added a throw statement for unknown datum class in JacksonUtils . java to improve error handling for unknown datum types
refactor ABI handling in DefaultJavaLibraryBuilder to utilize library target retrieval to improve code readability and maintainability by centralizing library target
removed unnecessary padding and background padding calculations in SelectBox . java to simplify height calculations for better readability and maintainability
added normalization of database and table names in ObjectStore . java to ensure consistent handling of database and table names
added schema validation for postgres and oracle databases in DbSqlSession . java to ensure correct schema is set when the database type is not set
removed the logout method from the HomeFragment to simplify the code by eliminating unnecessary logout logic
[ hotfix ] [ test ] use foobartask ( # 1337 )
added null check for candidates before retrieving the priviledged list to avoid potential NullPointerExceptions when candidates are null
updated the condition in ContainerLifeCycle to check if the bean is a managed state instead of a managed state to improve code readability and maintainability by
rename iexecutionattributesdialect to iexecutionattributedialect instead of iexecutionattributesdialect
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure metadata is cleared before execution
[ hotfix ] [ table - planner ] fix npe in gettime ( )
added a null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueue to implement a DisruptorQueueExceptionHandler to
deleted the Session2Token . java file to the class is no longer needed in the project
delete the dest volume if it fail to create a new one
added a new ` Install ` class and integrated it into ` SystemShortcut ` and ` InstantAppResolver ` to support instant apps in the launcher
added a constructor to ` LdapAuthenticationProvider ` and modified tests in ` LdapAuthenticationProviderTests ` to ensure that null authorities populator returns correct role
updated the way the ` retrolambda . jar ` is retrieved in ` Executor . java ` and added a check for ` retrolambda `
replaced ` .OrThrow ( ) ` with ` . get ( ) ` in ` ShadowCamera . java ` to improve code readability and maintainability
refactor ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` to improve code readability and maintainability by
added handleNullResult method to JMESPathExtractor to handle null results to improve robustness by preventing potential null pointer exceptions
updated import statements and added null check for user authorities in AuthorizeTag . java to improve code clarity and prevent potential null pointer exceptions
updated test cases to use ` url . iterator ( ) ` instead of ` url . next ( ) ` for consistency to improve code readability and
[ hotfix ] [ vm ] fix typo in vm snapshot error message
replaced ` classConfig ` with ` methodClassConfig ` and added null checks for ` configClassConfig ` in ` RobolectricTestRunner `
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to improve clarity and maintainability of the code
added a new method ` checkPartialPartKeysEqual ` in ` HiveAlterHandler ` and refactored existing logic in ` TestHive
added a new boolean flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to control the visibility of the icon in
corrected a typo in the conditional statement in SimulationStatus . java to improve code readability and maintainability
replaced ` SharedBlockingCallback ` with ` Callback . Completable ` across multiple files to improve code clarity and maintainability by using a more de
added workspace update listener to the PreviewControllerImpl class and updated the PreviewUIController to manage workspace updates to ensure the preview graph is updated
updated conditional checks in ReflectionFactory . java to include a check for anonymous classes to ensure that anonymous classes are only processed when the class is anonymous
refactor TransportHelper class to improve code organization to enhance maintainability and readability of the code
updated file path formatting in CatalinaAcegiUserRealm . java to improve code readability and maintainability
updated logging statements in AmbariServer . java for consistency to improve readability and maintainability of the server initialization process
added null checks for ` forNode ` and ` node ` in ` JSONWriter . java ` to ensure robustness by preventing potential NullPointerExceptions
refactor run method to accept a FileSystem parameter instead of a hardcoded path to improve code readability and maintainability by reducing redundancy
added a condition to check if backgroundManager is attached before attaching it to ensure that backgroundManager is only attached when not attached
updated tab settings in AllAppsTabbed , Launcher , Launcher , PagedView , and Workspace classes to improve tab positioning and
added null check for ` p ` in ` BaseDataSource ` and created a corresponding test in ` SimpleDataSourceTest ` to ensure that the URL is
added JUnit JAVA _ 11 and JRE @ EnabledOnJre annotation to the PebbleModuleTest class to enable compatibility with J
added a EditNameDialog to the FileDisplayActivity to manage the creation of a directory in the uploader to enhance user experience by allowing users to
added support for toggleing bar border width in multiple activity classes to ensure proper resource management and prevent potential memory leaks
updated the SSL URI from " www . okcoin . com " to " www . okex . com " in OkCoinExchange . java to
use naturalscorecomparator instead of FIXME _ test _ pick _ max _ score _ of _ all
replaced ` FileChannel . open ` with ` SeekableByteChannel ` in ` Files . java ` and added bytes comparison in ` BytesAndLines . java
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter to improve code readability and maintainability by reducing
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] fix checkstyle violation in serializationconfigurationparser
added memory limit for ActivityManager in QuickstepProcessInitializer . java to limit the watch heap limit for debug devices
updated the lambda expression in the Collectors class to correctly increment the value in the sumWithCompensation method to improve readability and maintainability of the code
[ log4j2 - 117 ] fix osgi test failure
reformatted code for better readability in PrecompactedRow . java to improve code readability and maintainability
updated return values in ICC _ Profile , ColorConvertOp , and ColorConvertOp classes , and added a new test class InvalidRenderIntentTest to
add meterregistrylifecycle support to metricsautoconfiguration
changed log level from warn to info in ConfigurationUtils . java to improve logging clarity by using a more descriptive constant
added error handling for generating and failing certificates in CertificateFactoryTest . java to ensure robustness by preventing potential CertificateExceptions during certificate generation
[ camel - 14224 ] simpletokenizer : fix string indexoutofboundsexception in simpletokenizer
refactor onTabUnselected method in EditorActivity and add onFocusChanged method in IDEEditor to improve code readability and maintainability by
updated error logging message to include user ' s name in the error message to improve clarity of error reporting by providing more context on the user ' s
updated scaling parameters and added null check for ogre mesh names to improve robustness and prevent potential NullPointerExceptions
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should no longer be used
added handling for the " dtsout " option in JSweetCommandLineLauncher and JSweetTranspiler classes to enable dynamic generation of
added a test method ` testKinesisFetchTimeout ` in ` StreamConfigTest ` and updated the ` fetchTimeout ` variable in ` StreamConfig `
updated the timestamp format in StreamingDataflowWorker . java to include a " . html " file to improve clarity and maintainability of the timestamp
increased the maximum number of threads in METASTORESERVERMAXTHREADS from 100000 to 1000 to increase the maximum number of threads for better performance
changed the return type of the onTaskSnapshotChanged method from void to boolean to enable the return value of the onTaskSnapshotChanged method
change shadow radius from mMaxShadowRadius to shadowRadius in SwipeUpAnimationLogic . java to ensure the correct shadow radius is set based on
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to verify the behavior of ` chainNesting
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure proper error handling
change source . isinternal ( ) to isinteractive ( ) in polyglotcontextimpl .
updated null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to improve code readability and maintainability
added DisplayController import and updated WindowManagerProxy initialization to include DisplayController in LauncherPreviewRenderer . java to enhance functionality by utilizing DisplayController
updated the logic for determining the tool tip text in MetalFileChooserUI and SynthFileChooserUIImpl to ensure the correct tool tip text is displayed
replace getToolkit ( ) with Toolkit . getDefaultToolkit ( ) in LooksFrame . java to ensure compatibility with the system ' s system ' s
updated the return type of the recognise method from ` RecognisedObject ` to ` CaptionObject ` in ` TensorflowRESTCaption
added unit tests for fetching and removing entities in JPASQLBase . java to improve test coverage for querying results with factory expressions
removed the drag index calculation in FreeformFinSetConfig . java to streamline the code by eliminating unnecessary points
updated the moe version from " 1.1 . 2 " to " 1.1 . 0 " to ensure compatibility with the latest features and features
updated error message from " constant canot " to " constant cannot set call value " and added program . spendAllGas ( ) call to
updated error message format from " error " to " error " in multiple files to improve clarity and consistency in error reporting
added a @ Deprecated annotation to the Weights class to indicate that the Weights class is outdated and should no longer be used
refactor unsafe plugin registration logic in AMD64GraphBuilderPlugins and StandardGraphBuilderPlugins to improve code readability and maintainability by encaps
added @ Hint annotations and a new test for blacklisted modules in AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and Sample
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable the center page vertically based on
[ hotfix ] [ runtime ] fix typo in migrationrequestoperation
[ hotfix ] [ test ] use baseurl instead of hostname
changed the type of ` attributeValue ` from ` Object attributeValue ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy
updated the createTestTable method to accept a database parameter and modified the processQuery method to include it to ensure that the database is properly managed and
added a new test method ` testCaseInsideBrackets ` to the ` CaseExpressionTest ` class to ensure correct parsing and deparsing of SQL
added MotionEventCompat imports and refactored copy mode handling in ConsoleActivity . java to improve code readability and maintainability by encaps
updated the ` writeXmlOutput ` method to use ` DocumentBuilder ` and ` DocumentBuilderFactory ` and refactored the ` writeXmlOutput ` method
camel - 14284 : fix npe in listaggregationstrategy when exchange be null
camel - 14247 : camel - exchange - exception - add a method to create the exception message
move basicconfigurator and socketmin to classic instead of logback
add a check for the presence of the PHI _ NODE flag in TypeQualifierDataflowAnalysis . java to ensure that the target VN flag
removed unused import of SharedStringSource in TestXSSFRichTextString . java to streamline code by eliminating unnecessary dependencies
added a static method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to provide a way to invoke a method in the ` ObjectInvoke
refactor BoxAndWhisker classes to improve code organization and readability to enhance maintainability and readability of the codebase
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
fix a bug in the coredescriptor . getdefaultcorename ( ) method to use equals ( ) instead of equals ( ) .
changed the visibility of the IndexFileNameFilter from public to private to allow subclasses to access the IndexFileNameFilter instance
[ java ] fix ifstatementtest failure in ifstatementtest
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to
refactor Gson initialization to use a nullSafe method instead of a static method to improve code readability and maintainability by reducing duplication
updated the expected size of the BundledDistributionTest from 12 to 13 to ensure the test accurately reflects the expected size of the distribution
added a new file ` EXIFReader . java ` that implements an ` EXIFReader ` class to handle image thumbnails like compression and re
update tostandardunit to return none instead of unknown to sdk version
[ kie - api - pmml ] do n ' t throw exception when create a model with the wrong parameter type
updated error message formatting in FluentProtocol . java to provide clearer insights into the expected phase and state of the expected phase
added a condition to check if the bubble bar is visible before proceeding to avoid unnecessary processing when the bar is not visible
fix aarch64 backend to handle branchtargetoutofboundsexception
added a try - finally block around the initPending variable in JDKXRLogger . java and created a test in XRLogTest
added a ` find ` method to ` TicketCatalog ` and modified logging messages in ` DefaultTicketCatalog ` , ` DefaultTicketCatalog ` ,
reformatted code for consistency and improved readability in TestSSL . java to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] fix thread safety issue in sortmergeresultpartition
updated Read and Write methods to include additional parameters to enhance flexibility in reading and writing operations
updated PluginHandleController , PluginHandleDTO , and PluginHandleDO classes to include type and sort parameters to enhance plugin handling capabilities by allowing sorting of
replaced ` start ( ) ` with ` start ( ) ` in ` DefaultSpanCreator . java ` and ` SleuthAdvisorConfig .
added imports for ` cocoatouch ` and ` stencilFormat ` in ` IOSApplicationConfiguration ` and ` IOSGraphics
replaced direct calls to ` sendKeys ` with ` attemptLogin ` in ` LoginIT . java ` to improve code readability and maintainability by
added unsupported operations for ` real ( ) ` and ` complex ( ) ` in ` JniUtils . java ` to ensure that ` real (
refactor lock name retrieval logic in SynchronizationStatistics . java to use a do - while loop to improve code readability and maintainability
refactor Implements and ShadowPicker classes for improved clarity to enhance maintainability and readability of the code
refactor HttpClientOptions initialization to use a dedicated method for better encapsulation to improve code readability and maintainability by encapsulating
added support for dynamic array types in DynamicStruct , SolidityFunctionWrapper , and improved error handling in SolidityFunctionWrapper to enhance type
added a new boolean parameter ` true ` to the ` getStringProperty ` method calls in ` InlineLayout . java ` and ` FontUtil . java
added constructors for ` CopyStep ` with a ` Path ` parameter to the ` CopyStep ` class to enhance the functionality of ` CopyStep
fixed - rsemaphore . acquire ( ) not call after add permits
camel - 14247 : camel - dsl - fix test failure in camel - dsl
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` and ` FlavorParserTest ` to utilize it to improve
change data type from String to ByteString in WitnessScheduleStore . java to improve type safety and ensure compatibility with byte data types
added a check for non - empty resultsMeta before logging results to avoid unnecessary print statements when there are no results
refactor ConcurrentLinkedQueue handling in ConcurrentLinkedQueue and add a new RemoveLeak class to improve code readability and introduce a new class RemoveLeak
added a new parameter ` addSpecialTokens ` to the ` encode ` and ` batchEncode ` methods in the ` HuggingFaceTokenizer ` class
[ hotfix ] [ runtime ] use list . ncopy ( numofslots ) instead of list . add ( numofslots )
updated chunk data handling in LoadSingleTsFileNode . java to use aligned chunk data to improve data handling and ensure consistent chunk data alignment
added a new constant ` KEY _ SESSION _ STORAGE _ CONTEXT ` and updated its usage in ` DuoSecurityMultifactorWebflow
added a new test method ` testSchemaValidation ` to ` TestJspDocumentParser ` to validate XML schema validation to ensure proper handling of XML
added a constructor to TypeAdapter and removed the @ Ignore annotation in Java17RecordTest and Java17RecordTest to ensure proper initialization of TypeAdapter
added a kill flag to the SuspendedEvent and implemented a prepareKill method in SuspendedEvent to improve error handling and provide clearer
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
removed null parameters from createResourcePolicy methods across multiple classes to simplify the method signature and improve code readability
added null check for _ deflaterEntry before release it in GzipHttpOutputInterceptor . java and updated assertions in BlockingTest . java to
added JUnit @ AfterEach annotation to ReactorCoreAutoConfigurationTests to mark the test as completed after each test execution
updated MD5 checksum calculation to use normalized characters to improve accuracy of checksum verification by removing unknown unicode characters
refactor command handling in Example . java to improve code readability and maintainability to enhance code clarity and prevent potential null pointer exceptions
changed keyListener to be final and added multiple @ Override annotations in BasicProfilerState . java and BaseAppState . java to ensure immutability
replaced ` @ SuppressWarnings ( " unchecked " ) ` with ` dbDoc ` in ` MongoTemplate ` and added a test for saving JSON strings
added a method to check for multiple remote addresses in RequestUtils and created a corresponding test in RequestUtilsTest to ensure correct handling of remote addresses in
replaced ` String ` with ` ObjectBuilder ` in ` getJobArgs ` and ` getJobArgs ` methods to improve code readability and maintainability by
updated CookieManagerTest and UnmodifiableMaps classes to use a static host address instead of a hardcoded value to improve code readability and
refactor glyph rendering logic in GlyphLayout . java and add a new test case in BitmapFontTest . java to improve performance by avoiding unnecessary whitespace
[ pulsar ] implement pauseorresumesplit in pulsarsourcereaderbase and pulsarpartitionsplitreaderbase
added configuration for HIVESCRIPT _ OPERATOR _ ID in HiveConf and updated environment variable handling in ScriptOperator to enhance script execution flexibility by allowing
refactor ` getListedTermCounts ` method to use ` SimpleImmutableEntry ` and ` SimpleImmutableEntry ` for sorting terms to improve performance
added a new action ` UseSeparateStepSizeAction ` to manage step sizes in the jog plugin to enhance user experience by allowing users to
updated FileMenuFilter to use final fields and added user - specific filtering logic to improve code clarity and ensure immutability of file operations
hbase - 16464 fix hbase table split error
updated HTTP header headers from " false " to " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest to ensure compatibility with newer HTTP client
pdfbox - 2852 : use io . closeclose ( ) instead of force = false
added native methods to GwtApplication and GwtGraphics classes and updated fullscreen handling in GwtGraphics to improve rendering capabilities and ensure proper rendering of fullscreen
updated WebfingerIssuerService to use URI instead of String to improve URI handling and enhance resource normalization logic
added a new test class ` SoulApacheDubboClientConfigurationTest ` for testing the ` DubboConfig ` functionality to ensure
replaced ` Gdx . files . internal ( fileName ) ` with ` resolve ( fileName ) ` in ` SkinLoader . java ` to simplify
updated logging level from warn to info for attributes in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to improve logging
replaced ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK . lock
changed the package declaration from ` java . lang ` to ` java . lang ` to improve organization and clarity of the codebase
fix nullderefandredundantcomparisonfinder to handle codeexceptions more gracefully
use defaulthttpdatasource instead of contentid in dashrendererbuilder
added configuration property for maximum prepared statements per database connection to enhance configuration flexibility for managing prepared statements per database connection
rename ` set ` method to ` set ` in multiple configuration classes to improve clarity and consistency in naming conventions
added error handling to the checkErr method in AutoScalingHandler . java to ensure proper error handling for command payloads
refactor CombinedDataset class to improve code readability to enhance maintainability and readability of the code
updated the loop condition in InflateIn _ DeflateOut . java to use ` b ` instead of ` buf ` to improve readability and
added methods to remove and remove cryptography restrictions in Utilities . java to enhance security by preventing unnecessary encryption restrictions
refactor chunk generation logic into a delayed task to improve code readability and maintainability by reducing duplication
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to verify page margins long text
refactor vectorization context handling in Vectorizer . java to improve code readability and maintainability
updated the speed calculation in WialonProtocolDecoder from a fixed value to a fixed value of 0.539957 to improve accuracy of speed
hbase - 16464 disable metric user aggregate if regionserver do n ' t support it
added a ` isEmpty ( ) ` method to ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to ensure that the ` isEmpty (
added boolean variables mUserPresent , mVisible , and mAttached variables to manage state changes to ensure proper handling of receiver registration when the receiver is
refactor AsyncFile , HttpClientRequest , HttpClientResponse , NetSocket , and ReadStream classes to improve code organization and maintainability
[ java ] add params parameter to the zadd ( ) method .
[ hotfix ] [ test ] fix typo in metadata import test
updated TestAsyncMessages class to TestAsyncMessagesPerformance and removed the @ Ignore annotation to streamline test execution and improve code clarity
refactor ` VersionedTargetGraphBuilder ` to utilize a new ` getNodeOptional ` method in ` VersionPropagatorBuilder ` to improve
replaced EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW with EPOCH _ SECONDS _ LOW in the
updated the return value from 4 to HEADER _ SIZE in EscherBlipRecord . java and added a new test class TestOLE2Embed
removed redundant initialization of row and column variables in JSONParser . java to streamline code by eliminating unnecessary variables
replaced ` JavaType . ShallowClass . FullyQualified ` with ` StringUtils . regexToPattern ` for type matching to improve flexibility in type matching
updated DETAIL _ THUMB _ HEIGHT and DETAIL _ THUMB _ HEIGHT from 200 to 300 and modified trailer retrieval logic
added a method to remove glyph information from the cache in CStrike . java and introduced a new method in CStrikeDisposer . java
fix terminateendeventactivitybehavior to record the end of the process
camel - 14247 : camel - typenamestrategy should use the xml bind annotation if it ' s empty
updated the endpoint from " http : / / www . apereo . org / scottb . org " to " https : / /
add option to reset all preferences to default value
changed access modifiers of several methods from private to protected in ThriftMetrics and ThriftServer classes to allow subclasses to access these methods for better encaps
removed the deprecated ` manual _ fan _ speed ` channel and updated its usage in ` DanfossAirUnitHandler ` to streamline the
updated assertions in TestEndpoint to use Hamcrest matchers instead of JUnit assertions to improve readability and maintainability of test assertions
removed unnecessary null checks for expansionHelper in TweetActivity . java to streamline the code by eliminating redundant checks
added equals and hashCode methods to PartitionPanel , PartitionFactory , and PartitionFactory classes to improve object comparison and hashing functionality for PartImpl instances
added a check to set the ROOT _ DISK _ SIZE in UserVmManagerImpl . java to ensure that the disk size is only set when
updated visibility logic in PredictionRowView to use PreferenceManager2 instead of mPredictionsEnabled to improve user experience by ensuring predictions are displayed only
[ geos - 13939 ] geoserver - ogc api : add a method to filter bbox .
added validation methods for value and position parameters in LibrustzcashParam . java and updated test cases in LibrustzcashTest . java to
added a deprecated annotation to the IThrowableEntity class to mark the class as deprecated to indicate that the class is outdated and should no longer be used
updated the initialization of the x and y variables in NodeDataImpl . java to ensure correct positioning of the node
added a new test method ` validateRefreshToken _ happycase ( ) ` to ` validateRefreshToken _ happycase ( ) ` and modified the ` validate
refactor the initialization of ` invocation ` and ` firstOrderStdout ` in ` JavacStep . java ` to ensure proper resource management and
update version number from 0.9 . 1 to 0.9 . 2 in mmm Version . java and ppp Version . java to reflect the latest release
added a condition to check if the item type is DEEP _ SHORTCUT in LoaderCursor . java to ensure that the item type is
added hashCode ( ) method to TimeGranularitySpec class to ensure consistent hash code generation across different time types
changed visibility of BooleanWeight and DisjunctionMaxQuery classes from private to protected in BooleanQuery , DisjunctionMaxQuery , and Disj
added a boolean flag ` useProxyResponseCode ` to control proxy response code behavior in ` HttpURLConnection . java ` to ensure proper handling of response
fix aarch64move to use allocatablevalue . combine instead of aarch64 . zr
do n ' t return reserved capacity if there be no service offering
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and updated query in ` TestDistributedSearch
updated the audio recoder from 22050 to 44100 in AudioRecorderTest . java to correct the audio recoder duration from 22050
updated the calculation of ` newOriginX ` to use ` subjectBounds _ m . getMinX ( ) * scale ` instead of ` subjectBounds _
[ calcite - 186 ] fix npe in druidquerybasedinputformat when dataSource be null or empty
added ORIGINAL _ TYPE and ORIGINAL _ TYPE parameters to CustomProperty . java and updated regex patterns in CustomPropertyTest . java to
added a static method ` create ` to create a ` Index ` instance with a parent and data map to facilitate the creation of an index based on
removed the boolean variable ` isBetweenGivenPeriod ` and simplified the return statement to streamline the logic for better readability and maintainability
updated the ` SchemaCompatibility ` and ` SchemaPairCompatibility ` classes to include a ` location ` parameter in the ` mergedWith ` method to ensure
added persistence - related imports and refactored path handling in QueryUtils . java to improve code readability and maintainability by encaps
added synchronized block to the ` spans ` list in ` TestSpanHandler . java ` to ensure thread safety when accessing ` spans `
changed generic type parameters from List < Object > to List < ? > across multiple classes to enhance type safety and avoid potential ClassCastExceptions
updated exception handling in ViewContextImpl . java to use InvocationTargetException instead of Exception to improve error handling and provide clearer logging for default realms
refactor OAuth2AccessTokenEntity to improve code organization to enhance maintainability and readability of the code
updated error messages in SCBEngine , TestInvocationFactory , and HighwayServerInvoke classes to provide clearer feedback when requests are rejected
added new project files for the ios data and moe resources in GdxSetup . java to enhance the project ' s visual representation of the
updated import statements and added ConcurrentMergeScheduler to TestSearcherManager . java to ensure compatibility with Lucene ' s indexing framework
added a null and empty check for session state in QTestUtil . java and modified list handling in GenericUDTFInline . java to ensure
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
added multiple calls to the ` e . preventDefault ( ) ` method in ` SpreadsheetKeyListenerW . java ` to ensure proper handling of
hhh - 16447 - hibernatebundlebundle . stop ( ) do n ' t call context . unregister ( )
[ java ] use connectiontimeout instead of elapsedtimems ( start ) in hikaripool
use non - packaged - resources to create non - packaged - resources in voicecompiler
updated file path handling in Compat . java and FileOpener . java , and modified file existence check in FileOpener . java to improve
changed the return type of the row ( ) method from Cell < T > to void to simplify the method signature and improve code readability
added port quota checks and validation in BesuCommand . java and corresponding test cases in BesuCommandTest . java to ensure that multiple ports are
added a boolean field ` _ nullMask ` and its getter / setter in ` WebSocketClient ` and updated connection creation logic in ` WebSocketServlet `
refactor genUDTFPlan method to return a Pair instead of a direct variable reference to improve code readability and maintainability by using a
added counter tracking for selected nodes in NodeScheduler , NodeSelectionStats , and TopologyAwareNodeSelector classes to improve the accuracy of node selection statistics
added a new file ` Person . java ` that defines a name and its getter / setter for the Person class to facilitate the management of the Person
added a boolean flag ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to improve handling of the owner pointer
added clock handling and animation management in PlaybackOverlayFragment to improve user experience by providing smoother transitions and animations
remove unused world . updatecomparatoroutputlevel ( ) call
changed the visibility of the IMPL class from final to non - final and added exception handling for SecurityException to improve code readability and provide clear
refactor cell handling in Sudoku . java to use SwingUtilities for thread safety to ensure thread safety when accessing cell values
refactor ` DefaultInetAddressAdapter ` and ` INET _ ADDRESS _ ADAPTER ` to ` INET _ ADDRESS _
added static final constants for null values in Series . java and corresponding tests in DataFrameTest . java to enhance error handling for null values and ensure proper
updated the audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to ensure the
updated boundary checks for latitude and longitude in GeoRelationUtils . java and added polygon query in GeoPointQuery . java to improve accuracy of latitude and
cloudstack - 12626 : use getdiskofferingid ( ) instead of getid ( )
added a cleanup method in HazelcastTest . java to ensure proper cleanup of the Hazelcast instance after tests
added tests for the ` getInstance ` method in ` BlockCipherTest . java ` to ensure proper error handling for unsupported algorithms
added filters to print operations logs in QFileClient . java to enhance user experience by providing clearer information about operations
[ aop ] add support for inject parent interface in aop .
added null check for currentConnectionAddress before assigning it to proxySocketAddress to avoid potential NullPointerExceptions when currentConnectionAddress is null
replaced ` Math . addExact ` with ` MathUtils . cappedAdd ` in WebSocketConnection . java to improve performance by utilizing MathUtils for
refactor image output handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
replaced ` showSearch ` method with ` searchIntent ` in multiple activity classes to simplify the code and improve maintainability by using a more descript
removed the ` this ` keyword from the ` SchemaCrawlerOptions ` initialization and simplified the ` toString ` method in ` GrepOptions ` to improve
( chore ) camel - jbang - add osgi configuration to the web console
added a @ Autowired annotation to the RepositoryIndexCreationIntegrationTests class to enable the creation of a PersonRepository instance
changed the exception type from Exception to InterruptedException in UIServer . java and updated logging message in TestVertxUIManual . java to improve error
refactor case statements in BlockCactus . java for improved readability to enhance maintainability and readability of the code
refactor mouse event handling in ThemeSelector to utilize MouseMotionAdapter for mouse event handling to improve user interaction by ensuring mouse events are properly handled
added a new abstract class AbstractMinMulticastFlowControlRhsPadding that extends AbstractMinMulticastFlowControlRhsPadding to extend AbstractMin
added alignment support to the ` editStringAt ` method in ` IOSImplementation ` and ` IOSNative ` classes to enhance the functionality by
removed unnecessary exception handling in StatTokSentAnnotator . java to improve code readability and maintainability
added a condition to check if the query is not distinct in ClusterIntegrationTestUtils and updated query generation logic in QueryGenerator to ensure that distinct queries are
make stringsimiliarity and stringsimilarity public in JNIReflectionDictionary and JNIJNIReflectionDictionary classes to allow external access to string
fix checkstyle issue in jsyntaxtextarea and jsyntaxtextarea
added null check for children before iterating in PartitionPruner . java to prevent potential NullPointerException when children is null
added tokenPosition and currentPosition fields to MessagePackParser and updated related tests in MessagePackParserTest to improve handling of JSON parsing logic and ensure
added a ` @ AfterClass ( ) ` method to set the default locale in ` AbstractSolrMorphlineTestBase . java ` to ensure that the
removed conditional checks for launcher size calculation in LauncherFragment . java to simplify code and improve readability
add unit tests for MetricsReporter functionality to ensure correct functionality of metrics reporting in the application
camel - 14247 : camel - mock - osgi : remove unused typecachemap
added ` equals ` and ` hashCode ` methods to ` Rectangle ` class and implemented ` equals ` and ` hashCode ` methods in ` Rectangle ` class
[ java ] add test _ nonexistenttopic to test _ nonexistenttopic .
updated condition checks in DSAParameterGenerator to check for non - negative values instead of hardcoded values to improve code readability and maintainability
added LLAP _ DAEMON _ DAEMON _ DAEMON _ DAEMON _ AM _ USE _ FQDN configuration
update clientoutofmemoryhandlertest to use asserttaskually instead of asserttask
added ` getCmoObjectId ` method to multiple shape classes to ensure consistency in object ID retrieval across shapes
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of fetching distinct posts
updated Driver , SearchTravRetLoadFieldSelectorTask , SearchTravRetLoadFieldSelectorTask , and SearchTravRetTask classes to
remove binding / unbind extension adapter from managedkurnetesclient
updated subtitle text to use ` Utils . getInfoRow ( baseItem ) ` instead of ` getOfficialialRating ( ) ` to
updated JUnit imports and annotations from ` org . junit . Before ` to ` org . junit . jupiter . api ` in multiple
added error handling for generating summary HTML in BugCollectionBugReporter . java to improve robustness by logging errors when the generated summary is not found
removed the ` false ` parameter from the ` reset ( false , false ) ` method call in ` TermsHash . java ` to simplify the
added multiple @ Override annotations in FilterInputStream . java to ensure proper implementation of method overriding
added a new ` WindowSessionDelegateU ` class and modified conditional checks in ` ShadowWindowManagerGlobal . java ` to ensure compatibility with the new
updated scheme validation logic in UrlHelper . java and added a test for non - standard port in UrlHelperTest . java to ensure proper handling of
added support for MSSQLDatabase in foreign key constraint handling to improve compatibility with MSSQL databases
hbase - 16464 remove duplicate code in hstore . replacestorefiles
remove system . out . println ( ) from emzuli emzuli .
refactor logging logic in HtmlIdentifier to use a static variable to improve code readability and maintainability by encapsulating logging functionality
updated method calls from getProducedTableSchema ( ) to getTableSchema ( ) in HiveLookupTableSource . java and HiveLookupJoinITCase
[ android ] add verifycurrentthreadandinitialstate ( ) and verifycurrentthread ( ) to listenerset .
added CatalogAndSchema import and updated SCHEMANAME construction in SequenceSnapshotGenerator . java to ensure correct schema name retrieval for database operations
updated color calculations in SpriteBatch , SpriteCache , LwjglDebugStarter , LwjglDebugStarter , and
fixed - redissonconnection . join ( ) should be cast to batchpromise . join ( )
added base core URL handling in SolrLoggerServiceImpl . java to ensure proper handling of HTTP and HTTPS URLs in the statistic year cores
updated method names from ` launchTask ` to ` launchTaskFromView ` in ` TaskActionController ` and ` IconRecentsView ` to
refactor MorfologikFilter to use a new method for loading dictionary resources to improve code readability and maintainability by centralizing resource loading
updated sorting options from " stars " to " community " and " critic " in GridFragment . java to ensure consistent sorting behavior across the application
added imports for ViewKt and ListRow , and modified visibility logic in CustomListRowPresenter . java to improve UI responsiveness and
refactor the switch statement to include a try - finally block for better resource management to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code organization to enhance maintainability and readability of the code
replaced calls to ` accordingTo . isCaseSensitive ( ) ` with ` accordingTo instanceof DB2Database ` in multiple files to improve type safety
added support for java time module in the StandardJavaScriptSerializer class to ensure proper serialization and deserialization of Jackson objects
updated MDC import from org . apache . log4j . MDC to org . slf4j . MDC to align with the latest SLF4
updated type handling in PhiTypeResolver to use TypeBearer instead of TypeBearer to simplify type casting and improve code clarity
refactor CoinbaseTransaction class to improve code readability and maintainability to enhance readability and maintainability of the code
added ` getBuildTargetList ` method to ` BuckConfig ` and modified ` ProjectCommand ` to include ` forceBuildingWithBuck `
added a call to System . gc ( ) in the BusySpinIdleStrategy initialization to ensure proper resource management and prevent potential memory leaks
replaced ` ContentProvider ` with ` ContentResolver ` across multiple files to improve code consistency and maintainability by using a more descriptive name
reformatted code for better readability in ReportPanel . java to improve readability and maintainability of the code
added a null check for slotOwner in TestingLogicalSlot . java to ensure slotOwner is not null before assignment
added a new recipe class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime . gc
removed the ` super ( ) ` call from multiple exception classes to streamline the code by eliminating unnecessary constructor calls
added a method to set the UIID of the ScaleImageLabel class to ensure the icon is correctly set in the superclass
replaced the variable ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve code readability and maintainability by using
added support for both " - classpath " and " - cp " arguments in Main . java to ensure compatibility with additional classpath options in the application
updated the link from " options = { " nodeprecated " to " compiler = { " nodeprecated " } in avutil . java to
updated the initialization flag from true to true in StorageService . java to ensure proper initialization of the storage service
updated Test7196045 . java file to improve test coverage and maintainability
updated density , decay , and decay values in ShaderParametersLightShaft . java to improve light density and decay values for better visual quality
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` , ` OidcRedirectActionBuilder ` , and
added null check for ` uqName ` and ` uqName ` to ` uqName ` and updated related logic in ` BaseTable
added a check for federated sharing in UsersAndGroupsSearchProvider and updated related logic in EditShareFragment to ensure that shared files are federated
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to override the ` needsDocValues ( ) `
refactor ` BufferAlignmentAgent ` and ` BufferAlignmentInterceptor ` classes to improve clarity and consistency in error messages to enhance code readability and maintain
added a method ` intForEach ` to ` Int2ObjectHashMap ` and modified ` IntObjConsumer ` and ` SpecialisationGenerator ` to
fix world server crash when share scoreboard in worldserver .
changed the return type of the count method from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository
refactored conditional checks for mtree snapshot creation in MManager . java to improve code readability and maintainability
updated the calculation of dotProduct and adjusted the test assertions in VectorUtil . java and TestVectorUtil . java to improve accuracy of product score calculations
added IRREVERSIBLE _ THRESHOLD constant and methods to update and retrieve the last confirmed block number in DynamicPropertiesStore and Manager classes to
replaced the ` setLocale ( ) ` method with ` Systems . setUserSpecifiedLocale ( ) ` in multiple activities to streamline locale management
added a condition to check if the database was created in LauncherClings and updated related methods in LauncherProvider to ensure that the database
updated error messages and refactored collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve clarity and maintainability of error
added a null check for the data model before setting is64Bit to avoid potential NullPointerExceptions when the data model is null
added a check for the current thread in TestIndexWriterDelete . java to ensure that the test only executes when the thread is not the same
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the closeDatabase method from other classes
updated API imports from ` org . jellyfin . apiclient . model . dto ` to ` org . jellyfin . sdk . model .
added attributes to the SVG element in BatikSVGDrawer to ensure proper handling of SVG attributes in the new document
added a try - catch block around the exception handling in ConsoleKeys . java to ensure proper error logging for user configuration parsing
added a check for " WaitForResult " in AndroidImplementation and CodenameOneActivity to ensure that waitingForResult is only set when " WaitForResult
refactored constructors in HitQueue and SpanPositionQueue to use Supplier instead of boolean for prepopulated objects to improve code readability and
refactor WidgetCell to use a dedicated TextView for widget description handling to improve code readability and maintainability by centralizing widget description handling
added a maximum registered attribute count check in Attribute . java to ensure that the minimum registered attribute count is exceeded to prevent runtime errors
move predicatestest from query to impl package
camel - 16464 : camel - defaultheaderfilterstrategy should filter default header name in case insensitive mode
replaced inline calculation with a new variable ` possibleWrap ` in ` InlineLayout . java ` and updated related logic in ` Breaker . java `
added null checks and improved null checks for the view in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
refactor instrumenting logic in Setup . java to include Android SDK support to improve clarity and maintainability of instrumenting logic
added a null check for the association before source in BrowserContentPane . java to prevent potential NullPointerException when accessing table columns
[ hotfix ] [ test ] add memory limit file path to test
refactor CxxDeps to use a static final EMPTY _ INSTANCE for better encapsulation to improve code readability and maintainability by central
added a null check for the source under test dependency in JavaTestRule . java to improve error handling for missing source under test dependencies
fix ( mcversion ) : use mcversionmap instead of mcversion
removed conditional check for atIndex to initialize atIndex to zero to ensure atIndex is always set to 0 before proceeding
increased timeout duration from 100 milliseconds to 500 milliseconds in TimeoutTest . java to improve test reliability by allowing more time for test execution
added a new ` AssistContentRequester ` parameter to the ` TaskOverlayFactoryGo ` constructor and updated related constructors to include it to
refactor witness address handling in VoteWitnessProcessor to use encode58Check instead of createReadableString to improve code readability and maintainability by reducing
refactor DefaultMethodRegressionTests to improve code readability to enhance maintainability and facilitate future updates
refactor WorkloadManagerMxBean to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to improve clarity and consistency in exception handling
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent potential memory leaks
added a clear method to ` ExceptionThrowingTaskletStub ` and corresponding test cases in ` FaultTolerantExceptionClassesTests ` to
updated error message formatting in ConfigBuilder . java to include additional context for job and container runner to improve clarity of error messages for better debugging
added ` Map < String , String > extraProperties ` parameter to multiple methods in ` TableConfigTuner ` and ` TableConfigTun
added handling for in - progress segment metadata in PinotRealtimeSegmentsManager to ensure the segment list is only added when the segment is in progress
added a check to return null if touchable is disabled to ensure that touchables are only processed when touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to verify the functionality
throw a retryablehazelcastexception if cache config be not create yet
refactor JSweetTranspiler to use a new method ` isNodePackageInstalled ` instead of ` getNpmPrefix ( ) `
added ManagedObject annotation to MBeanContainer and Destroyable classes to enable the management of MBeans in the application
updated conditional check from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in ` LongClickableSpan . java `
use string . equals ( ) instead of string . equals ( )
updated the conditional check in Types . java and added new classes T6558559a . java and T6558559b . java
updated player position logging messages in WorldEditListener . java to improve clarity and accuracy of player position information
camel - 14284 : camel - kafka : shutdown the consumer if the consumer be shutdown .
removed the default examples ( ) method from Schema . java to simplify the code and improve readability
refactor thread interruption logic in AgentRunner . java to improve readability and maintainability of the code
added a call to remove the dataset ' s time column in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure that dimensions are removed from the
updated the condition for checking shards in FacetComponent . java to improve code readability and maintainability
replaced instances of ` LinkerProvider ` with ` CxxPlatforms ` in ` RustBinaryDescription ` and ` RustLibraryDescription `
added ` name ` field with getter and setter methods to various properties in ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` N
added logging statements to CFGPrinterObserver and IdealGraphPrinterDumpHandler , and modified exception handling in IdealGraphPrinterDumpHandler to improve debugging
added small scan threshold handling in BaseQueryPlan and QueryServices classes to enhance query performance by allowing small scans for point lookups
updated the format of the ` filterToStringCreator ` method in ` RetryGatewayFilterFactory ` to include routeId ` and ` routeId ` to
replaced redisplay ( ) calls with callWidget ( REDISPLAY ) and callWidget ( name ) in LineReaderImpl . java to improve code read
refactor overview display logic into a separate method ` showForOverviewIfNeeded ` to improve code readability and maintainability by reducing duplication
refactor conditional checks for null values in CheckIndex . java and add a new test for deleteAllPointDocs in TestPointValues . java to
updated the publish method from ' true ' to ' updateLastState ' in ZkController . java to ensure that the publish method correctly reflects the
added newline character to SKEWED _ STRING _ LIST _ VALUES in MetastoreDirectSqlUtils . java to ensure proper formatting of string
removed a call to add ( 0 , null ) in SpliteratorCollisions . java to ensure proper handling of null values in splitting operations
[ java ] add ` ` exact text case sensitivity ' ' to ` ` condition . text ( ` ` text ' ' )
removed redundant while ( true ) calls in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
add a ` ` forward - only - fetch - size ' ' option to queryengine
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler . java to ensure proper handling of Channel already closed exceptions
pdfbox - 4071 : initialize list with size of beads . size ( ) instead of create a new list
added support for rounded corners on Windows in QuickstepAppTransitionManagerImpl . java to ensure rounded corners are correctly calculated based on the launcher ' s
replaced ` mBackground ` with ` mBackgroundView ` and refactored background handling in ` DesktopTaskView . java ` to improve clarity and
refactor UpstreamCheckServiceTest to initialize shenyuRegisterCenterConfig with selectorConditionMapper to improve code readability and maintainability by reducing
removed warning log statements from AbstractSession and AbstractSessionManager classes to improve code readability and maintainability
replaced error logging with a return statement in ZooKeeperHiveLockManager . java to streamline lock retrieval process and improve error handling
[ hotfix ] [ runtime ] fix typo in java doc
added a boolean flag ` containsCustomData ` and modified the mipmap generation logic in ` FileTextureArrayData . java ` to ensure that
updated string literals in ` DefaultMaskingFormatterTest . java ` to use single quotes instead of double quotes to improve readability and maintainability
added selectable property and methods to manage selection behavior in the List class to improve user experience by allowing selection of touch events when not selectable
added a condition to return false if the value count is zero in LlapArrowBatchRecordReader . java to ensure proper handling of zero values in
added File . separator handling in PolicyContext and implemented a test for file separator expansion in TestPolicyContext to ensure proper handling of file separators in
replaced HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance by using a more efficient list structure
refactor TLSRestrictions class for improved readability to enhance maintainability and readability of the code
refactor producer closing logic in KafkaManager to use a Runnable for better thread safety to ensure proper resource management and prevent potential memory leaks
added a new parameter ` ignorableNodeValues ` to the ` assertNodeStateProvider ` method and modified the ` assertNodeStateProvider ` method to
added a check for the existence and deletion of the lock in RocksdbMavenPomCache . java to ensure that the lock is deleted when
[ java ] use iserverport in minizookeepercluster . getclientport ( ) instead of clientportport ( )
updated the ` getResponse ` method to accept a ` RestRequest ` parameter and removed the ` closeIgnoringErrors ` method to improve error handling and ensure
[ hotfix ] [ runtime ] fix npe in ingestionutils
updated loginStudent method calls from TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT1 _ PASSWORD to ensure
added null checks for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions when mCurrentItem is null
increase the number of strings from 500ms to 100ms in TestSpecialOperations . java to increase the number of strings from 500ms to 100ms
replaced ByteArrayInStream with ByteArrayInStream for byte array manipulation to simplify code and improve readability by eliminating unnecessary methods
corrected a typo in the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve code readability and
added a method to check if a direct substate is direct and updated state management in AbstractStateMachine . java and ShowcaseTests . java to improve
added checks for ` ListMultimap ` and ` SetMultimap ` in ` MultimapSubject ` and implemented corresponding tests in ` MultimapTest ` to
added JoinOperation to the PostJoinOperation class to enhance the functionality of the PostJoinOperation implementation
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to validate PostgreSQL
added try - catch block for JMSException in the destroyDurableSubscriber method to improve error handling and provide clearer feedback on the inactive reason
refactor AvaticaDatabaseMetaData class for improved readability to enhance maintainability and readability of the code
updated MongoDbConnectionProperties to use ` @ DurationCapable ` instead of ` int ` for lifeTime , idleTime , and maxWaitTime
updated the method call from ` null ` to ` SipActivator . getMediaService ( ) ` in ` SdpUtils . java ` to ensure
refactor ` handleFilters ( ) ` and ` handleDomainChanges ( ) ` methods in ` FacetProcessor . java ` to return a boolean
added a new constant ` TIMEOUT _ HANDLER ` and modified timeout handling logic in ` ShuffleHandler . java ` to improve flexibility in timeout
updated the initialization of mQuickStepStartingRotation from - 1 to QUICKSTEP _ ROTATION _ UNINITIALIZED in OrientationTouch
updated logging statements in XPathBuilder , XQueryBuilder , and XQueryBuilder classes to improve readability and maintainability of log messages
updated the input stream path in NNDataSet . java to use ` DataResource . class ` instead of ` this . getClass ( ) ` to
[ issue # 1751 ] add test case for escaped slash ( # 1751 )
added a check for the ' atlas ' property before retrieving the ' atlas ' property in AtlasTmxMapLoader . java to ensure that
camel - 14284 : remove propertyplaceholdershelper and use it in camel - support
added levelDbDataSource . closeDB ( ) method to BlockchainTest . java and removed unnecessary source instantiation in KafkaTest . java to streamline
refactor code to use List instead of String [ ] for better type safety to improve code readability and maintainability by using a dedicated method for
updated import statements in WebServiceInboundGatewayParserTests . java to improve code readability and maintainability
replaced ` ImmutableList . Builder ` with ` List < Object > ` in ` ProjectableSQLQuery ` , ` SQLBindings ` , and ` Abstract
added support for OpenJDK VM names in VirtualMachine . java to enhance compatibility with OpenJDK environments
added a keepAlive ( true ) call to the baseUrl method in ReactorClient . java to ensure that the reactor client does not hang forever
updated vertex attributes from " a _ position " to " NORMAL _ ATTRIBUTE " in MD5Renderer , ObjLoader , and Obj
camel - 14247 : camel - spring - boot : use property component instead of property component
refactor accountCapsule retrieval logic in UnfreezeBalanceActuator . java to improve code readability and prevent potential null pointer exceptions
update version number from 0 to alpha in xmppserver .
replaced direct calls to ` t ` with ` t . unannotatedType ( ) ` in ` Types . java ` to improve code read
updated assertions in StorageGroupProcessorTest . java for consistency and clarity to improve code readability and maintainability by reducing duplication
updated imports and class names from " org . eclipse . jetty . jaas " to " org . eclipse . jetty . ee10 "
added a waitbeforestart variable to FFMpegVideo . java to ensure proper resource management during video processing
removed the ` _ skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor and its usage across multiple classes to simplify the code
refactor AccessorsTest to use JUnit ' s Assert class instead of the static class to improve code readability and maintainability by reducing
add a new method to compile a method with a PhasePlan parameter to enhance method compilation capabilities and improve code readability
updated JUnit imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use RunningContinuousIntegrationCondition instead of
fix a bug that cause the water block to not be render when the water target be not a water .
updated return statements in Directory . java and added getLockID ( ) method in RAMDirectory . java and RAMDirectory . java to improve
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher . java ` check to simplify the conditional logic for experimental options
added static method ` then ` to ` BDDAssertions ` for assertions in ` BDDAssertions . java ` to enhance assertion functionality for
replaced instances of ` hp ` with ` hostField ` in ` ForwardedRequestCustomizer . java ` and updated server port handling in ` Forward
updated logging level from debug to warn for missing Kubernetes config files to improve logging clarity and ensure compatibility with Windows environments
added functionality to cancel and cancel OC files in UploadListActivity to ensure proper handling of upload status in the upload process
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to implement ` ProviderLoader ` instead of ` ProviderInstaller ` to
replaced ` Span . SPAN _ ID _ NAME ` with ` TraceMessageHeaders . SPAN _ ID _ NAME ` in ` StreamEnvironmentPost
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig instead of a hardcoded ID to improve code readability and maintainability by using a
updated PostgreSQL dialect implementations to return the current schema from sys . dummy instead of a hardcoded value to ensure compatibility with the
fix ( core ) : do n ' t calculate partition per member if there be no partition count
[ hotfix ] [ runtime ] add isschedulerstarted ( ) method to executionschedulemanager
removed the ` toString ( ) ` method from the ` InlineBox ` constructor and adjusted the conditional check for ` blockParent ` to simplify the code
updated assertion statements in StatisticMap . java for consistency to improve code readability and maintainability
change the return value of getStagedRectSlideEnd ( ) from 383 to 500 in TabletSplitToConfirmTimings . java to
updated button text from " [ accent ] Command Mode " to " commandmode . name " in WaveInfoDialog . java and PlacementFragment .
updated condition to include plotArea in BukkitMain . java to ensure proper handling of owned plots based on the plot area
added a test for ` setTouchExplorationEnabled ` in ` ShadowAccessibilityManagerTest ` and modified ` ShadowAccessibilityManager ` to utilize
pdfbox - 5328 : fix cmapsubtable . getcharactercodes ( ) to use max glyphid instead of firstcode
use getname ( ) instead of getpropertystr ( ) in testelement
testnpOIfsfilesystem : use create ( big , false ) instead of create ( big , false )
added imports and modified plot area retrieval logic in Move . java to improve code clarity and maintainability by centralizing plot area retrieval logic
updated regex pattern for version matches in TestWebHCatE2e . java to ensure compatibility with the latest version requirement
updated the condition to check if the count is less than 1 before verifying if the count is less than 1 to improve accuracy of the condition for
camel - 14284 : camel - kafka : add client id property to kafka consumer processor
added a check for boolean value in JavacCompiler to ensure proper error handling by throwing an exception when execution fails
do n ' t repaint the view when the selected index change .
fix checkstyle issue in camel - spring - batch - spring
added a method ` isAnimationFinished ( float stateTime ) ` to the ` Animation ` class to determine if the animation is finished to improve animation
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` in ` LoginMockMvcTests . java ` to ensure
added null check for otherUrl before accessing its value in TimeLineCursorAdapter and HomeFragment to prevent potential NullPointerException when otherUrl is null
updated stopEditing method to use ` newValue0 ` instead of ` newValue ` in ` RadioButtonTreeItem ` and ` DrawEquationWeb ` to
refactor ObjectHashSet class implementation to improve code readability and maintainability
refactor null check logic in DataUtilities . java to use Arrays . equals for better readability to improve code readability and maintainability by reducing
add miss check for enchanted book , fixes # 12770
added unit tests for the AsyncResource class in the server to ensure proper functionality and functionality of the async resource functionality
rename target - flat to target - user - header - map in projectgenerator
added logging for invalid sent and unset addresses in MailService . java to improve error handling and provide clearer logging for invalid and invalid addresses
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItemView `
added unit tests for the ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker . java ` to ensure
added a closing brace in FileListListAdapter . java to improve code readability and maintainability
changed ArrayList and Sharees from ArrayList to List in OCFile . java and OCFileListAdapter . java to improve data handling by using
updated the method call from ` getChildAt ( getChildCount ( ) + 1 ) ` to ` getChildAt ( getChildCount ( getChildCount ( ) - 2 ) ` to
removed the ` org . eclipse . jetty . websocket . util . server . internal ` package from ` hide ` and ` JettyWebSocketConfiguration `
changed the value of the ` expiresSeconds ` parameter from ` true ` to ` false ` in the ` S3Request ` constructor to simplify the
refactor initializeComponents method to remove unnecessary parameters to improve code readability and maintainability
added a check for non - zero splits in the DeweyNumber class to ensure that a valid dewey number is parsed as a
added a static String variable ` categorySetString ` and modified the return statement to replace " Category : " with " Category : " to improve code
corrected the spelling of " Invalid close control status code " to " Invalid close code " in WebSocketClientTest . java to ensure consistency in
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader to improve robustness by preventing potential NullPointerExceptions
removed redundant conditional checks in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 4071 : fix npe when page label be not a number , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to verify the functionality of the ` PorterStemFilter ` class to ensure that the tokenizer
modified the ` postBatchMutate ` method to include a ` success ` parameter and modified the ` postBatchMutate ` method to include ` success `
updated package names from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix thread safety issue in chatwindowmanager . close ( )
removed static calls to Sys . touch ( ) across multiple Java files to streamline code by eliminating unnecessary calls to Sys . touch ( )
updated the ` untrackedFiles ( ) ` method to include " - mardu " instead of " - unknown " to enhance the functionality of
camel - 14284 : camel - netty : fix thread safety issue in camel - netty
added ' final ' modifier to several Vector3 fields in DirectionalLight , PointLight , and SpotLight classes to enforce immutability of
updated width and height calculations in X11GraphicsConfig , WGLGraphicsConfig , and XGLGraphicsConfig to ensure consistent width and height calculations
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and ` DelegatingSecurity
added a new class ` AnnoFilterTreeSet ` and modified ` ClassFinder ` to handle annotations more effectively to improve annotation handling and ensure proper
modified length validation logic in BytesColumnVector . java to handle integer overflow and maximize size of newBuffer to ensure proper handling of integer overflow scenarios
updated assertions in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually for assertions to ensure that the test accurately reflects the
modified the ` uninstallListeners ` method to accept a ` JComponent ` parameter in ` MotifScrollPaneUI ` and ` XTextAreaPeer
add isequal ( polyfunction ) and isequal ( polyfunction ) method to the polyfunction class
added a null check for the table before calling configureValue to avoid potential NullPointerException when the table is not initialized
added error handling for ClassCastException in CustomChangeWrapper . java to improve robustness by handling potential ClassCastExceptions
updated ` DistBuildConfig ` and ` RecordingFileHashLoader ` to use ` ALWAYS _ materialize _ whitelist ` instead of ` Config
changed the return type of ` isDoubleEntryEnabled ` from ` boolean defaultValue ` to ` false ` in ` GnuCashApplication ` and
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests that need to track down and fix issues
changed the return type of ` doJoin ` from ` void ` to ` boolean ` and updated related methods to return a boolean indicating success or failure
removed the getAutodeps ( ) method from JavaLibraryDescription . java to simplify the code and improve readability
updated intent flags from FLAG _ ACTIVITY _ CLEAR _ WHEN _ TASK _ RESET to FLAG _ ACTIVITY _ NEW _ TASK
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance query performance by allowing paging by default
updated repository URLs from ` repositories . get ( 0 ) ` to ` repositories . get ( 2 ) ` in ` RepositoryConventionPluginTests `
added a new ` AffiliationTask ` class to handle a new ` Affiliation ` packet to facilitate the creation of a new ` Af
added URI normalization and error handling for invalid URIs in TagLibraryInfoImpl . java to improve robustness and error reporting for invalid URIs
changed the access modifier of the buildUserProfileByClassCompleteName method from private to public to allow external access to the method from other packages
refactor cache key handling in CacheKey . java and update test cases in CacheKeyTest . java to improve code readability and maintainability by
refactor getextmntent method to use UnixFileSystemProvider and add getFileTypeDetector method to enhance compatibility with Unix file type detection
added a call to ` wsSession . close ( ) ` in ` TestWsWebSocketContainer . java ` to ensure proper resource management and prevent
refactor ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to use ` VirtualSensorCallbackDelegateReflector ` instead of ` Virtual
added a condition to check if the contextBeforeExecution is not equal to the context before the httpSession to ensure that the context is not removed from
refactor loop handling in NetUtil . java to improve clarity and functionality to enhance code readability and maintainability by reducing duplication
changed BUF _ SIZE from BUF _ SIZE to DEFAULT _ BUF _ SIZE and adjusted related array initializations to improve memory management and ensure
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42165 - fix
added a boolean flag ` iconChangeListenerInstalled ` to track icon action listener registration to ensure icon changes are only installed when the icon is initialized
added Russian language support to the Language class to enhance user experience by allowing Russian language support
hhh - 16464 use temporalunit . nanosecond instead of temporalunit . nanosecond
disable state verification on framestate . disablestateverification ( )
added properties for prior enabled SDKs , always enabledSdks , and alwaysIncludeVariantMarkers in RobolectricTestRunnerTest to ensure proper
added a system class for " org . slf4j . LoggerFactory " in ViewClassLoader . java and corresponding tests in ViewClassLoaderTest . java to
updated the handling of MavenResolutionResult in ChangePackaging . java and added a new test case in ChangePackagingTest . java to ensure that
update test to use ` ` txt ' ' extension instead of ` ` txt ' '
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer
replaced ` setDefaultUnits ` with ` setPreferredUnits ` and updated related methods to use ` UnitUtils ` instead of ` String ` to improve code
updated the expected date format in DatePatternConverterTest to use UTC timezone instead of a hardcoded string to ensure accurate date formatting based on timestamp
corrected a typo in the return statement in Terminator . java to improve code readability and maintainability
updated IOException messages to provide clearer context for invalid file URIs and improved error handling in FileSystem and DistributedFileSystem classes to provide clearer feedback
[ java ] use jabrefexecutorservice . submit instead of scheduledexecutorservice . schedule ( )
[ hotfix ] [ test ] fix test failure in ftpreconnectattemptserverstoppedit
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to ensure compatibility with ConcurrentModification for keyed properties
added ` ignore ` method to ` JavaUtilLog ` , ` LoggerLog ` , ` StdErrLog ` , and ` Log ` classes to
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when runningTaskView is null
removed unnecessary type casting in BukkitWorld . java to simplify code and improve readability
removed the method ` cleanImage ( img ) ` from ` PanelManager . java ` to streamline image processing by eliminating unnecessary code
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to enable unmaping of MMapDirectory based on the maximum chunk size to enhance the
added null check for ` ic ` before creating ` BaseColor ` to avoid potential NullPointerExceptions when ` ic ` is null
updated the query equality test from " { ! f = field1 _ s maxDocFreq = 1000 ` to " { ! f = field1
refactor ExtendedOperatingSystemMXBeanImpl class implementation to improve code readability and maintainability
added ` installLeftCommands ` method to ` SideMenuBar ` and modified command handling logic in ` SideMenuBar . java ` to improve command management and
added a boolean field ` advanceWindowed ` to ` AppSettings ` and modified the ` setUpWindow ( ) ` method in ` TweetActivity
added SybaseDatabase support to the database type check to ensure compatibility with Sybase databases
refactor Client class to improve code organization to enhance maintainability and readability of the code
[ java ] notifyleaderready ( ) only when there be a leader member .
replaced invalidate ( ) method with setCellLayoutPressedOrFocusedIcon ( ) and added shouldDelayChildPressedState ( ) method to CellLayout to
added a return statement in NearCachedClientMapProxy . java to ensure proper handling of client requests
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
added a method to shutdown the HTTP server in ListenHTTP to improve error handling and ensure proper shutdown of the HTTP server
camel - aws2 - s3 : fix checkstyle violation in streamuploadproducer
[ hotfix ] [ webmonitor ] rename parameter _ TM _ ID to task _ manager _ id _ key
added a method to drop keys that do n ' t exist in 2 . 7 version of the database
added a new test class TestThriftCLIServiceSecurity for password handling in the TOpenSessionReq class to ensure that the password is not in logs
added a new private variable ` maxEnergyLimit ` and updated energyLimit assignment logic in ` VMActuator . java ` to ensure that the
added a maxInMemorySize property and its getter and setter methods in HttpClientProperties and HttpClientPluginConfiguration to allow dynamic configuration of the max in memory
refactor Cache class to improve performance to enhance performance and maintainability of cache operations
added two new test classes , RunCucumberTest . java , StepDefinitions . java , and StepDefinitions . java to improve test coverage and
added error handling for JSON parsing in TypeJsonUtils . java and updated test assertions in TestArrayOperators . java to improve robustness by handling
updated byte array handling in Utf8StringBuilderTest to use hex strings instead of hex strings to ensure proper formatting of byte arrays in the buffer
http : / / code . google . com / p / mybatis / issues / detail ? id = 633 : fix issue with parameter
camel - 14284 : add maximum number of output to the load balancer to make it easy to configure .
updated the max buffered documents assertion from 3 to 3 in TestIndexWriterExceptions . java to ensure that the test accurately reflects the maximum buffered document
replaced calls to ` putUnencodedChars ` with ` Sha1HashCode ` across multiple files to improve code clarity and maintainability by using a more
remove unused enumvalue , enumclass , and long from asmruntime
added new biome tags for MANGROVE _ SWAMP , UNDERGROUND , and DEEP _ DARK in ForgeBiome
refactor asyncimageloader to use thread pool instead of thread - safe
changed access modifiers of several fields from private to protected and refactored preloadSegments method to improve encapsulation and enhance encapsulation
corrected the spelling of " may " in multiple files to ensure consistency in spelling and accuracy in the code
replace ` getImage ( ) . equals ( vid ) ` with ` hasImageEqualTo ( vid ) ` in ` AbstractSunSecureRule
camel - 14247 : camel - jbang - add -- repos to jbang command
added checks for NaN values before processing score in CrawlDbReader . java to ensure correct handling of NaN values in CrawlDbReader
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure the target file is properly deleted after tests
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor ` and added window focus handling in ` FindAction
[ hotfix ] [ test ] make checkpointscleaner thread safe
added a new file XPathWhiteSpaceTest . java to test XML schema parsing to ensure correct parsing of XML schema files
fix bsai rollback not override trie log layer if there be no transaction .
updated FilledNewArrayInstruction . java file to improve code readability and maintainability
[ java ] increase timeouts for simplenetworktest
updated the method to check if the parent path ends with a slash to ensure that the correct parent path is used when the parent path ends with "
added a print statement to indicate the failure of the skin file in JavaSEPort . java to provide feedback on the failure of the skin file loading
added markDirty ( ) and isValid ( ) methods to LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to ensure proper
added a static final Result constant ` UNDEFINED ` in ` Result . java ` and updated the return statement in ` TestStep . java ` to
replaced instances of ` PersistenceException ` and ` MyCallback ` with ` NullPointerException ` in ` TestTransactionCallback . java ` to improve error handling
make uploadjobmultipartoperation implement identifieddataserializeddataserializable
[ hotfix ] [ job ] improve error handling in jobschedulerstoreimpl . load ( )
make summarylevels . of ( nodemodel , boolean , boolean , boolean , boolean , boolean , boolean , boolean , boolean , boolean )
changed the visibility of the ` pos ` variable from ` volatile ` to ` sizeMask ` and modified the ` ensureAvail ` method to
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to temporarily disable tests that are
updated the handling of endpoints in StorageProxy . java to use a subList instead of a fixed size to improve code readability and maintainability by reducing
updated variable name from " bufferedIo " to " advertiseUri " in FileManager . java to improve code readability and maintainability
updated TransformFunctionType constants to include " plus " , " pow " , and " pow " in TransformFunctionType . java and TransformFunctionFactory
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` and implemented ` getEnclosingElement ( ) `
updated RFC3280 to RFC5280 in multiple Java files to ensure compliance with RFC 3280 standards
updated the version number from " 2.117 . 3 " to " 2.117 . 4 " and modified the type casting in SearchAnnotationVisitor .
replaced ` LruCache ` with ` SparseBooleanArray ` in ` ListActivity ` and modified ` selectedItems ` initialization in ` NoteAdapter `
reformatted conditional statements in DirectUpdateHandler2 . java for consistency to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener and added absolute resource defaults test in ConfigFileApplicationListenerTests to ensure proper handling of resource paths and improve
updated PreviewPositionHelper to include a Context parameter and modified related constructors in TaskViewSimulator and TaskThumbnailView to improve position management based on
[ java ] do n ' t publish new leadership term if logleadership term be not present
pmd coverage test : use standarderrorstreamlog instead of output to stdout
refactor ByteArrayInputStream to use int and int variables instead of int and add a new Skip class with a test method to improve code readability and
refactor conditional statements in UpdaterTask . java for better readability to improve code readability and maintainability
changed the access modifier of MAX _ HEADERS from final to public and added a check for the size of block headers in Peer . java to allow
added " rt . jar " to the STANDARD _ LIBRARIES list to ensure consistency in naming conventions across the codebase
refactored the connection handling logic in AbstractHandshakeHandler . java to improve code readability and maintainability
updated method signatures and parameters in RasterLayerResponse , RasterLayerResponse , and GTDataStoreGranuleCatalog to use Utils . Prop . isH
added a conditional check for committed responses in HttpChannel . java to ensure that the response is only sent if already committed
refactor condition checks in HttpSession . java for better readability to improve code readability and maintainability
changed fadeOutFakeTaskView from true to false in HomeGestureTutorialController and added animations in SwipeUpGestureTutorialController
fix a bug in prefab serialization when prefab be deserializing
refactored the creation of ScimGroups into a single instance of ScimGroup to improve code readability and maintainability by centralizing the
added a check for non - existent account transfer amount in FreezeBalanceActuator and added validation in TransferActuator to ensure that
use file . separator instead of path . lastIndexOf ( ' / ' )
do n ' t show keyboard button if there be no error
updated GpsMainActivity and AnnotationViewFragment to use session description instead of a hardcoded string to improve code readability and maintainability by
added a conditional check for the number of pages before verifying the number of pages to ensure that the document is only processed when there are no pages
use androidnativebufferallocator instead of androidbufferallocatorjme
added checks for flagName and flags in Main , PrimaryItem , and Util classes to ensure flagName starts with " ! " and improve flag handling
added NOPMD comment to the ResultSet initialization in JDBCHistoryCache . java to improve code readability and maintainability
updated the condition to check for " ITEM _ USE _ GRANT _ SELECT _ REWARD " instead of " equals " to simplify the
refactor QueuePriorityTest to use ArrayList and add a toString method in PriorityElement to improve code readability and maintainability by reducing duplication
do n ' t initialize context in unit test for affinity api
added null check for ` main . command ` in ` Main . java ` to handle help arguments more gracefully
set lightoutputstream size to 4 instead of 7
changed the visibility of the Scanned class from static to public to allow external access to the Scanned class from other packages
added a boolean flag ` showBlank ` to ` ClassWriter ` and modified conditional checks in ` T8032819 ` and created a new
added a check for the length of the parameter in the Person class to ensure that the method correctly verifies the length of the parameter
added null check for the extension before checking if the file extension is not present to prevent potential NullPointerExceptions
change return statement from return to continue in ContactRightButtonMenu . java to simplify the code and improve readability
refactor slot cancellation logic in SimpleSlot and SlotSharingGroupAssignment classes to improve clarity and correctness to enhance code readability and maintainability by
simplified the loop condition in InstallShortcutReceiver . java to improve code readability and maintainability
replaced direct calls to ` impl . address ` with ` delegate . fd ` in ` PlainSocketImpl . java ` to improve code clarity and ensure proper
added functionality to clear and manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to enhance user experience by allowing users to remove items
updated log message from " in - center of element " to " in - view center point " to clarify that offsets are from the center point
added a new file ` bug4865918 . java ` to implement a test for the scrollbar block increment to ensure that the scrollbar block increment
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code and improve readability by
replaced specific imports with wildcard imports and added group triggers handling in QuestCommand . java to improve code readability and maintainability by
added a new method ` startXmlFileChooser ` in ` AccountsActivity ` and refactored file selection in ` AccountsActivity ` to
added Lombok ' s @ ToString annotation to PartitionChangeEvent , TbApplicationEvent , and TbApplicationEvent classes to improve code clarity and
updated the ConfigurableService annotation to use a static final CONFIG _ URI constant to improve code readability and maintainability by encapsulating configuration
removed viewport component and JScrollPane settings from BrowserPanel . java to streamline view management by eliminating unnecessary components
updated input keys from KEYCODE _ DEL to KEYCODE _ FORWARD _ DEL in LwjglInput . java and added a
added a conditional check for indexMimeTypeParts in MoreIndexingFilter . java to ensure that the indexMimeTypeParts is only added if the configuration is
added author pattern and modified constructor check logic in JSDoc . java to improve code readability and maintainability by reducing duplication
added CREATE _ DELTA _ TOTAL _ DATABASES and DELETE _ TOTAL _ PARTITIONS constants to MetricsConstant . java to
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient instead of List to enhance flexibility in accessing Hive database
added a queryParams parameter to the oauth2LoginLinks method and updated the oauth2LoginLinks method to include an additional parameter for error handling to enhance
updated the Hijrah date format from " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar "
added support for Firefox in WebAudioWrapper to ensure compatibility with Firefox in the application
added ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` private ` private ` constructor in ` InterceptorConstants ` to
added a default charset attribute to the table creation statements in TestCompatibility . java to ensure that the default charset is used for database operations
removed redundant calls to ` kill ( false ) ` in ` WriterRecordBatch ` , ` StreamingAggTemplate ` , and ` StreamingAgg
[ hotfix ] [ runtime ] fix typo in executiongraph
added a boolean flag ` hasFrom ` to the ` Delete ` class and modified the ` DeleteDeParser ` and ` DeleteDeParser ` to
updated status checks from ` isSuccess ` to ` isMultiStatus ` in ` SynchronizeFolderOperation . java ` to improve handling of multi -
refactor RecipeScheduler to use a new method ` RecipeSchedulerUtils . applicableListTests ` to improve code readability and maintainability by
updated regex pattern in LogAnalyser . java to include additional characters to ensure correct formatting of log line characters for better readability
camel - 14284 : camel - jbang - add integration test for google cloud
fixed - redissonsearch : use max exclusive instead of min exclusive
refactor CCLicenseStep to use generics for improved type safety to enhance code readability and maintainability by using generics
added null check for ` ifcRoot . getGlobalId ( ) ` before adding it to ` guidIndex . get ( ) ` to prevent
updated comparison logic in OptionalAssert to use the comparison strategy instead of the comparison strategy to improve clarity and consistency in comparison logic
refactor memory handling in NoNewLineParagraphCssApplier , ParagraphCssApplier , and AlignAndMarginTest classes to improve code clarity
added a new file TestArrayCopyToFromObject . java containing a test method for array copying to ensure that ArrayStoreException is thrown when copying
refactor Python path insertion logic in BuckPythonProgram . java to improve readability and maintainability of the code
updated condition checks in AjpAprProtocol , AjpNioProtocol , AjpNioProtocol , AjpN
[ forge ] deprecate forgehelper . findfiles ( modcontainer , function , function , function , function , function , function , function ,
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable tests that are unstable
added null check for the exception before assertions in TestInternalInputBuffer . java to prevent potential NullPointerException when doRequest ( ) is called
refactor autoloadCall method to accept a lower name parameter for better clarity to improve code readability and maintainability by encapsulating the
updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to use ServerVersion instead of ServerVersion to improve server version comparison logic and
refactor localhost handling in BasicKrb5Test , OneKDC , and KDC classes to improve code readability and maintainability by
added a boolean flag ` jsr250AttributeFound ` and modified the return statement in ` Jsr250Voter . java `
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability by standardizing import statements
added a new constant HS2 _ PROXY _ USER and modified sessionParams handling in ConnectionFactory . java to ensure that the session parameters are
camel - 14247 : camel - hdfs - add compression codec to hdfsproducer and add unit test
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure thread safety during test execution
fix xssf / xssf / xssf / xssf / xssf / xss
updated glyph width and height calculations in GlyphLayout . java and added a new test for AGWlWi issue in BitmapFontTest . java to
[ istio ] fix istio test on window
replaced ` ReportPlaybackStartAsync ` with ` reportPlaybackStart ` in ` PlaybackController . java ` and ` Utils . java ` to ensure
[ java ] close inputstream in simpleauthority to avoid memory leak .
maploader : fix maploaderhittingevictiononinitialload fail on maploader shutdown
modified the return statement in ResponseFlag . java to simplify the return statement to improve code readability and maintainability
fix : add read policy to fix default policy
refactored CompositeFont handling to use a ConcurrentHashMap for better thread safety to improve memory management and prevent potential memory leaks
initialize prefHeight to zero instead of using getHeight ( ) to ensure prefHeight is always zero to avoid potential null pointer exceptions
[ dmn ] fix dmn validation error message
removed unused imports and added a new method ` isVacant ` in multiple Java files to streamline code and improve maintainability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and updated execution logic in ` NavHandleLongPressInputConsumer `
added null checks for Node ID and ID in ElementFactoryImpl , ImportContainerImpl , and ImportContainerImpl classes to ensure that node IDs are
[ hotfix ] [ runtime ] do n ' t throw exception if there be unknown state response .
updated Bin instantiation to use sessionFactory for session creation and added a new test for flowfile large than the bin limit to ensure proper session creation and
refactor tile retrieval logic in Teams . java to use a loop for finding the closest core to improve code readability and maintainability by reducing
added a check to skip copy content length in RestTemplateCopyHeaderFilter and created a test for it in TestRestTemplateCopyHeaderFilter to ensure
updated type - checking logic in Java2TypeScriptTranslator and refactored transpile method in SyntaxTests to improve code clarity and ensure correct
updated channel bandwidth values in FilterFactory , ChannelizerViewer , and PolyphaseChannelManager classes to adjust channel sizes and minimum and maximum frequency to
hbase - 16464 add - allregions command to allow regionserver task to run in all region
[ hotfix ] [ cassandra ] remove node . environment dependency from cassandraconnectorfactory
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure the order index is reset before proceeding
added minimum size constraints and adjusted frame dimensions in OneToOneCallDialog and OneToOneCallPanel to ensure proper layout adjustments based on frame dimensions
fix loss of world state information during world gen . fix loss of state information during world gen .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit ' s TestSuite for setup and teardown to improve test reliability and
added null check for kerberosPrincipalEntity before removing it from KerberosPrincipalDAO to avoid potential NullPointerExceptions when the principal entity is
removed the boolean parameter from the getTableSnapshot method call in StatsOptimizer . java to simplify the method for better readability and maintainability
[ java ] catch throwables . handlethrowable ( t ) in aprendpoint . java
updated the exception message in AndroidGradleBuilder to include " Monetization setup " and paste the Base64 - encoded RSA public key in the
updated the method name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` FileTranscodeVirtualFolder ` and removed the ` is
[ drools - 136 ] add a way to get the root package name from the package name .
added a conditional check for version 19 in CheckIndexTest . java to ensure compatibility with the latest version 19
refactor ` assignTargetsForSplitScreen ` method to remove unnecessary parameters and streamline target assignment logic to improve code readability and maintainability by
refactor LeaderLatch class implementation to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4253 - add init zk parameter to the service
refactor transaction confidence handling by introducing a new method ` getDepthFuture ` in ` TransactionConfidence ` to improve code readability and maintainability by
added a new method ` createMediaRecorder ` in ` CodenameOneImplementation ` and updated related methods in ` Location ` , ` Location ` ,
set platformname to " ios " in JavaSEPort . java to ensure platformName is initialized with " ios "
refactor PageEditClient to improve code organization to enhance maintainability and readability of the code
do n ' t use moz and webkit line dash if it ' s not undefined
refactor CreateVisibleSignature class implementation to improve code readability and maintainability
added error handling for the nextOutgoingFrame callback in AbstractExtension . java to improve robustness by catching potential exceptions during execution
refactor classloader handling in ContextHandler to use privileged actions instead of try - catch blocks to improve code readability and maintainability by using privileged actions
added logic to update the parent of feed categories in CategoryREST . java to ensure that all children are included in the feed category
added a title to the ContributionManagerDialog and updated the showYesNoQuestion method to use a more descriptive title instead of a
added a new field ` vwap ` to the ` Ticker ` constructor and updated its usage in the ` Ticker ` class to include
added a TextView parameter to the SearchAndRecommendationsScrollController and modified the WidgetsFullSheet class to include a noWidgetsView parameter to
[ gsoc ] add api for render graph
added a color setting for the primary color in NCFirebaseMessagingService to enhance the visual appearance of the messaging service
updated ShadowUsbManagerTest . java file to improve test coverage for ShadowUsbManager functionality
updated evaluation evaluation logic in multiple evaluator classes to include a userID parameter to improve clarity and accuracy in evaluation processing
added a call to update the selected configuration in Rocket . java to ensure that the selected configuration is updated correctly
updated the calculation for width and height in AndroidGraphics . java to ensure the bounds are non - negative to improve accuracy of width and height calculations
replaced HashMap with LinkedHashMap in multiple Java files to ensure consistent iteration order across multiple classes
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to utilize the closure pool for closure closure management
test : migrate routetest from junit4 to junit5
added WebsocketIngressIntegratedBootstrap and WebsocketPluginTest classes to facilitate testing of WebSocket connections in the application
[ dsm ] remove unused importer implementation in abstractimportmetadatasourceservice
refactor authentication comparison logic into a separate method to improve code readability and maintainability
added a conditional check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to
updated variable names from ` getType ( ) ` to ` callNodeType ` in ` CodeGenerator . java ` to improve clarity and consistency in variable naming
added a new interface ` Insecure ` and modified ` MessageBuffer ` to include ` @ Insecure ` annotation to enhance security by allowing access to
added new configuration variables for various Hive configurations in HiveConf . java to enhance the configuration for various Hive configurations
initialize scopes , policies , and policies in ResourceSet . java and add null check in DefaultResourceSetService . java to ensure that scopes and policies
added a new constructor to the MultiReader class and modified its constructor to accept an additional parameter for readerFinishedListeners to enhance flexibility in closing the Multi
refactor multiple socket channel - related classes to improve code organization to enhance maintainability and readability of the codebase
[ java ] refactoring inputfieldtest to use input . val ( ) instead of input . clear ( )
replaced the static method ` getFirstTypeArgument ` with ` getFirstTypeArgument ` in multiple classes to improve type safety and ensure immutability of type
changed method return types from Set < Integer > to KeySet and Values in Int2IntHashMap . java to improve clarity and consistency in naming convention
added a ` duration ` parameter to the ` FlipTransition ` class and updated related methods to include it to allow dynamic adjustment of the background color
removed logging for invalid subsAreValidForStreaming setting in DLNAResource . java to streamline the code by eliminating unnecessary logging
updated major and minor version numbers in ForgeVersion . java to ensure compatibility with the latest features and fixes
replaced System . err . println with LowLevelLogUtil . log for unsupported runtime environments to improve logging clarity and ensure compatibility with different Java versions
added ` Java15PostProcessor ` and ` Java16PostProcessor ` classes to the ` ParserConfiguration ` and updated ` BLEEDING _
updated padding logic for status views in ExpansionViewHelper . java to ensure padding is only set when there are no items available
[ v3 . 9 ] do n ' t call callback if no namespace be available before v3 . 9
added metadata mapping to SeedUrl , SeedResource , and SeedResource classes to enhance metadata handling in the application
added a null check for the declaration before creating a Pattern to avoid potential NullPointerException when the declaration is null
refactor TestCoprocessorWhitelistMasterObserver to improve code organization to enhance maintainability and readability of the code
[ core ] add package name to actionconfig in annotationactionvalidatormanager . getname ( )
updated iterable tests to use ` ( Object ) null ) ` instead of ` null ` to ensure type safety and prevent potential ClassCastExceptions
added ` stream ( ) ` and ` spliterator ( ) ` methods to ` MapIterable ` , ` PrimitiveObjectMap ` , and ` Primitive
clone the notifInfo object to ensure that the notifInfo is cloned to avoid potential memory leaks
refactor command key comparison logic to use commandConstants instead of commandConstants to improve code readability and maintainability
refactor AEADBlockCipher class for improved readability to enhance maintainability and readability of the code
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap ` classes
added a null check and inverse handling for resource names in PackageResourceTable . java and updated default resource mode in RobolectricTestRunner . java
added a check for ` ulSize ` and ` ulPos ` before retrieving metrics in ` TrueTypeFont . java ` to ensure proper handling of
updated SignPlugin and SignPluginConfiguration to include a ServerCodecConfigurer parameter to enhance the flexibility and flexibility of the sign plugin configuration
refactor Int2ObjectCache class for improved performance to enhance performance and maintainability of the code
added validation check for MavenDeployer in StandardMavenAuthenticationProvider to ensure proper validation of MavenDeployer instances
refactor AudioNode class implementation to improve code readability and maintainability
updated SSL handling in LinkyHandlerFactory and EnedisHttpApi to use SSLContext instead of CookieStore to improve security by ensuring SSL context
added imports for OracleSqlOperatorTable and SqlStdOperatorTable , and modified the register method to use a streamlined map to improve code read
[ java ] fix checkstyle violation in jmx test
updated the ` getBuildTargetForAlias ` method to accept a ` possiblyFlavoredAlias ` string instead of a ` alias ` to improve alias
added handling for empty ODataFeeds in Olingo2Consumer . java to ensure correct processing of all OData feeds
added a map to retrieve the equivalent Hive version in MetaStoreSchemaInfo . java to ensure compatibility with the latest Hive version
vm : do n ' t advance expunge if the vm do n ' t exist
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
refactor ONDashClockExtension and AlarmReceiver to use getAlternativeTitle method instead of parseTitleAndContent method to improve code readability and
updated GoogleAuthUserConfigTable to use nvarchar / int4 / int4 / int4 / int4 / int4 / int4 / int
replaced ` commit ( ) ` method calls with ` apply ( ) ` for consistency across multiple classes to improve code readability and maintainability by using
added TestIdleListener to the StandardSession constructor and implemented TestIdleListener in AsyncTimeoutTest . java to enable testing of idle events in the test
updated the initialization of the testBigQueryTable to include the TEST _ ID in the testBigQueryTable string to improve readability and maintainability
added background resource and reset functionality in HotseatPredictionController and BubbleTextView to enhance the visual appearance of the icon in the BubbleTextView
rename getflushafterquery property to getflushafterquery ( )
add a new abstract class AbstractTestNativeSystemQueries for testing native query execution to ensure that the system correctly handles and queries correctly
updated the way active features are retrieved in LIMEExplanation . java to ensure that all features are retrieved based on the model ' s active features
added a ` args ` parameter to the ` AppleSimulatorController ` and updated the ` InstallCommand ` to include a ` runArgs ` parameter to
replaced direct calls to ` getArea ( ) . getAbsolutePosition ( ) ` with a ` GenericStyledArea < PS , S > `
added check for available state in Lifecycle checks in ContainerBase and StandardContext classes to ensure only available states are processed
added a call to setClipToOutline ( true ) in QsbWidgetHostView . java to enhance the visual appearance of the QS
added time tracking and logging for flag conversion in SQLManager , BlockTypeListFlag , and PlotArea classes to improve accuracy of flag conversion in progress
refactor GL _ DEPTH _ TEST imports and update glDisable logic based on floatingText ' s Occluded state to improve code
rename libffi _ nfi _ backend _ libffi _ nfi _ libffi _ nfi _ backend _ libffi _ nfi _
added a new private variable ` propagationBehavior ` and updated related methods in ` JdbcAggregationRepository ` to improve encapsulation and encaps
refactored the configureBaseLayer method to improve handling of regularizations in LayerValidation . java to enhance code readability and maintainability by
added exception handling for reading and writing in AbstractChecker . java to improve robustness by catching exceptions during reading and writing operations
changed the visibility of the ` colorStack ` variable from static to instance variable to allow subclasses to access the ` colorStack ` variable
changed the return value from false to true in the getMappedStatement and hasStatement methods from false to true to enable the retrieval of mapped statements based
updated the method to convert the tradableIdentifier to lowercase in BTCEPollingMarketDataService . java to ensure consistency in depth retrieval based on currency
updated assertions in ChannelStateTests from " 0 . 312716 " to " 0 . 329000 " to reflect the correct version of the
remove ` ` versionedhash ' ' field from enginepayloadparameter
added trigger price field change handling in MutableOfferView . java to ensure proper handling of trigger price values in the application
do n ' t redirect student feedback submission if no student be register
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 16446 hstore . getdebugger ( ) should check if the result be not log .
fix entitybeanintercept . setchangedproperty ( ) to be call when setproperty ( ) return true .
added a boolean field ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to enable dynamic configuration of the
added new methods ` nSetLayerType ` , ` nSetLayerPaint ` , and ` nSetLayerType ` to the ` ShadowRender
replaced specific imports with wildcard imports for JComboBox , JComboBox , and Accessible in LWChoicePeer . java to improve code readability and maintain
refactor the initialization of the ` insert ` variable in ` StressProfile . java ` to improve code readability and maintainability
replaced ` JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` across multiple files to improve code readability and maintain
added null check for requests before processing in MockServerEventLog and updated logging methods in HttpForwardObjectCallbackActionHandler to improve robustness by preventing
added a warning log for unable to load properties file in DefaultEnvironment . java to improve visibility into property loading issues
refactor session data retrieval to use try - with - resources for resource management to ensure proper resource management and prevent potential memory leaks
added a condition to check if the nic supportsMulticast and isUp ( ) are supported in SetOutgoingIf . java to ensure that the n
updated the initialization of SQLCommand to include a length parameter to ensure proper handling of command execution
added methods to set the latest consume time for energy in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to streamline the
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to allow for customizable session strategy handling
[ hotfix ] [ runtime ] improve error message for invalid token
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the behavior of ` containsKeys ` method in ` MapAssert _
added a new ` DelegatorGenerator ` interface and modified ` JdbcProxyGenerator ` to implement ` JDBC4TemporaryPreparedStatementMethods ` to enhance
added a ` ensure ` method to ` ServerWebSocketContainer ` and modified the ` start ` method to accept a ` Handler ` parameter to ensure WebSocket
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to improve code readability and maintainability by using a
pdfbox - 4071 : remove the use of float . float from curveto ( ) method
added a static final EMPTY array and refactored hooks initialization in Method . java to improve code readability and maintainability by reducing redundancy
added support for granting access in the MockAuthenticationManager class to enhance security by preventing unauthorized access requests
updated the ` afterJob ` method to accept an ` JobExecution ` parameter across multiple classes to enhance flexibility by allowing customizable job execution parameters
added a check for ` canExecute ( ) ` in ` SharedLibraryLoader . java ` to ensure ` file . canWrite ( ) ` is
added ` hasTimeSeriesQueryLanguage ( ) ` method to ` TimeSeriesQuery ` and implemented it in ` TimeSeriesQueryOrBuilder ` to provide
[ hotfix ] [ runtime ] fix typo in method name
added new bundle constants for battery , time offset , and profile names in BundleConstants . java and CustomUrlManager . java to enhance the bundle configuration
make searchexpression . applyrule return a map instead of a hashtable
rename ` ` movedgeowidget ' ' to ` ` absolutescreenlocateable ' '
updated resize method and modified texture initialization in JoglGraphics and ProjectiveTextureTest classes to improve texture rendering accuracy and enhance compatibility with newer graphics
refactor the setResourceToDelegate method to return a File object instead of void to improve code readability and maintainability by encapsulating
camel - 14284 : camel - properties - allow to intercept property with property placeholders
updated the condition to check if the last attempt time is greater than the current time in ActionScheduler . java to ensure that the condition correctly reflects the
updated the path for the dbg _ zip in DbgPacker . java to ensure compatibility with the temporary directory for the debug log file
gestalt : enable renderingdebugconfig . visible ( ) to be visible
refactor gate initialization in BlockGenericPipe and add resetGate method in Pipe to improve code readability and maintainability by encapsulating gate
refactor TestSupplementary to use Locale . getDefault ( ) for locale handling to improve code clarity and ensure default locale is set for test execution
updated the color value in the Team constructor from 0.8 to 0 . 4 to adjust the color for the team ' s color to reflect the
replaced HashSet with ArrayList for activeMatchedStates and added logging level checks in SequenceMatcher . java to improve code readability and maintainability by using a
updated the condition in the SoftAsserts class to check if the annotation is null or empty to simplify the code and improve readability by eliminating unnecessary
added error logging for invalid JSON and UnrecognizedPropertyException in StorageResources and StoragePluginRegistryImpl to improve error handling and provide clearer error reporting
[ hotfix ] [ runtime ] fix calltreeprinter # tocsvfile in calltreeprinter
added null checks for mActivity in DetailFragment . java to ensure robustness by preventing potential NullPointerExceptions
added peakTasks and fractionalLoaded calculations in AssetManager . java to ensure correct calculation of loaded and fractional loaded values
[ java ] enable native event for firefox on window
added methods to retrieve score , fetch interval , and custom interval in Injector . java to improve accuracy of score and fetch interval management in the application
updated import statements from org . apache . commons . collections . ListUtils to org . apache . commons . collections4 in ScimExternalGroupsType
added a method to check if the zkController is null and implemented a test for sharing the schema in CoreContainer to improve code readability and ensure
updated size calculations in multiple classes to include a boolean parameter to ensure consistent size calculation across multiple classes
removed unnecessary assertions in VersioningTest . java to streamline test assertions and improve readability
updated SQL query to include typtype in SQL queries to ensure correct handling of non - null domain columns in database operations
[ java ] do n ' t append leader commit position if log publisher do n ' t exist .
removed unused import of MediaType and added a method to retrieve the content type from the WebClientPlugin to streamline the code and improve readability by
replaced calls to ` fillUsingLengthPrefix ` with ` fillAndGetIndex ` across multiple classes to improve code readability and maintainability by using
added a check for compacted base in AcidUtils . java and modified conditions in AcidUtils . java to ensure that compacted transactions are
[ hotfix ] [ table - common ] fix npe in ptableimpl
added new classes PojoProducersCustomized , PojoProducers , RestProducersCutomized , and RestProducersCutom
updated cache configuration keys from " cache " to " CACHE _ SECTION _ NAME " in ArtifactCacheBuckConfig . java to ensure consistency in
removed redundant registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to improve code readability and
add a wooden slab to the OreDictionary to enhance the visual representation of wooden slabs
refactor multiple session factory and session management classes to improve code organization and maintainability
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class hierarchy by
updated the version number from " 3.2 - SNAPSHOT " to " 3.2 " to ensure compatibility with the latest features and fixes
hhh - 16464 - remove @ skipfordialect from denormalizedtablelogicalincludedtableincludedtableincludedtable
corrected the positioning of the spriteBatch draw method in HelloWorld . java to ensure proper rendering of the sprite batch
refactor x and y calculation in PlayerFunctions . java and add a toString method in PlotId . java to improve code readability and maintainability
added a deprecated version constant LUCENE _ 8 _ 5 _ 0 in mmm Version . java and ppp Version . java to mark the class
updated the print statement in SSLSocketImpl . java to include the " selfInitiated " variable to improve readability and maintainability of the
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing of signed
refactor dependency type handling in CoNLLUOutputter and SemanticGraphCoreAnnotations to use a new enum DependenciesType to improve code readability
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods in ` NoSuchBuildTargetException ` and ` ParseContext ` to
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild ( args ) . test ( ) ` to simplify the
updated the array size from ` blocksList . length ` to ` 256 ` in ` Configuration . java ` to improve performance by reducing the number of
updated logging messages and modified version checks in BukkitMain . java to ensure compatibility with Bukkit versions and improve compatibility checks
updated SQL escaping logic in AbstractSQLChange and added a test for escaping PostgresQuestionmarkOperators in AbstractSQLChangeTest to ensure correct SQL
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` MutableBag
refactor ` title ` and ` page - permalink ` handling in ` BuildNavAndPDFBody . java ` to improve code readability and
mqttconnection2 : set default value of mqttbrokerconnection to false
updated the method to retrieve the root change log and added null check before retrieving the change set to ensure proper retrieval of the change set based on the
fix typo in log output for plugin boot service .
added HiveMetaStoreClient to drop databases in TestHiveMetaStorePartitionSpecs and added logging in TestObjectStore to improve database management
added " order _ currency " parameter to the BithumbAuthenticated and modified the API signature in BithumbAccountServiceRaw to include " BTC "
deleted the SSEFluxWebConfig . java file to the configuration class is no longer needed in the application context
updated method calls from ` getReturnType ( ) . getFullyQualifiedName ( ) ` to ` getReturns ( ) . isVoid ( ) ` across multiple
updated YamlResource to use a GET endpoint for YAML loading and added a method to list detection configurations to enhance functionality by allowing users to list YAML
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enhance encapsulation
refactor threadfactory to use a lambda expression for better readability and maintainability
added unit tests for ` PersonWithAList ` in ` MongoTemplateTests ` and created a new ` PersonWithAList ` class to ensure
updated syncAppletPanelSize method to use old dimensions instead of old dimensions to improve layout consistency and maintainability by using a more descriptive
replaced ` setVisibility ( View . VISIBLE ) ` with ` postDelayed ( Runnable ) ` in ` DrawerActivity . java ` to improve user experience
refactor code to improve readability and maintainability to enhance code readability and maintainability by reducing duplication
do n ' t update vm if vm be not run on vr
added multiple fields usingOutputStream , usingWriter , and isCharacterEncodingSet to the Response class to ensure proper handling of output streams and character encoding
added a check to prevent assignment side effects in GroupDialog to improve user experience by preventing unnecessary actions during group operations
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the conditional check from ` maxWidthWithMargin ` to ` maxWidthWithMargin ` in ` FileUploadApiController . java ` to ensure the correct
updated method names and imports in RegisteredServiceProperty and JwtTokenCipherSigningPublicKeyEndpoint classes to improve readability and maintainability of the
added a check for Windows file content type checks in Basic . java to ensure compatibility with Windows - specific mime types in the application
use jzlib decoder instead of system . out . println
added a method ` doesClassLoaderDescendFrom ` in ` Util ` and removed unnecessary null checks in ` Class ` and ` MethodHandles ` to
refactored the ` connect ` method in ` ChannelProvider ` and ` ProxyChannelProvider ` to streamline the connection process and improve error handling
drill - 116 : add test case for empty final column in csv header
added compass gravity and margin parameters to NearbyMapFragment to enhance the visual appearance of the map
added a new test method ` testInterpolation ` to ` GeoPathTest . java ` to verify the functionality of the ` toRadians ` method in `
added exception handling to the getLeafFilterBuilderByType method and improved logging in ParquetFilterFactory , ParquetFilterPredicateConverter , and TestPar
added language setting for currentAudioTrack in LibMediaInfoParser to ensure the currentAudioTrack is set based on the currentAudioTrack language
log warn if schemas in new version be less than the old version
replaced manual array copy operations with ` addAll ` in multiple classes to improve code readability and maintainability by reducing duplication
added try - catch blocks around resource closure in DataSourceProxy . java to ensure proper resource management and prevent potential memory leaks
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a map of ClientRegistrations instead of a list to improve code read
added a method ` resetUIState ( ) ` to ` SchemaUpgradeHelper ` to reset the UI state to ensure the UI state is correctly reset
added a failedStep flag to JUnitReporter and updated related tests in JUnitReporterTest to improve handling of pending exceptions during execution
add a playerselector to allow entity selector to be pass to player .
added Closeable interface to the Selector class to ensure that the Selector class implements the Closeable interface
added a MultiplexConnectionPool implementation to the MaxConcurrentStreamsTest class to enhance connection management and improve test reliability
added multiple calls to ` stringType ( ) ` in ` CoreOptions . java ` to ensure consistent usage of the ` stringType ( ) `
added null checks for character and parameter in HqlQueryRenderer and updated test configurations in UserRepositoryFinderTests to ensure proper handling of escape clause
updated status codes from SC _ OK to NOT _ MODIFIED _ 304 and introduced a new constant ` NOT _ PROTOCOLS _ 101 `
pdfbox - 4071 : remove unnecessary null - check for outputintent object
[ hotfix ] [ test ] fix test failure in hikaricpcollectortest
added functionality to expand and manage Parquet metadata files in ParquetFormatPlugin and ParquetGroupScan classes to enhance the functionality of the Parquet
changed the ` isSuccess ` variable from false to true and added error handling for Java compilation in ` Jsr199Javac . java
added a ` TableModelListener ` to the ` DefaultSortedTableModel ` class and implemented a ` BaseTableModelListener ` to handle table change events to
updated the number validation from 49152 to 65535 in ServerConfig . java to ensure that the number is less than 65535 instead of 49152
added support for document provider authority handling in multiple classes to ensure compatibility with newer Android versions and improve resource management
removed the call to Log _ OC . startLogging ( ) in MainApp . java to streamline logging process by eliminating unnecessary logging
added ThrowableAnalyzer for handling RequestRejectedException in FilterChainProxy to improve error handling and ensure proper handling of RequestRejectedException
updated method calls from ` length + length ` to ` this . length ` in ` StringBuilder . java ` to use ` this . length ` instead
added a check for empty filterList in Filter . java and created a new test method in TestFilters . java to ensure that an IllegalArgumentException is
add a new file ` TbStopWatch . java ` that implements a ` TbStopWatch ` class to facilitate stopping and retrieving task time
fix typo in pliststore . initialize ( )
deprecated multiple classes and added @ Deprecated annotations to various classes to indicate that these classes are outdated and should no longer be used in future development
added a context class loader to the Thread in RemoteInterpreterServer . java to ensure proper context class loading during execution
fix checkstyle issue in forgehooks
updated minSdk from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with the
updated method names from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve clarity and
camel - 14284 : camel - cqueryplan - add ` ` getname ( ) ' ' and ` ` getname ( ) '
updated JavaScript header items from " wro / all . js " to " static / all . js " and added a new WroSass
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` to verify the functionality of showing the latest
corrected the spelling of " appContextLocation " to " contextConfigLocation " in multiple test files to ensure consistency in naming conventions for
added type checking for CertPathValidatorException in OCSPChecker . java to ensure proper handling of CertPathValidatorException instances
added writeOutputSolutionEnabled property and related getter and setter methods in ProblemBenchmarksConfig and related classes to enable configuration of writeOutputSolution based on
set default maxinboundmessagesize to integer . maxinboundmessagesize ( int . max _ value )
added a new file ` Issue _ 815 . java ` to implement a test for slice size reading in ` SortedTableMap . java ` to
added a shapeless recipe to the GameRegistry in BuildCraftTransport . java to enhance the visual appearance of the pipe waterproof item
fix infinite loop in sequentialaccesssensevector . iterators ( )
added metadata handling for the Shulker entity in BukkitMain and EntitySpawnListener classes to ensure proper metadata management for the Shulker entity
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and implemented the ` getDebugLogger ( ) ` method in `
updated import statements and added methods for maximum directory name length in IOHelper . java and MultiKahaDBPersistenceAdapter . java to improve code
added a check for the presence of a tag in the UpToTagChangeSetFilter to ensure that a message is sent when no tag is found
[ hotfix ] [ runtime ] fix checkstyle violation in java . lang . arraylist
refactor BrokerRoutingManager class for improved clarity to enhance maintainability and readability of the code
updated color settings for volume , up , and up paint in CandlestickRenderer . java to improve visual consistency and visual consistency in the Candle
refactor InsettableFrameLayout to use LayoutParams instead of FrameLayout . LayoutParams for better layout management to improve code readability and maintainability by
added ` duration ( ) ` parameter to ` BuildTargetDurationListener ` and modified the ` duration ` method in ` BuildTargetDurationListenerTest `
replaced ` @ Profile ` annotation with ` assumeTrue ` for database profile checks to ensure tests are only executed when the database profile is enabled
added null check for user before processing claims to avoid potential NullPointerException when user is null
camel - 14284 : added advicewith support to replace route from endpoint in camel - test
replace ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to ensure compatibility with cliffc high - scale libs
api : listpublicipaddresses api : add ` ` source networkid ' ' parameter to listpublicipaddresses api
added tests for ` isIgnoringBatteryOptimizations ` and ` setIgnoringBatteryOptimizations ` methods in ` ShadowPowerManager ` to ensure correct functionality
updated the version retrieval method from ` __ jetty . version ` to ` __ jettyProperties . getProperty ` to ensure compatibility with the latest Jetty version
added unit tests for verifying arbitrary invocations in NumberOfInvocationsInOrderVerifier to ensure correct verification behavior for invalid and invalid invocations
removed redundant debug force evaluation calls in TRegexExecNode . java to streamline code for better readability and maintainability
added a new parameter " - foreground " to the startProfile method call in NewProfileExtensionConnection . java to ensure the process starts with a foreground
replaced ` executor ` with ` executorLauncher ` in ` MiniSolrCloudCluster . java ` to improve thread management and ensure proper resource management
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` in ` MetadataIndexer .
updated logging level from ` getFile ( ) ` to ` getName ( ) ` in ` CodeEditorView . java ` and added null checks in `
updated skippedEntries to include exception messages and improved warning messages in ClassFileReader and JdepsTask to enhance error reporting and provide clearer context for
added LuceneStorage to Fetcher , FetcherMain , FetcherMain , and FetcherTask classes , and updated FetcherTask to use Lucene
updated BubbleBarController to include an existing BubbleBarBubble parameter and modified the populateBubble method to include an existing BubbleBarBubble parameter
[ hotfix ] [ job ] make scheduledroutepolicy . execute ( ) throw an illegalargumentexception
replaced multiple calls to ` buildRpcExt ` with a single ` buildRpcExtJson ` method across multiple classes to improve code readability and maintain
[ java ] add support for multicast delay generation in mediaconductor and receiver .
updated Gson initialization and added client ID and registration information handling in ClientInformationResponseView . java to ensure proper serialization and deserialization of client information in the
updated order addition logic in HuobiAdapters . java to check if the field amount is greater than zero to ensure that the average price is
removed the ` rawExecutionReports ( ) ` method from ` BinanceStreamingMarketDataService . java ` to simplify the code and improve readability
added a ` fail ` method to ` LdapTimeoutTest ` and modified exception handling in ` ReadServerTimeoutTest . java ` to improve error handling
fix npe in jphonemiser when user dictionary do n ' t exist
updated password handling logic in AmbariServerConfigurationHandler . java to use fetching password file or credential store alias to ensure proper handling of password
added a check for already parsed segments in ParseSegment and implemented a method to check if a segment is already parsed to improve segment parsing accuracy and prevent
[ hotfix ] [ yarn . application - attempt - validity - interval ] add default value for yarn . application - attempt - validity -
add log when h2 driver can not be unload
hbase - 16464 add config option to set readtype for snapshot - based inputformat in tablesnapshotinputformat
added fixed height and width parameters to the LoginInstanceRequest class to enable dynamic configuration of instance login options based on fixed dimensions and width
added a cornerRadius parameter to the update methods in ActivityControlHelper , LauncherLayoutListener , and LauncherLayoutListener to allow for more flexible
updated the COMMANDS _ TO _ REMOVE command to include additional columns and data bases to enhance filtering capabilities for cross product scenarios in the
added a retry mechanism for connection pooling in TxnHandler . java to improve connection handling and error logging for BONECP bugs
[ java ] add txncheckbackupreserve ( ) method to queuecontainer
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to facilitate the initialization of the ` strings ` array
corrected the spelling of " DELETE ROWS " to " DELETE ROWS CLIENT SELECT " in CostBasedDecisionIT and DeleteCompiler
added handling for SocketTimeoutException in BaseServiceException and updated related tests in BaseServiceExceptionTest to improve error reporting and ensure proper handling of insufficient data
added a new parameter ` rapidInstallTypes ` to the ` AdbHelper ` and ` RealAndroidDevice ` classes to include ` rapidInstallTypes
updated the seed pattern from " - srand " to " - ? " in SortTest . java to ensure that the seed pattern correctly reflects the
refactor MultimapSubject to use factory methods for handling Iterable values and iterable entries to improve code readability and maintainability by encapsulating
modified the return statement in the Workspace class to use the correct positioning of the visible bounds to simplify the code for better readability and maintainability
added an ` transmux ` boolean parameter to the ` Transformer ` and ` TransformerInternal ` classes and updated the ` ComponentListener ` constructor to include
added a loop to localize strings in Picker . java to ensure consistent formatting of strings in UI components
camel - 234 : camel - cxf : fix issue with camel - cxf ( # 234 )
hhh - 17247 - add support for sql state conversion in postgresql dialect
replaced ` @ VisibleForTesting ` with ` assertTrue ` and updated query ID handling in ` TestJdbcDriver2 . java ` and ` HiveStatement .
added a new category ` UsesUnboundedPCollections ` to the ` ParDoTest . java ` annotation to improve test coverage and
updated text formatting in GpsSimpleViewFragment to use Strings . getFormattedFileName ( ) instead of em to improve code readability and maintain
[ java ] remove the leadershiptermid parameter from the joinlogasfollower method
refactor exchange initialization in HttpSender to use a private variable for better encapsulation to improve code readability and maintainability by centralizing
[ hotfix ] [ test ] migrate checkpointcoordinatortest to junit 5
renamed the ` token ` method to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` and ` AppOpticsPropertiesConfigAdapterTests
added null check for the tree before processing markers in Recipe and Markers classes to enhance robustness by preventing potential NullPointerExceptions
changed the return type of ` getFontSizeAsFloat ` and ` setFontSizeAsDouble ` methods from ` float ` to ` Double ` and updated
updated the variable name from ` matchSingleDoCoMoPrefixedField ` to ` emails ` in ` AddressBookDoCoMoResultParser .
refactor exclusion handling in RawMavenResolver to use a set instead of a stream to improve code readability and maintainability by reducing duplication
added handling for null DSX exchange info in DSXAdapters and DSXBaseService classes to improve error handling and provide clearer error messages
refactor TestBlockingIO , TestParsingTable , TestValidatingIO , and TestValidatingIO classes to improve code organization and maintainability
[ drools - 90 ] fix intermittent failure of incremental build
updated the initialization of ` copy ` and added a check for ` sobj . has ( k ) ` before creating a new ` NativeArray `
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code readability and maintainability
make hostfielddesc . findstaticgetter / getstaticset / getstaticset / unreflectgetter / unreflectgetter / unreflect setter
added a method parameter annotation for CompletableFuture completion in DefaultNullnessAnnotations . java to enhance the handling of CompletableFuture completion stages in the database
updated the calculation of mFreezeCheckPoint from 9000 to 10000 in PlaybackController . java to adjust the freeze check point based on the duration
replaced the usage of ` RunNotifier ` with ` Whitebox . setInternalState ` in ` AbstractCommonPowerMockRunner ` and removed the ` Run
updated the method signature of ` unmarshalIn ` from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to
added indentation handling for method invocations in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to ensure compatibility with JUnit ' s testing framework
replaced ` newColumn ` with ` wrappedText ` in ` HtmlProcessInformationsReport . java ` to improve code readability and maintainability by
added null check for ` latest ` in ` JdbcStepExecutionDao ` , ` MapStepExecutionDao ` , and ` SimpleJobRepository ` to
added a condition to check if the new media folder is hidden before adding it to the root folder to ensure that the new media folder is only added
replaced UnsupportedOperationException with IllegalArgumentException for setWidget and setFirstWidget and setSecondWidget in SplitPane . java to improve error handling and ensure proper
added type parameter handling for JavaType . Parameterized in RemoveUnusedImports . java to ensure correct type resolution for Parameterized types
updated debug logging to use ` this . getModInfos ( ) ` instead of ` this . getModInfos ( ) ` for null and empty
changed the visibility of the LOG variable from private to static in TicketGrantingTicketImpl . java to allow subclasses to access the logger instance directly
updated the SQL string for the timeseries creation in PhysicalPlanTest . java to ensure the correct data type is used for timeseries creation
added a method ` isValue ( String value ) ` to ` AttrData ` and modified exception handling in ` Converter ` to improve value comparison logic
updated conditional logic in CPlatformResponder . java and added new methods in LWCToolkit . java to ensure proper handling of character modifier keys in
added a new ` MediaDriverTestWatcher ` to the ` SpySimulatedConnectionTest ` and modified ` CTestMediaDriver ` to
added a condition to check if the request URI starts with " / css " , " / favicon " , and " / favicon " to
added JUnit assertions and modified shell command execution in TestUtil . java to ensure the device is rooted before execution
remove oracle ansisqlrowslimiter from oracle platform
added a mock for MultiMap in TestSimpleBodyHandler and updated assertions in TestVertxTLSBuilder to ensure compatibility with the new multi - map
updated path formatting in DiffRuleKeysScriptIntegrationTest . java to improve code readability and maintainability
added a boolean variable ` mIsDismissHapticRunning ` and modified conditional logic in ` TaskViewTouchController . java ` to ensure that
fix a bug in mixineventworldexplosion when exploder be null
removed unused import and modified getItemId method in SymbolInputAdapter . java to streamline code by eliminating unnecessary imports
updated the ` Bitfinex ` API endpoint to use ` @ QueryParam ` instead of ` limit _ bids ` to improve flexibility in retrieving limit
added a check to replace single quotes with single quotes in the StaxConverterTest to ensure proper handling of special characters in the result
added ` toString ( ) ` method to ` KubernetesLeaderElectionDriver ` and ` ZooKeeperLeaderElectionDriver ` classes to
refactor SqlSessionFactoryBean class to improve code organization to enhance maintainability and readability of the code
refactor TripleInvoker to handle null generic calls more gracefully to improve code robustness and prevent potential NullPointerExceptions
replaced error handling in PolygonRegionLoader with throwing a runtime exception to improve error handling by throwing an exception instead of throwing a runtime exception
added a method to check if a thread local Deadline is started in Deadline . java and implemented timer registration in RawStoreProxy . java to
nettyrequestexecutor : provide more informative error message for closed channel
added a null check for the genres before setting it to the textView to avoid potential NullPointerExceptions when the genre is null
[ hotfix ] [ runtime ] remove redundant call to masterhook . reset ( ) in region recovery
added a new ` MappedContainerComponent ` class and updated ` PrefabTest ` and ` ProtobufPersistedData ` classes to support multiple mapped
[ flink - 13224 ] [ wal ] fix npe in walnode . getoldestunpinnedmemtableinfo (
[ java ] retry the same host on callback failure .
corrected the spelling of " background " in the package - info . java file to ensure consistency in naming conventions across the codebase
added a new test class SQLServerEscapeQuestionCharacterTest for SQL server escape functionality to ensure proper handling of escape characters in SQL queries
camel - 14247 : camel - jbang - fix nullpointerexception in camel - spring
replaced synchronized block with Util . wait for null values in JavaFXSEPort . java to improve thread safety and maintainability of the code
updated package names from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider `
refactor CropperUtils to utilize Bitmap objects instead of creating new ones to improve code clarity and ensure proper handling of bitmap objects
removed the appName parameter from the configure methods in InputRC to simplify the code and improve readability by removing the appName parameter
add test case for install install with ignore dependencies
replace ` setHeadless ( true ) ` with ` setArguments ( " -- headless = chrome " ) ` in multiple test files to ensure consistent
updated value assignment to use intern ( ) for consistency to improve code readability and maintainability
added support for " MOVE " in recv status checks to ensure proper handling of move scenarios in the database
updated date formatting in FixedDateFormat . java to ensure consistency in date formatting to improve readability and maintainability of date formatting
updated import statements from ` org . apache . curator . shaded . com . google . common . collect . Lists ` to ` com .
modified the ` startSpilling ` method in ` HsBufferContext ` to return a boolean indicating if the buffer is released or already released
updated permission checks in Visit . java to include a check for untrusted visit permission to ensure proper handling of untrusted visits based on user
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 421 : http :
updated URL normalization conditions in BasicURLNormalizer . java and added a new test case for curly braces in TestBasicURLNormalizer . java to
changed access modifiers of methods from protected to private in QuickstepTransitionManager . java to enhance encapsulation and improve code readability
added a condition to compare clock rate values in EncodingConfiguration . java to ensure that clock rate comparisons are only applied when the value is zero
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` , ` SeparatedProjectsGenerator ` , and ` SeparatedProject
do n ' t use native calid to avoid arrayindexoutofboundsexception
added a new file MSwingUtilities . java to handle image scaling to provide a utility for the MSwingUtilities class
camel - 14224 : camel - mail - use asyncproducer instead of asyncproducer
added ` @ RefreshScope ` annotation to ` CasCoreWebConfiguration ` , ` PasswordlessAuthenticationConfiguration ` , and ` PasswordlessAuthenticationConfiguration
added unit test base on user forum issue
added Main . java and ScriptRenderer . java files for scripting functionality to facilitate the rendering of script scripts within the application
updated conditional logic in Request . java and added a new test for querying parameters in RequestTest . java to ensure proper handling of form - encoded
added a new method ` isDescendant ` in ` BitmapFont ` , ` FlickScrollPane ` , and ` SelectBox ` classes to ensure
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager . java ` and added a shutdown hook test in ` DeploymentTest .
lexiconrecipemapping : add ` ` force ignore meta ' ' option to make it easy to use .
[ hotfix ] [ test ] increase timeout in constanttimebackofftest
replaced ` StringUtils . trim ` with ` StringUtils . * ` in ` LoincHandler . java ` to improve code readability and maintainability by
do n ' t use classpathhttphandler in jollydayholydays . java
added a new file ` FieldUtils . java ` that utilizes the ` getAccessorName ` , ` getMutatorName ` , and `
removed conditional check for NONE mode in DeferredAttr . java and added a new DoubleStaticImport class in DoubleStaticImport . java to simplify assertion
updated layout inflater from ` layout _ custom _ content ` to ` layout _ screen ` and added default padding for widget content to improve layout consistency and
add updatesettingswithsavelastaccount ( ) method to xabberaccountmanager . updatesettingswithsavelastaccount ( )
added a new method ` setvar ` to ` Commands . java ` for setting variable variables in a command - line argument to enhance command - line
fix onAnimaltaltaltaltaltame event not fire when the entity be a passive entity .
updated the handling of unsigned and unsigned range values in WindowFrame . java to improve error handling for invalid range values
pdfbox - 4071 : add test to verify that fonts be not empty
added a method to set the mode of the app in PageListController to ensure the application has the correct mode for the application
added support for build arguments in ImageFromDockerfile and created a new DockerfileBuildTest class to enhance the functionality of the ImageFromDockerfile
added a null check for threadInfos in ThreadInfos . java to avoid potential NullPointerException when threadInfos is null
updated the conditional check in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of 0 . 00001f to improve accuracy of
[ hotfix ] [ runtime ] add log for last checkpoint failure
added new tables for SYNONYM , AUXILIARY , AUXILIARY , HIERARCHYM ,
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors and updated FuzzyTermEnum to include minimumSimilarity parameter to enhance query
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to improve clarity
[ java ] add warn message when the appender be not set within the enclosing appender .
added " AMQP " and " KafkaAutoConfiguration " to the AutoConfigureAfter annotation to support additional auto - configuration options in the Zipkin auto configuration
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java with a
removed shaded import from multiple Java files to streamline the code by removing unnecessary shaded imports
refactor BciBlockMapping and GraphBuilderPhase to use a new return and unwind blocks instead of null checks to improve code readability and
added legacyRenderer property and getter / setter methods in Label . java to improve code readability and maintainability by encapsulating legacyRenderer logic
refactor AbstractJweDecrypter and AbstractJweEncrypter to use Ints . toByteArray ( ) instead of intToFourBytes (
added null check for mObserver before checking if mBasePredicate is enabled to prevent potential NullPointerException when mObserver is null
replaced ` thenComparing ` with ` thenComparing ` in ` Comparator ` and added a new ` Department ` class in ` Type
refactor DocIdSet class implementation to improve code readability and maintainability
updated the ` setEndTimeUtc ` method in ` UserRuleAnomalyFunction . java ` to use ` currentKey bucketMillis ` instead of
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure proper handling of NumberFormatException during parsing
updated the enhancer naming policy and classloader setting in MockFactory . java to improve clarity and maintainability of the enhancer class structure
added a new ` OriginalFormat ` class to handle object parsing in ` ConverterWithEnumFormat . java ` to ensure that the original format is correctly
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils . java
refactor JAWTRenderer to improve code structure to enhance maintainability and readability of the code
camel - 14284 : camel - aws2 - lambda should use autowire instead of autowire
cloudstack - 12626 : add validation of mac address for nic in network .
added a condition to check if the header name is " Authorization " to ensure proper handling of authorization headers in the proxy servlet
changed the method call from ` submit ` to ` execute ` in ` TraceableExecutorService . java ` to simplify the command execution logic for better read
added getDetails ( ) method to Authentication , AbstractAuthenticationToken , UsernamePasswordAuthenticationToken , and CasProcessingFilter classes to provide access to the
updated randUsePoints initialization to use nextInt instead of nextBoolean to ensure randomness in the test case
rename ` appendDot ( ) ` method from ` appendDot ( ) ` to ` endSentence ( ) ` across multiple geos - related classes
updated the ` formatForConsole ` method to include a ` Locale ` parameter across multiple files to ensure consistent locale handling across different locales
updated import statements and added a check for the last column number in GroovyParserVisitor . java and GroovyPrinter . java to improve code readability and
added bounds checks for bottomInsetPx and rightInsetPx in Border . java to ensure proper handling of edge cases in the border
refactor GestureState initialization to use a static final DEFAULT _ STATE constant to improve code readability and maintainability by encapsulating the
updated import statements and modified date formatting in LlapServiceDriver . java to ensure compatibility with the latest date formats and improve date formatting
refactor openblas . java and openblas _ nolapack . java files to improve code organization and maintainability
fix potential resource leak in torrentsstorage . close ( )
added synchronized keyword to the initTxnMgr method to ensure thread safety when accessing the initTxnMgr method
increased the timeout value for waitForRecoveriesToFinish from 120 milliseconds to 480 milliseconds in AbstractDistribZkTestBase . java to allow for
added a new file ` SearchResults . java ` with methods to retrieve total number of results as objects to facilitate the retrieval and retrieval of document results
[ threadcpu ] remove threadcpurefresher from threadcpusamplersupport
added null check for primitivesTemp before initializing the primitives array to avoid potential NullPointerExceptions when accessing primitives
added new versions " 8.2 . 0 - cfs " and " 8.2 . 0 - nocfs " to the TestBackwardsCompatibility
updated feature flags from DISABLED to TEAMFOOD in FeatureFlags . java and modified AppIcon . java to use textContains method to
added a new endpoint ` getInstancePools ( ) ` to the ` InstanceResource ` class to provide access to the instance pool for the current instance
refactor TopFieldCollector and TestTopFieldCollectorEarlyTerminateOnPrefix methods to improve code readability and maintainability by reducing duplication
updated method parameters in InlineBytecodeGenerator and InlineByteBuddyMockMakerTest to use isToString ( ) instead of isAbstract ( ) to
added logging statements to CxxCompileStep , CxxPreprocessStep , and CxxPreprocessStep classes to improve error handling and debugging capabilities
fix stringutil . removecharacter ( string , char ) to remove non - null character from string
updated parameter names to use constants for consistency across multiple classes to improve code readability and maintainability by using consistent naming conventions
( chore ) camel - runtime : add datatransformer interface
changed the type of ` objval ` from ` Object [ ] ` to ` Number [ ] [ ] ` in ` DistributionGraph . java `
simplified the conditional statement in FormatStringChecker . java to improve code readability and maintainability
updated the initialization of SolrCore from null to null in ElectionContext . java to ensure proper initialization of the SolrCore instance
refactor ITestDbTxnManager class implementation to improve code readability and maintainability
refactor connection handling in DatabasePlatformFactory to use try - with - resources for better resource management to ensure proper resource management and prevent potential resource leak
added a new method ` remoteCodeFirstPojo _ testMapModel ` to ` CodeFirstPojoClient ` and modified ` CodeFirstPojo ` to
pdfbox - 2571 : remove unnecessary null check in resourcevalidationprocess
refactor selection listener handling in ScaleDialog . java to improve code readability and maintainability by reducing duplication
rename ` updatePlayerStepStatus ` to ` tickBelt ` for consistency and clarity to improve code readability and maintainability by using a more
do n ' t throw ioexception if there be no rectangle
replaced SortedSet with LinkedHashSet in ExecuteSqlCommandStep . java to improve performance by using LinkedHashSet instead of TreeSet
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java and
updated the preload configuration from " libusb - 22 " to " libusb - 25 " in dc1394 . java to include the
added a conditional check for agentSupport before setting all constructors to public in MainMockTransformer . java and created corresponding tests in MockStaticWithPrivate
pdfbox - 4071 : fix typo in securityhandler . decryptstring ( )
added a method to set the window title for the application class in MainFrame . java to improve clarity and maintainability of the application ' s title
updated depth assignment logic in XRSurfaceData . java to conditionally set transparency based on pixel size to ensure correct depth calculation based on pixel size
added errorResponseBody variable and updated InvalidResponseCodeException to include it to improve error handling by providing clearer error messages for unsuccessful responses
added a static method ` exit ` to ` TopLogging ` and removed the ` TopSecurityManager . exit ` call in ` TopLogging . java `
modified the initialization of the start variable in NativeRegExp . java to ensure that the regexp is only set when the regexp is not global to prevent potential
[ optaplanner - 468 ] ignore test that be fail when upgrade to optaplanner 6 . 3
corrected a typo in the variable name from ' lowAllocation ' to ' highAllocations ' to improve code readability and maintainability
added a method ` cleanEntriesWithoutFeeds ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` to handle entries without feeds to improve
changed the return type of appendToLabel method from void to AtomicCounter to allow the method to return the current instance instead of void
[ hotfix ] [ runtime ] add idle strategy to low latency media driver
added status check for NOT _ MODIFIED responses in CacheControlHeadersWriter and corresponding tests in CacheControlServerHttpHeadersWriter to ensure proper handling of
rename ` constantValueInertSpliceInstrumentListener ` and ` constantValueInertToolEvalNode ` to ` ToolEvalNodeFactory `
added a method to paint the tab area in SynthTabbedPaneUI to ensure the tab area paints correctly based on the selected index
updated the ` getKrakenDepth ` method to accept an additional ` Object ` argument instead of a single ` Long ` to improve flexibility in
added ` getFileSeparator ( ) ` methods to ` FileEndpoint ` , ` GenericFile ` , and ` FileEndpoint ` classes to enhance file normalization
added JsonIdentityInfo and ObjectIdGenerators annotations to JavaProvenance and updated MavenProjectParser to utilize this new method to enhance class
added trace logging for registered Hive UDFs in HiveFunctionRegistry . java and created corresponding tests in TestInbuiltHiveUDFs .
increase loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test accuracy by allowing more iterations for state updates
[ hotfix ] [ table - common ] catch unknowncfnameexception instead of unserializablecfnameexception
added a check for non - writable output files before executing the checkResult method to improve error handling by providing clearer feedback when the output file is
added imports for PackageInfo and NameNotFoundException in LauncherModel . java to ensure that the getPackInfo method returns null if applicationInfo
cloudstack - 12626 : do n ' t throw cloudexception when upgrade the database
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test for skipping non - skippable exceptions to
replace ` startsWith ` with ` regionMatches ` and ` isSet ` in ` LineReaderImpl . java ` to improve code readability and maintainability by
added imports for SourcesFileResults and SourcesFileErrors , and modified return statement in Recipe . java to enhance error handling and improve
added import for Overview and invoked dismissAllTasks ( ) in TaplTestsTaskbar . java to ensure that all tasks are dismissed when the
add databaseupgradechecker . updatesystemvmtemplates ( ) method to update system vm template
changed the visibility of the ` conn ` variable from non - final to final in ` LdapClient . java ` to ensure immutability of the
refactor index handling in SequenceAction . java to use a variable variable for better readability to improve code readability and maintainability
[ flink - 18105 ] [ table - planner - thrift ] implement set _ keyspace method in cassandraserver
added a check to skip processing if the field is synthetic to ensure that only synthetic fields are processed
added SLF4J logging functionality to the Configuration class and integrated it into ApplicationController to enhance logging capabilities and improve logging capabilities in the application
replaced ` ImmutableMap . Builder ` with ` ImmutableMap . Builder < String , Object > ` in ` ServerStatusCommand . java ` to improve type safety
added a ` deprecationWarningIssued ` flag to the ` SpringFactory ` class and updated test cases in ` SpringFactoryTest ` to ensure that
added a deepStart method to the Startables class to enhance the functionality of the deepStart method
added a deprecated method ` reservePrimitiveExtensionArray ( ) ` in ` Shape ` and removed the ` reservePrimitiveExtensionArray ( ) ` method from
fix the laser table not work in the correct place .
modified the condition for checking objectName in AbstractJdbcDatabase . java to improve code readability and maintainability
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
set expire messages period to 0 in MemoryLimitTest . java to ensure proper handling of expire messages period in the test
updated conditional checks in RequestHandlers . java to use length ( ) instead of null checks to improve code readability and maintainability by reducing redundancy
updated the way the logger name is retrieved by replacing ' - ' with ' . ' to ensure consistent logging behavior across different servlet configurations
updated import statements and modified Python environment handling in ProjectBuildFileParser . java to improve code readability and maintainability by reducing duplication
refactor Audio data handling in DirectAudioDevice and Toolkit classes to improve error handling and ensure that audio data is too big to enhance robustness by
added null check for enums before returning it to avoid potential NullPointerExceptions when enums is null
updated the error message format in CommitLogReader . java to include an extra space to improve clarity of error messages for better debugging
added a policy assignment for the container scope in WebSocketSession . java to ensure the session ' s policy is correctly set based on the container scope
removed conditional check for static fields of current type in Java2TypeScriptTranslator . java to simplify the code and improve readability
updated the webroot argument from " UI _ DIR " to " webroot " in UserService . java to ensure the correct web root is
[ hotfix ] [ test ] migrate test to junit 5
make profiler . isattachable ( ) return false instead of throw an exception
replaced calls to ` printHeaderObject ` with ` createHeader ` in multiple formatter classes to improve code readability and maintainability by centralizing the
replaced specific trade DTO imports with a wildcard import and added a method for placing stop orders to simplify import statements and improve code readability
added multiple calls to the buffer . reset ( ) method in ReduceRecordProcessor . java to ensure proper handling of buffer state during processing
added null checks before setting foreground and background settings in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground and mOriginalBackground
updated condition checks in FloatingDecimal . java and added a new ToString class for string representation to improve code readability and introduce a new ToString class
updated property type check in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper validation of property type
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to simplify version retrieval logic and improve code clarity
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 , http : /
refactor visibility and animation logic in RecentsView and TaskView classes to improve responsiveness and responsiveness of overlay overlays to enhance
updated assertion messages to include additional fields in ORCRecordReader . java to enhance readability and maintainability of the code
update demoutil sample to use the latest version of hl and hl
updated import statements and class names in PersistenceProvider . java for consistency to improve code readability and maintainability by reducing redundancy
updated log file references from HBaseRPC to RPCEngine in ExecRPCInvoker , WritableRpcEngine , and WritableRpcEngine to ensure compatibility with the
added DiagnosticListener for handling multiple fields in TestSpecificCompiler to improve diagnostic logging and debugging capabilities
modified the websocket session creation logic in WebSocketEndpoint . java and added a new test case in WebSocketIT . java to ensure proper handling of session closure
updated delayInSec and delayInSec values from 1 + to 5 in multiple service classes to improve performance by reducing the number of iterations for state
updated mappings for OpenSymphony Group in XmlConfigurationProvider . java to use Apache Struts instead of OpenSymphony Group to ensure
added conditional stop handling for video tracks in WebCamInputPanel . java to ensure that the stream is stopped only when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new enum ` BittrexChartDataPeriodType
update gml example to use jts . jts instead of eclipse . xml
updated the method call from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58 . java ` to ensure
hhh - 10956 - add identifiergenerator to compositeidfkgeneratedvalue . getidentifier ( )
rename findfulltextaction to downloadfulltextaction instead of findfulltextaction
refactor URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl to improve URI registration logic to enhance code readability and maintainability by
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for non - blank OSDB hash before retrieving information from the API to enhance robustness by preventing potential NullPointerExceptions
added token transfer functionality to the RuntimeImpl and MUtil classes to enhance token transfer functionality for smart contracts
http : / / issues . apache . org / jira / browse / amq - 4071 - fix the issue of file deletion
updated the default configuration parameter from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to simplify
added a null and empty check for joinResult in MapJoinOperator . java and modified conditions in HybridHashTableContainer . java and Hybrid
added ` endPoint ` parameter to ` HTTPSPDYAsyncEndPoint ` and ` HTTPSPDYAsyncEndPoint ` constructors to enhance the
added " id " parameter to intent in multiple adapter and TweetFragment classes to ensure the intent holds the correct ID for the tweet
added proxy authorization handling and refactored disconnection logic in HttpURLConnection . java to improve proxy authentication handling and ensure proper response code management
replaced int _ numChildren with AtomicInteger _ numChildren and updated the NUM _ CHILDREN _ PER _ REQUEST constant to improve thread safety
fix a typo in the code comment .
disable the test for NullPointerException in ValueTypeTests . java to ensure proper handling of NullPointerExceptions during test execution
[ kie - api ] rename resourcefactoryserviceimpl to resourcefactoryserviceimpl
replaced references to ` getAsByte ` with ` NOT _ IN ` across multiple predicate classes to ensure consistency in predicate usage across predicate classes
replaced ` AccountUtils . AccountNotFoundException ` with ` Exception ` and refactored account creation logic in multiple activity classes to improve error handling and
added null check for witnessService before validation to avoid potential NullPointerException when witnessService is null
updated the method for retrieving the tagged column from ` colExprMap . get ( col ) ` to ` getExprString ( ) ` to ensure
added a check for the presence of the Javadoc presence before setting the item to ensure that the item is only set when the Javadoc is present
renamed ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and added new interfaces in ` RedefineInterfaceCall
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) in Tabs . java to improve code readability and maintainability by using a
[ hotfix ] [ table - common ] replace unsupportedoperationexception with unregisteredmetricsgroup
replaced ` x ` and ` y ` with ` oldX ` and ` oldX ` in ` Polygon . java ` to ensure correct calculation of
updated the cache creation method to accept a Configuration type instead of a null value to improve type safety and avoid potential ClassCastExceptions
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a
refactor ShadowCookieManager class implementation to improve code readability and maintainability
added a new configuration flag for external table deletion in HiveConf . java and updated test cases in TestStorageBasedMetastoreAuthorizationProviderWithACL .
added a condition to check if the application type is WebGL in Stage . java and adjusted the draw method in ProgressBar . java to ensure proper
llvm : cache byte order for native / native platform capability
updated the PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " testcontainers . windowsprovider .
updated the ` initWebViewLogin ` method to accept a base URL parameter and modified the ` initWebViewLogin ` method to accept a ` baseURL
corrected a typo in the error message in CallableStatementHandler . java to improve clarity and consistency in error reporting
updated the date format in ` AuditEventsMvcEndpoint ` and added a test for invalid request status in ` AuditEventsMvcEndpointTests ` to ensure
renamed ` ExponentialTimer ` and ` ExponentialTimer ` classes to ` PreciseThroughputTimer ` and ` PreciseThroughput
added functionality to remove and delete soft bodies in SoftBodyTest to ensure proper cleanup and deletion of soft bodies in the testing process
changed interface declarations from package - private to public for SinkFunctionProvider , SourceFunctionProvider , and InputFormatProvider to allow external access to the
camel - zeppelin - zeppelin - zeppelin - zeppelin - zeppelin - zeppelin - zeppelin
add test case to verify that jingle do n ' t have namespace .
fix nullpointerexception when load the craft energy .
added HTTP / 2 header handling to BareResponseImpl and updated HttpInitializer to extend HttpToHttp2ConnectionHandler to improve HTTP / 2 handling
corrected the spelling of " EVERYONE " to " EVERYONE " in the if statement to improve code readability and
updated delimiter length in SimpleReport . java from ' + ' to ' count ' and ' count ' to ' count ' and ' count ' to
removed the option ` ignoreSymbolFile ` from ` JavapTask ` and added a new class ` T6863746 ` in ` Java
renamed ` TickerDemo ` to ` StreamingTickerDemo ` in ` TickerDemo . java ` and removed the ` TickerDemo .
refactor contract type handling in Runtime . java to improve error handling and provide clearer feedback on contract creation errors
apps3d : do n ' t create input3d if the feature be not intel _ raysense
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
removed ParserException from the parsePayload method to simplify the method signature and improve error handling
added ` getRepositoryFactoryBeanClassName ( ) ` method to ` getRepositoryFactoryBeanClassName ( ) ` method to enhance clarity and maintainability of the method
changed return types of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to improve type safety and
removed unnecessary ' this ' assignment in IOSGLES20 . java to streamline code and improve readability
deleted UploadPathActivity and removed UploadPathActivity to streamline the codebase by eliminating unused components
updated return statements in SimpleTextFieldsReader to use indexOptions instead of totalTermFreq to improve clarity and maintainability of the code
fix : add implicit constructor for dtclass . isimplicit ( )
modified the ` populateValidateNullableIfNeeded ` and ` populateValidateForeignKeyIfNeeded ` methods to include a ` Database ` parameter to ensure compatibility with Oracle database
refactor Database class to improve code organization to enhance maintainability and readability of the code
refactor SpringApplicationBuilder class implementation to improve code readability and maintainability
removed the indexOptions variable from DefaultIndexingChain and updated iterator assignment in PointInSetQuery to streamline the code and improve readability by
updated the map method in SchematicHandler . java to use substring ( 0 , 10 ) instead of substring ( 0 , 10 ) to improve code
added handling for " java . util . collections $ EmptyList " , " java . util . Collections $ EmptyNavigableSet " , and
changed the visibility of the Option enum from static to package - private to improve encapsulation and maintainability of the code
added twitlonger functionality to the Compose and ComposeActivity classes to enhance user experience by providing a clearer dialog when the character is
replaced the ` toggleKeepInSync ` method with a ` toggleKeepInSync ` method in ` FileDetailFragment . java ` to streamline
replaced ` DatatypeConverter . parseBase64Binary ` with ` getEmbeddedBase64MimeDecoder . decode ` in ` ImageUtil . java `
added new classes ` ControllerCounter ` , ` ControllerCallback ` , and ` DBCallback ` , and implemented ` DBCallback ` and ` DBCallback
changed the parameter type of the deleteTicket method from ` ticketId ` to ` final ` to enforce immutability of the ` deleteTicket `
added a new file ` FlywayMigrationRunner . java ` that includes ` ClassPathXmlApplicationContext ` to facilitate the migration of the database
replaced calls to ` isEmpty ( ) ` with ` size ` in ` HashMap . java ` and added a new class ` OverrideIsEmpty . java
updated the version number from " 0.9 . 0 " to " 0.9 . 0 " in TsFileDBConstant . java to reflect the latest release
updated the ` modify ` method to accept ` @ Nullable ` annotations and added a warning log for missing ORC compression modifiers in ` ZlibCodec
added null check for main value in LauncherHelper and improved test cases in Arrrghs to ensure proper handling of null main attributes and ensure
renamed ` BasicErrorControllerIntegrationTest ` and ` AnsiOutputTest ` to ` BasicErrorControllerIntegrationTest ` and ` AnsiOutputTest ` to
add hotspotprofilinginfo for methoddata : : _ graal _ node _ count and _ graal _ node _ size
refactor cellcopypolicy to use cellcopypolicy instead of cloneable
added a method to reset the icon load result in FloatingIconView to ensure proper handling of icon load results in the launcher
update formFieldValuesToCaps method from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCaps
added orientation check for landscape and landscape orientation in IconRecentsView . java to ensure correct positioning of item decorations based on configuration settings
deleted the AddAdapter . java file to remove unused adapter classes to streamline the codebase
refactor non - static lifter to check for empty constructorCodeList before processing to improve code readability and maintainability by reducing duplication
added a new parameter ` processSortCols ` to the ` parentColNames ` parameter in ` OpTraitsRulesProcFactory . java ` to
refactor testLogWatcher to use a separate looper method to improve code readability and maintainability by reducing duplication
added a print statement for " < any > " in Java2TypeScriptTranslator . java to enhance the functionality of the Java2TypeScriptTranslator
updated SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
added a conditional check for the SPRING _ AOP _ PROXY _ TARGET _ CLASS property before adding it to the map to ensure
removed the singletonLock flag from TypeCachingBytecodeGenerator . java to simplify the code and improve readability
test : add test case for mockserver test
http : / / issues . apache . org / jira / browse / amq - 4253 - add a method to append a output directory
updated MavenExecutionContextView and MavenRepositoryMirror classes to improve the handling of Maven repository mirrors to ensure that mirrors are only returned when the settings
added a ` name ` parameter to the ` BuildRuleSourcePath ` and updated constructors to accept a ` String ` parameter to enhance the flexibility
updated the comparison logic in OAuth20CallbackAuthorizeEndpointController to use ` matches ` instead of ` equals ` to ensure that the same redirect URI is
replaced instances of ` EMPTY _ ANNOTATIONS _ ARRAY ` with ` AnnotationParser . toArray ` across multiple files to improve code readability and
updated the return type of the getBadgedIconForUser and getBadgedLabelForUser methods in UserManagerCompatVL . java to
updated the default line separator value from " OS default " to " LF or CRLF or CRLF " in GlobalConfiguration . java to ensure
updated the condition to check for derived classes in ConfigurationManager and added assertions in CMUTests for path accuracy tracking to ensure compatibility with derived classes and
add a sanitize input to the model , so that it do n ' t throw an exception
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw IOException and added a new test method to ensure proper handling of file names
refactor CountersReader class for improved readability to enhance maintainability and readability of the code
refactor methods in AllAppsRecyclerView , UserEventDispatcher , and DeepShortcutsContainer to use a new logOpen method to improve code read
deprecate config keys in bytebufferfallocator and add deprecation warn for future release
[ flink - 18135 ] [ test ] fix nativeworker ' s nativequeryrunnerutils # createlineitem
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types based on real and non - generic information to improve generic parameter handling
refactor TestFSTs class implementation to improve code readability and maintainability
refactor : add labellabel and labeltextheight ( ) method to handle string label .
hbase - 16416 addendum fix ( hbase - increasing - policy ) ( hbase - increasing - policy . initial . size )
updated the model handling in LauncherClings . java to reset the loaded state and start the loader to improve user experience by ensuring proper loading
removed redundant initialization of keys , updates , and updatesAt in ManagedSelector . java to streamline code and improve readability by eliminating unnecessary variables
added a ` excludedDatasources ` set to the ` SpringDataSourceBeanPostProcessor ` class to allow users to exclude specific datasources
added storeUndoInfo ( ) method call in TableValuesView . java and removed null check in TableValuesPanel . java to ensure undo information is
refactor KinesisProxy to use ClientConfiguration instead of private methods to improve encapsulation and maintainability of the code
[ velbus ] fix channel masking in velbussensorhandler
disable unfavorable benchmarks in LocalCacheSelectorCode and BoundedLocalCache classes to disable benchmarking due to unfavorable benchmark
added a test for illegal database names in IoTDBSessionSimpleIT and implemented validation in PartialPath to ensure that illegal database names are correctly
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are reset before processing
renamed ` desiredWorkspaceLeftRightOriginalPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and updated related logic in ` DeviceProfile .
reformatted code for improved readability and consistency in CharTokenizer . java to enhance code readability and maintainability
update gapic - generator - java version to 2.1 . 0 and update gax - java to 2.10 . 0
updated the XENSERVER _ NETWORK _ LABEL constant from " xenservernetworklabel " to " xenservernetworklabel " to
updated libgdx and libgdx versions in DependencyBank . java to ensure compatibility with the latest features and features
removed the private set of metricNames in SolrCore . java to streamline the code and improve maintainability
replaced ` URI . create ` with ` Path . fromUrl ` in ` MavenManifestFactory . java ` to improve code readability and maintainability
replaced direct system property check with a static final boolean variable to improve code readability and maintainability by reducing redundancy
refactor JdbcAggregationRepository to improve code organization to enhance maintainability and readability of the code
added clear ( ) and addAll ( other . slotList ) methods to the slotList to ensure proper handling of slot lists in the frame
added a new variable ` m _ predCount ` to ` m _ predCount ` in ` PredicatedNodeTest . java ` to initialize the
added mergeProperties method to ConfigurationSpringInitializer to ensure proper handling of configuration properties in the application
updated the ` setupLogging ` method to use ` org . slf4j . Logger ` instead of ` rootLogger ` to ensure compatibility with the
replace HashMap with LinkedHashMap for aliasToWork across multiple classes to ensure consistent iteration order across the codebase
added a check to determine the superclass of the type handler map in TypeHandlerRegistry . java to ensure proper handling of class hierarchy in the registry
added debug logging for Hibernate and Jpa items in multiple writer classes to improve traceability and debugging capabilities in the application
updated the way the ` wellformed ` string is processed in ` LocaleUtils . java ` to improve code readability and maintainability by reducing
added a call to ` handlerContext . executeFromIO ` in ` VertxHttp2Handler . java ` and updated the ` startServer `
improve performance of xssfevaluationworkbook . gettable ( )
updated schema text detail type from VERBOSE to BASIC in BaseSchemaTextFormatter . java to ensure compatibility with the new schema text format
replaced instances of ` MongoFactoryBean ` with ` MongoClient ` in ` MongoNamespaceReplicaSetTests . java ` to improve clarity and consistency in
replaced ` HashSet ` with ` LinkedHashSet ` for roots , leaves , and leaves in ` SparkWork . java ` to ensure consistent iteration order for work
removed redundant initialization of tableScanOpsForJoin in SkewJoinOptimizer . java to streamline code by eliminating unnecessary assertions
added null check for clientId before retrieving the registered client in DynamicRegistrationClientConfigurationService and JsonFileRegisteredClientService to avoid potential NullPointerExceptions
clear achievementlist field _ 187981 _ e in statlist . field _ 187981 _ e . clear ( )
set default values for userName , productVersion , and connectionUrl in MutableDatabaseInfo , MutableJdbcDriverInfo , and MutableJdbcDriverInfo to ensure
updated method name from " link _ share _ only " to " link _ share _ view _ only " in QuickSharingPermissionsBottomSheetDialog .
added long buffer management functionality in ByteBuffersDataInput . java to improve performance by reducing memory usage during long operations
replaced ` st _ mtime ` with ` st _ mtime _ sec ` and ` st _ mtime _ nsec ` in ` UnixFileAttributes `
added a new file ` TestNoEagerReclaimOfHumongousRegions . java ` that implements a test for eager reclaiming of
added a conditional check for the search bar before updating the header scroll to ensure the search bar is only displayed when the search bar is disabled
updated the method call from ` env . router ( ) ` to ` env . routes ( ) ` in ` EnvRouterFeature . java ` to
added null check for cur and next in LineChartRenderer . java to avoid potential NullPointerExceptions when cur and next are null
added a new action to reload the page in the Eeze class to enhance user experience by allowing users to reload the page
changed log level from info to warn for non - existent entries in SQLManager . java to improve logging clarity by using a more descriptive
updated MIN _ SPRING _ VERSION from " 3.2 . 7 . RELEASE " to " 3.2 . 8 . RELEASE " to reflect the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type does not have a selected version
do n ' t use factoryregistry . lookupproviders ( ) when load extension point
added a finalize ( ) method to HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added stopStatementExecutor ( ) method to JdbcConnector and HiveViewImpl classes to ensure that statement executors are properly stopped to improve resource management and
updated XML features to use ` HashMap ` instead of ` Collections . EMPTY _ MAP ` for improved type safety to enhance code readability and maintainability
replaced JdbCommand . waitForPrompt with OutputAnalyzer in JdbStopThreadidTest . java to improve clarity and maintainability of the test code
added a method ` getType ( Uri uri ) ` to ` ShadowContentResolver ` and a corresponding test in ` ContentResolverTest ` to handle null values
changed the type of the future variable from ` runnable ` to ` entry ` in ` futures ` and ` timestamps ` to improve type safety and
updated the default HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the correct HTTP port is used
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable . java ` to improve code readability and maintainability
updated the DEFAULT _ BATCH _ SIZE constant to use available processors instead of a fixed value of 10 to ensure the default batch size reflects the available
[ hotfix ] [ runtime ] log error when resource manager connection fails
initialize classFile to null and add a fallback for CannotLoadClassException in LambdaRewriter . java to ensure proper initialization of the classFile variable
updated IllegalArgumentException message to include min . min and max parameters to improve clarity of error messages for min and max values
updated the ` onMessage ` method to include an ` owner ` parameter in multiple classes to improve clarity and consistency in message handling
added new ` Cursor ` interface and ` Row ` classes for database operations to facilitate database operations in the application
refactor AbstractIterableAssert , AbstractPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories to improve code organization and maintainability
add setbeanid ( bean , id ) method to ebeanserver . setbeanid ( bean , object id )
updated xml file template generation to use getAddToSiteDescriptorXsl ( ) instead of tools / xslt / add - to - site -
added a private list of RequestMatchers to manage request matchers to improve code readability and maintainability by reducing duplication
added hashCode ( ) and equals ( ) methods to ContactResource class to enhance object comparison and equality checks for ContactResource instances
removed unused imports from AbstractProcessor and AbstractAjpProcessor , AbstractAjpProcessor , and AbstractHttp11Processor classes to streamline
updated log messages to clarify that the saved Persistable can be saved to improve clarity and accuracy of error messages for better debugging
reset mockControl in TestJdbcDataSource and implement tearDown method in TestIndexSearcher to ensure proper resource cleanup and prevent potential memory leaks
updated import statements and assertions in SyntaxTests . java for consistency to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
[ tika - 117 ] remove unused parserdecorator . parse ( )
do n ' t use cpw . mods . fml class if there be more than 3 context .
removed unused parameters from multiple classes to simplify code and improve readability by eliminating unnecessary parameters
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApiMapping
added a new test method ` testJsxComment ` to ` JsLexerJsxTest ` , ` Parser ` , and ` Dumping
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality in the test
added environment checks and improved error handling in ` BuildEndToEndTest ` and ` CxxEndToEndTest ` to ensure proper error reporting
added imports for OperatingSystemMXBean and modified memory calculation logic in TestStringBufferAndBuilderGrowth . java to ensure proper handling of physical and
refactor MapToLocalDateConverter to use a deprecated conversionService variable to improve code readability and maintainability by reducing redundancy
added success flag to HiveMetaStoreClient to enable successful execution of the meta store operation
updated conditional checks in ResourceReferenceInfo . java and modified the bundle creation in Dstu2BundleFactoryTest . java to ensure proper handling of
added support for amp . twimg video in TimeLineCursorAdapter and TweetActivity to ensure compatibility with amp . twimg . com and improve
added a @ Deprecated annotation to AreaReference . java to mark AreaReference as deprecated to indicate that these methods are outdated and should no longer be used
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the code
added assertions and modified reference kind handling in MemberName . java to improve clarity and accuracy of reference kind change logic
changed the default value of ` __ submitKeyUpdates ` from " false " to " true " and added synchronization to the ` runChange ` method
corrected a typo in the conditional statement from " MouseEvent " to " else " in EditNodeTextField . java to improve code readability and
camel - 14284 : camel - bean : add test case to check if the bean name start with ` ` type : ' '
updated multiple Java files related to BenchmarkPublisher , BenchmarkSubscriber , ProtocolPublishDecodingServer , and PublishBomber to improve code organization and maintainability
reformatted exception handling in AgentRunnerTest . java to improve code readability and maintainability
added ` getDescription ( ) ` method implementations across multiple classes to provide clearer descriptions for Maven project properties
refactor the handling of active and active groups in ObjLoader . java to improve code readability and maintainability by reducing duplication
refactor ProcessEngine class to improve code readability to enhance maintainability and readability of the code
replaced ` reentrantLock ` with ` lock . lock ` in multiple JavassistProxyFactory and JBoss6VFS
[ maven - build ] add maven - build - maven - build - maven - build - maven - build - maven - build
updated back method call to use evt . getComponent ( ) instead of evt . get getComponent ( ) to improve code readability and maintainability by using
refactor certificate verification logic in SASLAuthentication . java to improve code readability and maintainability
corrected the spelling of " actual " to " extends " in multiple classes to improve code readability and maintainability
replaced ` NutchConf . get ( ) ` with ` getConf ( ) ` in ` Fetcher . java ` , ` Generator . java
removed the board pane in SheetAssembly and added a check in StubsController to ensure that the board is deselected before proceeding
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` variable
added null checks before setting time interval in ImportContainerImpl . java and updated test assertions in ImporterGEXF2Test . java to ensure
updated log level command from " logLevel INFO - serverPort " to " - serverPort " in MockServerContainer . java to ensure consistency in logging
updated error logging to include the original exception message to improve clarity of error messages for better debugging
use crawlmetadata instead of robotshonoringpolicy
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
[ hotfix ] [ test ] fix test failure on window
added imports for ByteArrayInputStream and InputStream , and implemented alternativePath method in ExpectNewDemo . java to provide a way to read the alternative path
updated the initialization method in LogEntryParseTester from ` input . init ( ) ` to ` getFirstFilter ( ) . init ( ) ` to
[ java ] add protectiondomain parameter to bufferalignmentagent
added dispose method to waterroipples to ensure proper resource management and prevent memory leak
added a new configuration variable ` HIVE _ DISABLE _ UNSAFE _ EXTERNALTABLE _ OPERATIONS ` and modified ` DynamicPartitionPrun
updated the authorization description in TokenKeyEndpointDocs . java to clarify that authorization is required for requesting public keys to improve clarity and accuracy of authorization
updated wallpaper offset calculation from - 30 to 0 in Launcher . java and adjusted scroll range in Workspace . java to ensure the wallpaper is
updated ` SybaseASADatabase ` and ` CreateSequenceGenerator ` to handle ` SybaseASADatabase ` and ` SybaseASA
updated autocommit mode description and added rollback logic in PutSQL . java and TestPutSQL . java to ensure proper rollback behavior based on success or
added directory creation and error handling for sub - directory creation in SnapPuller . java and corresponding tests in TestReplicationHandler . java to ensure
updated AppTarget ID from " id : launcher " to " launcher : launcher : launcher " to improve clarity and consistency in app target IDs
[ java ] use output buffer instead of bytebuffer in framer . frame ( )
removed unnecessary parameter from constructor parameters across multiple classes to simplify the constructor signature and improve code readability
added extended message to the GenericUDFStringToMap class to clarify the purpose of the map parsing process
updated PlainFormatter to use temporal unit instead of a static final instant string to improve clarity and maintainability of time formatting logic
updated RETRY _ CLOSE _ TIMEOUT _ MS from 1000 to 3000 and refactored close method in AgentRunner . java to improve timeout
refactor ClassLoadingStrategyHelper to use messageLogger instead of reflection for privateLookup to improve code readability and maintainability by reducing duplication
refactor Mockito class for improved readability to enhance maintainability and readability of the code
updated debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to improve clarity of log messages for better debugging
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable tests that require at least one sample result
corrected the spelling of " Row " to " Rows " in the IllegalArgumentException message to improve clarity of error messages for better debugging
updated string concatenation and formatting in DecisionNode and WagonCART classes to improve code readability and maintainability
added sorting functionality for BoundSheetRecords in XLS2CSVmra , XLS2CSVmra , and BoundSheetRecord classes to enhance
renamed ` avgImpulse ` and ` endInstImpulse ` to ` startThrust ` in ` ThrustCurveMotor . java
use inputmanager instead of inputsystemjme in niftyjmedisplay
added a conditional check for the needHashCodeField before setting the hashCode field offset in UniverseBuilder . java to improve code readability and maintainability
remove deprecate block . getmesh ( )
renamed ` keytabPath ` to ` localKeytabPath ` and updated related logging statements in ` YarnTaskManagerRunner . java ` to
added a new option ` EMPTY _ WORD _ OPTIONS ` to ` Example ` and modified matcher logic in ` LineReaderImpl ` to enhance
added a condition to check if writeCommitLog is not present in pushViewReplicaUpdates to ensure that the pushViewReplicaUpdates is only called when
added functionality to display clipboard display content in CaptureActivity and modified default button ID handling in PreferencesActivity to improve user experience by ensuring consistent display of clipboard
added a new test method ` testBatching ` in ` JoinedTableTest . java ` to verify batching functionality to ensure proper handling of
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate entries in persist operations
removed deprecated ` -- format ` option and updated plugin usage in ` CucumberOptions ` , ` RuntimeOptionsFactory ` , and ` RuntimeOptions
removed the save ( ) method from PMS . java to simplify the code and improve readability
refactor back key event handling in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new class ` Capacity ` with a test method to
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve note saving
added endnotes mapping and related methods in XWPFDocument and updated footnote retrieval logic in XWPFParagraph to improve the handling of
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager . java and updated related tests in CasEventsReportEndpointTests .
added a test method ` testVersion ` to ` BridjOGRDataStoreTest ` to verify the version functionality of ` BridjO
added a new file Lifecycle . java to handle network error handling in the system UI to implement functionality for managing network errors in the application
http : / / issues . apache . org / jira / browse / amq - 4071 - do n ' t fail on 404
removed unnecessary imports from BodyTubeShapes and RocketFigure classes to streamline code and improve readability
added a new flag ` RETINA ` to the ` PJOGL ` class and modified texture buffer calculations in ` PJOGL
add a method to set the initial value of the settings component in the FlutterCreateParams class to ensure that the info label reflects the initial state
replaced PackedInts . FormatAndBits with PackedInts . BlockPackedWriter in DiskDocValuesConsumer . java to improve performance and
refactor ` DefaultStatusRoute ` to use ` originatingType ( ) ` instead of ` status ( ) ` in ` DefaultStatusRoute `
removed redundant code and streamlined data handling in GoAwayTest . java to improve code readability and maintainability by reducing redundancy
added support for FluentPropertyBeanIntrospector in ReflectionUtils and created a corresponding test in EasyRandomTest to ensure proper handling of FluentSetterBean
replaced ` ByteStreams ` with ` CharStreams ` in ` BlockingHttpEndpoint ` and introduced a new ` HttpResponse ` class to improve
refactor test to use ` prepareFolder ` method instead of ` noop = true ` in ` FileSortByExpressionTest ` to improve code read
updated print statement to include the ID of the lastAppearedTaskTarget in GestureState . java to ensure the correct task ID is displayed for
add support for write / write image scaling information for msword
updated the aggregate function name handling in TSServiceImpl . java to use a conditional statement based on the SQL constant to improve clarity and maintainability
updated TestExceptionInBeforeClassHooks and related classes to extend WithNestedTests instead of LuceneTestCase to improve test structure and ensure proper cleanup of nested
added xcapEnableBox and xcapServerUriValue handling in PresencePanel . java to ensure that xcapEnableBox is selected based on
add ` ` handle . exception ' ' option to ` ` struts . handle . exception ' '
added ` stopTextEditing ` methods to ` CodenameOneImplementation ` , ` TextArea ` , and ` OnFinish ` classes to manage text editing
[ java ] fix npe in controlrate when group attribute be null .
updated the ` showDialog ` method to include a ` isNewComponent ` parameter and modified the ` selectPreset ` method to include ` isNew
added error log to chatannotation . sendmessage ( )
added a check for MS Windows platform in HTMLDataFlavorTest . java to ensure that the test is only run on non - Windows platforms
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the SERIALIZABLE configuration in TransactionIsolationLevel . java to enhance
refactor newRecids handling in AsyncWriteEngine to use a loop for better readability to improve code readability and maintainability by reducing unnecessary
replaced JreCompat . getInstance ( ) . jarFileIsMultiRelease ( ) with a new JarFile ( File . OPEN _ READ ) method to
added null check for getCommandClass in RegisteredServiceSimpleFormController . java to avoid potential NullPointerExceptions during command creation
[ hotfix ] [ cassandra ] change default disk failure policy from best _ effort to ignore
removed public access modifiers from RipInterface methods in RipperInterface and RipStatusHandler classes to enhance encapsulation and improve encapsulation
added a condition to filter out addresses in PeerDiscoveryAgent to ensure that only valid addresses are processed when the address is in the specified address
removed the setter method ` setJobIdentifierFactory ` from ` SimpleCommandLineJobRunner ` to streamline the command line execution process
updated the ` computePartitionAssignment ` method to include ` ClusterDataCache ` in ` PinotSegmentRebalancer . java ` to enhance the
[ java ] remove container . delete ( ) and container . deletecontainer ( )
refactor DefaultSeleneseCommand to improve command parsing logic to enhance readability and maintainability of the code
added multipleAttemptsRule to CreateGlossaryTests to enable testing of multiple attempts in the test suite
updated Schema instantiation to use Components . COMPONENTS _ SCHEMAS _ REF instead of hardcoded names to improve code readability
replaced the ` deleted ` variable with ` source ` in ` EntityDeletedEvent . java ` and updated related tests in ` IdentityZoneEndpointsMockMvc
added support for the " gop " format in FormatConfiguration and updated related imports in DLNAMediaInfoParser and LibMediaInfoParser
added a new file TestProfileReturnTypePrinting . java that implements a method to test profile return type printing functionality to facilitate testing of return type printing
added locking mechanism for config refreshing in ParseConfigUtils . java to ensure thread safety during config refresh operations
added handling for acquired release columns segment operators in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent potential memory leaks
removed the @ Ignore annotation from FirefoxProfileTest . java to clean up the code and improve readability
added a @ return annotation to the HasAndroidDeviceDetails class and updated the getSystemBars method to return the density value to improve code clarity and
do n ' t add a bug to project stats if there be no bug
added support for disabled shadow and shadow in the ImportPanel class to enhance user experience by providing clearer disabled text based on the platform ID
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code by eliminating unnecessary overrides
added handling for empty dates in ScheduledAction and created a test for it in ScheduledActionTest to ensure accurate time representation of scheduled actions without the week
refactor button handling in ShareActivity to use a menu item for single uploads to improve code readability and maintainability by centralizing the button
refactor multiple message security classes to improve code organization to enhance maintainability and readability of the codebase
added loadMetaData method implementations in MeXBTExchange , RippleExchange , and MeXBTExchange classes to ensure proper loading of exchange metadata
added JSON serialization support for Writable objects in CrawlDbReader . java to enable proper serialization of Writable objects in the CrawlDbReader
removed unused imports from TestJaspicBasicAuthenticator . java to streamline the code and improve maintainability
added DiscoveryService configuration to MDNSDiscoveryService to enhance discovery configuration for the MDNS discovery process
added null check for messageItem before calling scrollToPositionWithOffset to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool instantiation to include ForkJoinWorkerThread in TestBPIndexReorderer . java to improve thread management and ensure randomness of the ForkJoinPool
removed duplicate assertions for DATANODE and NAMENODE in RoleCommandOrderTest . java to streamline the test by eliminating unnecessary dependencies
added methods to restore local information from a table in PartInfo . java to ensure that the table information is restored to prevent potential null pointer exceptions
removed unnecessary whitespace in multiple Java files to improve code readability and maintain consistency
added transformations to the BitmapFontTest class to enhance the visual appearance and visual consistency in the font rendering process
updated the condition for checking Python aggregates in StreamPhysicalPythonGroupWindowAggregateRule . java to ensure that only valid Python aggregates are processed
removed the ` hasPendingEcho ` flag from ` EndpointState ` , ` Gossiper ` , and ` Server ` classes to streamline the
added a method ` getUnreachableTokenOwners ( ) ` in ` Gossiper ` and updated references in ` StorageProxy ` to
fix coordmultiplication not change to multiplication
updated contentType handling in FormAuthenticator and added getter and setter methods in SavedRequest to improve content type management and ensure proper handling of null content type
added null checks for the display variable in XToolkit . java to ensure proper initialization of the display variable and prevent potential NullPointerExceptions
refactor RecommenderJob , RecommenderJob , and AbstractJob classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock ` in ` EnvironmentImpl . java ` to improve thread safety and maintainability of the code
added unit tests for the ` readIdentityProvider ` method in ` IdentityProviderEndpointsMockMvcTests ` to verify the functionality of the identity provider in different
[ hotfix ] [ runtime ] fix pointintimetrigger . settimestamp ( ) to null
removed unused import of Service in SendTicketGrantingTicketActionTests . java to streamline code by eliminating unnecessary dependencies
send heartbeat update to all broker with lock in rebalance push
added ` getDetachedMkDirMode ` method to multiple configuration classes and updated related classes to utilize it to enhance configuration flexibility by allowing
added a test to ensure that the follower is restarted after a timeout to ensure that the follower is properly resumed after the message processing
updated default label pattern from " authors3 " to " auth " in JabRefPreferences . java to reflect the correct year in the application
refactor DBinaryDescription and DLibraryDescription to use CxxPlatforms instead of CxxPlatforms to improve code clarity and maintainability by
refactor service initialization logic in GoogleCloudAPI and GoogleTTSService classes to improve code readability and maintainability by reducing duplication
[ java ] do n ' t delete dynamic done filename if it ' s already complete .
added a new boolean variable ` reopenReaders ` and modified the condition to check if the mainIndex / reopenReaders is true in ` Solr
added a new constant ` DIALECT _ VERSION ` in ` FreeplaneVersion . java ` and updated the ` MapWriter . java ` to
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality for
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest `
refactor Condition class to implement a lambda expression instead of an abstract class to improve code readability and maintainability by reducing redundancy
replaced Term with ConstantScoreQuery in TestFacetsCollector . java to utilize constant score queries instead of term queries
removed multiple redundant test cases from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
updated the ` providesUploadController ` method to accept a ` providesDirectNearbyUploadPreferences ` method to enhance functionality by providing direct nearby upload preferences
added support for SYSDUMMY1 and SYSDUMMY1 mode in the database parsing logic to ensure proper handling of DB2
updated logging statements in TraceGatewayEnvironmentPostProcessor , SamplerAutoConfiguration , SamplerAutoConfiguration , SamplerAutoConfiguration , and SamplerAuto
added last pid handling in POIXMLProperties and updated related tests in TestPOIXMLProperties to ensure correct retrieval of the last POIXML
fix geotiffreader to handle non - negative infinity
hive - 16464 : fix resource leak in clidriver
replaced ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and updated ` httpScheduler ` to use ` Schedulers ` instead of `
added a default method ` selectByRuleIdSet ` to the ` RuleConditionMapper ` class and modified the ` selectByRuleIdSet `
added a ` addExitDescription ` method to ` ExitStatus ` and refactored exception handling in ` AbstractJob ` , ` AbstractStep `
update MultiblockRenderHandler to check if the entity player is the player to ensure proper handling of multiblock events based on the player ' s entity
renamed ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity and consistency in naming conventions
removed unnecessary import of Collections and adjusted range length calculation in PlotConfiguration . java to simplify code and improve readability by eliminating unnecessary imports
refactor DefaultIOSInput to use UIAlertController instead of UIAlertViewDelegate to improve clarity and maintainability of the code by utilizing
replaced ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java `
corrected the spelling of " arrayValue " to " values " in the ` ofArray ` method to improve code readability and maintainability
removed assertion for item message in AdvServiceTest to ensure that the item is not null before proceeding
refactor key handling in MappingMongoConverter to use ` potentiallyEscapeMapKey ` instead of ` key ` to improve code readability and maintainability
updated log message formatting in NearbyMapFragment . java to improve readability and maintainability of the code
camel - 14284 : camel - spring - boot should use javatype instead of javatype
added null check for terms in FuzzyLikeThisQuery and updated related tests in FuzzyLikeThisQueryTest to ensure that non - existing fields
modified the ` writeApplicationsLinks ` method to accept a ` tabularList ` parameter and modified the ` writeApplicationsLinks ` method to
dspace : remove dependency on dspace from createmissingidentifiers
replaced ` bytes . length ` with ` bw . getLength ( ) ` in ` assignBytes ` method calls to improve code readability and maintainability
changed the return type of the getDisplayScript method from abstract to non - abstract to provide a default implementation of the getDisplayScript method
updated sequence initialization in RemoteWebDriver . java and modified test annotations in BasicKeyboardInterfaceTest . java to improve code readability and maintainability by
pdfbox - 4071 : initialize cosobjects list with the size of the list instead of the size of the list
added synchronization to wait for active interfaces in NetworkConfigurationWatcher . java and modified network connection handling in NetworkManagerListenerImpl . java to ensure thread safety
refactor HSSFWorkbook to use a dedicated method for retrieving embedded objects to improve code readability and maintainability by encapsulating the
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve readability
replaced instances of ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve code readability and
pdfbox - 4071 : fix issue with open font with ` ` symbol ' ' font
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure proper rendering of
added a new field ` mCurrentGuideStart ` and updated related methods in ` LiveTvGuideActivity ` and ` ProgramListAdapter ` to
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added unit tests in ` MainMockTransformer . java
added dlopen method calls for libfreetype , libfontmanager , and libfontmanager in JREUtils . java to ensure proper handling of
refactor function expression handling by introducing a new method ` inverseOrPower ` to improve code readability and maintainability by encapsulating the
fix loopsafepointeliminationphase . isprotectednonoverflowingunsigned ( ) and loopex . isprotectednonoverflowingunsigned (
refactor isInstance method handling in TypeFrameModelingVisitor . java to improve code readability and maintainability by reducing duplication
added a new ` LocalizedString ` class and updated ` Attr ` and ` T67 ` classes to utilize it to improve the handling of
added a new boolean field ` disableClasspathSearch ` and its getter / setter in ` ServerConfig ` and updated the conditional check in ` DefaultContainer
changed variable declarations from non - final to final in DataLine . java to improve immutability and ensure immutability of the formats array
updated retries ( ) default value from 0 to 2 in Reference . java and changed retries ( ) from 0 to 1 in Reference . java to ensure
added support for JSON serialization and deserialization of settings in TexturePacker . java to enhance functionality by allowing dynamic configuration of the settings
refactor image upload handling in AchievementsFragment to use AppCompatTextView and AppCompatTextView for improved readability to enhance code maintainability and
[ hotfix ] [ runtime ] add test for javacphasetracertest
added a new ` CategoryInfo ` class and modified ` MwQueryPage ` to include ` prop = categoryinfo ` to enhance functionality by allowing
updated assertion messages in AuthzAuthenticationRequest . java for consistency to improve code readability and maintainability
added AccessibilityManager to manage taskbar auto - hide timeouts in TaskbarStashController . java to improve user experience by allowing custom timeout
added a check for ' ^ ' in the signature syntax in GenericSignatureParser . java to ensure that NoSuchElementException is thrown when the signature has already
updated access flag handling in ClassVisitorDriverFromElement and added new test cases in StubJarTest to ensure proper handling of generic interfaces and enums
replaced direct assignment of ' in ' with ` Objects . requireNonNull ( in ) ` in ` IntervalFilter . java ` and added null checks in
added unit tests for the ` MapInterfaceTest ` class in ` MapInterfaceTest . java ` to ensure that the ` MapInterfaceTest . java
added a serialVersionUID field to the TreeMap class to ensure proper serialization and deserialization of the TreeMap class
updated the timestamp from epoch microsecond to epochSecond in the ImageData . java file to ensure the correct timestamp is used for image creation
updated SINGULAR _ LIB _ GROBCOVCx to SINGULAR _ LIB _ GROBCOV
added encryption for private and PUBLIC _ KEY encryption in AccountRemovalJob . java to enhance security by ensuring private and public keys are deleted during account removal
replace ` keep - alive ` with ` asynchttpproviderutils . keepAliveHeaderValue ( config ) ` in ` JDKAsyncHttpProvider ` and
fix postjoinmapoperation when map have no interceptor and lite member join
mondrian : do n ' t need to add new dialect to the processor list
removed the ` spillEnabled ` parameter from ` BaseHybridHashTable ` and updated its usage in ` LongHybridHashTable ` to simplify the code
refactor EnvironmentVariableHelper to use a separate method for retrieving environment variables to improve code readability and maintainability by reducing duplication
updated import statements in DefaultActionMapper . java for consistency and clarity to improve code readability and maintainability
added SerializableMode import and imported SerializableMode in Mockito . java and PluginSwitch . java to ensure compatibility with SerializableMode in Mockito . java
added a method to instrument annotation metadata based on the presence of a nullable field in AbstractBeanDefinition . java to improve error handling for non - nullable fields
added isolation level handling and improved SQL query execution in TestCompatibility . java to enhance compatibility with different database modes
added constants for HIVE _ SERVER2 _ TRANSPORT _ MODE and HIVE _ SERVER2 _ THRIFT _ HTTP
added a method ` isCacheable ` to the ` GlobalOrdinalsWithScoreQuery ` class to determine if the query is cacheable to ensure
added a new file TestStrangeControl . java that tests StrangeControl functionality to facilitate testing of StrangeControl functionality in the compiler
updated the file path format from " json " to " jsfile " in JsFile . java and JsLibrary . java to ensure consistent
added selectionStart , selectionEnd , and getSelectionStart methods to ShadowEditText . java to enhance the functionality of the ShadowEditText class
fix potential memory leak in gRPC enrichment . startgrpcserver
added a ` path ` parameter to the ` use ` method in ` Jooby ` and updated the ` use ` method in ` Router `
added null check for fst in FreeTextSuggester . java to ensure robustness by throwing an IllegalStateException when Lookup is not supported
updated output formatting in T4975569 . java and updated verification methods in T6729471 . java to ensure proper handling of newline
added abi writer class loading logic in JavacInMemoryStep . java to improve handling of ABI writer classes in the application
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethod
update pullmessageservice to only schedule if the service be stop .
refactor EnergyEndpointer class to improve code organization to enhance maintainability and readability of the code
refactor preset handling in ComponentPresetChooserDialog to use a list instead of an array to improve code readability and maintainability by reducing duplication
removed unused imports from BazaarRepository , CVSRepository , CVSRepository , and IndexDatabase classes to streamline code and
fixed switch / cases indentation in GoogleSheetsEndpoint . java to improve code readability and maintainability
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated related references in ` CxxLibrary
deleted the files Constants . java and DistanceUtils . java to the file is no longer needed in the project
refactor key splitting logic in RandomPartitioner . java to use substring method to improve code readability and maintainability by reducing redundancy
do n ' t initialize abi for jdk . internal . foreign . jdk . internal . foreign . abi . fallback . linker .
add test for rolebinding . createinline ( ) and remove create ( ) method
added debug logging statements to UaaSessionCookieConfig . java to improve traceability and traceability of session cookie configurations
updated the calculation of the file name from LOG _ DAYS to cal . get ( Calendar . DAY _ OF _ YEAR ) to ensure accurate
updated condition in ObservableBlockingSubscribe . java to include a check for the variable ' s value to improve code readability and maintainability
added error handling for invalid options in JavapTask . java and created a new class T8033711 . java to improve robustness by
replaced ` collect ( Collectors . toList ( ) ) ` with ` . toList ( ) ` in multiple classes to improve code readability and
changed log level from error to warn for exception handling in TaskDriver . java to improve logging clarity and ensure proper error handling for shutdown scenarios
[ hotfix ] [ network ] add tiered storage option to inputgatespecutils
( chore ) camel - mail : use isnotsuccessstatus instead of ! ! success _ code
added ` useGL20 ` setting to ` Cuboc . java ` and modified ` Cubocy ` initialization in ` CubocDesktop
remove unnecessary check for return type in jimplebody . getlast ( ) .
refactor OutputMacroExpander to use Arg instead of DefaultSourcePathResolver to improve code readability and maintainability by reducing duplication
rename assertNoJobsLeftEventually to assertNoLightJobsLeftEventually in SimpleTestSqlTest and SimpleTestInClusterSupport to
added a condition to check if the file path contains " / build / " in the MergeWordsListTask . java file to ensure that the file
updated the return type of ` getResponseComments ` method from ` FeedbackResponseAttributes ` to ` FeedbackResponseCommentAttributes ` and refactored
removed unnecessary whitespace in the conditional statement to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java that implements a test for escaping objects to demonstrate the behavior of escaped objects in the codebase
replaced ` stream . skip ( ) ` with ` IOUtils . skip ( bytes , 0 , length ) ` in ` FilePreviewService . java `
updated the ` init ` method to accept a ` PoolProperties ` parameter and improved error handling in ` ConnectionPool ` , ` DataSourceProxy ` ,
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a broader range of exceptions
added eviction status checks and corresponding unit tests in LruBlockCache . java and LruBlockCache . java to improve cache management logic and ensure
removed unnecessary check for zero taskCount in RecentsView . java to simplify code and improve readability
added a configuration change listener in HelixBrokerStarter and updated sleep duration in HelixServerStarter to ensure that the broker routing table is
added ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` interfaces and implemented ` CoinmateStatic ` and ` CoinmateStatic ` classes
[ flink - 18135 ] [ model ] fix warning message when project directory be unresolvable .
pdfbox - 4071 : add key to the object key if it ' s null or null
added functionality to set and populate DisplayData in PTransform . java to improve display data handling and ensure proper functionality of display data retrieval
replaced instances of ` DefaultSubject ` with ` assertThat ` and ` fail ( ) ` in ` SubjectTest . java ` to improve code readability
disable jdk . certpath . disabledalgorithms in clientjsseserverjsse
[ java ] add optiondata . useaddsubcommands ( .. ) instead of addsubcommands ( .. )
refactor module - info . java files for improved clarity to enhance maintainability and readability of the code
added error handling for unknown server errors in ensureConnection ( ) and ensureConnection ( ) methods to improve error handling and provide clearer error messages for
updated the initialization of ` sCheckingEvents ` and ` mFinished ` in ` LauncherInstrumentation . java ` and ` LogEventChecker . java
added exception handling and logging in FileSinkOperator . java to improve error handling and logging for better debugging
updated the way diagnostics are returned in SchemaGenerator . java to improve error handling and provide clearer output during task execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve clarity and consistency in error handling
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of DataSourceMonitor functionality
added a HashSet to track loaded resource paths in ClasspathMethodScanner . java to ensure resources are only scanned when necessary
added null check for the test instance before accessing it to avoid potential NullPointerExceptions during service initialization
added null check for ` o ` and modified response handling logic in ` RoutingInBoundHandler . java ` to ensure proper handling of ` HttpResponse `
added natIp field to EkeyConfiguration , EkeyUdpPacketReceiver , and updated logging messages in EkeyHandler and EkeyHandler to
updated ` ArrowByteBufAllocator ` and ` ArrowByteBufAllocator ` to use ` HttpObjectAggregator ` instead of ` BaseAllocator `
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added a check for header and body buffer length in HttpConnection . java and created a new test case in RFC2616BaseTest . java to ensure
refactor MultiTimeout to use AtomicReference instead of Flow . Subscription for better thread safety to improve performance and maintainability of the subscription management process
[ java ] improve logging of leveledmanifest . getstarvedstables ( )
added an @ Test annotation to TestOrcTimezone1 . java to mark the test as an annotation for testing purposes
refactor conditional logic to use a new method ` findMatch ` for better clarity to improve code readability and maintainability by encapsulating
added error handling for retrieving instance to segments map in PinotSegmentRestletResource and TraceContext classes to improve robustness by providing clearer error
added null check for the superclass in JTable and created a new test class Test6888156 to ensure proper handling of Object class and validate the
added checks for the existence of SHELL and BUSYBOX environment before adding it to the argument list to ensure that the script is only
updated the delete operation from 10 to 1 in DatabaseCleaningService . java to ensure that the deleted feed does not exceed the expected number of subscriptions
replaced List with LinkedHashSet for testInstances in MockitoExtension . java and added a new test class in JunitJupiterTest . java to improve
refactor FieldMonitor class to improve code organization to enhance maintainability and readability of the code
removed the ` deleteFilesAfterClose ( ) ` method from ` BTreeMapTest . java ` to simplify the code and improve readability by
modified the iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java to ensure that the
added unregistering of the object object in DefaultRemoteProxy and updated exception handling in JMXHelper to improve resource management and ensure proper cleanup of the
updated the default writebuffer size from 4MB to 64MB in RocksDBConfigurableOptions . java to increase the default writebuffer size for
removed the ` true ` parameter from the constructor call in ` Style . java ` to simplify the constructor and improve code readability
updated the argument name from " message " to " message " in FacebookShare . java to improve clarity and consistency in message handling
removed JSON graph handling in SamzaRunner . java to streamline the pipeline execution process by eliminating unnecessary logging
update HelloAudio . java to replace Vector3f . ZERO with MouseInput . BUTTON _ LEFT to improve code readability and maintainability by
refactor LoopRotateBadNodeBudget class to improve code readability and maintainability
added a new method ` convertToMongoType ` to ` AbstractMongoConverter ` , ` MappingMongoConverter ` , and ` ConvertingParameterAccessor `
ggb - 244 fix inputbox rendering of imaginary unit
updated copyright year and simplified return statement in SendKeyToActiveElement . java and added a new test class SendKeyToActiveElementTest . java
added methods to handle negative target sizes in the AddAndScaleMultiImage class to enhance image scaling capabilities by allowing negative target dimensions
refactored the extendArgumentCheck and extendWrapStore methods in DBMaker . java to improve code readability and maintainability
added a call to updateShiftStateNow ( ) in AnySoftKeyboard . java to ensure the shift state is updated correctly during keyboard updates
removed the detected activity string from multiple classes to simplify the activity retrieval process and improve code readability
updated imports from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket . protocol ` across multiple
removed the import of Buildable from AaptPackageResources . java to streamline the code by eliminating unnecessary dependencies
updated file readUnsignedShort ( ) calls to include Unused start _ and _ type index in multiple Java files to improve code clarity and maintainability by
updated the exception message to include the status code of the upgrade protocol to improve clarity of error reporting for invalid upgrade protocols
updated blockMode assignment logic in P11Cipher . java to improve code readability and maintainability
refactor Mockito class for improved readability to enhance maintainability and readability of the code
refactor permission checks in Merge . java for consistency to improve code readability and maintainability by reducing duplication
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpRequest , HttpResponse , Request , and Response classes to streamline the codebase by
updated imports from ` com . sun . speech . freetts . PhoneSet ` to ` de . dfki . lt . mary
updated the ` stripQuotes ` method to use ` PlanUtils . stripQuotes ` instead of ` HashMap ` in multiple files to improve code
refactor ` updateRendering ` method to remove the ` Rendering ` class and simplify the rendering update logic to improve code readability and maintainability
added a list of remote artifact repositories in DefaultPluginManager . java to ensure the correct repository is used for resolution and remote artifacts
close applicationcontext in test to avoid potential memory leak .
refactor PhysicsClient class implementation to improve code readability and maintainability
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable tests related to session functionality
added a new File instance with a name to the ZipFile class to ensure that the file name is initialized correctly
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the ` handleAll ( ) ` method is
add a new test class ChannelTest to ensure that the default constructor is correctly initialized by the default constructor
added logging functionality for call stack traces in GenericDAOImpl and ForumServiceImpl , and created StackTraceUtils class to improve debugging capabilities and ensure
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the code and improve readability
added a conditional check for ` needParen ` in ` unparseList ` calls in ` FunDefBase ` and ` ParenthesesFun
refactor config selection logic to include cluster IDs instead of a set to improve readability and maintainability of the code
renamed ` supressWarnings ` to ` suppressWarnings ` in ` UnsafeAutomaticSubstitutionProcessor . java ` and added a conditional check for Java 11
added handling for unexpected JSON elements in JsonTreeReader and implemented a test for nextJsonElement in JsonElementReaderTest to improve error handling and ensure
added an ` -- -- ` option to the ` TestCommand ` class and implemented an extra argument handling in ` ExternalTestRunnerIntegrationTest ` to enhance command
added dedup methods to SolrDeleteDuplicates , SolrIndexer , and SolrIndexer classes to enhance functionality for handling Solr deletions and indexing
[ hotfix ] [ table - planner ] [ table - planner ] [ table - planner ] [ table - planner ]
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is cleared before proceeding
added dispose ( ) method and modified progress handling in Progress . java and RSSReader . java to improve resource management and ensure proper display of progress
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file is not found
added write and close methods for POIDocument in IOUtils . java to ensure proper resource management and prevent potential memory leaks
replaced println statements with print statements for runOptions , sketch , and exportClassPath to improve readability and maintainability of the code
replaced ` Box ` with ` BlockBox ` and added getter methods for root and dot per point in ` ITextRenderer . java ` to improve
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 64386 - ldap -
refactor port handling in NettyHttpServer , DefaultRouteBuilder , UriRoute , FilteredRouter , and FilteredRouter classes to improve port
updated status handling in SnmpTargetHandler and added verification methods in AbstractSnmpTargetHandlerTest to improve test reliability and ensure proper resource management during
update instructorfeedbackeditpageaction to include instructors with submit privileges
added @ Incubating annotation to AvailableSettings . java to mark the class as deprecated to indicate that the class is outdated and should no longer
updated file path handling in FileResolverImpl . java and added a new war file resolver test class WarFileResolverTest . java to improve file resolution
updated the format string for newFlushedSize in DocumentsWriterPerThread . java to include docstores to improve clarity and accuracy of the log
updated DIRT BLOCK output to use getUnlocalizedName ( ) instead of func _ 149739 _ a ( ) to improve clarity of
updated conditional statements from stripWhitespaceX to stripWhitespaceY in ImageProcessor . java to improve code readability and maintainability
updated the lazyWeakLock initialization to use a maximum number of threads instead of a hardcoded value to improve performance by reducing the number of threads
updated the ` deserializeFrom ` method to use ` exactSearch ` instead of ` false ` in ` TsFileSequenceReader . java ` to
remove unused parameter in CSVSaveService . java to simplify code and improve readability
added a dimension to the pane ' s getPreferredSize ( ) method in NavigationShareTab . java to improve UI responsiveness by adjusting the
replaced ` startOffset ` with ` state ` in ` BeiderMorseFilter ` and updated attribute handling in ` TestBeiderMorse
updated multiple UpnpAudioSinkReg , UpnpHandler , UpnpRendererHandler , UpnpEntryQueue , and UpnpEntryQueue classes to
fix a bug in the lenswarp . setcollidedat ( ) method of lenswarp . getcollidedat
added a new test method ` toJson ` in ` JsonTest . java ` and updated imports in ` JsonTest . java ` to improve
refactor MutableContextDataSupplier class to improve code readability to enhance maintainability and facilitate future updates
updated exception handling from Exception to Throwable in CoreContainer . java to improve error handling and logging for better debugging
updated KubernetesMockServer to include a https endpoint for the KubernetesCrudDispatcher to allow users to register the Kubernet
use unaryoperation . computestamp ( ) in defaultjavaloweringprovider
replaced ` HttpServletResponse . SC _ METHOD _ NOT _ ALLOWED _ 405 ` with ` doGet ` in ` DefaultServlet . java `
[ tika - 132 ] add locale . us to the formatted text format in tiffextractor .
refactor error handling in ShowFileRequestHandler and add a new test case in ShowFileRequestHandlerTest to improve error management and ensure proper handling of 404
added reflection - based exception handling in ReflectorClassWriter . java to enhance error handling capabilities for better error management
added clamp method to Vector . java and implemented clamp method in Vector2 . java to provide functionality for clamping vectors based on specified limits
added OAuth2 authentication handling in ChainedTokenGranter . java to ensure requested scopes are set correctly based on the incoming token client
refactor BC _ instanceof . java to improve code readability and maintainability
replaced setSaveFlags ( SAVE _ ALL ) with a static final logger instance for setting save flags to improve code readability and maintainability by
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance compatibility with JUnit 5 and improve
hhh - 16464 - make nativequery use basicdomaintype instead of domaintype
added a WeakHashMap for aat information retrieval and modified return logic in SunLayoutEngine . java to improve thread safety and maintainability of font information retrieval
use intarraylist . instancesize ( ) instead of intbigarray . ensureCapacity ( )
corrected the spelling of " REMOTE " to " REMOTE " in multiple files to ensure consistency and clarity in the codebase
refactor BrokerRequestUtils to improve code readability to enhance maintainability and readability of the code
refactor InjectorBuilderImpl to improve the order of instances based on injectables and injectables to enhance code readability and maintainability
replaced usage of ` ParserConfig . class ` with ` getBasePath ( ) ` in ` BuildTargetToRawTargetNodeTransformer . java ` to
added null check for the value before assigning the default value to avoid potential NullPointerExceptions when the value is null
[ java ] use keepalivemanager instead of removepacketlistener in jabber protocol provider .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.0F to 0.0F to improve code readability and maintainability
added a method ` getAllDataTypePhysicalVariations ( ) ` to ` VectorizationContext ` and updated related classes to utilize it to improve data
updated package names from ` com . google . zxing ` to ` com . google . zxing . client . j2se `
refactor conditional checks in OverviewState . java for better readability to improve code readability and maintainability by reducing duplication
added @ Entity annotation to BaseActivityEventEntity . java to enable persistence for entities in the application
added TraceHelper imports and updated SYSTEM _ TRACE configurations in NavBarSwipeInteractionHandler , TouchInteractionService , and TraceHelper classes to
added a new file ` InvalidOptions . java ` that implements a test for handling invalid options to demonstrate the behavior of invalid options in Java files
added a check to ensure supported bounds are not equal to the current list to improve debugging and traceability of supported display states
refactor ` getClientIdAndClientSecret ` method to ` OAuth20Utils ` and introduce a new utility method ` getClientIdAndClientSecret `
changed ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` and updated ` _ unwrapServletException ` in ` AsyncContextTest `
added conditional logic to set status to DEFAULT in PackageUpdatedTask . java to ensure proper handling of package status and info updates
camel - 14224 : camel - seda : fix npe in seda component when size be zero
added batchUpdateStart and batchUpdateEnd methods to the Kernel and App classes to enable batching of updates in the application
added ` HttpClientBuilder ` and ` HttpClientConfiguration ` imports in ` ThirdEyeApplication . java ` to enable configuration of the HttpClient in the application
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enhance request processing by incorporating sorting functionality
refactor CryptoFacilitiesTradeService to use OpenOrders for handling order cancellation to improve code readability and maintainability by using a
do n ' t hide keyboard when click in algebraviewweb .
use nativefunctionhandle instead of byte [ ] in heap . memmove
reformatted code in BindLdapAuthenticationHandler . java for improved readability to enhance maintainability and readability of the code
added a ` blockToolTip ` boolean field and its getter / setter methods in ` ToolTipManagerW . java ` and updated ` ModeToggleMenu . java
updated DefaultDateTypeAdapter to accept a time style parameter and modified related methods to utilize it to enhance flexibility in date formatting based on the specified
updated playerSet string format from " UID : " to " ( " ) " in ListCommand . java to improve readability and maintainability of
added a check for empty lists in mmm List . java and ppp List . java to ensure that an empty list is returned when the list is empty
added error handling for CommandException in ParametricCallable . java to ensure proper handling of CommandException during execution
added a boolean parameter ` isLike ` to the ` getLikeExpression ` method and updated related logic in ` VectorizationContext . java ` to
added start and stop methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to enable proper handling of stream supplier components in the application
updated the ` runChild ` method to set default locale in ` LuceneTestCase . java ` to ensure consistent locale management across test cases
refactor multiple SSL factory classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and maintainability by encapsulating context handling
camel - 14247 : camel - blueprint : add test for routebuilder reference
[ java ] use contains instead of substring in testexecutestreamcommand
refactor returnTypeSubstitutable methods to simplify the returnTypeSubstitutable method to improve code readability and maintainability by reducing
added a ` ThrottleType ` enum and modified the processing logic in ` TestExecutor . java ` to handle CHARS and CHARS throttles
removed unnecessary variable assignment for pixel in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to streamline code
refactor Annotation and AnnotatedElement classes for improved readability to enhance maintainability and readability of the code
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement ` Model ` instead of ` java . lang
camel - 14247 : camel - camel - http : remove dependency on \ . apache \ . camel
added a boolean flag ` clearEntityManager ` to the ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control the clearing
added null checks for the ` info ` parameter in ` InstallShortcutReceiver ` , ` LauncherModel ` , and ` LauncherModel ` to
updated TwoDimensionalCollectionValuedMap initialization to include a boolean parameter to ensure proper initialization of the map based on the current state
updated exchange specification names from " btc - e . nz " to " wex " in WexExchange . java to ensure consistency in
added null checks for columnReaders and reader in OrcEncodedDataConsumer and updated buffer setting logic in EncodedTreeReaderFactory to ensure robust
added null check for segments in SegmentInfos . java and created a test case in TestIndexReader . java to ensure robust error handling when no segments
updated search parameter types and method implementations in HSearchSortHelperImpl . java and FhirResourceDaoR4SearchWithElasticSearchIT .
added a variable ` percentValue ` and modified the return logic in ` DeviceHandler . java ` to handle negative values more effectively to improve accuracy in
updated limit checks from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java ` to
camel - 14284 : camel - routes - add debug log for load additional route
updated the getNextChunk method to use positionOfPlaylistInPeriodUs instead of startTimeUs in HlsChunkSource and HlsMediaPlaylist
refactor test classes to extend LuceneTestCase instead of TestCase to improve code organization and maintainability by aligning with the latest Lucene framework conventions
[ hotfix ] [ runtime ] set nextinput in outputhandler and add unit test for statefulmapper2
removed null check for fill and stroke in Area . java to simplify code and improve readability by eliminating unnecessary null check
removed the ` dbExists ` method and updated imports in ` Blockchain ` , ` BlockchainTest ` , and ` BlockchainTest `
trim whitespace from the matcher group value in SQLPlusSupport . java to improve code readability and maintainability by reducing redundancy
added socket . setAsync ( true ) and socket . setAsync ( false ) in Http11AprProtocol . java to ensure the socket is
refactor divider location calculation in DockSplitPaneW . java to improve readability and maintainability of the code
added HEALTHCHECK _ OK _ CALLS and HEALTHCHECK _ BAD _ CALLS metrics in ControllerMeter and Pinot
added visibility of shared avatars in LocalFileListAdapter to improve user experience by hiding shared avatars
updated scss file paths from " mow . scss " to " mow - web . scss " in MebisResources .
removed unnecessary ' > ' operator from args . length checks in multiple Java files to simplify argument validation logic for better readability and maintainability
added logging level check for command execution in LogInterceptor . java to ensure proper execution of command execution based on log level
replaced ` latch ` with ` assertWaitUntil ` for better readability to improve code readability and maintainability by using a more descriptive
refactor locale handling in QueryParser to use a default locale variable instead of a static method to improve code readability and maintainability by encap
[ hotfix ] [ table - common ] use linkedhashset instead of arrayhashset in entrycustomizationdialog
make rulebaseimpl and rulebaseimpl public , make rulebaseimpl public
added a new class ` OcspUnauthorized ` in ` OCSPResponse . java ` and created a new class ` OcspUnauthorized
http : / / issues . apache . org / jira / browse / amq - 4071 - do n ' t wait for server to
added a new constant COUNTER _ OPEN _ CONNECTION _ COUNT and updated related methods in SourceCounter and AvroSource classes to improve
changed the access modifier of the execute method from package - private to public in ExecutionStrategy , ExecutorServiceExecutionStrategy , ExecutorServiceExecutionStrategy , and ExecutorServiceExecution
changed the access modifier of the ` createDefaultJavaPackageFinder ` method from private to public to allow external access to the ` srcRoots `
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve performance by utilizing ` PrintWriter ` for output output
[ hotfix ] [ test ] fix test failure in filesourcetextlinesitcase
added import for DataTable in JRubyStepDefinition . java to enable handling of DataTable instances in JRubyStepDefinition . java
updated author visibility and added custom API result handling in SearchImagesRenderer , ApacheHttpClientMediaWikiApi , and ApacheHttpClientMediaWikiApi to improve user
refactor ReadSentimentDataset class for improved readability to enhance maintainability and readability of the code
updated error message formatting in FormulaParser . java to improve clarity of error messages for better debugging
added getter and setter methods for the WebSocket bind address in WebSocketClient . java to improve encapsulation and encapsulation of WebSocket connection
[ java ] remove unnecessary call to close ( ) in clusteredmediadriver . close ( )
refactor WidgetGroup to streamline width and height assignment logic to improve code readability and maintainability by reducing duplication
updated sessionFixationAttribute comparison to use Boolean . valueOf for improved readability to enhance code readability and maintainability by using a more descript
updated the switch statement to include a conditional check for the edgeOption parameter to ensure proper handling of channel LA behavior based on the edge option
added linearBackoffCoefficient and incrementBackoff methods to ChromeBinary and ChromeDriver classes to improve backoff management and ensure consistent backoff behavior across the application
added URI template attribute to ClientResponseWrapper and related classes to enhance the handling of HTTP requests in the application
updated the method call from ` shouldPurge ` to ` shouldPurge ` to use ` Integer . MIN _ VALUE ` instead of ` cf ` to
updated return values in ICC _ Profile , ColorConvertOp , and ColorConvertOp classes , and added a new test class InvalidRenderIntentTest to
add isnotsureallowed parameter to contribute question question template
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] fix findbugs warning in kafkarecord
added ` PGConnection ` to the ` PooledConnectionImpl ` class and updated its usage in ` BaseDataSourceTest ` to ensure compatibility with the new
refactor PropertyTable and CloseIgnoringInputStream classes to improve code organization to enhance maintainability and readability of the code
updated logging level from warn to info for no token encryption secret in TokenAuthenticationHandler . java to improve clarity and accuracy of logging when no token encryption
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class is outdated and should no longer be used
added topology update handling in AmbariManagementControllerImpl and refactored command report creation in FinalizeKerberosServerAction to improve error handling and
added ITERATOR and END handling in NamedListCodec . java and updated iterator logic in TestNamedListCodec . java to improve handling of Iterable
fix nullpointerexception in migrationmanager . assignfailedpartitions ( )
added schema inclusion rule to ApiExample . java to allow for public schema inclusion in ApiExample . java
updated the expected value of the mean value from 3.0 to 7.0 in StreamExpressionTest . java to ensure accurate calculation of the mean
refactored coordinate sequence handling in SDO . java and added new test cases in SDOCreateTest . java to improve code clarity and ensure
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to provide access to base and getDimensionCount
added a method ` setDebugEvaluationOutputForNextEval ` to ` FormulaEvaluator ` , ` SheetUtil ` , and ` XSSFFormula
updated JUnit imports and annotations from ` org . junit . Assume ` to ` org . junit . jupiter . api ` in `
updated the parameters of the ExoPlayerProfile initialization and added a condition to check if the profile is not live to ensure that the profile is only
added a return statement to the DynamicStyleBar class to ensure that the method returns immediately after execution
added SLF4J logging for the renaming of the Database property in Utils . java to improve debugging capabilities by providing insights into the
refactor ReactiveAuthorizationManager to improve code organization to enhance maintainability and readability of the code
added support for boolean type in MethodEmitter to ensure compatibility with boolean type handling
make llvmstackframenuller . nullify ( ) public
refactor multiple Java files to improve code organization and maintainability to enhance maintainability and readability of the codebase
add test case for transaction - aware cache manager proxy
added a method to calculate the bounding box based on the number of vertices in Mesh . java to provide a way to calculate bounding box based on the
added a new ` TargetHashFunction ` enum and modified ` Hashing . sha1 ` to ` MURMUR _ HASH3 `
refactor DefaultConfigurationProperties to improve code readability to enhance maintainability and readability of the code
added high light color settings and updated color settings in ListViewMultiChartActivity and BarChart classes to enhance the visual appearance of the chart based on the
added a call to ` pgSgPathPlanMap . put ( tmpPg , sgPathPlanMap ) ` in ` ClusterPlanRouter
[ hotfix ] [ test ] fix test failure in infinispanremoteproducerit
refactor MavenArtifactFetcher and MavenDependencyResolver to use a whileLocked method for managing artifact files to improve code readability and maintainability by reducing
updated fragmentShader to include " # ifdef GL _ ES " and " v _ texCoords " in SpriteBatch . java to enhance rendering
changed the data type of the RSGroupInfo constructor from SortedSet to Set in RSGroupInfo and TestRSGroupsAdmin2 classes to improve
http : / / issues . apache . org / jira / browse / amq - 4253 - add log for no tldprocessor
updated defaultMatchVersion handling in CustomAnalyzer and added DummyVersionAwareTokenFilterFactory in TestCustomAnalyzer to improve version validation and enhance test coverage for
added a test for retrieving the application info from setPackageArchiveInfo in ShadowPackageManagerTest to ensure that the application info reads from setPackageArchiveInfo
replaced calls to ` method . invoke ` with ` MethodUtil . invoke ` and added package access checks across multiple files to improve method invocation accuracy and
added imports for ProjectConfigurationStartEvent and TaskStartEvent , and modified progress listener invocation in GradleBuildService , Main , and ProjectReader
removed synchronization block in AndroidWebDriver . java to ensure thread safety during synchronization
do n ' t throw poolinitializationexception if initializationfailtimeout > 0
removed the ` timeOut ` parameter from the ` getResult ` method and added a ` error ` method in ` Net . java ` to streamline
changed the type of the ` isNative ` variable from ` boolean ` to ` transient boolean ` and modified the entry addition logic in ` addEntry
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity and consistency in error reporting
rename ruleenablementhandler to ruleenablementactionhandler instead of ruleenablehandler
[ java ] fix typo in javadoc .
updated debug logging messages in AuthzAuthenticationFilter . java and AuthzAuthenticationManager . java to improve clarity and debugging information for authentication requests
[ hotfix ] [ test ] fix flaky test in kafkadynamictablefactorytest
added null check for the repository in UsersPanel . java to improve robustness by preventing potential NullPointerExceptions
added support for " . otf " and " . OTF " font names in SunFontManager . java to ensure compatibility with various font formats
refactor type matching logic in AnnotationMatcher . java to improve clarity and maintainability to enhance code readability and maintainability by reducing duplication
changed the default value of " OFF " from " OFF " to " SEVERE " in Grep . java to improve clarity and accuracy of
added a conditional check before logging debug messages in FaultTolerantChunkProcessor . java to ensure debug logging is only logged when necessary
replaced the ` includes ` list with a ` excludes ` list in ` SurefirePlugin . java ` to improve code readability and maintainability by
added a method to move the default screen on the home intent in the Launcher class to ensure that the default screen is moved when the home intent
updated maximum bitrate from " 110 " to " 30 " in PMS . java to increase the maximum bitrate from 110 to 30
removed the ` getOptions ( ) ` method from the ` CommandLineParser ` class to simplify the code and improve readability
trim whitespace from description in MutableDatabaseProperty . java to ensure that descriptions are trimmed before proceeding
updated the file path construction in XOMParserTest . java to ensure the correct file path is used for testing
removed the pid ( ) parameter from the error log message in ProcessBesuNodeRunner . java to simplify the error message for better readability
added getter methods for the music and sound in MusicLoader and SoundLoader classes to provide access to the music and sound data from the loader
replaced ` ClassUtils ` with ` Map ` in ` OnBeanCondition . java ` to simplify type assignment logic and improve code readability
added ScreenRecord annotation to RequestPinItemTest . java to enable screen recording functionality in the test
added null check for lrPauseButton in CPUFeature and MemoryFeature to prevent potential NullPointerExceptions when lrPauseButton is not set
replaced ` PreferenceMultiline ` with ` PreferenceCategory ` and refactored preference handling in ` Preferences . java ` to improve code readability and
corrected the spelling of " AVAILABLE " to " AVAILABLE " in the packet writer to ensure consistency in code formatting
refactor StringBuilder initialization to handle cases where utflen is less than or equal to Integer . MAX _ VALUE to ensure proper initialization of StringBuilder based on
disable metrics export in webendpointsautoconfigurationintegrationtests by default
refactor InterruptedException class for improved readability to enhance maintainability and readability of the code
refactor ServiceTicket class implementation to improve code readability and maintainability
refactor connection handling logic in ConnectionCheckOperation . java to improve code readability and maintainability by reducing duplication
refactor conversion logic in ArgumentArrayMessageMapper to use a conditional check for Map class to improve readability and maintainability of the code
updated type checks for IndexableDSpaceObject in SolrServiceCommunityCollectionItemFilterPlugin . java and updated test cases in XmlWorkflowFactory
replaced ` sExemptOfPasscodeActivites . add ( Intent . FLAG _ ACTIVITY _ REORDER _ TO _ FRONT
remove @ deprecate from patternparameterconfigurer , since it be no longer need .
modified the ` beginDraggingWidget ` method to return a boolean indicating success or failure to improve robustness by preventing potential null pointer exceptions
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for the root parameter in DynamicStyle . java to prevent potential NullPointerExceptions when processing components
add an option to update the confusion matrix for the sentence .
fix a bug in the jmeter thread that cause a race condition in the jmeter thread .
added unit tests for ` getConnectedDevices ` and ` removeDevice ` methods in ` ShadowBluetoothHeadsetTest ` to ensure correct behavior
renamed the test method from " autowire " to " autowired " in PropertyBindingSupportTest . java and PropertyBindingSupport . java to
added " clone " and " finalize " methods to the objectMethods set in ResultObjectProxy . java to enhance functionality by allowing the method to be
added null checks for ` counters ` in ` IntegrationTestBigLinkedList . java ` to ensure that ` generator ` and ` write ` cannot be
added support for referencing objects in JDWP and JDWP to enhance object reference functionality and improve error handling
updated the condition for setting the registered service filter in SamlIdPServicesManagerRegisteredServiceLocator to ensure that only valid service IDs are processed
added a null check for the activity before calling runOnUiThread to avoid potential NullPointerExceptions when the activity is not initialized
corrected the spelling of " LOGGER " in multiple files to improve code readability and maintain consistency in logger usage
added stringType property to DatabaseAdaptor and modified JDBCSessionDataStore to utilize this new method to improve flexibility in handling string types in database operations
fix uimaupdaterequestprocessortest ( # 2387 )
refactor thread name handling in CliDriver , SessionState , and HiveSessionImpl classes to improve clarity and maintainability of thread name management
refactor TaskletAdapter to improve code organization to enhance maintainability and readability of the code
[ triso ] [ dmn ] fix dmn evaluation of negative dmn
fix splash progress not work on mac
added tooltip for the CGCP checkbox in RocketPanel . java to enhance user experience by providing a visual representation of the checkbox
rename enum and interface factory to use addtype ( ) instead of addtype ( )
app : add description to the hot reload action .
use stringtemplate instead of string . isspamingsheet . isspamingsheet . isspamingsheet . hassheetlabel (
corrected the spelling of " BRIGHTNESS _ FACTOR " to " BRIGHTNESS _ FACTOR " in BindingConstants .
refactor SSCM history parsing logic to improve clarity and consistency to enhance code readability and maintainability by reducing redundancy
added a boolean parameter ` isAdmin ` to the ` createUser ` method in ` HomekitAuthInfoImpl . java ` to enable users to
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` , modified conditional checks in ` Introspector ` , and
updated debug log message formatting in DynatraceExporterV2 . java and DynatraceExporterV2Test . java to improve readability and
updated method signatures in Context and Response classes to improve clarity and consistency to enhance code readability and maintainability by using consistent naming conventions
added a method to set capabilities from SpongeBuilder in MixinItemStack . java to ensure proper handling of capabilities in the MixinItemStack class
changed the assertion from " default " to " default " in LifecycleUtilsTest . java to ensure the correct execution ID is returned in the test
added contract type validation and improved contract type validation in Wallet . java and GetContractServlet . java to enhance contract creation logic and ensure correct contract
added package - info . java files for Image . java , module - info . java , and virtualization . management in the dtfj package
removed synchronization from the add method in DocumentsWriterDeleteQueue . java to improve thread safety and prevent potential deadlocks
added a check to ignore duplicates and modified test arguments in JavadocTool . java and T7091528 . java to ensure that duplicates are
changed the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable IPV6
refactor LoginServerTokenEndpointFilter to accept a list of parameter names instead of a hardcoded value to improve flexibility and maintainability of the
added language validation for C _ KEY in LanguageFactoryTest and updated language comparison logic in LanguageFactory and CPPParserTokenManager to ensure correct language
replaced ` ThreadPoolExecutor . newSingleThreadExecutor ( ) ` with ` MoreExecutors . newSingleThreadExecutor ( ) ` across multiple files to
added HTTP headers for cache control and expiration in LoginService and FormAuthenticator classes to ensure proper handling of cache control and expiration dates in the response
updated error logging to include the original exception message to improve debugging by providing more context about the error message
updated HSSFTests to use TestAreaReference and TestSheetReferences instead of AllHSSFUtilTests to improve test coverage and ensure consistency in
refactor tests in FetchHTTP2Test , FetchHTTP2Test , and FetchHTTPTestBase to improve code organization and maintainability
added null check for the output file before accessing its path to avoid potential NullPointerExceptions during execution
added import for ExternalResourceControlPriority and set the RUN _ BEFORE _ RESOLVING _ URI setting in Java2DRenderer .
added a try - catch block to handle ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to improve error handling and provide clearer feedback on JD
modified the ` getInternalThreadMBean ` variable to be final and modified the ` main ` method to use ` testCPUTime ` instead of `
updated conditional checks in TabsAndIndentsVisitor to use getComments ( ) instead of getLastWhitespace ( ) to improve code readability and
removed logging statement from SimDistribStateManager and updated assertions in TestTriggerIntegration to improve clarity and accuracy of test assertions
refactor equality checks in multiple classes to use case - insensitive comparisons to improve code readability and maintainability by reducing duplication
removed the ` getString ` method from ` ShadowBundle ` to streamline the code by eliminating unnecessary null checks
added locale - specific date formatting to TweetActivity to ensure accurate time representation based on user preferences
added a check to return an empty list if no connections are available to ensure that an empty list is returned when no connections are available
refactor keyboard focus handling in DetailFragment to use a dedicated method to improve code readability and maintainability by encapsulating keyboard focus
added a check for empty path before setting the extra class path in App . java to ensure proper handling of file paths in the application
[ geogebra - 219 ] make solve ( ) thread - safe .
added import statement for Message in GenericMessage . java to enable compatibility with Spring ' s Message class
refactor SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a new join method to improve code readability and maintainability
refactor file filter handling in AquaFileChooserUI to improve clarity and functionality to enhance code readability and maintainability by encapsulating
[ java ] fix synchronization issue in p2ptransportmanager . java
modified the return statement in ArrayPtg . java and added a new test case in TestArrayPtg . java to ensure proper handling of boolean
updated import statements in PGtokenizerTest . java to use Assertions . assertEquals instead of Assertions . * to improve code readability and maintainability by
refactor variable handling in Java2TypeScriptTranslator to improve clarity and functionality to enhance code readability and maintainability by reducing duplication
added a sequence name for auto - increment columns in PostgreSQL to ensure proper handling of auto - increment columns in PostgreSQL
refactor byte reading logic in DataInput . java to improve readability to enhance readability and maintainability of the code
updated assertions in ImageParserTest from VerticalPhysicalPixelSpacing to HorizontalPhysicalPixelSpacing in ImageParserTest . java to ensure consistency in pixel spacing
updated the method call from ` getParent ( ) ` to ` getParent ( ) ` in ` Component . java ` to ensure the correct parent is assigned
updated import statements in multiple Java files to ensure consistency in schema naming conventions to improve code readability and maintainability
replaced ` NativeCrypto . ENGINE _ finish ` with ` NativeCrypto . ENGINE _ free ` in ` NativeCryptoTest . java ` to
added a new ` iteration ` method to ` InterleaveControl ` , ` RandomController ` , ` CounterConfig ` , and ` IterationListener
removed redundant type casting in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent potential memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are deleted before proceeding
added a check for " twitter : / / " before loading the URL in BrowserActivity . java to ensure the URL is only launched when the URL
[ java ] await host status in deploymentgrouptest . testhoststatus ( )
changed logResult from false to true in VisibilityController . java to enable logging of allowed labels in the list
increased the maximum autoretries from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of retries for better debugging
removed console output from TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapperComponent . java to improve code clarity and maintainability
added ` FRACTION ` attribute to ` ValueResourceLoader ` and ` ResType ` classes , along with a new ` FRACTION ` attribute
removed the confirmation check for file writing in BasicFrame . java to simplify the code and improve readability
added assertions for groupId and artifact ID in the findNewerDependencyVersion method to ensure correct dependency version retrieval and avoid potential null pointer exceptions
hbase - 16424 addendum addendum addendum addendum addendum addendum addendum addendum
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop . java for improved performance to enhance performance and maintainability of the fuzzing process
added a check to set f0 to 0 if f0 is less than zero to ensure proper handling of negative values in HTSVocode
added null check for connectionCatalog and updated logging messages in SchemaRetriever and TableRetriever classes to improve robustness by avoiding potential NullPointerExceptions
[ java ] add support for b2c converter in the b2c converter .
added preferences handling for empty screens in the Workspace class to enhance user experience by allowing users to disable empty screens
added a warning log for deprecated cucumber - needle in NeedleFactory . java to indicate that the use of cucumber - jakarta - cdi
updated ` ShadowThemeTest ` and ` ShadowArscAssetManager ` to use ` newTheme ( ) ` instead of ` activity . get (
updated test assertions to use ` Arrays . toString ( ) ` instead of ` Arrays . toString ( ) ` in ` VerifyFast . java ` to
server : remove @ dbmigration and @ system _ versioning _ alter _ history
added support for the ` getProto ` and ` SETPROTOCHECK ` property in ` ScriptObject ` and updated related functions in ` Global `
replaced ` Collections . shuffle ( readers ) ` with ` Collections . shuffle ( readers , random ( ) ) ` in ` TestFilterDirectoryReader .
updated displayName assignment logic in UsersAndGroupsSearchProvider . java to handle both shareWith and known remote clarification to improve user experience by ensuring
updated path formatting in CookieRetrievingCookieGenerator to use StringUtils . defaultIfBlank for better readability to improve clarity and maintainability of
removed unnecessary closing braces in multiple Java files to improve code readability and maintainability
updated cacheName assignment to use ' config . getTotalBackupCount ( ) ' instead of ' config . getName ( ) ' to ensure cacheName is
updated comparison logic in ValidationResult . java to use ve . pageNumber instead of ve . pageNumber to ensure correct comparison of pageNumber
added a condition to check if the focused widget is not null before comparing it to avoid potential NullPointerExceptions when the focused widget is null
corrected spelling of " playSoundAtLocationExcept " and " playSoundPitchRange " in SoundUtil . java to improve code read
refactor ` getAppleCxxPlatformDomain ` method to accept ` AppleCxxPlatformsProvider ` instead of ` appleCxxPlatform
added a SQL statement to verify the functionality of the ` ololoed ` and ` ololoedWithNamesAndTypes ` method in ` Click
renamed the method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to improve
refactor EnglishPTBTreebankCorrector class to improve code readability and maintainability
added a new file TestGetLoggerNPE . java to test logger behavior to verify the behavior of the logger to ensure that the logger is correctly
added a data field to the PathSharingContext class and updated related classes to use ConcurrentHashMap instead of Map for sharedMap to improve thread safety and
do n ' t throw espressoexception in staticobject . getfieldindex ( ) .
refactor NextValExpression to use a regex pattern for better readability and maintainability to enhance flexibility in determining the next value for SQL queries
improve error message when resource bundle be not pre - cached
refactored the clearing logic in BoundedLocalCache and added a test for pending writes in BoundedLocalCacheTest to improve memory management and
added a new property ` order _ direction ` to ` QuoineExchange ` and a getter method in ` QuoineNewMarginOrderRequest
added boundInitialization method to PropertyDescriptor and created a new Test7192955 class for testing bean initialization to enhance property binding functionality and ensure proper
replaced ` failsafeWidth ` with ` setDisplayModeCallback ` in ` LwjglApplicationConfiguration ` and ` LwjglGraphics
added a check for the parent form before setting buttonsAwatingRelease to null to ensure that buttonsAwatingRelease is set to null when
updated wrapWidth calculation to use getWrapWidth ( ) instead of snappedRightInset ( ) and added a method to compute pref height to improve layout
corrected a typo in the error message from " L ' argomento del parser non deve essere nullo " to
replaced HashMap with LinkedHashMap for paramValues in CustomChangeWrapper , CustomPreconditionWrapper , and CustomPreconditionWrapper classes to ensure consistent iteration order for paramValues
updated string concatenation methods to use ` String . format ( ) ` instead of ` string concatenation to improve code readability and maintainability by using a
removed the use of getNamespaceContext ( ) in StaxXmlPullParser . java to simplify the code and improve readability
added a boolean field ` nestedJoins ` to the ` TestAll ` , ` TestAll ` , and ` TestNestedJoins ` classes
updated condition in QueryManagerImpl to check if caller type is not NORMAL to ensure that only valid callers are specified by admin only
added support for ` JavacFileManager ` in ` SourceFileManager ` and updated ` CompletionTaskProcesor ` to include ` cursor `
added METASTOREURIS . varname , HIVE _ AUTHORIZATION _ MANAGER , and SQLStdHiveAuthorizerFactory to
[ hotfix ] [ test ] use hamcrest assertion instead of junit
added nullable annotation to ` MetadataRenderer ` , ` TextRenderer ` , and ` Util ` constructors in ` MetadataRenderer ` , ` TextRenderer
change symbolmapreaderimpl to use long . size ( ) instead of long . size ( )
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
replaced the ` Reflection ` class with ` TypeConverters ` in the ` Jooby ` and removed the ` Reflection ` class to streamline
refactor ThreadlessExecutor to use private methods for better encapsulation to improve code readability and maintainability by encapsulating the
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter . java and added a new test method in TestDateTimeParsing . java to improve error handling and
rename ` CHUNK _ LENGTH _ kb ` to ` CHUNK _ LENGTH _ KB ` in ` CompressionParameters . java ` to
added a new case ` WILDCARD ` in ` Types . java ` and created a new class ` T7034495 ` with multiple
[ java ] fix potential nullpointerexception in lotsofevents
[ java ] fix checkstyle violation in transclusiondeciderule
use versionutils instead of versionutils . getmicronautversion ( )
added assertions to verify the functionality of the new _ sheet and its name record in TestBugs . java to ensure correctness of the name record
updated MindIcon instantiation to include a description if it does not contain a slash to ensure that the description is only displayed when the name starts with a
modified the ` onHomeIntent ` method to accept a boolean parameter ` internalStateHandled ` to enhance flexibility in handling home intents based on
refactor dependency tree preference handling in CxxBuckConfig . java to improve readability and maintainability of dependency tree preference logic
added a new method ` showDetails ` to ` FileDetailFragment ` and modified ` FileDetailFragment ` to include an active tab parameter to enhance
corrected spelling of " $ apply " to " apply " in multiple files to improve code readability and maintain consistency in naming conventions
added a method to randomize the minimum symbol size in MinimalEncoder and updated test assertions in HighLevelEncodeTestCase to ensure that the codeword
updated string appending logic in SourceBuilder . java to use isrequired ( ) and isrequired ( ) method to enhance readability and maintainability
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter is notified when the data is changed
removed the setDefaultWALSyncMode method from ShadowSQLiteConnection to simplify the code and improve maintainability
updated type checking in RemoveJavaDependenciesAdapter and added assertions in Collections to ensure correct type erasures and improve code clarity
[ java ] remove unused method from defaults3crtasyncclient
updated the ` doDudPasswordTest ` method parameters from ` ef677 ` to ` ef677 ` in ` ParserTest
updated the assertion message in HazelcastTestSupport from " found - content " to " found - content " in HazelcastTestSupport . java to
do n ' t throw graalinternalerror when create a new ifnode .
do n ' t use the nd image if the pen be n ' t set
refactor SQLXML class implementation to improve code readability and maintainability
added a limit parameter to the ` getOrderBook ` method and updated its usage in ` YoBitMarketDataService ` and ` YoBitMarketDataService
[ hotfix ] [ runtime ] rename ` ` gotwrongoomeexc ' ' to ` ` heapoomeexception ' '
added a stream read constraint to the StandardDataFlow class to enhance data handling by allowing customizable stream read constraints
updated the way engines are retrieved in PmsConfiguration . java to ensure proper handling of empty engines in the locking process
corrected the spelling of " FullIterator " to " WheelIterator " in TimerWheel . java and TimerWheelTest . java to improve
added error handling for bug pattern generation in BugInstance . java to improve robustness by logging errors when generating customized descriptions
[ hotfix ] [ test ] increase timeout for localchunkprovidertest
changed the visibility of the uncomplete checklists menu item from true to false to ensure the menu is only visible when necessary
updated DefaultResultSetHandler to resolve discriminated result map and added a new Contract class to enhance the handling of nested result maps in the result
added null check for defaultHome before unregistering the receiver to prevent potential NullPointerException when defaultHome is null
removed the VertxGen annotation from PumpImpl . java to streamline code by eliminating unused annotations
removed unnecessary type casting in FileDetailFragment and OCFileListFragment to simplify code and improve readability
trim whitespace from the token in ConfigAttributeEditor and add a new test for removing leading and trailing spaces in ConfigAttributeEditorTests to ensure that the
refactor ClassUsingAuxiliary , ClassUsingAux , and SelfClassWithAux classes to improve code organization and maintainability
changed access modifier of singleModulReference from private to public and added a method to retrieve unnamed modules to enhance encapsulation and
updated the relKind assignment logic in DatabaseMetaData . java and DatabaseMetaData . java to handle both " pg _ " and " SYSTEM TABLE "
updated TIER _ ENTERPRISE _ PLUS _ VALUE from 3 to 3 in Agent . java and removed deprecated constants in AgentProto
updated the calculation of the RQST field from " rqst " to " rqst " in ThriftHiveMetastore . java
added a new module - info . java file for the com . speedment . runtime . core module to define module - info . java files for
updated flush state handling in SslConnection . java to ensure proper handling of encrypted output during flush operations
updated Log4j2LogDelegateFactory to implement LogDelegateFactory instead of Log4j2LogDelegateFactory and added a new LoggerFactory class to
[ hotfix ] [ test ] fix test failure on solaris
refactor ` ExecutableFindOperation ` , ` ReactiveFindOperation ` , and ` ReactiveMongoOperations ` classes to improve code organization and maintainability
updated the package name from null to " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with
added a disabled annotation to the TestInterProcessSemaphoreEdges class to indicate that the test is currently failing
added sorting functionality for theme keys in EditableResources . java to ensure consistent sorting of theme keys and improve code readability
added a new file OSvTerminal . java and modified the TerminalFactory . java to handle OSV flavor handling to ensure compatibility with OSV architecture
added support for both " . gs " and " . grs " files in ClassType . java to ensure compatibility with specific class types
replaced HashMap with TreeMap for combined vectors in DrillTestWrapper . java to improve performance and maintainability of the test code
added a condition to check if ` names ` and ` values ` are within the loop to ensure that the loop does not exceed the specified number of
refactor WebSocketPolicy class to improve code readability to enhance maintainability and facilitate future updates
changed visibility of ` setReadPhoneStatePermissionGranted ` and ` setAccessWifiStatePermissionGranted ` from static to instance variable to improve encap
added support for template - based resolution in standardmessageresolver . resolvemessage ( )
updated constructors in AsmUtil . java to use generics for ClassVisitor instances to enhance type safety and prevent potential ClassCastExceptions
added a new ` LoggingAuditService ` class that implements ` UaaAuditService ` for auditing user authentication to provide audit functionality for user authentication
updated the ` toTemperatureState ` method to accept a nullable ` Temperature ` parameter and added null checks in ` TadoZoneStateAdapter `
fix : do n ' t check for abstract class in beandefinitioninjectprocessor .
camel - 14284 : camel - http : add system property http . proxyhost and http . proxyport
updated MAX _ ENCODING _ VERSION from " 1.1 " to " 1.1 " to reflect the latest version of the template
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to enable the use of ` jdkSerialFilter ( ) `
camel - 14247 : camel - jbang - camel - jbang - add the pool size to the log message
removed the ` resetNextPage ` parameter from the ` forceFinishScroller ` method in multiple classes to simplify the scrolling process by directly calling ` force
updated the ` ensureRealtimeClusterIsSetUp ` method to accept a ` rawRealtimeTableConfig ` parameter to enhance configuration flexibility by allowing
added ` isError ( ) ` method to ` ValidationReport ` and updated related checks in ` DisallowValidator ` and ` RefTest ` to
updated inlineQsb initialization to use closestProfile . inlineQsb instead of System . arraycopy to improve code readability and maintainability by
added exception handling to the createClassPath method in SortedArrayStringMapTest . java to improve error handling and ensure proper URL encoding
updated regex pattern from ' 10 ' to ' ( . * ) ' in TransformSteps . java to ensure proper handling of different input formats
added null checks for the ` prop ` variable in ` Toolkit . java ` and modified fillRect method in ` PGraphicsJava2D . java `
[ java ] increase fault tolerance test timeout to avoid timeouts .
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
added a method to set the Docker image URL in Environments . java to ensure the Docker image URL is correctly set for the environment
[ hotfix ] [ test ] clean up system . gc ( ) in knowledgeagenttest
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
added a new method ` copyFile ` to handle file copying in ` SnapshotTaker . java ` to improve code readability and maintainability by
renamed the method ` appendToDescription ` to ` getDescription ` in multiple classes to improve clarity and consistency in naming conventions
[ java ] add checkdevices ( ) method in lstst and mxndmanager
added a conditional check for ` Xml . Document ` before visiting ` FindLineFormatJavaVisitor ` in ` Autodetect . java ` to ensure that
updated ` NotesHelperTest ` and ` ReminderHelperTest ` to use ` AndroidJUnit4 ` instead of ` InstrumentationTestCase ` to ensure
added new rules for GasLimit , GasLimit , and ParentGasLimit in CommonConfig . java to enhance rule management by including GasLimit and
removed the ` setupData ( ) ` method from ` BaseAssumptionsRunnerTest ` and removed the ` setupData ( ) ` method
renamed ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class and updated related methods accordingly to improve clarity and consistency in
added null check for endStream in TripleServerStream . java to ensure proper resource management and prevent potential memory leaks
updated failure messages in JobManagerOptions , RestartStrategyOptions , and RestartStrategyOptions to include Site . BaseURL to enhance error handling by
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify SQL parsing and deparsing functionality to ensure
refactor Common class to improve code organization to enhance maintainability and readability of the code
refactor Launchable . java to use a try - with - resources statement for context layer to improve resource management and prevent potential memory leaks
[ hotfix ] [ javadoc ] fix typo in streamexecdeduplicate
[ hotfix ] [ kafka ] log a warning when send kafka message to topic .
added PersistentPropertyAccessor support to SimpleElasticsearchPersistentEntity and implemented isImmutable method in SimpleElasticsearchPersistentProperty to ensure proper handling of persistent property accessors
refactor setCoord method to return a boolean instead of void in GeoCoordSys1D . java and add setUndefined ( ) in GeoSegment
added scroll distance calculations and logging in AskGestureEventsListener . java to improve scrolling accuracy and debugging capabilities for better user experience
fix a bug in the ngramestimator . getvalue ( ) method that do n ' t have the same value .
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align with the new package
updated the constructor of ` StatsLogCompatManager ` to use ` getFromLabelState ( ) ` and ` getToLabelState ( ) `
replaced ` getServerSlogan ( ) ` with ` getServerName ( ) ` for better clarity to improve code readability and maintainability by using
added a new file TestSkeletonPredicates . java for testing skeleton predicates to facilitate testing of skeleton predicates in the compiler
refactor SelectionHighlighter to improve equality and hashcode methods to enhance code readability and maintainability by encapsulating the equals and hashCode methods
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` classes to utilize it to improve
camel - 19751 : remove @ disabledifproperty ( ` ` apache . env . name ' ' ) from camel - core
updated the condition for WaitForSingleObject in JansiWinSysTerminal . java to improve code readability and maintainability
added null checks before setting the buffer in setInBuffer method and adjusted method calls accordingly to improve code robustness and prevent potential NullPointerExceptions
updated the expected data directory path from " data / " to " data " in TestSolrDiscoveryProperties . java to ensure the correct data directory is
added platform checks for Mac OS in AutoUpdaterServerProperties . java to ensure compatibility with different operating systems
replace ` File ` with ` getAbsolutePath ( ) ` in ` Lock ` constructor and update related references to use ` lockName ` instead of ` File
updated the variable name from " android . widget . TextView " to " apps _ view " in Overview . java to improve clarity and consistency in
replaced Invocable . InvocationType with ClientDatagramEndPoint . getInvocationType in ClientDatagramEndPoint . java to improve clarity and consistency in
updated the GET _ STEP _ EXECUTIONS string format from " oreder by STEP _ EXECUTION _ ID
updated button handling logic in LwjglInput . java to handle unknown buttons to ensure correct button behavior when the button is not present
[ flink - 18135 ] [ test ] add test for reject task in taskrestreposit
refactor logging statements in multiple classes to use a static final Logger instance to improve code readability and maintainability by centralizing logger initialization
removed the ` @ public ` modifier from the ` isAfter ` method in ` SsoAccessTokenProvider ` and added a new test method in `
do n ' t delete all test on macos
added multiple ` createAlarmSuppression ` and ` deleteAlarmSuppression ` methods to ` GreetResourceMockedTest ` and ` Oci
reformatted conditional statements in JFrame . java for improved readability to enhance code readability and maintainability
added null check for the connection before executing the Statement in LibraryScanner . java to avoid potential NullPointerExceptions when connection is not available
replaced the ` metricsContext ` variable with ` super . metrics ` in the ` SuggestComponent ` class to improve code clarity and maintainability by
refactor output formatting in OCFileListFragment . java for improved readability to enhance maintainability and maintainability of the code
[ scp ] make loadkeys return an iterable instead of array .
refactor SourceVersion class implementation to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` to verify the functionality of ` MyThreadFactory ` to ensure that the ` MyThreadFactory `
refactor lockPeriod retrieval to use a separate method to improve code readability and maintainability by encapsulating method calls
added a new instance of TicketModel in EditTicketPage . java to create a new TicketModel instance
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true in FeatureFlags . java to enable dimiss
updated constructors in multiple assertion classes to include the selfType parameter to enhance type safety and avoid potential ClassCastExceptions
updated menu items in TweetActivity and added a new quote menu item in ComposeActivity to enhance user experience by allowing users to select a quote
[ java ] use interruptlock . lock ( ) instead of interruptlock . lock ( )
rename ` codecpassthrough ` to ` decryptonlycodec ` in audiocodecrenderer
added a conditional check for the result before offering the failure in ServerHTTP2StreamEndPoint to ensure that the consumer closes only if the result is
corrected the spelling of " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ fr . java to
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during execution
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter ` , and ` RestAdapterTest ` classes to
added a check for the existence of the ' components . yml ' file before creating the ' components . yml ' file to ensure that the
added a new configuration option for unique column names in HiveDriver and updated related assertions in TestJdbcDriver and TestJdbcDriver2 to ensure consistent column
do n ' t set example text / text in the voice if it ' s not select .
added a check for the session validity before throwing an IllegalStateException to ensure that an IllegalStateException is thrown when the session is not valid
hhh - 14276 remove exceptionhelper . getrootcause ( ) , it be no longer need
updated key pair generation from 256 to 255 in JceX25519Domain . java to improve randomness by reducing the number of key pairs
set the Codec to alwaysPostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41PostingsFormat
added logging for empty checkpointRange headers in CheckpointRangeHeaders . java to improve traceability of checkpoint range header handling
added support for the OAEP encryption algorithm in the OperatorHelper class to ensure proper handling of algorithm parameters for RSA / ECB / OAEP
corrected the platform name from DARWIN _ AARCH64 to MACOS _ AARCH64 in multiple Java files to ensure consistency in
added null check for builder and improved error handling in DebugSourcesResolver . java to enhance robustness by preventing potential NullPointerExceptions during URI resolution
removed unnecessary conditional checks for OS . IS _ UNIX in AbstractTest . java to simplify the code for better readability and maintainability
updated error handling in FileUploadUtils and modified related tests in ControllerConf and UploadRefreshDeleteIntegrationTest to improve error reporting and ensure generated files are properly
fix memory leak in bufferutils . newbytebuffer ( numbytes )
changed the USE _ PIPELINE _ DOWNLOADER constant from false to true in FastSyncChainDownloader . java to enable the downloader by default
updated timezone handling in SimpleDateFormat and added a new class Bug7130335 to improve accuracy of date formatting and add a test case for
changed variable declarations from ` mRollo . mState ` to ` final ` for consistency and clarity to improve code readability and maintainability by
appliance : do n ' t add default hypervisors if it ' s not set
refactor StringBuffer class implementation to improve code readability and maintainability
added a new variable ` rule . uid ` to the rule resource to ensure the correct ID is set for the rule
added a null check for the listener before calling unsubscribe in RegistryProtocol . java to avoid potential NullPointerException when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the way the JSON string is
move truffletable from private to public in instrumentbranchesphase
updated error messages from " Resource " to " No resources " in DataSourceInitializer . java and DataSourceInitializerInvokerTests . java to improve clarity of error
refactored the ` doRun ` method in ` TcpTransport ` and ` XmppTransport ` to use ` IOExceptionSupport . create ` for
refactor EventDirContext , Control , ExtendedRequest , and UnsolicitedNotification classes to improve code organization and maintainability
added a new parameter ` isUpgradeSuspended ` to the ` AmbariManagementControllerImpl ` class to include the ` effectiveClusterVersion `
removed the copyright year from FindsByCssSelector . java to clean up the code and improve maintainability
removed the declaration of wfields in Resolver . java to simplify the code and improve readability
added a constructor to OAuthProperties to set key size and signing key size in OAuthProperties to ensure consistent key size management across the application
hbase - 16464 add miss getcolumnfamilycount ( ) method to htabledescriptor . getcolumnfamilycount ( )
replaced ` AllowedResourceAliasChecker ` with ` addAliasCheck ` in ` SampleWebJspApplicationTests . java ` to simplify alias checking
refactor ObjectInputStream , ObjectOutputStream , Serializable , and package - info classes to improve code organization and maintainability
added a ` reset ( ) ` interface to the ` Cluster ` interface and modified the ` Cluster ` interface to extend ` IdleStrategy ` to
updated the incrementing of the current chunk ID in ChunkedWriter . java to ensure the current chunk ID is correctly incremented
added a new abstract class AbstractJobExecutor that implements the JobExecutor interface to facilitate the execution of job executions in the application
refactor replay logic in RecoveryStrategy to use a variable for better readability to improve code maintainability and reduce duplication
rename ` hugestaticbase ` to ` staticbase ` in ` HugeResourceTest . java ` to improve clarity and consistency in naming conventions
do n ' t use consulclient . getserviceids ( ) if there be no discovery
replaced ` Math . random ( ) ` with ` new SecureRandom ( ) . nextInt ( ) ` in ` DB . java ` to improve randomness
[ hotfix ] [ runtime ] improve error message when parsing runtime compiled method
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline the calculation of baselineStart
added a check for abstract methods in CallsRealMethods . java and updated corresponding test cases in CreatingMocksWithConstructorTest . java to
refactor checkPackageAccess method to accept a Class parameter instead of a String to improve code readability and maintainability by encapsulating class
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup in ` ContextPathPluginTest ` to enhance
refactor ContributionListPanel to use the model variable instead of dtm to improve code readability and maintainability by using a more descriptive
added support for the ` has - touch - interaction - service ` request in ` QuickstepTestInformationHandler ` and ` LauncherInstrumentation ` to
refactor connect action handling in ConnectAction . java to use Mutex . Action for thread safety to improve code readability and maintainability by reducing
updated the type of ` showRulesResult ` from ` String , ShowOptions ` to ` BuildTarget ` in multiple files to improve type safety and
added new classes ` ArrayHelper ` , ` Asserts ` , ` Comparables ` , ` Objects ` , and ` NativeRegExp ` to
added handling for HOME , END , and lines in the Less class to improve handling of line endings for better user experience
removed synchronized block for retrieving connected plots in PlotHandler . java to simplify code and improve readability by eliminating unnecessary synchronization
refactor intent creation logic in Utilities . java to improve code readability and maintainability by reducing duplication
changed the access modifier of the Roster constructor from public to package - private to restrict access to the constructor for better encapsulation
added basicConstraints extension configuration to the certGen to ensure proper handling of basic constraints in the certificate generation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to verify the behavior of the ` fixed - nested -
removed redundant multiValued ( ) checks for precisionStep in TrieDateField and TrieField classes to simplify code and improve readability by eliminating unnecessary
removed the TaskbarStateHandler class and updated its usage in BaseQuickstepLauncher to streamline state management and improve code maintainability
added a new file ` ArrayLength . java ` that tests class fields and fields to verify the behavior of the ` getDeclaredFields ( ) ` method
fix race condition in hbasestartit . destroyforcibly ( )
refactored the save method to use @ ApplicationScoped and added a init method to improve code readability and maintainability by encapsulating
updated assertions in Safepoint . java to use greater than or equal to ensure that the value is valid before proceeding
updated thread name field from " [ C " to " Ljava / lang / String ; " in OopUtilities . java to ensure compatibility with
updated the DEFAULT _ RAND _ SEED constant from currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hnsw
pdfbox - 4071 : make stroke object a protected field , a suggest by valerybokov
refactored the ` expandDynamicStar ` method to use a dedicated method ` expandDynamicStar ` to improve code readability and maintainability by
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class and modified the constructor in ` Comment2000 ` to
added import for Messages and set the status code to 141 in HTTPServer . java to ensure proper handling of status warnings in the application
updated event modifiers from SHIFT _ MASK and CTRL _ MASK to DOWN _ DOWN _ MASK across multiple Java files to
make AMD64 countleadingzerosnode use cycles _ 3 instead of cycles _ 6
add a null check for contentTypeStr in EntityParser and add a test case in AS2ClientManagerIT to ensure proper handling of null content type
refactor Locale class implementation to improve code readability and maintainability
added a ` clearLog ` method to ` ErrorConsoleController ` , ` LogMessages ` , and ` clearLog ` methods in ` ErrorConsole
corrected the spelling of " mRecentsAnimationController " to " mRecentsAnimationController " in RecentsView . java to ensure
replaced ` ConsolePlayer ` with ` LocaleHolder ` and modified message handling methods to use ` LocaleHolder ` instead of ` ConsolePlayer ` to improve
added connection pooling support to ConcurrentBatchIdentifierTest , SequenceOptimizerIdentifierTest , and AbstractTest classes to enhance test reliability and ensure proper resource management
added support for OperaDriver in DefaultDriverSessions to enhance the functionality of OperaDriver in the application
changed exception handling from MalformedURLException to Exception in ManageJournalsPanel . java to improve error reporting and provide clearer feedback on download failures
added multiple new product types to LifxProduct . java to enhance the functionality of the Lifx product
updated async request handling in OverseerCollectionProcessor . java and added async request setup in CollectionsAPIAsyncDistributedZkTest . java to improve
refactor PostgresDatabase and PostgresDatabaseTest to use assertPrimaryKeyName method instead of assertPrimaryKeyName method to improve code readability and maintain
updated LogPanel initialization to use ` refid ` instead of ` null ` for ` repositoryName ` to ensure proper handling of empty object IDs
update bone rotation to use XYZ instead of UNIT _ Y in SkeletonInterBoneWire . java to ensure correct positioning of bone
added a browserDestroy method to AndroidImplementation . java to stop the AndroidBrowserComponent when the browser is destroyed to ensure proper resource management and prevent potential
added a call to waitForActiveCollection in AutoScalingHandlerTest . java to ensure that the test only runs on the active collection before proceeding
refactor ScreenTerminal and Tmux classes to improve attribute assignment logic to ensure correct rounding behavior for different terminal types
updated the controller state checks in SoftResetAction . java to use ControllerState . IDLE , HOLD , ALARM , and ALARM to
disable on - disc stream cache on texture pack reloading .
added conditional logic to retrieve the parent folder in Request . java and RequestV2 . java to ensure proper retrieval of the parent folder based on the
[ hotfix ] [ network ] fix typo in networkofferingvo
replaced ` temp . deleteOnExit ( ) ` with ` super . close ( ) ` in the ` FileOutputStream ` class to ensure proper resource management and
added error handling for RestClientException in StandardGitHubRepository . java to improve robustness by handling unauthorized requests gracefully
log4j2 - 129 add ` ` getOriginal ( ) ' ' method to ` ` messagefactory2adapter ' '
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to
updated regex pattern from " [ 0 - 9 ] { 1 , 2 } " to " [ 0 - 9 ] { 1 , 3 } "
updated initial delay and dismiss delay settings in ExtractionModelFrame . java to ensure proper handling of exceptions and improve user experience
refactor target graph creation to include passedInTargetsSet parameter to improve code readability and maintainability by reducing duplication
added timezone configuration and assertions in TimeTest . java to ensure correct formatting of time zones and improve test coverage
refactor MediaSessionConnector for improved readability to enhance maintainability and readability of the code
camel - 14284 : camel - http11io : use endpoint . handler . getsslimplementation ( ) . getsslimplementation ( )
updated accuracy display string formatting in GpsLoggingService . java to improve readability and maintainability of the code
added a new constant ` SPECIFIC _ PARAM _ FUTURES _ ENABLED ` and modified ` BinanceTradeService ` to conditionally
fixed typo in admin account management servlet
added a method to set the accept queue size in ThriftHttpCLIService to ensure proper handling of queue sizes in the connector
replaced ` getClass ( ) . getName ( ) ` with ` getProperty ( PROPERTY _ DISABLE _ WATCHER ) ` in ` PathWatcher
http : / / issues . apache . org / jira / browse / amq - 4253 - add support for ssl in jmsfactory
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated error handling in ` TestWindowFunctions . java
updated the calculation of ` duration ` to use ` total - previousTotal ` instead of ` total - previousTotal ` to ensure accurate calculation of the
[ java ] fix handling of empty Javadoc comment in nodewithmojo .
replaced the ` reserveMemory ` method with a ` isOsx ` method and updated its usage in ` WhiteBox . java ` to improve
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
hbase - 15224 hbaseadmin : make procid protected to allow access to hbaseadmin
camel - 14284 : camel - cxf : add a constructor to cxfservicefactorybean to make it easy to configure the service class
refactor YAMLChangeLogSerializer to use a container map for database change log output to improve code readability and maintainability by using a container map
replaced ` println ( ) ` with ` print ( ' \ n ' ) ` in ` SchemaPrinter . java ` to improve readability and maintain
refactor player regeneration logic in DebugRoadRegen and SchematicHandler classes to improve code readability and maintainability by reducing duplication
updated the instantiation of HomeFragmentNowPlayingRow and HomeFragmentFooterRow from getContext ( ) to getActivity ( ) to ensure the correct activity is used
added " native " to multiple @ GeneratedValue annotations across multiple classes to ensure compatibility with the latest version of the application
removed the ` country ` parameter from the ` getSystemTimeZoneID ` method to simplify the method signature and improve code readability
updated BZip2Codec to include position ( ) and remaining ( ) parameters and modified ByteBuffer initialization in TestBZip2Codec to improve data handling
do n ' t show console log when data param show log level
added a new constant ` VALUE _ TYPE _ EMPTY ` and modified the ` create ` method in ` Type ` and ` Value ` classes to improve
replace ` = = ` with ` equals ` for group comparisons in ` GroupManager . java ` to improve code readability and maintainability by
refactor Liquibase and LiquibaseDropAll classes to improve code readability and maintainability
refactor SimplexNoise class to improve code readability and maintainability
added a static method ` newInstanceExact ` to ` TargetGraphFactory ` and updated related tests in ` VersionedTargetGraphBuilderTest ` to improve
[ hotfix ] [ table - common ] rename getminrowcompactedsize ( ) to getminrowsize ( )
added a new ` ArtifactVersionAdapter ` class and updated ` GsonBuilder ` to use it to enhance version handling capabilities and improve code clarity
added a boolean flag ` hasCurrent ` to control the behavior of ` sobj ` based on ` hasCurrent ` state to ensure proper handling of
refactor file handling in FileUploader to use OCFile instead of storageManager to improve clarity and maintainability of file management logic
added a new file ` UTF8ReaderBug . java ` that implements XML parsing for UTF - 8 characters to ensure proper handling of special characters in
added unit test base on user forum issue
updated the ` buildSubscriptionStreams2 ` and ` buildSubscriptionStreams2 ` from ` ethbtc ` to ` ethb
added a method ` resetAllocation ( ) ` to ` Wrapper ` and initialized initial and max allocation in ` SimpleParallelizer ` to ensure proper allocation
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct calls to ` configProps ` with ` sysProps ` in ` Agent . java ` and added a new test class ` AgentCME
refactor ModelUtils to improve code organization to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert class implementation to improve code readability and maintainability
updated width and height calculations in Legend . java to ensure width and height are adjusted only when there are labels to avoid potential errors
added ` testDelay ` and ` testAbort ` methods to ` CodeFirstSpringmvcIntf ` , ` TestResponse ` , and `
updated the way term frequencies are retrieved in MoreLikeThis . java to improve readability and maintainability of the code
replaced the dependency on ` BuildTargetSourcePath ` with a direct instantiation of ` BuildTargetSourcePath ` to simplify the code and improve readability
added a flag to disable versioning in CommandDownloadLatest . java to improve user experience by providing feedback when versioning is disabled
changed ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` in ` MediaFolder ` and ` MediaProvider `
updated argument name from " - b " to " - b " in AidlStep . java and modified string formatting in GenAidlTest
add test case for issue #79
added a TODO comment to the FakeHttpLayer class to clarify the purpose of the test
refactored candidate handling in EmbeddedLeaderService to use revokeLeadership ( ) instead of handleError ( cause ) to improve code readability and maintain
refactor CompositeDiscoveryClient to use Single instead of Stream to improve performance and readability of the code
updated configuration retrieval from ` configuration ` to ` configuration ` in ` ParallelUniverse . java ` and ` BootstrapTest . java ` to ensure consistency in
[ hotfix ] [ configuration ] add description for job computation failure
refactor ` updateNoWidgetsView ` method to use ` mTabsView ` instead of ` updateNoWidgetsView ` to improve code
added exception handling for WstxInputFactory and WstxOutputFactory in XmlUtil . java and updated related test assertions in MultiVersionXml
refactor AuditAliasCommandIntegrationTest to use a setup method to improve code readability and maintainability by centralizing workspace initialization
removed unnecessary logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and improve readability by
camel - 14447 : camel - cxf : disable test that do not support invocation without parameter
added error handling for periodical refresh failures in CachedStore . java to improve robustness by logging errors when periodical refresh fails
refactor ChainingAuditPrincipalIdProvider to use RequiredArgsConstructor and add a method to add providers to improve code readability and maintainability by
added a new method ` checkDefaultBackgroundFills ` in ` HSSFCellStyle ` and refactored color handling in ` HS
refactor ZonedDateTimeFormatterBenchmark to improve code readability to enhance maintainability and readability of the code
refactored buffer update logic in DistributedUpdateProcessor to improve clarity and functionality to enhance code readability and maintainability by centralizing buffer update
added a condition to check if the motor ' s stage is null before proceeding to ensure proper handling of null values in the simulation
updated the ` getItem ` method to accept a ` AllAllowed ` parameter and modified the ` getItem ` method to accept a ` AllAllowed ` parameter
refactor ExtendedMasterSecretExtension to improve code organization to enhance maintainability and readability of the code
changed the declaration of the ` processor ` variable from package - private to final in ` AndroidInput . java ` to ensure immutability of the
added a listener to handle end - of - stream failures in WritableKeyProcessor to improve error handling for stream writing failures
added " CUBE " to MySQLDatabase . java to enhance compatibility with MySQL ' s CUBE database
added a try - catch block around the deletion process in TestReplicationHandler . java to handle potential IOException to improve robustness by handling potential IOExceptions
rename ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update related references to improve clarity and consistency in
refactor DefaultOkHttpClientFactoryTest to use reflection for connection and follow - redirects instead of reflection to improve code readability and maintainability by
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added null check for os in RawMessageContentRedirectInterceptor . java to avoid potential NullPointerExceptions when os is null
make sure we do n ' t need to set widget size for av .
added a new parameter ` fromCli ` to the ` jailerMain ` constructor and modified the ` progressListener ` method to include a ` from
refactor HttpRequest class to improve code organization to enhance maintainability and readability of the code
added a new putInt ( " _ unread " ) method to the sharedPreferences in TalonPullNotificationService . java to ensure that unread notifications are
added a condition to check if the parent object is an instance of Kind . Object to ensure correct handling of null values in the object
refactor Box2DTest , Box2DTest , Pong , OrthographicCamera , and OrthographicCamera classes to improve memory
refactor layout manager initialization in ViewPostDetailFragment to improve code readability and maintainability by reducing duplication
changed log level from trace to warn in CLIService . java to improve logging clarity by using a more descriptive variable name
added debug output for method instance name and flags check in JimpleBodyBuilder . java to improve visibility of method instance flags for abstract methods
ggb - 10plus : do n ' t show textfield when mouse click in IE10plus
updated the ` getNotificationUsers ` method to accept a ` deviceId ` parameter and modified the ` getNotificationUsers ` method to include ` device
updated the base URL from " droppr . org / srtm . v4 . 1 / 6 _ 5x5 _ TIFs
updated MotifFileChooserUI to remove property change listeners and added a new test class for bug6520101 to improve user experience by ensuring
changed return type of handle methods from void to boolean in multiple UI classes to ensure proper handling of HTTP requests in the UI
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods to use ` orElseThrow ` instead of ` fromNullable ` to
added visibility of the transportSpinner in HostListActivity to hide the transport spinner when making shortcuts
added null checks for attributes _ field in Attr . java and introduced new classes T7043371 . java and T7073477 .
replaced ` void ` with ` boolean ` for the ` backPressed ` method in multiple fragments to improve code readability and maintainability by avoiding unnecessary
added a constant for the long view index enabled attribute in QueryServices and updated related classes to utilize it to enable dynamic retrieval of view index data
updated the append method from " V " to " v " in SDRTrunk . java to ensure consistent formatting of the output
replaced ` with ` StringUtils . cleanPath ( ) ` method with ` StringUtils . cleanPath ( ) ` method in ` PrivateKeyParserTests . java
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriter configuration to use TEST _ VERSION _ CURRENT instead of Version . LUCENE _ 40 to ensure compatibility with the latest version
hbase - 16424 importtsv : disable column family check when no strict column family be specify
[ java ] use subscriptionid instead of logrecordingchannel .
replace direct calls to ` startActivity ` with ` startActivitySafely ` in ` Launcher . java ` to improve code readability and maintainability by
added a condition to return early if the number of nodes in the JSON node to ensure proper handling of empty JSON nodes in the PoloniexStreaming
refactor Procedure class to improve code organization to enhance maintainability and readability of the code
added Locale . getDefault ( ) and getSystemClassLoader ( ) parameters to the applyResourceBundle method call to ensure proper classloader usage for resource bundles
[ j2kt ] add normalizearraycreationskotlin to the backend
added checks for mincount in PerSegmentSingleValuedFaceting . java and modified counting logic in PerSegmentSingleValuedFaceting . java
updated authorList assignment to use ` Objects . firstNonNull ` instead of ` Optional . fromNullable ` and ` Objects . fromNullable `
added a new module - info . java file OSGiTest . java and implemented a new OSGsonTest . java file to verify the
[ hotfix ] [ runtime ] fix regression in controllerserviceprovider . enablerefencingservicesgraph ( )
hbase - 16446 htable . setautoflush ( false ) do n ' t set autoflush to false .
fix findbugs warning in java . lang . reflect . class
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and a corresponding test in ` SimpleFeatureImplTest ` to ensure that user
removed the ` throws HiveException ` declaration from several method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify method signatures
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline logging behavior for better performance
added a new file ` InJavaSourceSet . java ` and modified ` UsesJavaVersion . java ` to utilize ` JavaSourceSet
updated the resource path for the gdalinfo file in TestGDALParser . java to ensure proper loading of gdalinfo files
added a static method ` createGetter ` to the ` ReflectionHelper ` class to provide a way to create a getter based on a specified attribute
removed the conditional check for external storage in DirectUpload . java to simplify the code and improve readability
added a new constant ` INDEXER _ NO _ COMMIT ` to ` IndexerMapReduce ` , ` IndexerOutputFormat ` , and `
api : fix npe when createvolume fail due to null snapshotid
added a null check for the content variable in ToHtml . java and updated assertions in BaseTestCellComment . java to ensure that the content is
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` LocalDate ` classes to
added a new test class ` Issue382 ` to handle specific error types to ensure proper handling of specific error types in the application
removed the signum method and simplified the return statement in PositionUtils . java to improve code readability and maintainability by reducing redundancy
added a condition to hide the text field when a condition is met to improve user interface responsiveness by preventing the text field from being displayed
fix consistency check to work with ctreference
updated the method call in XpiDriverService to use a lambda expression to improve readability and maintainability of the code
added a new class ` LiquidBlock ` to extend ` BucketPickup ` and modified ` FlowingFluid ` to implement ` BucketPickup
[ java ] do n ' t fail test if there be an exception in the log .
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure compatibility with the latest time zone
refactor DistinctErrorLog to simplify variable declarations and improve readability to enhance code readability and maintainability by reducing redundancy
updated the ` TEST _ NIGHTLY ` boolean values from ` false ` to ` Nightly . class . getAnnotation ( TestGroup .
refactored the ` createLogger ` method to ` getOrCreateLogger ` and added a null check for the logger to improve code robustness and ensure
add denyaccess ( class , field , proxy ) to deny access .
replace direct calls to ` getRGB ` and ` setRGB ` with ` getDataElements ` and ` setDataElements ` in ` PGraphics2 . java
updated verifyAndAddTransactionalProperties method call to include partition ' s sd to ensure proper handling of transactional properties in Hive operations
added a new variable ` mLastOverlaySroll ` and modified the condition for the ` shouldScrollOverlay ` and ` shouldZeroOverlay ` to
added new classes UnmodifiableBatchBuilderImpl , UnmodifiableBatchBuilderInitiator , and NonBatchingBatch for batch processing to enhance batch management
replace calls to ` AnalysisError . shouldNotReachHere ( ) ` with ` AnalysisError . shouldNotReachHereUnexpectedInput ( )
added a test for spying on a class in PartialMockingRetainsStateTest . java and created a new MockWithStaticStateDemo
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to verify SQL parsing and deparsing
added null check for ugi and improved error handling in SecurityUtil . java to enhance robustness by preventing potential NullPointerExceptions
updated error handling in OpenALMusic and OpenALMusic classes to use a variable for the error code to improve code readability and maintainability by
camel - 14284 : deprecate endpointhelper . resolveparameter in favor of endpointhelper . resolveparameter ( )
refactor calciteliteral creation logic to improve precision and scale handling to enhance clarity and maintainability of the code
fix potential npe in webauthnmultifactordeviceprovideraction
updated the assertion in WalletTestAccount003 . java to use Long . toString ( now ) instead of String . toString ( ) to ensure
refactored selection logic in BasicFrame and DesignPanel classes to use MouseAdapter for better user interaction to improve code readability and maintainability by
added a new parameter ` longRunningTime ` to the ` Args ` class to allow configuration of the ` -- long - running - time ` parameter
updated conditional checks in ` FindRefComparison ` and added a new class ` Ideas _ 2012 _ 05 _ 21 ` in ` RefComparison
updated import statements and method signatures in HttpServerProvider , HttpServerProvider , and FtpClientProvider classes to improve code clarity and maintainability by standardizing
[ gML3 ] use ` ` toplainstring ( ) ' ' instead of ` ` tostring ( ) ' '
updated assertion messages in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the code
added a condition to check if the reference database is equal to the comparison database to ensure that the comparison logic correctly handles cases where the comparison database is
refactor Android constant handling in IjProjectTemplateDataPreparer to improve code readability and maintainability by reducing duplication
replaced calls to ` assertEquals ` with ` await ( ) ` in ` DuplicateCookieTest . java ` and ` SessionRenewTest . java `
added user arguments to the ImmutableMap builder in ChromeTraceBuildListener and updated related tests to enhance debugging capabilities and improve test coverage
[ gr - 16335 ] fix cache on native library .
corrected a typo in the trace log message in HepPlanner . java to improve code readability and maintainability
added a new file TheRockMetaDataDemo . java to demonstrate the usage of therock exchange metadata to provide a simpler example of therock exchange
changed class names from ` FloatingDecimal ` and ` FormattedFloatingDecimal ` to ` strictfp ` and added a test for strictness
removed the unparseIdentifier method call from columnNamesBuilder to simplify the code and improve readability
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified ` contextFreeTemplate ` methods in ` BlockStatement
added a check for non - synthetic static class visibility in InstantiateStaticClass . java and implemented a test method in Bug1282 . java to ensure
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the code by
added handling for pending RescueInfo in IkStepDefinition . java to improve safety and error handling during rescue operations
removed the ` final ` modifier from several ` equals ` and ` hashCode ` methods across multiple classes to improve code clarity and maintainability by standardizing
added a static method ` getSyncLevel ` to the ` SyncLevel ` enum and implemented a method to retrieve the default sync level to improve code
[ hotfix ] [ test ] use try - with - resources for jedis . clientpause ( )
added a condition to check if the slice state is not RECOVERY to ensure that only valid slice states are processed
updated the method call from ` create ` to ` create ` in ` opencv _ core . java ` to improve code readability and maintainability
added SDKPath field to AppleBundle and SwiftStdlibStep classes and updated ProcessExecutorParams to accept a ExecutionContext parameter to enhance flexibility in handling
[ hotfix ] [ runtime ] remove writeLock from blob cleanup task
[ hotfix ] [ network ] fix typo in networkmanagerimpl . java
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion of sort and union data types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of row
refactor BetterBlockPos class to improve code readability to enhance maintainability and readability of the code
updated the method to retrieve the proxy from the class loader instead of directly accessing the proxy to ensure the correct class loader is used for proxy retrieval
rename ` autoConnect ` to ` showNightlyBuild ` for clarity and consistency to improve code readability and maintainability by centralizing the
added OracleDatabase support and modified regex patterns in LoggingExecutor and JdbcExecutor to enhance compatibility with Oracle databases and improve code readability
added a new boolean constant ` UNKNOWN _ VALUES _ ARE _ NSP ` and defined it in ` IsNullValueAnalysisFeatures . java ` to
updated port handling in MainTest . java to use a string representation of the port to improve clarity and maintainability of the test response
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and SLIDER _ MARGIN
added support for multifactor authentication provider in DuoSecurityMultifactorProviderBypassConfiguration to enhance security by allowing multifactor authentication providers
updated method signatures in MaxRectsPacker . java for consistency to improve code readability and maintainability
updated import statements in KContainer , KContainer , KnowledgeBuilderFactory , and StringKeyStringValueMap classes to improve code clarity and maintainability by
added helpPage property and its getter / setter methods in PMS . java and refactored helpPage initialization in HelpTab . java to improve
added GeocodeProviderFactory and Constants interfaces to handle Omni Notes Beta and Prefs functionality to improve code organization and maintainability by encaps
removed the import of CharArraySet from LuceneAnalyzerUtil and LuceneTokenizer classes to streamline the code by eliminating unnecessary dependencies
refactored exception handling in OptionTest and ResourceManagerImplTest to use a try - catch block to improve code readability and maintainability by reducing
updated GATEWAY _ SERVER _ ID from " GATEWAY _ SERVER _ ID " to " GATEWAY _
updated condition checks in SegmentsInfoRequestHandler . java and added new test cases in CollectionsAPISolrJTest . java to improve code readability and
updated the calculation of numPredictiveAppCols based on device type to ensure correct number of apps based on device type
added a method ` hasScalarSubqueryInput ` to check if a subquery input is a scalar subquery to improve code readability and maintain
add a blockcontainer to make the buildcraft work with the api proxy .
refactor gravity and height assignment in DeviceProfile . java to use FrameLayout and LinearLayout for better layout management to improve code readability and maintainability
replace ` . run ( ) ` with ` . start ( ) ` in ` YahooSession . java ` to ensure proper handling of session execution
updated the handling of the ` standAloneClient ` flag in ` HiveMetaStore ` and ` HiveMetaStoreClient ` classes to ensure proper
updated getDisplayScript method to use Category . DISPLAY instead of getDefault to ensure consistent display script usage across different locales
removed static imports from the CORE _ NAME _ PROP variable in Replica . java to simplify code and improve readability
replaced ThreadLocalRandom with a new Random instance in StoreDirectTest . java to simplify the code and improve readability by using a more descriptive
added a check for launcher readiness before backuping favorites in LauncherBackupHelper . java to ensure that backup operations only occur when the launcher is
updated error messages in Cell . java for clarity to improve readability and maintainability of error messages
added unit test base on user forum issue
rename variable ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code organization to enhance maintainability and readability of the code
refactor FileMessageHistoryTest to use TemporaryFolder instead of a hardcoded file path to improve code readability and maintainability by using
added logging levels for express , reflections , and jetty in Grasscutter . java to improve logging clarity and maintainability of the code
changed the visibility of ` highlightCnstScrRngQuery ` from non - static to static in ` SpanScorer ` and `
updated workspace state checks in Launcher and Workspace classes to include NORMAL state to ensure proper handling of workspace state changes based on the workspace state
refactor multiple assertion classes for improved readability to enhance maintainability and readability of the codebase
updated conditional checks in SnippetTemplate . java to use ` args . cacheable ` instead of ` args . info . notifyNewTemplate ( )
updated variable names from " entity " and " config " to " core " across multiple classes to improve clarity and maintainability of the codebase
updated the CREATE TABLE measurement to include primary key to ensure the correctness of the primary key retrieval in the database metadata
rename -- permissions - config - path to -- permissions - config - file
removed redundant null checks and simplified session creation logic in HttpSessionContextIntegrationFilter . java to improve code readability and maintainability by reducing redundancy
added a new file TestIfWithDeadRegion . java that implements a Supplier for string manipulation to facilitate testing of dead regions in the compilation process
corrected the spelling of " USD " to " USD " in the DependencyParser and DependencyParser classes to ensure consistency in naming convention
replaced ` testConcurrentAccess ( ) ` with ` enable ( ) ` and ` disable ( ) ` methods in ` SnowflakeIdGeneratorTest
added a static UI flag and modified hideToastBar method to conditionally hide the toast bar based on shared preferences to enhance user experience by allowing
replaced the implementation of the Privilege class with a lambda expression to ensure proper resource management and avoid potential memory leaks
refactor parameter handling in SamlRedirectLogoutHandler and WhitelistLogoutHandler to use setParameterIfAbsent for better readability to improve code maintain
updated JOptionPane messages to use localized strings instead of hardcoded strings to improve readability and maintainability of the code
added new MIME type assertions in TestMimeTypes . java to ensure correct handling of XML file types in the application
updated Runner and FixJava classes to use FixJava for glue loading and improved logging message formatting to enhance code readability and maintainability by using
camel - 14247 : camel - eip : fix xml output for camel - eip
[ hotfix ] [ table - planner - v2 ] skip schema check when the endpoint be remove .
added debug logging statements and refactored the setAudioPlaybackDevice method calls in DeviceConfiguration . java to improve code readability and maintainability by
added a WebsocketConfig to the ShenyuConfig class and updated the reactorNettyWebSocketClient method to accept a maximum frame payload size to
added ISuiteListener interface and modified CacheValidationListener to implement ISuiteListener and implement IInvokedMethodListener to enhance testing capabilities and ensure proper
added a check for empty content length before adding it to the document to ensure that the content length is only added if it is not empty
[ hotfix ] [ solver ] fix concurrentmodificationexception in defaultsolverjob
refactor ` createTimeseries ` method into a separate method ` internalCreateTimeseries ` to improve code readability and maintainability by encap
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide access to the result of the ` check ` method
changed access modifiers of methods in ShadowActivityManager , ShadowSettings , and ShadowTypeface classes from public to protected to allow subclasses to access these methods
do n ' t create account owner if the state be reserved .
updated HttpParser to handle RFC2616 and removed unused test cases to streamline code and improve readability by reducing redundancy
replaced direct calls to ` currentThread ( ) . completeInitialization ( ) ` with a new method ` threadCompleteInitialization ( ) ` in ` J9
added a method to create an external storage directory in ShadowEnvironment and created a new test class EnvironmentTest to ensure that the external storage state is correctly
do n ' t ignore mvel type coercion after mvel 2 . x
updated formatting and formatting in LoggingConfig . java to improve code readability and maintain consistency in formatting
added exception message to the log message in ActionNode . java to improve debugging by providing more context about the exception
added a check for the first " tel : " in the toNumber string in SipUtil . java to ensure that the correct number is processed
refactor sharedWithMeIconV visibility logic in FileListListAdapter . java to improve code readability and maintainability
deprecated the deprecated HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated the TestTxnCommands3 . java file
updated the ` ExecuteStatementOperation ` and ` Operation ` classes to include a ` runInBackground ` parameter and modified the ` QUERYID `
refactor BTCMarketsStreamingAdapters and BTCMarketsWebSocketSubscriptionMessage to use Arrays instead of Lists to improve code readability
updated the method call from ` getName ( ) ` to ` getTypeName ( ) ` in ` OGRDataStoreTest . java ` to ensure accurate
removed the onErrorInStep method from StepListenerSupport to streamline error handling by eliminating unnecessary method calls
refactor Wallet class to improve code readability and maintainability
camel - 14284 : camel - netty - http : fix camel - netty - http and camel - netty - http - http - http -
remove system . out . println from testnonblockingapi
added a check to return false if the row exceeds the size of the connection list to ensure that the code does not exceed the maximum number of connection
add a rule with same name as enclosing class to make sure that method with the same name be apply to the class .
added support for ExtendedPlatformComponent in ManagementFactory and created a new ExtendedPlatformComponent class to enhance monitoring and management capabilities for better platform management
updated SQL string replacement logic in BasicQueryTest . java to ensure proper handling of special characters in SQL queries
updated URLs in multiple test files to use the correct package structure to ensure compatibility with the latest DTO structure
refactor TextEscapeUtils to improve code readability to enhance maintainability and readability of the code
added a filter parameter to the AbstractSpatialFieldType class and modified the FilteredQuery instantiation in TestSolr4Spatial . java to improve query performance by
added a call to ` updateResultsEmailSent ` in ` GpsLoggingService . java ` and updated the ` AutoEmailHelper . java `
replaced ArrayList with HashSet for inlinks and inlinks in Inlinks and LinkDb classes to improve performance and maintainability of the code
[ hotfix ] [ sndfri ] use date instead of timestamp when stop scan
modified the ` testFilterForPartition ` method to accept a boolean parameter ` filterAtServer ` to enable blocking mode for partition retrieval based on server
added Abandoned to the TicketModel and updated related constants in TicketBasePage , TicketBasePage , and TicketBase
updated columnAliasPrefix initialization from " c " to " columnAliasPrefix " in multiple platform classes to ensure proper initialization of columnAliasPrefix in the
replaced ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowRecordReader ` classes to improve data
add support for 32 - bit jvm on a 64 - bit system .
refactor conditional checks in PdfCopy . java for consistency to improve code readability and maintainability
added " daemon " option to the RESET _ ALARM and " dAEMON " option and implemented daemon mode initialization in TerminalClient to enhance
added a new file FlushIndexTask . java that extends PerfTask to manage the flushing of the index in the benchmarking process
[ hotfix ] [ table - common ] add estimate size to memtable . flush ( )
added support for SEASONS output check in MediaLibraryFolder . java to enhance functionality by allowing additional output types
added a new file LocalSocketAddress . java that implements a test for IPv6 loopback addresses to verify the availability of IPv6 loopback addresses
refactor grid size steps and steps in GridSizeMigrationTask . java to improve code readability and maintainability
updated method calls from ` getName ( ) ` to ` getName ( ) ` and ` getField ( ) ` in ` SerializerPojo . java ` to
added a ` READ _ ONLY ` constant and modified the ` commit ` and ` commit ` methods in ` Context . java ` to allow for
refactor LookAndFeelCommand class to improve code organization to enhance maintainability and readability of the code
updated the calculation of lastRunEnd in BlockBoxing . java to use ceiling instead of floor to ensure correct positioning of the last run end
added EOFException and EofException imports and updated assertions in GracefulStopTest . java to ensure proper handling of EOFExceptions in the
replaced lock - based access with a synchronized method ` remove ` in ` NetJavaImpl . java ` to improve code readability and maintainability by
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
updated account asset optimization handling in DynamicPropertiesStore . java to ensure proper handling of account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC and initialized it to 0 in VM . java to provide a default value for
added validation for contract protocol in TransactionCapsule . java to ensure proper error handling for invalid contract protocols
[ net . sourceforge . pmd . rules . strictexception ] remove unused exceptiontypecheck
updated resource path from " file " to " en / " in HelpContent . java to improve localization handling and provide clearer feedback when no localization
added a new file ` ProcessorInfo . java ` that implements a method to determine the number of available processors to provide a way to determine processor information
added a new ` stylesheet ` option to the ` PrintingBugReporter ` class and modified the ` xslt ` method to utilize it to
[ logback ] make logbackloggerlogger . logbackxmllocation final
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to use long variables instead of Collection to improve code readability and maintainability by encap
updated SleuthTagPropagationAutoConfiguration to use conditional property for whitelisted - keys and added a new test method to ensure proper handling of
refactor rust depType assignment logic in RustCompileUtils . java to use switch - case structure to improve code readability and maintainability
added a queryParams parameter to the oauth2LoginLinks method and updated the oauth2LoginLinks method to include an additional parameter for error handling to enhance
hbase - 16432 hstore . getfirstkey ( ) should return first KV instead of splitkey ( hfilereader )
hhh - 16464 deprecate generationtiming . isalways ( ) in favor of generationtiming . isalways ( )
added a parameterized test method ` testLayerNormNan ` to ` TestLayerOpValidation ` to verify the behavior of ` nn . layerNorm
refactor ` showShareFile ` method to ` getFileOperationsHelper ( ) ` across multiple activities to utilize ` getFileOperationsHelper ( ) `
added a new file ` LiquibaseUpdateMojoExecutionTest . java ` to test the functionality of ` LiquibaseUpdateMojoExecutionTest `
updated the method to convert the proxyType from a string to uppercase to ensure consistent handling of the proxy type in the application
add a new mod _ MinecraftForge class to make things Initialize to ensure proper initialization of the MinecraftForge instance
added logic to cache all table columns in JdbcDatabaseSnapshot . java to improve performance by avoiding unnecessary cache operations
added a new Container instance and a label for the dash background in CSSBorderTest . java to enhance the visual appearance of the CSS border in the
added ` @ ConditionalOnClass ( RetryTemplate . class ) ` to ` RetryAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` classes , and
updated the superclass constructor from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure the correct parent is used for
replaced ` System . nanoTime ( ) ` with ` System . currentTimeMillis ( ) ` in ` TASK _ NAME _ SEPARATOR ` to ensure
added logging preconditions for AddServiceRequest in ServiceResourceProvider . java to improve error handling and provide clearer error messages
fix indexdatabase . isindexversionedfilesonly ( ) to return false instead of false
ggbround ( x ) do n ' t work if the x [ 0 ] be set to 2 .
refactor AnonCipherWithWantClientAuth class implementation to improve code readability and maintainability
added multiple @ Deprecated annotations to several methods in ProducerTemplate . java to indicate that these methods are outdated and should no longer be used
refactor JLayer class to improve code organization to enhance maintainability and readability of the code
fix flaky test in evictiontest
updated method names from ` encodeInternal ` to ` saltedPass ` in ` Md5PasswordEncoder . java ` to improve clarity and consistency in
replaced ` viewTreeObserver ` with ` mTaskRecyclerView ` ' s ` addOnGlobalLayoutListener ` and ` removeOnGlobalLayoutListener `
refactor Response class to improve code organization to enhance maintainability and readability of the code
corrected the variable name from " MIN _ VALUE " to " MAX _ VALUE " in SSTableMetadata . java to ensure consistency in naming convention
make the security panel more responsive to the user .
added null checks for ` settings . compressReplies ` in ` TweetActivity . java ` and ` TimelineArrayAdapter . java ` to
added ` toString ( ) ` and ` equals ( ) ` methods to ` HitbtcBalance ` and ` HitbtcAdaptersTest `
updated SQL code generation to use a CharSequence column instead of a hardcoded value to improve readability and maintainability of the code
change return value from ` s ` to ` addrs . toString ( ) ` in ` RetriesExhaustedWithDetailsException . java `
added OpenCookie import and refactored file closing logic in EditGcodeFile . java to improve code readability and maintainability by using a
updated imports from ` org . apache . http . impl . http . client5 ` to ` org . apache . hc . client5 `
refactor energy removal logic in PipePowerWood . java to ensure energy is only calculated when available to improve code readability and maintainability by
added a check to delete temporary output files in SessionState . java to ensure temporary output files are deleted when necessary
changed the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for trades in
added checks for expiration values in ReplayProcessor , ReplaySubject , and ReplaySubject classes to ensure correct handling of expired state values
updated the expectedCitation string format from " [ 1 ] " to " [ 1 ] " in CitationStyleGeneratorTest . java
updated video HDR format handling in MediaTableFiles . java to use constants instead of a try - with - resources statement to improve code readability
add a feature . show _ definitions _ in _ overview feature feature to show only definition in the equation .
added a null check for the component in SIPCommTextFieldUI to avoid potential NullPointerExceptions when the component is null
hbase - 16464 add caching for metadata scan in metareader when startrow be null .
updated the init script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql
refactor Math and StrictMath classes for improved code organization to enhance maintainability and readability of the code
added a new boolean flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable transient taskbar functionality in the application
refactor AccessExecution , AccessExecutionVertex , ArchivedExecution , and ArchivedExecutionVertex classes to improve code organization and maintainability
added a conditional check to set density in IOSGraphics to ensure density is only set when the scale is 3
rename ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
added a new Exception ( new Exception ( ) ) to the log message in RegionStateStore . java to improve error handling by providing a clearer
refactored assertTrueEventually method to use a lambda expression to improve readability and maintainability of the code
updated warning log messages and refactored local async context handling in AsyncHttpConnection and LocalAsyncContextTest classes to improve clarity of warning messages and
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to enhance functionality by allowing the ` showArrow ` flag
added a check for MVStore before setting lock mode in Database . java and removed a test method in TestRowLocks . java to ensure
skip linux / amd64 only test for linux / amd64
added type checks for Integer and IntValue in Scalars . java to ensure proper handling of integer and integer input types
updated error handling in CreateTableStatement to check for empty keys before throwing an InvalidRequestException to improve clarity of error reporting for missing PRIMARY KEY
added conditional checks for LMP drawables in CellLayout , Hotseat , and Launcher classes to ensure correct drawable resources are displayed based on the
[ hotfix ] [ vm ] throw an exception if no isolate to query for flutter view .
added multiple getter methods for ` contentTypeOptions ` , ` xssProtection ` , and ` httpStrictTransportSecurity ` in ` HeadersConfigurer `
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and readability of the code
[ grid ] refactor devtoolsprovider to use router instead of seleniumcdpconnection
updated the @ AggregateRoot annotation to include a type parameter to improve clarity and maintainability of the test case
added prebuilt library directory handling in Python binary descriptions to ensure proper handling of pre -built libraries during binary operations
added clientAuth handling in NetServerOptionsConverter and removed deprecated methods in HttpServerOptions to streamline authentication handling and improve code clarity
updated directory paths from " hive . repl . rootdir " to " / user . name " in HiveConf . java and MetastoreConf .
refactor task view handling in RecentsView to improve clarity and functionality to enhance code readability and maintainability by reducing duplication
[ hotfix ] [ test ] increase timeout for amqptransformertest
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary calls
rename controller to flowcontroller for clarity
[ flink - 11824 ] [ runtime ] set exchange count to final exchange number in operator tree generator .
added import statement for ClassLoaderHandler in module - info . java to enable class loading functionality in the application
[ hotfix ] [ solverandpersistence ] add solve ( solution ) method to solve ( )
added JsonIgnore annotation to ApplicationSettings . java to ensure proper JSON serialization and deserialization of application settings
changed the condition from checking if throwable is not null to checking if it is not null to ensure that the throwable is not null before proceeding
refactor query info retrieval to use a variable for queryInfo to improve code readability and maintainability
fix ( gui _ only ) : check if there be no item in the recipe .
added a conditional check before setting the hdop in Gl200TextProtocolDecoder . java to ensure the parser is only set when the parser is
rename ` timeColumnName ` to ` incomingTimeColumnName ` and update related references in ` AvroRecordToPinotRowGenerator . java `
removed redundant calls to ` waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token004 . java ` to
[ xwork2 ] add a new interface ` ` initializable ' ' to the containercontainer
refactor TimerObservationHandler to use a wildcard import and add new methods for handling long - task tags to improve code readability and maintainability by
changed the data type of ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and updated the fetch time
[ thymeleaf ] log warn when fragment expression be unwrapped in thymeleaf .
changed the type of _ attributes from HashMap to ConcurrentHashMap in SessionData . java to improve memory management by using ConcurrentHashMap instead of HashMap
use copy ( ) instead of copy ( ) in activemqmessageconsumer
added constants for dark text and improved color extraction logic in ColorExtractionAlgorithm . java to enhance visual clarity and maintainability of the color extraction logic
added access control for the data folder in SketchBuilder . java to ensure that the data folder is accessible before adding them to the src folder path
updated the ` appendContent ` method to accept a ` includeTitle ` parameter and updated related logic to utilize ` StringUtils . isEmpty ( ) `
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the session registry initialization and improve code clarity
[ hotfix ] [ streaming ] add log for reconnection failure
updated ProxyFactory initialization to use JavassistProxyFactory instead of Factory to ensure compatibility with the latest Javassist implementations
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve performance by using ` ConcurrentLinkedQueue ` instead of
refactor SocketExceptions and ExceptionText to use InetAddress for address handling to improve code readability and maintainability by using a more descriptive
added a check to check if the view directory is under the repository directory before proceeding to ensure that the view directory is under the repository directory
[ bugfix ] remove unused code in jabrefframe
added " XX : + UseCompressedClassPointers " and " XX : + UseCompressedClassPointers " to multiple test files to
do n ' t log error if update log be not in active or rePLAY state
deleted the ConnectionHook . java file to remove unused code to streamline the codebase
removed the ` waitForReplicasInSync ` method and updated its usage in ` DistributedUpdateProcessor ` and ` TestTlogReplica ` to
camel - 14284 : camel - rest - dsl : fix typo in assertion message
updated ApexLanguageModule to use external version instead of hardcoded " 45 " to ensure compatibility with external versions in the Apex language
refactor multiple Java files to improve code organization and readability to enhance maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory for improved thread pool management to enhance code readability and maintainability by centralizing thread pool
replaced ` StandardByteBufferPool ` with ` ByteBufferPool ` in ` WebSocketAsyncConnection ` and ` WebSocketServerFactory ` to streamline buffer pool management
added scrollToPosition method calls in UploadActivity . java to ensure proper scrolling behavior based on index values
fix ( sqlcodegenerator ) : handle timestamp overridden by other column alias
refactor LauncherAnimUtils and LauncherStateTransitionAnimation to utilize ValueAnimator for animation handling to improve animation responsiveness and ensure proper
added a check to disable the default user agent if the client is disabled to ensure that the default user agent is disabled when the default user agent is
added a conditional check for Pubsubhubbub in FeedRefreshUpdater and integrated it in ApplicationSettings to enhance feed management by allowing users to
changed the visibility of the finalize method from public to protected to allow subclasses to access the finalize method from other classes
updated the method name from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` and added a condition to check for
[ dspace ] add dspacewebapp class to make it easy to use it .
added a method to retrieve the table alias from the left table alias in CalcitePlanner and implemented a method to retrieve it in RowResolver to
[ hotfix ] [ job ] fix typo in trigger key identity
updated logging statements to use ` TransactionCapsule ` , ` Message ` , and ` TransactionId ` instead of ` TransactionCapsule `
fix test failure in basicmaptest
corrected a typo in the variable name from " rcfileOptimizedWriterEnabled " to " rcfileWriterValidate " in HiveClientConfig .
added a new enum ` TlsClientCertPolicy ` and modified ` GitBlitServer ` to utilize it to improve code readability and
replaced a thread - safe message sending with a debug log statement for the new CHALLENGE subscription to improve code readability and maintainability by
added support for additional WebSocket protocols in the WebSocketRoutingFilter to enhance the handling of WebSocket requests by providing additional HTTP headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability and debugging of HiveQueryResultsFetchReq
updated formatting of dimensions and label in HolidayEventFormatter . java to improve code readability and maintain consistency in formatting
refactor ` FinalizePrivateFieldsTest ` and ` FinalizePrivateFields ` classes to use ` ignoreInnerClass ` instead of ` Outer
refactor UnexpectedJobExecutionException class implementation to improve code readability and maintainability
deleted the module - info . java . extra and removed the shouldUseOpaqueButtons method in AquaLookAndFeel and AquaUtils to simplify the code
added null check for docsEnum before assigning maxFreq and maxCost in DrillSidewaysQuery and DrillSidewaysScorer
added GeoDegeneratePath class to the classRegsitry map to ensure proper handling of GeoDegeneratePath instances
removed the ` preFill ` parameter from several constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` ReflectionPool
updated taskbar state handling in TaskbarLauncherStateController and modified FLAG _ STASHED _ IN _ APP _ SYSUI in Taskbar
added null check for style before comparison in CascadeDeleteVisitor . java to avoid potential NullPointerExceptions during style removal
refactor GuiUtil and StatusTab classes to improve size and maximum width handling to enhance code readability and maintainability by encapsulating the
refactor icon retrieval logic in FileTreeViewHolder to use TreeFileExtension instead of hardcoded icons to improve code readability and maintainability by reducing
replace instances of ` isEqualTo ( " v18 " ) ` with ` contains ( " contains " ) ` in ` ParallelUniverseTest . java `
added synchronization around the calculation of passed and failed tests in XMLReporter . java to ensure thread safety when accessing suite results
add test native probability function query to make it easy to run .
added a call to deregister the ShutdownThread in ClientContainer . java to ensure proper resource management and prevent potential memory leaks
added a method ` dropTemporaryTableAfterUse ` to the ` SybaseASE15Dialect ` class to provide a way to disable temporary table
re - enable htmlunit test for htmlunit and htmlunit
refactor SolrCore , XMLWriter , DocIterator , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code readability and maintainability
updated the string concatenation in VirtualAllocCommitUncommitRecommit . java to include reserved 1024KB for Test to improve readability and maintainability of
update ad playback state handling in AdTagLoader , AdsMediaSource , and AdsMediaSource classes to improve accuracy of ad playback state management
added a suppression warning for the UndefinedEquals contract in MultimapSubject . java to suppress warnings about the contract of Multimap . equals
updated the wave frequency value from deg _ text to unit _ hz in WaveGeneratorActivity . java to ensure accurate measurement of wave frequency values for
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
replaced ` putAll ` with ` putAll ` for ` all ` in ` TestLabelOptions . java ` to simplify the code and improve readability by
vertexlighterflat : fix nullpointerexception in case of non - normal vertex format
updated the ` onStart ` method to use ` withSpanInScope ` instead of ` span ` in multiple interceptor classes to improve span management and
updated timezone handling in ScheduledTrigger . java and removed the @ BadApple annotation in ScheduledTriggerTest . java to improve code clarity and maintainability
added AsyncBucket , AsyncBucket , ConfigurationBuilder , and InMemoryExtension classes to facilitate asynchronous and custom time measurement functionality in the bucket implementation
refactor test class directory handling in resexhausted003 . java to use a regex pattern to improve flexibility in handling test class paths
added exception handling for InterruptedException in the setHost method to improve robustness by catching InterruptedExceptions
refactor OngoingStubbing class for improved readability to enhance maintainability and readability of the code
updated the ` getValidWebServerPort ` method to include a ` webServerToReuse ` parameter and modified the ` getValidWebServer `
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil . java ` and added a static factory method in ` SolrTestCaseJ4 .
added a check to ensure the threadAllowlist is not empty before clearing the allowlist to improve error handling and prevent potential memory leaks
updated the method call from ` setOutputSource ` to ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the
( chore ) camel - dmn : check if the hit policy do n ' t match the hit policy
added a new test method ` testSlidingWindowsCombine ` in ` CombineTest . java ` to verify the behavior of the ` Combine ` function in
added a conditional check for allAppsDirty before binding all apps in Launcher . java and modified app binding logic in LauncherModel . java
removed redundant check for " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to streamline the test by eliminating unnecessary code
refactor code to improve readability and maintainability to enhance readability and maintainability of the code
replaced hardcoded ` getPrivSysProp ` with ` getBooleanAction ` in ` AquaMenuBarUI . java ` to improve security by
[ beamplayer ] add fall distance to setrawlocation ( )
refactor query logic in SimpleJpaRepository to use Specification and CriteriaQuery for better readability to improve code clarity and maintainability by reducing
added timestamp , nonce , and number fields to BlockUtil . java and updated TXInput initialization in BlockUtil . java to ensure accurate timestamp and
use safepointinsertionphase instead of loopsafepointinsertionphase .
[ hotfix ] fix npe in rsgroupinfomanagerimpl . listchildrenandwatchfornewchildren ( )
changed access modifiers of several methods from package - private to public in ArtifactResolver . java to allow external access to these methods for better encaps
added thread stop ( ) and dispose ( ) methods in ClientConnectionHandler , BulletPhysics , BulletPhysics , and ChunkProcessingPipeline classes to
added a check to ensure maxBufferedDocs is less than 1 to prevent IllegalArgumentException when maxBufferedDocs is less than 1
added a boolean flag ` LOGING _ IN ` and modified ` onSaveInstanceState ` and ` onRestoreInstanceState ` methods in ` LoginActivity `
[ java ] fix nullpointerexception in pump . sort ( )
refactor HttpShardHandlerFactory and LBHttpSolrServer to use HttpClient instead of private to improve encapsulation and encapsulation
updated the order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added DefaultAuthenticationServiceSelectionStrategyTests
added imports for Server , ContextHandlerCollection , and HandlerList in TestJNDI . java to enable proper handler management for Jetty server
updated variable names and logic in SortedDynPartitionOptimizer . java for consistency and clarity to improve code readability and maintainability
changed the return value from an instance of NioEventLoop to a true value to ensure proper handling of NioEventLoop instances
updated the calculation of ` newNumNulls ` in ` StatsUtils . java ` to use a conditional check for ` newNumNulls `
camel - 16464 : camel - kamelet export should not be use in camel - kamelet .
replaced ` OkHttpOAuthConsumer ` with ` AuthState ` and added authorization handling in ` OSMJob . java ` to improve error handling and
refactor test methods to use CompilationResult instead of System . out in multiple test classes to improve code readability and maintainability by reducing redundancy
added clientAuth property and its getter / setter methods to IoTDBRestServiceConfig and updated RestService to utilize it to enable configuration of
removed the variable ` mocksToBeInjected ` from the ` injectCandidate ` method and added a new test class ` ChildWithSameParentFieldInjection
refactor BloomUriUniqFilter to use InitializingBean for improved bean initialization to enhance code readability and maintainability by encapsulating
changed cursor adapter from false to true in HomeFragment . java and added refresh _ me preference in TweetPager . java to enable cursor refresh functionality
updated the intermediate header height ratio from 1 f to 75 f in ProfilePager . java to adjust the header height for better responsiveness
replaced ` RuntimeEvent ` with ` RuntimeEvent ` across multiple files to utilize the new ` RecompilationEvent ` class to improve event
added HOST _ SYS _ PREPPED configuration and methods to manage host system pre - installed packages to enhance configuration flexibility for host - level
updated the ` include ` method to include a ` logEveryUnknownFileFormat ` parameter and added a new ` UnknownChangeLogFormatLoggingTest `
http : / / issues . apache . org / jira / browse / amq - 4253 - fix a bug in defaultservlet .
added properties property handling in StaticPipeline to allow configuration of entity and score properties to enhance flexibility in managing multiple entities and scores in the pipeline
refactor filename handling in Frame . java and add configuration handling in WhoopsModule . java to improve clarity and maintainability of filename extraction logic
geos - 12626 : do n ' t throw exception if no datastore be find in the catalog
refactor Assert class for improved readability to enhance maintainability and readability of the code
refactor MultiLineTests to MultiLineGridlikeTextTests and add multi - line text handling methods to improve test coverage and ensure correct functionality of
camel - 14224 : camel - topic : fix unit test failure in camel - core
removed unnecessary initialization of measurement schemas in TsFileWriteAlignedWithTablet and TsFileWriteWithTSRecord classes to streamline
[ hotfix ] [ test ] fix testpromotionfromsurvivortotalgc . testprovisioningfromsurvivor
updated log file path format from " slf4j - log4j12 - . * " to " slf4j - reload4j "
[ hotfix ] [ test ] fix flaky test
updated package names from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple
[ drools - 1276 ] ignore test that fail if drools - 1276 be fix
added a constructor to PullRequestMergedEventsStream to retrieve Pinot schema from a file to enhance functionality by allowing the use of the Pinot schema
refactor AbstractExpressionPart class to improve code readability and maintainability
refactor TaskSlot class implementation to improve code readability and maintainability
rename FIRE _ EXCEPTION _ ON _ FAILURE from FIRE _ EXCEPTION _ ON _ FAILURE to CLOSE in Netty
added error handling for lock release in MoveTask . java to improve robustness by logging exceptions when unlocking locks
refactor gem path retrieval to use ResourceBundle for better resource management to improve code readability and maintainability by centralizing resource management
use byteutil . empty _ byte _ array instead of empty _ address .
refactor class loading logic in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] add test case for jobmanagerstartuptest
updated database schema files in CloudDatastreamResourcesProto . java to include Google Cloud : : Datastr and V1Alpha1 to ensure compatibility with
added a Bundle to set extra extras in FileDisplayActivity to enhance functionality by allowing customizable extras
changed the loop condition from break to continue in ParticleEmitter . java to improve code readability and maintainability
updated cluster count from 2 to 1 in AmbariManagementControllerImplTest . java to improve test accuracy by adjusting cluster count from 2 to
removed the nullable parameter from the @ Column annotation in TransientSessionTicketImpl . java and added error handling in JpaTicketRegistry . java to
updated Bug4823811 . java file to improve code clarity and maintainability
updated path relativization logic in RmStep . java to utilize a function for path relativization to improve flexibility in path
refactored the requestFullState method to accept a boolean parameter for initial requests to enhance flexibility in requesting full state based on initial requests
refactor ShibbolethCompatiblePersistentIdGenerator to improve attribute handling to enhance clarity and maintainability of the code by encapsulating attribute
updated the @ Inject annotation from ` @ Inject ` to ` @ Inject ` in ` RequestValidationService . java ` to improve code readability and
refactor keyboard message handling in UiThreadHelper to use a Bundle instance to improve code readability and maintainability by centralizing keyboard logging logic
removed redundant calls to MManager . getInstance ( ) . clear ( ) in FileNodeProcessor , MTreeTest , and MTreeTest classes to
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a test for slurp file in IOUtilsTest . java to verify the functionality of the slurp file handling in the application
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
refactor span retrieval logic into a separate method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added support for ` EDATE _ CONVERTER ` in ` ETypeConverter ` , ` ArrayWritableObjectInspector ` , and ` HiveSchemaConverter
updated the way style is parsed by using Patterns . COMMA _ SEPARATOR in StyleConverter . java to improve code readability and maintainability by
ggb - 282 fix error message in input dialog table view .
refactor conditional checks for tableFields and inColumnCnt in SemanticAnalyzer . java to improve readability and maintainability of the code
refactor score update logic in WANDScorer . java to improve clarity and correctness to enhance code readability and maintainability by standardizing
refactor Correspondence class implementation to improve code readability and maintainability
updated import statements in PaintSetEnabledDeadlock . java to include specific Java classes to improve code clarity and maintainability by eliminating wildcard imports
updated curPixVal initialization in XRSolidSrcPict . java and added a new WhiteTextColorTest class in WhiteTextColorTest . java
refactor biome dictionary to use listsupertypes instead of listsubtypes
rename variable ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to improve clarity and consistency in naming conventions
added StabilityRule imports and modified the @ Ignore annotation in TaplTestsLauncher3 . java to ensure compatibility with different flavors in the
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
added a check to ensure logFileSuffix is not empty before proceeding to avoid potential NullPointerExceptions when logFileSuffix is null
refactor PythonBuckConfig class for improved readability to enhance maintainability and readability of the code
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryNames ` methods in ` ShadowPackageManagerTest ` , ` Shadow
[ geiligao ] fix meiligao decode error message
added a null check for the tile before calculating the battery capacity in PowerDiode . java to prevent potential NullPointerException when tile is null
refactor cache handling in PrefFragment to use a unified TrimCache implementation to improve code readability and maintainability by encapsulating cache
remove dependency on google . api . client . util . list
replaced return statements with NotAuthorizedException in multiple classes to improve error handling by throwing an exception instead of returning false
added a new abstract method ` schedulePeriodically ` to the ` Scheduler ` class and updated method signatures to include @ SuppressWarnings ( " unused "
replace refreshListOfFilesFragment with onItemClicked for item click handling to improve user experience by allowing users to select items from the storage manager
added a condition to check if a file path matches " . xsd " and improved error handling in StreamUtil . java to enhance robustness by
updated the ` create _ table ` method to accept a ` CreateTableRequest ` request instead of ` EnvironmentContext ` to simplify the method signature and
added a ` aborted ` flag to the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to ensure thread
updated indentation checks in multiple parser classes to ensure indent is less than 4 characters to improve code readability and maintainability by reducing redundancy
added new ` NetworkWifiStatusReceiver ` and ` ChangeWifiStatusEvent ` classes , and modified ` PostFragment ` and ` PostFragment ` to
removed the condition for checking if the frame is a control frame to simplify the code logic for better readability and maintainability
added visibility control for the collapse handle in WidgetsBottomSheet . java to improve user interface responsiveness by providing visibility to the collapse handle
added two new files ` Issue475 . java ` and ` XSS . java ` , ` Issue475 . java ` , and `
added a check for zero units to scroll in StandardGraphIO . java to avoid unnecessary processing when units to scroll
updated the condition to check if the number of contract list is non - 1 to ensure that the contract list is only processed when there are no contract
added ` add ` and ` put ` methods to ` JsonArray ` , ` JsonObject ` , and corresponding test cases in ` JsonArrayTest ` to enhance
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class to ensure consistent hash code generation across print services
[ danielwagnerhall ] remove unused version field in db2idialect and db2zdialect
added a condition to check if the transaction ' s platform fee is greater than zero to ensure that the connection is only enabled when the transaction is not
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
fix a bug in mediacodecrenderer when the buffer be encrypted .
removed the ` public ` access modifier from several ` AsynchronousAntn ` , ` BulkheadAntn ` , and ` CommandBinding ` classes
added import for Retrofit in Part . java and PartMap . java to utilize the Retrofit interface for improved functionality
refactor API parameter handling in JsonBuildHelper and ParamsBuildHelper to improve clarity and functionality to enhance code readability and maintainability by reducing
added TYPE _ TASKBAR _ OVERLAY _ PROXY and TYPE _ TASKBAR _ OVERLAY _ PROXY to
upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation handling by allowing for recents
removed the parameter from the createRenderScript method call in AllAppsView . java to simplify the code by eliminating unnecessary parameters
refactor PMD class implementation to improve code readability and maintainability
refactor ` PluginListCellRenderer ` and ` PluginManagerActivator ` to use a new method ` isSystemBundle ` to improve code readability and
updated import statements and modified job name formatting in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
updated BloomFilter to use a constant LOW _ FALSE _ POSITIVE _ RATE in KeyChainGroupTest . java to improve test accuracy by
refactor rocket configuration handling in Overview . java to improve clarity and functionality to enhance code readability and maintainability by encapsulating configuration
[ hotfix ] [ runtime ] fix checkstyle violation in agentmanagerimpl
added null check for the value before accessing it to avoid potential NullPointerExceptions when value is null
cloudstack : improve error message for host discovery failure
updated constant string concatenation in ParamAction . java to include " attribute " to improve readability and maintainability of the code
updated constructors in BaseStubbing and ConsecutiveStubbingImpl to accept a mock object instead of the invocationContainer to improve type safety
added a method to strip method parameters in the getMethodLine method to improve method handling by removing unnecessary parameters
updated the version name and code for the GreatVoyage application to reflect the latest changes in the application
use set instead of list in outputfilter . getallowedcommands ( )
refactor symbolmblayer to use labelcacheitem . labelcacheitem . labelcacheitem . labelcacheitem . labelcacheitem . labelcache
ggb - 283 fix popup not show when overlap feature be enable .
updated error messages in ValidationSuite . java for consistency and clarity to improve code readability and maintainability by using consistent naming conventions
refactor StartingWindowListener to use a static inner class to improve code readability and maintainability by encapsulating the transition manager initialization
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code readability and maintainability
added error handling for SecurityException in CheckPackageAccess . java to improve clarity of exception messages for better debugging
increased timeout duration from 30 seconds to 90 seconds in ThreadSafetyTest . java to allow for more time for termination of the executorService
changed the default value of loggingEnabled from boolean to Boolean and added a null check for loggingEnabled to prevent potential NullPointerExceptions when logging is not
added @ JsonIgnore ( true ) annotations to the Schema class to ensure proper JSON serialization of the Schema class
increased the timeout duration of the TestNonTxIndexBuilder from 5000 to 10000 to allow for more time for tests to complete successfully
refactor train methods in SimpleNaiveBayesClassifier to improve clarity and consistency to enhance code readability and maintainability by reducing duplication
added ` CheckHelperControllerModule ` and ` CheckHelperAuditModule ` to the ` CheckDatabaseHelper ` class and updated the injector in ` Check
refactor Prototype class implementations to improve code readability and maintainability
added a null check for the tableIsTransactional variable before assigning it to the tab if it is not null to ensure that the table is
[ java ] remove unnecessary call to recordingwriter . writefragment ( )
fix ( cue ) : use offset _ sample _ relative instead of 0
fix datastoremetricqueryimpl to use ` ` alias ' ' instead of ` ` name ' '
updated CurrencyPair instances from " BTC _ CAD " to " USD " in VaultOfSatoshiBaseService . java to
refactor EntityManagerFactory initialization in NoCdiAvailableTest . java and DeepCollectionElementTest . java to improve resource management and ensure proper resource management
updated import statements for KafkaSender from kafka11 to kafka in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to ensure consistency in
added new test files GwtBinaryIntegrationTest . java and A . java to validate the build of GIF and compilation mappings to ensure that the GIF
added loading cause label visibility and improved error handling in BrowserContentPane . java and SQLConsole . java to enhance user experience by providing clearer error
removed unnecessary whitespace in EnhancedRandomImpl . java and updated test cases in EnhancedRandomImplTest . java to improve code readability
added XMLSecurityPropertyManager to manage security properties in multiple configuration classes to improve flexibility and maintainability of the security property management process
added a new file ` InlineDefaultMethod . java ` that implements ` InterfaceWithDefaultMethod1 ` , ` Decoy ` , and ` Instance `
updated SQL query predicates to use " GLOB ( ? ) " instead of " % ( ? ) " _ ESCAPE ( ? )
changed access modifier of getDMNProfiles method from private to protected to allow subclasses to access the method from other classes
fixed - Redissonscript . getslotresult ( ) should return the slave node if there be no slave entry .
remove the setwordfieldalarm method and add a static assert to ensure that the field be set correctly .
updated debug log messages to use ` size ( ) ` instead of ` ordered ( ) ` in multiple generator classes to improve clarity and consistency in logging
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42164
added a constant for HTTP JETTY _ SERVER _ HANDLERS and updated thread pool initialization to use this constant to improve code maintainability
refactor shortcut handling in LauncherModel . java to improve clarity and maintainability to enhance code readability and prevent potential null pointer exceptions
do n ' t check if the value be an instance of String in DefaultHttpClientBinderRegistry . java to improve code readability and maintainability by
removed the case for ` navigateUp ( ) ` in ` DetailFragment . java ` to streamline the navigation process for the home screen
added a condition to check if ` hasAndroidMarket ( ) ` is true before calling ` includesPlayServices ` in ` AndroidImplementation . java `
refactor TableBlockParser to use a variable for cellStart and cellEnd , and add a new test for pipes on outside whitespace after header to
added functionality to set bridging header in NewNativeTargetProjectMutator and updated ProjectGenerator to utilize it to enhance flexibility in managing brid
refactor methods handling in PotentiallyDeadCode . java to improve clarity and maintainability to enhance code readability and maintainability by using a
added dash detection functionality to the Attr class and created DiamondRedundantArgs , DiamondRedundantArgs1 , and T6939780
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) `
removed the import of Utils and logging statement from SolrCacheHolder . java to clean up the code and reduce unnecessary dependencies
added catch blocks for AuthenticationException in LdapCtxFactory . java to improve error handling for AuthenticationExceptions
updated the condition for checking float values in Test6796786 . java to ensure correct handling of negative float values
added a local file for " logback . dev . xml " in JoobyMojo . java and updated the list of configurations in Main
added a new file JaasEventCheck . java that implements ApplicationListener to handle JaasAuthentication success and failure events in the application
replaced direct calls to ` currentPage ` with ` viewsToAnimate ` in ` QuickstepTransitionManager . java ` to improve code readability and maintain
updated the condition for stringDistance in ConjunctionSolrSpellChecker and added a new test class ConjunctionSolrSpellCheckerTest to ensure that
replaced HashMap with Map in ShadowSystemServiceRegistry . java to simplify code and improve readability
updated log names for Single LeaderInformation Change and All LeaderInformation Change events in DefaultLeaderElectionService . java to improve clarity and accuracy of leader
changed the access modifier of the setAuthentication method from public to package - private to allow access to the method from other packages
add agent . script . timeout property to agent . ready . command . wait
[ jdbc ] add JDBC _ SCHEMA parameter to the table parameter map .
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " in multiple files to improve code readability and maintain consistency in
replaced ` WeakHashMap ` with ` Collections . synchronizedMap ` and updated ` schemaTypeCache ` to use ` computeIfAbsent ` to improve performance
refactor headers handling logic in StaticServerHttpHeadersWriter and add a test for header written with different case scenarios to improve header management and ensure
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable the test that relies on files available from CMU
added a call to mkdirs ( TEST ) in TestCollector . java to ensure the test directory exists before proceeding
set chunked streaming mode to 1024 in StarTreeJobUtils . java to improve performance by allowing chunked streaming mode
add basicsyntaxchecker , singletypesyntaxchecker , singletypesyntaxchecker , singletypesyntaxchecker , singletypesyntaxchecker
hbase - 14424 addendum : migrate com . google . protobuf from com . google . protobuf to com . google . protobuf . com
added a new test class ` Node ` to verify that ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` does not cause stack overflow
added IOException to the getRemoteName method in AccountingTransceiver . java to ensure proper handling of IOException during remote name retrieval
updated exception handling in UserAccountManagerImpl , ClientFactoryImpl , and ConnectivityServiceImpl to use HttpClient instead of OwnCloudClient to improve
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enhance security by allowing dynamic configuration of the AspectJ mode
updated import statements and refactored hostname verification logic in Connection . java to improve code readability and maintainability by centralizing hostname verification logic
changed the access modifier of the remove method from final to non - final and added a new method ` remove ` in ` OHLCSeries `
updated invocation method from invoke ( ) to invokeUrgent ( ) in ClientSchemaService . java and modified test assertions in CompactFormatIntegrationTest .
refactor joint removal logic in World . java to improve code readability and maintainability by reducing duplication
fix nullpointerexception in searchfilter . getphonenumbersmatch
[ hotfix ] [ test ] add license header to sourcereadertestbase
removed redundant null checks for the document object in DocumentsStorageProvider . java to streamline code by eliminating unnecessary null checks
added two new interfaces ` HookDefinition ` and ` JavaHookDefinition ` , ` JavaHook ` , and ` JavaHookTest ` , to facilitate
refactor flushIfDeadlockRisk method to use a new method ` flushIfDeadlockRisk ` to improve code readability and maintainability by
updated setExoOptions method to accept a boolean parameter for allowTs to enhance flexibility in setting EXO options based on the allowTs
removed the user and role from the getIdentifierCollection in DMRDecoderState . java to ensure the user and role are removed from the identifiers collection
refactor Color class to use a static Color instance and update the toString method in RailButtonShapes to improve code readability and maintainability by
updated null handling logic in CountAggregationFunction . java and added a new test case in NullHandlingIntegrationTest . java to ensure correct handling of null values
set the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of the deep variable
updated string appending to escape XML names in StreamInitiation . java to ensure proper handling of XML names in the output
updated workDir initialization to use configuration configuration instead of hardcoded values to improve flexibility and maintainability of the work directory configuration
added a deprecated attribute check in RuleSetFactory and updated the test case in RuleSetFactoryTest to ensure that the rule is only used when deprecated
use codebuffer . position ( ) instead of label in AMD64DirectCallOp . java
updated TimeRange to use static final fields for minStamp , maxStamp , and allTime variables to ensure immutability and prevent potential null pointer
refactor BitDocIdSet class implementation to improve code readability and maintainability
refactored the ` emitMetricsJson ` method to use a dedicated method ` emitMetricsJson ` to improve code readability and maintainability by
refactor MIME type checks in DetailFragment . java and add media view in GalleryActivity . java to improve code readability and maintainability by
fix the tank tank fill when the world be remote .
added handling for RuleAnalysisLegacyBuildRuleView in CsharpLibrary . java to improve clarity and functionality of rule analysis logic
[ iqpep ] do n ' t create pep service if the packet type be set to true .
added a null check for the runtime variable in the intrinsicGraph condition to ensure that the intrinsicGraph is only evaluated when runtime is not null
[ hotfix ] [ runtime ] fix checkstyle violation in streamingdataflowworker
pdfbox - 4071 : add miss offset for object id / genid / genid / int / float . max _ value
added constructors for LwjglAppletApplication in LwjglApplet . java to enhance the application ' s functionality by allowing
updated the stringRepresentation method in EnvironmentAndSystemPropertyClientProviderStrategy to use a null check for the DockerClientConfig object to improve code readability and maintain
refactor LDAP authentication logic to handle password policy configurations more effectively to improve code readability and maintainability by reducing duplication
refactor Int2ObjectCache class for improved performance to enhance performance and maintainability of the code
added a private field ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and set it in ` LdapUtils ` to provide a way to
refactor Readable class implementation to improve code readability and maintainability
updated the PDF processing logic in JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT instead of StandardCharsets .
updated menu icon from ` share _ menu _ item ` to ` ic _ menu _ share ` in ` CaptureActivity . java ` to ensure consistent
replaced ` Collections . class . getMethod ( " emptySortedSet " ) ` with ` StringTokenizer ` for JVM version checks to improve compatibility with Java
do n ' t set network timeout to false for non - JDBC 41 driver
refactor GenericContainer class to improve code organization to enhance maintainability and readability of the code
replace HashSet with ArrayList in Enclosed . java to simplify the code and improve readability by using a more descriptive variable name
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasView , and AbstractCasView classes to improve code clarity and maintain
corrected the spelling of " png " to " gif " in the ChartProvider class to improve code readability and maintain consistency
fix : use the parent file extension instead of the file path .
updated return statement in JavacParser . java and added a new class ExtraSemiTest . java with a new test class ExtraSemiTest
added handling for AFTER and BEFORE cases in JpaQueryCreator and User classes , and updated setUp method in User and UserRepositoryTests to
refactor Test15FloatJNIArgs class to improve code readability and maintainability
updated import statements and modified version string formatting in plugin . java to improve code readability and maintainability by reducing dependencies
updated substring index from 2 to 1 in MockProcessContext . java and added a new test method in TestMockProcessContext . java to ensure proper
http : / / issues . apache . org / jira / browse / amq - 4071 - ensure not reentrant call
added a null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added a timeout of 10 seconds to the test annotations in SslBytesServerTest . java to allow more time for tests to complete
refactor Peer class implementation to improve code readability and maintainability
added IndexSegment interface and methods to RealtimeIndexingCoordinator , and modified StreamProviderConfig to implement it to enhance indexing functionality and improve code
added null check for exported data before copying to avoid potential NullPointerExceptions during data writing
replaced ` updatePopupY ` with ` getScrollThumbRadius ( ) ` and updated related calculations in ` RecyclerViewFastScroller . java ` to
updated command execution message and added a check for tool window instantiation in BuckToolWindowFactory to improve code readability and ensure tool window is
added a conditional check for Windows platform before creating a JCheckBox to ensure that the JCheckBox is only added when the platform is Windows to improve user experience by
updated servlet imports from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java ` to
added crop and endCrop variables for vertical bar layouts in QuickstepAppTransitionManagerImpl . java to ensure proper croping behavior based on device
added a new boolean field ` fullScreenExclusiveModeState ` and updated related methods in ` XWindow ` , ` XWindowPeer ` , and
added logic to handle string lengths in StringUtil and created a new UMSUtilsTest class to ensure correct parsing of played duration strings
added credentials handling in DagUtils for MapWork and ReduceWork in DagUtils . java to improve credential management for MapWork and D
camel - 14247 : camel - jbang - use entryset . get ( ) instead of keyset . get ( )
trim whitespace from thread names in SessionState . java to ensure thread names are processed correctly
updated the error message from " Not yet " to " Not yet " in GpsMainActivity . java to clarify the purpose of the message
refactor Job class to improve code organization to enhance maintainability and readability of the code
added a new abstract static class ` Unused ` and a corresponding test method ` testUnusedType ( ) ` to the ` Main ` class to
corrected the spelling of " hbase _ master _ host " to " hbase _ master _ hosts " in multiple files to ensure consistency in naming
deleted ` EventReaderDeserializer ` , ` EventWriterDeserializer ` , and ` EventWriterSerializer ` interfaces to remove unused classes to streamline the code
changed the return type of performJoin methods from GenericRecord to List < GenericRecord > and updated related references to improve type safety and clarity in output
updated maxDelegateLockPeriod checks to include a maximum threshold of 10512000 and adjusted related logic accordingly to improve flexibility in managing delegate lock periods
[ nic ] use integer instead of int for network rate .
removed the constructor and applied the applySpecification method in CmcExchange to streamline the code by eliminating unnecessary initialization
updated GossipLocalNode to check for the existence of the " seed . node . ip . list " path before processing addresses to improve robustness
change the default value of ` enabled ` to ` false ` for ` hazelcast . client . tpc . enabled `
update swagger - ui version from 2.1 . 10 - 1 to 3.0 . 18 . 2
refactor divide logic in MutableBigInteger and add a new ModInvTime class for testing modular inverses to improve readability and maintainability of
refactor key assignment logic in NamedObjectList . java to improve readability and maintainability of the code
refactor cleanupEmptyDir calls to cleanupEmptyTableDir across multiple classes to improve code readability and maintainability by reducing duplication
refactor AsyncCache and Cache classes to improve code organization to enhance maintainability and readability of the code
added import for RCFileInputFormat and registered it in SerializationUtilities . java to enable serialization of RC file inputs for better resource management
added methods to retrieve type and category types in TypeMapperComponent to enhance type and category retrieval functionality for columns and categories
added error handling for invalid host header in Request . java and updated test cases in RequestTest . java to ensure proper handling of invalid host headers and
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` instead of ` TimeZoneFinder ` to improve compatibility with
updated the ` addOutgoingValues ` and ` forEachOutgoingValues ` methods in ` StandardOp . java ` to enhance the functionality of ` StandardOp
changed the visibility of ` segment ` and ` cfsDir ` from package - private to private in ` SegmentCoreReaders ` and ` Segment
added ` hasMainThreadProfile ` method to ` AggregateDao ` , ` AggregateDao ` , ` AggregateRepository ` , and ` AggregateRepository `
added error handling for annotation definitions in non - required states in InterfaceValidator . java to ensure that annotation definitions are not allowed for non - required rules
updated the NAME constant from " greekLowerCase " to " greekLowercase " across multiple filter factory classes to ensure consistency in naming
refactor HSSFSheet and Sheet classes to improve code organization and maintainability
use DiscoverySearchRequestProcessor instead of LuceneSearchRequestProcessor in multiple servlet classes to ensure compatibility with the latest DSpace version
added list additions for " America / Dawson " , " America / WhiteHorse " , and " Canada / Yukon " to
updated the instantiation of SurfaceSyncGroup to include " TaskBarController " to provide a clearer context for the taskbar controller
updated ` GridFsTemplate ` to use ` UUID ` instead of ` BsonObjectId ` for file deletion to simplify code and improve readability
updated the ` query _ shouldReturnColumnIndexes ` method to ` query _ shouldReturnColumnIndices ` and added new test methods in ` ShadowDownloadManager `
updated Enter condition to handle ENTER _ ANDROID and modified text insertion logic to improve code readability and maintainability by reducing redundancy
added a check to return early if the target is the same as the target to avoid unnecessary processing when the target is a group
refactored the ` afterSetStatements ` method in ` Lower . java ` and ` BlockLexicalContext . java ` to improve code readability
added hashCode methods to IntervalXYDelegate , XYSeriesCollection , and XYSeriesCollection classes and updated XYSeriesCollection to use it to
update clientqueuedisruptiontest to use @ after instead of junit . framework
reformatted code in CloudWatchAppender and added a new CachingAttributeRepositoryTests class to improve readability and maintainability of the code
updated Gson serialization method from ` serializeSpecialDoubleValues ( ) method ` to ` serializeSpecialFloatingPointValues ( ) method ` to ensure accurate
added calls to ` waitToProduceOneBlock ` in ` HttpTestZenToken002 ` and ` PublicMethed ` classes to
updated language tag handling in Locale . java and modified language tag checks in LocaleEnhanceTest . java to improve code robustness and ensure proper handling of
add a configuration option to disable SSH into KVM Agents when the management server is not allowed to SSH into KVM Agents
changed access modifiers of ScheduledAction from public to package - private in SchedulerWhen . java to enhance encapsulation and improve encapsulation
updated import statement for PagerSlidingTabStrip from ` com . astuetz . extensions . PagerSlidingTabStrip ` to ` com .
added a condition to check if the filter is not empty in SimpleSearchQueryConverter . java to ensure that the filter is only processed when the filter
updated column order from " natural order " to " Natural column order " in BrowserContentPane and DataBrowser classes to improve clarity and consistency in column
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java ` to
updated the write method in HtmlSessionInformationsReport . java to use htmlEncodeButNotSpace instead of htmlEncodeButNotSpace to
[ hotfix ] fix typo in itemstatetriggerhandler
removed unnecessary synchronization in FastHttpDateFormat . java to improve code readability and maintainability
added thread - safe file move functionality in Hive . java to improve performance by reducing unnecessary file move operations
added two static methods for triggering a Timer in WrapTimer . java to enhance timer functionality by allowing specific period parameters
[ hotfix ] [ table - common ] add support for LOCAL _ DATE and LOCAL _ DATE _ TIME in type information .
updated error logging in AbstractStatusReporter to use a configurable verbose flag to enhance flexibility in logging messages based on user options
added menu toggle functionality to the ClickStartHandler and ItemControls classes to ensure proper handling of menu visibility based on application state
do n ' t allow vpn connection to be esitablished between same account ' s vpn gateway and customer gateway
updated exception handling in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to improve error management and ensure correct error
pdfbox : log an error if the pdf be encrypted
added synchronization and shutdown logic for CuratorWatcherImpl in CuratorZookeeperClient . java to improve resource management and ensure proper shutdown of CuratorWatcher
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code readability and maintainability
updated the ` deleteItem ` method to include a ` id ` parameter in the ` deleteItem ` method to improve code readability and maintainability
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
updated the ` replaceOrderBulk ` method to accept a ` List < ReplaceOrderCommand > ` parameter instead of a ` Collection < ReplaceOrderCommand
rename method ` enterDefault ` to ` enterIdentNode ` in ` FindScopeDepths . java ` and implement ` enterFunctionNode ` in
added a new file ` J9ConstantHelper . java ` and refactored ` ObjectHash . java ` to utilize it to improve code
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for testing concurrent invocations to ensure that concurrent invocations are correctly
add session . notifyrosteroffoffoffline ( ) method to remove roster from roster
updated method names from ` pd . getProperties ( ) ` to ` pd . getOverlayedProperties ( ) ` in ` MapOperator . java `
updated the formatting of the loadHandle method call in FunctionObjectCreator . java to improve code readability and maintain consistency
added null check for extTypeCustomDesers before assigning it to avoid potential NullPointerExceptions during serialization configuration
removed system property setting " mockserver . logLevel " to " WARN " to ensure consistent logging behavior across different environments
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and modified the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code and improve
updated ` scoreMap ` and ` termScoreMap ` to use ` String ` instead of ` scoreMap ` to improve type safety and ensure accurate
updated conditional checks in U64 . java to remove unnecessary bitwise operations to improve code readability and maintainability
removed the ` fx - text - fill ` style from ` MainViewModel . java ` to simplify the code by eliminating unnecessary styles
added a boolean variable ` didSupportDarkText ` and updated notifyChange method to include ` didSupportDarkText ` to ensure correct handling of dark
[ hotfix ] [ checkpoint ] fix checkpointrequestdecider # nonforcedenqueueonTooManyPending ( )
updated MAX _ POOL _ SIZE from 1000 and KEEP _ ALIVE _ TIME _ MILLISECONDS to CORE _ POOL _ SIZE and adjusted
refactor stream filtering in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to use anyMatch for better readability to improve code readability and maintainability
added testRequirements . notWindows ( ) and TestRequirements . notArm ( ) in OpenCVImageFactoryTest . java to ensure compatibility with
added null checks for durable and stream prefetch settings in ActiveMQManagedConnectionFactory . java and updated test cases in ActiveMQConnectionFactoryTest . java
py4jnetworkexception . getreturnvalue should throw throwable instead of null
added @ Repeatable annotation to the Issue class and implemented the value ( ) method in Issue . java to enable the use of Issue . java with
updated user property from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor and BlueprintConfigurationProcessorTest
added a check for the socksProxyHost environment variable before connecting to the socket to ensure proper socket connection based on the socksProxyHost property
[ hotfix ] [ runtime ] fix typo in slotstatus javadoc
removed import of ClassUtils from ReflectionUtils . java to streamline code by eliminating unnecessary dependencies
replace HashSet with LinkedHashSet for various protocol and cipher suites in SslContextFactory . java to ensure consistent ordering of protocols and cipher suites
added a static variable ` systemResource ` and updated its assignment logic in ` Resources . java ` to improve resource management by ensuring the system resource is
added a constant for the plaintext segment size in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to
added a test for invalid fallback routes in ServerMvcIntegrationTests . java to ensure that an exception is thrown when an invalid fallback is thrown
http : / / code . google . com / p / mybatis / issues / detail ? id = 421 : http : / /
replaced resetBytesReadCounter ( ) with setSizeLimit ( 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFF
added a ` preferAES ` boolean field and its getter / setter methods in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to
camel - 14247 : camel - opentelemetrytestsupport : use log instead of system . out . println
added a new test method ` testLoadBalancerInstanceOperations ` in ` ElbIntegrationTest . java ` to verify instance registration and health checks to ensure correct
corrected the spelling of " setAlarm " to " setRingtone " in the AlarmReceiver class to improve code readability and maintain
mondrian : do n ' t fail test if locale or file system be not provide .
hhh - 16464 - followonlockingtest should not work on oracle 11
updated texture file handling and exception handling in TextureUnpacker . java to improve robustness by ensuring atlas file exists before proceeding
updated locking mechanism in AmbariManagementControllerImpl . java to use a concurrent lock for managing service changes to improve thread safety and ensure proper
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify the behavior of the ` isQueryClosed ` method in ` HiveDriver2 ` , ` HiveQueryResultSet ` ,
[ java ] remove unnecessary mark ( ) call in streambodygenerator . mark ( )
added handling for pre - deleted databases in ClusterSchemaManager to ensure proper deletion of databases based on pre - deleted databases
added a check for " chunkedWriter " before writing to the pipeline in Http1xUpgradeToH2CHandler . java to ensure that
updated conditions in EnhancedBrowseFragment and FullDetailsFragment , and added a deleteItem method in FullDetailsFragment to enhance item deletion functionality and
refactor rulefinder to implement rulebank instead of rulefinder
added a try - catch block around the doFinal method call in JcaTlsCrypto . java to improve error handling and provide clearer feedback
added new files TestMonomorphicObjectCall . java and Object . java , and implemented native method calls in Object . java to implement functionality for
refactor removeMetaDataSource method calls to use toFront ( ) instead of removeMetaDataSource ( session ) to improve code readability and maintainability
hbase - 16417 addendum fix a bug in memstore . shouldseek ( scan )
[ hotfix ] [ runtime ] remove unused parameter in taskmanagerservicesconfiguration
modified the ` AlterTimeSeriesStatement ` constructor to accept a boolean parameter for ` isAlterView ` and modified its initialization in ` AlterTimeSeriesStatement
updated regex pattern in Condition . java and added a new MatchTextConditionTest class in MatchTextConditionTest . java to improve regex matching accuracy and
do n ' t swallow exception in helixbrokerstarter when create routing table
http : / / code . google . com / p / mybatis / issues / detail ? id = 421 : fix potential npe
[ java ] use char [ ] instead of string [ ] in test configs .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 : do n '
refactor ` toSortedListWithCounts ` and ` toSortedListWithCounts ` methods in ` Counters . java ` to simplify
refactor the initialize method to accept a original SimulationStatus object instead of returning it directly to improve code readability and maintainability by using a
truffle : add truffleboundary to get the current time of the syscall clock get time node .
added a variable variable to the readObject method call in PrettyPrinter . java to improve code readability and maintainability by reducing duplication
added null check for indexToNode in LRUDictionary . java to avoid potential NullPointerExceptions when indexToNode is null
http : / / issues . apache . org / jira / browse / amq - 4252 - do n ' t check for explicit filter
updated JUnit imports and annotations from ` org . junit . Assert ` to ` org . junit . jupiter . api ` to align
added a new file ` NutchServerInfo . java ` with methods for starting and managing job and running jobs in the service model to provide a
replaced ` OffsetAttribute ` with ` AttributeSource ` and updated attribute handling in ` EdgeNGramTokenFilter . java ` to streamline attribute management
added a timestamp parameter to the CqlInserter and ThriftInserter classes and updated timestamp handling in ThriftInserter and ThriftInserter classes to
updated condition checks in DSAParameterGenerator to check for non - negative values instead of hardcoded values to improve code readability and maintainability
refactor NumberUtils and Numbers classes to improve handling of integer and long values to enhance code readability and maintainability by encapsulating
updated mask condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct handling of mask values and improve test
added constraint violation checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper . java to ensure proper handling of SQL
removed unnecessary whitespace in method signatures in ConsumerManageProcessor and RemoteBrokerOffsetStore classes to improve code readability and maintainability
added new methods ` addTab ` and ` insertTab ` to the ` Tabs ` class and refactored the ` createTab ` method
updated array sizes from ` files . size ( ) ` to ` new Object [ 0 ] ` across multiple files to ensure consistent array usage across
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironment
added a conditional check for " groupId " and " artifactId " in MavenVisitor . java to improve code readability and maintainability
updated mock names from " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE " in ZookeeperDataChangedListenerTest . java
added a new file FormatCheckingTest . java to test class format error handling to ensure proper handling of illegal class names in Java processes
removed redundant call to getLineNumber ( ) in CodeGenerator . java to simplify code and improve readability
added a try - catch block around the add method call in ConfigHelper . java to handle potential exceptions during configuration addition
added static methods to create RadioButton instances using Image , Command , and Command in RadioButton . java to enhance functionality for creating RadioButton instances with
updated the CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 in LRUCache and MetadataQuerierByFileImpl to
changed the visibility of DEFAULT _ CAPACITY from private to public and updated its usage in the SimpleChannel class to allow external access to the capacity attribute
fix npe in management name strategy when the name be null .
updated log messages to include the " -- usemode " system property and improved resource loading in ModeContribution . java to enhance clarity and maintainability of
[ hotfix ] [ test ] add log for shutdown hook for iomanager . close ( )
updated RobolectricTestRunner to use AndroidManifestPath instead of projectRoot to improve clarity and consistency in handling Android manifest paths
added a null check for notPropagatedHeaders in AbstractMessageProducingHandler . java and updated related tests in AbstractReplyProducingMessageHandler
refactor CompareMode class to improve code organization to enhance maintainability and readability of the code
added HasTests interface to RustBinaryDescription , Arg , and RustLibraryDescription classes to enable tests handling in the Rust binary and library
updated placeholder resources for recent image placeholders in FileMessageVH . java to improve code readability and maintainability
refactor OnExitTest class for improved clarity to enhance code readability and maintainability
added onUserPreferenceChanged method to TaskbarManager to ensure taskbar is recreated when preference changes
added reflection - based handling for heap dump functionality in HeapDump . java to improve robustness and error handling for JVM VMs
camel - 14224 : camel - mybatis : ensure that the producer can close the session . commit ( )
updated driver initialization from FIREFOX to IE and added wdSwitchToWindow method in ExportedWebDriverFunctions to improve compatibility with
updated the ` DN _ IteratorToFor ` and ` SAFE _ COLLECTION _ METHODS ` annotations in ` IteratorToFor ` to
set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure the application is properly initialized when the application is unavailable
replaced assertions in ByteBufferAs - X - Buffer . java and Heap - X - Buffer . java with direct position and limit calculations to improve code
replaced ` toUri ( ) . toUri ( ) ` with ` toMove ( ) ` in ` ConditionalResolverMergeFiles . java ` to
added a check for non - empty arrays before setting the array to ensure that the array is only removed when the length is non - empty to prevent
changed enum types from package - private to public in VirtualAuthenticatorOptions . java to allow access to the Protocol and Transport enum from other packages
replaced ` doc4 ` and ` doc6 ` with ` doc6 ` in ` TestMultiPhraseQuery . java ` to ensure consistency in document
do n ' t assign ticket reservation status for offline payment
added a ` _ onTimeoutThread ` variable and modified exception handling in ` HttpChannelState . java ` to ensure that the ` onTimeout `
replaced printStackTrace ( ) with debug logging in multiple test classes to improve logging clarity and ensure proper logging behavior
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
updated the logic for retrieving rows based on consistency for LOCAL _ SERIAL in StorageProxy . java to ensure proper handling of LOCAL _ QUOR
added support for the " Home " model in HeosDiscoveryParticipant and added a property for player serial number in HeosPlayerHandler to ensure that
added a ` Wait ` field and its getter / setter methods in ` PlainSelect ` , ` SelectDeParser ` , and ` SelectDeParser
refactor Neo4j to utilize AttributeController for attribute handling to improve code maintainability and readability by centralizing attribute management
added null check for serverName in SessionManager . java to ensure robustness by preventing potential NullPointerExceptions
nifi - 12626 : deprecate rocksdbmetronome package , deprecate rocksdbmetronome
updated the way the boolean isGrantable is retrieved by using a resource string to improve code readability and maintainability by using a more descript
updated the conditional check for the " javascript : " URL in JavascriptContext . java to improve code readability and maintainability by using a more
mondrian : fix test failure on macos
hhh - 16464 add a check for new cf column in loadtesttool .
added Disposable interface to Texture class to implement the Disposable interface in the application
updated WebAppRegistrationCustomizerImpl and OSGiAppProvider to handle null tldBundleLocation and adjusted imports accordingly to improve robustness and
refactor GoQuorumCompatibilityMode check into a separate method to improve code readability and maintainability by reducing duplication
replaced ` IOException ` with ` Throwable ` in ` HttpInput . java ` to improve type safety and clarity in error handling
added a condition to check if the era is not " JP " in the Thailand list to ensure that the era is not in the era list
updated response type from ` Wrapper . class ` to ` ViewPrivilegeResponseWrapper . class ` in multiple service classes to ensure consistency and clarity in response
updated equals and hashCode methods in FilteredQuery . java to use getBoost ( ) instead of equals ( ) and hashCode ( ) to ensure accurate
removed unnecessary whitespace in the constructor of FileMenuFilter to improve code readability and maintainability
[ geogebra ] update texteditadvancedpanel to use verticalpanel instead of listbox
added a new test class TestCMSClassUnloadingDisabledHWM to verify CMS class unloading behavior to ensure that CMS class unloading is
fix forge event not work if there be no entity
updated ` ColumnMapKeyMappingPreparedStatementSetter ` to implement ` ItemPreparedStatementSetter ` instead of ` KeyMappingPreparedStatementSetter ` to improve
[ hotfix ] [ test ] use identityqueryfilter in compactionstest
added null check for ` typeNode ` in ` MiniAapt . java ` and a corresponding test in ` MiniAaptTest .
added ` SPELJudge ` operator and updated ` OperatorEnum ` and ` OperatorJudgeFactory ` to include ` SPELJudge `
[ hotfix ] [ runtime ] fix checkstyle violation in localexecutionplanner
use lookup . getdefault ( ) . lookup ( ) instead of javax . swing . service
updated import statements in ConscryptCertBlacklist , ConscryptHostnameVerifier , Java8EngineSocket , and Java8FileDescriptorSocket classes to
updated attribute lookup logic in AttributeResolution9 . java and ShadowArscAssetManager9 . java to ensure proper handling of attribute lookups and improve
updated the version of the fullOptions in SetupHid . java from " 1.1 " to " 6 " to ensure compatibility with the latest version
[ calcite - 218 ] pushprojectintotablesourcescanrule : add support for metadataonlyprojectionrexuttle
added imports and sorted localized names in AboutActivity . java to ensure consistent sorting of localized names in the spinner dropdown
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a conditional check for live streaming in HomeFragment to ensure that shared preferences are only added when live streaming is enabled
added exception details to the MappingException message in AuditConfiguration . java to improve error reporting by providing more context when an exception occurs
[ hotfix ] [ test ] use awaitility in fileconsumerpollstrategystoponrollbacktest
updated generic type parameters from ` AbstractType ` to ` AbstractType < ? > ` in ` SchemaLoader . java ` and ` CompositeTypeTest
added a ` transports ` array and ` supportsTransport ` method to ` GitClientApplication ` and updated related logic in ` RepositoryUrlPanel `
added a new message " Long press nav handle enabled " to various input consumer classes to provide clearer insights into the interaction process
updated version filtering logic in ChangeParentPom . java to handle null mavenMetadata to improve robustness by avoiding potential NullPointerExceptions
added a check for " Large Page Support : " in the TestLargePageUseForHeap . java file to ensure proper handling of large page support
do n ' t skip event migration if the usage db do n ' t exist
[ flink - 18124 ] [ test ] fix test failure on window
removed the requireInitialized ( ) method from ObjectStreamClass and added a new TestObjectInputStream class to ensure proper serialization and deserialization of ObjectStreamClass instances
removed unnecessary null checks for data center info in ZoneAwareDiscoveryFilter . java to simplify the condition for better readability and maintainability
changed log level from error to warn in OpenTracingTracer . java to improve log level from error to warn for better debugging
added a toString ( ) method to the Generator class to provide a clearer representation of the registered generators
refactor authority handling in URI . java and add unit tests in Test . java to improve readability and maintainability of the code
added a null and empty check for resource in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to ensure that
added error logging for null response in AccepttoApiUtils . java to improve error handling and provide clearer feedback during response extraction
added a conditional check for Android version in VertexBufferObject . java to ensure compatibility with Android 5 and above
refactor SybaseASADatabase class to improve code readability and maintainability
added a ` forceProjection ` boolean parameter to the ` HashJoinInfo ` constructor and updated related methods to include it to allow for backward compatibility with
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide a way to retrieve the string distance from the SpellChecker
added FLAG _ ONE _ SHOT , FLAG _ IMMUTABLE , and FLAG _ IMMUTABLE to AndroidImplementation . java and modified PendingIntent
added methods to set and append read column IDs in HiveFileFormatUtils to improve code readability and maintainability by encapsulating the
replace instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java `
added multiple calls to DisplayTemporaryToast ( ) in SavedExperiments . java to improve user experience by providing a clearer toast message
added null check for serviceInfo version before setting its version to avoid potential NullPointerExceptions when the version is null
added a new test class ` RawSerializationTest ` for JSON serialization of ` Gson ` objects to ensure proper serialization and deserialization of ` Gson ` objects
( chore ) camel - selenium : rename ` ` server ' ' to ` ` ssl ' '
refactor loop structure in ExpansionViewHelper to use a loop for better readability to improve code readability and maintainability by reducing redundancy
increased assertTimeout from 3 seconds to 60 seconds in ExpiringUrlCacheTests . java to allow more time for resource access exceptions
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the behavior of the NGram
refactor AclImpl class implementation to improve code readability and maintainability
refactor test methods in EasyRandomTest for better readability and maintainability to improve code maintainability and readability by reducing duplication
[ citrix ] do n ' t throw exception when stop vm
added a thread - local variable ` __ tryWriteAgain ` and modified ` _ runCompleteWrite ` to use it to improve thread safety and
refactor null checks and add ancestorsVisible method to improve code readability and maintainability by encapsulating ancestors visibility logic
added logging for deployment group name and error message in RollingUpdateOpFactory . java to improve debugging and traceability of deployment group operations
[ hotfix ] [ table - common ] fix checkstyle violation in sinkprovider
added handling for BadCredentialsException in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve error handling and provide clearer
refactor AtMostXVerificationTest class to improve test coverage to enhance reliability and maintainability of the verification process
updated the default QTYPE constant from " lucene " to " lucenePlusSort " in multiple files to ensure consistency in naming conventions across the code
updated SimpleDateFormat to include Locale . US to ensure consistent formatting across different locales
added a ` isInitialized ( ) ` method to ` ILanguageServer ` and modified the ` JavaLanguageServer ` class to implement the ` is
updated the ` hasIdToken ` parameter from ` idToken ` to ` shouldHaveIdToken ` in ` ClientAPITokenIntegrationTest . java `
added beginTransaction ( ) and endTransaction ( ) methods to DatabaseAdapter and updated GncXmlHandler to use this method to improve transaction management and
replaced byte array with ByteArrayOutputStream for reading data to improve performance and reduce memory usage during byte reading
refactor exception message formatting in MessagingTemplate . java to improve readability and maintainability of the code
added an override for the isAcceptable method in AutoFormatVisitor to check if the source file is an instance of J . CompilationUnit to ensure
added setMaxBufferedDocs ( Integer . MAX _ VALUE ) and setRAMBufferSizeMB ( 100 ) in TestIndexWriterMergePolicy . java to improve
added a call to clear the wits array in Manager . java and implemented a test for updateWits in NodeDelegateImpl . java to ensure
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by handling potential NoSuchElementException
flume : use log . info ( ) instead of log4j
refactor BasicAuthIntegrationTest and DaemonStream to use ExecutorService for reindexing to improve test reliability and ensure thread safety during reindex operations
replaced HashMap with LinkedHashMap for nodes in DependencyUtil . java to ensure consistent iteration order for graph nodes
added support for internal error mapper in JerseySupport to enhance error handling and ensure proper handling of internal error cases
refactor header validation logic into a separate method ` validateHeader ` to improve code readability and maintainability
refactor system property handling to use a switch statement for improved readability to enhance maintainability and maintainability of system property management
changed method parameters from String to CharSequence in StringSubject . java and added unit tests in StringTest . java to improve type safety and ensure correct behavior
added ` toBeInvestigated ` and ` toBeInvestigated ` intrinsics to ` CheckGraalIntrinsics . java `
rename IntUtilsTest to PrimUtilsTest to improve clarity and consistency in naming conventions
updated the way properties are stored in the PersistenceManagerProvider to ensure compatibility with compactor configurations
refactor DeploymentOptions class to improve code organization to enhance maintainability and readability of the code
updated the ` updateTextButtonWithDrawable ` method to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` to improve code
replaced ` ByteArrayInputStream ` with ` StringReader ` in ` XmlParser . java ` and ` YamlParser . java ` to improve code readability and
added logic to rewrite coalesce functions in RexNodeConverter to ensure proper handling of COALESCE functions in the RexNodeConverter
camel - 14284 : camel - hl7 : remove unnecessary test method
set the context class loader for the proxy factory in JavassistProxyFactoryFactory to ensure compatibility with the current thread ' s context class loader
added synchronized keyword to the DefaultDateTypeAdapter constructor and updated related methods to enhance thread safety and ensure thread safety during date deserialization
updated method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
updated URI handling in HttpClientRequestBase . java and added assertions in HttpClientRequestBaseTest . java to improve query URI handling and enhance test coverage for URI
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to simplify the code and improve readability
changed log level from fatal to warn in FSHLog . java to improve logging clarity by using a more descriptive warning level
changed the implementation of ` getValues ( ) ` to ` NodeMapIterable ` and added a new ` NodeMapIterable ` class to enhance the
replaced ` FilterDefinition ` with ` subPredicate ` in ` DiscoveryClientRouteDefinitionLocator . java ` to improve clarity and consistency in predicate handling
added a check for non - empty fields before adding them to operations in MongoRecordReader and updated the return logic in RexToMongoTranslator to
add admin to the list if there be no admin
replaced instances of ` MultiFields ` with ` SolrIndexSearcher ` in multiple classes to ensure compatibility with Solr ' s indexing mechanism
replaced ` bean . toString ( ) ` with ` ObjectHelper . getIdentityHashCode ( bean ) ` in ` ConstantBeanHolder . java ` to
refactor GroovyParserVisitor to remove redundant checks for line number to simplify code and improve readability by eliminating unnecessary checks
remove uninterruptible method from frameinfoqueryresults . hashCode ( java . lang . string )
[ java ] increase wait time for full test to make it more robust .
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to provide package
updated the calculation of buffer size in MessageUnpacker . java to ensure the position is within the bounds of the buffer to improve accuracy of buffer
updated import statement for Nullable from io . micrometer . common . lang to io . micrometer . core . lang
updated COLUMN _ COMPONENT _ COMPONENT _ COMPONENT _ COLUMN _ COMPONENT _ AND to include COLUMN _ USER in IconCache . java to
fix a bug in defaultmqproducerimpl . getbackpressureforasyncsendsize ( )
do n ' t add class - info to whitelist resource if class - only be enable .
cloudstack - 15420 : fix duplicate dhcp foreign key for pod , physical network , and device
removed the IJava2DRenderer interface from the Java2DRenderer class and removed it from the Java2DRenderer class to simplify the code
added an override for the onTearDown method in DefaultAudioSink . java to ensure proper handling of offload buffers in the audio sink
refactor UpstreamCacheManager to use a concurrent map for delayInit , delayInit , scheduledTime , and scheduled methods to improve concurrency handling and ensure
refactor StreamType class implementation to improve code readability and maintainability
updated the assertion message in Recording . java to include the expected output time to improve clarity of error messages for better debugging
updated imports and modified user authentication logic in FilestorePage . java and RootPage . java to improve code clarity and maintainability by using a
ignore camel - elasticsearch - rest test due to miss @ ignore annotation
do n ' t use class . getclass ( ) in controlbusfactorybean . accept ( )
updated button text from " leftButtonAltcoin " to " sellWithFiat " in OfferBookChartView . java to reflect the new market
camel - 14224 : camel - restlet - add restlet invalid url test
refactor createNextBlock and createNextBlock methods to use coinbase instead of blockHeight to improve code readability and maintainability by reducing redundancy
updated BTreeMapJava and ConcurrentSkipListMapTest to implement Serializable and added serialCloneNoCatch method in JSR166Test to ensure proper serialization
added null check for the cause before logging error message in RuleEngineImpl . java to avoid potential NullPointerException when the cause is null
reformatted conditional statements in Main . java for improved readability to enhance code readability and maintainability
changed the method call from ` mFilesAll ` to ` mFiles ` in ` LocalFileListAdapter . java ` to simplify the code by
deleted the PlainVerifier . java file to remove unused code to streamline the codebase
added a conditional check to close system windows when triggered fromAltTab to ensure proper resource management and prevent potential memory leaks
updated DialogFragmentIT and OCFileListBottomSheetDialog to use BottomSheetBehavior instead of BottomSheetBehavior to improve user experience by
added UTF - 8 character encoding to the body charset in RestAdapter . java and MimeUtilTest . java to ensure compatibility with UTF - 8
added a call to super . deinitialize ( ) in TextField . java to ensure proper initialization of the TextField instance
replaced ` writeObject ` method with ` TestUtilities . serialised ` in ` LogFormatTest . java ` to streamline serialization process and improve code
updated the method to use ` previousUntilLastClause ` instead of ` previousClause ` in ` LogicalGenerator ` and ` GroupByFillDataSet `
added checks for negative array size and improved argument handling in JAXWSExceptionBase . java to enhance error handling by throwing a NegativeArraySize
updated JUnit imports from ` org . junit . Test ` to ` org . junit . jupiter . api ` in ` Ct
increase the join time from 10 seconds to 60 seconds in T6567415 . java from 10 seconds to 60 seconds to improve performance by reducing
[ hotfix ] [ test ] change default value of slotsharinggroup to pipelinedregionschedulingstrategyfactory by default
added a ` title ` field and its getter method in ` ShadowActivity ` , ` ShadowAlertDialog ` , and ` ShadowToast ` classes
updated logging imports to use POILogger instead of LogFactory to improve compatibility with the latest POI library standards
refactor InstarHandler to use a new method for setting channel state and object code to improve code readability and maintainability by consolidating
do n ' t remove local map stats when delete a map
updated enum type from ' PARAM ' to ' HEADER ' in Option . java and modified status check in Response . java to improve code readability and
refactor code to use JavaFileManager for finding Java files to improve code clarity and ensure proper handling of Java files
[ hotfix ] [ platform ] add project - name to additional settings .
added a new test class ` DeprecatedStubbingTest ` for testing deprecated stubbing functionality to ensure that the stubbing functionality behaves as intended and
updated import statements in ITBraveServletFilter . java to use javax . servlet . DispatcherType instead of org . eclipse . jetty . server
add ` ` @ nml ' ' and ` ` nml ' ' and ` ` @ nx ' ' to the list of non -
[ bouncycastle ] make fips allow rsa key exchange configurable .
replaced the use of ` output _ reader ` with ` reader . close ( ) ` in multiple files to improve code readability and maintainability by
( chore ) camel - pubsub : add deleteoauthserviceandaccesstoken ( ) and deleteoauthserviceandaccesstoken ( ) method
updated animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to improve animation
added UpdateRegionLocationPlan to ConfigPhysicalPlan and updated logging statements in ProcedureManager , ProcedureManager , ProcedureManager , RegionMigrateProcedure
added a new file ` FileDialogLeakTest . java ` that tests the finalization of the ` FileDialog ` class to ensure proper cleanup of the
changed package of TestOpenTableInCoprocessor from org . apache . hadoop . hbase to org . apache . hadoop . hbase . coprocessor to
add support for uninterruptible method in trufflefeature
[ hotfix ] [ protobuf ] remove unnecessary parameter in pbcodegenrowdeserializer and pbcodegenrowserializer
updated condition in DrillSidewaysScorer . java to check if disi is not null before proceeding to ensure correct handling of dimension
added synchronization to the setNewSourceInfo method in ExoPlayerTest , DynamicConcatenatingMediaSourceTest , and FakeMediaSource classes to
added JVM spec version handling in Constants . java and updated Java version check in Helper . java to ensure compatibility with Java 9 and above
updated FileReporterTest to use generic type casting for null values to ensure proper handling of null values and improve type safety
updated the condition to check if the end - to - end encryption keys exist before proceeding to ensure that the end - to - end encryption keys
added home display functionality to the action bar in DirectMessageConversation . java to enhance user experience by allowing users to click on the home button
added support for user authentication in RpcServlet and updated PROTOCOL _ VERSION from 5 to 6 and added user retrieval methods in RpcUtils to enhance user
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL to enable detection of MSSQL architecture in MSSQL
replaced the variable ` startClass ` with ` originalStartClass ` in ` WhiteboxImpl . java ` to improve code readability and maintainability by
[ java ] add local support for jimple . newlocal ( ) and jimple . newlocal ( )
replaced instances of ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContext
do n ' t attempt to fix the look and persistence issue in the common app .
updated regex pattern in AppPage . java to correct the spelling of " V { $ version } " to ensure consistent formatting of version strings
refactor animation listener implementation in LauncherAppTransitionManagerImpl . java to use startAlpha and appIconAnimatorSet for improved readability to enhance
updated the error message from " base58 " to " version " in the AddressFormatException to reflect the correct version of the network
updated the method call from ` offerPayload . getExtraDataMap ( ) ` to ` newOfferPayload . getExtraDataMap ( ) `
refactor milestone parameter handling in TicketPage . java to ensure milestone parameters are only created if the milestone is open or not
changed the battery initialization from 640 , 640 , 0 to 80 in PipeItemsWood . java to allow for more flexible battery configuration
refactor getClusterKey method to include blueprintName and blueprintRev parameters to improve code readability and maintainability by centralizing the method signature
initialize downgradeAllowed to true in UpgradePack . java and add a test case in UpgradePackTest . java to ensure that downgradeAllowed is
updated method calls from ` fElementQName ` to ` fElementStart ` and ` fEntityScanner ` to use ` fElementQName ` instead of
[ lwjgl ] add support for load library from a classloader .
replaced ` App _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` AppsCustomizePagedView `
updated entry handling in DefaultPlatformManager and FatJarStarter classes to ensure proper resource management and prevent potential memory leaks
updated method signatures in TestSecretKeyCredentialHandler . java for consistency to improve readability and maintainability of test assertions
camel - 14235 : camel - spring - boot - spring - boot - spring - boot - spring - boot - spring - boot - spring
[ hotfix ] [ metric ] fix typo in metricoptions
hbase - 14276 fix testfulllogreconstruction fail on slow ci server
added a new boolean field ` reuseAddress ` to the ` DatagramSocketOptions ` class to allow dynamic configuration of the ` reuseAddress ` property
[ hotfix ] [ server ] fix typo in serverconfig
[ java ] remove deprecate Locatable interface from the project
updated error prefix from " true " to " retrievable " in VersionInfo . java to improve clarity and accuracy of error messages for better
replaced references to ` equalityPredicateColumns ` with ` predicateColumns ` in ` StarTreeIndexOperator . java ` to improve code readability and maintain
removed unnecessary whitespace in the initNode method call in HandshakeHandler . java to improve code readability and maintainability
removed unnecessary closing braces in Navigator . java to improve code readability and maintainability
updated class visibility from private to package - private in RecordReaderFactory . java and added a new test class in RecordReaderFactoryTest . java to
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and corresponding unit tests to
refactor grouping logic in CalciteSqlParser to use a utility method for better readability to improve code maintainability and reduce duplication in
replaced UnsupportedOperationException with Unsafe ' s invokeCleaner method in MappedByteBuffer and FileChannelLinesSpliterator to improve memory management and ensure proper resource management
replaced calls to ` l . getValidator ( ) . getValidator ( ) ` with a local variable ` validator ` to improve code readability and
added a schedule method to CircuitBreakerImpl and updated the testCircuitBreakerTest to use ScheduledFuture instead of a long wait time to improve
removed redundant FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent
updated the property name from " webui . submit . upload . ajax " to " webui . submit . progressbar " in multiple files to
added JUnit 5 @ Disabled annotation to TableExtRetrieverTest . java to disable tests related to column privilege retrieval
added synchronized keyword to addExportedCount methods in EntityGraph . java to ensure thread safety when adding exported counts
replaced ` IntRangeUtil1 . requireNonNegative ` with ` IntRangeUtil . requireNonNegative ` in ` MetricsImpl . java ` to
updated HttpParser to handle SPACE characters in HttpParser and added a new test for encoded header in HttpParserTest to improve error handling and ensure
updated the layout reference from trends _ activity to configuration _ activity in ConfigurePagerActivity . java to align the activity ' s layout with the new configuration
updated print statement to use " pos " instead of " + i " in SLWTTextListing . java to clarify the purpose of the
solr - 12028 : refactor ForceLeaderTest to use TimeOut and add a new ForceLeaderWithTlogReplicasTest class to improve
refactor Thread class implementation to improve code readability and maintainability
refactor RECOGNIZED _ TEMPLATE _ FILE _ FILE _ SUFFIXES set initialization and add forceTemplateMode flag to enhance template
camel - 14284 : camel - cxf : fix camel - cxf binding for soap soap message
removed unnecessary whitespace in YamlRepresenter and RepresentConfigurationSection classes to improve code readability and maintainability
updated date formatting in ` ToChar . java ` and added a new SQL query in ` TestFunctions . java ` and ` TestFunctions . java
added validation for transaction and write IDs in GenericUDTFGetSplits . java to ensure proper handling of valid transaction and write IDs
updated logging statements to use ` isEmpty ( ) ` instead of ` length ( ) = = 0 ` to improve code readability and maintainability by
added check for null bookpath before load the sheet
reformatted code in SSTDeserializer and added a new test case in TestSSTDeserializer to improve readability and maintainability of the code
updated the default grid column handling in AppPreferencesImpl and modified scaling logic in ExtendedListFragment to improve flexibility in managing grid columns based on user preferences
updated field descriptions in Platform . java and ComparisonFailureWithFieldsTest . java to include line - break characters to improve clarity and accuracy of
[ java ] do n ' t set waitingforkeys to false in sample queue .
changed api path from " api " to " margin " in OkexV3 . java to ensure compatibility with the latest API version
refactor conditional statements in LineUtilitiesTests . java for better readability to improve code readability and maintainability
added error logging for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java and
[ java ] add debug log for defaultdrmsessionmanager . getdefaultdrmsession ( ) .
added support for method calls in VariableContext and updated related test cases in TestVariableContext to enhance functionality and ensure correct handling of method calls in the
added tests for invalid compilation unit and profile string JSON parsing in ExperimentParserTest . java to ensure proper handling of invalid compilation units and profile strings
do n ' t use buffer . limit ( ) in piece and sharing peer .
added a ` HttpClientProperties ` parameter to the ` NettyRoutingFilter ` class and updated related classes to include a ` HttpClientProperties ` parameter to
refactor ` NativeLinkTargetGroup ` to use ` getTargetForPlatform ` instead of ` getCxxPlatform ` to improve code clarity and maintainability
added unit test base on user forum issue
added ` visitFieldAccess ` method to ` ASTConverter ` and implemented ` convert ` method in ` RexNodeConverter ` to enhance field access
added a static final array for QUERY _ LOG _ ENTRY _ VALUES in QueryLogger . java to improve code readability and maintainability by
[ java ] use relativizenoproxy instead of prepareabsoluteuri for proxy .
refactor PKCS12KeyStore to handle null chains and improve certificate handling to enhance robustness by preventing potential NullPointerExceptions
added reflection access checks and refactored related methods in the Bootstrap and ReflectionCheckLinker classes to enhance security by ensuring proper access control for reflection
removed the ` public ` access modifier from the constructors of ` CollisionMap ` to restrict access to the constructor and improve encapsulation
deprecate getrawinputfromtransactioninput ( ) in tradewalletservice , deprecate it
refactor logging level handling in ConfigurationValueConverter and Main classes to use switch - case statements to improve code readability and maintainability
do n ' t use region _ id for region _ id in configserverimpl
add encrypted document encryption for old Excel file ( # 60284 )
add extra _ image _ builder in mx _ java _ benchmarks . py to support extra _ image _ builder
removed the conditional statement from the image visibility setting in TimeLineCursorAdapter . java to improve code readability and maintainability
increased timeout duration from 10 to 50 milliseconds in BatchingStateChangeUploadSchedulerTest . java to allow more time for job execution to complete
updated directory creation logic in ShadowContext . java and added new test cases in ContextTest . java to ensure proper directory creation and improve test coverage for
refactor ExceptionFactoryImpl to use Class . forName for better exception handling to improve code readability and maintainability by using a more descriptive
increase WAIT _ TIME _ MS from 10000 to 60000 in LauncherInstrumentation . java to allow more time for the launcher to complete
updated ConnectOAuth2RequestFactory to use a wildcard import and added audience extension handling in ConnectOAuth2RequestFactory and ConnectTokenEnhancer classes to
[ hotfix ] [ kafka ] remove default value of breakonfirsterror = true
added a new constant ` selectableItemBackground ` to the ` R . java ` class to define a selectable item background in the application
replaced specific trade DTO imports with a wildcard import and added a method to place stop orders to simplify import statements and improve code readability
removed redundant event type assignment in TxnSetOperation . java to streamline event handling logic for better readability
added a new ResumableRandomAccessFileListener class and updated the ResumingExternalDownload class to use it to enable the resuming of file
updated the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
added functionality to set and set format values in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to ensure correct format
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer and flinkkafkaproducer
updated the condition to check for the maximum compressed length in CompressedInputStream . java to ensure that the calculation correctly reflects the maximum compressed length
datajpa - 102 - add redisstringidempotentrepository to allow for idempotent value
fix damage in containerretrieval ( # 213 )
fix legacylocalrepositorymanager to check for local repository layout .
added a check for task manager initialization before starting the LocalInstanceManager and updated related classes to improve error handling and provide clearer logging for task manager
added descriptions for artifact deployment in AbstractArtifactResolutionException . java to enhance error reporting for artifact deployments
updated ` getInternalTemporalPath ` method calls to include ` mContext ` parameter in ` FileStorageUtils . getTemporalPath `
added a method to retrieve FeedEntryStatus from a list of FeedEntryStatus in FeedEntryStatusDAO . java to enhance functionality to retrieve feed entries
added execution logic for VertxThread in ContextImpl . java and updated test cases in BlockedThreadCheckerTest . java to ensure proper execution of
updated the ` instantiate ` method to accept ` formatterString ` instead of ` formatterClass ` and added a check for ` ctorArg ` to ensure
added conditional parsing of Ezvcard files based on SDK version to ensure compatibility with Android O and above
replaced ` setRemoteAddress ` and ` setRemoteHostname ` methods with ` this ` and ` setRemoteHostname ` methods in ` Credentials . java
added a null check for ` realClass ` in ` Robolectric . java ` to ensure that ` realClass ` is not annotated with
added tlsMutualAuthenticationRequired ( ) check in NettySslContextFactory and ExampleNettySslContextFactory to ensure tlsMutualAuthenticationCertificate
added a test method to verify handling of SSL exceptions in BasicHttpEndpointOverHttps to ensure proper handling of SSL exceptions during HTTP requests
added getter methods for consumer , producer , and producer in AbstractKafkaResumeStrategy . java to improve encapsulation and maintainability of
refactor event handling in PageChangeListener and add imports in FrameRenderer to improve code readability and maintainability
corrected a typo in the warning message from " address / subject / text " to " from / text " to " from / text "
add draftqueryoptimise ( ) method to beandescriptor and beandescriptors
added error handling for resource transfer failures in MultipartBody . java to improve robustness by providing clearer feedback on unavailable resources
corrected the spelling of " CtTypeReference " to " CtTypeReference " in multiple files to ensure consistency in code formatting
updated multiple Java files for consistency and clarity to enhance maintainability and readability of the codebase
add working directory to the linked file in attachfileaction .
added LoadOptionsBuilder imports and updated SchemaInfoLevel configuration in AccessTest . java to ensure proper loading of schema information levels during tests
updated package and annotations in TestLoadLegacyLibrary . java and added a new test method in TestLoadLegacyLibraryTest . java to improve organization and
replace exception throwing with a return statement in TestReader . java to improve error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty . java to enhance the functionality of prototype property management
added a try - with - resources statement to the ` executeInTransaction ` method in ` AbstractDbmsOperationHandler ` to ensure proper resource management
refactor DataStreamJob class for improved clarity to enhance maintainability and readability of the code
refactor error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and prevent potential resource leaks
camel - 14284 : camel - cxf : fix type cast exception in camel - cxf
added a check for the " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure compatibility with H2 - 14 protocol
updated method handling and parameter handling in LambdaToMethod , ClassFileVisitor , and ReflectionVisitor classes to improve readability and maintainability of the code
updated the regex pattern for SBARQ from version < 2 to version < WHNP > in CoordinationTransformer . java to improve accuracy of
updated the cache file size from 5000 to 60000 milliseconds in DL4JInceptionV3Net . java to allow more time for URL
added phraseSlop setting to mpq in QueryParser . java to ensure phraseSlop is properly set during query processing
increased sleep duration from 10 seconds to 100 milliseconds in LongPressMouseListenerTest . java to improve responsiveness of the mouse listener test
updated COLLECTOR _ HOST _ PROPERTY from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink classes to
[ java ] schedule game task in terasology . schedule ( ) instead of schedule ( ) .
updated visibility logic in EditShareFragment to conditionally display edit options based on available state to ensure proper visibility based on edit options availability
updated progress calculation in DepthController . java to ensure progress is non - negative to improve accuracy of depth tracking
removed the ` packetReceived ` method from ` ClientSession ` , ` ComponentSession ` , and ` Packet ` classes to streamline the session management
refactor authentication handling in DefaultCasDelegatingWebflowEventResolver , DelegatedAuthenticationGenerateClientsAction , and DelegatedAuthenticationGenerateClientsAction
added null check for service before accessing its presence in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction to
[ java ] add ` ` hidden = true ' ' parameter to pantheoncommand
added a method to do not instrument the CoroutinesRoom $ Companion class to ensure that the CoroutinesRoom is not instrumented
added synchronization to the isSupported method in NegotiateAuthentication . java to ensure thread safety when accessing the context class loader
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process for better maintainability
camel - 14247 : camel - persistentqueuereplymanager should set thread name to 1 for thread name .
refactor AuthenticationProvider and TargetObject classes to improve code organization to enhance maintainability and readability of the code
do n ' t flush the mdc block if it ' s a tagged image .
[ log4j2 - 132 ] add patternlayouttest . testpatternselector ( ) method
[ java ] remove unsupportedoperationexception from htabrowserlauncherlaunchertest
added MwThankPostResponse class and created a new MwThankPostResponse class to enhance the functionality of the MwThank
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` and ` SslConnection ` to implement ` SocketBased ` to enhance socket
refactor revokingStore initialization and configuration settings in Manager . java to improve code readability and maintainability by reducing duplication
added tests for implicit join functionality in HQL queries to ensure proper functionality and functionality of the HQL query functionality
use system . lineseparator instead of system . lineseparator in nonvisualregressiontest
refactor commit handling in IndexWriter and MockDirectoryWrapper classes to improve code readability and maintainability by centralizing file deletion logic
removed the ` final ` modifier from several methods in ` BaseError . java ` to improve code readability and maintainability by reducing redundancy
added a validation check for the percentage of resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the amount of resource is
added a condition to check if the old login is displayed in AuthenticatorActivity to ensure compatibility with old logins in the application
rename StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
removed conditional check for ` EditTeamPage ` in ` EditTeamPage . java ` to simplify code and improve readability
updated debug log message to include exception details to improve clarity of error reporting for plugin credentials during startup
added a finally block for closing the server socket channel in ConnectionManager . java to ensure proper resource management and prevent potential memory leaks
refactor Rocket class implementation to improve code readability and maintainability
refactor partition specification creation logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by reducing duplication
refactor rounding logic in Kernel . java and StringTemplate . java to use a new method ` getRoundHalfUpFactor ` to improve code read
added visitDirectory method implementations in ` JarDirectoryStep ` , ` DirectoryTraversal ` , and corresponding tests in ` DirectoryTraversal ` to ensure that
added a new file ` JWKSetEditor . java ` that implements a PropertyEditorSupport for setting a JWK set to facilitate the configuration of J
replace minTerm and maxTerm with firstPendingTerm and lastPendingTerm in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter classes to
truffle : do n ' t call method . resolveparameterklasses ( method . getclassname ( ) ) .
changed the default value of byIP from true to false in Fetcher . java from true to false to disable the fetcher ' s IP configuration
simplified the condition for setting timeToLiveOfQuery in StatementUtil . java to improve code readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher and updated genPath handling in HaskellGhciRuleIntegrationTest . java to
refactor ReplicaPosition class implementation to improve code readability and maintainability
do n ' t run network stats update task if the initial delay be negative .
replaced ` allAppsFade ` with ` FINAL _ FRAME ` in multiple animation classes to improve animation consistency and maintainability by using a
updated swipe length calculation in Background . java to adjust the visible bounds based on display density
added a new module - info . java file that exports the org . eclipse . jetty . http3 . server module and requires the org . 
updated JsonType to handle null values instead of hardcoding " myJsonObj " to " MY _ JSON _ OBJ " to ensure robust
removed redundant conditional checks for null context in ResourceResolverBean . java to simplify code and improve readability
[ hotfix ] [ runtime ] change executioncheckpointingoptions default value to 0
updated the ` reportInnerClassReferences ` method to use ` ElementKind ` instead of ` TypeElement ` in ` InnerClassesTable . java ` to
updated the command string format from " test . tool . vm . opts " to " test . tool . vm . opts " to ensure consistent command
replaced FluentIterable with Stream in ChromeTraceBuildListenerTest . java to improve code readability and reduce dependency on FluentIterable
changed the ` register ` variable from ` true ` to ` register ` in ` AbstractServiceConfig ` and added a ` REGISTER _ KEY `
added security mode handling in SettingsManager and modified onClose and onSettingsChanged methods in OTRManager to ensure proper session management and improve error handling
added outline size and transparency properties to the NODE _ LABEL _ OUTLINE _ SIZE and NODE _ LABEL _ OUTLINE _ COLOR properties to
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
change default value of false from false to true in Win32FontManager . java to ensure consistent behavior across font management processes
added null check for v before visiting to avoid potential NullPointerException when v is null
add error handling policy to jtbatchcompiler if no classpath
added TextBlockAnchor and TextAnchor fields to LabelBlock and updated drawing logic to utilize it to improve text alignment and alignment handling in the label
refactor Class and Parameter classes for improved clarity to enhance code readability and maintainability
refactor IndexReader class implementation to improve code readability and maintainability
changed the type of the ` isLoopback ` variable from ` boolean ` to ` Boolean ` and added null checks for ` isLoopback `
updated the ` fromRfc1123DateString ` method to accept a ` Locale . US ` parameter to enhance flexibility in date formatting by allowing
updated the download error message to include the extension " . pdf " in the error message to improve clarity of the error message for missing files
[ hotfix ] [ json ] add ` ` nohits ' ' property to jsonqueryevaluator
remove aggregationratio from quotamanagerimpl # updatequotdiskusage and # updatequotingdiskusage
[ java ] fix race condition in election . java
[ java ] remove uncheckrun ( ) from streamfilesp . close ( )
refactor conditional checks in PageChangeListener . java for better readability and maintainability to improve code readability and maintainability by reducing duplication
bug # 44536 - add filesharingrecord . iswriteprotected ( )
added error handling to unregisterInvalidatedSessions ( ) method in PluginMonitoringFilter . java to improve robustness by catching potential exceptions during session
refactor CategorizationFragment class to improve code organization to enhance maintainability and readability of the code
updated the status message from " reachable = false " to " reachable " in HueLightHandler . java to clarify that the status is not reachable
add isloading ( ) method to fml client handler ( # 57354 )
updated string concatenation to use ` Core . bundle . getOrNull ( " unit . millions " ) ` instead of ` mil [ ] ` to
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code readability and maintainability
added parameterized tests for usingReservedWordsAsRelationshipName in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure that reserved words are
added tests for JSON serialization , deserialization , and deserialization in MapTest . java to ensure proper handling of nested maps in JSON serialization and deserialization
added boundary checks for x2 and y2 in GeometryUtils . java to ensure proper handling of offset values
updated sorting order handling in FileDisplayActivity and added sorting order listener in ReceiveExternalFilesActivity to improve code readability and maintainability by using a
do n ' t try to find the testplan if there be no plan
replaced instances of " dbmsType " and " schemaName " with " getDbmsName " , " getTableName " , " getColumnName " ,
updated the handling of the ` argIdent ` variable and added a null check for ` argIdent ` to ensure that ` argIdent ` is only
updated the default protocol from " SSL - HTTP / 1.1 " to " SSL - HTTP / 1.1 " in JettyHttpComponent9 . java to
change default value of displayVolume from true to true to enable displayVolume functionality in the VolumeVO class
updated the ` version ` method to accept a ` boolean full ` parameter and modified the ` version ` method to accept a ` boolean full ` parameter
refactor condition checks in ChangeLogParameters . java for better readability to improve code clarity and ensure proper handling of global change logs
changed log level from warn to debug in JtaTransactionManager . java to improve logging clarity by using a more descriptive variable name
hhh - 16464 skip test that cause exception during sql string formatting of sql string
refactor socket timeout handling by replacing startHandshake ( ) with startHandshake ( ) and setsetSoTimeout ( ) to improve code readability and maintainability
added a condition to check if the MainActivity is not translucent in multiple fragments to ensure size calculations are only calculated when the activity is not
updated the CHA option key from false to true in EspressoOptions . java and added a new boolean field in NoOpClassHierarchy
added debug logging for original and current thread context class loaders in ActiveMQResourceAdapter . java to improve traceability of thread context class loading and
refactor JodaTimeRangeRandomizersTest to use a wildcard import and streamline import statements to improve code readability and maintainability by eliminating
added a conditional check for the jakartaee version before retrieving xsd resources to ensure proper handling of xsd resources based on the Jakar
[ fabric8 ] make readiness . isready ( ) return true if node be not a node .
updated variable names from ` liveEndpoints ` to ` handler . endpoints ` in ` StorageProxy . java ` to improve clarity and consistency in variable naming
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerException when creationStatements is null or empty
update RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to ensure compatibility with the latest RPC version
added null checks for System . getSecurityManager ( ) before accessing package access checks in ObjectStreamClass and ObjectStreamField classes to avoid potential NullPointerExceptions
refactor methods in Utils . java and update UGSCommandCount in XLCDCommunicator . java to improve code readability and maintainability
refactor DefaultMetricsTagProvider to use an immutable map for host and enhance tag handling to improve code readability and maintainability by centralizing tag
updated the test suite name from ` MockBrowserTest . class ` to ` MockBrowserTest . class ` to ensure consistency in test naming conventions
change default level from OFF to ERROR in Launcher . java from OFF to ERROR to ensure consistent logging behavior across the application
changed fields from non - final to final in IconNormalizer . java to ensure immutability and prevent potential null pointer exceptions
added a new boolean variable ` firstCallPrepareDo ` and modified the ` invokePrefixMethod ` method to handle the ` firstCallPrepareDo `
refactor workspace and exit overview mode handling in Launcher . java to improve code readability and maintainability by reducing duplication
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ` in ` AuthWithStoreFeature ` and removed ` asEagerSingleton ( ) `
updated the ` incomingAssociations ` method to accept a boolean parameter ` ignoreInvisibleAssociations ` to enhance the flexibility of the ` incomingAssociation
removed the CAPACITY _ TYPE _ PRIVATE _ IP from the removeBy method call to simplify the code and improve readability
updated the relative URL format in ProfileServlet . java to include a description for the asynchronous profiler on Linux 4 . 6 to enhance user experience by
added a new ` RequiredRefFieldModel ` class and refactored conditional checks in ` ModelResolver . java ` and created a new ` Required
updated class names from ` CasCoreConfigurationWatchConfiguration ` to ` CasCoreConfigurationAutoConfiguration ` across multiple files to ensure consistency in naming
refactor FeatureFlags class to improve code readability to enhance maintainability and readability of the code
updated StringBuilder initialization and modified unique ID handling in ConfigStore . java and added a new test for unique ID generation in ItemUIDtoHueID
added caching for the picture in TimeLineCursorAdapter , TimelineArrayAdapter , and TimelineArrayAdapter to ensure cache is only set when the
updated the configuration message for minor compaction on full CRUD tables to clarify the purpose of the compaction on insert - only tables
added a check to ensure the storage path is not null before proceeding to avoid potential NullPointerExceptions when the storage path is not available
refactor resize threshold checks in VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesHashTable , and VectorMapJoinFastLongHashTable
refactor LDAPConnectionService to improve code readability to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] deprecate @ XmlAttribute ( required = true )
removed debug tracing logs in TouchInteractionService and RecentsAnimationDeviceState to streamline debugging by eliminating unnecessary log statements
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated test assertions from ` hits . length ( ) ` to ` hits2 . length ( ) ` in ` TestMultiSearcher . java ` to
added a new file ` LucenePackage . java ` with a static method to retrieve the package of the ` LucenePackage ` to facilitate the retrieval of
updated the calculation of sizeInBytes from ` sizeInBytes ` to ` - sizeInBytes ` to ensure correct positioning of sizeInBytes
updated calculations in StatsRulesProcFactory and added estimate method in GenericUDAFBloomFilter , GenericUDAFEvaluator , and BloomK
added a null check for the drawerToggle before processing to avoid potential NullPointerExceptions when getDrawerToggle ( ) is null
added @ SuppressWarnings ( " unused " ) annotation to convertToAuthentication method to suppress warning about unused variables in the method
added support for enabling system JARs and modules in the Scanner class to enhance security by allowing system JARs and modules
[ msbib ] fix msb export format test failure
refactor core recovery cancellation logic in CoreContainer . java to improve code readability and maintainability by encapsulating core state management
refactor time calculation in bug5070081 . java to use a utility method for better readability and maintainability to improve code readability and
added a null and empty check for the found list in RepoEditView . java to improve code robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] fix typo in startup message
added support for DenyAllPermissionEvaluator and RoleHierarchy in SecurityEvaluationContextExtension to enhance authentication handling and ensure correct default role prefix is used for
added a check to set exponentSize to primeSize if it is zero to ensure exponentSize is set correctly based on primeSize
replaced instances of ` File ` with ` FileStorageUtils . getUsableSpace ` across multiple files to simplify code and improve readability by
updated the combine method in DistinctSqlAggregation and added a new test in DistinctSqlAggregationTest to improve performance and ensure correct behavior of aggregation
added a test method to verify post login activities on successful authentication to ensure proper functionality of login functionality for successful authentication
refactor ExtractorFramesRare to use a custom constructor for ExtractorSpanishStrippedVerb to improve code readability and maintainability
refactor CharArraySet to simplify code and improve type handling to enhance readability and maintainability of the code logic
updated the track count validation logic in MuxerWrapper . java to use a more descriptive variable name to improve code readability and maintain
updated ` JsBundleGenrule ` to use ` AndroidPackageable ` instead of ` JsBundleAndroid ` to improve compatibility with Android Android
updated character encoding handling in StringDictionary and added unit tests in DictionariesTest to ensure proper handling of UTF - 8 characters in string representations
updated the case name from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to improve clarity and consistency
added static field ` instanceClassName ` and modified ` instanceClass ` initialization in ` AbstractVector . java ` to ensure that ` instanceClass ` is
removed syncMetaLeader ( ) method from CMManager . java to streamline the synchronization process by eliminating unnecessary synchronization
updated return values in ContributionQuestionDetails and ContributionQuestionDetails to use ` perceivedContributionHtml ` instead of ` claimedToInstructor `
added import for TestLoggingExtension and annotated testLoggingExtension in DiagramRendererTest . java to enable logging functionality for test output
updated the ` findProperty ` method to include a ` mapUnderscoreToCamelCaseMapping ` parameter across multiple classes to enhance the functionality by allowing the use
added VIOMI _ WATERHEATER _ E1 device to MiIoDevices . java to support Internet electric water heater functionality
replaced calls to ` getSslSessionData ( ) ` with ` sslSessionData ` in ` SecureRequestCustomizer . java ` to improve code read
added a new file CreateNewSpreadsheet . java to demonstrate the creation of a spreadsheet using HSSFWorkbook to facilitate the creation of a spreadsheet
changed the return type of ` ttl ` and ` setTimeToLive ` methods from ` Duration ` to ` long ` and updated related getter and setter methods
updated CONTENT _ URI from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION in multiple files to ensure consistent behavior across the application
updated the version number for the testCompile group in SwaggerResolveTest . java to reflect the latest version of the test
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager . java ` to ensure thread
updated conditional logic in DocClassUtil . java to check for ' < ' instead of ' < ' to ensure proper handling of square characters in the
changed the method call from String . format to String . format in Workspace . java to simplify the code and improve readability
added import for Scope and sent a message for no validation errors in ValidateCommandStep . java to provide feedback when no validation errors are found
refactor IntegrationTestContextLoader to utilize a new method for configureing WebApplicationContext to improve resource management and ensure proper context initialization
updated scroll handling logic in Component . java and added pointer event handling in Container . java and JavaSEPort . java to improve scrolling functionality and ensure
updated type check from ` UUID ` to ` UUID ` in ` RamlType . java ` to improve code readability and maintainability
added a new class ` ClientStat ` and modified ` getByClientId ` and ` getCountForClientId ` methods to use ` String `
updated string replacement logic in CellContentConverter . java to replace " $ 1 " with " $ 2 " with " $ 1 " and " $
updated regex patterns in SeleneseTestCase . java to improve regex matching functionality to enhance accuracy of glob transformations
updated MondrianProperties . java file to improve clarity and maintainability of the code
added stack trace printing functionality in ProcessTools . java and modified test cases in CustomLauncherTest . java to improve debugging capabilities and ensure proper handling of
[ hotfix ] [ test ] remove obsolete test for embedded image
added a condition to check if the symbol has a slot for the store type before converting to ensure that the method is only converted if the symbol has
refactor ` ContainerMediaChunk ` , ` InitializationChunk ` , and ` InitializationChunk ` to improve code readability and maintainability by
added UTF - 8 encoding support to BaseLockFactoryTestCase to ensure proper handling of UTF - 8 encoding in test cases
tika - 353 add support for dynamic load error handler in tikaconfig
updated import statements and added package - info handling in ` DocLint . java ` , ` DocLintTester . java ` , and ` package -
added a new constant ` IMPORT _ CMD ` in ` DataImportHandler ` and introduced a new constant ` IMPORT _ CMD `
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest ` to ensure that inner classes do not
removed unused import of android . util . Log from JettyService . java to clean up the code and improve readability
added a new parameter ` workspaceScreens ` and modified the ` checkItemPlacement ` method to include ` workspaceScreens ` to enhance functionality by
add a KillSwitchServlet to the Jetty7AppServer and implement a KillSwitchServlet to handle the termination of the JVM in the environment
fix nullpointerexception in llrealtimesegmentdatamanager
added a check to skip processing for Teredo devices in the application to ensure compatibility with Teredo devices in Windows environments
do n ' t show error dialog if there be no contact contact
updated the registration of USER _ DETAILS _ SERVICE _ FACTORY in AuthenticationConfigBuilder . java to ensure proper bean registration for user details service
updated the drawBitmap method from ` r . left ` to ` r . null ` in ` FastBitmapDrawable . java ` to ensure the bitmap
corrected the spelling of " yymmdd " to " yymmdd " in MeitrackProtocolDecoder and TotemProtocolDecoder to
changed method visibility of getFontPath and getPlatformFontPath from protected to protected in SunFontManager . java and X11FontManager . java to
added multiple @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
updated exception handling in ClientMapStoreTest and ClientMapStoreTest to use ExecutionException instead of ReachedMaxSizeException to improve test reliability by ensuring
added a boolean flag ` keepEmptySentences ` to control the behavior of empty sentence processing in ` DocumentPreprocessor ` and ` MaxentTagger `
refactor createArtifactSubdirectory method to return a boolean instead of void to improve error handling for artifact subdirectory creation failures
replaced instances of ` JavacTool . create ( ) ` with ` JavaCompilerService . NO _ MODULE _ COMPILER ` in multiple files
added null check for resource return in DirectAgentAttache . java to avoid potential NullPointerExceptions during resource retrieval
updated the ` sendEmail ` method to throw ` MessagingException ` instead of throwing a ` MessagingException ` to improve error handling and reduce unnecessary logging
added a new API annotation to the PipeItemsObsidian class and modified null checks in PipeItemsObsidian . java to improve
updated method names from ` parseMath ` to ` l ` in ` DateFormatEvaluator ` and ` FileListEntityProcessor ` to improve clarity and consistency
added a boolean field ` includeDecals ` to the ` StorageOptions ` class and its getter / setter in ` StorageOptionChooser ` to
added a null parameter to the generateDocumentation method in Liquibase . java and modified the getImplementedDatabases method in LiquibaseTest
added LLAP _ DAEMON _ QUEUE _ NAME configuration and modified perf logging logic in HiveProtoLoggingHook . java to enhance
updated error messages in SolrIndexConfig . java and modified log message formatting in SolrIndexConfig . java to improve clarity and consistency in error reporting
added a constant for the MAJOR _ VERSION in ignoreRecordAttribute . java and updated the assertion message in recordReflectionTest . java to ensure
added a new test class LdapPasswordAuthenticationTest for LDAP password authentication to ensure correct functionality of LDAP user attributes in the application
updated import statements and condition in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to improve compatibility with BasicStatsNo
do n ' t reload the editor when save a saveall action
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
fix : handle terminal exception in kubernetesindexinvocation . start ( )
added a condition to check for dynamic number columns in EdgeDataTable and NodeDataTable to ensure compatibility with dynamic number columns in the data table
added null checks for ` getGroupId ( ) ` and ` getVersion ( ) ` parameters in ` ResolvedGroupArtifactVersion ` constructor to ensure that `
added null check for apiInfo before assigning it to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added glLightfv functionality and dispose methods in PhotoPanel and FlameRenderer classes to improve texture management and ensure proper resource management during rendering
updated scene initialization from 400ms to 520ms and modified InsnProxyListEditor and InsnProxyListEditor to improve scene management and ensure
refactor condition checks in CSSParser . java for better readability to improve code readability and maintainability by reducing duplication
added a boolean property ` isDecorated ` to control the visibility of ` JFrame ` and ` JDialog ` based on application properties to ensure that the JFrame
removed the NOT EXISTS clause from the COMPLETED _ REQUESTS _ SQL statement in HostRoleCommandDAO . java to simplify the code
replace F5 _ UNKNOWN with F5 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRANSPONDER
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve code readability and maintainability by reducing duplication
replaced HostDatabase with ColorStorage in ColorsActivity . java to improve code clarity and maintainability by using a more descriptive variable name
refactor String class implementation to improve code readability and maintainability
updated logger initialization in multiple Java files to ensure consistent logging behavior across the application
added a method to retrieve globals in MapGlobalResolver to enable retrieval of global entries from the map
added multiple assertions to the sendcoin method in MultiSign34 . java to ensure that the sendcoin functions correctly for multiple witnesses
updated JUnit imports from ` org . junit . Test ` to ` org . junit . jupiter . api ` in ` CU
replaced an empty string with a constant PATH _ SEPARATOR for classpath appending to improve code readability and maintainability by using a constant
changed the access modifier of the augmentSuccessViewModelObjects method from static to non - static to restrict access to the method for better encapsulation
added a call to assertPresenceOfFieldInMetamodelFor in InheritanceTest . java and updated field retrieval in TestUtil . java to ensure
removed the ` getConf ( ) ` parameter from the ` Outlink ` constructor in multiple parser classes to simplify the code and improve readability by
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods across multiple files to simplify the
added imports for RemoveUnusedImports and modified type expression handling in UseLambdaForFunctionalInterface . java and TypesInUse . java to enhance
replaced ` appendClassSelector ` with ` appendClassSelector ` in ` TestNGAntTask . java ` to improve code readability and maintainability
added a check for Aggregate input type in HiveCardinalityPreservingJoinOptimization to ensure root input is not an instance of Aggregate
add a pool to the registryevent so that it can be use by the registry manager .
removed redundant assignment of x3 and y3 variables in Intersector . java to improve code readability and maintainability
add ` sbeDecodedLength ` , ` sbeLimit ` , and ` sbeLimit ` methods to ` MessageDecoderFlyweight
updated ElasticsearchContainer initialization and added a new test for rest client cluster health in ElasticsearchContainerTest . java to ensure compatibility with the latest ES versions and
use buffer . copy ( ) instead of array . copy ( ) when parse peermessage
added version ID constants and refactored cluster name handling in ClusterDefinition and GSInstallerClusterProvider classes to improve clarity and maintainability of cluster
camel - 14284 : camel - ftp - remove unused setconfiguration method from camel - hdfs
zeppelin - 116 : do n ' t try to load dependency from zeppelin - interpreter
updated method calls in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest . java to ensure
added basic constraints check in ForwardBuilder and created BuildEEBasicConstraints class to facilitate testing of basic constraints in the application
added a method to initialize JdbcPostgresqlDAO after the first db connection to ensure compatibility with different database versions in the database
http : / / issues . apache . org / jira / browse / amq - 4081 - fix the issue that the websocket buffer size
removed the boolean flag ` undeleteAll ` and updated its initialization logic in ` SegmentReader ` and ` TestIndexReader ` classes to simplify the
added null checks for scopes in ClientRegistration . java and updated test cases in ClientRegistrationTests . java to improve robustness by preventing potential NullPointerException
added a null check for the orderBy parameter before adding it to the explanation to avoid potential NullPointerExceptions when orderBy is null
updated import statements in ClusterEntrypointTest . java to use Hamcrest matchers instead of JUnit assertions
do n ' t set back - up snapshot if the user vm do n ' t exist .
added a debug log message initialization in HiveServer2 . java to improve logging granularity by providing more detailed logging information
added a check for non - empty tasks before processing asset loading tasks to avoid potential errors when tasks are empty
refactor deletenode method to return boolean instead of void
updated relationTypeGroup from TsKvEntry to TsKvEntry in RelationCompositeKey , TsKvLatestEntity , and
added checks for empty barcodes in Code128Reader , Code39Reader , and Code39Reader classes to ensure proper error handling for empty barcodes
replaced TreeSet with LinkedHashSet for suites in SSLContextImpl . java to ensure consistent ordering of cipher suites
added a method to check if a control character is a control character in the Escaper class to ensure proper handling of control characters in the output
updated provider method handling in ProviderSqlSource and updated related tests in SqlProviderTest to use CharSequence instead of String to improve type safety and ensure proper
added null checks for aliasChildren in InternalMNode . java to ensure robustness by preventing potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` in ` PagedView ` to calculate the transition offset based on the current page scroll position to
updated method names and variable names for clarity and consistency in JavaTemplate . java to improve code readability and maintainability by using a more descript
added setAccessible ( true ) to WidgetInterceptor class to ensure accessibility of the method in the WidgetInterceptor class
added a check for the database server ID before setting literal initializer in ConnectorConfigGenerator . java to ensure that field configurations are only set when the
updated Windows OS version from Macintosh to Win64 in AbstractRipper . java to support Windows NT 10 and above to ensure compatibility with
added a web interface item to the popup in BasicSystemUtils . java to enhance user experience by allowing users to access the web interface
refactor value handling in HandleGetter . java to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
added a try - catch block around the buildRecordAtOffset method call to handle ArrayIndexOutOfBoundsException to improve robustness by handling potential ArrayIndexOutOfBoundsException
[ java ] add more debug log to filecheckpointio . close ( )
do n ' t call loadbattlepassmanager before avatar postload to avoid null pointer
updated Docker image names in PortForwardingContainer . java for consistency to improve code readability and maintainability by using consistent naming conventions
added a bigObject array and forced the initial full - gc ( ) method to ensure proper resource management and prevent potential memory leaks
updated log type checks and added level assignment in StdErrLog . java and StdErrLogTest . java to ensure proper logging behavior based on configuration
fixed - http : / / issues . apache . org / jira / browse / amq - 4253 - add service . getremotes
added methods ` isSelected ( ) ` and ` setSelected ( ) ` to the ` MultiButton ` class and modified the ` setSelected ( ) ` method
replaced UpNextActivity with NextUpActivity in CustomPlaybackOverlayFragment . java to ensure compatibility with the latest playback functionality
removed unnecessary whitespace in BrokerController . java to streamline code for better readability and maintainability
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection instead of ReactiveRedisConnection to ensure proper resource management and prevent potential memory leaks
refactor theme color handling in ProgramGridCell and Utils classes to accept a resourceId parameter to improve code readability and maintainability by encaps
renames occurrence of participanttransportaddresschanged to peertransportaddresschanged
refactored type adapter registrations in ToolingApiLauncher . java to improve code readability and maintainability
[ hotfix ] [ test ] fix checkstyle violation in testpayloadcheckquery
refactor ConsoleReader to use a new method for printing strings with a mask to improve code readability and maintainability by reducing duplication
added user confirmation and command line arguments in BaseCommand . java to enhance user experience by providing more context information during execution
move modulesupport from org . graalvm . compiler . test to org . graalvm . compiler . api
[ hotfix ] [ test ] remove unused parameter from slotsharinggroup constructor
updated the condition in ` StreamExInternals . java ` and modified the ` hasDropWhile ` method in ` StreamExTest . java `
updated data path from " data / wheel . png " to " data / sys . png " and adjusted song duration from 22 to 183 to
removed duplicate call to unregisterReceiver in Launcher . java to improve code readability and maintainability
updated import statement for Cluster in HostsRemovedEvent . java to improve code clarity and maintainability
updated the ` reuseRefreshToken ` and ` allowIntrospection ` flags in ` ClientDetailsEntity ` , ` ChainedTokenGranter ` , and `
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 419 : htmlencode (
updated link tags in Query . java to include PhrasePrefixQuery and SpanQuery to improve link clarity and maintainability of the code
replaced size ( ) = = 0 with isEmpty ( ) in CommentsInserter and CommentsParser classes to improve code readability and maintainability
refactor ` isLiteralString ` and ` isThisElementAnOperandInABinaryStringConcatenation ` methods to use ` getCursor (
updated method signatures to use ` Object ` instead of ` A ` for consistency to improve code readability and maintainability by using more descriptive
updated imports and method signatures in ` ThrowingFunction ` and ` ThrowingFunction ` to use generics instead of ` Object ` to improve
added ` getUploaderBehaviour ( ) ` and ` setUploaderBehaviour ( ) ` methods to ` AppPreferences ` , ` PreferenceManager ` ,
fix typefactory . trytoinitializefinalfieldinconstructor ( ) to return null if there be no final field
updated BitmapDrawable instantiation to use Robolectric for improved compatibility to enhance compatibility with Robolectric ' s use of Robolectric
rename method ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to improve clarity and consistency in
updated PageMarkerResources resource resource from ic _ pageindicator _ add to ic _ pageindicator _ current to enhance the visual representation of the page indicator
added a volatile int variable ` reinvocations ` to track the number of reinvocations in ` BasicInvocation . java ` to improve thread safety
updated topPadding calculations to use getInnerHeight ( ) instead of getHeight ( ) to improve accuracy of padding calculations for better layout consistency
added a break statement in the Recognize class to ensure proper handling of break statements
added Haptic feedback functionality to the Workspace , FolderNameEditText , and PopupContainerWithArrow classes to improve user interaction by enabling Hap
added support for text formula in ExcelBatchReader and created a corresponding test case in TestExcelFormat to ensure correct handling of text formulas and validate
pmd : fix anonymous inner class assignment in anonymous inner class
added a ` userAgent ` field to ` CommaFeedConfiguration ` and modified ` HttpGetter ` to retrieve the user agent based on application settings to
added a required attribute to the XmlAttribute annotation in AvroDataFormat . java and updated the BarcodeDataFormat . java file to ensure required
changed log level from info to debug in Utilities . java to reduce log verbosity for file not found errors
rename QueueTest to QueuedPipeTest in QueueTest . java to improve clarity and consistency in naming conventions
updated version check logic in BukkitMain . java to use a method for retrieving the unique ID to ensure compatibility with OfflinePlayer ' s unique ID
refactor DefaultRoutesCollector to handle cases where include pattern is empty and improve logging clarity to enhance code readability and maintainability by reducing redundancy
added vertexColor property and modified color handling logic in PShape3D . java to improve performance by avoiding unnecessary buffer fills and tinting
added a new boolean parameter ` isPkColumnFiltered ` to the ` printForeignKeys ` method and updated related logic in ` SchemaDotFormatter `
replaced Shadow . extract with Shadow . getValues in ShadowMotionEvent . java to simplify code and improve readability
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser ` to
refactor class handling logic in GroovyEngine . java to improve code readability and maintainability by reducing duplication
[ hawtio ] add plugin context listener to the branding servlet
removed unnecessary print statements in NativeCodeGenerator . java to improve code readability and maintainability
replaced ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` calls with ` fireChangeEvent ( ) ` in ` FlightConfiguration .
added a test for expected exceptions in ThrowableAssert _ hasCause _ Test . java to verify the behavior of expected exceptions based on the expected cause
updated the way dependencies are retrieved in AutomaticDependencies . java to improve code readability and maintainability by reducing duplication
rename variable ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to improve clarity and consistency in scope
added unit tests for setting profile in Firefox options and capabilities in MarionetteTest . java to ensure correct handling of Firefox profiles in Firefox
added ` getDescription ( ) ` method to ` Route ` , ` DefaultRoute ` , ` DefaultRoute ` , and ` ProcessorDefinition ` classes to
refactor JavacTreeMaker class implementation to improve code readability and maintainability
added a method to set the weight of the edge in ImporterCSV to ensure the edge ' s weight is properly set during CSV processing
updated the method for calculating the cost per month from ` s _ hoursInMonth ` to ` hoursInCurrentMonth ` and added a method to
updated SQL queries to use ` adsrc ` and ` adrelid ` instead of ` null ` and ` attnum ` in ` DatabaseMetaData
added a null check for binarized in SentimentAnnotator . java to ensure that binarized sentences are not built by parser
refactor username return statement to use StringBuffer for better readability to improve readability and maintainability of the user ' s authority representation
updated MessageHelper to retrieve the body from the message object instead of extracting it to improve clarity and prevent potential NullPointerExceptions during message processing
[ hotfix ] [ runtime ] fix checkstyle violation in taskdeploymentdescriptorfactory
use groupmanager . getgroup ( ) instead of groupmanager . getsharedgroups ( )
added a classpath path to the AbstractJRubyMojo and removed the @ Override annotation from CucumberMojo to ensure compatibility with Maven ' s classpath
refactor type handling in MethodHandleImpl and add a new userMethod method in MethodHandlesTest to improve code readability and maintainability by reducing redundancy
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated width and height checks from ` > ` to ` ! = ` in ` URLImage . java ` to ensure proper comparison of image dimensions
added a condition to check if the name starts with " META - INF / " before processing to ensure proper handling of META - INF /
added conditional scheduleBackgroundTask for image creation in ImageDownloadService . java to ensure background tasks are only scheduled when Edt is enabled
[ hotfix ] [ test ] fix stack walker test
changed the access modifier of the addViewportJob method from protected to public to allow external access to the method from other classes
[ hotfix ] [ test ] remove unused partition argument
removed server restart and checkRunning methods from TestDatabase . java to streamline server management and improve code clarity
added null and empty checks for block in NodePathsConvertOperator and updated indexing logic in SchemaQueryMergeOperator to improve robustness by preventing potential
add get harvestingtime ( ) method to callinfoframe .
updated font drawing parameters in ParticleEditor . java for improved clarity and accuracy to enhance rendering accuracy and maintainability of the code
added configuration properties handling for " hadoop - env " in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog240Test
added a background color to the SvgViewerFactory class to enhance the visual appearance of the svg viewer
removed the minSdk attribute from the ShadowKeyguardManagerTest and ShadowKeyguardManager classes to simplify the code and improve readability
changed the method signature of ` containsExactly ` from ` rest ` to ` varargs ` in the ` containsExactly ` method to simplify
refactor Bucket4jFilterFunctions to use StringUtils for capacity and key retrieval to improve code readability and maintainability by reducing duplication
added documentation for the GermanAnalyzer and WordlistLoader classes to clarify the functionality of the German analyzer and stemmer classes
added a ` postExecHooks ` parameter to the ` Generator ` class and modified the transformation logic in ` Optimizer ` and ` SemanticAnalyzer `
added error handling for NoClassDefFoundError in REngine . java to ensure proper handling of NoClassDefFoundError when NoClassDefFound
replaced ` Span . class ` with ` SpanAndScope ` in ` TraceWebFilter ` and ` TraceWebFluxTests ` to improve
added a null check for the cause of the exception before setting the exception to avoid potential NullPointerExceptions when the cause is null
updated SolrServerException instantiation to include base URL to improve error handling by providing additional context for SolrServerException
updated the condition for setting the landscape in HSSFPrintSetup . java to ensure the print setup record is only set when it is
modified the return statement in JavaVoidObjectInspector to handle null values more gracefully to improve robustness by preventing potential NullPointerExceptions
added a check to throw an IllegalArgumentException for invalid argument names in ArgDesc . java to ensure that the argument name does not contain a newline
added a new ` inMemoryBackgroundLocationListener ` to manage location updates based on the ` AndroidImplementation ` context to improve flexibility in managing location updates
removed unnecessary check for primitiveType in MeshBuilder . java to simplify the code for better readability and maintainability
[ trufflestring ] fix a bug that cause the trufflestring to throw an exception .
added a call to setCommandList ( isCommandList ( ) ) in ComboBox . java to ensure the correct command list is displayed for the
nifi - 12626 : escape alias filename with forward slash in tlsclientmanager
updated ZkCLI . java to use localhost and localhost instead of localhost to ensure compatibility with the latest Zookeeper CLI configurations
fix checkstyle issue in some case . patch by jbellis
added a conditional check for remoteGrpcStatus in LocalFallbackStrategy . java to ensure the event is only sent when the remote status is OK
reformatted method signatures in XYItemRenderer and XYItemRenderer classes to improve code readability and maintainability
add entityid to forge chunk if it ' s an entity .
add a helper method to get the error message from the glsurfaceviewapi18
http : / / code . google . com / p / mybatis / issues / detail ? id = 421 : add support for feature
updated the test case to use " http : / / myhost : / / myhost : / / myhost : / / myhost :
added a call to addToHelperList ( ce ) in Construction . java to improve code readability and maintainability
added a condition to skip the first of " escape sequence " in GlyphLayout . java to ensure proper handling of escape sequences in the layout
added security permissions for setting context class loaders in Transport . java and TCPTransport . java to enhance security by ensuring proper context class loader management
added null checks and sync folder operations in ReceiveExternalFilesActivity . java to improve robustness by preventing null pointer exceptions
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerExceptions when m _ serviceLoaderClassLoader is
removed debug log statement and adjusted deltap calculation in BarrowmanCalculator . java and TubeCalc . java to improve code clarity and maintainability
added type checking for Node and Edge tables in TimelineControllerImpl . java to ensure correct column assignments for nodes and edges in the timeline
added a method to register extra components in BaseBrokerStarter to ensure proper registration of broker admin application components
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT ` to verify the behavior of the MultiCf
peergroup : use a list instead of a list for the peer version
fix a bug where the abstractbuilder do n ' t work if the builder do n ' t change .
updated ConfigNodeConfig to use a Supplier < RatisConfig . RatisSnapshotTriggerThreshold ` instead of a hardcoded value to improve flexibility
refactor multiple Java files to improve code organization and readability to enhance maintainability and readability of the codebase
added a null check for ManagedService annotation before unregistering JMXHelper to avoid potential NullPointerExceptions when the class annotation is not annotated
tika - 126 : add support for non - unicode entry name in packageparser
added a new file TestSplitThruPhiDivMod . java with a test method for Problematic division tests to verify the behavior of Problematic
added methods to lookup generic interfaces and superclass types in TemplateRegistry . java to improve generic type lookup functionality for better handling of generic interfaces
updated the initialization of ByteArrayOutputStream from 512 to 1028 to improve performance by reducing memory usage
added TODOs for Chinese and Persian symbols not available in PlayerSettingsScreen . java to provide clearer information about the availability of Chinese and Persian symbols
refactor byte array initialization and length calculation in TransferCompletionHandler . java to improve readability and maintainability of the code
renamed ` addWindowFocusListener ` and ` parentWindow ` to ` addWindowListener ` across multiple menu components to improve clarity and consistency in naming conventions
updated semantic exception handling in SemanticAnalyzer to check for null source before throwing a SemanticException to improve robustness by preventing potential null pointer exceptions
added scaling calculations in SkeletonRenderer to ensure proper rendering of skeleton skeletons
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to retrieve the
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in SpringWebConfig
removed the getAccount ( ) method from UserListItem . java to streamline the code by eliminating unnecessary method
added tests for installing package names in ShadowPackageManagerTest and adjusted process name assignment in ShadowApplicationPackageManager to ensure correct package name assignment and prevent potential
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added TransactionCapsule imports and initialized ReceiptCapsule instances in TransactionTrace . java to enable tracing of transaction transactions in the application
add option to allow client to shuffle member list by default .
replaced Text with CrawlDatum in SegmentReader . java to improve clarity and maintainability of the code
refactor JsonDeserializer class for improved readability to enhance maintainability and readability of the code
updated ` CONFIG _ NAME ` and ` CONFIG _ DEFAULT _ PATH ` to ` CONFIG _ NAME ` and modified ` fetchSize ` initialization in `
updated error message from trunk ( ) to trunc ( ) in GenericUDFTrunc . java to correct the spelling of " trunk ( )
removed unused import of ExecutionContext in TaskletStep . java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure proper initialization of the title variable
http : / / issues . apache . org / jira / browse / amq - 4071 - fix npe in asynchttpclientcall
add a new interface ` EmbeddedServerInstance ` for deprecating ` EmbeddedServerInstance ` to mark the ` EmbeddedServerInstance ` as deprecated to
refactor JabRefFrame to use a method for registering Mac events to improve code readability and maintainability by encapsulating the
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` to improve clarity and consistency in naming conventions
changed the return statement from ` toEnum ` to ` return ` in ` HandlerLibrary . java ` to improve code readability and maintainability by
change visibility of hideUnprivilegedObjects from private to private final to ensure immutability of the hideUnprivilegedObjects
updated logging level from info to fine in ThreadedAcousticScorer . java and added configuration management in AudioDataSourcesTest . java
added a conditional check for Android Q and updated the saveGiphyAndroid11 method to ensure proper handling of video URLs based on Android Q
do n ' t set variable in second service task if value be null in second service task
refactor EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , and SamlCompliantUniqueTicketIdGenerator classes
refactor logger retrieval logic in MavenLoggerFactory to use computeIfAbsent to improve code readability and maintainability by using computeIfAbsent
deleted the DataOutputOutputStream class from HbaseObjectWritableFor96Migration . java to remove unused code to streamline the codebase
updated transaction ID configuration from " hive . stats . column . autogather " to " hive . stats . column . autogather " to
change log level from info to debug in MavenEnhancePlugin . java to improve logging granularity for enhanced classes
added ` getDefaultProviderName ( ) ` method to ` Platform ` , ` OpenSSLProvider ` , and ` SSLSessionContextTest ` classes to
added Captor annotation processing in MockitoBeforeTestNGMethod . java to ensure proper handling of Captor instances in tests
added checks for ` onlyRun ` , ` testMethodNames ` , and ` testMethodNames ` in ` TestSuiteBuilder . java ` to
refactor GroovyAutoComplete and GroovyLanguage to use StringUtils for better readability and maintainability to enhance code readability and maintainability by reducing duplication
( chore ) camel - graph - hopper : use graphhopperosm instead of graphhopper
[ java ] add config parameter to handlesession . getclient ( url )
changed the ` mHideSysUiScrim ` variable from ` final ` to ` mHideSysUiScrim ` and added a preference for
modified the ` enqueue ` method to accept a ` Callback ` parameter and modified the ` cancel ` method in ` OkHttpCall ` and ` Ok
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve code readability and maintainability by reducing duplication
updated the ` RequestMatcher ` interface to extend ` org . springframework . security . web . util . matcher . RequestMatcher ` to extend the
added IF and IF constants to the DeferredAttr class and created a new ImplicitLambdaConsideredForApplicabilityTest class to enhance functionality
[ j2kt ] add test for boxedanddevirtualizedtypes .
added unit tests for the ` applyQualifiers _ populatesDisplayMetrics ` method in ` DeviceConfigTest ` and ` DeviceConfig ` classes to ensure
replaced ` IOException . class ` with ` RuntimeException . class ` in ` ExternalViewReaderTest . java ` and ` PinotDataTypeTest .
updated the icon resource from ` logo ` to ` mipmap ` in ` RootCursor . java ` to ensure the correct icon is displayed for
added errorBuilder . setContentText ( content ) in FileUploader . java to improve error handling by providing a more informative error message
refactor ConcurrentHashMap class for improved performance to enhance performance and maintainability of the codebase
added methods to adapt user trades in AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTradeServiceRaw classes to
refactor plot removal logic to use a boolean parameter instead of a boolean variable to improve code readability and maintainability by reducing redundancy
[ java ] add support for firefox and internet explorer in htmlunitdriver .
added handling for " varbinary " and " VARBINARY " type in BlobType . java to ensure proper handling of VARBINARY data type
updated variable names and logic in SetCookieSupport . java for consistency to improve code readability and maintainability
added synchronization to ensure thread safety in createsimpletypemap ( )
updated ` InboundBuffer ` to use ` ContextInternal ` instead of ` Context ` to ensure compatibility with ` Vert . x thread ` and
refactored timeout handling in ` LdapTimeoutTest ` and added a new method ` deadServerNoTimeout ` in ` LdapTimeoutTest ` to
updated usage message from ` UniocdeData . txt ` to ` UnicodeData . txt ` in ` CharacterName . java ` to improve clarity
add inout header to cxfmessageheadersrelaytest
refactor multiple UI classes for improved organization to enhance maintainability and readability of the codebase
added import for BoosterSet and modified return value in ComponentAssemblySaver . java to ensure proper handling of boostersets in the application
http : / / code . google . com / p / mybatis / issues / detail ? id = 421 : add support for proxy
corrected the spelling of " BLOCKCHAIN _ FORK _ COUNT " to " BLOCKCHAIN _ FORK _ COUNT "
do n ' t throw an InternalError if compile stub invoked in JEP 359 support
fix testipcutil to use log instead of mortbay . log .
removed chunked transfer logic from NettyRoutingFilter . java to simplify code by eliminating unnecessary chunked transfer logic
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that attributes are cleared before processing
added a pollingPeriod parameter to the VerificationAfterDelayImpl constructor and updated related methods to include it to improve error handling and provide more informative
added a compaction flag to several classes and updated conditional checks in SemanticAnalyzer and SessionState to ensure that compaction is only applied when necessary
( chore ) camel - zeppelin - zeppelin - zepl : add a check for the existence of the jar file
hbase - 16446 hbaseadmin . gettableregions ( ) should not call cleanupcatalogtracker ( ) in hbaseadmin .
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to improve
added a try - finally block around the parsing process in SimpleSAX . java to ensure proper resource management and prevent potential memory leaks
added a call to release the header buffer pool in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use it to
added null and isClosed checks before closing ResultSet in JdbcExecutor . java to ensure proper resource management and prevent potential memory leaks
updated the driver version from - 1 to 10 in DerbyDatabase . java to ensure compatibility with the latest Derby versions
pmd : fix usestringbufferlength to check if literals be empty
removed logging of error messages in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
modified the ` createDb ` method to return a connection object instead of void to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and ListResourcesTest files to improve code organization and maintainability
hbase - 16464 add offpeak option to reduce memory usage in compaction policy
added handling for " address " in BitstampDepositAddress and created a new test class ` DepositAddressJSONTest ` for JSON unmarshalling to ensure
replace IllegalStateException with response . abort in BufferingResponseListener . java to improve error handling by using a more specific exception type
updated the method call from ` linkInDeletedDirectories ` to ` linkPath . toAbsolutePath ( ) ` to ensure the correct path is used for
replaced ` Event ` with ` InvocationType ` in ` InvocationFinishedEvent ` and updated related methods to use ` ConcurrentHashMap ` instead of ` String
added a loop to check if the network interface supportsMulticast in OptionsTest . java to ensure that multicast protocols are only returned when the network interface
removed redundant check for valid check sums in ChangeSet . java to streamline the code for better readability and maintainability
added a clone method to the BufferedChecksumIndexInput class to ensure that the clone method does not throw an exception for unsupported operations
updated boundary checks in Circle . java to use ' radius ' instead of ' < = ' to ensure that ' x ' and ' y ' are
updated frequencyBand assignment logic in P25Channel . java and modified return statement in P25ExplicitChannel . java to ensure frequencyBand is only set
updated the GestureDetector class to replace ` inTapSquare ` and ` inTapRectangle ` with ` tapRectangleWidth ` and ` tapRectangle
changed default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false in CFMetaData . java from true to false to
added a ` lastFillTime ` parameter to the ` CryptoFacilitiesAuthenticated ` and modified the ` Util ` class to include it to
added ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and ` Runnable ` classes to provide a delegate delegate
refactor error handling in FileActivity and FileDisplayActivity to improve clarity and functionality to enhance code readability and maintainability by consolidating error
added quiche stream writable functionality to the ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to improve error
added a new boolean parameter ` true ` to the ` JavascriptContext . java ` method to ensure proper handling of javascript context execution
removed the ` Align . left ` parameter from the ` TableCell ` constructor and updated its usage in ` BaseTextFormattingHelper ` to simplify
added a new file ` TracingAutoConfiguration . java ` to facilitate tracing functionality in the application
updated the method for adding Para to the first paragraph in Submissions . java to improve code readability and maintainability by encapsulating
refactor getPrunedQueryableSegments method to accept a list of segments instead of a list to improve code readability and maintainability by reducing redundancy
refactor VertxBufferTest class for improved readability to enhance maintainability and readability of the code
refactor date extraction logic in MessageSubmissionChunk . java and add a new TestMessageSubmissionChunk class in AllHSMFTests . java to improve
changed the access modifier of the mContext variable from private to protected to allow subclasses to access the context from other classes
removed unused imports from ShowTablesOperation and ShowViewsOperation to streamline code by eliminating unnecessary dependencies
added a new class ` MongoDataIntegrityViolationException ` and modified ` MongoTemplate ` to include ` writeResult ` and ` actionOperation ` to
[ hotfix ] [ runtime ] fix typo in jobcoordinationservice
refactor ` bitsToHumanReadable ` and ` bytesToHumanReadable ` methods to use an ` HashMap ` instead of ` bitsToHumanReadable
updated the instantiation of TieredMergePolicy in TestUpgradeIndexMergePolicy and added a new test method in TestMergeOnFlushMergePolicy to
added a conditional check to return early if mOverviewStateEnabled is false to prevent unnecessary processing when the overview state is disabled
updated error message in CpuNDArrayFactory from ` org . cpu ` to ` https : / / github . com / cpu ` to
updated the ` loadSettingModels ` method to accept a ` InputStream referencePropertiesInputStream ` parameter to enhance flexibility in loading setting models based on reference properties
added null checks for input in FilterLeafReader to prevent NullPointerExceptions when input is null
[ bouncycastle ] add default secretkeysizeprovider to verify key size
updated exception handling in NetSocketReader and removed unused constructors in SocketUtils to streamline exception handling and improve code clarity
removed the @ Inject annotation from multiple Java files to streamline the codebase by eliminating unnecessary dependencies
updated size assertion from 9 to 10 in BundledDistributionTest and added new test cases in PostgreSQLTest to improve test coverage and ensure
[ hotfix ] [ runtime ] add pipeline . name option to streamexecutionenvironment and streamexecutionenvironment
updated scaling calculations for two - panel devices in OverviewState . java to ensure correct scaling based on device profile type
updated IcePlainsBiome to extend SnowyBiome instead of GrassyBiome and added a PopulatorTree for trees to improve tree management and
removed the zone parameter from the getMaxTime and getMinTime methods in DataUpdateManager and StorageUtils classes to simplify the code and improve readability by
[ j2kt ] add ` ` isqualified ' ' flag to ` ` thisreference ' '
updated regex pattern in XhamsterRipper . java from " [ wmde . ] " to " [ \ w ] " to ensure
fix a bug in the glowworld . getallall ( ) method that do n ' t return the entity list
added null check for schema before retrieving the table name in OracleDialect . java to avoid potential NullPointerExceptions when the schema is null
[ hotfix ] [ console ] fix checkstyle violation in console filter
added a new parameter ` numberOfAllFiles ` in ` FileMenuFilter ` and updated related methods in ` FileListListAdapter ` , ` File
[ java ] use termlengthmask 1 instead of term window length .
refactor GuildUpdateOwnerEvent class to improve code organization to enhance maintainability and readability of the code
fix a bug where the creative player do n ' t have the inportable tick if the player be creative .
added a minimum height constant and modified chart pane positioning logic in ClusterMonitorTileSkin . java to improve visual consistency by allowing compressed and compressed data
refactor multiple codec template classes for improved readability to enhance maintainability and readability of the codebase
updated the calculation of lengthDataBits and numberTriplets from int to long in Base64 . java to ensure compatibility with larger data types and improve
removed unnecessary null check for header in RendererConfiguration . java to simplify code and improve readability
volume api : skip disk offering change on volume with custom service offering
updated import statements in ` Order . Builder ` and ` HitbtcAdapters . Builder ` to use ` LimitOrder . Builder ` instead of
rename idleCount to consecutiveIdleCount in LLRealtimeSegmentDataManager . java to improve clarity and consistency in naming conventions
updated the ` @ ConfigurableService ` annotation from " jruby " to " jrubyscripting " to reflect the new JRuby scripting
updated variable name from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in variable naming
updated condition in ParticipateAssetIssueActuator to include a check for preciseExchangeAmount to ensure preciseExchangeAmount is non - negative
removed unnecessary loop condition in FeedUtils . java to streamline code by eliminating unnecessary loops
added a test method ` testHDF4 ` to ` HDFParserTest . java ` to verify the functionality of parsing HDF4 files
added a new boolean constant ` CALCITE _ 6092 _ FIXED ` and modified cast checks in ` SqlOperatorTest . java ` to
reformatted the conditional statement in IDEEditor . java to improve code readability and maintainability
added new methods ` quietCloseAll ` and ` quietCloseAll ` in ` CloseHelper . java ` to improve code readability and maintainability
replace ` posBtn ` and ` posBtn ` with ` common _ yes ` in ` RemoveFileDialogFragment . java ` to streamline code by
added a null check for srcWidth and dstHeight before calling drawImage in Pixmap . java to avoid potential NullPointerExceptions when srcWidth and
replaced ReflectionHelpers with ProtectionDomain and refactored method invocation in UnsafeAccess . java to improve code readability and maintainability by using a
updated regex pattern formatting in GUIUtil . java and added validation tests in GUIUtilTest . java to improve regex validation accuracy and ensure proper validation of
refactor conflict handling in CachedRowSetWriter to use long values instead of boolean to improve code readability and maintainability by reducing redundancy
updated SDK version checks from MIN _ SUPPORTED _ SDK to MIN _ SUPPORTED _ SDK across multiple files to ensure compatibility with newer SDK versions
added a conditional check for the ' this ' variable in the ReferenceMemory class to ensure that the reference is only assigned when the reference is the same
updated seed file handling in Injector . java to check for non - file inputs to ensure that non - file inputs are processed correctly and improve logging
added a condition to check if the original view is hidden before setting the visibility of the original view to ensure original view is only visible when the original
updated the calculation of ` maxNodes ` and ` maxTrips ` in ` DefaultLoopPolicies . java ` to ensure ` maxNodes ` is
added validation for texture coordinate type support in CombinedTexture . java and introduced a warning log for unsupported texture coordinates type in UVCoordinatesGenerator . java
added a check to prevent deletion of barcodeFile and improved error handling in multiple classes to enhance robustness by preventing errors when the barcode file is not
added seek and close methods to TracingConsumer and TracingProducer classes to ensure proper resource management and prevent memory leaks
updated the ` updateHandle ` method to use ` oldPrefixLength ` instead of ` locate ` to ensure correct handling of prefix lengths for better
replaced ` addAll ` with ` addAll ` in ` convertedValsList ` to improve code readability and maintainability
added a deprecated constructor to AbstractTimer that accepts a PauseDetector parameter to indicate that the constructor should no longer be used for future development
added a nightly warning message if the version of Universal Gcode Sender is a nightly version to inform users about potential issues related to Universal
updated the ` getResponsesSortedByRecipient ` method to accept a ` sortByTeam ` parameter and modified the ` getResponsesSortedByRecipient `
updated the return statement in UnnecessaryThrows . java from " Remove unnecessary throws " to " Remove unnecessary declarations . " to improve clarity
deleted the CacheApplication class and updated related references in ShareActivity and ShareActivity to streamline caching functionality and improve code organization
replaced instances of ` realObject . getApplicationContext ( ) . startService ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl
refactor StatisticsServlet class to improve code readability to enhance maintainability and readability of the code
added compatibility checks for Android KITKAT and updated configuration update logic in RuntimeEnvironment . java to ensure compatibility with newer Android versions and improve
added a new constant for ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` and updated the
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to prevent potential NullPointerExceptions when oldIndexName is null
added new classes for XML resolver helpers and readers in CheckPackageAccess . java to enhance XML resolver functionality in the application
rename method ` save ` to ` add ` and update ` across multiple classes to improve clarity and consistency in method naming
added handling for LoopExitNode in GraphUtil . java to ensure proper handling of loop exit nodes
refactor SearchAndRecommendationsScrollController to use WidgetsRecyclerView instead of RecyclerView for better UI responsiveness to improve UI responsiveness and
added a check to check if the terminal is supported before processing to ensure that the terminal is only processed when the terminal is supported
updated time handling in CloudExitableDirectoryReaderTest and added time limit checks in LBHttpSolrClient to improve test reliability and ensure proper timeout
updated session validation in AbstractSessionCache and added session cookie attribute handling in RemoveSessionTest to improve session management and ensure proper session management
added null checks for columnNames and comparedColumns in ChangedIndexChangeGenerator . java to avoid potential NullPointerExceptions when columnNames is null
replaced ` Vector ` with ` ArrayList < RadioButton > ` for buttons in ` ButtonGroup ` to improve code readability and maintainability by using a
refactor UserManagerCompat and UserManagerCompatVN classes to extend UserManagerCompatVM and add a new UserManagerCompatVM class to improve
added ` getDatabaseMajorVersion ` and ` getDatabaseMinorVersion ` methods to ` MockDatabase ` , ` AbstractDatabase ` , and ` Database ` classes
updated the ` spawnThreadToCompareActionGraphs ` method and improved error messages in ` ActionGraphCache . java ` to enhance clarity of error
added new classes ` LockDatabaseDesc ` , ` UnlockDatabaseDesc ` , and ` UnlockDatabaseDesc ` , and ` UnlockDatabaseDesc ` to
refactor RankingComponent and RankingUIModel to use a new RankingUIModel instance to improve code readability and maintain
added handling for DisconnectMessage in HandshakeHandler and NodeImpl classes to enhance disconnection handling and improve logging clarity
added a test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT ` to verify the behavior of ` SET STORAGE GROUP TO
doc : update doc to match v1beta2
updated type validation logic in Assertions . java and added a new visitVariable method in FindMissingTypes . java to improve type safety and provide clearer
added two new methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to enhance test execution
refactor CountersManager to use CachedEpochClock instead of UnsafeBuffer to improve performance and readability of the code
removed the overridden ` toString ( ) ` method from ` MultiSteps ` , ` SendEmail ` , and ` SendEmail ` classes to simplify the
added a null check and cloning logic for joinKeys in JoinDesc . java to ensure that the joinKeys array is properly cloned to avoid potential null
updated WebAuthnConfiguration to use PrincipalResolver instead of a hardcoded default principal resolver to improve flexibility in managing principal resolvers during authentication
added a ` SearchPaths ` parameter to the ` addSettingsFromFile ` method and updated its usage to include a ` SearchPaths ` parameter to enhance
changed variable declarations from non - final to final in Oracle . java to enforce immutability and ensure immutability of variables
[ hotfix ] [ runtime ] do not advertise unaligned checkpoint when rescaling of unaligned checkpoint
[ calcite - 1186 ] fix queryparser to handle unsupported operation in order by table
added static methods ` println ( ) ` and ` println ( ) ` in ` CompileTheWorld . java ` , and modified the ` println `
added a check for LocalVariable in LambdaRewriter . java to ensure that the exception is only thrown when the value is an instance of LocalVariable
added support for MySQL databases in CreateTableGenerator to ensure compatibility with MySQL databases
added classloader management to the Thread class in EnvConfiguration . java to ensure proper classloader management and prevent potential memory leaks
added ejection delay setting for stageNr in SimulationListHandler . java to ensure EjectionDelay is set only when stageNr is
updated method names from FunctionalRunner to BeanDefinitionOrderRunner in SpringApplicationTests to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class implementation to improve code readability and maintainability
updated the ` validateIssuerClaim ` method to accept a ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance flexibility in issuer resolution
[ java ] add null check for doccollection in clusterstate . tostring ( )
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) ` in ` TextArea . java ` to ensure consistent alignment
added default methods for foreign database and schema names in ForeignKeyColumn and related classes to enhance functionality by allowing dynamic retrieval of foreign database and schema names
[ java ] remove electionstate . electionstate . election ( ) from election . java
replaced static import of ` Shadows . shadowOf ` with a private method ` extract ` in ` ShadowActivity ` and ` ShadowBluetooth
drill - 4192 : add test for dfs _ test bug # 414192
add oninventorytick ( ) method to iforgeitem , iforgeitem , and iforgeitem
replaced FileOutputStream with ByteArrayOutputStream in Export . java and modified jar signature handling in IOUtil . java to improve file writing efficiency and ensure proper war
added null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when the activity is not initialized
updated BindOptions handling in AppsCustomizePagedView , Launcher , PendingAddItemInfo , and PendingAddItemInfo to
added new CAPABILITY _ AIR _ PRESSURE and CAPABILITY _ CARITY _ ACCURACY constants to EcobeeSensorThing
[ hotfix ] fix checkstyle violation in operationsetserverstoredcontactinfofacebookimpl
added environment variables for AAPT and AAPT2 in Genrule . java and updated test assertions in GenruleTest . java to improve environment variable
do n ' t dump access table if truffle be n ' t enable
added a null check for the message before disposing to prevent potential NullPointerException when the message is not initialized
added @ Getter annotation and modified init methods in TronStoreWithRevoking , TxCacheDB , and TransactionCache classes to enhance the initialization process
updated log warning messages in CoreContainer . java to clarify that LogWatcher is not yet implemented for log4j
replaced ` printStackTrace ( ) ` with ` fail ( ) ` in ` CategoryPlotTests . java ` to streamline error handling and improve readability
replaced ` ByteArrayOutputStream ` with ` SmallByteArrayOutputStream ` in ` IOSImplementation . java ` and added a new ` SmallByteArrayOutputStream ` class
update shader to use intmap instead of hashmap . name ( )
updated the connection name from " territory = en _ US " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure proper resource management
added null checks for firstExchangeTimestamp and lastExchangeCompletedTimestamp in RouteInfo . java to avoid potential NullPointerExceptions during timestamp retrieval
updated javadoc method to use a default language variable and modified output messages in TestHtmlTag . java and TestUseOption . java to improve clarity and
added a condition to check if the result is incomplete before proceeding to ensure that only valid items are processed
updated command - line arguments to use ` timeColumnName ` instead of ` timeFieldSpec ` to improve clarity and maintainability of the command - line
updated output format handling in TestUtility and SiteSnapshotVariationsTest to include an extension for HTML files to improve clarity and maintainability of the output
updated conditional check from ` mInsets . bottom + minQsbMargin > ` to ` mInsets . bottom + minQs
added ` equals ` and ` hashCode ` methods to ` AnimationList ` , ` SceneKey ` , and ` GltfModelKey ` classes to
added a ` _ date ` field and its getter / setter methods in ` AbstractGenerator ` , ` Generator ` , and ` HttpGenerator ` ,
replaced ` Adler32 ` with ` CRC32 ` in the ` Store . java ` file to improve code readability and maintainability by using
updated the heartbeat interval from " any " to " null " in the XenHeartBeatInterval configuration to ensure that the heartbeat interval is
added a new constant ` ZERO _ AREA _ FIN ` and modified conditional checks in ` FinSetCalc . java ` to improve warning handling
refactor ElasticsearchIO to use a custom SerializerProvider for JSON serialization to improve code readability and maintainability by encapsulating JSON serialization logic
h2dialect : add ` ` date _ trunc ' ' function to h2dialect
added a check for the " Memory Pool not found " message before converting the gauge to improve error handling by providing more informative error messages
added a ` useJavaScript ` flag to the ` ensureSignedUp ` method and modified return statements in ` UserContext ` and ` FileTreeNode `
updated error messages in ValidationTask to use ` RUNTIME _ PROTOTYPE _ FACTORY _ TYPE ` instead of ` ConfiguredBy ` to improve
updated BACKFILL constant from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java
updated Pair . of calls in PrecompiledContracts . java to use the latest proposal number instead of a hardcoded value to ensure compatibility with
refactor item update logic in AllAppsContainerView . java to improve code readability and maintainability by reducing duplication
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated the ` ResourceService ` and ` otherContext . start ( ) ` methods in ` ResourceServiceTest ` and ` ServletContextHandlerCollection ` to
removed conditional check for WORKSPACE _ CUSTOM in Cling . java to streamline rendering by eliminating unnecessary code
[ trufflejdk ] do n ' t throw npe if lookupmodule be null
added @ Ignore annotation to the ` shadowInvocationWhenChildIsInstrumentedButUnshadowed ` method in ` ClassicSuperHandlingTest . java
replaced versions of ItBit v1 with ItBit in multiple demo files to streamline the code by removing unnecessary imports
refactored profiling activation interceptor to use isDefined ( ) instead of null
added private constructor to Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to enforce immutability and enforce immutability of the Utils
http : / / github . com / codenameone / codenameone / codenameone / issues / detail ? id = 511
replaced instances of ` getClass ( ) . getName ( ) ` with ` java . util . Hashtable ` in ` Util . java ` to improve code
added tableNameWithType to the warning log message in RetentionManager . java to improve clarity of warning messages for better debugging
added trim ( ) method to fragmentList in QueryExecutorImpl . java to ensure proper handling of empty fragment lists
updated the method call from ` path . toFile ( ) ` to ` modFile . getFilePath ( ) . toFile ( ) ` to
refactor PartitionToolbar to check for TransformerBuilder . Node instead of TransformerBuilder . Node to improve code readability and maintainability by reducing duplication
refactor conditional checks in RecentsView . java for better readability to improve code readability and prevent potential null pointer exceptions
replaced ` Map < String , String > ` with ` BMIViewObject ` across multiple classes to improve type safety and maintainability by using a
removed Comparator . comparing from the thenComparing method call to simplify the code for better readability and maintainability
fix wrong damage calculation in entity . getblock ( )
refactor environment variable handling in WindowsProcessAddressSpace . java and update environment variable names in NewElfDump . java to improve code readability
added support for custom plugin properties in ` OptionsParser ` and corresponding test cases in ` OptionsParserTest ` to enhance configuration handling for custom plugin properties
updated null and empty check for hashTable in HashJoinBatch . java to ensure proper handling of empty hashTable values
updated timestamp validation logic in Timestamp . java and added new test methods in TimestampTest . java to ensure accurate timestamp representation and improve test coverage for timestamp
[ java ] use archivecontext instead of archivecontext in clusteredserviceagent
added a check for ` isCompiled ` in the ` COMPILE _ THRESHOLD ` condition in ` LambdaForm . java ` to ensure that the
added a new environment variable ` ENV _ 2 ` and a test method ` testImage2 ` to the ` AbstractTest ` class to enable
added support for NAMESPACE _ LAUNCHER in TogglableFlag and updated related methods in BaseFlags and BaseFlags classes to enhance code
updated logging statements in DockerClientFactory to include environment variables and machine details to improve clarity and consistency in logging messages for better debugging
added a check for the ANDROID platform in SnapshotScreenListener . java to ensure proper handling of ANDROID platforms in the application
updated assertions in RoutesTest to use Hamcrest matchers for better readability to improve code readability and maintainability by using Hamc
added new interfaces BytePredicate , ByteToLongFunction , FloatToLongFunction , and ShortToLongFunction to the com . speedment . common
updated getSubsColor method to return a string instead of a int and changed its return type from int to String in PmsConfiguration and MEncoder
added a conditional check before deregistering the invocation registry to ensure that the future is only deregistered when it is complete
replaced direct instantiation of ControlFrameBytes with output method in AbstractWebSocketConnection . java to simplify code and improve readability by using a more descript
added a check for the " redirected " flag before starting the WelcomeActivity to ensure that the intent is only launched when " redirected "
added a new ShadowCheckedTextView class and implemented it in Robolectric to enable testing of CheckedTextView functionality in Robolectric
added Serializable interface to ParserState and updated method visibility in AccessorProperty , AccessorProperty , and Property classes to ensure that the ParserState is
added " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enhance certificate verification functionality
removed duplicate calls to ` context . setTEMPDIR _ CONFIGURED ` and ` context . TEMPDIR ` in ` WebInfConfiguration .
added support for parse the presence nick in Occupant . java and a corresponding test in MultiUserChatTest . java to ensure proper handling
removed the ' context ' parameter from the QuicSession constructor and related classes to simplify the constructor and improve code readability
replaced instances of ` writer . setMergeScheduler ( ) ` with ` writer . getConfig ( ) ` in ` CreateIndexTask . java ` to
updated null checks in ICU4JImpl and TextPosition classes to use value instead of string literals to improve code readability and maintainability
added imports for ComputedDateValue , ComputedDateValue , and ComputedDateValue in AddDefaultValueChange . java and AbstractDatabase .
refactor NbtScoreboardIoService to improve code readability and maintainability
updated SAML2Configuration and SAML2ServiceProviderMetadataResolver to handle non - writable resources more effectively to improve resource management and provide clearer warning messages for
changed the visibility of the printer variable from private to protected and refactored the createPrinter method in GraphPrinterDumpHandler to allow subclasses to access
added BigDecimal import and updated order calculation logic in HuobiAdapters . java to ensure accurate calculation of the average price in the order
updated ` ProjectionOperation ` and ` TypeBasedAggregationOperationContext ` to use ` getTarget ( ) ` instead of ` getMappedObject ( ) ` to
added a check for player viewers in the addViewer0 method to ensure that the player is only added when the player is a valid player
added constant state management to FolderAdaptiveIcon , FolderAdaptiveIcon , and ShiftedBitmapDrawable classes to improve code robustness by preventing
refactor SPDYClient to use AsyncSPDYConnection and AsyncSPDYConnection for improved connection management to enhance code readability and
fix nullpointerexception in protostuffobjectoutput . writeobject ( )
pdfbox - 4071 : fix typo in method name
refactor BarrowmanCalculator to improve code organization to enhance maintainability and readability of the code
added a conditional check to return early if the axis is not shown to ensure proper rendering when no axis is displayed
replaced ` setFilter ` and ` setWrap ` methods with ` unsafeSetFilter ` and ` unsafeSetWrap ` in Texture . java to ensure
updated variable name from " returnToWorkspace " to " returnToWorkspace " in XmlWorkflowServiceImpl . java to improve code readability and maintain
updated SSL connection handling in CustomUrlJob . java and added a new class CustomUrlTrustEverything . java with SSL configuration to enhance security by
refactor clock rate retrieval from ` getEncoding ( ) ` to ` getRealUsedClockRateString ( ) ` across multiple classes to improve clarity
refactor TextureAtlas class implementation to improve code readability and maintainability
updated the method for retrieving the module name from ` getProductNameForBuildTargetNode ` to ` getModuleName ` in ` AppleLibraryBuilder `
added lock and unlock functionality to the finishReleaseProcess and release processes in TestSlot . java to ensure proper resource management and prevent potential memory leaks
update subQuery to include ID _ LIST in SqlTreeBuilder and add a new test class TestFindIdsWithInheritance in TestFindIdsWithInheritance
updated WebSocket response header handling and modified buffer allocation in WebSocketServletRFCTest . java to improve readability and maintainability of the code
[ wasm ] fix leak in wasmfunctioninstance and wasmfunctionnode
added a ` ttl ` field and its getter / setter in ` ClickHouseLogCollectClient ` and ` ClickHouseLogCollectConfig ` classes to
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and added new methods in CustomPreconditionWrapper , CustomPreconditionWrapper , and XML
replaced ` QueuedThreadPool ` with ` HandlerCollection ` and added server start and stop methods in ` DeploymentExceptionTest . java ` to improve server
added exception handling around Fresco initialization in CommonsApplication and NearbyController classes to improve robustness by catching potential exceptions during initialization
added a null and empty check for objectName before returning it to avoid potential NullPointerExceptions when objectName is null
updated error message from " could not find file " to " could not be find " in UserDataException to improve clarity of error reporting for file
[ hotfix ] [ table - planner ] make planner and executor class static final
updated the handling of certificate subject and subject names in KeyTool . java and added null check for dname in Resources . java to improve clarity and
mark the RuntimeOptions class as deprecated since version 23.0 to indicate that the class is outdated and should no longer be used
replaced the use of ` CharBuffer . wrap ( str ) ` with ` str . getBytes ( utf8Charset ) ` in ` Utils . java `
added a new interface ` PermissionEvaluator ` with a method to check if a permission is present in the application
added ERASE _ LINE _ ON _ FINISH option to BRACKETED _ PASTE and BRACKETED _ PAST
updated the condition to check if the server is not in the online list to ensure that only valid servers are processed
replaced references to ` CALC _ MERKLE _ ROOT _ FAILED ` with ` BLOCK _ MERKLE _ ERROR ` in
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42136 - expand -
improve error handling for http client response
changed the center method from center to centerAbsolute in Picker . java to ensure the layout reflects the current position of the spinner
[ hotfix ] fix networkbufferpool . recyclememorysegments ( list < memorysegment > segments . size ( ) ) .
refactor MBeanServer initialization in TestJmxIntegration . java to improve code readability and maintainability by reducing duplication
replaced ` AndroidJUnit4 ` runner with ` RetryTestRule ` in ` AbstractIT . java ` to utilize a new ` RetryTest
refactor ` CallTask ` and ` QueryStateMachine ` to use ` session ` instead of ` autoCommit ` to improve code readability and maintain
[ hotfix ] [ table - common ] fix checkstyle violation in csv
added support for the " javax . microedition . khronos . opengles . GL " package in InstrumentationConfiguration to ensure compatibility with
[ hotfix ] [ test ] remove unused code in streamtasktimertest
refactor request URI handling in Request . java and add a new test case in RequestTest . java to improve code clarity and ensure proper handling of
updated version code from ` KEY _ LAST _ SEEN _ VERSION _ CODE ` to ` WhatsNewActivity . KEY _ LAST _
added sessionAvailable and sessionUnavailable methods to the SessionManager class to enhance session management functionality for better session management
added a method to add the " liquibase . pro " package to the scan service to enhance the functionality of the service provider
replaced ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` and ` SyncedFolderProvider
updated the ` loadWithNewGlobal ` method to accept an additional ` Object [ ] ` parameter and modified the ` loadWithNewGlobal ` method
updated regex patterns in FastPathResolver . java for consistency and clarity to improve code readability and maintainability by reducing redundancy
updated weigher method calls from ` length ( ) ` to ` toIntExact ( ) ` in ` HiveClientModule . java ` to improve
rename methods from ` isExceedRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple files to improve clarity and consistency in
[ calcite - 3596 ] fix unsupportedoperatorsvisitor when use parquet ( # 3596 )
clear the headers in AbstractProxyServlet to ensure that the proxy request headers are cleared before proceeding
added a check for SA attach in CompressedClassSpaceSizeInJmapHeap . java to skip tests when SA attach is not expected to work
added null check for bgColor in GraphicsDevice and created TranslucentWindow class to enhance robustness by preventing potential NullPointerExceptions
added a null check for userInfo . getEmail ( ) and userInfo . getWebpage ( ) in UserInfoActivity . java to ensure
added custom field serialization for PrecompiledHeaderData and updated leadingIncludePaths check in PreprocessorDelegate to ensure leadingIncludePaths is not serializable on different
[ hotfix ] [ table - common ] fix append mode in kafkatablesourcesinkfactorybase
added a new integration test class ` MultipleOutputsIntegrationTest ` for testing named output groups to ensure that named output groups can be used in the same
updated the content formatting logic in FileSettings . java to ensure proper formatting of the setting key and value to improve code readability and maintainability by
flow : fix npe in statelessflow . getflowcontents ( )
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistence mode for test execution
added device status entry for leaving - dock , energy - save - mode , and energy - save - mode in DeviceStatus . java to enhance device
add itemloadingexception and blockstateexception to the modelloader registry .
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
added conditional check for 2X graphics before retrieving the current surface scale to ensure proper rendering based on the graphics type
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and readability of the code
updated CsvBulkLoadToolIT and QueryUtil to use PropertiesUtil instead of Maps for server properties to simplify server property handling and improve server configuration
replace ` File . separatorChar ` and ` File . pathSeparatorChar ` with ` File . separatorChar ` and ` File . pathSeparatorChar
[ jme3 ] refactoring wavloader to use a resettableinputstream instead of a boolean inputstream
added a new boolean parameter ` repeatFirstLineIndent ` and modified the ` setIndent ` method to include it to control the indentation of the column
updated the type casting from ` Object ` to ` Object ` in the ` equals ` method to ensure proper type safety and prevent potential ClassCastException
do n ' t call setmetricstracker and setconnections ( ) if it be n ' t set .
use controlflowanchored instead of controlflowanchornode
added a call to setFocusPainted ( false ) in WindowsPlacesBar . java to disable focus paint when the button is pressed
added support for UniqueConstraint in the DatabaseSnapshot class to ensure compatibility with both primary and foreign key types
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and implemented a new endpoint in ` AccountAPI
do n ' t create a dc . title if it contain a dc . title .
refactor utterance handling in GapInsertionDetector to check for non - empty words before returning to improve robustness by ensuring utterances are only returned
added unit test base on user forum issue
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater ` and added getter and setter methods in `
updated FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to increase the threshold for better user experience
updated the system class name from " Ljava / lang / System . class . getName ( ) " to " Ljava / lang / System "
hhh - 13644 - handle null pointer exception in procedurecallimpl ( # 13644 )
added null check for ` getApiProperties ( ) ` in ` RestSwaggerSupport . java ` to avoid potential NullPointerExceptions when ` getApi
added new ` BinaryFrameGenerator ` , ` TextFrameGenerator ` , and ` TextFrame ` classes for handling binary frame payloads to facilitate WebSocket
[ java ] use ` ` until ' ' instead of ` ` findelement ' ' in ` ` pageloadingtest ' '
use nextboolean ( ) instead of infinite loop to avoid infinite loop .
added a private static method ` keepAlive ( ClassLoader loader ) ` to the ` ResourceBundle ` class to improve resource management by allowing the loader to be reuse
change return value from false to true in SQLiteDatabase . java from false to true to ensure proper handling of database operations
[ jsr166 ] add support forUTIL _ CONCURENT _ PREFIX in findjsr166lockmonitorenter . java
added MkdirStep to multiple AndroidAar , AppleBundle , AppleBundle , and FatBinary classes to utilize the Mkdir step
updated error messages in MeshLeveler . java to include specific coordinates to improve clarity and accuracy of error messages for better debugging
( chore ) camel - pmml : skip pmml parsing and compilation if jpmml module be available to classpath .
corrected the spelling of ' locationMode ' to ' thermalStatus ' in ShadowPowerManager . java to improve code readability and maintainability
added a conditional check for the MAC environment in MountableFile . java to ensure that the temporary directory is only created on non - Mac systems
added a boolean flag ` USE _ MEMORY _ MAPPED _ BUFFERS ` to the ` PrjFileReader ` and modified the condition
added a null check for the organization in the pom . xml file to ensure that the plugin does not require an organization in the pom . xml file
updated SepPostingsWriterImpl . java to refer to the NOTICE file instead of the NOTICE file to improve code clarity and maintainability
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the codebase
updated the method call to use System . getProperty ( " java . class . path " ) instead of a hardcoded string to ensure compatibility with
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device . java
added a test for the ` dontChangeJavadoc ` method in ` AddLicenseHeaderTest . java ` to ensure that the ` rewriteRun ` method
changed the LAUNCHER3 _ PHYSICS flag from false to true to enable the LAUNCHER3 _ PHYSI
added a < div > tag to the HTML output in HtmlThreadInformationsReport . java to improve user interface by providing clearer information about the
updated the LUCENE _ MAIN _ VERSION from " 3 . 1 " to " 4 . 0 " and updated the TEST _ VERSION
added symbolicator and task fields to BsdDebuggerLocal and modified platform condition checks in PlatformInfo . java to ensure compatibility with Mac OS X
fix potential memory leak in networkdispatcher .
do n ' t log networkdispatcher exception when connection reset by peer
[ java ] add null check for conductorbuffers in aeron . java
added a break statement in TouchImageView . java to ensure proper handling of break conditions
[ hotfix ] [ runtime ] add support for dvancedsettingsproto and dvancedsettings
removed SSL filter handling from FeedableBodyGenerator . java to simplify the code and improve readability
added type checking for ` toFq ` and ` toGeneric . getFullyQualifiedName ( ) ` in ` TypeUtils . java ` to ensure
replace NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush in ColumnFamilyStore . java to improve performance by using ConcurrentSkipListSet instead of NonBlocking
added null checks for ` tree . errs ` in ` MemberEnter . java ` and modified error count checks in ` Erroneous . java
replaced SWT . NO _ BACKGROUND with SWT . NONE in BugInfoView . java to simplify browser initialization by using SWT . NONE
changed the method call from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure the button
updated the calculation of ` newLowerBound ` , ` newUpperBound ` , and ` newLowerBound ` to ` newLowerBound ` , and
refactor ITextUserAgent to use ByteArrayOutputStream for stream writing to improve code readability and maintainability by centralizing stream handling logic
refactor SwitchCompiler and CaseStmtToken classes to improve variable handling and add local variable management to enhance code clarity and maintainability by centralizing variable
added error handling for SSL provider initialization in RSAClientKeyExchange . java to improve robustness by catching potential exceptions during SSL handshake
update WinGammaPlatformVC10 . java to use psapi . lib instead of psapi . lib to ensure compatibility with the latest PMS API
updated StringUtilsTest to include a newline separator in SQL statements to ensure proper handling of newline characters in SQL statements
added compatibility with Ninja version and output encoding in TemplateEngineFreemarker and ApplicationController classes to ensure proper encoding and output encoding for script execution
replace ByteArrayInputStream with byte array handling in CRDGeneratorTest . java to improve readability and maintainability of the code
removed private static final modifier from holdSamples and type variables in SampleSenderFactory . java to enhance encapsulation and improve code readability
added a null check for the " testngEmailableReporter " system property before adding it to the EmailableReporter to avoid potential NullPointerExceptions when
updated command line escaping logic in CommandLineBuilder . java and added a new test case in CommandLineBuilderTest . java to ensure proper handling of quotes in
removed the ` public ` access modifier from several ` Clock ` , ` Clock ` , ` MetricProducer ` , and ` MetricProducer ` classes to
added a call to setNumReduceTasks ( numFetchers ) in FreeGenerator . java to ensure the job counts correctly based on the number of
fix nullpointerexception in schemageneratorhelper . getvaluefromobjectvalue ( )
updated the FILEVERSION string from " 505365 " to " 532077 " to correct the file version from 505365 to 5320
added GL _ ARB _ texture _ float extension and updated GL _ RGBA32F to include GL _ ARB _ texture _ float extension
make fileserver . write ( filename , value ) thread - safe .
added null check for outputDirectory and dirName before setting it in ClassDump . java to avoid potential NullPointerException when outputDirectory is null
added PerfStatsCollector to the getFuture method in ShadowSQLiteConnection to improve performance tracking for SQLite connections
replaced ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java
add a new enum resourceerrorhandling to provide a way to handle resource error
added a check for EOFException in RAMInputStream and implemented a test for EOFException in TestRAMDirectory to ensure that EOFException is thrown when
[ java ] add requesturi to error message for missing resource .
modified ForkJoinPool and ForkJoinWorkerThread constructors to accept a boolean parameter for innocuous access control context to enhance flexibility in thread management by allowing permission
updated the CHECK _ EVERY _ N constant from 10000 to 0xFFFF and added logging statements in Caches . java to improve memory management and
removed the call to ` r . getRegionInfo ( ) ` in the ` openRegion ` loop to simplify the code and improve readability by
added null check for currentSelectionArea before proceeding to prevent potential NullPointerException when currentSelectionArea is null
added a parameterized test method ` testJaasDemo ` to ` DemoModulesTests ` and updated the ` testJaasDemo ` to
added spanX and spanY parameters to the folder creation logic to ensure proper layout calculations based on span coordinates
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
added support for referencing tables with a higher ID in CreateTable . java and implemented a test for reference lattice tables in TestCases . java to ensure
added checks for extra XML gid values in TiledLoader . java to ensure proper handling of extra XML gid values in TiledLoader
added synchronized keyword to the setWorkingSet method in InMemoryTileCache . java to ensure thread safety when setting the job set
added a new Java class ` Solution ` that calculates minimum and maximum stone steps to account for 0 starting stone to ensure accurate calculation of stone values
add addresschecker interface for trackerrequestprocessor . isbadaddress ( )
fix a bug in the rendertype . gettranslucentmovingblock ( ) call in the multilayermodel .
add a method to remove a tag from the config element to improve code readability and maintainability by using a more descriptive method
changed the type of thingTypeVersion from int to String in ModuleType , Capability , and NetatmoThingTypeProvider classes to improve type
added null check for recieptents before calling getDesktop ( ) to avoid potential NullPointerExceptions when recieptents is null
refactor issingle ( ) to use issingle ( ) instead of isasync ( )
added a ` failFast ` parameter to ` DockerClientFactory ` and improved logging in ` RemoteDockerImage ` and ` ImageFromDockerfile `
added a new parameter ` resourcesMode ` to the ` AndroidMetadata ` class and modified the ` AndroidMetadata ` constructor to include it to enhance the
replaced ` DateUtils . truncate ` with ` Calendar . getInstance ( ) ` in ` HistoricProcessInstanceQueryImpl . java ` to improve date handling efficiency
updated the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to use ` importProjectCore
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for command failure scenarios
refactor TreeMap class for improved performance to enhance performance and maintainability of the code
added methods to enable asynchronous stack traces in CN and Display classes to enhance error handling capabilities for better debugging
added a method to set the glow color in BubbleTextView and updated Folder to use it to enhance the visual appearance of the outline and folder items
added style classes for link , desc , and file row text in LinkedFilesEditor . java to improve code readability and maintainability by reducing redundancy
removed the return statement for " java . lang . Short " in AbstractJdbc2ResultSetMetaData and added a test for class matching in ResultSetMetaDataTest
removed exception handling in Lucene40LiveDocsFormat and simplified file deletion in SimpleTextLiveDocsFormat to simplify code and improve readability by eliminating unnecessary
added null check for _ info before determining the upgrading status in HttpConnection . java to avoid potential NullPointerException when the info is null
added a constructor to ShadowLocation that accepts a String provider to enable instantiation of the specified provider in the ShadowLocation class
added a condition to check if deviceRam is less than 2048 in LauncherPreferenceJavaFragment . java to ensure maxRAM does not exceed
do n ' t add empty local map stats when map have data
added logging functionality to FileProfileActivator to improve error handling and provide more informative logging when file profiles are missing
updated the error message from " noname1234 " to " invalid _ " in PdfWriter . java to correct the spelling of " invalid "
[ flink - 18135 ] [ table - planner - core ] fix a bug in guild . getroles ( )
updated the maximum number of uploads from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java
added unit tests for ` delete ` method in ` DashboardUserMapperTest . java ` to ensure correct behavior of the ` delete ` method in
rename recipientidentifier to primaryparticipant instead of recipient
[ gr - 16335 ] add auto deref handle method to llvmderefhandlegetreceivernode
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size from the BufferedIndexOutput
[ java ] add ` ` -- helpautowidth ' ' option to terasology . java
refactor action bar title assignment logic in DrawerActivity . java to improve readability and maintainability of the code
refactor CommandLineParserTest . java for improved readability to enhance maintainability and readability of the code
added animation interpolators for ALL _ APPS _ SCRIM _ FADE and ALL _ APPS _ SCRIM _ FADE to
updated the method to use ` javaNameFromExternal ` instead of ` Character : : toUpperCase ` in ` DefaultJavaLanguageNamer . java `
added native methods for setting and release of Rectangle2D frame in CWrapper . java to enhance the functionality of the CWrapper class
added constant value checking logic in Checker . java and created a new ValueTest class in ValueTest . java to ensure that constant values are correctly
refactor MontgomeryMultiplyTest , TestMulAdd , TestSquareToLen , and TestSquareToLen classes to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify the code by eliminating unnecessary null checks
refactor JiraConfiguration class to improve code organization to enhance maintainability and readability of the code
updated error and coverage message formatting in UploadBuild . java to improve readability and maintainability of error messages
updated bounds calculations in DeviceProfile . java to use search bar offset instead of edge margin to improve layout consistency by using the search bar offset instead of
[ pulseaudio ] do n ' t call disconnect if idletimeout be 0 .
refactor launcher task handling in OverviewCommandHelper to run on the UI thread to improve code readability and maintainability by encapsulating
removed the ` getSourceGroup ( ) ` method from ` AppleSource ` to streamline the code by eliminating unnecessary dependencies
increased the timeout duration from 22000 milliseconds to 32000 milliseconds in TestSimTriggerIntegration . java to allow for more time for trigger firing
removed the outputPositionCount parameter from the RunLengthEncodedBlock instantiation in FloatSelectiveStreamReader . java to simplify the code and improve readability by
refactored conditional checks in AbstractNodeCostSearch . java for better readability to improve code readability and maintainability by reducing duplication
added a condition to skip processing for Form , Dialog , and Dialog components in ResourceEditorView . java to ensure proper handling of UI components based on
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java ` to
added a null check for commitPoint in ReplicationHandler . java to ensure that the latest commit is retrieved when it is null
added unit tests for ` getImeiForSlot ` and ` setMeid ` methods in ` ShadowTelephonyManagerTest ` and
updated the debug method in SimpleHostRoutingFilter to use the current RequestContext ' s getRouteHost ( ) method to improve request handling by utilizing the
added destory ( ) method to IndexSegment and IndexSegmentImpl classes , and implemented close ( ) method in IndexSegmentImpl to ensure proper resource
add unit test to ensure that the test be run on the correct group .
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer . java `
hbase - 16469 hregion . bulkload ( ) should throw ioexception instead of multipleioexception .
added a ` commission ` field to the ` DefaultWithdrawFundsParams ` class and updated the ` DefaultWithdrawFundsParams
removed the import of StreamTerminator from AutoClosingReferenceStream . java to streamline the code by eliminating unnecessary dependencies
replaced MorphlineRuntimeException with MorphlineRuntimeException in LoadSolrBuilder . java and SolrLocator . java to improve error handling by ignoring specific exceptions
added a check for abstract method invocation in Java2TypeScriptTranslator . java to ensure abstract methods do not throw an error if the method is not
added Stackless logging for file session sweep operation in TestFileSessions . java to improve debugging capabilities by logging stack traces
added Serializable interface to SqlDataType and updated related classes to implement Serializable interface to enhance data type handling and ensure proper serialization of entities
refactor SubExactLConstantTest and SubExactLNonConstantTest files to improve test coverage and maintainability
added null check for claimRequestString in ConnectOAuth2RequestFactory . java to ensure robustness by preventing potential NullPointerExceptions
updated the HiveFilterSetOpTransposeRule constructor to use HiveRelFactories instead of FilterFactory to improve flexibility and maintainability of the filter
refactored the ` processTypeHintForNestedDocuments ` method and added unit tests for null values in ` UpdateMapperUnitTests ` to
replaced ` mcr ` with ` coreStatus ` in ` CollectionsAPIDistributedZkTest ` and added a new method ` getCoreStatus `
initialize transformers , locators , and locators in ModDirTransformerDiscoverer . java to ensure proper initialization of list elements
updated string concatenation in AbstractQuerydslProcessor . java to improve readability of error messages
add method call stack to PEgraphdecoder . getcallstack ( )
renamed methods from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency in naming convention
camel - 14284 : camel - mail : use identityhashcode instead of null check
added null check for redeliveryPolicy before setting the receipt policy in ActiveMQConnectionFactory . java and PrefetchSubscription . java to avoid potential NullPointer
added setIsPropertyName ( ) method to getIdentifierName ( ) to ensure identifiers are correctly set for property names
add WaveGeneratorActivity to manage the wave generator activity to enhance user experience by providing a way to launch the wave generator activity
added logging for null checks and improved null checks in KeyedProperties . java and SheetOverlaysManager . java to enhance robustness by preventing
fix : add log and exec listener to podit
added a factory method ` testNoWriter ` to ` TestReplicationHandler ` to handle index creation and create a new one to ensure that the index
added a conditional call to dispatchMethodKernelOkra in GraalKernelTester . java to ensure proper handling of method kernel responses
updated DnsClient , MxRecord , and DefaultMxRecord classes to implement Comparable and added sorting functionality to ensure records are sorted by priority
refactor thread creation to use a action - based action for thread creation to improve code readability and maintainability by reducing duplication
added validation and validation for the SelectBox dropdown in UITest . java to ensure compatibility with Linux 6 and above
replaced ` IllegalStateException ` with ` Collector . printStackTrace ( e ) ` in ` JobGlobalListener . java ` to improve error handling by using a
added a parentSplit parameter to the createState method and updated related logic in FlowBuilder and SplitState classes to enhance state management by allowing optional parent
changed the connectionState variable from non - volatile to volatile in SSLSocketImpl . java to ensure thread safety when accessing connection state
change default polling period from 10 to 1000 and add test for periodic trigger
replace ` malloc ` with ` length ` and ` wrap ` methods in ` MemoryStack . java ` and ` MemoryUtil . java ` to
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractDoclet classes to improve error reporting and
fix a bug in the unusedmodifier rule that cause a nullpointerexception .
updated method calls from ` value ` to ` : : add ` for consistency across multiple configuration classes to improve code readability and maintainability by using
updated parameterized parameter name from " ssl = { 0 } " to " ssl = { 0 } " in AbstractHttpClientServerTest . java to ensure
added error handling for transformation transformations in TransformationHelper . java to improve robustness by logging errors when transformation fails
updated variable name from ` userPermissions ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to ensure consistency in naming convention
replaced equality checks with EqualsBuilder for x , y , z , and z to improve readability and maintainability of the code
added null check for outputRoot in FileProcessor . java to avoid potential NullPointerExceptions when outputRoot is null
added a new ` AnnotationFilter ` interface and modified ` getAnnotations ` method to use it in ` PDFPage ` and ` PDFRenderer ` to
refactor StackTraceCleaner class for improved readability to enhance maintainability and readability of the code
updated content type from " filename " and " content - disposition " to " text / javascript " in PluginServlet . java to ensure proper content
hhh - 16464 skip sqlliteralinselectexpressiontest for oracle8i , oracle8i , and sqlserver
updated the ` upgrade ` method to accept a ` slotSize ` parameter and added null checks for ` stats ` and ` stats ` to ensure accurate
added ` getStats ( ) ` method to ` AbstractDataImportHandlerTest ` , ` ContextImpl ` , and ` DocBuilder ` classes to
[ kerberos ] [ kerberos ] enable long timeout for kie client
updated gesture handling in ` PagedView ` , ` BaseOverview ` , ` LauncherInstrumentation ` , and ` LauncherInstrumentation ` classes to
updated unlocks initialization in UI . java and added a button to the PausedDialog in PausedDialog . java to improve code readability and
clear the drop event in PlayerEventListener . java to ensure that drops are cleared before proceeding
added a new constant DEFAULT _ PARAM in StreamResult . java to provide a default value for inputName
updated the exception type from MalformedURLException to IOException in AttributeNormalizerTest . java to improve clarity and consistency in exception handling
updated printlnBoth method to include chunk type in TsFileSketchTool . java and added buffer flip method in LocalTsFileInput . java
added headersToExclude field and updated assertions in UmbrellaHeader . java and ProjectGeneratorTest . java to improve header handling by excluding specific
fix checkstyle issue in grizzlyasynchttpprovider
added encode ( ) method to RequestPlugin . java to ensure proper encoding of request data
added support for DB2 dialect in RolapNativeSql and RolapNativeTopCount classes to enhance SQL expression handling for different database types
added validation for null or empty password in LdapAuthenticationProviderImpl and created corresponding tests in TestLdapAuthenticationProviderImpl to ensure that null and empty password
pdfbox - 4071 : use integer . tostring instead of integer . tostring ( )
added a condition to clear complexWriters when the condition is met to ensure that complexWriters is cleared before proceeding
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress serial warnings in the codebase
changed the access modifier of the ClassGraphClassLoader class from public to package - private to allow external access to the class from other packages
added validation for " _ errors " in ErrorResponseException . java to ensure proper handling of empty schema errors
added a constructor to EventSourcingRepository that accepts an eventStore and snapshotTriggerDefinition to facilitate the instantiation of EventSourcingRepository with
refactor symbol handling for binary nodes in Attr . java to improve code readability and maintainability
refactor search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to improve clarity and functionality to enhance user experience by
updated NuvoConnector to use a boolean flag for standalone mode and adjusted command handling logic to ensure proper command execution based on the standalone mode
updated the TIFF configuration value from TIFFExtension . PLANAR _ CONFIGURATION _ PLANAR to TIFFBaseline . PLANAR
added a call to ` is . close ( ) ` in ` ItemListTag . java ` to ensure proper resource management and prevent memory leaks
add averageutil class to make it easy to use .
added new classes ` SigInt ` and ` SigIntBarrier ` , ` SigIntBarrier ` , and ` SigIntBarrier
refactor ExporterGEXF . java to utilize EdgeIterable for better graph handling to improve code readability and maintainability by centralizing
replaced ` nullBuf ` with ` nullText ` and updated related methods in ` TCTLSeparatedProtocol . java ` to improve compatibility with
added validation for rubric question index in feedbackrubricresponsedetails
replace DB2Database with CatalogAndSchema case in CatalogComparator . java to improve code clarity by using a more descriptive variable name
[ hotfix ] [ test ] fix browsermobproxytest failure
fix a bug in the critical error message in the model repository
removed redundant calls to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code readability and maintainability
[ hotfix ] [ javadoc ] fix typo in internalbytearray and trufflestring
[ hotfix ] [ graph ] fix checkstyle violation in outedgesfunction
refactor multiple Java 6 assertion classes to improve code organization to enhance maintainability and readability of the codebase
deleted the class Class A \ 314 \ 201 . java and added DiacriticTest . java with a new test class Diac
refactor ` CountDownLatch ` initialization to ` CyclicBarrier ` and introduce a new ` assertExecutionsDone ` method to improve code readability and maintainability
refactor workspace reader handling in DefaultMaven and DefaultGraphBuilder to improve error handling and ensure proper handling of component lookups
updated ssl scheme check from ` startsWith ( " https " ) ` to ` equals ( uri . getScheme ( ) ) ` in ` ServiceRegistryConfig
refactor Mockito class for improved readability to enhance maintainability and readability of the code
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized ensureInstance ( ) method to the ServletHolder class to ensure the servlet instance is properly initialized
[ binance ] add log for deltaservertime and deltaservertime
added a condition to check if the binding starts with " NonStop ( tm ) Servlets for JavaServer Pages ( tm ) Servlets for
added null check for the form before deregistering animated components to avoid potential NullPointerExceptions when the form is null
refactor ` decodeResource ` and ` drawBitmap ` methods to accept an ` options ` parameter to enhance flexibility in resource decoding by allowing customizable
[ java ] use configuration . numberofmessages instead of ` ` 10 ' '
added functionality to control the behavior of the ` preventNextClick ` method in the ` TimelineArrayAdapter ` class to improve user experience by ensuring
added " text " to the PostgresDatabase data type list and modified conditional checks in PostgresDatabase . java to improve data type handling and ensure
[ hazelcast - 3683 ] fix entryprocessorbouncingnodestest ( # 3683 )
updated state checks from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` Ambar
added a null check for the thingRegistry in CreateBridgeServlet and updated related test cases in CreateBridgeServletTest to ensure proper handling of null values
refactor ` updateRobots ` method to use ` cs ` instead of ` curi ` to improve code readability and maintainability by
replaced calls to ` getDisplayName ( ) . contains ( " Teredo " ) ` with a null check for the ` dName ` variable to ensure
added a default shader parameter to the SpriteBatch constructor and updated related methods to include it to enhance the flexibility of shader creation based on the default
added properties to set the " options " property to " - c synchronous _ commit = on " in TestUtil . java to ensure consistency in
added element type coercion handling in SortedSetTypeCoercer and refactored the fillSortedSet method in TypeCoerc
updated confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to conditionally remove files based on the presence of a folder to improve user experience by ensuring
added a condition to check if the character is less than 256 before accessing the safe array to ensure that the safe array is only processed when the
updated port handling in UserContext . java to use a dynamic port and modified the registration of the fragment storage to ensure that the server correctly addresses the
updated the assertion in HostResourceProviderTest to return an empty map instead of an empty map to ensure proper handling of empty clusters in the test
removed the logging parameter from the loadConfiguration method across multiple classes to simplify the method signature and improve code readability
refactored the initialization process in SIPCommFrame . java to improve code readability and maintainability by centralizing the initialization process
removed the ShadowHtml class and updated test assertions in HtmlTest to streamline the codebase and improve readability by eliminating unused imports
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing ` StarTreeRecordStoreFactoryBlackHoleImpl ` to facilitate
updated logger references from " org . eclipse . jetty . jetty " to " org . eclipse . jetty . http3 " and " org . eclipse
changed the access modifier of the addListeners method from private to package - private in MockSettingsImpl . java and added a test in MockSettingsImpl
refactor StateHandleStore class implementation to improve code readability and maintainability
updated import statements from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty . http . security .
updated student section handling to use a constant instead of a hardcoded string to improve code readability and maintainability by using constant values
use try - with - resources to avoid potential resource leak
camel - 1145 : fixed the test failure of camel - 1145
added BuildTarget parameter to the JarBuildStepsFactory and updated jar parameter handling in JarBuildStepsFactory to improve dependency management and maintainability of the
updated the SSL certificate verification link in TrustEverythingTrustManager . java to clarify the purpose of the certificate verification
removed the getPageSizeVal method from ListCapacityCmd . java to simplify the code and improve readability
added a case CLOSED to the IteratingCallback class to handle the CLOSED state of the IteratingCallback class to ensure proper handling
added a new boolean field ` isAuthorized ` and updated constructor parameters in ` AccessControlContext ` and ` ProtectionDomain ` classes to ensure proper handling of
refactor OSGiDeployer to check for non - AbstractOSGiApp instances before sending deployment events to improve code clarity and ensure proper
added handling for " tiff " MIME type in DLNAMediaInfo . java to ensure correct MIME type is set based on codecV and
[ java ] add synchronization to profileargumenttypesassumption .
added a new file ` CubocDesktop . java ` and updated ` Cubocy ` and ` Map . java ` to use it to
refactor PolicyMonitorTest to use a target directory instead of a hardcoded file path to improve code readability and maintainability by using a
added a call to removeAllFiles ( ) in TrashbinActivity . java to clean up the trashbin list adapter
updated the method call from ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) ` to ` com . sun . jdi
make checkglobalvariablestoragenode abstract and add specialization annotation to runner
updated the ` createLauncherEvent ` method to include a ` Intent ` parameter and modified the ` createUserEvent ` method to include it to enhance
added MAX _ BURN _ LOWER _ FLOOR constant and updated the return statement in BurningManPresentationService . java to ensure the
updated imports in UniqueConstraintSnapshotGeneratorSnowflake . java and added a snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake
dml : do n ' t use namedvalues if the insertstatementbuilder be empty
updated test method name from " http : / / www . github . com " to " https : / / www . github . com " to
[ java ] hide default name if the default name be not a statement .
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
updated type parameters in multiple classes to use generics for better type safety to enhance type safety and prevent potential runtime errors
do n ' t send hole punch packet if we do n ' t support it .
added a new test method ` testUpdateWithPGobject ` to ` ResultSetTest . java ` to verify the update functionality of ` PGobject `
updated password reset logic to handle non - UAA origins and added a test for password reset functionality to ensure proper handling of non - UAA
updated the way propertiesElement is retrieved by using the document ' s getDocumentElement ( ) method to improve code readability and maintainability by using a
refactor Cache class to improve performance to enhance performance and maintainability of cache operations
updated variable names from ` timeInSec ` to ` timeMillis ` in ` Isochrone ` and ` SPTResource ` classes to
add a check for the validity of the light relay binding in the light relay .
added a new Chainer class and updated contains method to return a Chainer instance to enhance the functionality of the CollectionSubject class and improve test coverage
refactor Model class to improve code organization to enhance maintainability and readability of the code
updated recordedTime calculation to include a maximum of 619315200000L to ensure accurate tracking of recorded time for better accuracy
added a check to resize the status status if the terminal type is not Windows to ensure that the status is resized only when the terminal type is
added a condition to check if the host version state is not REQUIRED before setting all host versions to ensure that host versions are only set when not
updated test paths to use the root of the transpiler module instead of a hardcoded path to improve maintainability and readability of the
use linkedhashset ( ) instead of hashset ( ) in mavenexecutionrequest
[ hotfix ] [ runtime ] remove unnecessary try - catch block in operationserviceimpl
updated the method call from ` PluginHelper . getConfigurerResolver ( econtext ) ` to ` PluginHelper . getConfigurerResolver ( econtext )
updated the thread pool name in CommitLogArchiver from " commitlog _ archiver " to " CommitLogArchiver " to ensure consistency in
added connection calls to the ` connect ( ) ` method in ` CloudSolrClient ` and created a corresponding test in ` TestCloudSolrClientConnections
added synchronized block for adding and removing bindings in Breakpoint and DebuggerSession classes to ensure thread safety when adding and removing bindings
added ` clearFilesAndCache ( ) ` method to ` RobolectricTestRunner ` and refactored directory creation in ` ShadowContext `
added LinkedHashSet and TreeMap imports and updated getStyles ( ) method in SecureXStream . java and added assertions in XStreamPersisterTest . java
[ kie ] fix kiehelper to use kiemodulemodel instead of kfs . toxml
updated soil dry event handling logic in BlockEventListener . java to check for new Farmland and new Farmland types to ensure that soil dryness is
added a default method ` getLocalIp ( ) ` to the ` FinishedSpan ` class to provide a default implementation of ` getLocalIp ( )
updated ` JdbcStepExecutionDao ` to use ` SerializationUtils . deserialize ` and modified execution context handling in ` AbstractStepExecutionDaoTests ` to
remove              
added " python37 " and " python37 " to the resource list in python . java and updated file path handling in tensorflow . java to
refactor PluginTab to use a refresh method for plugins to improve code readability and maintainability by reducing duplication
changed log level from info to warn in DefaultHistory . java to improve error handling by using more descriptive log levels
[ vmware ] fix npe in vmwarestorageprocessor when vm be not available
http : / / issues . apache . org / jira / browse / amq - 4253 - fix test failure on window
refactor ExperimentalMockitoJUnitRunner for improved readability to enhance maintainability and readability of the code
updated ` chkfile _ serial ` handling to use ` Utilities . GetBuildSerial ( ) ` instead of ` Build . SERIAL ` to improve
refactor SwapGBuffers class implementation to improve code readability and maintainability
added null checks for spatial and null checks in AnimControl . java to ensure proper cleanup of skeletonControl when spatial is null
added smartReplies functionality to ShadowRanking and ShadowRanking classes to enhance testing capabilities for smartReplies in the ShadowRanking class
[ java ] do n ' t use name . endswith ( ) in archiveConductor . java
removed the call to ` resourceLoader . getConfigDir ( ) ` in ` CarrotClusteringEngine . java ` to simplify the retrieval of the
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to ensure robustness by preventing
updated method name from ` buildStdArgs ( ) ` to ` buildStdArgs ( ) ` and changed ASM version from ASM7 to
updated exception handling in RecommenderMapper and CacheTest to throw TasteException instead of returning null to improve error handling and provide clearer
added ClientInfo handling and setup method in SurrogateAuthenticationEventListenerTests to ensure proper client information is retrieved before tests are executed
added a boolean variable ` isUserView ` to ` CardPresenter . java ` to control the visibility of the user view in the application
updated method names from ` canMap ` to ` isGraphvizUtility ` for clarity and consistency to improve code readability and maintainability by
refactor histogram creation logic in LogDispatcherThreadMetrics . java to improve code readability and maintainability
added a new module - info . java file for SQLite module - info . java to provide module - level module - info . java containing module dependencies
added a sleep delay of 500 milliseconds in StreamResetTest . java to improve test reliability by avoiding unnecessary processing
removed conditional check for " new " type in permissionsManager initialization to simplify the code and improve readability
refactor DateParser and TestDateParser classes for improved consistency to enhance code maintainability and readability
added a method ` getDepth ( Context context ) ` to the ` SpringLoadedState ` class to set the depth of the ` SpringLoadedState
replace System . arraycopy with Arrays . copyOfRange in BinaryDecoder . java to improve performance by reducing unnecessary array copying
refactor ExecutionGraph class to improve code readability to enhance maintainability and facilitate future updates
added notification removal in NotificationActivity and removed swipe layout in NotificationRenderer to streamline notification handling and improve user experience by eliminating unnecessary swipe functionality
updated exception handling to handle null invocations and improved error message formatting to enhance robustness by preventing potential NullPointerExceptions
fix potential nullpointerexception in glowcontainer . getlock ( )
replaced MethodHandle with reflective method retrieval in ProxyMaker . java to simplify method invocation and improve code readability
updated SQL query to use intValue ( ) instead of int in MathTest . java to ensure type safety and avoid potential ClassCastExceptions
removed unnecessary StringUtils . join calls in BaseEmailContentFormatter . java to simplify the code and improve readability
added a simple panel to manage the visibility and visibility of the layout provided panel in LayoutPanel . java to improve user interface responsiveness and ensure
added a null check for the location parameter in the check for dead servers to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and readability
added a null check for the key parameters in the CertPathValidator to prevent potential NullPointerExceptions when the key parameters are missing
refactor MediaTypeRequestMatcher to use a new method ` shouldIgnore ` for better encapsulation to improve code readability and maintainability by
updated task number handling in LlapBaseInputFormat to include taskAttemptId to improve clarity and accuracy of log messages for better debugging
added properties = " spring . main . allow - bean - definition - overriding = true " to the SpringBootTest annotation to allow bean definition overriding
added null check before closing indexReader in DeleteDuplicates . java to avoid potential NullPointerException when indexReader is null
updated package declarations for BTCMarketsStreamingAdapters , BTCMarketsStreamingMarketDataService , and BTCMarketsStreamingService to improve
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to validate rendering behavior to ensure correct
added a new file ` CompatibilityTest . java ` that tests internal DTD and internal DTD properties to ensure proper handling of property loading and
added new modules ` VariantComponentsModule ` , ` PushUtils ` , and ` SecurityUtils ` , along with a new utility class ` Push
updated the calculation of numReplicas and numTargetReplicas in TableRebalancer and added new test cases in TableRebalancerTest to
update version number from " 2.16 . 1 " to " 2.17 . 0 " in ExoPlayerLibraryInfo . java to reflect the release
[ log4j2 - 129 ] fix line separator in test
added socket timeout handling in AjpAprProcessor to ensure proper handling of socket timeouts in AjpAprProcessor
initialize friction , restitution , density , and isSensor variables to zero to ensure proper initialization of variables in the fixtures
updated method signatures and import statements to use AnomalyFunctionSpecMap instead of SaclingFactors to improve clarity and consistency in the an
added error handling for wait for broadcast idle in LauncherInstrumentation . java to ensure proper execution of the broadcast idle operation
added unit tests for font and link tag functionality in ResourcesTest . java and modified ResStringPool _ span initialization in ResStringPool . java to
fix typo in GuiStatsComponent . java file path
added permission checks for phone calls in Launcher . java to enhance user experience by allowing user access to phone calls
updated the return value from 32 to 36 and modified the initialStatus method to include flightData as a parameter to enhance user experience by allowing users to
refactor GeoEncodingUtils to remove public access modifier and improve code readability to enhance encapsulation and maintainability of the code
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to check if the Docker client is available to ensure that the
removed the VPX constant from CodecTypes . java to streamline the code and improve maintainability
added coordinatorAddress option to DistBuildFactory and modified DistBuildRunCommand to set it to " localhost " to enhance flexibility in managing
added a static method ` match ` in ` FsUtils ` and modified timer handling in ` WrapTimer ` to improve path matching functionality and ensure
added a check for non - negative values before adding labelValues to ensure labelValues is only added if the value is non - negative to avoid potential
ggb - 164 fix for null result in app . getboolean ( ) .
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the code and improve readability
added materialization time setting in ObjectStore and created a test for update creation metadata in TestObjectStore to ensure proper functionality and accuracy of materialization
added handling for UnsatisfiedLinkError in VoskSTTService . java to improve error handling and logging for missing native dependencies
add response code code to jmssampler . is _ oneway property .
refactor break weight comparison logic in GlyphView . java to improve code readability and maintainability
refactor byte reading logic in RCFile . java to use a prefix for better readability to improve performance and maintainability of the code
added a @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address a known issue related to SOLR - 130
replaced direct calls to ` steps ` and ` processors ` with a ` LinkedList < String > ` to improve code readability and maintainability by using
refactor ClipboardTransferable and DataTransferer classes to streamline content type comparison and improve code clarity
hbase - 16464 add - infoport to testmongoservercmdline . testmongodb ( )
added a check for ` atEOF ( ) ` in ` RegExpScanner . java ` to return false if the scanner is at the end of
added null checks for enabled metrics and timers in Debug . java to enhance robustness by preventing potential NullPointerExceptions
added null check for multiUserChat . getNickname ( ) in ChatRoomJabberImpl . java to avoid potential NullPointerException when
add a null check for filename in PApplet . java to prevent potential NullPointerExceptions when filename is null
refactor token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by encapsulating the creation of
updated error message formatting in BuckConfig . java to improve readability and maintainability of error messages
[ hotfix ] [ hotfix ] [ flink - flink ] remove lock from runningjobregistry
added a native method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` to facilitate the retrieval of the hardware buffer
updated BTCChinaMarketDataService initialization to set SSL URI for the BTCChina exchange to ensure proper SSL configuration for the BTCChina exchange
[ java ] use system . getabsolutedir ( ) in cpdtask . gettofilewriter ( )
added new classes ` OauthController ` and ` Oauth2PluginTest ` for testing the ` OauthController ` and ` Oauth2
refactor SemgrexPattern class for improved readability to enhance maintainability and readability of the code
refactor flatMap methods in AbstractStreamEx , StreamEx , and EntryStream classes for improved clarity to enhance code readability and maintainability by reducing
camel - 14263 : camel - exceptiontoproducerresponseconverters : improve error logging
updated the condition for determining the shouldComeFromThisClassLoader to include " org . specs2 " and " org . specs2 " to enhance
updated conditional check from ` contains ` to ` ! contains ` in ` MediaControl . java ` to ensure that only valid audio encodings are processed
replaced ` SequenceNextValueFunction ` with ` DatabaseFunction ` in ` CreateTableGenerator . java ` and added a new test in ` CreateTable
update normalizedmultivaluemapstest to check for 3 / 3 / 3 / 3 / 3 / 3 / 3 / 3 / 3 / 3
added a volatile boolean field ` wasInvoked ` and updated its usage in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to
added a conditional check for configuration before expanding regex mapping in ColumnarDataSource and RowProcessor classes to ensure proper handling of non - configured fields and improve
updated the ` CustomSeekProvider ` class to use ` SEEK _ LENGTH ` instead of ` splitIntoThirtyParts ` to improve
added new classes XLCDCommunicator , XLCDCommunicator , XLCDController , and FirmwareUtils to handle XLCD commands to
kiemoduletransformer : use xsd instead of schema to load the kmodule . xsd
updated retry handling logic in EventQuery and EventQuery002 classes to include a check for non - empty transaction messages to ensure that transaction messages are
replaced the ` awaitThreadState ` method with a constant ` WAIT _ FOR _ TEST _ THREADS _ TIMEOUT ` to improve thread
refactor ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and add a new test class ` DelegatingMethodTest ` to
updated FREEZE _ V2 and UNDELEGATE _ RESOURCE values from 20000 to 10000 in EnergyCost . java to ensure accurate
updated the ` command ` method to throw ` ConfigurationException ` and modified the ` command ` method to throw ` ConfigurationException ` to improve error handling
deleted the SpringTransactionHooks . java file and replaced it with AbstractSpringTransactionHooks in SpringTransactionHooksTest . java to streamline transaction management and
refactor AbstractClassAssert class implementation to improve code readability and maintainability
added a new file ` GetUninitializedStringValue . java ` that implements a test for handling uninitialized String values to facilitate testing of uninitialized
added support for provided dependencies in AndroidLibraryDescription and GraphEnhancementQueryEnvironment to enhance dependency resolution for provided dependencies
added a new boolean flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable enabling and closing
replace system anomaly message retrieval with a static boolean variable ` sSavedBugreport ` to improve code readability and maintainability by reducing redundancy
added a constant for the " cinepack " format in FormatConfiguration and updated LibMediaInfoParser to utilize it to provide a default format
added hand - movement animation support to the Player class to enhance user experience by allowing hand - movement animations
replace ` data . describe ( ) ` with ` digest . toString ( ) ` in ` GrpcCasBlobUploader . java ` to simplify
deleted the HSQLDBServerFilesFilter . java file and modified file filtering logic in TestUtility . java to streamline the code by eliminating unnecessary
added a null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure that restoreFromSeed and restoreFromKey
updated the method for retrieving the latest version from APIDataSeriesVersion to APIDataSeriesVersion and added a trace log statement to improve clarity and trace
added a new method ` visitMethodInvocation ` to handle the existence of a method in ` HasTypes . java ` to improve method invocation handling by ensuring
replaced hardcoded array size with a constant for the number of values in AmbientCubemap . java to improve code readability and maintainability
display info for method and object mode when profiling mode be not enable .
added checks for the presence of ` maskedNumber ` in ` GenericUDFMask ` , ` GenericUDFMaskLastN ` , and `
refactored ` BoundedOverheadBlockStoreTest ` and ` DerbyBlockStoreTest ` to use ` TemporaryFolder ` for temporary file
added method ` isItemStackDamageable ( ) ` to ` ItemStack ` and ` getHasSubtypes ( ) ` in ` ItemStack . java `
add line _ width field and fix mc - 167447 ( fixes # 167447 )
updated the preference settings for the browser startup page in FirefoxProfile . java and FirefoxDriverTest . java to ensure the browser ' s startup
updated HTTP request handling logic in Http1xClientConnection . java to include additional HTTP method checks to ensure proper handling of upgrades and upgrades
updated the task name from " compile " to " process - classes " in JoobyMojo . java to improve clarity and consistency in the task
replace shutdown ( ) with closeIdleConnections ( 1L , TimeUnit . MICROSECONDS ) in HTTPHC4Impl . java to ensure
added a condition to check if the aggregate function suffix is not present before processing identifiers to ensure that only aggregate function suffixes are processed when necessary
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use this method to enhance functionality by allowing customizable fullscreen
added a new Java class ` Solution ` that calculates the number of frequencies based on a specified number of frequencies to provide a
set the SocketChannel variable to null in ClusteredAgentManagerImpl . java to ensure proper initialization of the SocketChannel variable
updated MutisignOperationerGodicTest . java file to improve test coverage for Mutisign operations
added exception handling for NoSuchElementException in StaxEventItemReader . java and created a corresponding test in StaxEventItemReaderTests . java to
replaced specific imports with a wildcard import and modified null check logic in ShadowTextView . java and TestAttributeSet . java to improve code readability and
updated import statements from ` shaded . jose . shaded . json ` to ` net . minidev . json ` in multiple test files
updated OS name checks from " Linux " to " AIX " in OS . java and added a new library in PKCS11Test .
use router control ip instead of private ip
added a static method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to provide a way to invoke without blocking with result
deleted the PresenceMessageComboTests . java file to the test class is no longer needed in the application
updated rounding logic in PortraitPagedViewHandler to use Math . round for width and height calculations to improve code readability and maintainability by
removed unnecessary whitespace in KMeansDriver . run calls to improve code readability and maintainability
updated the calculation of ` ClassSize . align ` to include ` ClassSize . ARRAY ` and adjusted the calculation for ` rowCache ` to
camel - 14284 : camel - core - add service to the defaultservice so it can be use in the same context .
added conditional task handling in SparkCrossProductCheck . java to ensure proper execution of conditional tasks in the application
refactor action handling in Launcher and LauncherModel classes to improve code readability and maintainability by reducing duplication
updated the condition for handling JSON responses in LoginInfoEndpoint . java and added unit tests for identity provider handling in LoginInfoEndpointTests . java to
added a method to descriptive string representation of the region ' s state and server in AssignmentManager . java to enhance the readability of
added ` msg ` and ` result ` fields to ` HuobiAccountInfo ` and updated related methods in ` HuobiAccountServiceRaw
added support for " PERIOD " in MariaDBDatabase and created a test for it in AddColumnGeneratorTest to ensure correct functionality of the Maria
( chore ) camel - java8 - sdk : add documentation for configuring default environment .
added Launcher shortcuts and dictionary loading mechanisms to VersionChangeLogs . java to enhance user experience by providing clearer feedback on Launcher shortcut
changed the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT . java to allow external access to the
removed system . out . println statement from ImageResourceLoader . java to clean up the code and improve readability
[ java ] use aeronclientinvoker . invoke ( ) instead of invokeaeronclient ( )
updated type validation logic in ` Attr . java ` and added a new class ` NoWarnOnImplicitParams . java ` for handling implicit lambda parameters
refactor menu item handling by introducing ` showMenuItem ` and ` hideMenuItems ` methods for better encapsulation to improve code readability
added reserved0 , reserved3 , reserved8 , and reserved8 parameters to BTCETransHistoryResult and BTCETransHistoryJSONTest to enhance
replace List with HashSet for series , exceptions , and exceptions in RetryFilterFunctions . java to improve performance by utilizing a more efficient set of HttpStatus
added a @ Deprecated annotation to the PluginLoader class to indicate that the class is outdated and should no longer be used
added a check for ` chunkMetaData . getEndTime ( ) ` in ` LastQueryExecutor . java ` and created a new test for ` last
updated the formatting of the request string in HttpResponse . java to ensure consistent formatting of the request string
added a static block to set the logging level to ERROR in BuildImageMojo . java to ensure proper logging behavior in the application
added a method to set the title bar ' s safe area to ensure the title bar is properly visible
replaced the loop for iterating over TimeSeriesChunkMetaDataList with a loop that decrements the index to improve code readability and maintainability by reducing
added a new SQL statement to the AlterTest class to ensure correct SQL parsing and deparsing to enhance test coverage for SQL queries
changed the access modifier of the copyState method from package - private to public to allow access to the copyState method from other classes
fixed - http : / / issues . apache . org / jira / browse / amq - 4271 - use tocompletableFuture instead of
added a new constant ` SUFFIX _ SPLIT _ FILE ` and updated its usage in ` FileLister ` and ` FileSystemSplit ` to
updated multiple classes related to Orc batch reading and file generation to improve code organization and maintainability across the project
reformatted conditional statements in CompareFunctionsProcessor . java for consistency to improve code readability and maintainability
[ hotfix ] [ compaction ] fix checkavailablediskspace ( ) method in compactiontask
added ` toString ( ) ` methods to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to provide
added a check for the state handler INVALIDATED state in AbsSwipeUpHandler and removed the task stack listener in TaskAnimationManager to ensure proper handling
added ` getLockTimestamp ` and ` setLockTimestamp ` methods to ` AppPreferences ` , ` PreferenceManager ` , and ` PreferenceManager `
refactor artist retrieval logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added a null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when remoteMessage is null
added null checks for splitInfo and modified condition checks in SplitText . java and added new test cases in TestSplitText . java to ensure robust
added support for Windows key store loading in HttpsConnectorFactory to ensure compatibility with Windows - specific key store types
updated the default check timeout value from 400 to 1 _ 000 in RestTemplateSenderTest . java and WebClientSenderTests . java to improve
added a condition to check if a remote folder is not found in FileSyncAdapter . java to improve error handling for file not found scenarios
added animations and interpolation functionality to the Slider class to enhance slider animation functionality by allowing smoother transitions
updated assertions in LineSeparatorProcessorTest to use lineSeparator instead of eol to improve clarity and accuracy of line separator assertions
changed maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to allow for more flexible texture packing
added a new test method ` negatedTernaryNotUnwrapped ` to the ` UnnecessaryParentheses ` class to
camel - 14284 : camel - hazelcast : fix potential npe in camel - hazelcast
added a new test class ` TextFeedbackTest ` and modified ` AllTests ` , ` TestRunner ` , and ` TestRunner ` classes to
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve accuracy in score comparison logic
updated case statements in AddAndScaleMultiImage and ResourceEditorApp to use try - with - resources for FileOutputStream to ensure proper resource management and
added a static method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated its usage in ` ArrayCopySnippet
log : do n ' t fail if log be n ' t find
added remoteScmSupported property and related getter and setter methods to configuration classes to enable support for remote SCM systems in the indexing process
added support for RINSE _ HOLD state in MieleApplianceHandler to enhance state management by allowing additional state values
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to standardize logging practices
updated log variable name from " log " to " log " in LocalZookeeper . java to improve code readability and maintainability
added unit tests for project generation events in EventSerializationTest . java to ensure correct JSON serialization and deserialization of project generation events
ggb - 164 add feature to process spec point in selection manager .
refactor JavaCompiler class to improve code organization to enhance maintainability and readability of the code
added a check for non - positive remaining time before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure that
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added " -- gc - sections " and " nocopyreloc " flags to the ldflags in NdkCxxPlatform . java to
refactor URI handling in SpringCloudCircuitBreakerFilterFactory to use ServerWebExchangeUtils for improved clarity and maintainability to enhance code readability
refactor multiple test classes to improve code organization to enhance maintainability and readability of the test cases
added null checks for ` uri ` and ` localName ` in ` ReadOnlySharedStringsTable . java ` to improve robustness by preventing potential NullPointerException
added a new method ` getAccountNet ` to the ` HttpMethed ` class and a corresponding test in ` HttpTestAccount001 `
added a check for availTextWidth before returning clipString in SwingUtilities2 . java and improved exception handling in Test6635110 . java to
refactor FlatteningIterator to use a single FlatteningIterator instance instead of a single FlatteningIterator to improve code readability and
replaced multiple occurrences of ` removeColorHtml ` with ` replaceAll ( " < b > " ) ` in ` TweetLinkUtils . java `
updated SecurityCenterSettingsServiceClient and package - info . java files to improve clarity and maintainability of the codebase
added a test method to reload and deleting an existing question in InstructorFeedbackEditQuestionsUiTest . java to ensure that the user correctly
hssfsheet . getlastrownum and getlastrownum ( ) return 0 instead of - 1
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and Launcher classes to enhance security by preventing malicious intents
[ java ] rename session . notifysessionopened to session . sendevent ( ) in sequenceragent
added hashCode ( ) method to AbstractParquetMapInspector and refactored equality checks in AbstractParquetMapInspector to improve code readability and
added handling for remotely closed connections in HTTP3StreamConnection to ensure proper resource management and prevent memory leaks
updated the ` SplitReader ` interface to extend ` AutoCloseable ` and removed the ` close ( ) ` method from ` SplitReader ` to
removed the deepCopy method from GsonBuilder to streamline the code by eliminating unnecessary duplication
make llsourcemap a static final instance of llsourcemap . not _ found
refactor asynchronous file handling in RestClientRequestImpl to use an embedded read stream instead of an array to improve code readability and maintainability by
corrected a typo in the dispatchStatusString method call to improve code readability and maintainability
replaced ` MockFactory . class . getClassLoader ( ) ` with ` SearchingClassLoader . combineLoadersOf ( toMock ) ` in ` Mock
add a new test class TestRefreshFlagBug to verify the behavior of the refresh flag functionality in the scene
added support for LEFT _ SEMI _ JOIN in conditional statements to ensure proper handling of LEFT _ SEMI _ JOIN conditions
refactor response completion logic in HttpReceiver and HttpSender to use HttpStatus . CONTINUE _ 100 instead of boolean to improve code readability and
[ java ] use arrayoopdesclengthoffset instead of arraylengthoffset
[ java ] use roundrobindispatchpolicy instead of fixedcountsubscriptionrecoverypolicy for test
refactor multiple Java files to improve code organization and maintainability to enhance maintainability and readability of the codebase
added a check for ` isRunning ( ) ` before stopping the app context in ` CrawlController . java ` to ensure that the app context is
changed the return type of the drawItem method from void to GlyphLayout to improve code readability and maintainability by using a more descriptive
refactor metrics handling in SpringmvcClient and improve error handling in CodeFirstSpringmvc to enhance code readability and maintainability by reducing
updated the SAFE _ ACCOUNT _ AGE _ DATE constant and simplified the return statement in AccountAgeWitnessService . java to improve code read
refactor code to improve readability and maintainability in StructureHeader and StructureReader classes to enhance readability and maintainability of the code
added support for ` ResourceUrlProviderExposingInterceptor ` in ` CasWebflowContextConfiguration ` to enhance the handling of resource URL provider
[ dexpler ] add dexpler . transform ( ) and DeadAssignmentEliminator . transform ( ) to dexpler
change enrichedruleddescendant to use property instead of property
updated the method to return the directory instead of noFOLLOW _ LINKS in PathResource . java and updated related test cases in AliasCheckerSymlink
[ hotfix ] [ table - planner - core ] [ table - planner - flink ] [ table - planner - core ]
updated the ` rDotJavaPackages ` variable to use ` rDotJavaPackagesSupplier ` instead of ` rDotJavaPackages ` to improve flexibility
pmd : add test case for deprecate package name
added property to set minimum cross compaction unseq file level in IoTDBDescriptor . java to ensure proper configuration for cross compaction unseq
[ hotfix ] [ runtime ] move activeresourcemanager to resourcemanager . active
changed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to ensure that
updated ZipResource to handle URISyntaxException and added a new ZipResourceTest class to improve error handling and ensure proper URI creation for feature file paths
updated variable names and added thumbnail generation logic in ExpandableUploadListAdapter . java to improve code readability and ensure thumbnails are only created when
refactor configuration handling in RobolectricTestRunner and add a new test method in RobolectricTestRunnerTest to improve clarity and maintainability
refactor ModelLoader to use Iterables for filtering blocks and items to improve code readability and maintainability by using a more descriptive method
refactored methods and imports in AbstractDataChangedListener and WebsocketCollector classes to improve code readability and maintainability by standardizing method
added enum handling in JSONPojoConvertor and updated test cases in JSONPojoConvertorTest to improve type safety and maintainability of the code
added a deprecated check for ` -- view ` option in ` IjProjectCommandHelper . java ` to ensure that the ` -- view ` option
refactor GWTRequestWrapper to use ByteArrayOutputStream instead of StringBuilder and ByteArrayInputStream to improve data handling efficiency and ensure proper resource management
updated the GyroControl class to implement OrientationEventListener and added a OrientationCorrectionListener for handling orientation changes to improve sensor responsiveness
updated the BIOME _ LIST _ SIZE constant from 256 to BiomeGenBase . getBiomeGenArray ( ) . length to ensure the
changed method names from ` println ` to ` print ` in ` GetInterfaceTest . java ` for consistency to improve code readability and maintainability
removed redundant assignment of Environment in FileCompilerConfig . java to simplify code and improve readability
added a new interface ByteToLongCollector in the com . speedment . common . function . collector package to facilitate the processing of byte - to
added a ` preload ` boolean parameter to the ` MMapDirectoryFactory ` class to control the behavior of the ` mapDirectory ` based on user
added new metrics for various Enabled Components in BukkitPlatform . java to enhance performance metrics based on user - defined settings
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio and default card image from TvApp to TvApp to enhance the visual appearance of the card presenter
do n ' t call auth . loginpageurl if no auth method be available
updated cloning logic in VectorHashKeyWrapper to check for non - zero values before cloning byte and decimal values to improve robustness by avoiding unnecessary array
added unit tests for the ` testSystemNanoTimeJit ` and ` nanoTimeJit ` methods in ` TimeChangeTest . java ` to
added line trimming logic in MultiPartFilter . java and improved error handling in MultipartFilterTest . java to enhance robustness by preventing null pointer
add the ability to drop the experience drop event for the living entity . close # 244
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use config - error - unknown - apikey instead of parameter to improve clarity
[ calcite - 1186 ] remove unneeded UnsupportedOperatorsvisitor from planner
updated GraphEnhancementQueryEnvironment to utilize RdepsFunction instead of UnsupportedOperationException and added RdepsFunction to improve dependency management and ensure
refactor Character class to improve code readability to enhance maintainability and readability of the code
added handling for the entire rocket component in ScaleDialog to ensure that the selection option is only enabled when the entire rocket is in parallel mode
replaced ` Arrays . toString ( bytes ) ` with ` Arrays . toString ( bytes ) ` in ` UpdateableResultTest . java ` to simplify
added null checks for offlineTableName and timeBoundaryInfo in BaseBrokerRequestHandler . java and refactored related methods in BaseBrokerRequestHandler . java to
[ java ] do n ' t add poller for apr and apr / http11 / apr / apr / apr /
updated EightmusesRipper . java to replace " Sex and Porn Comics " with " picture " and modified album title handling to improve
replaced ` mDevice . wait ` with ` TestHelpers . wait ` across multiple test files to improve code readability and maintainability by using a
added a condition to check if the profile is phone or landscape in QuickstepLauncher . java to ensure proper handling of phone - specific layouts in
replaced instances of ` getValue ( ) ` with ` unwrap ( QueryImpl ) ` in ` PartTreeJpaQueryIntegrationTests . java ` to
refactor method to use a dedicated method for retrieving matching lines to improve code readability and maintainability by encapsulating method calls
added a dynamic check for the ` getResultStream ` method in the ` JpaQueryExecution ` class to ensure that the ` getResultStream ` method
added null check for entity in PhysicsProcess . java to ensure proper handling of null entity types
[ hotfix ] [ table - common ] add entry processor test case
add jitsi - conference - room to join jitsi - conference - room
updated color assignment in Utils . java and modified htmlMessage in UtilsTest . java to improve color handling and ensure correct HTML message is displayed
[ jabref ] add option to disable the menu when no value be specify
updated Aapt2Link . java to include an RmStep for link tree path and added a RmStep to improve path handling and
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and
[ algebra ] do n ' t clear selected geos when it ' s update .
added handling for EmptyStackException in YsldValidator . java to improve error handling and provide clearer error messages
added ` isCanceled ( ) ` method implementations across multiple classes to return ` isCanceled ( ) ` instead of ` canceled ( ) ` to
added a default method ` isAnnotationPresent ` to multiple classes and modified the ` isAnnotationPresent ` method in ` AnnotatedElement ` , ` AnnotatedElement `
added a default implementation of the removeAllWidgets ( ) method in UILayout . java to provide a clearer error message when the default method is
[ hotfix ] [ test ] fix yarnsessionfifoitcase and yarnsessionfifoitcase
http : / / issues . apache . org / jira / browse / amq - 4667 - fix the issue that opensslcipher
added video processing logic for high - res content in PlaybackController . java to ensure proper handling of high - res content for high - res content
[ flink - 24435 ] [ table - planner - java ] remove dependency on datasourcev2 .
refactor listeners handling in GpsLoggingService to use a wildcard import and improve listener management logic to enhance code readability and maintainability by reducing
refactor putString method to use ` byte [ ] ` instead of ` boolean [ ] ` and update width measurement logic in ` vt32
added import for BaseItemDragListener and initialized ShortcutInfo in FolderIcon . java to ensure proper handling of drag events in the launcher
added ` createEmptyArtifact ` methods to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` Signavio
[ java ] remove unnecessary comment and improve code readability
removed the condition for the ` afterAug1 ` variable in ` VideoViewerActivity . java ` to simplify the code and improve readability by
added compactPath method call to SftpOperations . java to ensure that the file path is properly compacted
replaced mock . assertIsSatisfied ( ) with assertMockEndpointsSatisfied ( 20 , TimeUnit . SECONDS ) in BaseWeatherConsumerTest . java to ensure
changed the variable name from ` groupSort ` to ` sortWithinGroupStr ` in ` QueryComponent . java ` to improve clarity and consistency in
fix blocktype . getentitybounding ( ) to check for fern instead of solid species .
replace setFocusable ( false ) with setRequestFocusEnabled ( false ) in TranscodingTab . java to enable request focus functionality for better user experience
added exception handling in VirtualMachineManagerImpl . java to ensure proper error handling by throwing exceptions
replaced the ` requireLicense ( ) ` method with ` acceptLicense ( ) ` in ` DB2TestSystem ` and updated imports in `
refactor unit management in DoubleModel and add a setter method in GeneralOptimizationDialog to improve code readability and maintainability by encapsulating
added a new static final CurrencyPair BTC _ ZMW in CurrencyPair . java to enable the use of BTC and ZMW
added a method to set the number of samples in TestPBRLighting . java to ensure that the correct number of samples is set based on
refactor test assertions in StepWithSimpleTaskJobParserTests to improve code readability and maintainability
changed the declaration of the ` cred ` variable from non - final to final in ` CentralAuthenticationServiceImplTests . java ` to ensure immut
updated string concatenation syntax in ExpressionNode . java to improve readability and maintainability of the code
added multiple calls to ` addServiceOutput ( ) ` and ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to
add toclassorinterfacetype ( ) and toclassorinterfacetype ( ) method to make javaparser . toclassorinterfacetype (
added " org . eclipse . jdt . " to the WebAppContext class to hide the jdt used by jetty
changed the return value from ` super . useAuthCache ( ) ` to ` false ` in ` NegotiateAuthentication . java ` to simplify
updated namespace assignment from ` segments [ 0 ] ` to ` Utils . capitalize ( segments [ 0 ] ) ` to ensure the namespace is capitalized
camel - 15224 : added DirectConsumerNotAvailableException to ensure backwards compatibility with direct consumer
added a null check for the zooKeeper before setting it to null to prevent potential NullPointerExceptions when zooKeeper is not initialized
corrected the spelling of " Initializing mods Phase 2 " to " Initializing mods Phase 2 " to improve code readability and maintainability
replaced direct calls to ` vibration . vibrate ( ) ` with ` runOnUiHelperThread ( ) ` in ` AllSet
added a call to updateLastRemoteStreamId ( streamId ) in HTTP2Session . java to ensure that the last remote stream ID is updated
added TEXT _ ANTIALIASING hint to EditorHeader , EditorToolbar , and Preferences classes to enhance rendering capabilities for better user experience
[ java ] use term window size instead of term window size .
fix checkstyle issue in ctannotationimpl . java
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
replace native method ` getRGBPixelImpl ` with ` getRGBPixels ` in ` WRobotPeer . java ` to improve image processing efficiency by using a
added a new method ` newPrintStream ` to handle UTF - 8 encoding in ` System . java ` to improve code readability and maintainability
updated the vibrate value from 1 to 25 in TouchableMovementMethod . java to increase the volume of the vibration from 1 to
[ hotfix ] fix checkstyle violation in testenvironment
removed unnecessary parameters from WebSocketClient constructors to simplify constructor parameters and improve code readability
[ i18n ] fix i18n test failure on window
replaced instances of ` handleIllegalArgumentException ` and ` handleBootstrapMethodError ` with ` handleLoadConstantException ` in multiple classes to improve error handling
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper handling of authentication state during integration tests
added a new ` LowercaseComparator ` class and updated the ` super ( ) ` method in ` CoNLLUFeatures . java ` to improve
refactor JavadocTool to utilize a uniquefiles set and improve parsing logic to enhance code readability and maintainability by reducing duplication
[ java ] ignore a test that fail if the option be not in a multiselect .
added a check for the length of keys in HighestKvno . java to ensure that only valid keys are processed
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by handling potential HdfExceptions
replace ` PDone ` with ` WriteResult ` across multiple classes to improve clarity and maintainability of the codebase
updated XmlRootElement annotation from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added API implicit parameter annotations in ProcessGroupResource to enhance
added a new file TestMultiANewArray . java to test multi - array handling to ensure proper functionality of the multi - array processing in the
added a new configuration parameter for secondary storage in the management server to provide a clearer context for managing secondary storage for the management server
updated variable name from ` headNum ` to ` headID ` in ` SyncBlockChainMsgHandler . java ` to improve code readability and
added a theme setting for the preview tab content in PreviewTabView . java to ensure the correct theme is used for the preview view
added null check and closing logic for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTime ` to ` ConnectorTimeoutTest . java ` to verify the idle timeout behavior of the HTTP client
make dcoref . dictlist and dcoref . dictpmi and dcoref . signatures configurable
refactor DocCommentParser to use a dedicated method for parsing tag names to improve code readability and maintainability by encapsulating tag name
updated JpaPagingItemReader and JobLaunchingGatewayParserTests to remove unnecessary type casting to improve code readability and maintainability
changed log level from warn to debug in DistributedQueue . java to improve logging clarity by using a more descriptive log level
refactor ColorExtractionService to use a new method getHotseatPallete to improve code readability and maintainability by centralizing palette
updated imports in TypeRegistry and TypeRegistry to use TableEntryByTypeTransformer and TableCellByTypeTransformer instead of ParameterTypeRegistry to enhance flexibility in
removed assertion for newAvailableShared in AtomicRemainder . java to streamline the code by eliminating unnecessary assertions
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
removed the ` projectGenerated ` field and its getter / setter from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator ` to
updated conditional check from ` contains ` to ` containsKey ` in ` DriverUtils . java ` to improve code readability and maintainability
added a new ` Contact ` route to the ` ApplicationController ` route and refactored ` Contact ` to use a new ` Contact ` class
guacamole - 260 : use objectpermissionset instead of permission
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
fix typo in traitfactory . setmode ( )
updated SQL queries to use ` findWhereNameOrAliasLikeAndActive ` instead of ` findWhereNameLikeAndActive ` to improve clarity and
replaced manual resource closing with IOUtils . closeSafely for perDocConsumers to ensure proper resource management and prevent potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflowButton in ExpansionViewHelper to enhance user experience by providing a click listener for the overflow button
updated error messages in ` failWithoutSubject ` and ` failWithoutSubject ` to use " is a non - null " instead of " is not
update help button panel height when heuristic be enable .
move protobufferutilitiestest from network to core . util
fix a bug in the jabref frame that cause a race condition in the jabref frame .
do n ' t create aux entry if there be no crossreference entry
use metadatamap instead of map to avoid typecastexception
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and consistency in variable naming
add ` ` metacontact avatar update ' ' event listener to contact list
updated import statements from ` org . apache . sshd . server . Command ` to ` org . apache . sshd . server . command `
added unit tests for cleaning up audit log table post parameters to ensure proper cleanup of audit log tables by position
added @ SuppressWarnings ( " unchecked " ) annotation to the inject method in ComponentContext . java to improve type safety and suppress unchecked warnings
added regex pattern matching for ` endLine ` and ` endLineComment ` in ` ACLFileParser . java ` to ensure proper handling of comment
added DrillTable as a parameter to the isReadable method in MapRDBFormatMatcher and MapRDBSubScan classes to enhance functionality by
added a new HashMap and updated ancestorDimensionValues handling in StarTreeNodeImpl . java and TestStarTreeNodeImpl . java to improve the handling of dimension
added user unlock check before closing open views in TouchInteractionService and updated closeOpenViews method calls in BaseQuickstepLauncher to ensure proper resource management
updated condition from ' widthStr ' to ' positionStr ' in Photo . java to ensure correct handling of position strings
refactor conditional checks in PKIXValidator . java for consistency to improve code readability and maintainability
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to ` org . apache . shenyu
cloudstack - 10224 : remove unnecessary skipprojectnetworks call in networkserviceimpl . getdomainid ( )
fix runtimetypeadapterfactoryfunctionaltest to use get ( shape ) instead of remove
added a boolean variable ` storeUndoInfoForProperties ` and its getter / setter methods in ` App . java ` to track undo info for properties
replaced direct property retrieval with a privileged action for accessing the gradProp variable to enhance security by preventing unauthorized access to the gradProp variable
updated StreamCloseTest to use awaitility for stream stream closing to improve test reliability by allowing more time for stream closure
removed the ` doAfterFlush ( ) ` method from multiple classes and added null checks in ` TermVectorsConsumer ` to streamline the code
added support for non - deprecated configuration properties in ConfigurationMetadataGenerator and AbstractJpaProperties to ensure proper handling of non - deprecated configurations in the
refactor BiInt2ObjectMap and Int2ObjectHashMap to use final fields for capacity and mask to improve code readability and maintainability by
updated thread count from 25 to 15 in HiveConf and modified file path initialization in Hive . java to improve thread management and ensure consistency in file resolution
[ java ] add trace log to parallelniosender . send ( )
added a null check for the context in SchemeAndroidIDE . java to prevent potential NullPointerExceptions when the context is null
refactor nativeimageclassloader to use thread . currentcontextclassloader ( ) instead of nativeimageclassloadersupport
changed the return type of modifyGrantedAuthorities from void to List in SwitchUserProcessingFilter and updated authorities handling in SwitchUserProcessingFilter to improve code
refactor JaxrsIntegrationTest and JaxrsSpringIntegrationTest classes to extend JaxrsIntegrationTestBase and add new test classes for Spring Boot integration
[ is _ jdbc41compliant ] do n ' t set querytimeout in hikaripool . setquerytimeout
added DataProvider annotations for GeneralTestsData and SupplementaryCharactersTestData in XslSubstringTest . java to enhance testing capabilities for XML
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and `
added support for MariaDB sequences in MariaDBDatabase to ensure compatibility with MariaDB database versions
corrected the spelling of " is not divisible by " to " is not divisible by " in multiple files to improve code readability and maintain
replaced ` BrokerResponse ` with ` TableDataManagerProvider ` in multiple test files to utilize ` MetricsRegistry ` instead of ` Broker
added support for " jsse . enableMFLNExtension " in SSLExtension . java to ensure compatibility with additional jsse configurations
changed the type of ` iterator ` from ` T < T > ` to ` ObjectHashSetIterator ` and updated related constructors to improve type safety
updated charRemaining and charRemaining count calculations in multiple classes to ensure accurate counting of characters for shortened URLs
added a new constant ` DATAPOINT _ TTL ` and updated related methods in ` CassandraDatastore . java ` and ` WriteBuffer . java `
modified the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and modified conditional checks in ` ProjectCommand `
added a method ` getTerrainAtCell ` to retrieve terrains at a specified cell coordinates to enable retrieval of terrains at a specified coordinate
added null check and printExpr method in Pretty . java and created a new file T6665791 . java with a test class for Java compiler
added error handling for FileNotFoundException in ResourceLoader . java to improve robustness by logging a warning when quest keys cannot be found
added a condition to check if the HTTP transport is not push before proceeding to ensure proper handling of push requests based on the presence of a push
refactor PointValue class implementation to improve code readability and maintainability
updated the sign method in BlockUtil . java to use a private key instead of a hex string to improve code readability and maintainability by reducing
updated the way getRoots ( ) returns the root array and added security checks in multiple classes to improve robustness by preventing null pointer exceptions and ensure
updated row height retrieval and modified related methods in ` PdfPRow ` , ` PdfPRow ` , and ` PdfPRow ` classes to
replaced ` undoTrash ` and ` undoNotesList ` with ` undoNotesList ` and added ` undoNotesList ` to improve
added logic to persist feedback question and comment in uploadbackupdata .
added null check for data in bug8024061 . java to ensure proper handling of non - null data data
( chore ) camel - ebean : remove unused pstmtdelegate interface
replaced ` Padding ` class with ` Rect ` for retrieving widget padding in ` AppWidgetResizeFrame ` and ` Launcher ` to improve widget
replaced instances of ` MethodHandles . lookup ( ) ` with ` consStringFilter ` in ` NashornBeansLinker . java ` to
refactor ClassGraph , ScanResult , and ScanResult classes to improve code organization and maintainability
rename ` latch ` to ` goAwayLatch ` for clarity to improve code readability and maintainability by using a more descriptive variable
replace ` getMessage ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest . java ` to improve clarity
replaced ThreadLocal with a direct assignment of the currentBook variable to simplify code and improve readability by eliminating unnecessary calls to currentBook
add support method to contactsecurityvoter . vote ( )
removed unused imports from DataLoader . java to clean up the code and improve maintainability
added a ` rowsAffected ` parameter to ` postUpdateLog ` methods in ` AbstractUpdateCommandStep ` and ` UpdateCountCommandStep ` to
ggb - 260 fix margin to be consistent with other app .
updated foregroundFPS and backgroundFPS from 60 to 60 in JglfwApplicationConfiguration . java to ensure proper initialization of foregroundFPS and
added ObjectReleaseTracker assertions to HdfsTransactionLog , TransactionLog , and ObjectReleaseTracker classes to ensure that the ObjectReleaseTracker is properly
replaced DefaultWebSocketFrame with ChannelFutureListener in DefaultHttpServer . java to ensure proper handling of WebSocket frames during flushing
updated StateMachineErrorTests and DocsConfigurationSampleTests to use TestApplicationEventListener1 and TestApplicationEventListener2 instead of TestEventListener to improve event
refactor SettingsActivity to use a dedicated method for setting the list background to improve code readability and maintainability by encapsulating background setting
updated import statements in RMEThingHandler . java and added null check for the line to ensure proper handling of null values and avoid potential NullPointerException
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count based on a given string to
updated the closing brace in Put . java and ReplicationSink . java to improve code readability and maintainability
replaced ` Set ` with ` Map ` and updated ` VALID _ CACHE _ SET ` to use ` REGEXP _ CACHE ` to
added a static method ` reset ( ) ` to the ` GameThread ` class to ensure proper initialization of the ` gameThread ` instance
added a new method ` login ` in ` DigestAuthenticator ` to handle user identity login to ensure proper handling of username and passwords in the authentication
refactor parameter handling in SavedRequestAwareWrapper to use an iterator for merging parameters to improve code readability and maintainability by reducing duplication
updated InfoStatus messages to use ` lc ` instead of ` hiddenSingleton ` in ` BasicConfigurator ` , ` LoggerContext ` , and ` Logger
replaced ` hasNotified ` with ` this . wakeup ( ) ` in ` CommitLog . java ` and ` HAService . java
added a check for Android O in the image view condition in PhotoViewerActivity and implemented a utility method for FollowersDataSource to ensure compatibility with
updated schema info level from minimum ( ) to basic ( ) in SchemaCrawlerTest . java to ensure consistency in schema info level configuration
replaced ` zipOut ` with ` bufferedOutputStream ` in ` SaveTask . java ` to ensure proper resource management and prevent potential memory leaks
replaced direct calls to ` bytesToString ` with a new ` getBytes ` method in ` TestPayloads . java ` to improve code readability and
fix mc - 103516 : fix MC - 103516 . fix MC - 103516 . fix MC - 103516 .
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " to the list to
add a test case for multi accumulate in MarshallerTest . java and update ProtobufInputMarshaller . java to improve test coverage and ensure correct behavior of
refactor case statements in NowSearchTerm and SearchTermBuilder classes to improve readability and maintainability of the code
pdfbox - 4071 : remove public access modifier from class
updated RemoteEndpointServiceAccessStrategy and WSFederationRelyingPartyAttributeWriter to use SpringExpressionLanguageValueResolver for HTTP method and headers to
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to improve code readability and maintainability by encapsulating
added notification for the command start event in AsyncBackgroundTaskManagerTest . java to ensure the command starts correctly during the test execution
refactor the recomputePreviewDrawingParams method in FolderIcon and PreviewItemManager to improve code readability and maintainability by encaps
refactor LukeRequestHandler to utilize CharFilterFactory instead of TokenFilterFactory to improve code readability and maintainability by reducing duplication
replaced instances of ` plot ` and ` hotspot ` with ` ParamChecks . nullNotPermitted ` in ` AbstractCategoryItemRenderer . java `
added verbosity handling to the ` createSubContext ` method in ` JavacStep ` and ` ExecutionContext ` classes to enhance user experience by allowing
added a null check for the schema in DbSqlSession . java to ensure the correct schema is used for Oracle database operations
update contextDesc to use LogManager . getContext ( false ) . getClass ( ) . getSimpleName ( ) instead of LogManager . getContext ( false ) . getClass
added a new file TestShrinkToOneRegion . java that tests System . gc ( ) method to ensure proper resource management and cleanup of system resources
replaced ` String . split ` with ` Splitter . on ( ' , ' ) . split ( customPackages ) ` in ` SandboxTestRunner
replaced ` utf8ToString ( ) ` with ` asSet ( ) ` in ` AnalyzingInfixSuggester ` and added a test
updated the handling of local attachments in PushsaferMessageBuilder to use a variable for better clarity to improve readability and maintainability of the code
updated the displayLabelStats method in ModelExplorer , SequenceModelExplorer , and StripProvenance classes to use JSONResult instead of provenanceHash
pdfbox - 4071 : remove null check for characterlistmapping before call clear ( )
removed the ` final static ` modifier from the ` FORMATTER ` function in multiple test files to improve code readability and maintainability by eliminating unnecessary
updated the ` evaluate ` method to accept a ` Double ` parameter and modified the ` evaluate ` method to return the number of decimal values to improve
[ jsscript ] use configparser . valueasorelse for injectionenabled and useincludedlibrary
changed class visibility from package - private to public in Test1 . java and Test2 . java to allow external access to the Test1 and Test
replaced ` permission . no _ permission _ event ` with ` plot . no _ enter ` in ` PlayerEventListener . java ` to improve clarity and
modified the ` getAdditional ` method to accept a ` Session ` parameter and updated its usage in ` ConditionAndOr ` and ` ConditionInConstant
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsDocValues ` in ` BaseNormsFormat
updated Box2DCharacterControllerTest to correctly reset the gravity of the contact list and reset the friction of the contact list to improve test accuracy and
added tests for thread buffer size limits in TestBadOptionValues . java and modified memory size configuration in TestMemoryOptions . java to ensure correct memory
removed unnecessary assertions in ObjectAlignment and Options classes to streamline code by eliminating unnecessary checks for power of 2
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` , ` AndroidInstrumentationTestJVMArgs ` , and
refactor DocHelper class to improve code organization to enhance maintainability and readability of the code
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of a single list to improve performance by avoiding unnecessary array creation
replaced instances of ` invokeExact ` with ` invokeExact ` for multiple instances of ` mh1 . invokeExact ` and ` invokeExact `
[ java ] avoid starving when a lot of fetcher thread be use .
refactor Inflection class implementation to improve code readability and maintainability
added methods to retrieve and set the locale in EvaluationContext to enable customization of locale settings in the evaluation context
removed the import of ` Plugin ` from ` SummaryPrinter . java ` to streamline the code by eliminating unnecessary dependencies
added a break statement to the break statement in DrawerActivity . java to improve code readability and maintainability
updated import statements in MongoQueryCreator . java to use wildcard imports and simplified query object creation to improve code readability and maintainability by using
add system property ` ` userloggerfactory ' ' to ` ` xwork . loggerfactory ' '
updated method names from ` adminAddPeerFailsWhenP2PDisabled ` to ` adminAddPeerFailsWhenP2PDisabledOn
updated the conditional bean name from " livenessStateHealthIndicator " to " readinessStateHealthIndicator " in multiple auto - configuration classes to improve clarity
added concurrent map creation for NoWriteLocalPStore in LocalPStoreProvider . java to improve performance by avoiding concurrent modifications during write operations
refactor the deleteFiles method to be a private method for better encapsulation to enhance encapsulation and maintainability of the code
replaced instances of ` Provider < T > ` with ` ServiceProvider < T > ` in ` ServiceLoaderSpliterator ` and ` TypeUtil ` classes to
remove javainteropreflect . findfield ( ) and javaobjectmessageresolution . setfield ( ) from javainteropreflect
added checks for toolchain creation in AbstractCell and implemented isToolchainCreated method in DefaultToolchainProvider to ensure proper handling of toolchain creation
fix race condition in polyglotengineimpl . removecontext ( )
updated condition checks from ` indexOf ` to ` contains ` in ` AbstractCheckDescriptor . java ` to improve code readability and maintainability by using
updated linker flags from ` ImmutableList . of ( ) ` to ` CxxFlags . getExportedLinkerFlags ( ) ` across multiple
replaced the ` onConfigurationChangedInternal ` method with ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` RecentsView `
updated listener type checks from ` ItemReadListener ` and ` ItemProcessListener ` to ` ItemReadListener ` and ` ItemProcessListener ` to
updated the method to retrieve the hash string from the newBlock object to ensure the correct hash is used for the new block
change defaultmessagestore to use getstorepathcommitlog ( ) instead of getstorepathcommitlog ( )
removed the try - with - resources statement from the MicrometerMetricManager class to simplify the code and improve readability
added logic to handle message transfer and total miss messages in CompactionLog . java to ensure accurate logging of compaction statistics based on message status
added @ Deprecated annotations to multiple classes to indicate that these classes should no longer be used in future development
added a method to check if the system UI is a system UI object and executed a shell command for keyguard status view to enhance functionality by allowing
changed the visibility of the logger variable from static to final in SessionRegistryImpl . java to ensure immutability and prevent potential memory leaks
added a check to return false if the cookie jar is empty in InMemoryCookieStore and NullUriCookieTest to ensure that the method correctly handles empty
add a tostring ( ) method to the BonsaiValue class and improve logging in BonsaiWorldStateArchive to enhance debugging capabilities and
changed the return type of the ` getText ` method from ` String ` to ` CharSequence ` in multiple repository classes to allow for more flexible text processing
added @ NotYetImplemented annotation to AlertsTest . java to indicate that the test is not yet implemented
added a try - finally block to handle IOException in SocketConnector . java to ensure proper resource management and prevent potential memory leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ ESCAPER ` across multiple files to improve clarity and consistency in handling Windows environment
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing the heartbeatExecutorService
refactor transformBuildResultIfNotPresent and wrapWithTracingAndCancellation methods in CachingBuildEngine . java to improve code readability and maintainability
added a method ` updateFirstLineShowing ( ) ` to ` TextArea . java ` to handle drag - selecting text out of the TextArea
added temporary and mapred directories for TestInformationSchemaWithPrivilege in TestInformationSchemaWithPrivilege . java to ensure compatibility with different operating systems and improve
refactor graphics configuration retrieval logic in Component . java to improve code readability and maintainability by reducing duplication
tika - 586 : fix tika - test / cxf / tika / tika / cxftestbase . java
refactor pipeline processing logic to use a dedicated method for better readability to improve code maintainability and reduce duplication
updated argument handling and logging in PrintTagList . java to improve argument handling and provide clearer error messages for missing model files
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test for SQL
[ hotfix ] [ test ] do n ' t drain queue if there be an error
[ java ] fix test failure in startfromtruncatedrecordinglogtest
updated the calculation of ` arc ` in ` LineBorder . java ` to use ` . 2f ` instead of ` . 2f ` to
added null and empty checks for galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure proper handling of empty gallery images
removed unnecessary generateDeploymentId ( ) and resetDeploymentId ( ) calls in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to simplify
pdfbox - 2852 : use interactive form instead of fdf
removed the ` moreColumnOk ` parameter from the ` canUseIndex ` method and related calls in ` AlterTableAddConstraint . java ` to
added functionality to manage provisional engines in QuickfixjComponent to improve engine management and ensure proper handling of provisioned engines
added ` mixedContentMode ` and ` displayZoomControls ` fields to ` RoboWebSettings ` and updated related methods to include it to enable
add corporea and corporea corporea corporea corporea corporea corpore
refactor ConnectionFactory to improve code organization to enhance maintainability and readability of the code
added a new method ` EnableDisableMenuItems ( ) ` to the ` GpsMainActivity ` class to manage menu items based on user settings
updated the message for empty favorites in ExtendedListFragment to include a filter list icon to enhance user experience by providing clearer feedback on favorites
hhh - 16464 - fix test failure on window
added auto - resize mode and auto - create columns from the model in MotorMountConfigurationPanel to ensure proper handling of auto - resize behavior in the
updated LINE _ SEPARATOR from System . lineSeparator ( ) to System . getProperty ( " line . separator " ) to ensure consistent line separator
added getter and setter methods for creator , getSubject , and subject properties in POIXMLProperties . java and corresponding test cases in TestPOIXML
removed redundant call to super . doStop ( ) in HandlerWrapper . java to improve code readability and maintainability
[ java ] do n ' t fail if cnc file do n ' t exist
replaced instances of ` NonMarkedFoo ` with ` FooCommand ` in ` UnsatisfiedTypeBounds . java ` to improve clarity and consistency in
added jmod class path handling in ClassFileSourceImpl . java to ensure compatibility with JMod files in the Java home directory
updated ` TreeBackedElement ` and ` TreeBackedPackageElement ` to use ` Preconditions ` instead of ` PostEnterCanonicalizer ` to
refactor token request initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest instead of Saml2
updated the method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure the correct
added synchronization functionality in ZKAssign and ZooKeeperWatcher classes to ensure proper synchronization of nodes in the ZooKeeper
added checks for EGL14 . eglGetCurrentContext ( ) and EGL14 . eglGetCurrentContext ( ) in GlUtil
do n ' t try to activate rule flow group if it ' s active
added a return statement in HystrixDashboardConfiguration . java to ensure that the method returns immediately after execution
replaced ` PipeNotExistException ` with ` PipeNotExistException ` in ` DropPipeProcedure . java ` and added exception handling in ` IoTDB
update clientqueuedisruptiontest to use @ after instead of junit . framework
replace signatureprinter with defaultprettyprinter in ctreferenceimpl . tostring ( )
changed the access modifier of the validateInstance method from public to protected to allow subclasses to access the validateInstance method from other classes
removed unused imports from GeoPointField , GeoPointNumericTermsQuery , and GeoPointPrefixTermsQuery classes to streamline code and improve maintain
added a new ` FakeBuildable ` class and modified ` OnDiskBuildInfoTest ` to use it to facilitate testing of buildables with
fix npe in ingameforge if itemstack . isempty ( ) return null
corrected the spelling of " timeseries " to " timeseries " in TSParser . java and SQLParserTest . java to ensure
added a check to return 0 if the velocity is less than EPSILON to prevent potential errors when accessing the velocity
updated method calls to use ` _ storage . create ( BlobId , BlobInfo . newBuilder ( ) ) ` instead of ` getBucket ( )
replaced ` VertxUtils . blockCloseVertxByName ` with ` VertxUtils . blockCloseVertxByName ` in ` TestHighway
added methods to create and recreate history views in DbTriggerBasedHistoryDdl and PostgresHistoryDdl to enhance history view creation functionality for better
updated the clustering engine test from 2 to 3 in CarrotClusteringEngineTest . java to improve the accuracy of clustering engine validation
added @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand ` and added a new ` ParserStateObjectInputStream ` class
added null checks for ` changeLog ` and ` objectQuotingStrategy ` in ` ChangeSet . java ` and updated ` DatabaseChangeLog
replace parse method with fromXmlStream method in SliderAppsViewControllerImpl . java to improve readability and maintainability of the code
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the codebase
refactor path handling in AntCompiler to use a dedicated method for better readability to improve code readability and maintainability by centralizing path
added ObjectAnimator for scrim animations in Launcher , LauncherAnimUtils , and AllAppsBackgroundDrawable classes to improve animation responsiveness
updated the condition in TypeInferenceUtils and added new test cases in TypeInferenceUtilsTest to ensure accurate parsing of integer values and improve test coverage for
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 ( # 118 )
added checks for path prefix handling in WindowsPathParser and PathOps classes to ensure correct path types are used for absolute and relative paths
removed the InetSocketAddress parameter from MulticastSocket initialization to simplify the code and improve readability
replaced writer . close ( ) with writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
modified the return statement in IndexColorModel . java to clone the nBits array to ensure proper cloning of the nBits object
changed the access modifier of the deriveCollectorName method from private to protected in ProfilerCollector and added a test for custom collector names in TestProfiler
refactor type hint handling in MappingMongoConverter to use a dedicated method to improve code readability and maintainability by encapsulating type hint
added PerfStatsCollector to create a proxy factory using PerfStatsCollector to improve performance tracking for proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings in the code
added an exception parameter to the ConnectionException message in TCPConnection . java to improve error handling by providing more context for connection exceptions
refactor reinflateWidgetsIfNecessary method to use a dedicated method to improve code readability and maintainability by encapsulating widget rein
added a new file DeleteInsideFileDialogTest . java to test file deletion functionality to ensure proper functionality of file dialog functionality in the application
[ jme3 ] do n ' t call setcursorvisible ( false ) if renderable be disable .
update instructorstudentlistpageuitest . testshowphoto ( ) to work with the student ' s picture
added methods and methods to manage environment variables in TestIgnorance . java to enhance testing capabilities by allowing the use of environment variables based on
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature and improve code readability
added null check for pageable in QueryDslJpaRepository to ensure robustness by preventing potential NullPointerExceptions
added a method ` computeMemorySize ` to the ` MemoryManager ` class and corresponding tests in ` MemoryManagerTest ` to ensure memory size computation
updated the test timeout value from 2000000 to 20000 in JMSPublisherConsumerTest . java and PublishJMSTest . java to allow for
refactor SnowballAnalyzer class to improve code organization to enhance maintainability and readability of the code
refactor index handling in StreamingAggTemplate . java to improve code readability and maintainability by reducing duplication
added a static method ` pluginErrorMessage ` to ` BytecodeParser ` and modified the assertion logic in ` BytecodeParser ` to improve error handling
added a new method ` stream ( TableIdentifier < ENTITY > ) ` to the ` StreamSupplierComponent ` class to provide a way to compute
updated debug logging statements and added a sleep mechanism in MediaMonitor . java to improve logging clarity and maintainability of log messages
added ` newInstance ` method to ` InjectorProxy ` , ` StandardInjectorProxy ` , and ` InjectorTest ` classes to enhance error handling
removed the call to out . close ( ) in FlinkStreamingCreateFunction . java to ensure proper resource management during streaming operations
added unit tests for showing and deparsing SQL statements in ShowStatementTest and UnsupportedStatementTest classes to ensure proper handling of unsupported SQL statements for
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns a non - null list instead of
updated test cases in NamedSetTest . java to include Quality Distribution , Inc , and Inc . to ensure accurate testing of quality distributions in the
added connection state checks and improved logging in ` DeconzBridgeHandler ` , ` DeconzBridgeHandler ` , and ` WebSocketConnection ` classes to
replaced null attributes with removeAttribute for session attributes in AbstractProcessingFilter . java to simplify the code and improve readability by eliminating unnecessary null checks
hbase - 11824 testregionreplicareplicationendpoint : use retry method instead of createtable ( )
added PMS configuration configuration to FormatRecognitionTest . java to ensure PMS configuration is set for improved performance
cloudstack - 1164 : add an event to create ova data disk template if it ' s not available .
replaced CasCoreServicesConfiguration with JUnit4 in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to streamline test setup by using JUnit
added multiple @ Override annotations to various authentication service implementations to ensure proper method overriding and improve code clarity
updated SQL statements in AppendOnlySchemaIT . java for consistency to improve code readability and maintainability
added a mismatch check for deleted documents in SegmentReader . java to ensure that the document count is valid before proceeding
add logtrace ( ) method to siplogger . logexception ( )
added a comment to indicate that shorter lengths are needed for staves w / no starting barline
changed the default value of handleFileUploads from true to false in VertxPlatformHttpServerConfiguration . java and added bodyHandler . setHandle
added a test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to ensure
removed static final fields from HotSpotObjectConstantImpl . java to simplify field assignment and improve code readability
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in method naming
updated the way the Instant is matched in FileIO . java to use a variable for better readability to improve code readability and maintainability by
[ hotfix ] [ table - planner - jbang ] fix npe in sqmctestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for better metadata handling
updated the library path format in JsLibrary . java to include the project ' s root path to ensure accurate representation of the project ' s root
updated slider size from 180 to Math . PI in RailButtonConfig . java to improve slider functionality for better visual consistency
updated drawEncloser ( x , y , y8f , 2f , 2f , 2f , 2f , 2f ,
added expressionsLanguageSupported ( true ) to KerberosProperties . java to enable expression language support for Kerberos properties
removed unnecessary null checks and refactored the setRemoteHeldItemMountPointScale method in ThirdPersonRemoteClientSystem . java to streamline the
updated the ` setupViews ` method to accept a ` ScrimView ` parameter and modified the ` mLauncher ` and ` mScrimView
[ hotfix ] [ state ] add periodic materialization option to changelog state backend
added a private String field ` value ` and its getter / setter methods in ` ProtocolParameter ` , and updated XML attributes in ` List ` ,
added a new test method ` testChunkingWithHead ` to ` ChunkingServlet ` to verify chunking behavior with a head to ensure that
added a boolean flag ` isBumped ` to the ` parseDetails ` method and modified the ` parseDetails ` method to return a boolean to
added content - type header for application / x - www - form - urlencoded in SwitchToPostInterceptor . java and SearchRequestUnitTest . java
refactor EmbeddedClientConnector to improve code organization to enhance maintainability and readability of the code
replaced SQLFeatureNotSupportedException with logging for setting fetch size in PhoenixResultSet . java to improve error handling and provide clearer logging during query execution
added initialization of AndroidNet in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
[ hotfix ] [ runtime ] fix typo in llrealtimesegmentdatamanager
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify the code and
removed the import statement for PrefixTreeCodec in TableMapReduceUtil . java to streamline the code by eliminating unnecessary dependencies
added a boolean flag ` inflationFailed ` to ` DesignerActivity ` and modified the root variable to be final in ` XMLLayoutInflater ` to
refactor PushbackInputStream class implementation to improve code readability and maintainability
refactor loweringphase to use schedulephase . containslowerable ( ) .
updated the message format from download _ folder _ failed _ content to sync _ folder _ failed _ content to improve clarity by using a more descript
updated Makefiles . java and MakefilesTest . java to use string literals instead of string literals to improve code readability and maintainability
replaced ` reader . getDeletedDocs ( reader ) ` with ` MultiFields . getDeletedDocs ( reader ) ` in ` ReadTask . java
updated refreshFlags handling in SimpleBatchNode . java to ensure correct refresh behavior for batch nodes
use isuninterruptible ( ) method instead of isuninterruptible ( )
added framebuffer size callback to LwjglWindow . java to ensure proper resource management and prevent memory leaks
updated the calculation of ` centerTaskParallaxToRight ` and ` otherAdjacentTaskParallaxOffscreen ` in ` 
replaced instances of ` NodeLiteralNode ` with ` NullLiteralNode < Object > ` in the ` LiteralNode ` class to improve type safety and
added setLength method to CompoundFileWriter and implemented setLength methods in FSDirectory , IndexOutput , and IndexOutput classes to improve file length handling and ensure proper
updated manifest handling in AndroidNdkScriptGenerator , AntScriptGenerator , and LwjglDebugStarter to include memcpy
camel - aws2 - s3 : replace copysource with sourcebucket in camel - aws2 - s3
added permission check for " * " in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to ensure proper handling of permission - based
refactor ZookeeperClientServerRegisterRepository to use enums for data handling and improve code clarity to enhance code readability and maintainability by reducing
refactor ` deepStubMock ` methods to use ` deepStub ` instead of ` createNewDeepStubMock ` to improve code readability and maintain
updated call value retrieval logic in Runtime . java to handle cases where there are no calls to avoid potential NullPointerExceptions
updated debug log message format in BibEntry . java to include additional context to improve debugging by providing more context about date parsing failure
updated the ` mapPBEAlgorithmToOID ` method to throw an ` NoSuchAlgorithmException ` and modified the return type of ` mapPBE
tiff : do n ' t throw eofexception if the offset be too large .
added validation for job parameters in CommandLineJobRunner to ensure that job parameters are valid and provide clearer error messages for invalid job parameters
updated string comparison from ` \ r \ n ` to ` foo ` in ` SmtpTests ` and ` MailTests ` to ensure consistency in
updated case statements in ExtendedConnectionDataSourceProxy . java to use lambda expressions to improve readability and maintainability of the code
replaced synchronized variable ` lastSequenceId ` with ` SEQUENCE _ UPDATER ` and introduced ` SEQUENCE _ UPDATER ` to improve thread safety
added a new file ` Test . java ` containing a class ` Test ` with a static method ` sum ( ) ` to verify the behavior of
updated minSdk and maxSdk configurations in ShadowWifiManagerTest and WifiUsabilityStatsEntryBuilder to include maxSdk parameter to enhance
added a new Java file ` Solution . java ` that implements a solution that checks the ordering of queries based on a specified number of queries to facilitate
replace Map with ConcurrentMap for columnFamilyStores in Table . java and Gossiper . java and Gossiper . java to improve concurrency handling
refactor taskbar handling logic in TaskbarManager . java to improve code readability and maintainability by reducing duplication
refactor SyncFutureCache class implementation to improve code readability and maintainability
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and updated the LOWEST _ VERSION _
[ java ] uselessstringvalueof : handle string literal in uselessstringvalueof
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the behavior of the
[ java ] add targetmaxtypeshardsize parameter to the producer constructor .
added new versions " 5.0 . 2 - cfs " and " 5.0 . 2 - nocfs " to TestBackwardsCompatibility .
refactor CompilationTask class to improve code organization to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis and modified database location handling in DDLTask to improve clarity and maintainability of database location handling in test mode
added a call to ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase . java to ensure that the ClearDatabaseChangeLogTableStatement uses the correct
refactor version handling in RestClient and CallPath classes to improve clarity and functionality to enhance code readability and maintainability by encapsulating
refactor exception handling in PhoenixDriver to use a synchronized close method to improve code readability and maintainability while ensuring proper resource management
[ java ] throw unsupportedoperationexception instead of throw an unsupportedoperationexception .
added a ` @ After ` annotation to ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT
do n ' t remove fix read phase if devmode be set to false .
added a check to return a string if the copy length is less than 2 and implemented a test for removal of leading and ending quotes to ensure that
updated JpaQueryCreator to handle NOT _ CONTAINING and NOT _ CONTAINING types to ensure correct handling of NOT _ CON
added authentication duration checks and modified push branch ID push logic in SipSecurityManager . java to improve security by ensuring the push branch ID is only processed when
added a call to dispatch a new P25Message with the correct duid and aliasList to ensure that the message reflects the correct duid and
added null checks for the handler before calling checkClosed ( ) in WebSocketImpl . java and created a test in WebsocketTest . java to ensure proper
update discoveryit to use indexablepooltask instead of pooltask
updated padding calculations in AppWidgetResizeFrame and Launcher classes to use internal padding instead of app _ widget _ padding _ left to ensure consistent padding
added hideAllApps ( ) method to TaskbarUIController and implemented closeOverlay ( ) method in BaseActivityInterface to improve resource management and
removed the ` synchronized ` modifier from the ` launch ` method in ` CrawlJob . java ` to simplify the code by eliminating unnecessary synchronization
updated the calculation of ` Point ` in ` JavaSEPort . java ` to use ` canvas . x ` instead of ` e . getY (
refactor notification handling in UploadService to use startForeground instead of notify to improve code readability and maintainability by using a more descriptive
added a new test method ` testStaticFinal ` in ` ExcessivePublicCountTest . java ` to validate the behavior of static final rule
hbase - 16446 set hbase . client . retries . number to 3 for hbase . client . retries . number
changed log level from info to debug in TransactionalMessageServiceImpl . java to improve log clarity by using a more descriptive variable name
added error handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve robustness
added a new method ` getmarketsummaries ` to the ` Bittrex ` and ` BittrexMarketDataServiceRaw ` classes to
update entityentry to use state . getenumconstants instead of type . getenumconstants ( )
updated session registration methods to use ` Object ` instead of ` Class < ? > ` to improve type safety and clarity in session management
updated character arrays from ' % ' to ' \ u0001 ' , ' \ u0002 ' , ' \ u0001 ' ,
added stylesheet management functionality to ResourceService and updated related methods in ResourceHandler and ResourceHandler to enhance resource management and ensure proper handling of CSS resources in
added a call to clearIndex ( ) in TestFiltering . java to ensure that the index is cleared before proceeding
replaced ` ObjectParameterStrategy . class ` with ` PointerParameterStrategy . class ` in the invokevirtual method call to ensure the correct parameter type is
updated database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with CockroachDatabase
removed the check for " isEnum " in the name comparison to simplify the logic for better readability and maintainability
renamed ` UnsatisfiedLinkError ` to ` SymbolNotFoundError ` in ` Library . java ` and created a new ` SymbolNotFoundError ` class to improve
updated BinaryResponseWriter to conditionally create a SolrDocument based on only pseudo - fields to improve performance by avoiding unnecessary document creation when only pseudo -
added handling for PING and PONG cases in WebSocketImplBase and implemented a test for WebSocket pause in WebSocketTest to ensure proper handling of WebSocket
updated NON _ IDENT _ ESCAPES string format from " $ ^ * + " to " $ ^ + + " to ensure consistent
use authoritative dns cache instead of dnsaddressresolvergroup and dnsnameresolverbuilder in dnsresolverprovider
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to enable testing of MessagingTracing in the application
updated SQL dialect handling in SqlQuery and related test classes to use ` ` customer ` instead of ` ' ' for better clarity to improve code read
updated import statements and added new imports in multiple Java files to improve code clarity and maintainability by standardizing import statements
added a conditional check for the closing tag in XMLLightweightParser to ensure proper handling of special characters in XML parsing
removed the setVisibility ( GONE ) method from TouchCharInput . java to clean up the code and improve readability
added a null check for the current user before comparing its ID to avoid potential NullPointerExceptions when the current user is null
added a conditional check for the index before setting the slot and member in JSObjectLinker . java to ensure that the slot and member are set
refactor ` DefaultUniqueTicketIdGenerator ` to initialize ` randomStringGenerator ` and ` suffix ` with default values to improve encapsulation
added a @ Deprecated annotation to SecurityConfig . java to indicate that the SecurityConfig class is outdated and should no longer be used
added @ Deprecated annotations to multiple Java files to indicate that these methods should no longer be used in future development
deleted JoglDebugAdaptor . java and removed JoglDebugAdaptor . plumbJoglDebug method from GuiceStartup . java to simplify
added ` toString ` methods to ` ExtraFieldPropagation ` , ` ExtraFieldPropagation ` , and ` TraceContextOrSamplingFlags ` classes , and
added PendingIntent import for PendingIntent in FileDownloader , FileUploader , and FileUploader classes to ensure proper PendingIntent handling for file uploads
refactor nextOrd method to return a boolean indicating success or failure to improve code readability and maintainability by encapsulating the method
refactor DateTimeFormatter class for improved readability to enhance maintainability and readability of the code
removed class loading for the " Shell . shellFolderManager " property in WToolkit . java to simplify the code and improve readability by eliminating unnecessary
added null and empty checks for administrator and keytab credentials in KerberosOperationHandler . java to ensure proper handling of null and empty principal credentials
added a MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and adjusted width calculation in BaseWidgetSheet . java
added call to beginRender ( ) and endRender ( sketchWindowColor ( ) ) in PSurfaceJOGL . java to ensure proper rendering
refactor Hashing class implementation to improve code readability and maintainability
updated the ` accept ` method in ` FileSenderFactory ` to use ` Files . getBaseName ( ) ` instead of ` s ` to
updated the ` addToListIfNeeded ` method to include a ` contentDescriptionInt ` parameter in the ` addToListIfNeeded ` method to enhance user info
added a null check for the newType variable in J . java to prevent potential NullPointerExceptions when type is null
updated ACTIVITY _ START _ DELAY from 500 to 800 in Launcher . java to increase activity start delay for better user experience
added a new constant for the WEBAPP _ HOME in SolrJettyTestBase and updated its usage in JettyWebappTest to
updated the calculation of the diameter and selected motor set in ThrustCurveMotorSelectionPanel . java to ensure that the selected motor set is cleared
added import for BufferUtil and cleared the fill buffer in ByteBufferPool . java to ensure proper resource management and prevent potential memory leaks
fix alarm trigger to work with rest api ( # 233 )
updated authentication key from " authorization . ldap . groupBase " to " authentication . ldap . groupObjectClass " and " groupMembershipAttr " to
added deleteExchange ( " x " ) and queueDelete ( " q " ) in DurableOnTransient . java to ensure proper resource management and
[ hotfix ] [ test ] fix test for bulkslotproviderimpltest . testbulkslotallocatorfulfilledwithnewslots
refactor connection handling in PingService and ServerInfoService to use addListener for better readability to improve code maintainability and ensure proper exception handling
refactor CompositeHandlerAdapter to improve code organization to enhance maintainability and readability of the code
refactor Quartz2Adapter class implementation to improve code readability and maintainability
added a try - catch block around the method call in SulongLibrary . java to handle IllegalStateException to improve robustness by handling potential IllegalStateException
updated Spring Security schema version from 6.6 to 6.6 in multiple files to ensure compatibility with Spring Security 6.0 and above
updated the ` newNameResolver ` method to accept a ` Args ` parameter and modified the ` newNameResolver ` method to use ` AtomicReference `
added a check for non - empty annotations before setting their position in JavacParser . java and created a new test class TestAnnotatedAnonClass
added " com . sun . naming . internal . " to CheckPackageAccess . java to enable the use of the internal naming package in the package
changed the ` strict ` variable from false to true in ` StaxEventItemReader . java ` to enable the strict state of the variable
added an ` isExhausted ` parameter to the ` OfflineSorter ` class and modified the ` isExhausted ` method to handle
refactor ActionResetingPool class for improved performance to enhance performance and maintainability of the code
added a boolean variable ` isInXYMode ` to check if the XY mode is not null before returning it to avoid potential NullPointerExceptions when
refactored the ` CellLayout ` class to utilize a new ` targetCell ` array for better clarity to improve code readability and maintain
added import for FileDisplayActivity and removed the call to showLoadingDialog ( ) in FileOperationsHelper and OCFileListFragment to streamline
added a null check for uigestureFile before initializing recordsMap and messagesMap to avoid potential NullPointerExceptions when uigestureFile
updated ` doesNotMatch ` method calls to use ` Locale . getDefault ( ) ` instead of ` toUpperCase ( ) ` to ensure consistent locale handling
added listener setting to the result in XmlSuite . java to ensure that listeners are correctly set during execution
added a new property ` loadWithNewGlobal ` to the ` Global ` class and modified the ` loadWithNewGlobal ` method to utilize
added a new method ` fromJsonString ` to ` StarTreeIndexSpec ` and implemented a ` toJsonString ` method in ` TableConfigTest
added import statement for ObjectPostProcessorConfiguration in HttpSecurity , OAuth2LoginConfigurer , OAuth2LogoutConfigurer , and ServerHttpSecurity classes to improve
updated string replacement logic in AndroidFileHandle and GwtFileHandle classes to use single quotes instead of single quotes to ensure consistent handling of special characters in
( chore ) camel - kie - model - compiler : fix npe in modelcompiler
added import for FieldCache and purgeFieldCache in TestDistributedSearch . java to ensure that the field cache is cleared before proceeding
add test case for boundary message boundary event on sub - instance sub - instance
[ hotfix ] [ runtime ] add support for static method .
[ java ] add messagegrouphashbucketcount to queue and policyentry
added slot ID constants for NETSCAPE _ SLOT _ ID and PRIVATE _ KEY _ SLOT _ ID in Sec
added a new method ` add ` in ` Layout . java ` and modified the ` startRenderering ` method in ` GdxRenderer . java
added JUnit @ Ignore annotation to UnalignedCheckpointITCase . java to temporarily disable tests related to checkpointing
added imports for Receiver , Midi , Transmitter , and Sequencer in JDK13Services . java to ensure proper handling
added a condition to check if a keyword is present before adding it to the reference to ensure proper handling of keywords in the reference
added a check to retrieve the size of the processor exchange pairs if it is an instance of Collection to ensure proper handling of multiple exchange pairs
removed the getStartCount ( ) method from SegGraph , SegToken , and WordDictionary classes to streamline the code and improve maintainability
fix : escape character for telegraf in flavorstatsdlinebuilder ( # 644 )
[ java ] add support for udp port on the same multicast address .
renamed ` OperatorMulticast ` class to ` OperationMulticast ` in multiple files to improve clarity and consistency in naming conventions
updated the send timeout value from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for sending messages to be sent to the
added a try - finally block around the assertions in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
fix race condition in sessionfactoryserviceregistryimpl . destroy ( )
[ java ] rename ` ` home ' ' to ` ` jwt token from local storage ' '
[ pytorch ] add test for map of tensor in ivalueutilstest
added a listener for task stack clearing in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to ensure task stack animation starts and
[ itextpdf ] do n ' t check date pattern if it do n ' t contain -
camel - 14284 : camel - cxf : set property to null when create cxf endpoint
refactor the ` endPendingAnimation ` method into a separate method ` endPendingAnimation ` to improve code readability and maintainability by encap
added logging for play time calculation in LauncherAnimationRunner . java to improve traceability of play time based on device status
added a conditional check for BailoutOnException in C1XCompilation . java and introduced a new flag in C1XOptions . java
initialized ` signup ` and ` passwd ` variables to null in ` Links . java ` and updated assertions in ` IdentityZoneConfigurationBootstrap
[ hotfix ] [ runtime ] rename slotprofile . getpreviousexecutiongraphallocations to getreservedallocations
changed the type of ` onlyFormat ` from ` SimpleDateFormat ` to ` String format ` in ` TimeConverter . java ` to improve clarity and
geotiff : add ` ` gc _ nodata ' ' property to ` ` nodata ' '
[ llvm ] fix npe in function start node if source section be null .
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java ` to
replaced the blockUntilConnected ( ) method with a CountDownLatch for connection state management to ensure proper handling of connection states during tests
refactor ArrayTypeHandler to handle null values more gracefully to improve robustness by preventing potential NullPointerExceptions
replaced the ` RegexpTunnel ` class with a ` getPrefix ` method in ` JakartaRegexpCapabilities . java ` and removed the ` RegexpTunnel
changed the application type from null to Application . class in the pick method to ensure the application is picked from the overlayConfig class instead of null
add a test case to verify that a global global can not be set on a mutable global
added validation checks for asset names and URLs in AssetIssueActuator and TransactionUtil classes to ensure that asset names and descriptions are valid
fix copypaste for textfield and textfield in copypaste .
updated the description of the ` @ text ` parameter in ` LGWebOSActions ` , ` LGWebOSUpnpDiscoveryParticipant ` , and
replaced ` setSeedNodes ( ) ` and ` setTrustNodes ( ) ` calls with ` addAll ( ) ` in ` TronNetService
updated assertions in BaseTokenStreamTestCase to include position and termAtt parameters to improve clarity and accuracy of assertion messages for better debugging
log4j2 - 116 fix calendar . getnexttime ( ) to use increment ( ) instead of increment ( )
added methods to find and find items containing text in ShadowAdapterView and removed unnecessary imports in ShadowListView to improve code clarity and maintainability by
pdfbox - 4071 : fix typo in pdf appearance dictionary
graphdecoder : add aftermethodscope ( ) method to graphdecoder
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) for attribute retrieval to improve code readability and maintainability by centralizing
added unit tests for the ` HttpZipkinSpanReporterTest ` class to ensure that the ` ZipkinSpanReporter ` correctly reflects the service name
added logging statements and modified SpoolMode handling in JavaInMemoryFileManager , JavacToJarStepFactory , and JavacToJarStep
rename SeparatedProjectGenerator to SeparatedProjectsGenerator and update related imports to improve clarity and consistency in naming conventions
increased the timeout value from 4 seconds to 10 seconds in the tryLock method from 4 seconds to 10 seconds to allow for more time for lock operations
added a DEFAULT _ CACHE _ CAPACITY constant and modified method signatures in ConfluentSchemaRegistryDeserializerProvider to enhance cache capacity management by allowing for
renamed ` remind ` to ` checkatstartup ` in ` UpdateInfoDialog . java ` to improve clarity and consistency in naming conventions
refactor NodeGenerator to include methods for strongKeys , weakValues , and softValues to improve code readability and maintainability by centralizing method
refactor the condition for determining the associated entity name in CascadingActions . java to improve code readability and maintainability
added constants for proto property names and modified return statements in ScriptObject . java to improve code readability and maintainability by encapsulating proto
updated the default read mode from " heap " to " mmap " and modified the initialization of the ImmutableSegmentImpl to improve clarity and consistency in
added import for ByteArrayTemplate and implemented a method to return the instance of ByteArrayTemplate to improve handling of byte data types in the application
added a new ` Hipchat ` class and integrated it into the ` SamlServiceProviderProperties ` and ` CasSamlSPHSPSP
replaced List with Set for commandRegistryUrls and added a HashSet to manage command registry URLs to improve performance and maintainability of the command registry
updated warning log message to include current context and added debug logging for uncovered http methods to improve clarity of warning messages and enhance debugging capabilities
[ svn ] set loggedin to true in svnrepositoryconnector . login ( )
camel - 14284 : camel - activemq - add jms configuration option to disable transacted transaction manager
cloudstack - 10224 : fix checkstyle violation in vmwareresource
refactor Timers class implementation to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java `
deprecated the constructor of UAX29URLEmailTokenizer and its methods in TestUAX29URLEmailTokenizer to indicate that these methods are outdated and
changed the type of ` ScriptObject ` from ` Map < Object , Object > ` to ` ScriptObject ` in the ` ScriptObject ` class
refactor EventBusMetrics class for improved readability to enhance maintainability and readability of the code
( chore ) camel - eperson : use default locale instead of default locale
updated JaversTransactionalDecorator to implement InitializingBean and added afterPropertiesSet method to ensure schema is properly set after properties are set
removed null check for pgTypeName before adding it to _ pgNameToSQLType to simplify code by eliminating unnecessary null checks
added server configurations to the ScopedHandlerTest class to ensure proper handling of server configurations in the handler
fix calltimeoutexception when wait - notify - phase be disable .
updated the condition in RestLoginProcessingFilter to check for empty usernames instead of blanks to improve code readability and maintainability by using a
updated permissionNode check from ` Objects . equals ( " " , " " ) ` to ` " * " ` in ` CommandMap .
rename ` encoding ` to ` sourceCharset ` in ` AbstractCompiler . java ` and update related methods in ` ICompiler . java ` to improve
changed ` postLogin ` from byte [ ] to ` String ` in ` HostBean ` , ` TerminalBridge ` , and ` HostDatabase `
refactor simulation handling in GeneralOptimizationDialog to use generic component modifier to improve code readability and maintainability by reducing duplication
camel - 14284 : camel - spring - boot - camel - core - add contextreloadstrategy to configuration property
refactor logging statements in CommonTestUtils . java for consistency and clarity to improve code readability and maintainability by standardizing console configurations
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a check for ` markSupported ` before invoking ` invokeSafely ` in ` RequestBody ` and created a corresponding test in ` RequestBody
added a check for embedded settings and updated conditional checks in multiple classes to ensure that the embedded embedded settings are only processed when the port is enabled
add prefab asset , and add health component to debug command
updated the RandomLoadBalancer class to include a half - length weighted weighted weighted weighted weights and adjusted the random method signature accordingly to improve accuracy of weighted weighted
updated GsonParser and MetricsResourceTest to use ` metric . getCacheString ( ) ` instead of ` StringBuilder ` to improve code readability and maintain
updated param settings for gcmsort and gcmdir in ApacheHttpClientMediaWikiApi . java to improve code readability and maintainability by using
[ java ] call pulsetransactioncoordinator ( ) instead of checktransactionsynchhstatus ( )
[ iotdb - 1076 ] pipetaskcoordinator should lock pipetaskcoordinator lock .
added a conditional check for preinstrumented jars in DefaultSdkProvider . java to ensure compatibility with preinstrumented jars based on system property
updated conditional check from ` ! isSilent ` to ` isSilent ` in ` ExecDriver . java ` to improve code readability and maintainability
added validation for the DYNAMIC _ FIELD field in IndexSchema . java and a corresponding test in BadIndexSchemaTest . java to
do n ' t randomly read qrh repair if it ' s not randomly read
replaced ` ImmutableSortedSet ` with ` Iterables . transform ` in ` PrebuiltCxxLibrary ` and added a test for includes directories to
refactor AdaptableX509CertSelector to improve handling of sensitive certificate types to enhance security by ensuring sensitive certificates are only set when sensitive
[ log4j2 - 117 ] remove unnecessary try - catch block in nosqlappender
added a deprecated annotation to the GuiScreenEvent class to mark the class as deprecated to indicate that the class is outdated and should no longer be used
removed multiple methods from ` addToCategories ` and ` removeFromCategories ` in ` CategoryEditSearchRecyclerViewAdapter . java ` to streamline category management
update ebean - server - cache to use servercachetype instead of servercachefactory
refactor RocketComponent to iterate through all RocketComponents to improve code readability and maintainability by reducing duplication
removed the ` doCompile ` method from ` JavaCompilerService ` and added a ` destroy ` method in ` JavaDiagnosticProvider ` to streamline the
refactor ` MultiThreadedBuildRuleResolver ` to use ` Supplier < V > ` instead of ` doCompute ` to improve code readability
[ hotfix ] fix thread safety issue in walreplicationserviceimpl
added null checks for ` tPartition ` and ` getSd ( ) ` in ` Partition ` and ` DDLSemanticAnalyzer ` classes to ensure
refactored schema handling in LocalServiceRegistryClientImpl and RemoteServiceRegistry to use lambda expressions to improve code readability and maintainability by reducing
added a new test class FilesTest for file deletion functionality to ensure that the Files class correctly handles file deletions
removed unnecessary try - catch blocks in ServerSocketAdaptor and SocketAdaptor classes to simplify resource management and improve code readability
updated the class name check from " java . lang . System " to " Logger . class . getName ( ) " to ensure compatibility with the latest
replaced ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f . toString ( ) ) ` in ` Project . java `
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of null
changed the access modifier of the static String from public to private in GeneratedEntityDecorator . java to enforce encapsulation and improve encaps
removed hardcoded URL in SimplePostTool . java to improve code readability and maintainability
[ geos - 13939 ] geosymbolictoggle do n ' t return false if no symbol symbol be set .
refactor client container registration in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and ensure proper cleanup of client container
added a null check for the type in the conditional statement to ensure that the type is not null before proceeding
added cleanup methods to several test classes to ensure proper resource cleanup and prevent potential memory leaks
added search functionality for URLs in RemoteBrowseHandler to enhance user experience by allowing users to search for specific URLs
removed the visibility of the neutral button in SetupEncryptionDialogFragment to improve user experience by ensuring the neutral button is visible
hhh - 16464 - add itemcount ( collection , boolean includearchived , boolean includewithdrawn , boolean includewithdrawn
updated SQL statements in DDLTask . java to use ` ` instead of ` ` for better readability to improve code readability and maintainability
added exception handling for OAuth2 exceptions in CheckTokenEndpoint . java to improve error reporting and logging for OAuth2 exceptions
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use Parameterized type parameters to improve code readability and maintainability by standardizing
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame . java and DataBrowser . java , and added tooltips in SQLConsole .
added support for JUnit 5 in ActionProviderImpl . java to ensure compatibility with JUnit 5 in the application
replaced HumanReadableException with RuntimeException in WorkerShellStep . java to improve error handling by using a more generic IOException instead of HumanReadableException
[ hotfix ] [ test ] rename @ publicevolving annotation to @ Experimental
[ hotfix ] [ javadoc ] fix typo in streamcepstrumsource
updated index calculation in List . java to ensure index is within the bounds of items to avoid potential index out of bounds errors
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure compatibility with JSQL parser ' s expression handling
added confirmation parameter to the DebugPaste class to allow for confirmation of the debugpaste command
camel - 14224 : camel - web - endpoint - management - configuration should use orElseThrow instead of get .
do n ' t call focusmathquillggg when new creation mode be enable .
updated GoBinaryDescription to use ` GoBinaryDescriptionArg ` instead of ` Arg ` and updated import statements to improve code clarity and maintainability by
refactor environment retrieval logic in Jooby . java to improve code readability and maintainability by reducing duplication
replaced ` RetryListenerSupport ` with ` SecondDummyRetryListener ` across multiple files to implement ` RetryListener ` instead of ` RetryListenerSupport `
[ beam - 498 ] fix metric metric report with decimal ( # 498 )
added final fields for email and author in Contribution . java to ensure immutability and prevent potential null pointer exceptions
refactor the loop to use a do - while loop for better readability to improve readability and maintainability of the code
refactor elements assignment logic to use a local variable for better readability to improve code clarity and ensure proper initialization of elements based on class type
updated exception messages in StaxEventItemReader to use ` getURL ( ) ` instead of ` getURL ( ) ` to improve clarity of
fix testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirender
added null check for currentProfile before retrieving the client result to avoid potential NullPointerExceptions when currentProfile is null
updated the method call from ` target ` to ` newElement ` in ` SaajStaxWriter . java ` to ensure the correct namespace declaration
added BigInteger and DSAParameterSpec imports to KeyStoreManager . java and updated KeyStoreManager . java to include additional algorithms and parameters to enhance security
replace ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` Mesh
set the engine version of the process definition in BpmnDeployer and BpmnDeployerTest to ensure the correct engine version is used
updated property names from " resource . loaders " to " resource . loaders " and " parser . space _ gobbling " to ensure
[ hotfix ] [ runtime ] add verifythread isthreadattached ( ) method to vmthreads
added null checks for the map in GenericUDFMapValues and created a new test class for generic UDFMapValues to ensure robustness by
updated method name from " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure consistency in naming convention
added oilGenerationRate , enableOilGenerationRate , and propEnableOilSpouts properties to BCEnergyConfig and updated height calculation logic
added directory creation and logging for cleaning in ImportContext and JobQueue classes to improve error handling and provide clearer logging when the directory is not set
updated the exception message to use a string resource instead of a hardcoded string to improve readability and maintainability of the exception message
updated import statements in CRLDistributionPointRevocationCheckerTests . java to improve code readability and maintainability
added import statement for static final int constants in ZipConstants64 and ZipConstants64 classes to improve code readability and maintainability
refactor ` newFileSystem ` method to use a ` ensureFile ` method instead of a hardcoded value to improve robustness by ensuring proper
replaced ` Box . createHorizontalStrut ` with ` Box . createHorizontalGlue ( ) ` in ` IfControllerPanel . java ` to improve
updated the method call from ` createConnection ( ) ` to ` createConnection ( ) ` to ensure the correct connection is created for tests
added SerializedName annotations for baseUrl , mirrorsList , and repoId in ServiceOsSpecific . java to ensure proper serialization and deserialization of service
added a new method ` deleteBook ` in ` DatabaseAdapter ` and updated references in ` ImportAsyncTask ` and ` BooksDbAdapterTest
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
updated buffer position calculation in AbstractAjpProcessor . java to ensure correct positioning of the response message
adminconsoleplugin : do n ' t create the admin context when start the admin server .
refactor unregisterHandlers ( ) method to use MessageConsumer < ? > instead of unregisterHandlers ( ) to improve code readability and maintainability by
added configuration properties for device and table properties in IoTDBDescriptor . java to enhance flexibility in managing device and ID table configurations
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 in ExitableDirectoryReaderTest . java and added DelayingSearchComponent
updated the condition for the mockTsp variable from ` ! = null ` to ` ! = null ` in ` TestSignatureInfo . java `
[ java ] use witnessscript instead of scriptbuilder . createscript ( ) in transaction .
updated the expression path in IndexSchema . java to include " / schema / types / fieldType " to ensure proper handling of field types in the schema
added a null check for valueCompleter in Completers . java and created a new OptionCompleterTest . java file to ensure that OptionCompleter is
reformatted code for improved readability in S3Utils . java to enhance maintainability and readability of the code
[ iotconsensus ] change the type of source peerid from string to int in iotconsensus .
refactor file upload logic into a separate method ` UploadFile ` to improve code readability and maintainability by encapsulating file handling logic
updated the reply button alpha value in TweetFragment . java to ensure the reply button reflects the correct alpha value for better user experience
[ hotfix ] [ test ] fix test failure in accesslogsupporttest
updated the file path for maryCacheFile from " testfiles - deleteme " to " tmp / testfiles - deleteme " to ensure
removed null checks for subscribers in SettingImpl . java to simplify code and improve readability
updated error handling in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to throw IllegalArgumentException instead of IllegalStateException in AbstractSamlObjectBuilder and Abstract
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve logging clarity by using a more descriptive method
added a check for the existence of ` assetsDirInDevMode ` in ` AssetsController ` and updated tests in ` AssetsControllerTest
updated the method calls from ` put ` to ` writeOptions ` in ` rocksDBKeyedStateBackend . java ` to include ` writeOptions
updated the default format string from " value - tag - index " to " value - index " to correct the spelling of " value - tag
updated GraphHopper initialization to use req . getHints ( ) instead of hardcoded parameters to improve code readability and maintainability by using
updated wait time from 30 seconds to 60 seconds in BesuNodeRunner , BesuCommand , and AltBN128PairingPrecompiledContract
rename DuclsSandboxTest to SandboxTest and update references accordingly to improve clarity and consistency in naming conventions
camel - 14284 : camel - cxf : use exchange . setexception ( ) instead of logger . warn
changed the access modifier of the forwardPropagateTree method from package - private to public to allow external access to the forwardPropagateTree method
updated SQL query in JDBCExample . java to include additional parameters to ensure accurate counting of results in the query
add a warning if the project path contain $ { project . basedir } instead of $ { project . basedir }
refactor Style class to improve code organization to enhance maintainability and readability of the code
added zoom functionality to ShareActivity to handle back navigation in ShareActivity to improve user experience by allowing navigation to back navigation
added a check to skip deprecated fields in Json . java to ensure proper handling of deprecated fields in the application
added animation listeners to manage the visibility of the layout in LauncherFragment to enhance user experience by allowing smoother transitions during animations
updated method name from " AbstractYarnClusterDescriptor . class " to " AbstractYarnClusterDescriptor . class " in Utils . java to improve
added a Progressable parameter to multiple methods in Utilities . java and HiveIgnoreKeyTextOutputFormat . java to enhance file handling by allowing progress - based
[ hotfix ] fix typo in coordinatorcoordinatorprovider
added methods to remove and update panel ordering and color updates in ContributionListPanel . java to ensure proper handling of contribution and color updates during panel
rename HyervisorTemplateAdapter to HypervisorTemplateAdapter and update related conditions to improve clarity and consistency in naming conventions
added a check to set dPath to a default value if it is empty to ensure dPath is always set to the user ' s directory when
[ java ] set samplerate to 48000 instead of 48000 in defaultaudiosink .
log4j2 - 129 add filter ( ) to mapfilter . filter ( )
updated test cases in VerificationInOrderWithCallsTest . java to improve test coverage and maintainability
updated the method call from ` axis . z ` to ` axis . x ` in ` setFromAxis ` to ensure correct positioning of the
updated COLLECTION _ DELIM string from " colelction . delim " to " collection . delim " to ensure consistency in naming conventions
added a new test method ` testListenerConnectedAtStart ` to ` TestFrameworkBackground . java ` to ensure proper handling of connection state changes
refactor completion logic in DocRenderer . java and add new test cases in PHPCCDocumentationTest . java to improve code readability and maintainability
added a boolean variable ` mIsOneHandedModeSupported ` and modified conditional checks in ` RecentsAnimationDeviceState ` to improve code read
added onDetachedFromWindow method to handle memory leaks in AppsCustomizePagedView . java to ensure proper cleanup of hardware layer
added a dictionary resource parameter to MorfologikAnalyzer and MorfologikFilterFactory classes and updated the MorfologikFilterFactory to
updated exception handling logic in ResultSetTest . java to ensure proper handling of exceptions during execution
removed the " debug " parameter from the InitializeProjectMessage initialization to simplify the code and improve readability
replaced AtomicReference with AtomicBoolean for locking , locking , and MVCC in AbstractPhenomenaTest . java to improve thread safety and
refactor tooltip text handling in ComponentTreeRenderer to use a dedicated method to improve code readability and maintainability by encapsulating tooltip text
increased the timeout duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server to complete
update deviantart ripper to use deviantart . username and deviantart . password
refactor Google Signed Packages to use strings instead of an array to improve code readability and maintainability by reducing redundancy
updated the method call from ` createSolutionBusiness ( ) ` to ` createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtle
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes
added email description to the template data in EntityGroupKeyContentFormatter and updated detection in TestEntityGroupKeyEmailContentFormatter to enhance user experience by
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
updated language retrieval logic in Locale . java and added error handling in LocaleTest . java to improve code robustness and provide clearer error messages for
refactor Liquibase to use a dedicated method for creating UpdateVisitor to improve code readability and maintainability by encapsulating the create
added a check to return early if screen pinning is active in OverviewCommandHelper . java to prevent processing when screen pinning is active
added support for " No chart data available " and " No chart data available " text in Chart . java to enhance functionality by allowing customizable text
added synchronization to checkHeadWritten ( ) methods in Http1xServerResponse , Http2ServerResponseImpl , and Http2ServerResponseImpl to
refactor chunk handling logic in NettyResponse . java to improve code readability and maintainability by reducing duplication
added a scheme header to the HTTP headers in Http2TestBase and updated related test cases in TestHttp2Limits and TestHttp2Section _
fixed - redissonlocalcachedmap . getkeys ( ) and values ( ) return cachedkeyset ( ) instead of keyset ( )
camel - 14284 : camel - jpa - add dostart ( ) method to camel - jpa
corrected the spelling of ' jumpSpeed ' in PhysicsCharacter and PhysicsCharacter classes to ensure consistency in variable naming conventions
added a null check for reparsedFunction in the Parser class to ensure proper handling of null syntax extensions
updated logging statements and error handling in BitstampPusherService . java to improve code clarity and maintainability by using more descriptive variable names
added OLD _ SEGMENT _ PATH constant and updated getOldUploadSegmentHttpURI and getOldUploadSegmentHttpsURI methods in FileUpload
updated the method call from ` dbCol . findOne ( ) ` to ` dbCol . findOne ( filter ) ` in MongoDbTailTrackingManager
added assertpredicatefails ( string expression ) method to languagetestsupport
added alpha value bound to the alpha value in RecentsView . java to ensure alpha values are correctly bounded
updated the regex pattern in ManifestReversion . java to ensure the correct version is used for the Import - Package attribute
refactor DataSyncConfiguration class to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized JavaSnippetRepository in JavaLanguageServer . java to ensure proper initialization of snippets in the application
added a loop to iterate over the number of time buckets before updating sums to ensure that the sums are only updated when the number of time
updated the URL from " downloads / list " to " index . html " in ChromeDriverService . java and ChromeOptionsFunctionalTest .
camel - 14247 : camel - pgjdbc - fix the issue of pgeventconsumer and pgeventproducer can not use the sql statement
updated import statements for SyndFeed and SyndFeedInput in FeedParser . java to ensure proper resource management and prevent potential memory leaks
added handling for " Content - Length " header in TransferCompletionHandler and updated NettyAsyncHttpProvider instantiation in NettyAsyncHttpProvider to improve
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the constructor of EnhancedRuntimeException from EnhancedRuntimeException to streamline the code by eliminating unnecessary parameters
added asynchronous latch handling in SocketAppenderTest . java to improve thread safety and error handling in socket appender tests
camel - 14284 : camel - endpoint - dsl - remove eventadmin builder from endpointbuilders
updated method type handling and exception handling in ByteArray . compare methods to improve robustness by catching exceptions instead of NoSuchMethodExceptions
added a method to disable input proxy for touch events in RecentsAnimationWrapper to improve touch handling and debugging capabilities for better debugging
added JUnit @ Ignore annotation to RestletDomainServiceTest . java to temporarily disable the test due to issue # 6770
removed the currentIdx parameter from the resizeAndRehashIfNeeded method to simplify the method signature for better readability and maintainability
updated package - info . java and package - info . java files in ModulePathTest . java and SmokeModulePathTest . java to align module
added source directory information to the getCompiler method in JavaLanguageServer . java and JavaServerConfiguration . java to improve debugging and traceability of the
updated menu item IDs for open web and mute hashtags in TweetPager . java to improve user experience by enabling mute hashtags
corrected the spelling of " nodeIsAncestorOfItself " and " nodeIsNotDescendantOfItself " to " nodeIsNotDescendantOf
make worldeditplayer use math . max ( 0 , 0 , 0 , 0 )
added PathNotExistException to the selfCheckDataTypes method and updated exception handling logic in InsertNode . java to enhance error handling for data type mismatch
removed unnecessary closing brace in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ operator ] remove mailboxexecutor from operatorfactory
hbase - 16464 add miss table state check for remotewithextrasexception
updated method calls to use ` Meter : : getId ( ) ` instead of ` meter ` in ` GatewayMetricFilterTests . java ` to
updated BlockJUnit4ClassRunner constructor to use getJavaClass ( ) . getJavaClass ( ) instead of getTestClass ( ) to
use lasttimedata instead of remoteitems for delete
updated the calculation of allAppsCellWidthPx in DeviceProfile . java to adjust the width of allAppsCellPaddingPx to
[ hotfix ] [ runtime ] add parent _ logging _ patterns to coreoptions
replaced ` doc ( ) > lastScoredDoc ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to
added a call to forceMerge ( 1 ) in TestMultiPhraseEnum . java to ensure the writer properly merges to the output
updated the ` close ` method to accept ` java . io . Closeable ` instead of ` Connection ` in multiple classes to improve clarity and consistency in
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
removed unnecessary printstacktrace calls in SchemaValidatorTask . java to simplify error handling and improve code readability
removed the UncheckedIOException throw statement from the catch block to simplify the code and improve readability by eliminating unnecessary exception handling
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android features and features
fix ( flavor ) : use stringbuffer instead of string .
updated logging level from warning to debug and added null checks for username and password in DerbyDatabase , BaseLiquibaseTask , and DiffDatabaseTask
removed the useCaches property and simplified conditional checks in Nio2Endpoint . java to simplify cache management and improve code readability
updated CasGeoLocationConfiguration to accept a Resource for maxmindProperties instead of a hardcoded value to improve flexibility and maintainability of
updated test cases in InstructorFeedbackResultsPageUiTest to use " instructorFeedbackResultsPageOpenViewForHelperOne . html " instead of
added a Scan parameter to the useEncodedQualifierListOptimization method in BaseResultIterators . java and updated its usage in EncodedColumnsUtil .
removed the ` public ` access modifier from several methods in ` ApprovalStore ` , ` ApprovalsControllerService ` , and ` Approval
added a boolean flag ` mStartedDownload ` and invoked it in ` FileDownloader . java ` to cancel the notification manager when the downloader is
updated method names from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and ` AbstractFloatingView
updated version number from " 1.0 . 11 " to " 1.0 . 13 " in JFreeChartResources . java to reflect the latest release of the
replaced direct calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve code readability
refactor GsonBuilder class for improved clarity to enhance maintainability and readability of the code
added null check for centerGeo before adding centerGeo to circleCenters and fixedPoints to avoid potential NullPointerExceptions when centerGeo is null
remove espressohome option , use -- java . lang . home instead
[ hotfix ] [ doc ] fix typo in javadoc
changed the DeleteSessionAction class to be final and changed the visibility of the deleteSession variable from protected to private to enhance encapsulation and
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to improve code readability
updated the initialization of ` sz ` in ` JoinQParserPlugin . java ` and modified the ` result ` initialization in ` SolrIndexSearcher .
added an additional parameter to the triggerMediaScan method call in FileDownloader . java to ensure proper handling of media scan events in the file system
removed verbosity checks for printTestResults in TestRunning . java to streamline test results processing by eliminating unnecessary verbosity checks
added methods to set custom G - code text settings in MainWindow . java to ensure proper functionality of G - code settings in the application
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42157 - fix
refactor JsonElement class for improved readability to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and resetExceptionIgnores ( ) in TestBadConfig . java to ensure proper handling of unset sys property
added a method to remove fragment and action bar from the GpsMainActivity to ensure the action bar is properly removed when the fragment is removed
updated the list of spanishTokens from " LRB = " to " ( " , " , " , " , " , " , "
replaced instances of ` asByteRange ` with ` Range . Byte ` in ` RemoteMediaHandler . java ` and ` RemoteRawHandler . java
updated G - Code - Sender / GRBL / Universal - G - Code - Sender / GRBL / GRBL /
added new versions " 8.1 . 0 - cfs " and " 8.1 . 0 - nocfs " to TestBackwardsCompatibility .
updated method calls in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintainability
added null check for output stage and data initialization in StatementResource . java to ensure proper resource management and prevent potential memory leaks
[ jabref ] make integritycheck . expandfilename private .
removed the import of SolrClient in ChaosMonkey . java to streamline the code by eliminating unnecessary dependencies
added null check for ` fas ` before initializing ` JdbcConfigService ` to avoid potential NullPointerExceptions when ` fas ` is null
refactor ListView initialization in NestedRepositoryTreePanel . java to improve code readability and maintainability
changed the constructor visibility of ExtensionTypeHeader from package - private to public to allow external access to the constructor for better encapsulation
added ` throws IOException ` to several methods in multiple classes to ensure proper exception handling for field values
[ hotfix ] [ runtime ] remove pushonshutdown property from prometheusproperties
refactor ReactiveStateMachineExecutor to use Mono . create for trigger error handling and improve error logging to enhance code clarity and ensure proper handling of trigger errors
added a new test method ` whenMultiplePythonExecutablesOnPathFirstIsUsed ` in ` BuckConfigTest . java ` to verify the functionality
added a default button to the initial account registration button in InitialAccountRegistrationFrame to enhance user experience by allowing the sign - in button
added a new configuration parameter ` TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN `
updated error logging messages in RegistrationRestRepository . java to include exception details to improve clarity of error messages for better debugging and debugging
move reflectionutils to org . axonframework . util
added a static method ` listableCollector ` in ` OidcIdTokenClaimCollector ` and created corresponding tests in ` OidcId
removed unused ` center ` and ` center ` variables from multiple classes to streamline the code by eliminating unnecessary variables
removed unnecessary null check for pcollection in RegisterAndProcessBundleOperation . java to simplify the code and improve readability
refactor SslContextFactory to improve code readability to enhance maintainability and readability of the code
updated max expectation assertions from ` 5000 ` to ` DEFAULT _ MAX _ EXPECTATIONS ` in ` ConfigurationPropertiesTest . java ` to
change return value from " access _ confirmation " to " access _ confirmation _ error " to clarify the purpose of the confirmation error message
added a new ConsumerClassLoaderFilter class and a corresponding test case in ReferenceConfigTest . java to enhance class loading capabilities and ensure proper context class loader
added a new parameter ` copyRowHeight ` and ` resetOriginalRowHeight ` to the ` shiftRows ` method in ` HSSFSheet . java
replaced ` setRolloverIcon ` with ` setRolloverPressedIcon ` and ` setRolloverPressedIcon ` in ` FontImage . java
refactor grid translation logic in TaskViewUtils and TaskViewSimulator to use a new method in TaskViewSimulator to improve code readability and maintain
refactor Assertions class to improve code readability to enhance maintainability and readability of the code
added a new ` currentDateTimeFunction ` method to multiple database classes to ensure that the correct function is returned for database operations
added ` anonymousPath ` method to ` IOUtils ` and modified ` Log4jUtils ` to utilize ` IOUtils . anonymousPath ` to improve
updated method signatures in DigitalWellBeingToast . java and TaskView . java to include additional parameters for task descriptions to enhance task
updated the wait condition in CatalogTracker . java to include a timeout of 50 seconds to ensure proper timeout handling when meta is unavailable
updated LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
use default conversion instead of null in genericitem . gettype ( )
added a new test method ` testFetchPostAndDetailsProjection ` in ` BidirectionalOneToOneNPlusOneTest . java ` to verify Post
removed the extra empty screen from the search page index and adjusted the initialization logic in LauncherModel . java to ensure proper handling of empty workspace screens
updated HashMap initialization and added null check for value in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve
updated string formatting in GoogleLineChart , GooglePieChart , and GooglePieChart classes to use double quotes instead of single quotes to improve
[ java ] increase wait time for send complete to reduce wait time .
added a position field and a method to set the position in WALPrettyPrinter to enhance the printing capabilities of the WAL printer
increased the timeout value of the NettyTransceiver from 1 to 0 to ensure that the NettyTransceiver is only initialized when fail
updated the way events are generated in SimpleReport . java and added a test case in SimpleReportTest . java to ensure that events are sorted before
added a test method to verify the functionality of the ` getCSVLine ` method in ` CSVFileLoggerTest . java ` to ensure that CSV
update chinese benchmark test to include chinese data
[ iq ] do n ' t call isremote ( ) in iqrouter and iqhandler
removed the @ JniImpl annotation from VM . java to streamline the code and improve maintainability
updated variable names from " http . plugin . check . blocking " to " CHECK _ ROBOTS " in Fetcher2 . java to
added a condition to check if the video HDR format is not " dolbyvision " in FFMpegVideo . java and
updated package name from " other _ package " to " other _ package2 " and changed the expected value from " other _ package " to "
fix worldborder . setbordersize ( ) and resizeworldborder ( ) to use newdiameter instead of newdiameter
hbase - 16416 addendum : disable hmaster replication if master can host user region
refactor login event handling in AppWFull . java to improve clarity and functionality to enhance code readability and maintainability by encapsulating
refactor instance config handling in RoutingTableTest to use a new method for generating instance configurations to improve code readability and maintainability by reducing
changed the visibility of the FieldAttributes class from final to public to allow external access to the FieldAttributes class
add unit test for readerroneous maven project contains reference
removed unnecessary null checks for oldProto and history in PropertyMap . java to simplify the code for better readability and maintainability
[ hotfix ] [ gatebird ] fix race condition in doorbirdinfo . getcontrollerid
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and prevent potential memory leaks
removed the condition for generating refresh token in OidcConsentApprovalViewResolver to simplify the conditional logic for better readability and maintainability
removed debug print statement from Http2SolrClient . java to clean up the code and improve readability
updated BaggagePropagation to use NoopGetter instead of lambda expressions to improve code readability and maintainability by using a more descriptive
refactor ConditionalOnEnabledResourceChain class implementation to improve code readability and maintainability
added a condition to check if the tree root is a child of the tree root to ensure that the tree root is not empty before proceeding
updated the method from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated logging statements to use ` cn1 ` instead of ` System . out . println ` for consistency to improve code readability and maintainability by
changed return values from " h : mm a " to " skeleton " in ShadowICU . java and added tests in ShadowICUTest .
removed the KeyguardManager import and simplified device lock check logic in TouchInteractionService . java to simplify the code and improve readability by eliminating unnecessary
cloudstack - 10224 : fix npe in volume api when no disk offering be available
replaced ` FileChannel ` with ` AsynchronousFileChannel ` and added a ` position ` variable in ` UtowBodyHandler . java ` to
reformatted code for consistency and readability in SigInt . java and SigIntTest . java to improve code readability and maintainability
do n ' t set minimum editor width when update text
changed the return value from - 1 to 0 in Asset . java to ensure the method returns 0 instead of - 1
refactor ComputeBenchmark to use a mapping function instead of a lambda expression to improve code readability and maintainability by using a more descriptive
added a refresh listener to the UploadListFragment to notifyDataSetChanged ( ) when the adapter is refreshed
updated BibDatabaseContext to use ` Path ` instead of ` File ` for file handling to improve code readability and maintainability by using a
replaced instances of ` emitters . items [ i ] ` with ` emitters . get ( i ) ` in ` ParticleEffect . java
refactor Tomcat service retrieval to use findServices ( ) and findChildren ( ) for better clarity to improve code readability and maintainability by
corrected the spelling of " desired file " to " desired file . " in multiple files to improve code readability and maintain consistency in the
added a check for playback state in PlaybackController . java to prevent unnecessary processing when playback is suspended
replaced ` findByPK ` method with ` findById ` method in ` DeleteServiceTest . java ` to simplify the retrieval of ` serviceComponentDesiredState
refactor inner class handling in Java2TypeScriptTranslator and add a new InnerClassFieldClash class in StructuralTests to improve code clarity
added configuration properties for followRedirectFilter and followRedirectFilter in DockerClientFactory and DockerClientProfile classes to enable dynamic logging behavior based on the Docker
added awtUnlock ( ) and awtLock ( ) calls in XToolkit . java to ensure proper resource management and prevent potential memory leaks
hhh - 10183 use sqlserver2008dialect instead of sql2dialect
[ hotfix ] [ zip ] do n ' t close the input stream when close the zip header .
changed the access modifier of the storeClassFile method from private to public to allow access to the storeClassFile method from other packages
removed assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues . java and added a new test class TestSortedSetDocValues
updated error messages for invalid command and port number in CGIHandler . java and added a start method in JavaVM . java to improve clarity and
added additional characters to the string validation in LineReaderImpl . java to ensure proper handling of line endings
changed the data type of ` multiFetchSourceFiles ` and ` hashCodesToFetch ` from ` List ` to ` Set ` in multiple classes to
added a check for vertex count in OGLESShaderRenderer . java to avoid unnecessary processing when vertex count is zero
[ java ] add test case for verifying error message
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root , menu
truffle : remove unused import from typesystem
refactor JsonObject class to improve code organization to enhance maintainability and readability of the code
added a condition to check if the maximum idle time is greater than or equal to the maximum idle time in SelectChannelEndPoint and HttpConnection to ensure
patch farmlandblock . cansustainplant ( ) to make it more efficient .
added a new table creation and updated database connection handling in QueryDatabaseMetaDataIT . java and UpgradeUtil . java to enhance database connection functionality and ensure
updated date formatting in HttpCookie . java and added a new class B6791927 . java with locale - specific expiration date handling to ensure consistent
removed redundant calls to db . close ( ) in DbHelper . java to streamline resource management and improve code readability
updated polling timeout values from 1 second to 5 second in BatchMessageListenerContainerIntegrationTests . java to improve test reliability by reducing the number of polling
make EconomyAllocationStage constructor accept option for tracera in EconomyCompilerConfiguration , EconomyAllocationStage , and EconomyAllocationStage classes to allow customization of
do n ' t listen for save key binding in source tab .
added a static block to set the line separator to " \ n " in ObjectMapper initialization to ensure consistent line separator behavior across different operating systems
updated path handling in NativeEnvironmentRepository to remove leading and trailing whitespace to ensure proper handling of path paths in the native environment
replaced multiple instances of ` AppT ` with a single ` appT1 ` in ` BaseTest . java ` and removed the ` appT
[ java ] remove recordinglog . validateexistinglog ( ) method from recoveryplan
updated import statements and variable name from GroupName to ErrorGroupName in ITSystemTest . java to improve clarity and consistency in error group management
[ hotfix ] [ test ] remove unused code in testfuzzyoptimizations
removed unnecessary preference retrieval for shared preferences in CameraManager . java to streamline code by eliminating unnecessary preference retrieval
replaced ` equals ( entry . getName ( ) ) ` with ` equals ( entry . getName ( ) ) ` in multiple files to improve code read
updated TerserUtil and MdmMatchLinkSvcTest to use Triple instead of inclusion strategy to enhance the functionality of the Terser
updated JUnit imports and annotations in AuthenticationSuccessListenerTests . java to use JUnit 5 annotations to ensure compatibility with JUnit 5 and above
refactor type handling in SetTypes . java to improve clarity and efficiency to enhance code readability and maintainability by using a more descriptive
refactor TypeUtil class to improve code readability to enhance maintainability and readability of the code
updated the triggerTime variable to use LocalDateTime and TimeZone . toZoneId ( ) instead of LocalDateTime to ensure correct timestamp formatting for alert timestamps
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle abstract method errors in ` MethodHandleResolver ` to improve error handling for abstract method
camel - 14224 : camel - simple - simple : fix error message for invalid body expression .
removed unnecessary check for empty toExplore in AbstractParser . java to streamline code by eliminating unnecessary checks
camel - 14284 : camel - clouds - add a copy of the is parameter to the jmspayloadconverter .
camel - 14247 : camel - cdi : remove @ ignore annotation from camelconsultest
updated conditional checks in Check . java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java to ensure that
[ java ] increase driver timeout for channel validation test
added a new file ` FileExtensions . java ` that defines constants for language , source , headers , and headers to facilitate the creation of file extensions
replaced ThreadLocalDateFormat with ThreadLocal . withInitial ( FORMAT _ PROTOTYPE : : clone ) in DateFormatUtil . java to streamline date date formatting
added " DeferPollingPageLoopCount " , " SafepointSpinBeforeYield " , and " UseCGroupMemoryLimitForHeap "
added a ` displayName ` field and updated ` DefaultDelegatedClientFactory ` and ` DelegatedClientIdentityProviderConfigurationFactory ` to utilize it to
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a more specific exception for early termination
updated the method call from ` targetFunction ` to ` targetFunction ` in ` TraceFunctionAroundWrapper . java ` to improve code readability
refactor connection handling by replacing ` getResponse ` with ` consumeResponse ` in multiple classes to improve code readability and maintainability by centralizing connection
fix npe in capabilitydispatcher when parent be null
wallettool : handle key crypter exception instead of key crypter exception
added @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that the service should no longer be used in future development
fix typo in hyphenationtree . tostring ( ) .
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to improve performance by avoiding unnecessary waits
move resource management from simpleaccreg to simpleaccountregistrationregistrationutils
corrected the spelling of " PARAMETER _ NEEDS _ TO _ BE _ NAMED " to " PARAMETER _ NEEDS
added a new boolean variable ` providersChanged ` to ` ConfigurationManager . java ` to control whether providers are changed or not
added a method to quote identifiers tokens in the SemanticAnalyzer to ensure correct parsing of escaped identifiers in the token processing
added a null check for ` type1 . getName ( ) ` in ` FileSystemFontProvider . java ` to handle cases where ` PostScript `
updated the handling of AnalysisSPILoader in SolrResourceLoader . java to improve type safety and reduce unchecked warnings in the code
refactor conditional checks in Window . java for better readability to improve code readability and maintainability
added null check for appManifest before assigning targetSdkVersion to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to use MAPPER instead of DefaultPrettyPrinter to improve code readability and maintainability by
added a ` userName ` field and its getter / setter methods to ` Driver ` , ` HiveSemanticAnalyzerHookContext ` , and ` HiveSemantic
added setter methods for Transformer files , URL , InputStream , and XmlConverter in XsltBuilder . java to enable dynamic transformation of Xslt
added Hadoop shim support to ContainerRunnerImpl and TaskRunnerCallable classes to enhance functionality by allowing customizable Hadoop shims
updated expectedFileSize calculation in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to improve test clarity and maintainability by
do n ' t log mapping data if context be null
[ java ] do n ' t use system . currentTimeMillis ( ) in log message .
updated VM version checks to use ` Platform . isDebugBuild ( ) ` instead of ` System . getProperty ( " java . vm . version )
[ hotfix ] [ metric ] fix warning in defaultlogpublisher
updated logback configuration file resolution logic in FrameworkLauncherExtended . java to improve clarity and maintainability of logback configuration handling
added @ NotNull annotations to multiple methods in CipherExecutor , CookieRetrievingCookieGenerator , and related classes to ensure non - null values are
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` across multiple files to standardize escape functionality for Windows
refactor ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` to use try - with - resources for better resource management to improve resource
corrected the spelling of " TestLucene50FieldInfoFormat " to " TestLucene60FieldInfoFormat " to ensure
removed unnecessary closing brace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to ensure that the shield address is correctly generated in the response
changed return type of methods from byte [ ] to String in JansiWinSysTerminal . java and JnaWinSysTerminal . java to improve
updated condition checks for presubmit , postsubmit , platform , and run flavor in TestStabilityRule . java to improve code readability and maintainability
added a condition to limit multiple valued fields in DefaultSolrHighlighter . java and updated test assertions in HighlighterTest . java to ensure that multi -
updated tryToLogin method to accept username and password parameters to enhance security by allowing credentials for login requests
refactor scene entity handling to use EntityMonster instead of EntityEntityDrownRsp to improve code clarity and maintainability by eliminating unnecessary
camel - 14263 : camel - jms - fix the issue that camel - jms do n ' t return the destination name if the destination name
removed wrapCollection ( parameter ) from the update method call in DefaultSqlSession . java to simplify the code by eliminating unnecessary wrapping
added logging for unknown currency in BTCEAdapters . java to improve error handling and logging for unknown currencies
[ hotfix ] [ runtime ] fix a bug in durableconduitbridge
pdfbox - 4071 : fix typo in default value for average and spacing
added a boolean parameter ` useTenantIsolation ` to the ` startController ` method and modified related method calls to include it to enable tenant isolation configuration
replaced ImmutableMap . Builder ( ) with a direct call to response . getValue ( ) in HasSettings . java to simplify code and improve readability by
added a check for non - empty attrs in ProjectWorkspace . java to ensure that only valid attributes are processed
added abstract methods ` getProjectJdkName ` , ` getProjectJdkType ` , and ` getProjectLanguageLevel ` to ` AbstractI
changed " Experimenal " from " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify the purpose of
added tests for Scott functionality in GrantedAuthorityEffectiveAclsResolverTests to ensure correct handling of user details in the authentication process
use javaparser . getsolvedjavalangobject ( ) instead of reflectionmodel . class
added constants for ` numberOfButtons ` and ` MAX _ BUTTONS _ SUPPORT ` and modified the return logic in ` XToolkit . java
updated import statement for Assert in RedefineInterfaceCall . java to ensure compatibility with the latest Java library structure
removed static method ` newUnpacker ` from ` MessagePack . java ` and added a new class ` MessagePackFactory ` to streamline
added static final tags ` IS _ DESERT ` and ` IS _ CAVE ` to the Tags class and updated the ForgeBiomeTags
renamed the method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in naming conventions
updated layout and UIID assignment logic in ComponentGroup . java to ensure proper handling of horizontal and group elements based on the horizontal state
removed the identifier parameter from the condition in DOIServiceImpl . java to simplify the code and improve readability
fix checkstyle issue in androidinput and locklessinput
[ java ] do n ' t throw agentterminationexception when commit position be not open .
add @ idclass and @ embeddable annotation for usersite and recordid class .
added error handling for invalid IP and URL formats in HttpConverterRegistrar . java to improve robustness and error handling for invalid IP and standard URL formats
http : / / code . google . com / p / mybatis / issues / detail ? id = 421 : do n ' t
replaced openInput ( fileName , IOContext . DEFAULT ) . close ( ) with fileLength ( fileName ) in NRTCachingDirectory . java to
updated import statements and method signatures in JavascriptCompiler . java and added a new generateClass method in JavascriptCompiler . java to improve code clarity
refactor UISettings class to use synchronized block for thread safety to improve thread safety and readability of the code
added a conditional check for text input support and modified the visibility of the fireDataChanged method in TextField . java to ensure proper handling of text input
added schemaChangeErrString and emulatorErrorString fields to SpannerIO . java and updated retry logic in SpannerIOWriteTest . java
updated type parameters in CompilerTest and TestUtil classes to use < > instead of < > to improve type safety and readability of the code
updated type checks from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray class in ObjectInputStream . java to
updated nonce retrieval from ` idClaims . getClaim ( ) ` to ` getStringClaim ( ) ` in ` OIDCAuthenticationFilter .
added a condition to check if a field is a relationship type in DCInputSet . java to ensure proper handling of relationship types in the input set
added CAPABILITIES _ SERVER _ SLOGAN capability to FileDataStorageManager and updated display name retrieval in FileContentProvider to
modified the conditional check for the ` menuItem ` variable in ` DrawerActivity . java ` to improve code readability and maintainability
updated error handling in SolrRequestParserTest to use Assume . assumeNoException instead of fail to improve test reliability by ensuring that the test only works
added a check for empty build IDs in MissingSymbolsHandler . java to avoid unnecessary processing when there are no valid build IDs
updated test cases in StringHelperTest . java to include additional data types to enhance test coverage for different data types in the output
added a warning log statement to indicate that the data provider is not an empty array or iterators to improve debugging capabilities by providing clearer feedback during
camel - 14247 : camel - spring - boot : use collections . emptylist ( ) instead of collections . empty _ set
updated XML version from " 0.9 . 0 " to " 0.9 . 8 " and modified selection style handling in MapStyleModel . java to ensure compatibility
updated the method call from ` mass ` to ` restitution ` in ` PhysicsRigidBody . java ` to align the method
added a new file ` AutoFtpActivity . java ` to handle FTP test failures to demonstrate the functionality of the FTP server in the application
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added getImageX ( ) and getImageY ( ) methods to ImageViewer , OnOffSwitch , and OnOffSwitch classes to provide access to
added a new file ` RemoteExecutionEnabled . java ` that implements custom serialization and deserialization of ` RemoteExecutionEnabled ` to enable and disable remote execution
pdfbox - 4071 : fix typo in error message
replaced ` FileReader ` with ` InputStreamReader ` in ` ImportCsv . java ` and added ` SuppressWarnings ` annotations in ` ImportCsv . java
added a call to assertWorkingScoreFromScratch in AbstractScoreDirector . java to ensure that expectedWorkingScore is not stale to improve accuracy of score
updated the configuration value of SEMIJOIN _ CONVERSION from " hive . enable . semijoin . conversion " to " hive . optimize . semi
added logging statements to multiple instances of DatagramPacket and DatagramPacketDecoder , DatagramPacketObjectEncoder , and DatagramPacketObjectEncoder to improve error handling and provide more informative
updated directory removal logic in SynchronizeFolderOperation and modified file list retrieval logic in FileDisplayActivity to improve user experience by providing clearer feedback during
added assertions to verify the transaction hash of transactions in PollingTransactionReceiptProcessorTest . java to ensure that the transaction hash is correctly retrieved from the
deprecate ischemaregion # testconstructschemablacklist and add testdeletetimeseries
added a null check for sampleMimeType in MediaCodecRenderer . java to prevent potential NullPointerExceptions when sampleMimeType is null
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23PoolingDataSource .
updated the ` @ AllArgsConstructor ` annotation to include ` onConstructor _ ` with ` @ JsonCreator . Mode . PROPERTIES ` to ensure
added SQLFeatureNotSupportedException for creating an index on a view in MetaDataClient . java to ensure that creating an index on a view is not supported
added a new file ` Website . java ` with methods for name , URL , and URI in ` PopulatorImplTest . java ` to
added a setup method to the BSFormatterTest class to set the default locale to " en " to ensure that the test uses the correct locale
added a FilenameFilter to filter out files that have already downloaded jar files in CoreModManager . java to improve the handling of poorly downloaded jar files by
updated the assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve readability and maintainability of the
added checks for single and single parameters in SimpleExprGenerator . java to ensure correct handling of variable expression tokens
added a volatile boolean field ` createdVertx ` and modified the condition to check if it is not null to ensure that the ` vertx ` is
updated attribute handling in NodeStyleBuilder to use nodeModel instead of null to improve code readability and maintainability by reducing redundancy
updated log messages in SynchronizeFolderOperation . java and FileDisplayActivity . java for consistency to improve code readability and prevent potential NullPointerExceptions
added a new api property ` ignoredReadStatus ` to the ` Entries ` class and set it in ` CategoryREST ` and ` FeedREST
replaced ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) ` across multiple
added imports and refactored data validation logic in RegisterServerConsumerExecutor . java and URIRegisterExecutorSubscriber . java to improve data validation logic
updated the isPlaying condition to check if the sound is paused to ensure the playback state is only updated when the sound is paused
added PERMISSION _ ADMIN _ SUDO _ AREA permission check in MainCommand . java and updated Captions . java to include
replaced ImmutableMap with HashMap for query options in ServerRequestPlanVisitor and added trace functionality in QueryRunnerTest to enable tracing of query options based on trace
replaced calls to ` toUri ( ) . equals ( baseName ) ` with ` path . getFileName ( ) . equals ( baseName ) `
updated assertion statements in ResourcesTest . java to include pureEmoji and mixEmoji and text attributes to improve readability and maintainability of the code
changed the native method ` NMTWaitForDataMerge ` to ` NMTOverflowHashBucket ` and added a new method ` NMTM
[ hotfix ] [ runtime ] rename Eitherserializersnapshot to javaeitherserializersnapshot
updated default NDOTS and NDOTS options in AddressResolverOptions . java and added rotate option parsing in AddressResolver . java to enhance flexibility
fix npe when call superassociate ( ) in request rockertemplate .
pdfbox - 4071 : fix npe in non - terminal field
updated XML namespace paths from " liquibase / parser / core / xml / " to " www . liquibase . org / xml / ns " to ensure
move commonmimetypelocator from com . oracle . truffle . api to test source
updated the repo state from INIT to NOT _ REQUIRED across multiple classes to ensure that the repo state is not required
updated the comparison logic in GenerateChangeLogTask to include schema comparisons to ensure accurate comparison of schema types based on the default catalog and schema
updated import statements in TestBackwardAnoamlyFunctionUtils . java to use TestNG annotations instead of JUnit to ensure compatibility with TestNG
added a new file ` ProgressiveJPEGTest . java ` to implement a new test class ` ProgressiveJPEGTest ` to
updated MaterialLoader to use float values for ambient , emissive , and two - side mats to improve performance and maintainability of
add support for x86 and 32 - bit architecture in ccompilerinvoker
added a null and length check for the text before setting the size to prevent potential NullPointerException when the text is null
updated the method call to include an integer value of 1 _ 000 _ 000 in Data . java to ensure that the method correctly reflects the
changed PushUtils and ThumbnailsCacheManager classes to be final to enforce immutability and enforce immutability of the PushUtils class
removed unnecessary bounds checking and simplified length calculation in RocketPanel . java to improve code readability and maintainability by reducing redundancy
replaced ` MockDirectoryWrapper ` with ` dir . setEnableVirusScanner ( false ) ` in ` TestDirectoryReaderReopen . java `
updated the data file loading path from " datafiles / presets " to " datafiles / presets " to ensure compatibility with different data files
added conditional checks in TaskbarStashController and modified animation handling in ActivityContext , InvariantDeviceProfile , and FloatingIconView classes to
replaced ` Args . getInstance ( ) . getMyKey ( ) ` with ` RefreshTask . getNode ( ) ` in ` NodeManager .
pmd : add targetjdk13 and targetjdk15 to target jdk 1 . 5
refactor quotaresponsebuilderimpltest to use mockitojunitrunner instead of powermockito
added PrintStream and System . err to manage output streams in TestSchemaToolCatalogOps . java to ensure proper handling of output streams for better debugging
added a DFSClient parameter to the constructor and updated related methods in FanOutOneBlockAsyncDFSOutputSaslHelper to include it to
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter in the MongoQueryMethod constructor to enhance the query method ' s functionality by
added EntityResolverWrapper and EntityResolver2Wrapper classes to ensure proper handling of entity resolvers in the Digester class
updated import statements in MetaDataEndpointImpl . java for consistency and clarity to improve code readability and maintainability by centralizing static imports
updated ALLOWED _ REPEATED _ DEADLOCKS and ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and
refactor BarChartActivity and LineChartActivity to use xAxis instead of xl and yAxis variables to improve code readability and maintainability by
added methods to validate printable character names in FsUtils . java to ensure proper handling of printable characters in the system
rename selenide . in to selenide . using
[ maven ] add processpluginconfiguration option to projectbuildingrequest .
changed return value from ` amountTransfered ` to ` amountTransfered ` in ` ProxyConnectionManager ` and ` ServerTrafficCounter ` to ensure
updated resource path handling in ITSystemTest . java to use ` Files . exists ` instead of ` Files . get ( " src "
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 , add remotehost
add admin _ button to communitylistservlet if admin be enable .
[ hotfix ] [ runtime ] add short compaction thread counter to the thread pool
replace getApplication ( ) . getPackageName ( ) with resources . getResourcePackageName ( R . array . wallpapers ) in WallpaperChooser . java to
updated the ` getPlayersInPlot ` method to accept a ` player ` parameter and added a new method ` getPlayersInPlotVisible
refactor AndroidManifest , ResName , ResName , ResName , and ShadowActivity classes to improve code organization and maintainability
updated MlibOpsTest . java file to improve test coverage and maintainability
updated JNIRegistrationManagementExt to use OPERATING _ SYSTEM _ IMPL instead of " com . sun . management . internal .
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a test in SchemeGeneratorTest . java
removed unnecessary null checks for key and iv in UploadFileOperation . java to simplify key generation logic and improve code readability
added a @ Stability annotation to WorkProfileTest . java to ensure compatibility with different platform flavors
removed conditional check for bucketing version in TezCompiler . java to streamline the code by eliminating unnecessary checks
replace ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in GwtTestWrapper .
changed the ` LockFreeBucket ` class to an abstract class and added an ` LockFreeBucketContendedTimeMeter ` class to extend it to
[ java ] print thread pool stats in node probe .
updated maxBitrate assignment to use userPreferences instead of userPreferences to ensure accurate retrieval of maxBitrate from user preferences
added methods to check if a span ID is present in ZipkinHttpSpanExtractor to enhance tracing capabilities by allowing customizable span IDs
do n ' t create user payment account if dao be not activate
do n ' t call reflectionutil . gettypeiconrightaligned instead of reflectionutil . getreflection ( )
added a call to setProject ( p ) in LauncherUtils . java to ensure the project is properly set during execution
added ProjectFilesystem parameter to the ` JsBundle ` , ` JsBundleBuilder ` , and ` JsLibraryBuilder ` classes to enhance
refactor multiple Java classes to improve code organization and readability to enhance maintainability and readability of the codebase
refactor MetricsDSLContext class to improve code organization to enhance maintainability and readability of the code
replaced ` VersionConfig ` with ` ImmutableSet ` and updated ` VersionBuckConfig ` to use ` ImmutableSet ` instead of ` VersionConfig ` to
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by handling potential TypeNotPresent
changed the access modifier of the validateTypes method from static to public to allow access to the validateTypes method from other packages
chore : update gapic - generator - java with mock service generation update update gax - java to 2.16 . 0 and update gax
added SLF4J logging imports to SimulationStatus . java to facilitate logging of simulation status in the application
updated VERSION _ POSITION _ Y and VERSION _ FONT from 138 to 150 and increased the size of the SANS _ SERIF
added a call to ` runLater ( ) ` in ` UserInterfaceComponentImpl . java ` to ensure notifications are only added when necessary
refactor the return statement in ReturnsElementsOf . java to improve readability and maintainability of the code
updated error message from " non - string partition column is not allowed using equality " to improve clarity of error reporting for non - string partition columns
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to validate the functionality of ` LineFileDocs `
added a method to retrieve the version code in MainApp and updated related imports in FeatureList and WhatsNewActivity to improve code clarity and
camel - 14247 : camel - bean - add support for explicit method invocation in camel - bean
updated method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to
added buffer management functionality to IndexBufferObject and VertexBufferObjectWithVAO classes to enhance buffer management capabilities for better resource management
added a transition for the forgot password transition in PasswordManagementWebflowConfigurer . java to ensure the forgot password transitions correctly when a password
refactor JerseyClientConfiguration to improve code organization to enhance maintainability and readability of the code
updated BeanDefinitionBuilder from ` CharacterStreamReadingMessageSource ` to ` CharacterStreamReadingMessageSource ` in ` ConsoleInboundChannelAdapterParser . java `
updated print statements in InstanceOfPatternMatchTest . java and removed redundant type casting in RemoveRedundantTypeCastTest . java to improve
added methods to handle column count and row count in StringDict and updated Table class to improve data handling and ensure correct row count calculation
added ` @ Deprecated ` annotations to ` Container ` and ` @ AutoCloseable ` classes , and implemented ` withCustomizer ` method in ` Generic
updated error logging level from info to error in MediaInfo . java and refactored test cases in RendererConfigurationTest . java to improve clarity and
added schema pattern handling in BundledDriverDatabaseConnector and updated related options in PropertiesDataSourceDatabaseConnector to enhance schema validation options for the database connector
[ bouncycastle ] fix npe in provsslsessionimpl . getid ( )
updated bitmap ratio calculations and modified bitmap creation logic in AndroidGraphics . java to improve rendering accuracy and ensure accurate bitmap creation
refactor Base64 class implementation to improve code readability and maintainability
[ gr - 16464 ] add fallback to llvmglobalcontainer . getstackfromthreadnode ( ) and add getter / setter method
updated the @ Ignore annotation in JavascriptEnabledDriverTest . java to include IPHONE and SELENESE to temporarily disable the test due to
refactor FlowBuilder and FlowJobBuilderTests classes to improve code readability and maintainability
updated the ` AttributeResource ` and ` OverlayResourceIndex ` classes to use ` resId ` instead of ` ResName ` to improve resource
refactor ` DefaultDockerClientConfig ` to use a new ` resolveContextTLSFile ` method for better clarity to improve code readability and maintainability
updated JUnit annotations from ` @ After ` to ` @ Before ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to ensure proper setup
refactor type handling in Attr . java and add a new class T6450290 . java with a generic class T6450290
added a new parameter ` log - level ` to ` LoggingFlags ` and implemented a method to set the logging level in ` LoggingOptions ` to
added logging statements to the ` deleteItemsFromDatabase ` method and updated ` deleteItemsFromDatabase ` to use ` Collection ` instead of ` Iterable
added allFilesOption ( ) method to FileActivity , FileDisplayActivity , and updated allFilesOption ( ) method in FileActivity and Preview
added ` forEachOperation ` and ` hasMatching ` methods to ` MutationOperationGroup ` and ` MutationOperationGroup ` classes to mark methods as deprecated
updated the calculation of numPredictiveAppCols based on device type to ensure correct number of apps based on device type
updated the initialization of the String value to use UTF - 8 encoding to ensure proper handling of character encoding in the string
added new classes ` RequestMatchers ` and ` RequestMatchersTests ` and ` RequestMatchersTests ` to handle request matchers to enhance
do n ' t show the text field if the temporary mode be not available
updated the calculation of ` knobAfter ` and ` knobBefore ` values in ` ProgressBar . java ` to ensure correct position
updated the path for external functions . json in PrestoSparkNativeQueryRunnerUtils . java to ensure the correct file path is used
added a native method ` extra _ L1 ` and ` extra _ L3 ` to the ` BruteArgumentMoverHandle ` class to
added a condition to check if the handler is invalid in the gesture state to ensure that gestures are only processed when the handler is invalid
updated layout calculations in DynamicGrid and Workspace classes to use constrained edge values instead of hardcoded values to improve layout consistency and maintainability by using
added a check for the " / robots . txt " file in the redir condition to ensure that the URL is only processed when the re
updated import statements and modified notification messages in JBrowseModule . java and CallHierarchyTopComponent . java to improve code clarity and maintainability by using
updated trySubscribe method parameters from " continue " and " close " to " createWorld " in AdvancedGameSetupScreen . java to improve clarity and
updated null check in UDFOPDivide . java and added a new test class TestUDFOPDivide . java to ensure that the
refactor exception handling in FlowJob and FlowJob classes to improve clarity and consistency to enhance code readability and maintainability
updated FormLogin , LogoutBeanDefinitionParser , LogoutFilter , and LogoutFilter classes to use a matcher builder for authentication processing to ensure proper
added onDestroy ( ) method to ShareActivity , ContributionsActivity , and ContributionsActivity to ensure that the upload service connection is properly
replaced ` thumbNail ` with ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity and consistency in variable naming
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
added a call to set the request timeout in RaftServerConfigKeys . java to ensure that the request timeout is correctly set during RPC operations
updated logging level from error to debug in TsFileResourceManager . java and modified test cases in ResourceManagerTest . java to improve error handling and
added system property setting to MavenModuleLoader to ensure proper handling of system properties during model source loading
added ServerMetrics tracking for readiness checks in multiple classes to improve monitoring of readiness checks in the application
add support for animatedtorch in the animatedtorch .
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when writer is null
added a utility method to retrieve Hive configuration from a directory in multiple test files to improve flexibility and maintainability by utilizing a dedicated utility method
added a new link for Muting Users to the FeaturesActivity to enhance user experience by providing clearer feedback on Muting Users
added a property for " jdk . reflect . useDirectMethodHandle " in System . java to disable direct method handling in the system
hbase - 16446 use steppingsplitpolicy instead of constantsizeregionsplitpolicy in splitonleadingvarcharcolumnspolicy
[ hotfix ] [ yarn ] add environment variable to ship file
updated method calls from ` getWord ( ) ` to ` getSpelling ( ) ` in ` BuildTranscriptHMM . java ` and `
updated JSON string formatting in JsonUtilsTest . java to improve code readability and maintain consistency in formatting
added ` id ` parameter to ` compose ` and set it in ` TimeLineCursorAdapter ` , ` TimelineArrayAdapter ` , and `
added a warning log statement to the MessageRunner class to indicate that the underlying ring buffer data is lost due to reliable topic loss
do n ' t throw ioexception if no class found to analyze in classpath
replaced ` Key ` import with ` PublicKey ` import in ` KeyFetcher . java ` to ensure compatibility with the latest Java security framework
updated the initialization of the ` isIncompatible ` variable in ` DLNAResource . java ` to ensure that the ` isIncompatible ` variable is
updated the method name from Account to AccountCreateContract in RpcApiService . java to improve clarity and consistency in method naming
pdfbox - 4071 : avoid npe when there be no ranges array
[ java ] fix flaky test in activemqmessageconsumer
updated the ` enableOffHeapFormat ` flag from false to true and updated its usage in ` StarTreeIndexSpec ` , ` CommonConstants `
updated the title assignment logic in FeedUpdateService . java to ensure the title starts with a maximum of 2048 characters to improve code readability and
refactor previewPanel initialization in JColorChooser and add a new Test6977726 class in BasicColorChooserUI to improve code readability and
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity for better readability
added null check for reusable bitmap in AndroidTileBitmap . java to avoid potential NullPointerException when reusableBitmap is null
added a new method ` getLayoutParams ( ) ` to the ` FakeView ` class to provide a way to retrieve the view ' s layout parameters
added a check to throw an IllegalStateException if the cursor is already closed to ensure that an IllegalStateException is thrown when the cursor is already closed
pdfbox - 4071 : avoid npe in pdpagedestination when there be no KIDS key .
disable jmsclienttest due to miss @ ignore annotation
added a private ` ts ` field with getter and setter methods to the ` Message ` class to provide access and setter for the ` ts
added a new utility class ` ExceptionMapperUtils ` and refactored ` GenericExceptionMapper ` to utilize it to improve error handling capabilities and
changed the access modifier of the AbstractExecutor class from package - private to public to allow external access to the AbstractExecutor class
[ isochrone ] use pmap instead of request . gethints ( ) .
removed the ` public ` modifier from several test classes in the ` FailureLogAnalyzerTest ` , ` OperatingSystemProvenanceTest ` , and
refactor CSRF attribute handling in PluginServlet to use a dedicated method for setting the CSRF attribute to improve code readability and maintainability by
updated EclipseLoaderPatcherTransplants . java to include a bootstrap flag and modified the shadowClassLoader initialization logic to enhance bootstrap functionality and ensure
rule sheet : add numeric disabled flag to rule sheet
added a conditional check for debug logging before logging the default value in HiveConf . java to ensure that the default value is only logged when debug is
added null checks for axes and buttons in Lwjgl3Controller and updated related logic in Lwjgl3ControllerManager to ensure proper
updated import statements in WeldFactory and WeldFactoryTest from ` cucumber . api . java ` to ` io . cucumber . core . backend
added a null check for the host before saving the port forward in PortForwardListActivity . java to ensure proper handling of the savePortForward method
added SHOULD _ SNAPSHOT _ DATA property and its getter / setter methods to GlobalConfiguration and updated LiquibaseGenerateChangeLogMojo
refactor SyncedFolderObserver to check for null path before creating PersistableBundle to improve code readability and maintainability by reducing duplication
refactor LocationMarshaller to improve code organization to enhance maintainability and readability of the code
refactor touch handling logic in StatusBarTouchController and OtherActivityInputConsumer to improve code readability and maintainability
removed the ` VectorReaderImpl ` interface from the ` VectorReader ` class and updated its implementation to streamline the code and improve maintainability by
replaced ` ArgumentMatchers . any ` with ` Matchers . any ` in multiple test files to align with the latest Mockito version
updated method names from ` getRelativePathName ( ) ` to ` getRelativePath ( ) ` for consistency to improve code readability and maintainability by
refactor SegmentMapper and CompositeTransformer to use RecordReaderConfig instead of RecordReader directly to improve clarity and maintainability of the transform method
added null check for the extractor in ControllerMethodInvoker . java and updated annotations in Param . java to improve robustness by preventing potential NullPointerExceptions
cloudstack - 10224 : fix resource limit for account , domain , and domain
add potion shift event to the inventoryeffectrenderer , close # 244
added a deprecated constant COLD _ READS _ TO _ OMIT _ KEY to the SizeTieredCompactionStrategyOptions class to deprecate
added a call to leech . stop ( ) in ClientTest . java to stop the leech process during the test execution
remove unnecessary conditional check for retry in popmessageprocessor .
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests for a moment
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references accordingly to improve
added a session . setUpgradeRequest ( request ) and a test for the upgrade request in JettyTrackingSocket to ensure proper handling of upgrade requests
added a timeout mechanism to set the timeout value in AndroidImplementation . java to ensure proper handling of timeouts in the application
replaced ` RpcUtils . getUserAccessPermissions ` with ` List < RegistrantAccessPermission > ` in ` GitblitClient . java
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to verify SQL parsing and deparsing for quoted cast
updated assertions in Misc . java to check if a root file is writable and added a method to check if the file is writable to ensure that
added logging for thread group and thread per group in FixedThreadExecutor . java to improve thread management and maintain thread group configuration
added null checks for the field in AbstractChangeGenerator . java to avoid potential NullPointerExceptions when field is null
replaced ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to improve code readability and maintainability by using a more de
refactor animation cancellation logic into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by encapsulating the
added a close method to the DeflaterOutputStream initialization in RegionFile . java to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` that implements a native method to retrieve system properties at early phase Agent _ OnLoad to facilitate
added metadata for ` concreteClassMetadata ` and ` isDeclaredBean ` and updated related logic in ` BeanDefinitionInjectProcessor . java ` to enhance the
[ java ] implement cameracontrol . write ( jmeexporter ) method in cameranode and lightnode
refactor PopupNotificationPanel to use SwingUtilities . getWindowAncestor instead of JWindow to improve code readability and maintainability by centralizing window management
replaced instances of ` NoInstanceException ` with ` InferenceException ` in ` Infer . java ` to streamline exception handling by using a
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the feature value
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` verificationAfterDelay ` method to allow for
added ` onBuild ` and ` executionDriver ` fields to ` ContainerConfig ` , ` Info ` , and ` Info ` classes to enable dynamic
added conditional checks for RTL mode in Toolbar . java and FlowLayout . java to ensure consistent behavior when RTL mode is enabled
added a boolean field ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the return statement to enable position increments to
added a private InternetAddress field to EmailsTest and SystemErrorEmailReportTest classes to ensure that the email address is properly initialized for tests
added a flag ` mTryShareAgain ` to ` FileActivity . java ` to control the behavior of ` mTryShareAgain `
added tty name handling in JansiNativePty . java and modified OSUtils . TTY _ COMMAND logic to use it to improve
refactor byte size handling in BandwidthProcessor to use a variable instead of a hardcoded value to improve code readability and maintainability by
replace ` Awaitility . get ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests . java `
updated API URLs in EaseeBindingConstants . java to use private API endpoints instead of hardcoded ones to improve encapsulation
updated sleep duration from 2 seconds to 3 seconds in KafkaIOIT . java to improve responsiveness by allowing more time for read timeouts
replace allOf with is ( itemName ) in SearchResultMatcher . java to improve code readability and maintainability by reducing duplication
added SSL certificate handling functionality to OkHttp . java to enhance security by ensuring trusted SSL certificates are properly managed
replaced ` mA11yLongClickListener ` with ` buttonView . onButtonLongClick ` in ` NavbarButtonsViewController ` and ` Task
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use it to provide a standardized formula
added null checks for stdout , stderr , and stderr in ShellStep . java to ensure proper handling of null working directory paths
[ hotfix ] [ test ] increase timeout for asyncappendertest
added a new method ` escapeDatabaseObject ` to the ` AbstractDatabase ` class to escape database objects based on their type to enhance the handling of
added a boolean field ` inputChanged ` and modified the logic for determining if the material title is changed to ensure that the MaterialRenameDialog reflects the
added unit tests for the ` StateChange ` method in ` ShadowDisplayTest ` and implemented the ` setState ` method in ` ShadowDisplay ` to
add directinvoked ( ) service interface , add unit test
added handling for GWT key codes in GlobalKeyDispatcherW . java to ensure accurate identification of key codes in the application
updated SQL query construction for pg catalog and conindid in PgDatabaseMetaData . java to ensure compatibility with different server versions of pg _ catalog and
[ java ] fix nullpointerexception in queuechannel . getmessage ( )
refactor ` getPathsFromResource ` method to ` getPathsFromResource ` and update URI handling to improve code readability and maintainability by
added support for monitoring Jenkins nodes in the CollectorServer class to enhance the monitoring of Jenkins nodes based on application context
replaced ` getAttribute ` with ` resolveAttribute ` in ` HeadersBeanDefinitionParser . java ` and added a ` resolveAttribute ` method in ` HttpHeadersConfig
[ iotdb - 4272 ] fix a bug in ProtobufLogReader when the last byte be negative .
refactor destroyRegistries ( ) and destroyMetadataReports ( ) calls in DefaultApplicationDeployer and NacosRegistry classes to improve code
camel - mybatis : switch / cases indentation fix for switch / cases indentation
refactor GoAwayGenerator and GoAwayBodyParser to use a dedicated writeStatusCode method to improve code readability and maintainability by central
updated AuditEvent initialization and added assertions in AuditEventTests . java to improve code readability and maintainability by reducing duplication
added checks for rounding errors in the Interpolation class to ensure proper handling of floating - point values
updated the path construction in ForgeWorldEdit . java from " defaults / " to " / defaults / " to ensure the correct path is used
refactor code to use a variable for the dx variable to improve readability and maintainability of the code
added equality checks for PointRangeQuery instances in TestPointQueries . java to ensure correct comparison of PointRangeQuery instances
hbase - 16464 testhfilecleaner should use hfile _ archived _ hfile _ region instead of hfile _ archived
[ java ] do n ' t show the file label if it ' s not the file name .
removed the throw statement from JedisClusterCommand . java to simplify the code by eliminating unnecessary exception handling
[ hotfix ] [ streaming ] set chainingstrategy to always in rowtimeminibatchasgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to ensure consistent behavior across different filter
added benchmark methods for handling different data types in QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapReadSequentialKey
added a new HashMap instance for G _ SCH _ B and initialized G _ SCH _ B in HybridPlotWorld . java to improve
added a check for empty fields and refactored method name handling in GroovyEngine . java to improve robustness by ensuring only valid fields are processed
do n ' t set drawable to false in deprecate number . patch by jbellis
added SERVER _ READ _ SOCKET _ TIMEOUT and SERVER _ TCP _ KEEP _ AL _ KEEP _ ALIVE configuration to
corrected the spelling of " isRenameEmptyFiles " to " isRenameEmptyFiles " in FileRenameAction . java to improve code read
no effective change - remove unnecessary log statement
refactor RealtimeSegmentRelocator to use lambda expressions and improve code readability to enhance readability and maintainability of the code
do n ' t set success flag to true in create vpc command by admin
updated windowAlpha calculation in WindowTransformSwipeHandler . java and modified condition in FloatingIconView . java to ensure windowAlpha is non - negative
updated schema schema in SecurityNamespaceHandler . java to include Spring Security 4 to ensure compatibility with the latest Spring Security version
renamed multiple classes related to ProtoFluentAssertion to improve clarity and maintainability of the codebase
added ' final ' modifier to several fields in DisruptorProviderManage , QueueConsumer , and DisruptorProvider classes to ensure immutability
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to extend ` GenericUDF
updated regex pattern in LogMessageWaitStrategy from " ready " to " ( ? s ) " and added parameterized tests in LogMessageWaitStrategyTest
replaced the ` logger ` variable with ` logger ` for consistency to improve code readability and maintainability by using a more descriptive variable name
rename ` updatePurgedShardNodes ` and ` deletePurgedShardNodes ` methods to ` deletePurgedShardNodes ` across multiple files to
added version 17 - preview to JavaLanguageHandler in JavaLanguageModule . java to ensure compatibility with the latest Java language features
[ java ] increase lossiness factor in fileappenderresiliencetest
[ hotfix ] [ runtime ] fix checkstyle violation in volatilereadnode
added a new method ` getSteps ( ) ` to return an unmodifiable list of steps instead of a single step to enhance encapsulation and
removed ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and ` TronJsonRpcImpl ` to
refactor currency pair creation logic in BitstampAdapters . java to improve code readability and maintainability
use basetimeunit instead of timeunit for longtasktimer . duration ( )
[ hotfix ] [ table - planner ] add check for hashpartitioner in reducebykeytranslator
updated color handling in HostEditorActivity to use CharSequence instead of string arrays to improve code readability and maintainability by using a more descriptive
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update related methods to use ` SystemProperties ` instead of ` IncompatibleDatabase
added a constant ` MAX _ TWEETS _ IN _ CONSATION ` and updated the condition to check for the size of reps
updated refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to increase refresh interval for improved performance
added a new test method ` getsPersistedByteSizeCorrectlyForFullyAckedTailPages ` in ` Queue . java ` to
fix a typo in the getimplementationtitle ( ) method .
refactor the grow method into a separate method ` grow ` to improve code readability and maintainability by reducing duplication
removed unused import of DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method ` getSubmittedFileName ( ) ` to retrieve the submitted file name in ` AttachmentHttpBinding . java ` to provide access to the
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure proper loading of data in the UI
updated the ` instrumentJar ` method to handle ` ClassNotFoundException ` and modified the ` instrumentJar ` method to handle ` NegativeArraySizeException
added a method to check if a partition is in a flush state in HashAggTemplate . java to ensure that an out - of - memory error
updated method calls from ` getDocStoreSegment ( ) ` to ` getDocStoreSegment ( ) ` in ` IndexWriter . java ` to
added a default name format for SAML name ID formats in SamlProfileSamlNameIdBuilder . java to ensure compatibility with specific name formats in SAML
setRedirect ( false ) to false in ChangePasswordPage . java to handle password change failures gracefully
removed unnecessary closing brace in Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time
deleted the FontScalingTest . java file to remove unused code to streamline the project
added filtering logic for begin and end dates in RRD4jPersistenceService . java to ensure proper handling of date and end dates based on filter
added checks to return early if numVectors is less than zero in GenericUDAFComputeStats . java to ensure proper handling of negative vector
updated JUnit imports from ` org . junit . Assert ` to ` org . junit . jupiter . api ` in ` ExecutableRef
added null checks before setting the view and glass pane in JLayer . java and created a new bug6994419 . java file with a
camel - 14284 : camel - wiretap : add wiretap expression to the senddynamicprocessor
changed the access modifier of setAction from public to protected to allow subclasses to access the setAction method from other classes
add topn option for planner . enable _ topn
[ java ] fix test failure on window
fixed - http : / / issues . apache . org / activemq / browse / amq - 1232 - add queued flag to redisconnection
replaced ` ByteArrayOutputStream ` with ` FileOutputStream ` and updated ` getConfVarURL ` method in ` HiveConf . java ` to improve configuration
updated the method call from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` in ` BaseModelLoader . java
updated the onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to improve user experience by providing a clearer menu item selection
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
add hawtio . dirname to the home directory
added a condition to return SINGLE _ SPACE instead of SINGLE _ SPACE in Space . java to ensure proper handling of whitespace in the
updated the ` mClosed ` and ` mNativeDict ` fields to be volatile in multiple dictionary classes to ensure that the dictionary ' s state is
removed printStackTrace ( ) method from ContextHandler . java to streamline error handling by eliminating unnecessary stack traces
moved CustomItemDropTest to a new integration test class and modified CustomItemDropTest to extend BaseTest to enhance test coverage and ensure proper functionality
added functionality to handle if - exists partitions in DDLTask , DDLSemanticAnalyzer , and AddPartitionDesc classes to enhance control over partition existence
[ hotfix ] [ iotdb - 464 ] fix bytebuffer leak in nfssecondarystorageresource
[ java ] remove redundant call to controlrequeststreamid ( ) in echoservicenode
add support for spatial _ operators in wfs capability
added import for LuceneTestCase and annotated BasicDistributedZkTest with @ LuceneTestCase . AwaitsFix annotation to mark the test as awaits
refactor conditional checks in Http11InputBuffer . java for better readability to improve code clarity and maintainability by reducing duplication
change the default value of isIngressExclusive from true to false to disable the exclusive state of the cluster
updated HBaseStorageHandler to use an array of cache keys instead of hardcoded values to improve code readability and maintainability by reducing redundancy
added methods to track the number of running records in JSONRecordReader to improve clarity and functionality of record counting logic
added year matching logic to the merged items in CategorizationFragment . java to improve item processing efficiency by avoiding unnecessary processing
updated drawColor method calls to include Mode . CLEAR in CacheableTextView , CellLayout , and HolographicOutlineHelper to ensure consistent color drawing
added a check for OpenGL version in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering
set the context of the ActionContext to null in BackgroundProcess . java to ensure proper context management and prevent potential memory leaks
updated the ` getInsertIntoTable ` method to accept a ` fullName ` parameter and modified related logic in ` BaseSemanticAnalyzer ` and ` Q
added a connection timeout setting in TestConnections . java and changed the count variable to be final in StubConnection . java to ensure that the count is
added multiple assertions to the ` approx _ percentile ` and ` approx _ percentile ` methods in ` TestHiveAggregationQueries `
updated DEFAULT _ IDLE _ TIMEOUT from Duration . ZERO to Duration . ofSeconds ( 30 ) and modified idleTimeout handling in WebSocketChannel .
updated the method call to use user ' s toPlatformAccount ( ) instead of the account name to ensure compatibility with the user ' s platform account
refactor Inet6Address to use generics and improve type safety to enhance code readability and maintainability by reducing redundancy
refactor PlaybackControlView by replacing ` disableView ` and ` enableView ` methods with ` setButton ` methods to improve code clarity and
updated method parameters from ` isPresent ` to ` isPresent ` in ` Session . java ` and ` Token . java ` to improve clarity and consistency in
changed the method from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java
updated the UseExceptionProbability constant from true to ____ to ensure compatibility with the latest GraalOptions class
updated the way newPlateColor is constructed based on the icon ' s theme to enhance visual consistency and improve visual consistency in the application
[ guacamole - 116 ] fix user . touser ( ) to pass password to user .
updated aliases from " center " to " centre " in Middle . java to ensure consistent alias usage across the application
added import for DirectUpload and changed the access modifier of DirectUpload class from package - private to public to allow external access to the DirectUpload class
added space adjustments for left and right axis in BarChartActivity , BarLineChartBase , and YAxisRenderer classes to ensure accurate visualization of legend
added support for Java ABI classes in AndroidLibraryDescription and JavaLibraryDescription to ensure compatibility with specific Java architectures
added a new field ` operationEventStatusType ` and modified the ` services ` list in ` CompositeHubService ` to ensure proper handling of operation
added debug output for annotation processing in DexAnnotation . java to enhance debugging capabilities by providing clearer diagnostics for annotations
[ java ] use @ setup and @ teardown instead of @ startbundle and @ finishbundle
updated the initialization of the ProcessBuilder to include the classpath parameter to improve clarity and maintainability of the process creation process
updated documentLoader loading logic to handle both Android and Android package names to ensure consistent file path handling across different operating systems
[ hotfix ] [ table - common ] fix checkstyle violation in dataset
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable tests that are not ready for execution
updated error message formatting in ShouldHaveMessage . java and added a new test method in ShouldHaveMessage _ create _ Test . java to improve error
fixed - http : / / issues . apache . org / jira / browse / amq - 4237 - jcache - jcache .
[ activiti ] reduce log level when the command context be already claim .
added a semicolon to the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
fix entitypropertiespacket to use basevalue instead of maxvalue
use thinghandlerhelper instead of thingstatus in audiosink . playnotificationsounduri .
increased countDownLatch . await timeouts from 500 milliseconds to 5 seconds in multiple test classes to allow more time for test execution to complete
changed log level from info to debug in LightThingHandler . java to improve logging clarity by using a more descriptive variable name
[ flink - 18135 ] [ table - planner - jbang ] make asyncjobmanagerimpl thread pool size configurable
updated import statements and modified exception message formatting in Reporter . java and ReturnsSmartNulls . java to improve clarity and consistency in error messages
updated the parameter name from ` dataFrame ` to ` DataFrame ` in the ` generate ` method to simplify the method signature and improve code readability
refactor module - info . java files for consistency and clarity to improve maintainability and readability of the module documentation
added a check for non - empty column names in OrcPageSourceFactory and implemented a test for it in TestHiveFileFormats to
add mixplay call to engine . mixplay ( input , amp )
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated the calculation of ` firstConfirmedCenter . getX ( ) ` to ` firstConfirmedCenter . getX ( ) ` in multiple test files
removed redundant checks for ` leadingIncludePaths ` in ` PreprocessorDelegate . java ` to simplify the code and improve readability
modified the test method name from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` to
add ` ` find ' ' and ` ` find ' ' to the list of search criteria
[ java ] set samplerate to 48000 instead of 48000 in defaultaudiosink .
added formula getter and setter methods to the XSSFName class and updated its usage in XSSFName to improve code readability and maintainability by
updated the calculation of the target value from 60000 to 90000 in HighDimensionsTest . java to improve accuracy of the target value
updated the condition in SimpleTypeGT to check for non - empty constraints and added a new test method in GMLParserTest to ensure that the
added a new test class ` ClassPathXmlJobRegistryContextTests ` to verify job retrieval functionality to ensure that the job registry correctly handles job names
change the data type of mHistoricTimes from float to long in MotionPauseDetector . java to ensure compatibility with larger data types in the application
camel - 12320 - camel - restlet : deprecate restletproducergetinvalid ( # 12320 )
camel - 14284 : camel - log - log : remove showout property from log endpoint builder
refactor the ` submitTraceEvent ` method to use a dedicated ` writeChromeTraceMetadataEvent ` method to improve code readability and maintainability
modified the order handling logic in HuobiAdapters . java to include status checks for canceled and REJECTED orders to ensure proper order
added pixel offset calculations and refactored image layout logic in LCMSImageLayout . java to improve image layout accuracy and ensure correct pixel offsets are
refactor timestamp handling in Event . java and JrubyEventExtLibrary . java to improve clarity and consistency to enhance code readability and maintainability
added a condition to return the resource if the alias does not end with " / " in ContextHandler and created a corresponding test in WebAppContext
corrected the spelling of " NameHandle " in ScriptFunctionImpl . java to improve code readability and maintain consistency in naming conventions
updated variable names from ` amt ` to ` scrollAmount ` and modified conditional logic in ` JEditTextArea . java ` to improve clarity and
[ java ] fix npe in graphdecoder when callerloopscope be null .
test : migrate sniperprettyprinterjavaxtest from junit4 to junit4
refactor URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
added entity annotations to the Mail class to enhance entity management for better entity management
updated default values in Main . java from false to true and modified the command parameter from " Defaults to false " to " Defaults to true
added getter methods for metaDataBuffer , valuesBuffer , and valuesBuffer in CountersReader . java to provide access to metaDataBuffer , valuesBuffer ,
added a boolean flag ` hasReadNonEmptyFile ` to handle non - empty files in ` ScanBatch . java ` to ensure proper handling of
added a check for ` internalCustomName ( ) ` before invoking ` failureStrategy . failComparing ( ) ` in ` StringSubject `
added a regex pattern for the LIB _ PATTERN in LibUtils . java and modified the conditional check in LibUtils . java to improve code
replaced ` ClassNotFoundException ` with ` Exception ` in ` JrtJavaBasePackages . java ` and ` PackageHelper . java ` to improve error
hbase - 16464 add a safe mode check to masterfilesystem to ensure that file system be in safe mode
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name to improve clarity of error messages for better debugging
do n ' t need to clone plugin in defaultplugincache .
do n ' t dispatch the contact status event if there be no contact .
[ flink - 24424 ] [ test ] remove unused method from servletdetails
added a new file ` AccountInfoFetchIntegration . java ` to test the fetching of account information to ensure that the fetching account information is
added mouseWheel method to VDUInput and vt320 classes and modified mouse wheel handling in TerminalView to improve mouse wheel functionality and ensure
updated library path setting logic in Natives . java to ensure correct library path is used when needJInput is true
( chore ) camel - ebean - deploy : remove deprecate @ columnhstore annotation
add skin _ SKIN _ FLAGS setting to the metadata index to ensure proper handling of skin _ SKIN _ FLAGS in the metadata
updated LoadBalancerWithServiceTests to use SLF4J logging instead of RequestFieldMatcher to improve code readability and maintainability by using SLF
refactored code to improve readability and maintainability to enhance code readability and maintainability
replaced System . getProperty ( " os . version " ) with AccessController . doPrivileged ( new GetPropertyAction ( ) ) in JRSUIUtils
added a new constant for the FREEMARKER _ CONFIGURATION _ FILE _ SUFFIX and updated its usage in TemplateEngineFreemarker . java to
[ java ] fix indexoutofboundsexception in selectmessagequeuebyhash . select ( )
refactor ToolbarPanel to use Layout . AnimationCallback for improved animation handling to enhance code readability and maintainability by encapsulating animation
refactor method call from ` bindConditionally ` to ` bind ` in ` StyledTextAreaVisual . java ` to improve code readability
added ` declaredPlatforms ` and ` cxxBuckConfig ` to the ` PrebuiltAppleFramework ` and ` CxxGenrule
replaced SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator and PartTreeJpaQueryExecution classes to improve code clarity and maintainability by
added null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added a check for an array type in DataUtilities and implemented a test for default value arrays in DataUtilitiesTest to ensure proper handling of array types
http : / / issues . apache . org / jira / browse / amq - 4071 - fix npe in sslcontextfactory
updated assertions in TestFSTableDescriptors . java to check if the cachehits is greater than or equal to ensure that the cachehits is
do n ' t delete webdriver cookie by path
added a boolean field ` mHasEndedLauncherTransition ` and modified the logic in ` AbsSwipeUpHandler ` and ` RecentsView `
updated HTML formatting in HTMLListWriter . java and HTMLWriter . java to ensure proper character encoding for HTML titles
refactor IndexReader class implementation to improve code readability and maintainability
increased the maximum size of stats key prefix length from 200 to 150 and updated the stats key prefix length calculation to improve the accuracy of stats key prefix
updated the method call from ` add ` to ` add ` in ` BasicComboBoxUI . java ` and added a new class ` bug633
refactor TestRandomAccessBuffer class for improved performance to enhance performance and maintainability of buffer operations
refactor UserInfoActivity to improve code organization to enhance maintainability and readability of the code
added imports for HomeContentProvider and updated notifications in multiple service classes to ensure that the HomeContentProvider is notified only when the content URI is
added methods to invalidate pressed and focused backgrounds in BubbleTextView and Launcher classes to improve user experience by ensuring pressed or focused backgrounds are
updated the ` getFallbackResponse ` method to include an ` Throwable error ` parameter across multiple classes to enhance error handling by providing a more specific error
removed conditional check for env . _ compile _ only in DumpBytecode . java to simplify the code and improve readability
added null checks for tags in ChannelUri . java to avoid potential NullPointerExceptions when accessing tags
updated JAVA _ REGEX _ SPECIALS in RegexpUtil . java and added test cases in TestSqlPatterns . java to ensure proper
added action bar title handling in FileActivity and updated output state in FileDisplayActivity to improve user experience by providing a clearer action bar title when
replaced ` Iterables . getOnlyElement ( ) ` with ` Iterables . getLast ( convertedElements ) ` in ` PythonDslProjectBuild
updated the schedule time from minute to 0 in CleaningService . java to allow for more time for cleaning operations
refactor TransactionalValidationListener to improve table partition validation logic to enhance robustness by ensuring partitioned partitions are validated correctly
refactor ReplicationHandler and SnapPuller classes to improve code readability and maintainability
changed the data type of generatedKey from int to long in ShadowSQLiteDatabase . java and added new test cases in SQLiteDatabaseTest . java to
removed unnecessary whitespace in the computeIfAbsent method call to improve code readability and maintainability
updated test assertions to include " failed to failed to " failed to " failed to " to " failed to " failed to " to " failed to
camel - 14224 : camel - http - use 10ms instead of 10ms to reduce thread pool size .
deleted the HttpTestAccount001 . java file to remove unused code to streamline the codebase
updated exception handling to catch Throwable instead of Exception to improve error handling and ensure proper resource management
camel - 14247 : camel - cxf : do n ' t use cxf attachment when cxf message be not set
added a case for ' ~ ' in ClientUtils . java to handle the case of ' ~ ' in the ClientUtils class
camel - 14284 : camel - slack - add a default delay for the next poll in camel - slack
fix block harvesting when block be drop
updated layout parameters from 4 * ( 3 * , 3 * , 3 * , 3 * , 3 * , 3 * , 3 * , 3
added a new file ` bug8057791 . java ` that implements a visual selection of a JList in a Java Java file to demonstrate the
updated conditional logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and maintainability of the code
refactor ` RunnerBuilder ` to use ` websocketMethodsFactory ` instead of ` engineMethods ` to improve code readability and maintainability by
replace length check with null check for ' to ' in ComposeActivity . java to improve robustness by preventing potential NullPointerExceptions
updated ParquetFixedWidthDictionaryReaders and ParquetFixedWidthDictionaryReaders to include a conditional check for dictionary value reading to ensure proper handling
refactor conditional checks in PortraitPagedViewHandler . java for better clarity and consistency to improve code readability and maintainability by standardizing
added a new annotation ` Log ` and ` LogInterceptor ` classes for logging point - cut calls to the ` AOP ` annotation to provide a
updated the string concatenation logic in QueuedThreadPool . java to include a check for the length of trace before adding it to the dump to ensure accurate
refactor methods in CacheGenerator and CacheProvider to use ` implementation ` instead of ` ReferenceType ` for consistency to improve code readability and maintain
updated the method call from ` createReferenceMap ` to ` createReferenceMap ` to include ` totalFrameSize ( ) ` to ensure accurate reference
refactor TypesafeConfigurator to improve code organization to enhance maintainability and readability of the code
added a new test class CamelGraphqlTest to verify the functionality of the karaf component to ensure that the karaf component is correctly
added two new methods , bug1 , bug2 , bug3 , and bug3 in RFE2891944 . java to provide a
removed the use of URLEncoder for UTF - 8 encoding in HttpClientIntroductionAdvice . java to simplify the code and improve readability by eliminating unnecessary
refactor the ` unsupportedPlatformTool ` method to a ` UnsupportedPlatformTool ` class to improve code readability and maintainability by encaps
updated the calculation of ` loopCount ` to use ` int ` instead of ` double ` and updated the log message to use ` TimeUnit ` for
added a size ( ) method to the FlightConfiguration class and implemented it in FlightConfigurationImpl to provide a way to retrieve the size of the configuration
fix addressmanagertest and abstractaddressmanagertest to work with java 8
updated layout specifications in VLCVideo . java and added additional parameters in FormLayoutUtil . java to improve layout consistency and maintainability of the
updated URLs from " bisq / bisq " to " https : / / github . com / bitsquare / issues " across multiple files
updated the AUTHORITY string from " com . ker . android . talon . provider " to " com . ker . android .
updated directory path from " user . home " to " user . xml " in MavenCli and MBoot classes to ensure consistent path formatting and improve
added a call to glBindBuffer ( GL20 . GL _ ARRAY _ BUFFER ) in VertexBufferObjectWithVAO . java to
refactor ServerHttpSecurity class implementation to improve code readability and maintainability
added JUnit ' s @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to disable tests that are not supported
added default headers handling in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility and improve header management
add userpasswordnotvalidexception to improve error message
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the project
updated signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to simplify key decoding and improve code readability
replaced ` CascadedStyle ` with ` CSSName ` for handling float values in ` FloatUtil . java ` to improve code readability and
added import for PlanningEntity , PlanningFactCollectionProperty , and ProblemFactProperty in multiple Java files to ensure compatibility with the new project structure
refactor default headers retrieval to use a dedicated method for better encapsulation to improve code readability and maintainability by encapsulating
replace ` enc ` with ` charset ` in ` ProxyServer ` , ` Realm ` , and ` Realm ` classes to improve clarity and
added a method ` getJobId ( ) ` to ` StepContext ` to retrieve the job ID from ` StepExecution ` to ensure that the job
removed unnecessary ` compareTo ` calls in ` ExpandableUploadListAdapter . java ` and ` FileStorageUtils . java ` to simplify comparison logic and
added debug logging for HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity and ensure proper logging
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials to improve clarity and maintainability of the code
changed the visibility of the WingDings class from final to public to allow access to the WingDings class from other packages
added a check for the owner pub key before processing filter data in FilterManager . java to ensure filter data is only removed when the owner key is
added a static method ` wrap ` in ` BCPGInputStream ` and refactored the ` wrap ` method in ` PGPKeyRing
replace DataOutputStream with BufferedOutputStream in MinimalLockingWriteAheadLog . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testSelectAll ` to ` JdbcDriver2 ` and modified column name handling in ` HiveBaseResultSet ` to ensure
refactor FocusTransitionTest . java for improved clarity to enhance code readability and maintainability
updated import statement from ` org . gwtproject . core . client . GWT ` to ` com . google . gwt . core . client .
added a check for ` sourceTask ` before creating a ` JobClient ` instance in ` CounterStatsAggregator . java ` to ensure that ` Job
updated the initialization of the _Listener variable from ` _Listener ` to ` _Listener ` in ` HttpInput . java ` to ensure that the
added color change listener and refactored color handling in AppearancePanel . java to improve code readability and maintainability by encapsulating
changed the parameter from false to hidden in the constructor of TaskHelper from false to hidden to ensure the constructor reflects the intended functionality of the task
make failover test use exponentialbackoff = false
pdfbox - 4071 : close resource in case of deadlock
added import statement for DefaultParameterHandler in BoundSql , SqlSource , and LanguageDriver classes to enable dynamic parameter handling in the scripting framework
add loop depth check to LinearScanWalker . java to ensure loop depth is within the specified loop depth
[ micronaut ] add micronaut ast builder for groovy script
refactor cursor closure logic into a separate method ` closeInternally ( ) ` in ` PgResultSet ` and ` PgStatement ` to
change serviceAdvisorType from null to PYTHON in ServiceInfo . java to ensure proper service advisor type is set for improved flexibility
refactor resolver handling in GenericDatumReader to use a ThreadLocal for thread safety to improve thread safety and prevent potential null pointer exceptions
updated the ` Path ` constructor to accept a ` List ` instead of a ` Collection ` and modified related methods to use ` ArrayList < String >
replaced ` new byte [ 512 ] new byte [ ] ` with ` generateRandomBytes ( memo ) ` in ` SendCoinShieldTest . java
added a new method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to provide a way to set the personalisation
removed redundant conditional checks for argCount in CodeGenerator . java to streamline code logic for better readability
removed the percent parameter from the scroll method calls in AllApps , BaseOverview , and LauncherInstrumentation classes to simplify the scroll method and improve
changed the access modifier of the pointer variable from private to public and added reset methods to the FlatRecordReader class to allow external access to the pointer
rename ContentDigestHistory to BdbContentDigestHistory across multiple files to improve clarity and consistency in naming conventions
replaced specific imports with a wildcard import and modified type handling logic in CastExpression . java to improve code readability and maintainability by using a
refactor accepts handling in AbstractResource to use a boolean variable for better readability to improve code readability and maintainability by reducing duplication
added a new boolean parameter ` false ` in ` TaskView . java ` to disable the functionality related to task view functionality
added a method ` isAutoIncrement ( ) ` to ` CreateTableChange ` and implemented the ` isAutoIncrement ( ) ` method in `
updated the errorText field to an empty string to provide a clearer error message when a command fails due to Internal Server Error
updated imports in LocalManagementTest . java and modified the argument handling in LocalManagementTest . java to ensure compatibility with the latest JDK
replaced ` add ` with ` push ` in ` BasicEventSimulationEngine . java ` to improve code readability and maintainability
added AJP connector creation in GitBlitServer . java to allow customizable AJP port configuration for ports
added type conversion logic in TransTypes . java and created a new Intersection03 . java file with a test class Intersection03 . java to
rename EmbeddingTest class to EmbeddingITest to improve clarity and consistency in naming conventions
added a native method ` startToolkitThread ( Runnable thread ) ` and modified thread creation logic in ` WToolkit . java ` to ensure that the
add option to compress the bundle content of parallel bundle in parallel .
added visibility checks for surface and platform in PApplet . java to ensure that surfaces are only visible when the platform is Windows
updated the temporary directory name from " RecordTransformationTest " to " getClass ( ) . getName ( ) ` in AbstractRecordExtractorTest . java to
[ java ] add http enable parameter for fullnode , soliditynode , fullnode , and soliditynode
added a new property for the service in GoogleCloudFirestoreTicketDocument and updated related methods in GoogleCloudFirestoreTicketRegistry to enhance ticket counting
refactor Generate class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ json ] remove nullableparameters = true from scalarfunction .
added a new boolean flag ` DOTS _ ONLY ` and modified the width calculation logic in ` BadgeRenderer ` and ` IconPalette `
removed the ` final ` modifier from the ` getConfiguration ` method in ` FreemarkerManager . java ` to improve code readability and maintainability
added a test method ` testInvalidExcludedPackageNamePatterns ` to ` OgnlUtilTest . java ` to ensure that an exception is thrown when
updated device UDID retrieval logic in AppleTest . java and added sdkName parameter in IdbRunTestsStep . java to ensure compatibility with
replaced ` InvocationType . CONSUMER ` with ` ProduceProcessorManager . DEFAULT _ PROCESSOR ` in ` DefaultHttpClientFilter . java
added null checks for mScript before calling contextBindRootScript in AllAppsView . java to avoid potential NullPointerExceptions when the script is
added a boolean flag ` TEXT _ BURN ` and modified conditional checks in ` Utilities . java ` to ensure that shadow layer is only applied when
added Teardown methods to the TestColumnAccess and TestReadEntityDirect classes to ensure proper handling of tables during the test execution
added a method call to retrieve the parser from the parser in SecurityNamespaceHandler . java to ensure the parser is retrieved from the current parser
added a new test method ` fastpath ` in ` BoundedLocalCache ` and created a corresponding test in ` BoundedLocalCacheTest `
updated ` RawConnection ` and ` FrameBytes ` interfaces to extend WebSocketConnection ` and added flushing functionality in ` WebSocketAsyncConnection ` to improve
added unit tests for all assertions in SoftAssertionsPerfTest to ensure correct behavior of assertions in the SoftAssertionsPerfTest class
added a new constant ` TEST _ FAILURES _ EXIT _ CODE ` and modified the ` assertExitCode ` method in ` PythonRunTests
refactor glyph rendering logic in GlyphLayout . java to improve readability and maintainability of the code
updated test cases in TestBooleanRewrites to use Java Streams for score documents to improve code readability and maintainability by reducing duplication
changed the method from ` getEnclosingClass ( ) ` to ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java ` to ensure the correct
removed unnecessary type check for PlayerSocketConnection in UpdateManager . java and added flush method in PlayerConnection . java to simplify connection handling and improve code
added a boolean flag ` mStarted ` and modified ` OnDrawListener ` usage in ` Launcher ` and ` LauncherAnimUtils ` to
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to include wildcard imports and added a check for NOT _ APPLICABLE to ensure proper
changed the default value of the boolean value from false to true in RendererConfiguration . java to enable media parsing by default
do n ' t send interceptor type to aop proxy writer if the method be not a method .
added assertions to verify the existence of the warehouse directory and partition in FolderPermissionBase . java to ensure proper permission checks for the warehouse directory and partition
do n ' t login provider if duetoregistrationstate be n ' t set
updated randomness calculation in PastelColor . java to use a dynamic colorBase variable to improve randomness by using the correct color base
refactor ScriptEngineFactory to improve code organization to enhance maintainability and readability of the code
refactor image handling in HolographicViewHelper to use a new method to improve code readability and maintainability by encapsulating bitmap creation
updated request method handling in CloudClient . java to handle null request methods to improve robustness by preventing null pointer exceptions
refactor multiwordpreprocessor to use phrase yield instead of tag
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
added a check for HivePassThroughOutputFormat and modified the class loading logic in Table . java to improve compatibility with Hive ' s passthetic output
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated the condition in DOMBuilder to check if the length is less than or equal to the start value to ensure correct handling of negative length values
updated method calls to use HierarchicalUndirectedGraph instead of ConnectedComponentUI in multiple UI classes to improve clarity and maintainability of the code
camel - 14284 : camel - translate2 - add verification error for unsupported service
added a new file ` TestClass . java ` implementing ` InterfaceWithStaticAndDefaultMethods ` and ` PublicStaticInterfaceMethodHandling ` to provide a
camel - 15224 : add support for password property placeholders in defaultkeyselector
reformatted code for better readability in LogResolverBean . java to improve code readability and maintainability
refactor multiple Java classes to improve code organization and readability to enhance maintainability and readability of the codebase
updated JGit version from " JGit 1.0 . 0 ( 2011060707 - r ) " to " 20110915100 - r "
refactor HttpClientIntroductionAdvice to use the clientKey variable instead of a hardcoded value to improve code readability and maintainability by
added a TransformerParser to the IntegrationNamespaceHandler and created TransformerContext and TransformerContextTests classes to enhance transformer handling capabilities and improve test coverage for transformer
updated BACK _ FACTOR and REWIND _ TIME constants in ResumeObj . java to improve accuracy of playback duration calculations
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` , ` JavaSEPort ` , and ` JavaSEPort
updated usage string formatting in UtilityCommands . java and modified permission handling in DocumentationPrinter . java to improve readability and maintainability of command usage
updated the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming conventions
refactor ` setSeqFiles ` and ` setUnseqFiles ` methods in ` CrossSpaceCompactionResource ` and ` RewriteCrossSpaceCompaction
removed redundant @ Override annotations in Observation . java to improve code clarity and maintainability
updated conditional checks and logging statements in ProjectPropertiesModelImpl . java to improve code readability and maintainability by reducing duplication
fix race condition in abstractsootfieldref . getfields ( )
refactor elasticmeterregistry to use elasticnamingconventiontags instead of tag
added addListener , currentUnits , and currentUnits methods to IController and updated related classes to use IController instead of AbstractController to enhance functionality and
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to validate rendering behavior to ensure that the rendering process correctly
replaced System . out . println with TTY . println in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to simplify code and
refactor multiple Java classes to improve code organization and readability to enhance maintainability and readability of the codebase
update conditional check from ` frameLength = = 0 ` to ` frameLength < = 0 ` to ensure that frameLength is less than or equal
added initialization of zeroValue in IntFloatMap and IntIntMap classes and updated return statements in IntFloatMap and IntIntMap to ensure proper
refactor icon setting logic in ImageDownloadService to use a thread - safe method to improve code readability and maintainability by reducing duplication
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerExceptions when demand is null
removed the native method ` hasNextSibling ( ) ` from multiple node classes and updated the return statement in ` IeNavigator ` to streamline the
fixed - http : / / issues . apache . org / jira / browse / amq - 4271 - fix npe in redisdistribute
added logging statements for mobFileCache enabled and evictPeriods in MobFileCache . java to improve clarity of log messages for better debugging and
refactor ColConvCCMTest . java for improved clarity to enhance code readability and maintainability
refactor the initialization of ` target ` and ` allowCovariantReturns ` to use ` allowCovariantReturns ` instead of ` target ` to
pdfbox - 4071 : fix type safety issue in pdftextstripperbyarea
replaced Float . asFloat ( ) with String . asString ( ) in Json . java and added a new X class for JSON serialization to improve
added a return statement to the GenericFileConsumer class to ensure proper handling of file operations
added a Runnable to invoke the allInvoked ( ) method in a EventQueue . invokeLater ( ) to ensure proper execution of the allInvoked (
corrected a typo in the variable name from ` getMaxBinaryMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` to ensure
corrected the calculation of steeringValue in multiple test files to ensure correct processing of steeringValue values
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve code readability and maintainability
updated JdbcSerDe to utilize LocalDate and LocalDateTime for date conversions to improve date handling accuracy and ensure accurate date conversions
updated the version from 2 to 3 in ParseData . java and modified the metadata handling logic in ParseData . java to ensure compatibility with different version
refactor FlywayAutoConfiguration to use ConditionalOnBean and add custom FlywayJpaDependencyConfiguration to improve dependency management and ensure proper
added sorted ( ) method to ClassesImpl . java to ensure that the classes are sorted before use
added a method to retrieve the current state in LauncherStateManager and modified the waitForLauncherCondition method in AbstractLauncherUiTest to improve state management
refactor SharedInformer class to improve code organization to enhance maintainability and readability of the code
refactor scope invocation logic in TestCloseScope0 . java for improved clarity to enhance code readability and maintainability by using a more descript
increased test timeout from 500 , 500 , false to 5000 in AdaptServerSocket . java to allow more time for the test to complete successfully
refactor CaptchaChannelProcessorTests for improved clarity to enhance code readability and maintainability
added a condition to update a collection based on the owner of a collection in MetadataImport . java to ensure that the collection is only updated when the
added retry logic to limit the number of save properties in the registry cache to 3 to ensure that the registry cache file does not exceed the maximum retry
replaced ` mergeDirectory ` with ` directory ` in the ` TrackingDirectoryWrapper ` initialization to ensure the correct directory is used for tracking tracking
pmd : add test for unusedimportsrule
added validation for inserting a bucketed Iceberg table in HiveIcebergStorageHandler and implemented validation in IcebergTableUtil to ensure that
updated SAML configuration assertions and added IdentityZone retrieval in BootstrapTests . java to ensure correct validation of SAML configurations for legacy SAML keys
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` in ` Excluder . java ` to improve
changed the access modifier of the getAddressVector method from ` theAddressie ` to ` addressees ` in ` MailerModel . java ` to
removed WAITING _ FOR _ LINE _ COMMENT and WAITING _ TO _ LEAVE _ BLOCK _ COMMENT from comments
added IOException handling to the ` release ( ) ` method in ` IndexWriter ` , ` Lock ` , and ` NativeFSLockFactory ` classes
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to align with the new package structure for
added a conditional check for non - unary operators before transforming operations in SpelExpressionTransformer , LiteralNode , and OperatorNode classes to ensure that
updated ByteBuddy initialization to use TypeValidation . DISABLED instead of TypeValidation . DISABLED to ensure the byteBuddy is created with a
replaced DeclaredType with TypeElement in JavacRoundEnvironment . java to simplify type handling and improve code readability
updated LockModePessimisticReadWriteIntegrationTest and MySQLTableLockTest to use a timeout of 1 instead of 100 to improve error handling and ensure
removed the ` LogFile ` parameter from the ` setSystemProperties ` method and added a null check for ` logFile ` to simplify the method
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 422 : http redirects
added SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING constants to ServiceCombConstants and updated MicroserviceFactory to utilize
change step name from ` proc . getName ( ) ` to ` proc . getBeanName ( ) ` in ` ToeThread . java ` to
changed DB _ PATH _ REGEX to DB _ PREFIX and updated related assertions in BaseAndroidTestCase . java and GeocodeHelperTest . java
replace numberNew with a call to getUnreadCount in HomeFragment . java to ensure accurate retrieval of unread count from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPoolPreview `
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and updated the Wallet class to utilize it to improve
added null check for the user in HomePage . java to prevent potential NullPointerExceptions when accessing user settings
updated file handling to use ` file . getAbsoluteFile ( ) ` instead of ` file . getAbsoluteFile ( ) ` in ` LocalFileSystem . java ` to
added width and height constants to the ComponentBuilders class to ensure width and height are within valid bounds
added logging functionality and refactored the request method in CommonsHttpSolrServer . java to improve logging clarity and maintainability of the code
removed the import of ExceptionHandler in PrintController . java to streamline error handling by eliminating unnecessary exceptions
replaced ` Optional . of ` with ` . map ` in ` CrateType . java ` and added assertions in ` RustBinaryIntegrationTest .
added methods to check for numbers with separators in SpellChecker . java to ensure correct handling of numbers with separators in SpellChecker . java
corrected a typo in the MESSAGE string from " HelloWorld . message " to " HelloWorld . message " to improve code readability and
refactor file handling in FileDisplayActivity to use a dedicated method for showing file actions to improve code readability and maintainability by reducing duplication
added setDaemon ( false ) to ReplicationHandler and modified logReplicationTimeAndConfFiles method to handle exceptions more gracefully to improve robustness by preventing
updated the method call from ` e . update ` to ` e . update ` in ` StoreCachedTest . java ` to improve code readability
updated the constructor of StreamerLoader to accept a MaterialHolder instead of a MaterialHolder and added a loop to remove them from the materials list to
added new dependencies for Core Library , Rigid Body Dynamics , and BitmapFonts in DependencyBank . java to enhance the DependencyBank functionality
updated pool size calculations in AppsContainerRecyclerView to account for icon size adjustments to ensure proper handling of approx sizes based on device profile
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure the build process correctly handles
fix example baritone control : no location for a waypoint .
added imports for ParsedNode , ParsedNodeException , ResourceAccessor , and ResourceAccessor in CreateProcedureChange . java to improve code clarity and maintain
added null check for null values in FilterOperatorUtils and created a test for range filtering in NullHandlingEnabledQueriesTest to ensure proper handling of null
added validation for bootstrap method parameters in JDynamicInvokeExpr . java to ensure correct parameter type validation for Bootstrap methods
http : / / issues . apache . org / jira / browse / camel - jms - test / camel - jms - test . java fail
removed the call to clear the formatters in CucumberInstrumentation . java to ensure the formatters are cleared before proceeding
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and updated related methods to use ` Collection
updated workspace label adjusting logic in DeviceProfile . java to conditionally adjust workspace labels based on cell padding to ensure proper handling of workspace labels based
updated assertions in ReplicationFactorTest to use assertRf instead of rf to improve clarity of assertion messages for better debugging
[ llvm ] allow context to be initialize during pre - initialization .
removed the @ Ignore annotation from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to temporarily disable tests that are
replace RuntimeException with JsonIOException in Gson . java to improve error handling by using a more appropriate exception type
replaced Integer . valueOf ( values [ 0 ] ) with Integer . parseInt ( values [ 1 ] ) in VisualScoreTagTest . java to simplify
updated error messages and path handling in Copy . java to improve clarity and accuracy of error messages for better debugging
updated segment name checks to use ` isHighLevelConsumerSegmentName ` instead of ` startsWith ` for better clarity to improve code readability and maintain
added methods to ` ShadowFragment ` and corresponding test cases in ` FragmentTest ` to ensure proper handling of null fragment states in ` ShadowFragment `
replace DateTime . now ( ) with DateTime . currentTime ( ) in DueDateBusinessCalendar . java to ensure accurate time representation for the due date
updated the return statement in TargetCpuType . java to include " x86 _ 64 - none - linux - android " to ensure compatibility with
added a method to delete all files in the FileDataStorageManager and updated ManageAccountsActivity to utilize it to improve file deletion functionality
updated the command line argument from " - ? % n " to " - h % n " in SchemaCrawlerCommandLine . java to improve clarity of
added a static method ` createSuiteDescription ` to create a ` Description ` object with a unique ID and updated the hashCode method to use it to
refactor decoding logic in SnapshotThread to use decodeBarcode for better readability to improve code maintainability and reduce duplication
removed the ` ImmutableList ` parameter from the ` BuckTarget ` constructor and updated related imports to simplify the constructor and improve code clarity
added unit tests for range handling in GWCZoomContextFinderTest . java to ensure correct functionality of the GWCZoomContextFinder class
added a new constant ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and modified dependency tracking logic in ` JRubyScript
updated the method call from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
[ hotfix ] [ table - planner - v2 ] use maybeaddhardspace instead of announcenewhardspace
replace ` bgImage ` with ` image ` in ` WelcomeWindow . java ` and update image handling in ` ImageIO . java ` to improve
refactor tuner configuration handling and error logging in multiple classes to improve clarity and maintainability of tuner configuration management
added HasTests interface to the ` AbstractShBinaryDescriptionArg ` interface and created a new test method in ` ShBinaryRuleIntegrationTest ` to enhance
added a condition to set the includeString variable to " db : hsqldb " in TestFilter . java to ensure proper handling of the database
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : do n ' t materialize exception if there be no stack trace
[ java8 ] fix serviceloader . load ( service ) for jdk8 or earlier service
added test case to verify that duplicate command can be resolve .
[ flink - 20865 ] [ cluster ] add fine - grained resource management option ( # 20865 )
fix the fish hook not work when the block be n ' t change .
camel - 14540 : camel - ftp - add miss license header to camel - ftp
renamed the method ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` to improve clarity and consistency in naming conventions
added a check for empty items in AppsContainerRecyclerView . java to avoid unnecessary processing when no items are available
added a conditional bean annotation for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the bean name is
refactor XMLLayout to use StringBuilder instead of StringBuffer for better performance to improve performance and maintainability of the code
added an ` omitHeader ` parameter to ` NamedList ` , ` BinaryResponseWriter ` , and ` XMLWriter ` classes to allow users to
updated the method to retrieve property names from ` getPropertyNumber ( ) ` instead of ` _ id ` and added a new test class ` TestE
updated the method call from ` getBuildRuleType ` to ` getDescription . getBuildRuleType ` to improve code readability and maintainability by
make sure we modify the hierarchy before remove the method numberer .
added null checks for disputesPerTradeId and disputesPerDepositTxIdItems in TradeDataValidation . java to avoid potential NullPointerExceptions when dispute
added getObjectHash ( ) and toString ( ) methods to AbstractNamedObject and modified retrieveColumns method to accept a boolean parameter to enhance object hashing
wallet . gettx ( ) . gettx . getconfidence ( ) . setconfidencetype ( not _ sent _ in _ coin ) .
camel - 14224 : camel - http - client - add header support to camel - http - client
refactor json handling in CraftingHelper to use a conditional check for conditions to improve code readability and maintainability by reducing duplication
hbase - 16464 hregion . close ( ) should log a warning if the region be open
refactor null checks for s1 and b2 in Credential . java to improve code readability and maintainability
[ java ] fix checkstyle violation in clientconductor
modified the destroy method to throw an InterruptedException and modified process destruction logic to improve error handling and ensure proper termination of the process
added support for Oracle database tests in TestDefaults . java to enhance compatibility with Oracle databases
camel - 14284 : camel - mail : camel - mail : camel - mail : camel - mail : camel - mail : camel - mail
added handling for EOF and channel in the Parser class to ensure that only valid tokens are processed to avoid parsing errors
added new language enums GEORGIAN , GREEK , GUJARATI , and GUJARATI to the Translate2Language
added a method to retrieve the data file in the Model class and modified the HMMModel instantiation logic in Voice . java to improve data handling and
added emailDomain and its getter / setter methods to LdapIdentityProviderDefinition , IdentityProviderDefinition , and IdentityProviderDefinition classes to enable dynamic email domain management
added READ _ TIMEOUT and REQUEST _ CONNECT _ TIMEOUT constants to manage request timeouts to enhance flexibility in managing read and connection timeouts
add a conditional check for non - empty myConceptLinksToSaveLater before processing deferred concepts in BaseHapiTerminologySvc
added RedisCategory import and category annotation to RedisServiceRegistryTests . java to enable testing for Redis functionality in the application
updated the ` FindDeprecatedMethodsTest ` and ` FindDeprecatedUses ` classes to use ` @ ParameterizedTest ` instead of ` @ NullAnd
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the component
removed unused imports from multiple configuration classes to streamline code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule , ContractEventTrigger , LogEventWrapper , LogEventWrapper , LogEventWrapper , and
updated the filter condition to check if the file name ends with " _ " instead of contains to ensure that the file name ends with " _ "
replace clearRect with setForeground and set color in MapView . java to improve the visual appearance of the map view based on the background color
do n ' t throw an exception if there be no invoker
refactored multiple Java files for consistency and clarity to improve code readability and maintainability by eliminating unnecessary console output
added a check for NaN score before assertions in TestFieldCacheSort . java to ensure that scoreDocs [ 0 ] and scoreDocs [ 1 ]
replace ` Set ` with ` Set . copyOf ` for ` oldKeys ` to ensure ` oldKeys ` is immutable before accessing its value
added checks for zero - time string values in ColumnSnapshotGenerator and MySQLIntegrationTest classes to ensure correct handling of date values in database operations
[ java ] rename offerermultisigpubkey to offerbtcpubkey in contract . java
updated parameters in FunctionAllGroupHeadsCollector , FunctionFirstPassGroupingCollector , FunctionSecondPassGroupingCollector , FunctionFirstPassGrouping
[ drools - 1076 ] fix the bug that ksessionmodel be not edit in the kieclasspath .
updated the initialization of msClient from conf to this . conf to ensure proper initialization of the HiveMetaStoreClient instance
added a condition to check if modalness is equal to modalness before proceeding to avoid unnecessary processing when modalness is equal
added a test method to ShadowMediaCodecListTest to verify codec capabilities from MIMETYPE _ VIDEO _ AVC to ensure correct handling of codec
added focus request to confirmButton in EditOfferView . java to address issue # 5460 related to key enter in the confirm button
added validation for width and height parameters in SunVolatileImage , XRPMBlitLoops , and XRPMBlitLoops classes , and
updated the separator character from " . " to " \ u00a0 " in FormatData _ uk . java to ensure consistent formatting of the
refactor AsyncStressTest and StressTest to use AtomicInteger instead of int arrays for thread - safety to improve concurrency handling and ensure thread -
hide the status of the achievement menu when there be no beta beta .
added access , name , and description properties to SearchMethodVisitor to ensure proper context initialization for access , name , and description
added sleep handling for SQLException and InterruptedException in IoTDBInsertWithoutTimeIT . java to ensure proper handling of InterruptedExceptions
refactor dur retrieval logic in DLNAResource . java to improve readability and maintainability of the code
[ hotfix ] [ table - config ] fix typo in batchresequencerconfig
[ java ] release txn in the scoreboard if it ' s acquire ( ) .
flume - 132 : use ssl . keymanager - type instead of keymanager - type .
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code maintainability and
added a condition to exit the block if the key is not repeat and the event key is not pressed to improve user experience by ensuring proper event handling
rename access specifier . PACKAGE _ PRIVATE to AccessSpecifier . NONE across multiple files to improve clarity and consistency in access specifier usage
refactor unHandled method to improve error handling and logging in Check . java to enhance code readability and maintainability by reducing duplication
updated stripes and stripe statistics assignment logic in OrcInputFormat . java to ensure accurate stripe statistics are retrieved from orcTail
added a null check for the exception in JCache . java to avoid potential NullPointerExceptions when ex is null
updated the URL from " http : / / myhentaicomics . com " to " https : / / myhentaicomic
added a command line option to display the current version in the application to ensure that the application correctly displays the current version of the application
use splittokens ( ) instead of split ( )
updated rotation handling logic in ConsoleActivity and TerminalView classes to improve user experience by allowing customizable rotation settings
changed the type of the ` hq ` variable from ` HitQueue ` to ` ScoreDoc ` in ` ParallelMultiSearcher . java ` to
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 14224 : camel - jolokia - add support for headersmapfactory class name in mbean .
updated closing brace in JavaCompiler and Diagnostic classes to improve code readability and maintainability
refactor jmsOutboundGateway to extend AbstractReplyProducingMessageConsumer and introduce a new JmsOutboundGatewayParser class to improve jms configuration handling
updated the condition in ArrayFunctions . java from i + 1 to i2 in the expecting method to improve accuracy of array validation
added null checks and improved script engine handling in AbstractScriptProcessor and InvokeScriptedProcessor to enhance robustness and prevent potential NullPointerExceptions during script
updated PooledConnectionImpl to use org . postgresql . PGStatement instead of org . postgresql . Statement to ensure compatibility with the correct package for
[ hotfix ] [ test ] fix test failure in cassandraiotest
changed log level from error to warn in AtomicRemainder . java to improve logging clarity by using a more descriptive error message
removed sorting of candidate timestamps in CompactionController and added a new test for aggressive fully expiration in TTLExpiryTest to
fixed - redissonblockingdeque . toseconds ( ) return a long instead of unit . toseconds ( )
[ hotfix ] [ runtime ] fix checkstyle violation in jobinspectcommand
refactor Engine class to improve code organization to enhance maintainability and readability of the code
replaced Stream . of with entrySet ( ) in ChildHolder . java to improve code readability and maintainability by using a more descriptive method
remove acl rpc hook and use sessioncredential instead
corrected the spelling of " numIndexDims " to " numDataDims " in BKDWriter . java to ensure accurate
[ hotfix ] do n ' t print stack trace if interpretergroup be null
updated the parameter in the addListElement method from funN to lt in ExpressionNodeEvaluator . java to ensure proper handling of list elements in the
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java
[ hotfix ] [ snapshot ] fix typo in snapshotmanagerimpl . createvolumepolicy ( )
removed the ` public ` access modifier from the ` write ` and ` clear ` methods in ` ItemWriter . java ` to restrict access to the
[ hotfix ] [ test ] fix roombahandlertest
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutor
replaced instances of ` FSDirectory ` with ` RAMDirectory ` in ` TestNorms . java ` to ensure compatibility with the latest RAM
added a check to ensure the line height is within the bounds of mDrawTextRectBuffer to ensure that the line height is within the bounds of
refactor WalletAppKit class implementation to improve code readability and maintainability
[ oql ] remove hat . js from oqlengineimpl # getinitstream ( )
added a JCheckBoxMenuItem to manage the removal of a chat transport menu item to improve user experience by ensuring the menu is removed from the transport menu
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` ContextImpl ` , and ` ContextImpl `
change bsqblockchainexplorer fromproto to bsqblockchainexplorer to avoid npe
added attributes handling methods to StandardSession and Session classes to improve attribute management and enhance session management functionality
added assertions to verify the functionality of the ` getPlainBean ( ) ` method in ` TestDbJson _ List . java ` to ensure correct
replace ` pageSize ` with ` initialPageCount ` in ` MonotonicAppendingLongBuffer . java ` to ensure accurate calculation of averages
refactor BatchCommandLineLauncher class for improved readability to enhance maintainability and readability of the code
added methods to retrieve data source and transaction managers in BatchMetricsApplication to enable support for HSQL database and transaction management in the application
removed the UnauthenticatedHttpService interface from the GlowrootLogHttpService class to simplify the service implementation by removing unnecessary authentication
updated the ` drawImage ` method to use ` getNonStrokeJavaComposite ( ) ` instead of ` getNonStrokeJavaComposite ( ) ` to
removed the notifyAll ( ) method from the close ( ) method and added synchronization in DocumentsWriterPerThread and DocumentsWriterPerThread to improve thread safety
added methods to retrieve and set property values for multiple choice options and validation constraints in UiBinding . java to improve property management and ensure proper validation of
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for clarity and consistency to improve code readability and maintainability
do n ' t update the stored copy of the tree if there be a full save .
replaced the ` condition ` field with a ` Pattern ` parameter and updated related methods to utilize a more flexible pattern handling to enhance flexibility in handling
updated the initialization of ` krakenMakerFees ` and ` krakenTakerFees ` in ` KrakenAdaptersTest
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class implementation to improve code readability and maintainability
added unsupported encoding check for data encoding in VectorizedPrimitiveColumnReader to ensure proper handling of unsupported encodings in the data encoding
added MarkerFactory import and modified conditional checks in HttpSolrCall . java to improve code readability and ensure proper logging behavior
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure metadata service proxy is properly destroyed when the instance is changed
fix infinite recursion in defaultentityqueryrepository . getlvlfilter ( )
updated error message formatting in HubChangeExecListener to include a check for null changelog ID to improve clarity of error messages based on database changelog
[ google - zx ] use barcodereader . decode ( ) instead of barcodereader . decode ( source )
changed the return type of executeCompilation from int to ProcessExecutor . Result in CxxPreprocessAndCompileStep . java and added a test for
removed the condition for determining the maximum event range in ObjectStore . java to simplify event counting logic and improve code readability
refactor validation validation logic in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability by reducing duplication
fix entityawareworldprovider : clear temporary block entity list
removed unnecessary type checks in IntrinsifyArrayCopyPhase . java to streamline code by eliminating unnecessary checks
[ hotfix ] [ test ] remove unnecessary logging in testcoyoteadapter
replaced ` WantedAnywhereAfterFollowingInteraction ` with ` WantedAnywhereAfterFollowingInteraction ` and removed ` WantedAnywhere
added null checks for ownerAddress and key in AccountPermissionUpdateActuator . java and PermissionAddKeyActuator . java to ensure that
replaced ` CommandComparator ` with ` TreeMap ` for command sorting to improve performance and maintainability of command processing
[ cloudstack - 371 ] add ' s . lifescience ' and ' eta : : lifesciences : :
updated property settings for metadata properties in BaseSingleTreeBuilder . java to improve code readability and maintainability
updated the AsmLoader instantiation to use the interface class loader instead of the class loader to ensure compatibility with the interface ' s classloader for class loading
pdfbox - 4071 : fix npe in type1charstring and type1charstring . tostring ( )
updated print statements in Java2TypeScriptTranslator to include a conditional check for definition scope to ensure proper formatting of namespace and declare statements based on the
refactor HttpClientTest to use AbstractHandler instead of EmptyServerHandler to improve code clarity and ensure proper handling of HTTP requests
replaced ` new String [ ] { " Pause " } ` with ` analogListener ` in ` HelloInput . java ` to simplify the listener
added a null check for getLhs ( ) and findRoot ( ) in AbstractSqmPath . java to avoid potential NullPointerExceptions
updated package name from ` com . owncloud . android . oc _ framework _ test _ project . test ` to ` com . owncloud .
refactor BufferedImage initialization and filter logic in AwtCanvas . java to improve clarity and maintainability to enhance code readability and ensure proper handling of
add native image location qualifier to libgraal runtime
[ hotfix ] [ test ] fix typo in pardotest
updated response retrieval from ` remove ( ) ` to ` poll ( ) ` in ` MockPhishingProtectionServiceV1Impl . java `
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for various enum types
refactor CallStack class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ map ] warn if max size do not allow any data in the map .
rename ` ` AST ' ' to ` ` LST ' ' in multiple Java files to clarify the purpose of the error message for better clarity
refactor score calculations in ThreadedAcousticScorer . java to improve clarity and consistency to enhance code readability and maintainability by
replace AssertionError throwing with a return statement in NetHooks . java to improve error handling by returning null instead of throwing an AssertionError
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLeniumTest .
added a default method ` makeString ` to ` ParallelIterable ` , ` RichIterable ` , and ` AbstractSynchronizedRichIterable ` classes to
replaced ` Ordered . HIGHEST _ PRECEDENCE + 1 ` with ` DEFAULT _ ORDER ` in ` OidcServicesManager
added a new Predicate < ProposedWeakAssociation > parameter to the WeakAssociationsAnalyzer constructor and updated related tests to enhance the flexibility of weak
refactor Deflater class to improve performance to enhance performance and maintainability of the code
added error handling for IOException in Font . java to ensure proper resource management and prevent potential memory leaks
added a null check and empty check for the content array in VersionTypeBinding . java to prevent potential NullPointerExceptions when content is empty
removed the private List < Place > from the onPostExecute method and simplified the onTaskFinished method to improve code readability and maintainability by
updated the condition to check for both " text " and " text " content type in MailConverters . java to ensure compatibility with case - insensitive
[ bouncy castle ] make opensh key format public in openshkeyspec
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a ` boolean isBind ` parameter and modified the ` updateItemLocationsInDatabase
updated import statements in InheritanceCacheTest . java and modified entity handling in InheritanceCacheTest . java to improve code readability and maintainability
updated import statement from DefaultOAuth2RequestFactory to DefaultOAuth2RequestFactory and added a user approval request method in TofuUserApprovalHandler to
[ # 645 ] influxnamingrefactoringrefactoring : fix # 645 ( # 645 )
[ hotfix ] [ test ] fix checkstyle violation in quickfix
updated the key for " Cookie " from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure the correct key is used for
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and updated its usage in ` Subject ` , ` Subject `
added functionality to manage and manage the visibility of the clear all button in OverviewActionsView and RecentsView to enhance user experience by allowing users
updated the ` desiredRepoVersion ` variable and adjusted the timeout duration in ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider `
remove memoryleaktest ( remove unused test )
updated the return statement in ServletTester . java to include the hostname based on the localhost environment to improve clarity and maintainability of the code by
added a condition to check if MVDWAPI is enabled before hooking into MvDWAPI to ensure that MvDW
[ hotfix ] [ test ] add assertclustersizeeventually to testclusterassignmentscorrectnesstest
replaced UnsupportedOperationException with SingletonHolder and added a SingletonHolder class to manage FFI provider loading to enhance flexibility in loading FFI providers based on J
[ tika - 264 ] add test case for hierarchical file list ( # 12265 )
added null checks for objectToSave and objectToSave in MongoTemplate . java and updated related tests in MongoTemplateTests . java to ensure robust
replace ` 0 ` with ` NODE _ LIST ` in the Position initialization to ensure correct positioning based on direct input and successor count
added a private final field ` accTradeValue ` and a getter method for it in ` BithumbTicker ` to provide a way to retrieve the
updated logging statements to include segmentName in RealtimeSegmentDataManager . java to improve clarity and accuracy of log messages for better debugging
changed the constant ` maxParallelThreads ` from a constant to a static final constant ` MAX _ PARALLEL _ TASKS ` to
replaced ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex . java and FixedByteSVMutableForwardIndex . java to ensure thread safety
refactor multiple dict - related classes to improve code organization and readability to enhance maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to avoid potential NullPointerExceptions when destBuffer is null
camel - 14247 : camel - msv : fix the unit test that fail for some unknown reason .
updated condition in DelegationService to check if beginCycle is greater than currentCycle to ensure proper validation of cycle conditions
updated RandomValueStringGenerator size from 6 to 10 in JdbcExpiringCodeStore and modified expected length assertions in CodeStoreEndpointsTests to ensure
added type checking for UniqueConstraint in StandardObjectChangeFilter . java to ensure correct matching of UniqueConstraint instances
refactor description handling in MediaDetailFragment to use HashSet for better performance to improve code readability and maintainability by reducing redundancy
added catch blocks for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error handling for ArrayIndexOutOfBoundsException and ClassCastExceptions
added withReferenceFilter and withFilter methods to ListImagesCmd and its implementations in ListImagesCmd and ListImagesCmdImpl to enhance functionality by
camel - 14284 : camel - jms - add support for bridgeerrorhandler in camel - jms
added checks for empty ops in OpExclusionUtils to ensure all ops are set to true when no ops are found
added return statements to DatabaseCommand . java to ensure proper handling of database operations
updated Politician instances from " blair " and " bush " to " Prime Minster of Umpa Lumpa Lumpa
replace null check with StringUtils . isNotBlank for initFile to improve code readability and maintainability by using a more descriptive method
camel - 14284 : camel - restlet : use the current port instead of the default port .
removed unused import statements in SchematicFormat . java to streamline code and improve readability
added a maximum length property for Hive query max length in QTestUtil . java and modified overriddenConfigurations in SessionState . java to allow for
removed the ` public ` access modifier from the ` userName ` variable and updated the ` createHttpConnector ` method to use ` baseHttpConfig `
updated method names from " writeHdfs " and " writeKafka " to " hdfsSource " across multiple files to ensure consistency in
updated HiveConf to check if the application name is not equal to " spark . app . name " before setting it to ensure that the application name
rename ` whiteName ` to ` includedName ` in ` ManagedClassFactory . java ` to improve clarity and consistency in naming conventions
[ java ] use window . maximize instead of window . restore ( )
updated the ` rootFilesystem ` and ` DefaultProjectFilesystemFactory ` classes to include ` mainCellBuckOut ` and ` getCellBuckOut
added a condition to check if the error message contains " entity expansions " in TestXMLEntityExpansion . java to ensure that the error message is
updated table offset and length assignments to include 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
removed the customize method from DirectMethodHandle to ensure that the form is customized before proceeding
refactor conditional logic in LineChartRenderer to use a variable for points per entry pair to improve readability and maintainability of the code
refactor flavor handling in AndroidBinaryDescription to use loops for better readability to improve code clarity and maintainability by reducing duplication
changed the array index from ' offset ' to ' i ' in Lwjglgl11 . java to ensure the correct buffer is used for
added new classes ` PropertySuper ` and ` PropertySuper ` , ` PropertySuper ` , ` TestClassResolutionFail ` , and ` TestClassResolutionFail
added a condition to check if ` groupProperties . SHUTDOWNHOOK _ ENABLED ` is true before removing the shutdown hook to ensure
removed the url parameter from the VirtualFilterChainProxy bean and updated related logging statements to streamline the code and improve readability by using a more
replaced ` Collections . sort ( intermediateResult ) ` with ` Arrays . sort ( values ) ` in ` PercentileAggregationFunction . java ` to
added checks for schema loading in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure proper handling of loaded schemas
set baseType to null in DatabaseInfoRetriever and set literalPrefix and literalSuffix to null in MutableColumnDataType to ensure proper initialization of data type
updated link references in multiple Java files to use a more descriptive link instead of a hardcoded value to improve code readability and maintain
removed redundant calls to ObjectEqualEvaluator . getInstance ( ) and ObjectContainsEvaluator . getInstance ( ) in EvaluatorFactory . java to improve code read
corrected the spelling of " config : linux " to " config " in multiple test files to ensure consistency and improve code readability
added sound effects functionality to the AllAppsView class to enable playback of sound effects in the application
changed the exception type from Exception to IOException in the main method from Exception to IOException to ensure proper handling of IOException in the main method
added setGranularityEnabled ( true ) to the left axis in BarChartActivitySinus . java to enable granularity
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by encapsulating comparison logic
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS _ ALIAS _ SUPPORTED checks to ensure compatibility
added ` close ( ) ` method to ` Connection ` , ` JsonAsyncHttpPinotClientTransport ` , and ` PinotClientTransport `
[ java ] make socketappender . awaitappend ( ) thread - safe .
added a check for directory existence in HadoopResourceId . java and removed the JUnit Ignore annotation in HadoopResourceIdTest . java to
updated import statements in IsometricStaggeredTiledMapRenderer . java for consistency to improve code readability and maintainability
removed duplicate call to handleService . unbindHandle ( context , item ) in ItemServiceImpl . java to improve code readability and maintainability by
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the code
removed unnecessary condition checking for mDownHitTarget in OtherActivityTouchConsumer . java to simplify condition checks and improve code readability
refactor navigation button handling in NavbarButtonsViewController . java to use configuration - based mode to improve code readability and maintainability by reducing redundancy
make polybenchlauncher . abort throw instead of abort ( )
refactor code to use byte types instead of shorts for bootstrapMethodIndex and memberIndex to improve readability and maintainability of the code
added a new method ` BlockFormattingContext ` to the ` findBox ` and ` findElementBox ` methods in ` BasicPanel . java `
added an ` getStdErrorOutput ` method to ` WorkerProcess ` and modified ` WorkerShellStep ` to utilize it to improve error handling
added null checks and exception handling for null operator in Collections . java and CheckedListReplaceAll . java to ensure that a null operator is passed and
added a volatile boolean flag ` _ testFill ` and modified the ` _ writeCallback ` method in ` SslConnectionTest . java ` to
added ` mListeners ` and ` mCurrentValue ` fields to ` DeviceFlag ` , ` FeatureFlags ` , and ` DeviceConfigChangedListener
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable the test due to issue gh - 1114
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
instructorfeedbackeditpage : focus the endDate box for the first argument
refactor synchronization logic in KrakenStreamingTradeService . java to improve code readability and maintainability
updated print statement from ` err ` to ` out ` in ` ChangeableUrls . java ` to improve clarity of error messages for better debugging
added a ` randomAccessRows ` parameter to the ` SparseRowMatrix ` constructor and updated related methods to include a ` randomAccessRows ` parameter
cloudstack - 10224 : do n ' t create usage event if volume poolid be null
refactor file handling in Utilities . java to use a dynamic path based on Hive configuration to improve flexibility and maintainability of the code by using a
updated import statement from ImmutableMap to org . apache . vendor . Guava . v26 _ 0 _ jre in UdfTestProvider . java
[ hotfix ] [ runtime ] do n ' t register memorycctprovider in memorycallgraphbuilder
[ java ] do n ' t throw npe if multi - user chat do n ' t exist
add a check to ensure that the file can be written to avoid illegaluseractionexception
added folder synchronization functionality to the DrawerActivity and created FolderSyncActivity to enhance user experience by allowing folder synchronization functionality
[ hotfix ] [ test ] fix flaky test in sequentialchannelstatereaderimpltest
fix a bug in the Spanishtreenormalizer to handle numeric word .
replaced the usage of ` reader . pointValue ( ) ` with ` getPackedValueSlice ( i ) ` in ` SimpleTextBKD
added LocaleRandomizer and its corresponding test class ` LocaleRandomizer ` and ` LocaleRandomizerTest ` to generate random locale randomizations to enhance randomness
added assertions to verify the type of the " application / x - font - printer - metric " and " application / x - font - type1
update version number from " 8.1 " to " 8.1 " in Installer . java and AutoUpgrade . java to ensure compatibility with the latest
reformatted code for improved readability in TCPTransport . java to enhance readability and maintainability of the code
updated the socket read timeout logic in Http2AsyncParser . java to include a default value of 0 to ensure proper handling of socket read timeouts
updated the WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to allow more time for metrics
corrected the spelling of " PRIMARY KEY " to " PRIMARY KEY " in the error message to improve code readability and maintainability
added DateTime and DateTimeFormatter imports in ThirdEyeJiraClient . java to enhance date formatting functionality for better date representation
refactor PriorityGenerator to utilize a new PriorityGenerator for better header generation to improve code readability and maintainability by centralizing priority generation logic
added a constant for maximum scalar replace code size and updated the condition to check if the entire class is empty to ensure that the scalar replacement is only
added DATE _ TAKEN to the projectionTest and folderSortOrder arrays in MediaProvider . java to ensure compatibility with the latest MediaStore features and
updated drawImage calls in TexturePacker2 . java to adjust image dimensions to ensure correct positioning of images in the texture packing process
added WebSocketUpgradeFilter to JettyWebSocketServerContainer and updated related imports in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to
added shutdown calls in Manager , TransactionsMsgHandler , and trxHandlePool in NodePersistService , and updated Timer initialization in NodePersistService
added a new ` RawJsonRequestBodyAnnotationProcessor ` and implemented ` @ POST ` annotation in ` JaxrsSwaggerGeneratorContext ` and ` Echo
added a new method ` newTarget ( targetType , extension ) ` to the ` LoggerUtils ` class to provide a way to create a new target
replaced ` ListBeanContainer ` with ` ArrayList ` in ` BeanContainer ` and added a new test class ` BeanContainerTests ` to enhance the
updated the metric name from " blockCountHitPercent " to " blockCacheCountHitPercent " in TestMetricsRegionServer . java to ensure accurate
camel - 14224 : camel - caching : clean up file input stream cache when exchange be complete .
added deviceId setting to the position in TeltonikaProtocolDecoder to ensure proper handling of device IDs in Teltonika protocol
replaced ` Files . asCharSource ` with ` Files . asCharSource ` in ` HybridProjectBuildFileParser . java `
added a new method ` visitAssignop ` in ` Attr . java ` and created a new test class ` FailOver15 . java ` to
added a boolean flag ` enableAccountHandling ` to ` BaseActivity ` and modified the onCreate method in ` BaseActivity ` to conditionally mixin the
use heuristicallyfindmainconnectedcomponent instead of getmaxpoints ( )
added a ` List < String > ` parameter to the ` DrillViewTable ` constructor and updated its constructor to include a ` path ` parameter
updated constructor call in PooledByteBufAllocatorL to include additional configuration options to enhance performance by allowing dynamic cache usage based on configuration
updated type checks from double [ ] to short [ ] in ObjectInputStream . java and added a new CloneArray class in ObjectInputStream . java to
added a configuration parameter for the LLAP _ IO _ THREADPOOL _ SIZE in HiveConf and updated executor initialization in LlapIoImpl
added support for Java version 8 and 11 in SecurityServicesFeature to ensure compatibility with Java version 11 and above
updated bounds checking for latitudeRange and longitude range in LatLonGrid . java and added a test for growing polygons in TestLatLonGrid . java
[ java ] make expectedconditions . refreshed ( ) return true if the element be not visible .
added a new parameter ` isInsertOverwrite ` and modified the ` replaceFiles ` method to include ` isInsertOverwrite ` and ` isInsertOverwrite
added a test method for the ` SomeInnerClass ` class in ` ReflectorTest . java ` to ensure that the ` SomeInnerClass `
added " auto _ generate _ android _ facet _ sources " to ConfigIgnoredByDaemon and updated getBooleanValue method in IjProjectBuckConfig
updated message handling in HubChangeExecListener to include author and author information to improve clarity of error messages for better debugging
added properties field and getter / setter methods in Link . java and corresponding test cases in QuickLinksConfigurationModuleTest . java to enhance property management and
removed multiple @ EqualsAndHashCode annotations from InitialConfig and added a toString ( ) method in YamlConfigFileDTO to streamline code and improve readability
changed generic type parameters from SimpleForwardingServerCall < > to SimpleForwardingServerCall < ReqT , RespT > to improve
added ` @ CallerSensitiveAdapter ` and ` @ CallerSensitiveAdapter ` methods to ` Class ` and ` Class ` classes to enhance class
updated authentication token handling in RequestItemRepositoryIT . java to use ` IsEmptyString . isEmptyString ` instead of ` Matchers . isEmpty
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve clarity and maintainability of the code
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow external access to the method from other packages
updated imports and method signatures in TimeStepdefs . java and TimeStepdefs . java to improve clarity and maintainability of the code
fix typo in mod banner for spark _ isolated , spark _ recessive , and spark _ recessive
updated the ` createProxy ` method to use ` exchangeSpecification . getUri ( ) ` instead of ` ExchangeSpecification ` across multiple classes to ensure accurate
removed multiple calls to ` getAbsolutePath ( ) ` and ` toString ( ) ` in ` RecordGenerator . java ` to streamline output for better read
camel - 14284 : camel - kafka : use autocommitintervalms instead of commitsync in kafkaconsumer
removed lock release and output statement calls in LoggingExecutor and set hasDatabaseChangeLogLockTable to true in StandardLockService to improve resource management and
updated @ SuppressWarnings annotations to include " rawtypes " and added deprecation warnings in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to
removed unnecessary synchronized keyword from closeFiles ( ) and prepareCommit ( ) methods in Database . java to improve code readability and maintainability
refactor property handling in SpringBootAutoConfigurationMojo to use a new ResolvedProperty class to improve code readability and maintainability by encaps
updated the method call from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to align the method with
camel - 14224 : camel - message - helper : fix checkstyle issue in camel - core
updated the testId field from UUID . randomUUID ( ) . toString ( ) to System . getProperty ( " testId " ) to ensure compatibility with
fix concurrentmodificationexception in defaultjobparametersconverter . java
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
change default height scale from 256 to 256 in FractalHeightMapGrid . java to ensure proper scaling of the height map
removed type check for String in SecurityConfig and updated assertions in SecurityConfigTests to streamline equality checks and improve code clarity
updated the default value of dumpPartitionId from " dump - partition - id " to " dump - partition - id " to disable dump partition ID
added TronTXOutput and TronTXOutputs imports and updated test cases in UTXOSetTest . java to enhance testing capabilities
[ java ] use javaruleutil . isExplicitunassignedvarname ( ) instead of hasExplicitignorablename ( )
pdfbox - 4071 : avoid npe in arraylist . add ( ) if array be null
refactor jobRestartProperties handling in JsrJobOperator . java and add a new test case in JsrJobOperatorTests . java
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform
refactor principal initialization logic in JaasAuthenticationHandler . java to improve readability and maintainability of the code
refactor SolrCores to utilize DefaultSolrThreadFactory for thread management to improve thread safety and ensure proper resource management during core shutdown
added null check for mActionsView before setting visibility to INVISIBLE to prevent potential NullPointerException when mActionsView is null
refactor JobParameters initialization in RunIdIncrementer . java to handle null parameters gracefully to improve code readability and maintainability by reducing redundancy
refactor BasicEntity and TestUtil classes for improved code organization to enhance maintainability and readability of the code
added tests for retrieving matched devices and matched devices in SchemaRegionBasicTest . java to ensure correct functionality of device matching operations
add tryinvoke ( ) method to metricseventbus . run ( )
added a conditional check for ` max ` before calculating the sum change in ` EigenvectorCentrality ` and created a new `
updated registry creation to use a random port instead of a hardcoded string to improve code readability and maintainability by using a more descript
updated geometry data handling in GeometryGenerator . java to include an additional parameter for OOid and eClass to enhance the geometry generation process by providing additional
set the Amplifier from 2 to 0 in BlockEntityBeacon . java to ensure the Amplifier is always set to 0 instead of 2
refactor TubeCalc class for improved readability to enhance maintainability and readability of the code
changed the ` enabled ` variable from ` true ` to ` false ` and modified the ` enabled ` variable in ` HttpClientConfiguration ` and ` Service
refactor DefaultValidator to use generic groups instead of a list for better type safety to improve code readability and maintainability by encapsulating
updated annotations in bug8057791 . java to include a key headful annotation and added a timeout value of 500 to improve code clarity and
refactor the scheduler initialization to use a lambda expression for thread creation to improve code readability and maintainability by using a lambda expression
updated version parsing logic in ItemLexicon . java to simplify version parsing to improve code readability and maintainability by eliminating unnecessary replacement
added ReflectionCheckLinker . checkReflectionAccess ( type ) method to JavaAdapterFactory . java to ensure proper access checks for reflection access
[ java ] use ` ` xtestjmsroutewithobjectmessage ' ' instead of ` ` testjmsroutetest ' '
added a new parameter ` recordReader ` in ` CombineHiveRecordReader ` and updated the ` initIOContext ` method to include it to
deleted ` ClassLoaderHolder ` , ` LoaderManager ` , and ` VerticleManager ` classes to streamline the codebase to improve maintainability
added a new method ` configurationChanged ` to handle configuration changes in ` FileStore ` , ` JavaLanguageServer ` , and ` JavaLanguageServer
added try - catch block around session callback registration and unregistering in PackageInstallerCompatVL . java to improve error handling by catching potential exceptions
removed the ` src / test / index . cfs ` and ` index . nocfs ` directory from the index creation methods to streamline
refactor AkkaRpcServiceUtils to use BiFunction for creating and starting AkkaRpcService instances to improve code readability and maintainability by encap
added retry configuration for mapreduce . map . maxattempts in TestExportSnapshot . java to ensure the mapreduce map maxattempts is set to 3
pdfbox - 4071 : fix bug with font - specific encoding scheme
added a new test class ` SslConnectionTest ` for SSL connection management to ensure proper handling of SSL connections during filling
added validation for IPv4 , Inet6 , and IPv6 addresses in InetAddress and NetworkInterface classes to ensure that IPv4 , Inet6 , and
added a test method ` testDateSerializationInCollection ` in ` DefaultTypeAdaptersTest . java ` to verify serialization of dates in a collection
refactor Message class to improve code organization to enhance maintainability and readability of the code
added debug logging for SQL generation and modified conditional logic in PutDatabaseRecord . java to improve debugging capabilities and ensure proper handling of the first update key
updated loop condition in TableOutput . java from ' i ' to ' i ' to correct the loop iteration logic for better readability
pdfbox - 4071 : remove unnecessary null check in filter . getobject
updated priority settings for format string handling in FormatStringChecker . java to improve clarity and maintainability of the code
[ java ] ignore non - final loop variable in a for - each statement in a for - each statement .
added PDF version and full compression settings in PDFExporter and updated test properties in PDFExporterTest to ensure compatibility with the latest PDF features and improve code
added a new test class ` LdapUserDetailsMapperTests ` to validate the functionality of ` LdapUserDetailsMapper ` to ensure correct handling of role
updated LdapConfiguration to implement Configurable and added LDAP connection timeout configuration to enhance flexibility in managing LDAP connection timeouts in the application
refactor TestDescription classes for improved organization to enhance maintainability and readability of the codebase
refactor Pixmap , ManifoldPoint , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename variable ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the handler is invalid in the gesture state to ensure that gestures are only processed when the handler is invalid
updated the initialization of ` mMaxDistanceForFolderCreation ` and ` mOldRotationYs ` from ` 6f ` to ` 55F
fix ociconfigconfigconfigsource . getconfig ( ) to use configproviderresolver instead of configprovider
updated Testjsig . java file to improve test coverage to enhance performance and maintainability of the code
refactor mana tablet , mana , and mana to be able to calculate the number of mana from the stack .
chore ( deps ) : update license year for generated file
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress warnings related to serial versioning
refactor tsFile validation logic in DataRegion . java to improve clarity and structure to enhance code readability and maintainability by centralizing file
added two new classes ` Switch21 ` and ` Switch19 ` , ` Switch19 ` , ` Switch19 ` , and ` Switch19 `
updated error message formatting in ComparableSubjectTest . java to improve clarity and consistency in error reporting
xssf : set xmlstandalone flag to true in streamhelper
updated the limit in ` Int2ObjectCache ` from ` Integer . MAX _ VALUE ` to ` Integer . MAX _ VALUE ` and refactor
removed sorting of securityFilterChains in WebSecurityConfiguration . java and added a new test class in WebSecurityConfigurationTests . java to streamline
removed TimeInForce . GTC from the OrderType parameters in BinanceTradeService . java to simplify the code and improve readability by eliminating
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of implements Randomizer to improve flexibility and maintainability of the random number generation logic
updated the KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper
camel - 14224 : camel - amq - add support for jms component in camel - jms
added error handling for null bound in SourceUtils . java and created a new test class TestGetBound in TestGetBound . java to improve robust
refactor filter predicate logic into a separate method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability by reducing
added a check to ensure originalArtifactName starts with SCOPED _ TARGET _ BEAN _ PREFIX before extracting it to avoid potential
refactor certificate handling in HttpsSegmentFetcher to use a loop for reading certificate entries to improve code readability and maintainability by reducing duplication
updated default boolean value handling in Config . java and added DnsFallback . java with a new class DnsFallback . java with a fallback logic to
[ xwork2 ] improve error message when tag write fails
changed the type of ` success ` and ` url ` from ` boolean success ` to ` String url ` in ` DepositAddress . java ` to
replaced the implementation of the Privilege class with a lambda expression to ensure proper resource management and avoid potential memory leaks
removed the " address " parameter from the scope scope in CommonOAuth2Provider and its tests to simplify scope handling and improve code readability
refactored the submit method in ManagedSelector to use a new Start instance instead of a lambda expression to improve code readability and maintainability by
added a new constant BIG _ DECIMAL _ 182 _ 04 and modified the handling of saturation in WLedHandler to support saturation
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set in ` VectorizationProvider . java ` to improve
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to provide functionality for handling JSRInst instances
added transactiontemplate to the SubscriptionActivatingSubscriber constructor and updated related classes to utilize it to enhance transaction management and improve transaction handling capabilities
refactor SQL query handling in DBMSProcessor to include SQL update functionality to improve clarity and maintainability of SQL query execution
added elevation handling for contact views in ContactItemInflater . java to ensure compatibility with newer Android versions and enhance user experience
rename ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in naming conventions
refactor file handling in SandboxFileManager to use privileged actions instead of hardcoded values to improve code readability and maintainability by using
updated GroovyParserVisitor and GroovyPrinter to handle both " [ " , " ] " , and " [ ] " types to enhance the handling of
updated warning log message to include the class name of the exception to improve clarity of warning messages for better debugging
updated byte handling in RecordInputStream and UnicodeString classes to use ' b ' and ' isCompressed ' instead of ' isUncompressed ' to
added a test method to verify the functionality of downloading files with Norway characters in the name to ensure that the download functionality works correctly with
[ hotfix ] add cancellationexception to fingerprintscannersample . iscancelled ( )
added null check for statistics before calling handleCache to avoid potential NullPointerException when statistics is null
refactor MongoTemplateTests to include a new test method for removing objects from explicit collections to improve code readability and maintainability by encaps
updated copyright year from 2015 to 2022 in multiple Java files to ensure compliance with copyright standards and improve code maintainability
updated string formatting in Coder . java to improve readability to enhance readability and maintainability of the code
added a boolean field ` mIsClearAllButtonFullyRevealed ` and modified scrolling logic in ` RecentsView ` and ` Paged
refactor HiveIcebergMetaHook and HiveIcebergSerDe to use a static final map to improve code readability and maintain
updated exception handling to use ` Server . isAddressInUse ` instead of ` instanceof BindException ` to improve code readability and maintainability by using
added argument for " test . class . path " in TestNestmateAttr . java to ensure proper functionality of the test environment
updated the logging level from VERBOSE to verbose in Grep . java to improve clarity and maintainability of the code
[ hotfix ] [ runtime ] fix checkstyle violation
add nestedusesavepoint property to scopetrans to allow nested subtransactions
replaced int fetchSize with ThreadLocal < Integer > fetchSize in QueryProcessExecutor . java and updated related logic in QueryProcessExecutor . java to improve
remove backoff idle strategy from embeddedpingpingpingpingpingpingpingpingpingpingpingpingpingpingpingpingpingpingpingpingpingpingping
refactored the ` handleBlockingCall ` method in ` HttpClientIntroductionAdvice . java ` to use a ` handleBlockingCall ` method
added a check for the HDP _ VERSION configuration in SliderAppsViewControllerImpl . java to ensure that the HDP _ VERSION is set
refactor JavacProcessingEnvironment to use ServiceLoader for loader and loader to improve resource management and prevent potential memory leaks
added DeepCloner to ParameterizedRobolectricTestRunner and modified RobolectricTestRunner to utilize this new class to enhance testing capabilities for
added a binding for the JETTY _ SHOW _ STACKTRACE field in ResourceBase . java to ensure that stack traces are properly
added a check to return null if the object type is an object to ensure proper handling of object types in the NativeObject class
replaced instances of ` sun . jvm . hotspot . types . OopField ` with ` wellKnownKlasses ` in ` SystemDictionary . java
updated JwkKeyListView and JsonWebKeyEndpoint to use PublicKey for RSAPublicKey and ECPublicKey to enhance compatibility with public keys in the application
fix nativebootimage . spawnisolates ( ) to not spawn isolates . getvalue ( )
updated MBeanServerMXBeanUnsupportedTest . java to improve test coverage to enhance reliability of MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline the code by eliminating unnecessary dependencies
added ` validator ( ) ` method to ` Actuator ` , ` CreateAccountActuator ` , and ` VoteWitnessActuator
added a new file ` Main . java ` to demonstrate the usage of ` BrokerService ` and ` MessageConsumer ` to facilitate testing of the
http : / / github . com / codenameone / codenameone / codenameone / codenameone / codenameone / issues
fix ( protobuf ) : do n ' t create an edge if there be no empty index
[ java ] remove duplicate code in drivereventsadapter . remove ( correlationid )
added ` saveConflict ` method calls to ` FileDataStorageManager ` , ` FileDownloader ` , and ` FileUploader ` classes to ensure
updated type parameters from ` Map ` to ` Map < Object , Object > ` across multiple classes to enhance type safety and improve type safety in the
replaced ` StrUtils . splitFileNames ` with ` org . apache . lucene . analysis . commongrams ` across multiple filter factory classes to
added handling for " oracle " and " mysql " driver properties in DatabaseFactory . java to ensure compatibility with different driver types in the database
updated the constructor of ` interceptor ` in ` SignedSupportingClassProxyFactory ` to accept a handler parameter and added a serialVersionUID to ensure proper
replaced ` newDate ( ) . getTime ( ) ` with ` currentTime ( ) ` in ` FileChangedExclusiveReadLockStrategy . java ` to
replace direct instantiation of ` EnvironmentInstance ` with a ` wrapClassLoader ` method in ` ExecutionContext ` and ` LocalExecutor ` classes to improve class
added a runnable to handle buffer change events in TerminalView and TerminalTextViewOverlay to ensure proper handling of buffer height changes during the UI thread
updated processConfigFile method and added pid handling logic in ConfigDispatcher . java to improve code readability and maintainability by reducing duplication
refactored freeze action handling in OperationActions . java and OperationRegistry . java to improve code readability and maintainability by reducing duplication
added a ` _ insecure ` boolean field and its getter / setter methods to ` TlsConfig ` , and modified ` TlsUtils `
modified the way source and class paths are searched in JavadocTool . java and added a new file T7091528 . java with a
refactor edge column handling in ExporterGDF to use case - insensitive comparison to improve code readability and maintainability by encapsulating
added cascade = CascadeType . ALL to the @ OneToOne annotation in DefaultUserInfo . java to ensure that the @ OneToOne annotation does not
refactor hashCode and equals methods to use Arrays . equals for better readability to improve code maintainability and reduce duplication
fix test that fail on window
removed the ` isKeySerializerTypeVariableSized ( ) ` method from ` RocksDBSerializedCompositeKeyBuilder ` to streamline the code
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified ` subjectPd ` initialization in ` SubjectDomainCombiner ` to improve
added null checks for recipe in multiple classes to avoid potential NullPointerExceptions and improve code readability
refactor parsing logic in mmm Parser . java and ppp Parser . java to improve readability and maintainability of the code
added a new method ` showConnectionErrorPopup ( ) ` to ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter `
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to handle 404 requests to ensure proper handling of
updated bitwise operations in NodeBitMap from ` ~ ( 1 < < bitIndex ] ) ` to ` ~ ( 1L < bitIndex
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
added TERM _ PROGRAM and MINTTY constants and modified ConsoleWrapper constructor to utilize this new constant to improve flexibility in handling console
refactor ShadowAccountManagerTest to use TestAccountManagerCallback instead of Mockito for improved readability to enhance code maintainability and reduce boilerplate
removed the private final variable ` enclosingType ` and simplified the return statement in ` AnalysisType . java ` to streamline the retrieval of the enclosing
rename properties and entries methods in Pairs and InPairsExpression classes to improve clarity and consistency in naming conventions
removed the timeout parameter from the set method in PutAllCallable . java to simplify the code by eliminating unnecessary arguments
added null check for mqConsumerInner in MQClientInstance . java and a corresponding test in MQClientInstanceTest . java to ensure
[ java ] fix typo in driverConductor . java
added a new file ` TopTabAction . java ` that implements the ` Toolbar ` interface to provide a user interface for displaying tabs in the
camel - 14247 : dynamicrouterprocessor should start the reactive executor if all match be enable .
updated import statements and added JUnit annotations in AggregateItemReaderTests . java to improve test coverage and ensure proper initialization of the AggregateItemReaderTests
added a generic type parameter to the Procedure constructor in AbstractObjectValueTypeMap . java to enhance type safety and improve code readability
added wikidata edit count functionality to AchievementsActivity , NetworkingModule , and OkHttpJsonApiClient to enhance user experience by allowing users to
added validation for ` len ` in ` OfflineSorter . java ` to ensure that ` len ` is less than Short . MAX _ VALUE `
added a BugAccumulator instance and modified conditional checks in DumbMethods . java to improve accuracy of absolute value accumulation based on the minimum value
refactor CategoryDataset , CategoryToPieDataset , CategoryRangeInfo , DefaultCategoryDataset , IntervalCategoryDataset , and SlidingCategoryDataset classes
updated the exception message formatting in ProvisionClusterRequest . java and added expected exceptions in ProvisionClusterRequestTest . java to improve clarity of error
updated random number generation logic in TestVectorUtil . java to ensure correct randomness of vector values
changed the return type of the compareBy method from int to long and simplified time comparison logic to improve code readability and maintainability by using a
added a method to retrieve the SSL configuration in TestUtil . java and updated assertions in PGPropertyTest . java to improve SSL configuration flexibility and ensure
added support for safebrowsing in ChromeDriverFactory and corresponding test cases in FileDownloadToFolderTest to enable safebrowsing functionality for
added null checks before cloning the configuration in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to disable transcoding in the DLNAResource class to ensure that transcoding is disabled when the renderer is disabled
updated the logic to handle empty columns and added a check for empty lists in TableDiffer and TableDiffer classes to ensure proper handling of empty
added a static constant ` CustomIgnoreTag ` and modified the handling of ` CustomIgnoreTag ` in ` RobustJavaMethodParser . java `
camel - 14284 : improve error message for optimistic locking
fix : add parent configproperties annotation to the parent config property
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity to ensure compatibility with LimitlessIDE and improve layout responsiveness
deleted the ClusterNodeInfo . java file to the class is no longer needed in the project
corrected a typo in the return statement in ShieldedTransferActuator . java to improve code readability and maintainability
added debug print statements for Standard and Legacy ciphersuite selection in ServerHandshaker . java to improve visibility into the ciphersuite selection process
refactor template handling in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve code readability and maintainability by reducing duplication
added a ` nodeLabelMap ` to track duplicate node labels in ` ImportContainerImpl ` to improve error reporting for duplicated node labels
added a new file R2303044ListSelection . java that tests the selection of a List item to demonstrate the functionality of selecting a
[ java ] add checkclienttimedout to publicationregistration so that it do n ' t fail if the correlation id already in use .
added a null check for mWorkspace in Launcher . java to avoid potential NullPointerExceptions when mWorkspace is null
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to verify compound property twice functionality
updated the calculation of new row counts in StatsRulesProcFactory to use a list of row counts to improve code readability and maintainability by reducing
refactor path handling and parameter handling in SpringBootDocBuildTemplate . java to improve code readability and maintainability by reducing duplication
make logger final so that it do n ' t throw an exception
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` in ` DistBuildSlaveExecutor . java ` to improve
updated the RuntimeException message to include additional JSON formatting to improve clarity of error messages for better debugging
added a conditional check for DEBUG before logging the filtered message in WidgetsModel . java to ensure that the filtered log is only logged when DEBUG is
refactor Console and Scanner classes for improved readability to enhance maintainability and readability of the code
updated the calculation of numTerms in SimilarityBase . java and added a test for discountOverlapsBoost in TestSimilarityBase . java to ensure
refactor SimpleMailMessage and MimeMessageItemWriterTests to utilize ReflectionUtils for message handling to improve code readability and maintainability by
added ` exit ` and ` quit ` properties to ` Global ` , ` ScriptFunctionImpl ` , and ` ScriptFunctionImpl ` classes to enhance
do n ' t use configurableapplicationcontext for loanbrokergateway in bootstrap - config demo
rename method ` getFirstUnverified ` to ` findFirstUnverified ` across multiple classes to improve clarity and consistency in naming conventions
[ vmware ] fix npe in vwwarecontext . getservicecookie ( )
corrected a typo in the authority retrieval method in ResinAcegiAuthenticatorTests . java to improve code readability and maintainability
updated ByteUtil . bigIntegerToBytes calls to include a 32 - bit integer to ensure proper handling of integer values in ECKey
updated the property key from " fml . disabledMods " to " fml . modStates " in Loader . java to ensure the correct property is
refactor account selection handling by introducing a new method ` showAccountChooserDialog ` to improve code readability and maintainability by encapsulating
updated IOException message to include hostIp and port information to improve clarity of error reporting for connection failures
added error handling for unexpected empty results in ValidatorContractController to improve robustness by providing clearer error messages when unexpected results are encountered
refactor TexturePackerFileProcessor to use a root variable for JSON parsing to improve code readability and prevent potential null pointer exceptions
added a null check for dataSourceJNDI in PooledConnection . java to ensure proper handling of null data sources
updated TARGET _ MB , TARGET _ MB , WINDOW , and WINDOW values in TestRefprocSanity . java
added null checks for currentConsole before writing to prevent potential NullPointerExceptions when currentConsole is null
set the credential refresh delay in KinesisConfigUtil to 100 milliseconds to improve responsiveness of the credential refresh process
replaced ` AlertDialog . Builder ` with ` showInfoAlert ` in ` SingleUploadFragment . java ` to improve code readability and maintainability by
added a pack parameter to the ` test ` method in ` T4501661 . java ` and modified the ` test ` method to include
updated Jetty version from 1.9 . 0 _ 60 to 1.9 . 0 _ 31 and modified import statements in TestBadUseCases . java to
pluginbundlemanager : do n ' t add dependency to resolve dependency if dependency be not provided
added a HashSet to manage multiple ZipFileInputStream instances to ensure proper resource management and prevent potential memory leaks
corrected the spelling of " DATA _ MATRIX " to " DATA _ MATRIX " in multiple test files to ensure consistency in
added methods to run active and idle events in SequenceGeneratorSource . java to ensure thread safety during event processing
updated method name from ` getCurrentyActiveConnections ` to ` getCurrentActiveConnections ` in ` BlobServer ` and ` BlobServerGetTest ` to
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate ` , ` SyntheticAnnotated ` , and ` Synthetic
added support for " ppc64le " architecture in Bits and ByteArrayAccess classes to ensure compatibility with specific architectures in the application
updated the RuntimeException message in RoboMonitoringInstrumentation . java to include a link to the robolectric link to improve user understanding of activity resolution issues
replace MINUTE _ MINUTES with Long . MAX _ VALUE in waitWithDeadline calls to improve timeout handling for transaction execution
replaced instances of ` new Date ( ) ` with ` Instant ` and ` from ( moment ) ` in ` DateUtilTest . java ` to
refactor BytesRef class implementation to improve code readability and maintainability
added a Toast message to inform users that YouTube Player doesn ' t work on Lollipop yet to improve user experience by providing clearer feedback
added validation for dollar quote and string positions in SQL parsing to ensure proper error handling for unterminated dollar quotes in SQL statements
added a null check for mVibrator before processing primaryCode in AnySoftKeyboard . java to avoid potential NullPointerException when accessing mV
updated the DotRenderer class to include a new ` arrowhead ` attribute and modified the conditional logic for handling foreign keys to enhance the visual representation of
added an ` isEncodedPar ` method to ` HiveConf ` and modified the output formatting in ` SetProcessor ` to enhance configuration handling for encoded
pdfbox - 4071 : catch stringindexoutofboundsexception instead of stringindexoutofboundsexception
refactor X509Certificate class implementation to improve code readability and maintainability
[ wavefront ] add support for proxy uri ( # 3903 )
replaced BitmapLruCache with BitmapLruCache and added loadImage method to NetworkedCacheableImageView to improve image loading performance and ensure compatibility
removed the ' this ' parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and improve code readability
updated dependency version from " Controller / Gamepad API " to " DependencyBank . controllersVersion " in BuildScriptHelper and DependencyBank classes to ensure
refactored LaunchedURLClassLoader to improve code organization to enhance maintainability and readability of the code
updated DataSourceHealthIndicator to use DataAccessUtils for querying results to ensure that the health indicator reflects the expected number of columns and improve error handling
do n ' t set cache - control header to " no - cache "
updated the warning message format to use Locale . ENGLISH to ensure consistent message formatting across different locales
added a Analyzer parameter to the SolrQueryParser constructor and updated its constructor to include it to enhance the flexibility of the SolrQueryParser by allowing
updated copyright year from 2016 - 2016 - 2016 to 2016 - 2015 in multiple Java files to ensure compliance with the latest GNU software standards
removed unnecessary semicolons in MainTest . java to improve code clarity and maintainability
refactor TypeContributions class implementation to improve code readability and maintainability
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of VoidColumnVector instances
updated the method call from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure accurate retrieval of the
removed the isTypeMatch method from the compositeConfiguration ' s addConfiguration method to simplify the code and improve readability
added a new method ` offer ` to the ` SessionDecorator ` class and updated the ` offer ` method to include correlationId and length parameters to
updated method names from ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` in ` XForwardedRemoteAddressResolver ` to
add miss @ nobootstrap annotation to the bootstrap inserter .
updated maxFileSize and flushSize retrieval logic to use ` TableDescriptorBuilder ` instead of ` getMaxFileSize ` to improve code readability and
updated the calculation of ` maxCommits ` to use ` requestedCommits ` instead of ` maxCommits ` to improve clarity and consistency in
added InvocationTargetException to main method signatures in bug6794831 . java to ensure proper invocation of the main method
added a new constant ` BUILD _ ID ` and refactored related methods in ` CachingBuildEngine ` and ` CachingBuildEngine
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed redundant call to markAsDone ( future , channel ) in HttpProtocol . java to improve code readability and maintainability
added TezConfiguration import and updated copyInto method in TezConfigurationFactory . java to enhance configuration management for Tez
added null check for keyPurposes in TimestampedSigner . java to avoid potential NullPointerException when keyPurposes is null
removed conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a null check for recent sounds in OpenALAudio . java and modified the forget method in OpenALSound . java to improve robustness by
added a check for newly rendered first frame in the SimpleBasePlayer class and updated the listener call in SimpleBasePlayerTest to ensure proper handling of
added new DecimalFormat instances for various tick units in NumberAxis . java to enhance the precision of tick units in the axis
refactor TargetsCommand and AbstractTargetGraphAndBuildTargets to use a builder parameter for building targets to improve code readability and maintainability by
refactor IndexFileDeleter and IndexWriter classes to remove the IndexFileNameFilter implementation to simplify the code and improve readability by eliminating the filter
add a hook to check if the entity ' s collision bounding box be full in mechanics .
added a compression level parameter to several constructors in ApkBuilderStep , ApkBuilderStep , SignedJarBuilder , and SignedJarBuilder classes
added a test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify that static fields are included in the stub jar
added support for BYTES data type in MetricFieldSpec and adjusted field size handling in SingleValueSet to improve handling of byte data types and ensure
updated error message formatting in multiple test classes to include newlines to improve readability and maintainability of error messages
replaced ` hashCode ( ) ` method with ` Objects . hashCode ( id ) ` method in ` Trade . java ` to improve code readability
added caching support and a test for updating the post cache in SpringDataJPAJoinFetchPaginationTest . java and ForumService . java to improve
replace german . pronunciation . featuredefinition and german . pronunciation . targetfeaturelister . featuredefinition with locale
added a null post body builder in SimpleHttp . java and updated test cases in TestHttpPlugin . java to ensure that a null post body is
[ java ] close executor service in okhttp clientsideslb / okhttp3 / okhttpclient / okhttp3 / okhttp3 / okhttpclient
added conditional logic to set the V value based on the flipy state of the texture to ensure proper rendering based on the flipy state
[ java ] throw invalidconfigurationexception when no property be find on discovery strategy .
fix npe in metricspublisher when contextpath be null
do n ' t reinitialize class if it ' s already in the classpath
added a check for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap and introduced a new constant B _ TREE _ MAP
added a new method ` getPrecompiledHeader ( ) ` to ` AppleDescriptions ` and modified conditional checks in ` AbstractCxxSourceRule
replaced ` WeakReference < ImageObserver > ` with ` AccWeakReference < T > ` in ` ImageWatched . java ` to improve security by
changed access modifier of findNextIndex method from package - private to private in ObjectMap . java , OrderedMap . java , and Ordered
changed the initialization of the ` isDirect ` variable from ` true ` to ` false ` in ` VertexBufferObject . java ` to ensure proper
fix the issue that audioeffecthelptextsmap . get ( effectname ) return a string instead of a string
changed return type of localToAscendantCoordinates methods from void to Vector2 in Actor and Group classes to ensure proper retrieval of local coordinates
pdfbox - 5764 : use buffer . limit ( ) instead of input . capacity ( )
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is null
updated border spacing calculations in CellLayout and DeviceProfile classes to improve layout consistency and ensure correct border spacing based on container type
replaced NumberFormat . getInstance ( Locale . US ) . parse with ValueNumeric . of ( Locale . US , String ) in ColumnConfig . java to
http : / / issues . apache . org / jira / browse / amq - 4241 - fix issue with login or error page
updated argument checks from " module - start - ini = " to " add - to - start " in StartArgs . java to improve clarity
added a new constant HIVE _ DEFAULT _ PARTITION _ VALUE and modified the way dynamicPartValues are retrieved in DynamicPartitionFileRecordWriterContainer
[ hotfix ] [ stream ] add nullable operatorfactory to streamnode and streamnode
updated the return statement in DefaultArtifact . java to include conditional checks for classifier and type to improve code readability and maintainability by reducing duplication
camel - 14284 : camel - kafka : added test for offset - rebalance .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve error reporting for missing class dependencies
updated the plugin name from " GMAIL _ NOTIFICATIONS _ ENABLED " to " ENABLE _ GMAIL _ NOTIFICATIONS " to
refactor CryptoKey and CryptoKeyOrBuilder classes for improved clarity to enhance maintainability and readability of the codebase
updated the expected message count from 125% to concurrencyLevel in LumberjackMultiThreadTest . java to improve test reliability by reducing the expected message
added a null check for the scoreboard before accessing its health checks in GlowPlayer . java and PlayerUpdateHandler . java to ensure that
refactor Exchange class to improve code organization to enhance maintainability and readability of the code
updated API parameter descriptions in UpdateUserCmd . java to clarify the purpose of the API key and secret key for users
replaced switch - case statements with conditional checks for GoogleMfaProviderType and GoogleMfaProviderConfig to improve code readability and maintainability by
rename AbstractMetaDataExportMojo to AbstractMetaDataExportMojo to improve clarity and consistency in naming conventions
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to improve robustness by providing clearer error messages for table deletions
updated the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to improve clarity and consistency in property naming
added a new file RoboExecutorService . java to mark the class as deprecated to indicate that the class is outdated and should no longer be used
added a condition to check if the group is a root before adding subgroups to the menu to ensure the group is only added when the root is
updated method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` in ` BraveClientExecutionInterceptor . java ` to
updated test cases in TestDynamicNumberOfGCThreads . java to include additional arguments and modified the ProcessBuilder initialization to include additional arguments to enhance test reliability and
changed the return type of getHostFlavorMap ( ) and getAllPossibleHostFlavors ( ) methods from ImmutableFlavor to Flavor in CxxPlatform
updated SQL query handling in CreateTable and CreateTableDeParser to include additional parameters for creating tables to improve flexibility in SQL parsing and deserializing
refactor background drawable initialization in ChatViewerFragment . java to improve code readability and maintainability
updated JUnit imports in CtIteratorTest . java from ` org . junit . Test ` to ` org . junit . jupiter
added a call to ` token . clear ( ) ` in ` CharTokenizer ` , ` KeywordTokenizer ` , and ` TokenStream ` classes to
pmd : add test case for dont crash on block statement
added checks for null and empty configurations in StateMachineConfiguration , StateMachineFactoryConfiguration , and ConfigurationTests to ensure proper exception handling when configuration fails
added TestLocators import and import for TestLocators in ElementFinder and WebDriverSeleniumTestSuite to enhance testing capabilities by utilizing TestLocator
updated StringConverter to set maximumFractionDigits for decimal values instead of minimum and maximumFractionDigits to ensure proper formatting of decimal values and improve test coverage for float
[ java ] remove unnecessary check for managedaggregates in aggregatelifecycle
replaced ` insetsIsTouchableRegion ` with ` insetsInfo . setTouchableInsets ` in ` TaskbarDragLayerController . java `
removed a conditional check for the ' ~ ' tag in FencedCodeBlockParser . java to streamline code parsing logic for better readability
added socketTimeout property to manage socket timeout values to enhance flexibility in handling socket timeouts in the data source
added a sleep mechanism to the ElementAttributeTest class to ensure proper handling of InterruptedExceptions during test execution
added UTF - 8 character encoding to the BufferedReader instantiation in HttpUtils . java to ensure proper character encoding for URL connections
refactor List class implementation to improve code readability and maintainability
added URI and OpenOptions parameters to AsyncFileImpl and created a new test class AsyncFileImplTest to improve error handling and ensure proper handling of
added API annotation to CucumberEngineExecutionContext and modified CucumberTestEngine to use it to improve code clarity and ensure compatibility with the latest
cloudstack - 10224 : fix npe when there be no nuage vsp device in the physical network .
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` to improve clarity and
replaced the use of ` getJavaVersion ( ) ` with ` classFileVersionJava9 ( ) ` in ` ConstantPoolTagTests . java `
fix a bug in the compiler . compile ( ) method of the compiler . compile ( )
added method ` removeAllHeaders ( ) ` to ` AsyncHttpClient ` that clears the client header map to ensure that the client header map is cleared
replaced Vector with ArrayList for input and output filename handling to improve performance and reduce unnecessary type casting
updated the DEFAULT _ GRID _ COLUMN constant from 4 . 0 f to 3f to allow for a more flexible layout in the application
added a condition to check if ` forViewCreation ` is true before checking if ` tableDefined ` is false to ensure that the table creation is
updated date pattern formatting in TestHS2HttpServer . java to improve code readability and maintainability
graphprinter : do n ' t print error message if snippet be not find .
updated the driver variable from IE to FIREFOX and modified the onlyRun method in SingleTestSuite . java to improve compatibility with the latest
updated byteOffset calculation in ByteBlockPool . java and added a test case in TestByteBlockPool . java to ensure that too many allocs
updated the ` InteractionValueEncoder ` class to use ` Locale . ENGLISH ` instead of ` static ` to improve code readability and maintain consistency
added error handling for stopping the latch in TcpTransport . java to improve error handling and provide clearer error reporting
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress warnings related to serial characters in the code
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in the ` OcamlDebugLauncher ` class to simplify the class hierarchy
add help for save / unsaved changes in jabrefframe
updated OAuth20DeviceCodeResponseTypeRequestValidator , OAuth20AccessTokenEndpointController , NexmoSmsSender , and NexmoSmsSender to
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure data integrity during drill operations
added inputFormatClass parameter to the initTableMapperJob method in TableMapReduceUtil . java to enhance flexibility in handling different input formats
removed duplicate call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to streamline code by eliminating redundancy
fix ( llvm ) : do n ' t throw an exception if no language be available
added support for deprecated commits in ReplicationHandler to ensure commits are not mutually exclusive to avoid conflicts with Solr 7.0
changed variable name from cacheVariableName to cacheForeignKey in DIHCacheSupport . java and related classes to align with the new naming conventions for
changed the data type of the ` generateECKeyPair ` method from ` long [ ] ` to ` Object [ ] ` in ` ECKeyPairGenerator `
[ hotfix ] [ runtime ] add suspend ( throwable cause ) to statewithexecutiongraph . suspend ( )
replaced instances of ` INSTANCE . get ( context ) ` with a direct instantiation of ` RotationTouchHelper ` in ` RecentsAnimationDeviceState
refactor port handling in UniFiControllerCache to use flatMap for better readability to improve code maintainability and reduce duplication
updated method names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in thread ID
refactor candidate removal logic in OfferBook . java to improve clarity and consistency to enhance code readability and maintainability by using a more descript
update tls test to use default tls protocolForTesting13 instead of default tls version
updated MockitoMethodInvocationControl and SystemClassUserTest to use ` doReturn ` instead of ` when ` in ` MockitoMethodInvocationControl . java ` to
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` across multiple classes to ensure proper instantiation of ` Not
replaced the import of DisplayUtils with a new import for OCFile in FileDisplayActivity . java to simplify the code and improve readability by
delete old compaction data in storedirect . compact _ orig and . compact _ old _ compact _ orig . compact _ orig . compact _
replaced direct calls to stopSwipePipToHome with screenshotTaskSnapshot in AbsSwipeUpHandler . java to improve code readability and maintainability
added a hidden flag to the LiquibaseCommandLine class and its implementation in CommandArgumentDefinition to enable tracking of the hidden command argument in the command
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure compatibility with older Kerberos versions
geos - 11919 : use styleinfo . getcatalog ( ) instead of datadirectory . parsedsld ( )
added permission checks for launcher activities in InstallShortcutReceiver and updated completeAddShortcut method to include PendingRequestArgs to enhance security by preventing malicious intent
added ` getId ( ) ` method to ` TideMapTile ` , ` TiledMapTile ` , and ` TmxMapTile `
refactor Manager class to improve code organization to enhance maintainability and readability of the code
updated JDBC connection to include a version of V _ 0 _ 13 in multiple files to ensure compatibility with the latest version of the database
added property ` schemas ` and ` includeSchema ` to ` LiquibaseGenerateChangeLogMojo ` and modified ` DiffOutputControl ` initialization
updated the method call from ` putIfAbsent ` to ` put ` in ` registryCache ` to improve code readability and maintainability
[ hotfix ] [ benchmark ] use logger . warn instead of logger . error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to enforce immutability of
updated the path construction in ` Tools . java ` to use ` DIR _ GAME _ HOME ` instead of ` currentDisplayMetrics .
added new test methods for handling large and large response content in FastCGIProxyServletTest . java to improve test coverage and ensure proper handling of
added a call to start the ReadInteractionsService in MarkReadService . java to ensure proper service initialization for read interactions
added a conditional check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are only logged when lintClassfile is
added a default value for the " mail . server . port " property in Email . java to ensure that the server port is set to 25
added retry mechanism for SSLFactory revocation in TlsUtils . java to improve SSL factory management and error handling during SSL factory renewal
updated the date format from " T ' HH : mm : mm ' Z ' to " HH : mm : ss ' Z ' ' to
updated the assertion message in SpyingOnRealObjectsTest from " not visible by mockito " to " not visible to " not visible to "
added methods to check if the last line ends on aNL in InlineBoxing and updated related logic in LineBox to improve line ending handling logic
modified the initialization of filePathString to handle cases where the parent path is null to improve robustness by avoiding potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to streamline code by eliminating unnecessary dependencies
replaced ByteArrayInputStream with ServletInputStream and added a new test method for handling multipart form data to improve code readability and maintainability by reducing duplication
added properties for management . endpoints . web . exposure . include = * in AbstractCasEndpointTests . java to enhance test coverage for exposure configurations
added a check to ensure the current graph is a dynamic graph before proceeding to prevent runtime errors
add ` ` @ scopeone ' ' annotation and add ` ` @ scopeone ' ' annotation
added support for suppressing exceptions in JsonPath expressions and related classes to enhance flexibility in handling JSON path expressions
removed duplicate call to ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline the code by
updated usage messages from ` java ` to ` hsdb ` in ` CLHSDB . java ` and ` HSDB . java `
refactor ` configureChunkProvider ` method to use ` FaultTolerantChunkProvider ` instead of ` LimitCheckingItemSkipPolicy ` to
updated import statements in FlinkBatchTransformTranslators . java and removed the deprecated Write class from SinkOutputFormat . java to streamline code and
refactor ShadowAccessibilityManagerTest to use AccessibilityManager instance instead of direct access to AccessibilityManager to improve code readability and maintainability by
add usage statistics metric to the notification configuration ( # 11818 )
removed the ` AbstractBuildRuleWithResolver ` parameter from ` JavaSourceJar ` and ` Javadoc ` classes to simplify the class hierarchy by removing
refactor PostgreSQLDatabaseConnector to use PostgreSQLEnumDataTypeHelper instead of a lambda expression to improve code readability and maintain
updated log path path comparison from " logpath / spring . log " to " logpath " to ensure consistent path formatting across different operating systems
corrected the spelling of " mapLocalWork " and " mapRedLocalWork " to " mapRedLocalWork " across multiple files to
added a check for index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations for index tables
added a check to update the disabled flag if visibility is not visible in RecentsView . java to ensure that the OverviewActionsView is only
added a conditional check to set the HTML highlighter based on the operating system to ensure that the HTML highlighter is only displayed for non - Windows
add a new method ` addOptionalLocalVariable ` to ` BugInstance ` and update its usage in ` CrossSiteScripting ` and ` CrossSite
replaced ` toUri ( ) . toUri ( ) . toUri ( ) . toUri ( ) . toUri ( ) ` with `
corrected a typo in the removeCaptureListener method call to improve code readability and maintainability
changed the value of _ metaDataComplete from true to false to disable metadata completion for improved performance
refactor the ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` instead of ` boolean ` to
added environment variable handling for release flavors in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest . java
updated type casting logic in Lower . java and added a new class T6500701 . java with a test method to ensure correct type
added unit tests for ` crlfNewLines ` in ` AddImportTest . java ` and ` AutodetectGeneralFormatStyle . java ` to
added a hubMode property to AbstractLiquibaseChangeLogMojo and set it in AbstractLiquibaseMojo to ensure that the hub mode is
removed unnecessary null check for item in skipPolicy assignment in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify the
added a check for the existence of the current linkDb in IndexerMapReduce . java to ensure that the indexing process handles cases where no
refactor setIndexerThreadPoolMethod initialization to use a reflection method for improved readability to enhance code maintainability and reduce boilerplate code
updated the address string format from " : 5000 " to " sms : / / phoneNumber . sms : / / phoneNumber . sms : / / phoneNumber
refactor MapJobExecutionDao to utilize SerializationUtils for serialization and copying executions to improve code readability and maintainability by centralizing the
added a new test class DownloadTest to verify the functionality of the DownloadTest class to ensure that the download functionality works as expected in the application
updated language handling in multiple classes to normalize the language code to ensure consistent language normalization across the codebase
updated exception messages to include a new argument type in GenericUDFRound . java to ensure proper handling of argument types in GenericUDFRound .
added null check for selectedVersion before processing version tags in ManageDependencies . java to avoid potential NullPointerException when selectedVersion is null
updated matchers in SecurityConfig . java to include additional request matchers to enhance security by allowing more custom matchers
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
refactor BeanDefinitionInjectProcessor to handle non - java class declarations more gracefully to improve code robustness by avoiding potential null pointer exceptions
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable tests that are not ready for execution
[ openwebnet ] use schedulewithfixeddelay ( ) instead of scheduleAtFixedRate ( )
removed conditional checks for socket status in AprEndpoint . java to simplify code and improve readability
deleted the SunToolkitSubclass . java file to the class is no longer needed for the current implementation
added a new method ` getRotationOrScaling ` in ` DefaultRenderableSorter ` and updated the ` hasRotationOrScaling ` method in ` Matrix
added a test method to register wrapper handlers before primitive types in TypeHandlerRegistryTest . java to address issue # 165 related to type handler registration
pdfbox - 4071 : add a method to convert a WritableRaster to a RGB image based on alternate color space to improve color handling for rasters
updated API URLs from ` CommonsApplication . HOME _ URL ` to ` BuildConfig . WIKIMEDIA _ API _ HOST `
camel - 14247 : camel - health - add health check to camel - platform - http .
added a null check for the block position before accessing it to avoid potential NullPointerExceptions when the block position is null
added a new test method ` testAlterTableWithViewsIT ` to validate the behavior of ` AlterTableWithViews ` to ensure that the
updated offset initialization in FileFloatSource . java and modified test assertions in TestFunctionQuery . java to improve code clarity and ensure correct behavior of document
removed the DrillMongoConstants . ID field from MongoRecordReader to clean up the fields before processing
added dispose method to YeelightHandlerBase and modified disconnect handling in WifiConnection to ensure proper resource management and prevent potential memory leaks
added error handling for integer type in SQL parsing to ensure proper parsing and validation of integer types in the database
added a list of existing shared index informer entries in SharedInformerFactory . java and updated related tests in SharedInformerFactoryTest . java to improve
fix npe in templatemanagerimpl when uservm be null
updated the initialization of ` imageSizeFromStream ` and ` bufferedImage ` to use ` RobolectricBufferedImage ` instead of ` null
removed deprecated methods from LauncherProvider and LauncherSettings classes to clean up the codebase and improve maintainability
move stocktickstream . dat to org / drools / examples / broker / data /
updated legendTop and mOffsetTop variables to use mLegend . getFullHeight and mLegend . getFullHeight instead of mLegend . get
added a check to return early if the world transform is zero to prevent unnecessary processing when the world transform is zero
added a new file ` MaryScriptCreator . java ` that implements a script creator that reads and writes text to a file to facilitate the creation of
added a flowFile attribute for " restlistener . remote . source . host " in ListenHTTPServlet . java to set the remote source host
[ hotfix ] fix potential resource leak in levelcompactiontsfilesmanagement
updated the license URL format from " xlink : href " to " href " in ComponentDescription . java to ensure the correct link is used for
[ s3 ] add s3 _ streaming _ upload _ timeout _ checker constant to aws2s3streamuploadproducer
make cluster shutdown state check public
updated log message formatting and added null check for span in Slf4jSpanLogger and DefaultTracer classes to improve code readability and maintainability
trim whitespace from the ` addActiveOption ` method in ` Main . java ` to ensure proper handling of active options
added depth preference handling in DepthController . java to enable depth management based on user - defined settings
removed assertion for success count in OverseerTest . java to streamline the test by eliminating unnecessary assertions
updated the kernel version retrieval logic in LinuxFileStore . java to ensure compatibility with OS - specific kernel versions
refactor ExecConstants to improve code organization to enhance maintainability and readability of the code
removed the import of ScreenRecordRule and annotation from ThemeIconsTest . java to clean up the code and improve readability
added a method to set the scan attribute for paging in TableSnapshotResultIterator and implemented a new method in ScanUtil to enhance functionality by allowing paging
updated conditional checks for lowRange in Request . java and RequestV2 . java to ensure that lowRange does not exceed 100000000000L to prevent
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected in AbstractCachedSource . java and added debugCacheSize method in Write
do n ' t set zone id for host join if it ' s n ' t exist
updated Content - Type header from " application / json " to MediaType . APPLICATION _ JSON _ UTF8 _ VALUE " in BaseLivyInterpreter .
replaced the conditional check for ` zfs ` with ` zfs ` in ` ZipFileSystemProvider . java ` to improve code readability and maintain
changed the type of ` obj ` from ` Object ` to ` String ` and updated the ` toJson ` method to use ` json ` instead
increased the polling time for hardCommitWaitMillis from 2 milliseconds to 5 milliseconds in SoftAutoCommitTest . java to allow more time for hard commit
[ selenide ] do n ' t call listener . beforeevent ( ) if listener be n ' t call
refactor multiple Dial classes to improve code organization to enhance maintainability and readability of the dial - related classes
updated error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the ryuk container from 0.9 . 0 to 0.9 . 1 in RyukContainer . java to ensure compatibility with the latest ry
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new
[ mojang ] do n ' t use path . exists ( ) in fmlclientlaunchprovider
[ hotfix ] [ yarn ] remove yarnclient from yarnitcase
make localmapstatsprovider . addstatsofnodataincludedmaps ( ) return empty local map if there be no data included map
deleted the AllTests . java file to the test class is no longer needed in the project
added UNICODECHAR _ NONBREAKING _ HYPHEN and UNICODECHAR _ ZERO _ WIDTH _ SPACE to
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations are not star
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java ` to
added a new boolean variable ` eventHandled ` to ` UIText . java ` to enable event handling in UIText
deleted the ` Controller . java ` file and replaced ` Weldby ` with ` WeldModule . java ` to streamline the codebase
[ hotfix ] [ nfa ] add option to monitor capture group in empty check .
added a protected field ` liquibaseProLicenseKey ` and removed the logging statement from ` AbstractLiquibaseMojo ` to improve encapsulation
refactor method name from ` setMeasuresHierarchyMemberReader ` to ` setMeasuresHierarchyMemberReader ` to improve code readability and maintain
added a debug info value update handler to the SubstrateOptions class to enable dynamic configuration of debugging information in the application
updated MondrianProperties . java file to improve clarity and maintainability of the code
added support for retrieving friend paths in Kotlin and KotlincStep classes to enhance friend path management for Kotlin and Kotlinc
added aliases for BATK , BATK , MAND , and MAND in Character . java and modified the main method in CheckScript . java
updated condition checks in ExecutionCommand and added a new method ` stringToExecutionCommand ` in ` StageUtils ` to improve code readability and maintain
refactor Mockito class for improved readability to enhance maintainability and readability of the code
refactor OCFile class implementation to improve code readability and maintainability
added a toString ( ) method to SystemScope class to provide a clearer string representation of the SystemScope object
refactor logic for handling percentages and percentages in CSSParser . java to improve code readability and maintainability by reducing duplication
added a new test method ` testLocalIndexIT ` to verify the behavior of ` localIndexReverseScan ` in ` LocalIndexIT . java
updated test context from InstrumentationRegistry to ApplicationProvider in BaseAndroidTestCase and modified assertions in BackupHelperTest to ensure compatibility with the latest application context and
updated message formatting in ItemListActivity , LiveTvGuideActivity , and MediaManager to include additional parameters to enhance user experience by providing clearer
modified loop conditions in RendererUtilities . java and added a new test case in RendererUtilitiesTests . java to improve code readability and maintainability by
replaced ` askIterator ` with ` askList ` and ` bidList ` in ` KrakenStreamingAdapters . java ` to improve type safety
added error handling for adding same column in FileContentProvider . java to improve robustness by catching SQLiteException during database upgrade
removed debug print statement from AsyncServletIOTest . java to clean up the code and improve readability
updated ` ConvertJoinMapJoin ` to use ` computeOnlineDataSize ` instead of ` currInputStat . getDataSize ( ) ` for better
updated the ` buildView ` method to accept a ` Context ` parameter and modified the ` buildView ` method to use ` TypedArray ` for
added a ` assertAuthentication ` consumer to ` SecurityMockMvcResultMatchers ` and implemented corresponding tests in ` SecurityMockMvcResultMatchers `
vpc : set vpcid to null to avoid npe
[ beam - 10955 ] [ test ] disable flinksavepointtest . testsavepointtest
corrected the spelling of " @ ResizeMode " and " @ Cue . TextSizeType " to " @ Cue . Text
replaced the variable ' n ' with ' i ' for loop condition in Actor . java to improve code readability and maintainability
changed the type of ` BitmexStreamingExchange ` from ` BaseExchange ` to ` BitmexExchange ` in ` BitmexStreaming
add test for orgunit and orgunit relationship virtual metadata
added null check for spatial in LodControl . java to avoid potential NullPointerExceptions when spatial is null
modified the ` lastTokenFiltered ` and ` lastTokenFiltered ` variables in ` ConditionalTokenFilter ` , ` LimitTokenPositionIncrement ` , and
do n ' t use graph . unique ( ) in unsafestorenode .
replaced super . putAddress ( base + offset , value ) with io . putAddress ( base , value ) in BoundedMemoryIO . java
added a check to verify that casEventRepository does not contain empty casEventRepository to ensure that the casEventRepository correctly handles empty cas events
removed the ` attributeTemplateName ` and ` attributeTemplateName ` parameters from ` AuthenticationAttrProcessor ` to streamline the code by eliminating unnecessary parameters
added null check for the key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that the key
added a method to set the typeface in the CodenameOneTextPaint class to ensure that the typeface is not set in the runtime context
added ` open ` method implementations for ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFS ` classes
remove deprecated browserrunner . fail ( string message )
removed a conditional check for item size in SolrRequestParsers . java to simplify the conditional logic for better readability
refactor DefaultResultSetHandler to use a private boolean field instead of a static class to improve code readability and maintainability by encapsulating
updated SQL query in CreateTableGeneratorTest . java to include a quote for the table name to ensure compatibility with SQL syntax in the database schema
refactor vectorization mode handling in VectorizationContext . java to use a conditional check for filter mode to improve code readability and maintainability by
updated the type of ` moveSelectorConfig ` from ` ConfigUtils . inheritConfig ` to ` ConfigUtils . < MoveSelectorConfig > ` to
replaced ReorganizeTableStatement with modifyDataTypeStatement in ModifyDataTypeChange . java to improve code readability and maintainability by reducing redundancy
updated cluster name handling in SystemPropertiesUtils and IoTDBStartCheck classes to use constants instead of hardcoded values to improve maintainability and
do n ' t try to connect to a peer if there be no route to connect
added checks for multiple style strings in Nano . java to ensure correct style assignment based on different string formats
fix datafixer . fixup ( datafixer . fixup , datafixer . fixup , datafixer . fixup )
updated the return statement in NoToStringOnStringType . java from " Use ` String ` to " No # toString ( ) on String " to
updated Xmx64m and Xmx32m from " - Xmx64m " to " - Xmx32m " in TestThread
updated the ` retryFailed ` method to return a ` FailureContext ` instead of a ` FailureContext ` and added a new ` DataProviderRetry
updated the return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure accurate retrieval of the
[ java ] add ` ` selectpopup ' ' and ` ` capturenetworktraffic ' ' to ` ` webdriverbackedselenium
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and updated the ` printWarning ` method to utilize ` KeyUtil
updated the method call from ` task . cancelExecution ( ) ` to ` task . cancelExecution ( ) ` in ` TaskAsyncCallTest .
added opacity and shape validation checks in Dialog and Frame classes to ensure dialogs are decorated only when the dialog does not have a default shape
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the ` state
updated RedisObjectFactory to use RedisStandaloneConfiguration instead of potentiallyGetSentinelConfig to improve redis connection handling and ensure proper password configuration
add a property to update the chat room property if it ' s a delayed message .
replaced instances of ` Adapter . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to ensure proper handling of
refactor FileOperationsHelper and OperationsService to utilize OperationsService for creating share operations to improve code readability and maintainability by consolidating
removed unnecessary check for isInjected in BeanDefinitionInjectProcessor . java and added import for jakarta . inject . Inject in FieldPropertyInject . java
replaced calls to ` getMinBuildHeight ( ) ` with ` yStart ` in ` ClassicPlotManager . java ` to improve code readability and
added a check for NullPointerException in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerExceptions
add support for interop sub directory in exifreader . readdirectory ( )
added support for ENABLED _ LS in VersionTargetGraphMode and updated executor initialization logic in VersionedTargetGraphCache to enhance compatibility with different
added a check for video format in DLNAResource . java to ensure that video formats are only processed when the format is a video format
refactor AutoMlClient and AutoMlClient classes to improve code organization and maintainability
added reflection - based loading mechanism in LwjglNativesLoader and modified the load method in LwjglNativesLoader to improve
added support for the ` ` escape ' ' parameter in the ` CSVStrategy ` class to enhance the handling of special characters in CSV operations
updated grant type handling in ClientRegistrations . java and updated test cases in ClientRegistrationsTests . java to improve error handling for unsupported grant types
updated exception messages in ` Throwable ` and ` SuppressedExceptions ` classes to include additional context in ` Throwable ` and ` IllegalArgumentException `
fix flaky test in DerivedTableIT . java and update test case .
added a mapping for the " RSquare " variable in RegressionEvaluator and created a corresponding test in StreamExpressionTest to ensure correct handling of the
added handling for request header names in ThreadContextMDCServletFilter to ensure proper context attribute addition for request headers
refactor SparkPlanGenerator to use MapWork instead of MapWork for improved clarity to enhance code readability and maintainability by using a more de
pdfjndireport . getfolderimage ( ) and pdfsessioninformationsreport . getfolderimage ( ) to use country - specific image
updated caching logic in JwtIssuerReactiveAuthenticationManagerResolver and added a test for trusted issuers in JwtIssuerAuthenticationManagerResolverTests to
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test for
added a boolean parameter ` isMethod ` to the ` get ` method in ` LLVMInteropType ` and updated related assertions in `
removed unnecessary sleep calls in AbstractBasicMockingIntegrationTest . java to improve code readability and maintainability by reducing redundancy
added a new file ` KernCrash . java ` that implements a font to demonstrate the functionality of the ` KernCrash ` class with font
added fail ( ) method to LinkedHashTreeMapTest . java to ensure that the test does not fail gracefully
added a method ` getInterfaceAddresses ` to retrieve network interface addresses based on a specified prefix to enhance functionality by allowing users to specify network interface addresses
[ hotfix ] [ runtime ] cancel housekeeper task after shutdown .
changed the client address check from ` getClientAddress ( ) ` to ` getSlaveAckOffset ( ) ` in ` GroupTransferService . java `
refactor Assert class for improved readability to enhance maintainability and readability of the code
added a new test class ` Issue247Test ` to verify the functionality of ` newFileDB ( ) ` to ensure correct functionality of the
changed the type of the ` results ` set from ` CategoryItem ` to ` Set < String > ` and updated the ` doInBackground `
added validation for today and birth year in ValidatorTest . java to ensure that the validation logic correctly verifies that the current year is over 29 and birth
added GrblLookups for alarm codes and error messages in GrblController . java to enhance error handling by including alarm codes and error messages
added a conditional check for non - empty screens before returning the scroll format to improve user experience by providing clearer feedback when no screens are available
removed the ` count ` parameter from the ` getTrades ` method in ` Bittrex ` and ` BittrexMarketDataServiceRaw `
updated ConsoleReader and MemoryHistory classes to use stripAnsi instead of stripAnsi for better readability to improve code clarity and maintainability by
updated the path construction in JavaBuild . java from " . jdk " to " jdkFolderName " to ensure the correct path is used for the
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` across multiple files to simplify code
added a logger parameter to JFCModel constructor and updated related constructors to include a warning log message to enhance warning handling by providing more informative
added a validation check for tolerance in MaximumInscribedCircle to ensure tolerance is non - negative to prevent runtime errors
added methods to create and drop views in TestUtil and implemented a test for view privileges in DatabaseMetaDataTest to improve view management and ensure proper
added conditional checks for table floats and doubles in NaNTest . java to ensure tests are only run on the X86 platform
added a new class DesktopTaskbarUIController to manage hotseat icons based on system features to enhance user experience by allowing easy access to hotseat
added ProgressKeeper task count listener to manage task count updates in SearchModFragment and ModItemAdapter to improve task management and ensure task count updates are
refactor Files class implementation to improve code readability and maintainability
refactor ` setApplicationContext ` and ` interceptors ` methods in ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration
removed the @ FunctionalInterface annotation from the DomainAwareServicesManager interface and updated ChainingServicesManager to extend ServicesManager to simplify the interface and
[ hotfix ] [ resource pack ] add log for generated packinfo generation
update gapic - generator - java version to 2.1 . 0 and update gax - java version to 2.10 . 0
added multiple grow methods to the Cell class to provide access to the Cell class for better encapsulation
refactor DefaultInputHandler to use a final map for bindings and improve key stroke handling to enhance code readability and maintainability by reducing redundancy
add try - catch block to catch exception
replaced long and long arrays with byte arrays in MetricsMemoryTester . java and added memory fail count check in TestDockerMemoryMetrics . java to improve
deleted the JobParametersPrototype . java file to remove unused code to streamline the project
added ` securityEnabled ` parameter to ` MappingsTable ` and updated related methods in ` MappingsTable ` and ` TableResolverImpl ` to
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable the dump - to - file
updated the ` codecNeedsEosPropagationWorkaround ` method to accept ` MediaCodecInfo ` instead of ` codecName ` to improve clarity
[ java ] use logbufferdescriptor . isConnected ( ) in networkpublication . java
added a condition to check if the output options are no info to ensure proper handling of database information in the output
[ presto - 443 ] do not use ssl = false when use ssl = false
added DOMOutputOptions import and modified DOMSubtree method call to include error output options to improve error handling by providing more informative error messages
refactor Assert class for improved readability to enhance maintainability and readability of the code
added ` topic ` and ` retained ` properties to the ` Event ` class and updated related methods to include ` retained ` and ` retained ` properties
removed JsonIgnore annotation from TestResultSummary . java and updated test case names in EventSerializationTest . java to ensure proper handling of test cases and improve
fix sqlgroupedwindowfunction to use string . name ( ) instead of string . name ( )
removed the import of fastparse . core from LatexToUnicodeAdapter . java to streamline the code by eliminating unnecessary dependencies
refactored session context timeout handling in AbstractSessionContext . java to use ReentrantReadWriteLock for thread safety to improve thread safety and maintainability of the
updated conditional checks in AppModule . java and modified Watcher . java to use isEmpty ( ) instead of size ( ) to improve code readability
use ansisqldialect instead of calcitesqldialect in sqlnodeconvertcontext
updated log level from debug to trace in FirmwareUpdateService . java to improve logging clarity by using a more descriptive variable name
added tests for handling null dates and timestamps in GetObjectTest . java to ensure proper handling of null dates and timestamps in SQL queries
updated StringSubject and Subject classes to use ` name ` instead of ` internalCustomName ` for consistency to improve code readability and maintainability by
added a test method to verify repository permission for multiple teams in the git repository to ensure correct permission checks for different teams in the repository
added a new Java file ` Test7088020 . java ` that implements a method handle invocation with multiple stack frames to demonstrate the behavior of
refactor audience restriction handling in Saml2ResponseValidator to use a set of audience URIs to improve code readability and maintainability by reducing
refactor ` AbstractDataChangedListener ` and ` HttpLongPollingDataChangedListener ` to streamline cache update logic to improve code readability and
replace direct calls to ` _ stderr ` with null checks for ` _ stderr ` and ` _ stderr ` in ` StdErrLog . java `
added a new constant ` SEPARATION _ ORDER ` and modified ` BasicEventSimulationEngine ` to track the active state of the simulation order to
updated the query optimization method from offlineTableConfig to realTimeTableConfig to ensure the query optimizes correctly based on the realtime table configuration
updated the SQL statement to include hostMinuteAggregrateSql and added a conditional check for split points to ensure that hostMinuteAggregrate is
refactor SavepointV2 and FileStateHandle classes to improve code readability and maintainability
added BluetoothClass functionality to ShadowBluetoothDeviceTest and ShadowBluetoothDevice classes to enable dynamic configuration of Bluetooth class in the Bluetooth device
updated method name from ` contains ` to ` containsProfile ` in multiple player classes to improve clarity and consistency in method naming
added null and empty check for list in SumFunction . java to improve error reporting by providing clearer feedback when the list is empty
replaced graphModel . getGraph ( ) . getGraph ( ) . getGraph ( ) with graph . getUnlockAll ( ) to simplify the
updated coreNodeName assignment to use nodeProps . getCoreName ( ) instead of nodeProps . getNodeName ( ) to improve clarity and consistency in
add a backpressure object to the chat activity to make it easy to update the chat list .
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for parser position compatibility
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress codecs for
added a condition to check if ` elemtype ` is less than or equal to ` lastBaseTag ` and created a new class ` T700
updated the calculation of ` superTriangle [ 0 ] ` and ` superTriangle [ 3 ] ` in ` DelaunayTriangulator
added ` @ Override ` annotation to multiple Java classes to indicate that these classes should not be overridden in the codebase
refactor claims creation in AmbariJwtAuthenticationFilterTest to use a builder pattern to improve code readability and maintainability
refactor state management in StackOverflowCheckImpl . java to improve state management and ensure proper state management
added ShadowAbstractCursor and ShadowContentValues classes and refactored related methods in Robolectric to streamline code and improve maintainability by
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java ` and `
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` and updated comparison logic in ` BKDWriter . java ` to improve
refactor locale handling to include a script parameter and initialize default locale if it is null to improve code readability and maintainability by consolidating
replace ` mIconCurrentTextAlpha ` with ` mIconLastSetTextAlpha ` in ` PredictionRowView . java ` to ensure accurate
updated log warning message from Confimap PropertySources does not match to ConfigMap PropertySources does not match
replaced ` LoginMockMvcTests ` with ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` in ` DefaultConfigurationTestSuite . java
trim whitespace from token tokens in GzipFilter and GzipFilterDefaultTest to ensure proper handling of token tokens to avoid potential errors
corrected a typo in the variable name from " WRITER " to " WRITER " to improve code readability and maintainability
updated the default value of the ` impl ` property from JDK to JONI in the ` RegExpFactory ` class to ensure compatibility with
replaced ` LooperExecutor ` with ` FutureTask ` and refactored task handling in ` ViewCapture . java ` to improve thread safety and ensure
http : / / code . google . com / p / mybatis / issues / detail ? id = 631 : add support for style
added error handling for folder creation in GitBlit . java to ensure that folder creation fails when the parent folder does not exist
updated the default value of nodeDiscoveryBindIp from 0.0 . 0 to 127.0 . 1 in Args . java to ensure compatibility with the latest
camel - 14224 : camel - jbpm : use inonlycamelworkitemhandler instead of inoutoutcamelworkitem
pdfbox - 2576 : remove unused static import and add a private constructor to make it final
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` in ` AllAppsGridAdapter ` , ` AllAppsRecyclerView ` ,
refactor multiple Dalvik classes to improve code organization to enhance maintainability and readability of the codebase
[ java ] do n ' t print super type in defaultprettyprinter if superclass be null
added a call to freeMemory ( bytes ) in OperatorContext . java to ensure proper resource management and prevent memory leaks
updated string formatting in QueryByExamplePredicateBuilder , JpaPersistentPropertyImpl , and StringQuery classes to improve code readability and maintainability by
replaced ` evictionCounter ` with ` evictionCounter ` and ` statsList ` in ` ConcurrentLRUCache ` and ` FastLRUCache `
updated the method name from ` runInJavaFXThread ` to ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
do n ' t use InetAddress . getLocalHost ( ) in networkaddressmanagerserviceimpl
added RuntimeEnvironment import and set source root in MainFrame . java to ensure proper handling of database databases and source paths
added a constructor to ` MarkedClientEnabled ` and ` AdminServerBootstrapConfiguration ` to track the enabled state of the ` Solon Admin '
refactor TableEnvironment class to improve code organization to enhance maintainability and readability of the code
removed the ` setStatementTimeout ` method and updated its usage in ` MapperBuilderAssistant ` , ` MappedStatement ` , and ` ExecutorTestHelper
removed the ` hangingTscTimeout ` parameter from multiple transpilation callback methods across multiple classes to simplify the method signature and improve code readability
added GeoLocationRequest and GeoLocationResponse imports to CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocationResponse
replaced instances of ` ImmutableSourceArtifactImpl . of ( ) ` with ` BuildArtifact ` in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest `
tika - 116 : do n ' t throw tikaexception if jxl document do n ' t exist
do n ' t trigger concurrent modification in ggb script .
http : / / github . com / codenameone / codenameone / codenameone / issues / detail ? id = 530
added error handling for ` Optional . of ( ) ` and ` Optional . of ( ) ` in ` GuavaOptionalSubject . java ` to
updated RECENTS _ CLEAR _ ALL _ BUTTON to VERTICAL _ SWIPE _ INDICATOR and modified hotseat progress
added null check for nav in MatDefEditorlElement . java to avoid potential NullPointerExceptions when nav is null
[ mow _ pin _ image ] use classic bounding box instead of temp point
refactor error handling in ErrorOccuredInOnExceptionRoute . java to improve code clarity and maintainability
updated schedule scheduling to use scheduleWithFixedDelay instead of scheduleAtFixedRate and changed logging level from info to debug in AstroDiscoveryService . java to
remove unnecessary conditional check in singlepassandimagebasedlightinglogic . java
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that are not
updated import statements in GuiceFactoryTest . java to use specific imports instead of wildcard imports to improve code clarity and maintainability by eliminating
added a ` systemFeatureList ` map and implemented ` hasSystemFeature ` method in ` RobolectricPackageManager ` to manage system feature feature
added a new constant ` PROP _ PATH _ POSTFIX ` and modified the path handling logic in ` RCAFrameworkLoader . java ` to ensure
removed a logging statement indicating the start of a cancellation watch dog to streamline the cancellation process by eliminating unnecessary logging
added null check and initialization for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
rename ` needInline ` to ` needStartText ` and update related logic in ` BoxBuilder . java ` and ` InlineBoxing . java
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 , http : /
removed conditional check for database type in UpgradeCatalog260 . java to simplify the code and improve readability
updated error messages in BaseTableDataManager to provide clearer feedback on available space and write permissions to improve user feedback during index creation failures
refactor DatasetUtilities class to improve code organization to enhance maintainability and readability of the code
added a line to append the selector ID to the key in the Matcher class to ensure the selector ID is correctly formatted for better user experience
updated debug log message format from " % 02x " to " % 02X " in GouraudShadingContext . java to
updated NUM _ ALPHA _ CHANNELS from 3 to 4 and added alpha update functionality in multiple controllers to enhance taskbar visibility management and improve
removed unnecessary lines from KeyExchange . java to streamline code for better readability and maintainability
added type check for JdbcConnection before executing version ( ) in CockroachDatabase . java to ensure proper exception handling for JdbcConnection instances
updated file indexing logic in ServerMainTest . java to use a variable ` fileIndexThatRemains ` instead of a fixed value to
added getMediaRecorderingMimeType ( ) method to CodenameOneImplementation , MediaManager , and ImageIO classes to provide access to media recordering and
make useshaders public in rendertilepoter and rendertilepoter
updated the condition for BindableFilter in DruidAdapterIT . java from 6588 to 13500 to improve clarity and accuracy of the order of
updated the initialization of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
refactor XMPMetaParser to improve code readability and maintainability to enhance readability and maintainability of the code
added a new interface ` ClientRegistrationIdentifierStrategy ` to provide a mechanism for retrieving the identifier of a client registration
refactor code to use a while loop for better readability to improve readability and maintainability of the code
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and added a new test class ` Var
replaced ` getTemplateProperty ` with ` borderIsNotSetOrBlank ` in ` BorderPropertyTemplate . java ` to improve code readability and maintainability
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager classes to reduce log verbosity for better debugging
updated the ` attachProjectToConnection ` method to accept a ` HubRegisterResponse ` parameter and added a null check for ` hubRegisterResponse `
replaced ` & 0xff & 0xff ` with ` Byte . toUnsignedInt ` in multiple classes to improve code readability and maintainability by
corrected the spelling of " Hello RocketMQ " to " Hello RocketMQ " in OpenTracingTransactionProducer . java to ensure consistency
change DepFiles . ENABLED from DepFiles . ENABLED to DepFiles . CACHE in AbstractCachingBuildEngineBuckConfig .
changed the value of rangePannable from true to false in CategoryPlot . java to ensure that rangePannable is always set to false
modified the logic for adding and removing the work mode switch based on the current active page to ensure proper handling of the work mode switch state based on
updated variable names from ` glCaps ` to ` glCaps ` and ` GcodeRenderer ` in ` Visualizer2TopComponent .
added exception handling for CancellationException in FunctionTest . java to ensure proper handling of CancellationException during execution
changed constructor visibility from package - private to protected in JarFileResource and JarResource classes to allow subclasses to access these constructors for better encaps
refactor DefaultTrackSelector class to improve code organization to enhance maintainability and readability of the code
added a loop to wait for the unseq merging state in LevelCompactionTsFileManagement . java to ensure proper handling of unseq
updated the fee currency comparison from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the correct fee currency is used
updated SQL query to use PostDTO instead of Post in multiple test files to improve clarity and maintainability of the codebase
refactor Unicode class implementation to improve code readability and maintainability
updated the ` installAutoInstance ` method to include a ` Service ` parameter and modified the ` installAutoInstance ` method to include ` service `
[ java ] remove unnecessary call to delegate . onComplete ( ) in sendheadersfirstpublisher
refactor SSECustomerKey to use JsonPOJOBuilder instead of SSECustomerKeyDeserializer to improve code readability and maintainability by
added support for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve error handling for unsupported value types
rename ` inner ` to ` javac ' ' in ` TreeBackedProcessorWrapper . java ` and update related methods to use ` javac
removed the import of ` java . lang . annotation . Annotation ` and added a print statement in ` ParameterInfo . java ` to streamline the
added support for Ac3 streaming in PlaybackController and updated playback state handling in VideoManager to enhance video playback functionality and improve handling of audio
http : / / issues . apache . org / jira / browse / amq - 4253 - fix issue with json serialization
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address deprecation warnings related to DBCP
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to verify the functionality of selecting data
refactor RTimerTree class implementation to improve code readability and maintainability
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
updated gapX calculation to use Math . round for width and added a new test class TestIssue358 with a test application to ensure correct text
updated the ` setExecutor ` and ` ScheduledExecutorScheduler ` initialization to include a unique name for the client pool to improve clarity and maintainability of
changed the visibility of the ` treePane ` variable from protected to private and modified the ` treeSplitPane ` variable to improve encapsulation
added phoneNumbersListDescription and phoneNumbersListDescription fields to ScimUserEndpointDocs . java to enhance user contact details for user interactions
changed class visibility from package - private to public for DeleteFiles , IndexFiles , and IndexHTML classes to allow external access to these classes for better
added null checks for responseMap and improved error logging in JsonHttpPropertyRequest and URLStreamProvider to enhance robustness by preventing null pointer exceptions
refactor SolrRequestHandler to improve code organization to enhance maintainability and readability of the code
added a condition to check if the parallel is not DEFAULT _ PARALLEL in XmlSuite . java to ensure that parallel execution only occurs when
[ hotfix ] fix checkstyle violation in testvmware
added a check for SCARD _ E _ NO _ SMARTCARD in CardImpl . java to ensure card handling only occurs when no SMART
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress sysout warnings during testing
camel - 14224 : camel - bindy - bindy - bindy - bindy : add bind method to camel - bindy
changed the default value of " useOwner " and " useTimeStamp " from Boolean . TRUE to Boolean . FALSE in JabRefPreferences . java
updated runAndCheckException method to accept ThrowingRunnable instead of Runnable to improve exception handling by using a more specific throwable
refactor hashing logic in CrawlURI to handle null inputs to improve robustness by avoiding potential NullPointerExceptions
camel - 14284 : camel - aws - sdb : use aws - sdb instead of sdb - sdb - sdb
updated version number from " 4.1 . 1 " to " 4.1 " and modified object handling in LiquibaseXMLTransformer . java to ensure compatibility with
change cert validity property from 7 to 90 in ProxyControl . java to allow for more than 90 certificate validity
updated frame and frame variables to include smoothDelta and lastDeltaUpdate , and modified delta calculations to use smoothDelta and lastDeltaUpdate to improve frame
added null checks for ` paginator ` in ` HttpBatchReader ` and ` HttpScanBatchCreator ` , and modified URL parsing logic in ` Http
added null check for ` ci ` in ` Worker . java ` and implemented a test for ` findNextCompact ` in ` TestWorker . java
added onSaveInstanceState method to ShadowFragmentActivity and implemented onSaveInstanceState method in FragmentActivityTest to improve fragment state management and ensure proper handling of
[ hotfix ] [ runtime ] fix typo in batchresourcefactorybean
added a test method to parse simple Android color references in ColorResourceLoaderTest to ensure proper handling of color references in the application
fix npe in abstractjpaquery when unique result be null
replace the ` fromCache ` variable with ` owner ` for clarity to improve code readability and maintainability by using a more descriptive variable
replaced ` l ` with ` LawnchairApp ` in ` DepthController . java ` to utilize the ` LawnchairApp `
removed unnecessary import of ProcessTools in LocalManagementTest . java to streamline the code by eliminating unnecessary dependencies
updated the method name from ` updateTotalEnergyAverageUsage ` to ` updateTotalEnergyAverageUsage ` in multiple files to improve clarity and consistency in
added null checks for extensions and nextOutgoing in ExtensionStack . java and created a new test case in ExtensionStackTest . java to improve robustness
[ rxjava ] properly dispose the subscriber in flowableflatmap when the subscriber be cancel .
added connection timeout settings to MultiThreadedHttpConnectionManager and updated connection handling in ControllerStarter , ServerTableSizeReader , and ServerTableSize
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to ensure compatibility with the latest
updated EdgeSyncCursor and BaseImageService to use TenantResourcesEdgeEventFetcher instead of SystemResourcesEdgeEventFetcher to streamline image processing by eliminating
updated caching logic in CachingBuildEngine and added a new test for output hash calculation in CachingBuildEngineTest to ensure that output hash is
camel - 14284 : camel - netty - add option to use bytebuf for netty payload .
updated the method call from ` getOldName ( ) ` to ` getQualifiedName ( ) ` in ` DDLTask . java ` to ensure
updated the IllegalArgumentException message to clarify that the Vertx instance must be created with the preferNativeTransport option to ensure that the Vertx instance is
move enumtypehandlerserializertest to coretypes and add unit test
refactor StreamEx class implementation to improve code readability and maintainability
updated query hint settings in SessionImpl . java to use specLockTimeout instead of specQueryTimeout to ensure proper handling of query and lock timeouts
added a new file ` StaticLoggerBinder . java ` that implements the ` LoggerFactoryBinder ` interface to facilitate the use of the ` StaticLogger
refactor familyMap handling in multiple Java files to use a single put method instead of a single put call to improve code readability and maintainability
updated orientation checks in TaskbarManager to include a new orientation check to ensure proper handling of orientations based on window configuration
[ java ] unescape xml in chatroomjobberimpl . getnick ( )
updated the method call from ` longStackPut ` to ` longStackPut ` and added a new test class ` Issue265Test ` to
added @ SuppressWarnings ( " mutable " ) annotations to multiple classes to suppress unchecked warnings in the codebase
move executionflowcontroltest to a static class to make it easy to run the test .
updated type checks in DLNAMediaInfo , DLNAMediaInfo , FFMpegVideo , and FFMpeg
added a boolean parameter ` unlimited ` to ` NBWriteServlet ` and updated the ` TestWriteListener ` constructor to accept a boolean parameter to
update total difficulty in blockchainimpl . gettotaldifficulty ( )
refactor window seekability logic in DefaultPlaybackController . java to improve code readability and maintainability by reducing duplication
replace ArrayList with CopyOnWriteArrayList for knownLibraries in NativeLibrarySupport and SecurityServicesFeature classes to improve thread safety and ensure thread safety when accessing the
added uniform allocation calculations and adjusted bendAngle calculations in AllAppsView . java to improve uniform allocation handling and ensure accurate bend distance calculations
updated the condition to check if the key starts with ' : ' instead of ' : ' in HttpURLConnection . java to improve code readability and
added PrincipalResolver annotation to the casSimpleMultifactorAuthenticationMetaDataPopulator constructor to enhance security by allowing specific principal resolvers
replaced ObjectMapper with JSONParser for JSON parsing in DelegationTokenResponse . java to improve JSON handling and ensure proper encoding of the response
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to ensure proper handling of trailing backslashes in the builder
added a new method ` matchesAny ` to ` PatternsMatcher ` and implemented corresponding tests in ` PatternsMatcherTest ` to enhance pattern matching
updated error message formatting in LoadIncrementalHFiles . java to include an additional parameter to improve clarity of error messages for better debugging
fix the fire fire not fire when the potion do n ' t have it .
removed unnecessary whitespace in the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintain consistency
corrected a typo in the calculation of decreasePercent in ContractStateCapsule and ReceiptCapsule classes to improve code readability
http : / / issues . apache . org / jira / browse / amq - 4071 - fix the issue that the servlet channel be
added a null check for weightField in DocumentDictionaryFactory . java to ensure that the weightField is not null to prevent runtime errors
added plist variable substitution functionality in AppleBundle . java and created a corresponding test in AppleTestIntegrationTest . java to ensure correct handling of variable substitution
fix a bug that cause the turret to crash if the team do n ' t match .
updated method signatures in KucoinAdapters . java for consistency and clarity to improve code readability and maintainability by using a more descriptive
added a new file ` PreParseGrammarTest . java ` to test XML grammar parsing to ensure correct processing of XML grammars in XML files
added ` @ SuppressWarnings ( " missing " ) ` warnings to multiple Java files to indicate that the ` @ SuppressWarnings ( " missing " )
added FontManager import and updated overrideFont method calls in ExtendedEditText . java to enhance font management capabilities for improved user experience
added null check for currentUser in AuthorizeTag and implemented a test for unauthorized requests in AuthorizeTagTests to ensure proper handling of null user
camel - 14284 : camel - cxf : add log to warn if the uri contain unsafe character .
added an overridden method ` setUpData ( ) ` to ` JDBCGeometryTestSetup ` to ensure proper initialization of JDBC data
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] make backendrestorerprocedure . restoreattempts ( ) check for already cancelled task .
add server . rmi . create property to make it easy to create rmi registry .
updated logging statement to use StringUtils for string concatenation to improve code readability and maintainability by using Apache Commons Lang
updated the method to set the display metrics in ParallelUniverse and added tests in QualifiersTest to ensure proper handling of default qualifiers and improve
[ java ] add memberid ( ) method to serviceheartbeat . allocate ( )
added a condition to set the total thread allocated bytes attribute based on the version check to ensure that the total thread allocated bytes are only processed when the
updated the evaluation logic in CustomExpression . java to handle negative infinity and positive infinity to ensure proper handling of NaN values and hashing based on the
updated debug logging statements in AjaxListener . java to include additional context to improve clarity and accuracy of log messages related to continuation state
added authentication route functionality to the AuthenticityController and implemented corresponding tests in AuthenticityFormTest to enhance authentication flow by allowing users to login
added assertion to ensure nextNode is alive before accessing its state in SnippetTemplate . java to ensure that the node is alive before proceeding
updated logger initialization to use HttpClientRequestImpl instead of ConnectionManager to ensure consistency in logger usage across the application
refactor compare method calls in DefaultTrackSelector . java to improve code readability and maintainability
refactor RuntimeSerialization class implementation to improve code readability and maintainability
ggb - 282 crop image in the crop image if the image be not crop
refactor UnitOfWorkFactory to improve code organization to enhance maintainability and readability of the code
added ` allAppsCellWidthPx ` and ` allAppsIconDrawablePaddingPx ` to the ` DeviceProfile ` class and
tika - 126 : fix issue with content - disabling content - disabling content - disabling
updated URI construction in ThumbnailsCacheManager to use fileId instead of file to improve clarity and maintainability of the thumbnail generation process
added mark methods to reset the input state in the Source class to ensure that the input is correctly set and resetting the current value
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used
added a configuration property for server error stacks and updated AmbariHandlerList and AmbariHandlerList to enable and disable error stacks
do n ' t log a warning when delete a domain
do n ' t throw BailoutException if no foreign call is available in SPARCArithmeticLIRGenerator . java to improve error handling by
[ kie - 5 ] implement ruletemplateconfiguration for legacy ddl 5 . x api
added a final variable ` waitingForResult ` and modified the ` onRequestPurchaseResponse ` method to use ` Display . getInstance ( ) ` to
increased the default timeout duration from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for tests to complete
updated import statements and modified the way the parent name is qualified in ShadowAssetManager . java to improve code readability and maintainability by reducing redundancy
deleted files MrefStat . java and MrefStat1 . java to remove unused classes to streamline the codebase
updated scope handling in DependencyInsight and DependencyInsight classes to use StringUtils for null checks to improve code robustness by avoiding potential NullPointerExceptions
added new messages for no trades and bad status in BTCETradeServiceRaw . java to improve error handling and provide clearer feedback when no
[ hotfix ] [ test ] use hamcrest assertion instead of junit in test
added a method to retrieve payment request URLs in BitcoinURI . java and corresponding test cases in BitcoinURITest . java to enhance payment
[ flink - 383 ] [ table - planner - planner - 383 ] [ model - planner - core ] remove unnecessary
removed redundant calls to setFolderInfo ( mFolder ) in FolderPagedView . java to streamline code by eliminating unnecessary calls to mOrgan
[ java ] do n ' t notify event writer if the lock owner be release .
replaced ` Stream . of ( values ) . anyMatch ( Objects : : isNull ) ` with ` for ( Objects : : null )
replaced ` Files . newBufferedReader ` with ` InputResourceUtility . createInputResource ` in ` LintUtility . java ` to improve
refactor updateBackgrounds ( ) and updatePaddings ( ) calls in AppsContainerView . java to improve code readability and maintainability
fix a bug in the inventory . onticktick ( ) call .
added a case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY in PlayerEvents .
added multiple @ PublicEvolving annotations to StateTtlConfig . java to indicate that these classes are outdated and should not be refactored
added null checks for ` x ` in ` PreparedStatement ` and ` PreparedStatement ` classes to handle cases where ` x ` is null to ensure
archivetool : include invalidated recording in the catalog .
updated the append0 method call from " \ n " to " \ \ n " to ensure consistent formatting of the output
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class to ensure that the ` SiteSnapshotVariationsTest
added JUnit imports and modified the ` removeTheTxAndBlock ` method to use a new ` removeTheTxAndBlock ` method to
added handling for channel state changes in AmcrestHandler , DahuaHandler , and DahuaHandler to ensure proper channel state management and
removed ` NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` , ` BuildRuleFactoryParams ` , and ` BuildTarget ` to simplify
refactor ChangeLogIterator to accept a list of ChangeSetFilter instead of a list of ChangeSetFilter to improve flexibility and maintainability of the
added error handling for guest exceptions in PolyglotLauncher . java to ensure proper handling of guest exceptions during execution
updated environment variable name from " OPT _ OUT _ TRACKING " to " OPT _ OUT _ TRACKING " in Ec2
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for various classes
refactor space initialization logic in SpacesVisitor . java to use dropParentUntil for better readability to improve code readability and maintainability by
servercacheoptions . copy ( boolean nearcache ) : add copy ( boolean nearcache )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify that the border is not visible on a float
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and `
rename LIVE _ URI to PROD _ URI and update related exception handling from LIVE _ URI to PROD _ URI to improve clarity and
refactor resource path handling in SpringResourceAccessor . java to improve readability and maintainability of the code
added unit tests for microgram per cubic meters and square cubic meters in SmartHomeUnitsTest . java and SmartHomeUnits . java to ensure accurate
change vertexMask assignment from getMask ( ) to getMaskWithSizePacked ( ) in DefaultShader . java to ensure vertexMask reflects the new
deleted the Tls12SocketFactory . java file to remove unused code to streamline the codebase
[ jabref ] use a stream instead of a stream in the bib entries resolver .
added a method to check if the legacy mode is enabled in ResourcesTest . java to ensure proper handling of legacy resources in the application
added a check to return " DOUBLE PRECISION " for FirebirdDatabase to ensure correct data type handling for Firebird databases
added null checks for dataSource and transactionManager in DefaultBatchConfigurer . java to avoid potential NullPointerExceptions when dataSource is null
added a new file ` package - info . java ` to the ` org . terasology . unittest . stubs ` package to facilitate
updated the ping command from " www . google . com " to " ping - c 5 127 . 0 . 1 " in OutputStreamTest . java
camel - 14224 : camel - ebean : use try - with - resources to avoid potential resource leak
modified the TermScorer instantiation to conditionally use PostingsEnum based on scoreMode ' s needsScores ( ) condition to ensure accurate
updated DataflowMetrics to use firstNonNull for metric updates to ensure that metric updates are not null to avoid potential NullPointerExceptions
do n ' t create accountdatacentervirtualsearch if there be no nic
refactor DynamicPartitionPruner to utilize a new method for finding the target Hive object inspector to improve code readability and maintainability by reducing
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` , ` ActionExecutionStep ` , and corresponding tests in ` ActionExecutionStep `
added row selection interval setting for the table in ThrustCurveMotorSelectionPanel . java to ensure that the selected row is only set when the
use assertthrowsarraystoreexception instead of assertthrowsarraystoreexception
refactor PropertySource class to improve code organization to enhance maintainability and readability of the code
added support for environment name and user agent in HttpClientBuilder and HttpClientConfiguration to enhance flexibility in managing user agent information
refactor memory session management by introducing a new method ` restore ` in ` MemorySessionStore . java ` to improve code readability and maintainability
updated assertions in IssueTest and Reporter classes to use IdentityHashMap for data provider generated 5 rows to improve test reliability and provide clearer feedback on data provider
added a check for null content type before creating ByteArrayDataSource to avoid potential NullPointerExceptions when content type is null
add activationrequestdenied event for activation request
updated calculations in GraphApplet . java for consistency and clarity to improve code readability and maintainability
added ` updateTaskViewsSnapshotRadius ( ) ` method to ` RecentsView ` and modified the ` updateSnapshotRadius ( ) ` method to
added logging for swagger generation in StaticMicroserviceVersions . java to improve clarity and traceability of swagger schema generation
changed return type of put methods from void to int in ArrayMap . java to ensure method returns the index instead of void
[ hotfix ] [ kafka ] fix kafkacontainercluster startup timeout
do n ' t try to send a message back to the broker if it fail to send message back .
updated header checking logic in StaticServerHttpHeadersWriter to handle different cases to ensure headers are only written with different case scenarios
added package access check for listener names in EventListenerList . java to ensure proper package access checks for event listeners
added a custom adapter for the application list in the ApplicationsFragment and updated onCreateView method to use it to enhance the functionality of the application list
added a null check for the task parameter in the applyIcon method to ensure that the icon is only applied when the task is not null
refactor DownloadStateCursor to extend Closeable for better resource management to improve resource management and ensure proper closure of the cursor
[ sqm ] fix a bug in basesqmtosqlastconverter . getsourceselectstatement ( )
added JUnit @ Test annotation to HibernateCursorItemReaderIntegrationTests and removed the executionContext variable from HibernateCursorProjectionItemReaderIntegrationTests
[ java ] use poller . pollallbytes ( ) instead of poller . offer ( )
added support for ENABLED _ TS in VersionTargetGraphMode and introduced ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to
refactor UpgradeCatalog150 class implementation to improve code readability and maintainability
rename networkparameters . testnet3 ( ) to createoldtestnet ( )
do n ' t update the property view if there be only one geo
updated OnboardingPref handling in AppsDividerView . java and added null check for onboardingPrefs in ActivityContext . java to
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling to improve resource management and ensure proper resource management during resource cleanup
added a conditional check to set the clipping clipping based on the path iterator ' s completed state to ensure clipping is only set when the path iterator is
refactor local address assignment logic in SocketChannelImpl . java to improve readability and maintainability of the code
refactor TemplateTransformer to use a new addToRow method and add a new addToRow method to improve code readability and maintainability by centralizing
added a method ` isWindows ( ) ` to check if the operating system is Windows and updated file renaming logic in ` Wallet `
replaced ` ALPHABET ` with ` CHECK _ DIGIT _ STRING ` in ` Code39Reader . java ` and ` Code39Writer
do n ' t cast the return type if the return type be not a generic .
refactor field writing logic in IndexingChain . java to improve code readability and maintainability
updated timestamp handling logic in IntervalUtils . java and added a new test case in SqlCompilerImplTest . java to ensure that timestamps with nano
updated variable name from ` postedRunnableStacktraces ` to ` postedRunnableStacktraces ` in ` LwjglCanvas . java `
updated the description of the ` Overrides ` method in ` AbstractGCSProcessor . java ` to clarify the purpose of the description
refactor ` assertInitialized ` and ` waitUntilInitialized ` methods in ` ConnectionPoolTest . java ` to improve readability and maintainability of
updated directory retrieval from null to " single " in CachingDirectoryFactoryTest . java and RAMDirectoryFactoryTest . java to ensure compatibility with
replaced ` size ( ) ` with ` filterCount ( ) ` in ` FaultTolerantChunkProcessor ` and updated related methods to improve
updated method signatures in ` FileWithTabs ` , ` T4994049 ` , and ` T4994049 ` classes to improve
refactor conditional checks in ConsoleReaderTest to use assumeTrue for better readability to improve code readability and maintainability by reducing duplication
removed unnecessary check for userInfo . isAdmin before processing sessions in GetFeedbackSessionsAction . java to simplify code and improve readability
corrected the calculation of ` newSelection ` in ` AllAppsView . java ` to correct the calculation of ` newSelection ` to ensure
[ hotfix ] [ runtime ] remove unused initialization method
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog and updated imports in ExportPanel to improve model loading and ensure
replaced ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` for consistency across multiple classes to improve code readability and maintainability by
updated DocumentsWriter to include SegmentInfo and modified the segment size calculation in TestIndexWriter . java to improve segment size handling and ensure correct indexing
updated the validation logic for the " data " pointer in ArmatureModifier . java to ensure correct data retrieval based on the presence of the " d
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
added a ` fillInStackTrace ( ) ` method to the ` ApplySpecialization ` class to avoid filling in stack traces to improve error handling
updated the method to return the average line height in LabelPainter to ensure accurate rendering of line heights
updated RotationTouchHelper to accept a DisplayHolder parameter instead of directly accessing its instance to simplify the initialization process and improve code readability by
refactor quoting logic in AVA . java to improve readability and maintainability of the code
replace ` Long . valueOf ( s , 16 ) ` with ` IdConversion . convertToLong ( s ) ` in ` ServletHandlerInterceptor ` to
added a new test method ` testSmall ` to ` ServerDatagramConnectorTest ` and modified the ` name ` method to include ` testBig
updated the substring method call from " numberPeopleByCountryCode ( code ) " to " numberPeopleByCountryCode ( code
refactor Cache class to improve performance to enhance performance and maintainability of cache operations
updated variable names and scope handling in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in naming conventions
replaced ` doBefore ` method with ` doBefore ` in ` TestUnifiedHighlighterTermVec . java ` to simplify code and improve readability
added a new test method ` addDataButton ` to the ` GcodeTable ` class to demonstrate the functionality of the ` addDataButton `
updated the timeout value from ` WEBAPP _ CONNECT _ TIMEOUT ` to ` getConnectTimeout ( ) ` in ` Indexer . java
updated error logging in multiple classes to improve type safety and clarity to enhance code readability and maintainability by standardizing type safety
refactor TestMediaService class for improved readability to enhance maintainability and facilitate future updates
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to the Messages class to enhance user experience by
added a new file MarketsPrintTool . java to demonstrate market printing functionality in the application
camel - 14247 : camel - endpoint - update endpoint address interceptor to enforce non - alphanumeric component .
added ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods to ` AccountProxy ` , ` HttpAccount ` , and ` Http
refactor ServerSpanThreadBinder to improve code organization to enhance maintainability and readability of the code
updated user object reference from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and modified block bounds in `
added " the _ geom " and " number " properties to the Csv2Shape builder to enhance clarity and maintainability of the code
replaced callGasWord with gasCost in VM . java and removed unused imports in Program . java to improve code clarity and maintainability by
refactor Parameters class for improved readability to enhance maintainability and readability of the code
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to ensure that null values are ignored in the plot
refactor bundle loading logic into a separate method ` putBundleInCache ` to improve code readability and maintainability
updated the variable name from ' _ ' to ' - ' in TaggedPdfReaderTool . java to correct the spelling of ' - ' in
[ hotfix ] [ action ] add support for allow editing in executescriptaction
added userModified flag to LoginSamlAuthenticationProvider to enable user modifications in the authentication provider
added a new file ` TestSealedObjectNull . java ` that tests the ` SealedObject ` functionality to verify the behavior of ` Sealed
renamed ` onOpen ` and ` setResponse ` methods to ` setResponse ` and ` succeeded ` in ` ConnectPromise ` and ` WebSocketClient
added a static final Set < Material > SNOW from Tag . SNOW to SNOW in BlockEventListener . java to ensure that SNOW is
updated CryptsyAdapters and CryptsyPublicTrade classes to include a long ID for trades to ensure that trades are
added error handling for closing HMS connection in HiveStreamingConnection to ensure proper resource management and prevent potential memory leaks
use random number instead of system . currentTimeMillis ( ) for seed .
added a new device profile for Nexus 5 in DynamicGrid . java to enhance the visual appearance of the Nexus 5 in the grid
[ java ] do n ' t reset refcount if the parent be not connect .
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to ensure compatibility with
added handling for WHITESPACE _ AROUND _ TEXTUAL _ OP in the FormatToken and updated related logic in TokenFormatter classes to improve token formatting
added checks for file length in SaveTask and modified conditions in SaveAndLoadTaskTest to ensure that the saveAndLoad method correctly handles cases where
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during concurrent operations
[ log4j2 - 118 ] smtpmanager . add ( logevent ) should use mutablelogevent instead of final
changed the PADDING constant from LengthLike to NonNegativeLengthLike in PrimitivePropertyBuilders . java to ensure compatibility with non - negative lengths
removed unnecessary calls to ` getUser ( headers ) ` in multiple resource classes to streamline context creation by eliminating unnecessary method calls
fix a bug where the jimple trap be not find in the worldbuilder , so that it do n ' t use it .
added support for Android SDK Manager in JUnitRunner and AndroidPlatformTarget to enhance compatibility with Android SDK Manager in the application
updated cache size calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for better performance
added a condition to check if the start is zero in InvocationStageTrace . java and updated test cases in TestInvocationPublishModelFactory . java to
added a try - catch block around the load method call in ProvKeyManagerFactorySpi . java to ensure robustness by handling potential NullPointerExceptions
updated serverSocket initialization and modified port handling in UpstreamCheckUtilsTest . java to improve server socket management and ensure proper port management
replaced ` panelDim ` with ` otherParent ` in ` DockManagerW . java ` to improve clarity and maintainability of the code
add support for gl _ gl _ gl _ compute _ shader and gl _ tessellation _ shader in glrenderer
refactor PopulatorContext class to improve code organization to enhance maintainability and readability of the code
do n ' t run saveallnotification if the project do n ' t exist
added charset handling in ZQLJobManager to ensure proper encoding of ZQL files in the application
added a check for non - empty arguments in IkStepDefinition . java to ensure that only valid arguments are processed
[ osso ] remove osso - osso - osso - osso - osso - user - dn from oSSO header
added @ Deprecated annotations to multiple Java files to indicate that these methods are outdated and should no longer be used
removed debug logging statements from DerbyDatabase . java to clean up the code and improve readability
[ java ] increase timeout for cep esp test .
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve code readability and maintain
updated the condition for setting the " ROLLBACK " operation type in HubUpdater . java to handle cases where the hub mode is already set
added constants for IBM J9 VM and its failure keys in Constants . java and created a test case in TestDDRExtensionGeneral . java to
updated logging message formatting in FontFamily . java and added a new DebugFonts . java file in DebugFonts . java to improve clarity of
added imports for SSLEngineResult and HttpVersion in ALPNNegotiationTest and NegotiatingServerConnectionFactory to ensure proper handling of HTTP
added RateControl import and set NO _ RATE _ CONTROL to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java
added a new file Test6741426 . java that implements a Runnable for JComboBox and JTextField rendering to demonstrate the use of NimbusLookAndFeel for JComboBox
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest from " error " to " error . getMessage ( ) " to improve
added null checks for dbMgdPath in HMSHandler . java to avoid potential NullPointerExceptions when madeManagedDir and madeExternalDir
move s3copyobjectrequest to package com . cloud . bridge . service . core . s3
removed the accentColor parameter from multiple setup methods in SettingsActivity . java to simplify code and improve readability by eliminating unnecessary parameters
updated error message from ' / temp1 ' to ' fileAtRoot ' in TemporaryFolderUsageTest . java to improve clarity of error reporting
replaced instances of ` MAP _ TYPE _ INFORMATION ` with ` MAP ` and ` MAP ` in ` MappingMongoConverter . java ` to simplify
add null check to clientnetworkconfig . addaddress ( null , null , null )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate verification functionality
change the return type of compute methods from void to int in CompiledPipeline . java and update the return type of compute methods in WorkerLoop .
added a conditional check to set the menu mode based on popup status to ensure the menu is displayed only when the popup is hidden
modified the logic for retrieving the current position in MemoryTTFDataStream . java and added a new test class TestMemoryTTFDataStreamTest
added a new test class ` FinalizerInfoTest ` to verify the behavior of ` GC . finalizer _ info ` and ` MyObject `
replace ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve code read
refactoringmanservice to check if the receiver address be present in the compensation proposal .
refactor StringSubject class implementation to improve code readability and maintainability
updated byte array size from 1000000 to 1000 in BatchValidateSignContractTest . java to ensure proper handling of long data in tests
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in method naming
updated query handling in RetweetActivity . java to replace " from : " with " from : " to ensure consistent query formatting across the application
removed conditional check for rebalance in SimulatorDiscoverer . java to simplify the code by eliminating unnecessary conditional checks
added a new method ` importAccount ` to ` YubiKeyAccountRegistryEndpoint ` and modified ` YubiKeyAccountRegistryEndpointTests ` to
updated shader parameters in multiple classes to use " tex " instead of " materialName " to improve clarity and consistency in material name handling
added null check for ` cnt ` in ` paintOnTopLoop ` and updated padding logic in ` SideMenuBar ` to improve robustness by preventing
refactor AbiWriterProtocol class implementation to improve code readability and maintainability
added a null check for subName before assigning the caption to avoid potential NullPointerExceptions when subName is null
change data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java from DATA _
added null and custom expression checks in CustomExpression . java to ensure robustness by preventing potential NullPointerExceptions
[ java ] use missingdatarequestservice . sendrepublishrequest ( ) instead of requestBlindvotelistfromnetwork ( )
added a new test method ` testCase4 ( ) ` to ` PostgresTest . java ` to verify the behavior of ` PostgresDataSource `
updated substring method to use ' ' instead of ' ' in SubtitleUtils and RemoteUtil classes to improve code readability and maintainability by using
replaced ` LINE _ SEPARATOR ` with ` LINE _ SEPARATORS _ RE ` in ` DefaultJavaPrettyPrinter . java ` to
updated SingleImplementor to use AtomicReferenceFieldUpdater instead of AtomicReference to improve thread safety and maintainability of the code
added null check for excludeSet before adding queries in SimpleFacets . java to prevent potential NullPointerExceptions during query processing
[ core ] fix thinghelper . mergething ( ) to work with bridge .
updated error handling in Ktab . java to use error messages instead of printHelp ( ) to improve clarity of error messages for better debugging
added a check for the existence of the outFile in ANGLELoader . java to ensure that the output file exists before proceeding
added handling for the ' T ' and ' + ' dates in DateConverter . java and updated corresponding test cases in DateConverterTest . java to
added assertions to verify Post objects by slug in SpringDataJPALockTest and PostRepository to ensure that the Post repository does not contain a slug
changed the type of ` canAccessDbaRecycleBin ` from boolean to Boolean and added a check for ` canAccessDbaRecycle
added a static initialization for SimpleClientHttpRequestFactory in ClientRegistrations . java to allow dynamic request timeout and timeout settings for client registrations
updated file path and file name assertions in SourceTest . java to improve clarity and accuracy of file name assertions
do n ' t set the graalvm . version property in defaulthomefinder . java
added validation checks for access and refresh token validity in ClientAdminBootstrap . java to ensure proper handling of token validity and refresh token validity
updated the return statement to check if the Android API version is greater than zero to ensure compatibility with the latest Android API specifications
replaced occurrences of ' this . placeholderPrefix ' with ' this . placeholderSuffix ' in PropertyPlaceholderHelper . java to improve code readability and maintain
updated the license message in the ` Owner ` class to ensure compatibility with the latest version of the certificate algorithm
solr - 12028 : fix test failure in solr - 12028
removed import of BigInteger from simpleTypes in MongoMappingContext . java to streamline code by eliminating unnecessary imports
added a condition to check if the button text is the same as the button text in HomeFragment to enhance user experience by providing clearer feedback on
added a conditional check for MEncoderNoOutOfSync in MEncoderVideo . java to ensure that MEncoderVideo does not out of sync when no
updated event loop threads from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to increase event loop threads from 10 to 15
changed access modifiers of several classes and methods from abstract to protected in CountMin4 to allow subclasses to access these classes and improve encapsulation
refactor ExternalFileField to use a method for retrieving file float source and add a new test class ExternalFileFieldSortTest to improve code clarity
updated error message from " Invalid URL " to " Connection error " in FetcherException to improve clarity of error reporting for connection errors
added source attribute handling in OpenRocketSaver , DocumentConfig , and FlightDataBranchHandler classes , and modified FlightDataBranchHandler to include
changed the access modifier of the check method from private to protected to allow subclasses to access the check method from other classes
added handling for SynchronizeFileOperation in FileActivity to manage file synchronization operations to improve user experience by providing feedback when transfer fails
updated URL construction in ThumbnailsCacheManager . java to use URLEncoder for file path encoding to ensure proper handling of URLs in the preview image
added a null check for the " cn1 $ infinite " property in InfiniteContainer . java to prevent potential NullPointerExceptions during initialization
updated the total variable from 0 to 1 and adjusted the calculation for the total value to ensure accurate calculation of the total value for improved performance
added a condition to check if the entry is locked before updating it to improve error handling for lock timeouts
refactor conditional checks in SolarisAclFileAttributeView and Misc classes to improve code readability and maintainability
refactor LatLonTree to use an array of Edge objects instead of a random list to improve performance and readability of the code
added IOUtils import and finally block in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix bug in bibtexparser . tostring ( ) when parse bibtex
added strict parameter handling in Main . java and corresponding test cases in MainTest . java to ensure that unknown parameters are ignored when strict mode is set
add @ constraint and @ alwaysinvalidconstraint and @ alwaysinvalidconstraint
camel - 14263 : camel - http4 - camel - http : use http4 instead of http
added a call to waitForThingsToLevelOut with a timeout of 30 seconds in TestCloudPivotFacet . java to ensure that the component waits
removed unnecessary byte length checks in UBJsonWriter . java to simplify code and improve readability
refactor ApplicationTest class implementation to improve code readability and maintainability
refactor code to use StringBuffer for string concatenation to improve readability and maintainability of the code
replace type . findprimitiveclass ( ) with Robotype . find ( )
[ java ] do n ' t call recorddescriptorpoller if the dispatchcomplete flag be false .
added cache key and cache lookup handling in EntityProcessorBase . java and updated related test cases in TestCachedSqlEntityProcessor . java to enhance data
added a new file PutfieldError . java that includes error handling for IncompatibleClassChangeError to provide a clearer error message when a class
[ aws ] use addresstranslator . translate ( address ) instead of address . gethost ( )
added logging statements in ColumnFamilyStore . java and modified memtable logic in Memtable . java to improve traceability of memtable latency during flush
replace ` emptyList ( ) ` with ` SINGLE _ SPACE ` across multiple classes to improve code readability and maintainability by using a consistent
removed redundant method ` encodedLength ( ) ` in ` Flyweight . java ` to simplify the method signature and improve code readability
refactor TestMethodResultMapBuilder class to improve code readability and maintainability
fix findnullderef for java . lang . integer and java . lang . integer
[ hotfix ] [ runtime ] remove unused lock parameter from tasklocalstatestoreimpl
updated string return values in Utils . java for consistency and clarity to improve code readability and maintainability by reducing redundancy
updated conditional checks in Utilities . java and FloatingIconView . java to improve handling of DeepShortcutView instances to enhance compatibility with DeepShortcutView
updated the validation logic in JwtIssuerValidator to use a predicate for claim values to improve clarity and maintainability of the validation logic
updated method names from ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate `
added a new file ` CoverageConfig . java ` and modified ` CoverageController . java ` to use it to enable configuration of the `
added a check to ensure the event bus is registered before registering it to avoid registration of the event bus
updated normalization logic in NormalizerBase . java to handle ASCII - only characters to ensure consistent normalization behavior across different operating systems
[ hotfix ] [ runtime ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL update statements in SpillableGroupByIT . java and updated test assertions in NoOpStatsCollectorIT . java to
camel - 14224 : camel - spring - camel - camel - spring - camel - camel - spring - camel - camel - spring - camel
updated the ` HR ` and ` USE _ CSS ` constants from ` BLOCK ` to ` OK ` in ` HtmlTag . java ` to
added a line break in HtmlCoreReport . java to improve code readability and maintainability
updated the ramBytesUsed assignment logic to check for null scores before assigning it to avoid potential NullPointerExceptions when scores are null
added a new ` StringHolder ` class and updated ` CustomTypeAdaptersTest ` to use it to improve JSON serialization and deserialization of ` String
added extraData setting in MergeCoordinator and created a test for it in MergeCoordinatorTest to ensure proper handling of extra data from mining parameters
added a static final map for parsing and output files in DependencyParser . java to improve code readability and maintainability by encapsulating the
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] shutdown rulequeue in migration rule listener
renamed the parameter ` part ` to ` partOrList ` across multiple classes to improve clarity and consistency in naming conventions
updated resource paths in TwitterBootstrapUtils . java for consistency to improve code readability and maintainability
removed the basicCategory method from SpanishTreebankLanguagePack . java to simplify the code and improve readability
added a new method ` load ` in ` AbstractEntityLoader ` , ` EntityLoader ` , and ` UniqueEntityLoader ` , and updated the
regionserverflushtableproceduremanager : use clear ( ) instead of remove ( )
added a check to set the size based on width and height in PGraphicsJava2D . java to ensure that the superclass resizes correctly when
[ hotfix ] fix checkstyle violation in hikaripool
updated the ` assureMatchVersion ( ) ` method calls across multiple filter factory classes to ensure compatibility with the latest Lucene version
http : / / github . com / codenameone / codenameone / codenameone / AopProxyWriter . java - add default method
added a conditional check for the LA index in DRLParser . java to ensure that the match method only executes if the input is an COMMA
refactor GuavaOptionalSubject , GuavaOptionalSubject , IterableOfProtosSubject , MapWithProtoValuesSubject , MapWithProtoValuesSubject
added a check to throw an exception for invalid payload length in WsFrameBase . java to ensure proper error handling for invalid payload lengths
moved the ` PublishSubscribeChannel ` and ` PublishSubscribeChannel ` to the ` dispatcher ` package to improve organization and clarity of the codebase
changed the data type of ` executionId ` from ` String ` to ` Long ` across multiple classes to ensure consistency and maintainability by using a
http : / / github . com / codenameone / codenameone / codenameone / codenameone / codenameone / issues
removed log statement for overlay version logging in SolrConfig . java and added imports in SolrConfigHandler . java to improve logging clarity and maintainability
updated delayUntil from 60 seconds to 3 seconds in FileSyncAdapter . java to allow more time for synchronization to complete
updated the formatting of the ` afterConversionTime ` variable in ` SegmentV1V2ToV3FormatConverterTest . java ` to ensure
refactor ` addPathToMTree ` method to use ` Path ` instead of ` String ` to improve code readability and maintainability by
added URI handling and improved error logging in DefaultPackageScanClassResolver . java and updated test cases in DefaultPackageScanClassResolverTest . java to
[ hotfix ] [ table - common ] [ table - common ] [ table - common ] [ table - tsextractors ] fix
added a new file ` SpringSecurityAuthenticationSource . java ` that implements the ` AuthenticationSource ` class to provide a mechanism to retrieve principal and credential
refactor AbstractConcurrentArrayQueue , ManyToOneRingBuffer , and ManyToOneRingBuffer classes to improve code clarity and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest SDK version
replaced the auto - suggest dialog with a cached file list in GenericViewFragment . java to improve user experience by providing a cached file list
added a new test method ` testNewput ` to ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure proper
removed the collection name from the stream method in MongoTemplate . java to simplify the method signature and improve code readability
updated zoom factor calculation and logging in MapOverviewImageMouseHandler . java to improve accuracy of zoom calculations and ensure correct positioning of zoom values
added a default similarity parameter to KNearestNeighborClassifier and updated related methods to utilize it to enhance similarity handling and improve accuracy of classification results
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve code readability
replace ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve code readability and maintainability
updated package - info . java files for mmm and ppp packages to improve code clarity and maintainability
updated ` requestMtuChanged ` method in ` ShadowBluetoothGattTest ` and ` ShadowBluetoothGatt ` classes to
refactor ServletInputStream and ServletOutputStream methods in TestPayloadNameRequestWrapper . java to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for link errors
[ java ] use concurrenthashmap instead of hashmap in channelprocessingmanager
updated Chinese resource files to include " grouped " and " summaryed " to improve clarity and accuracy of the error message
updated the size check from zero to 1 in JDBCTypeMapping . java and modified the corresponding test cases in JDBCTypeMappingTest . java to ensure
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety when adding and removing players
refactor the handling of screen readers in TerminalView to use regex pattern matching to improve code readability and maintainability by reducing duplication
updated command behavior checks in MenuBar . java and SideMenuBar . java to include a new feature in SideMenuBar . java to enhance user experience by
replaced Disposable with Disposable in PoloniexManualExample . java and added state management in WampStreamingService . java to improve code readability
added a validation check for the contract type in UpdateSettingForEnergyLimitContractActuator and updated assertions in UpdateSettingForEnergyLimitContractAct
updated URL handling to use ` javaUrl ` instead of ` url1 ` and added protocol handling in ` UrlBean ` to improve code clarity and
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to provide a way to retrieve and set the namespace prefix
added a constant ONE _ MINUTE _ MILLIS and refactored date parsing logic in TestRange . java to improve code readability and maintain
added a check for the presence of JettySolrRunner in BasicAuthIntegrationTest . java and updated security properties in ZkStateReader . java to
added a PriceFeed parameter to the TradesChartsViewModel constructor and updated the TradesChartsViewModel to include it to enhance functionality by allowing
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a variable for consistency to improve code readability and maintain
refactor the calculation of ` from ` and ` end ` in ` NativeString . java ` to improve readability and maintainability of the code
added file download functionality to the FileDataStorageManager in FileDownloader . java to enable file downloading functionality in the application
added a line to set the length of the log channel in MappedRawLog . java to ensure proper resource management and prevent potential memory leaks
added a method ` checkIfRegistryRunning ` to check if a registry is running and implemented retry logic in ` FileUtils . deleteFileIfExists ` to
removed unused imports from EditTest , Quick3dMain , TextureTest , and TextureTest classes to streamline code and improve readability by
added @ SuppressWarnings ( " rawtypes " ) annotations to multiple Java files to suppress unchecked warnings and improve code clarity
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions when instances are null
added support for isolation level setting in various database connection classes to ensure proper handling of transaction isolation levels based on configuration
added a new method ` getTransactionAttribute ( ) ` to ` AbstractStepFactoryBean ` and improved error handling in ` ItemOrientedStep `
replaced ` CasClient ` with ` DirectCasClient ` and updated ` CasManagementSecurityInterceptor ` to utilize ` DirectCasClient `
added functionality to hide the add category menu in ListFragment and updated navigation drawer in NavigationDrawerFragment to improve user experience by ensuring the add category is
changed the method name from ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and ` FileDisplayActivity . java
pdfbox - 2571 : remove useless code that be n ' t need .
updated the ` onFontSizeChanged ` method to accept a ` unusedSizeDp ` parameter and updated the ` getTextSize ` method to use ` getTextSize
added a check for the validity of ` fact . isValid ( ) ` before setting ` tmpFact ` to ensure that ` tmpFact ` is only
refactor DistBuildTargetGraphCodec , ConvertingPipeline , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and
replace the return statement to create a new ArrayList instance with a new ArrayList instance to ensure proper instantiation of the ArrayList instance
refactor code for improved readability and efficiency in Liquibase . java to enhance maintainability and readability of the code
added a ` setRevision ` method to ` MicroserviceVersions ` and updated ` InstanceCacheChecker ` to set the revision to null to ensure the
refactor foreign key and index retrieval logic in AbstractRetriever and TableRetriever classes to improve readability and maintainability of the code
camel - 14284 : camel - aws2 - s3 : add test case to verify endpoint override
removed the ` currencyPair ` parameter from the ` getBitstampUserTransactions ` method and added a new method ` getBitstampUserTransactions
added error handling for NoSuchComponentException in blueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
change pushbuilder . push ( ) to return boolean instead of void
refactor LegacyAddressTest to use BufferedReader instead of hardcoded values to improve readability and maintainability of the test code
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other packages
refactor push warning setup into a separate method ` setupPushWarning ( ) ` in ` NotificationsActivity ` to improve code readability and maintain
fix potential resource leak in nettyasynchttpprovider
updated null checks and method signatures in LdapPasswordPolicyEnforcer . java to use ` StringUtils . isEmpty ( ) ` instead of ` null ` to improve
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability of the code
added an @ Ignore annotation to the MemoryManagerTest class to temporarily disable tests related to PHOENIX - 2840
nifi - 118 - add timezone support to aboutdao to allow customization of timezone .
updated assertions in Splitter . java and StorageService . java to include a check for range count before processing to ensure that ranges are only split when
removed exception handling for IOException in BeanContextSupport . java to simplify code and improve readability
added synchronized block to manage active circuits in CircuitManagerImpl . java to ensure thread safety when accessing active circuits
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by throwing an IllegalStateException instead of GdxRuntimeException
flume - 126 : remove eventdrivensource from sink , source , and sink runner
updated logging level from error to info for user authentication failure in FastBindLdapAuthenticationHandler . java to improve logging clarity and ensure proper error handling during
refactor ContainerOrderFocusTraversalPolicy class for improved readability to enhance maintainability and readability of the code
use int instead of double for freehand function .
updated the parameter name from ' source ' to ' source ' in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve code readability and
refactor connection handling in SchemaCrawlerMain and Executable classes to ensure proper resource management and prevent potential memory leaks
[ java ] use default tls procotol instead of default ssl protocol .
updated exception messages from " values buffer is full " to " metadata buffer " in CountersManager . java to improve clarity of error reporting for counter
refactor audio queue position handling in MediaManager . java to improve code readability and maintainability
removed conditional check for debug logging in HttpConnection . java to simplify logging and improve code readability
added the ` isTransient ` method to ` JpaPersistentPropertyImpl ` and updated related test cases in ` JpaPersistentPropertyImplUnitTests
updated UpgradeResourceProviderTest to use HDP - 2.0 . 0 instead of HDP - 2.0 to ensure compatibility with the latest HDP version
trufflevm : use object . get ( ) instead of symbol .
changed the access modifier of the isBinaryType method from private to public and modified logging statements in Proxy . java to allow external access to the method
updated the default value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from "
removed redundant method ` findProblem ` in ` JavaEditor . java ` and updated sorting logic in ` JavaProblem . java ` to streamline code
removed the DEFAULT _ OFFHEAP constant from DictionaryIndexType and BloomFilterHandler classes to simplify the code and improve readability by eliminating unnecessary
updated line separators in TableWriterTest . java to use LINE _ SEPARATOR to improve code readability and maintainability by using a consistent
refactor DebugHelper class implementation to improve code readability and maintainability
added ` ownsTexture ` boolean to ` ParticleEffect ` , ` ParticleEffect ` , and ` ParticleEffect ` classes to control texture
updated HiveConf . java to include additional LDAP configurations to enhance security by allowing additional LDAP configurations
[ hotfix ] [ datacatalog ] fix checkstyle violation in datacatalog
updated InputMethodManager handling to use Context . SHOW _ FORCED instead of Activity . INPUT _ METHOD _ SERVICE to improve code clarity and
added a new test method ` convert _ to _ map _ string _ to _ map _ primitive _ to _ map _ primitive _ to _ map
updated the size calculation in TestFileSystem . java from 500 , 500 , 500 , 500 , and 50 to 10 , 50 , and adjusted the size
updated error message formatting in ContentTypeManager . java to improve clarity and accuracy of error messages related to open resources
refactor dropSequences method implementations across multiple database classes to implement migration failure handling to improve code clarity and maintainability by encapsulating
added a null check for the status variable in MainWindow . java to avoid potential NullPointerExceptions when status is null
added a variable ` f ` to the createField method call in ` DocumentBuilder . java ` to ensure proper initialization of the variable ' f '
[ fix ] hierarchicalicons do n ' t emit icon if the event be not active .
added a test method ` findOneAfterUpsertForNonExistingObject ` in ` MongoTemplateTests . java ` to verify the functionality of ` findOne `
hbase - 16464 fix checkstyle issue in hbase - hfile - java
added a method to record launch statistics in AppsCustomizePagedView and updated broadcast intent handling in Stats to improve launch tracking and ensure proper
replaced the method of setting the data in JavaSEPort . java to ensure proper resource management and prevent potential memory leaks
updated team member handling in InstructorFeedbackResultsPageData . java to improve clarity and consistency to enhance code readability and maintainability by using
added a check for zero inventory ID in Inventory . java and created a test for ID generation in InventoryTest . java to ensure that the inventory ID
added a conditional check for the found variable before proceeding with the break statement to ensure that the loop only occurs when a configuration is found
added a new parameter ` returnType ` to the ` ReloadableJava11ParserVisitor ` and ` ReloadableJava8ParserVisitor `
added a check for null blended tiles before initializing it in TileMapRenderer . java to avoid potential NullPointerExceptions when blended tiles are not
updated the @ Classes annotation to remove the SunJCE _ c and SunJCE _ l from multiple classes to streamline the code by
updated the getArea method to include a null check for the last segment before calculating the sum based on the last segment to ensure that the last segment
updated the initialization of lockOnSync and throttleRate in Throttler . java to improve clarity and maintainability of the code
refactor event bus event handling in PipeEventBus and PipeBehaviourEmzuli classes to improve code readability and maintainability by reducing duplication
increased the timeout value for ZkController initialization from 1000 to 1000 to allow for more time for the ZkController initialization
added a test for passcode handling in TokenMvcMockTests . java to ensure that the application correctly handles client parameters in the OAuth authentication process
added constructors for KeepWordFilter , KeepWordFilter , and CharArraySet in TestRandomChains . java to ensure correct behavior of broken
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to streamline the test execution process by eliminating unnecessary
[ llvm86 - 64bitva ] use integer . tounsignedlong ( int ) instead of integer . touint ( int )
replaced the method ` btCollisionObjectArray _ at ` with ` btCollisionObject . getInstance ` in ` btCollisionObjectArray `
added a new property ` BUILD _ COPYRIGHT ` to ` BuildProperties ` and updated the copyright year retrieval in ` AboutDialog ` to
add getdistributedobjects ( ) method to jetclientinstanceimpl . getdistributedobjects ( )
added print statements for components , finCount , and inertia in FinSet . java and updated test constants in MassCalculatorTest . java to
updated memory size calculation from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to improve memory management by using
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and modified method signature in CreateAlignedTimeSeriesPlan . java to improve
refactoringmanservice to use bisq co - founder instead of btc - co - founder
updated the ` JsonLoaderTest ` to use ` json ` instead of ` replace ( ' ' , ' ' , ' ' , ' ' )
updated the capacity check from 1 < 30 to 0x40000000 in the IllegalArgumentException message to ensure proper capacity validation for table sizes
updated imports in ColumnSnapshotGenerator . java and added a null check for the data scale in ColumnSnapshotGenerator . java to ensure proper handling of
removed the @ AddToRuleKey annotation from multiple fields in AppleTest . java to simplify the code and improve readability
added security exception handling and modified content retrieval logic in FileHelper and TextHelper classes to improve robustness by handling potential SecurityExceptions
added a new constant ` StyleWithMultipleAttributes ` in ` ShadowThemeTest . java ` and updated ` ShadowThemeTest . java ` to support
updated sheet name check from ` - 1 ` to ` sheets . size ( ) ` in ` HSSFWorkbook . java ` and added a
changed the method from ` primaryColor ` to ` elementColor ` in ` ManageAccountsActivity . java ` to use ` elementColor `
added null check for the handler in DefaultEventBus and updated path resolution in DefaultPlatformManager to improve robustness by preventing potential NullPointerExceptions
added ` getCollationName ` and ` getCollateFragment ` methods to ` MariaDbDbmsType ` , ` MySqlDbmsType `
added a default method ` whenType ( Class < T > ) ` to retrieve a tree type to improve type safety and prevent potential ClassCastExceptions
refactor navigation logic in ItemLauncher to use a new method for obtaining the user view destination to improve code readability and maintainability by centralizing
replaced ` Response . ok ( Status . OK ) ` with ` Response . temporaryRedirect ( URI . create ( ) . getPublicUrl ( )
[ hotfix ] [ kinesis ] improve error message when deserializer be not serializable
camel - 14284 : fix typo in java doc ( # 117 )
replaced Thread . sleep with a try - finally block for resource management to ensure proper resource management and prevent potential memory leaks
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity and consistency in
refactor the fill method in ProxyHandler to accept a Buffer parameter to improve code readability and maintainability by encapsulating the method signature
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to improve code readability and
modified the ` prepareStreamsToUpload ` method to return a boolean instead of void to improve code readability and maintainability by encapsulating
updated order comparison from ` getOrder ( ) ` to ` Integer . compare ( ) ` in ` AbstractConfigLoader . java ` and updated the
added a new file PicOfDayAppWidget . java to handle app widget updates to provide functionality for updating app widgets in the application
do n ' t set the default value of internallbvmofferingid if it be null .
replaced ` RelOptUtil . splitJoinCondition ` with ` HiveRelOptUtil . splitHiveJoinCondition ` in ` HiveParserCalcite
mark multiple transformation classes as deprecated to indicate that these classes are outdated and should no longer be used in future development
added user and password options for remote jmx access in NodeToolCmd . java to enhance security by allowing users to access remote jmx credentials
removed redundant initialization of BytesRef in Stemmer . java to streamline the code and improve readability
updated the logic for applying widget icons in AppsCustomizePagedView . java to improve layout responsiveness by reducing the number of pages
add a method to get the view for thumbnail in ggbapiw .
updated the calculation of rotation coordinates in GcodeRenderer . java to ensure the rotation coordinates are within valid bounds
added a new option ` WORKSPACE ` to the DAEMON configuration and updated the workspace directory setting in ` TerminalClient . java ` to
updated test file path from " target / test - classes / options . apt " to " target / test - classes / options . html "
updated ScimUtilsTest to use JUnit 5 annotations and added imports for PollutionPreventionExtension to ensure compatibility with JUnit 5
refactor OAuthConfirmationController to use a model object instead of a model attribute to improve code readability and maintainability by using a more descript
refactor session handling in HibernateIT . java to use assertTrueEventually for better readability to improve code readability and maintainability by
refactor EventBusHook class implementation to improve code readability and maintainability
modified MultiPaintEventTest . java file to improve test coverage and maintainability
removed the final modifier from mNewScale assignment in WorkspaceStateTransitionAnimation . java to simplify the code and improve readability
refactor SyncFactory class to improve code organization to enhance maintainability and readability of the code
added uniqueKey field handling in LukeRequestHandler . java to ensure uniqueKey fields are included in the schema information
added a round border color attribute to the BorderEditor and updated EditableResources to use it to enhance the visual appearance of the background color based on
truffle : fix checkstyle issue in binaryparserexception
[ hotfix ] [ test ] use Declarativeslotpoolbridgebuilder instead of slotpoolimpl
added log statements for pending - request logging in GatewayRSocket , GatewayRSocket , and PingPongApp classes to improve logging clarity and
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener and added a menu item click listener to enhance user experience by providing a user interface for
updated ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget `
replaced calls to ` getTail ( ) ` with ` pop ( ) ` in multiple test files to improve clarity and consistency in scope handling
updated API and EVENTLOG _ WIKI URLs from " testwiki " to " commons . wikimedia " to ensure compatibility with Apache Commons
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods in ` Stmt . java ` to improve code readability and
replaced ` Collections . sort ` with ` Collections . sort ` in multiple configuration classes to simplify sorting logic and improve code readability
added date patterns for various time formats in FormatData _ hr _ HR . java to ensure accurate representation of date formats for better time representation
added a call to clearFocus ( ) in DetailFragment . java to ensure the clicked view is clear when the button is clicked
refactor spinner description language selection logic in DescriptionsAdapter . java and SpinnerLanguagesAdapter . java to improve code readability and maintainability by
updated time zone names from " WSST " to " WSDT " across multiple language files to ensure consistency in time zone representation across different locales
added native methods for registering global , weak , and access fields in FastGetField . java to enhance functionality for managing global and weak access fields
added null handling for field types in ReflectData and updated test assertions in TestReflect to ensure proper handling of null values in the field schema
[ java ] increase wait time in sedablockwhenfulltest
added a null check before remapping the resource class to avoid potential NullPointerExceptions during resource remapping
added constructors to HapiFhirDerbyDialect and HapiFhirMariaDBDialect to ensure proper initialization of the database version
camel - 14284 : fixed the connection close issue in camel - http
updated the timeout value from 60000 to 120000 in BasicDistributedZkTest . java from 60000 to 120000 to improve test reliability by
added an assertion to verify the status of a ticket in BaseReservationFlowTest . java to ensure that the query correctly reflects the expected status of the
refactor Parser class to improve code organization to enhance maintainability and readability of the code
refactor CasProcessingFilter to improve code readability to enhance maintainability and readability of the code
replace thymeleafnode with document . getfirstelementchild ( ) . getfirstelement ( ) . getchildren ( )
[ hotfix ] [ test ] add support for enum enum in testdataobjectenum
[ java ] do n ' t wait for cluster node to shutdown .
updated log level from warn to info for cleaning cached beans to improve clarity and accuracy of log messages for better debugging
set mContentType to " application / octet - stream " in WebdavEntry . java to ensure proper content type handling for octet - stream
added a method ` getQueueSize ( ) ` to ` LazyTraceThreadPoolTaskExecutor ` and created a corresponding test class ` LazyTraceTaskExecutor
add distance operation to distanceop when distance be greater than min distance
rename ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity and consistency in naming conventions
replaced the ` next ( ) ` method with ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to streamline the iteration process
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil `
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide access to the
added validation for localVertices in Polygon . java to ensure that only valid polygons contain at least 3 points to prevent runtime errors
replaced instances of ` ObjectMapper ( ) . new ObjectMapper ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to improve
add a null check for the ` coeff ` parameter in ` GeoImplicitCurve . java ` to prevent potential ` NullPointerException ` when ` coeff `
updated the handling of Unicode character encoding in ExternalNameRecord and added a test for it in TestExternalNameRecord to ensure proper handling of Unicode characters
corrected a typo in the description of the JMS destination type in AbstractJMSProcessor . java to improve code readability and maintainability
added handling for excluded prompts in LoginInfoEndpoint and corresponding test cases in LoginInfoEndpointTests to improve user experience by ensuring prompts are correctly
replaced ` remove ( listener ) ` with ` removeIf ( l - > l = = l ) ` in ` AbstractController . java ` to
added a case for the spin action in PieChartActivity to handle the spin action in the PieChartActivity
[ citrix ] kill vhd process if there be no vhd
hbase - 13232 hmaster . getnamespaceauditor ( ) should skip normalizing table if quota have quota
updated import statements and added a resize method to AndroidInput . java to improve code readability and maintainability by encapsulating pressure resize logic
added static method ` propertyValuesOf ` to ` JavaBeanDescriptor ` and introduced a new method ` propertyValuesOf ` in ` PropertySupport `
added JUnit Ignore annotation to ClientMapNearCacheTest to temporarily disable tests that are always failing and blocking PRs
fix hopperhock not be able to draw item from the bottom of the bottom of the bottom of the bottom of the bottom .
added authentication dialog functionality to the SsoWebViewClient to enhance user experience by providing a simple authentication dialog
refactor test cases in TestStressIndexing2 . java to improve document handling and query performance to enhance test reliability by ensuring documents are deleted
[ flink - 22559 ] [ test ] disable upsertkafkatableitcase
updated typeList retrieval to use computeIfAbsent for consistency to improve code readability and maintainability by using a more descriptive method
added deserialization feature for SINGLE _ VALUE _ AS _ ARRAY in DefaultEntityMapper to enable ACCEPT _ SINGLE _ VALUE _ AS _
updated localization update message to include UK , UK , and SL to enhance clarity of localization updates in the application
updated the SHORTCUT _ CATEGORIES array to use ResourceUtils for better resource management to improve code readability and maintainability
renamed the method ` visitExpressionInstanceOf ` to ` visitRelExpressionInstanceOf ` in ` ASTBuilderVisitor ` and updated related tests in ` FE
nifi - 116 add ` ` mime . type ' ' attribute to gethttp .
add a toprovenance ( ) method to resourcehistorytable , and add toprovenance ( ) method
renamed ` exitButton ` and ` mDoneButton ` to ` doneButton ` and updated related functionality in ` HelpActivity ` and ` SearchBook
refactor NatsConfiguration class to improve code organization to enhance maintainability and readability of the code
refactor invalidateStalePartition method to accept a metastoreContext parameter instead of a lambda expression to improve code readability and maintainability by encap
use circularfifobuffer instead of boundedfifobuffer in viewresultsfullvisualizer .
updated drawable resources from ic _ group to ic _ chat _ bubble in multiple classes to align with the new chat bubble icon in the application
replace ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` BroadcastReceiverTest . java ` to ensure compatibility with the
updated test method names and imports in MocksCreationTest . java to improve clarity and consistency in naming conventions to enhance code readability and
added a constant for the DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and updated the generateDetectionConfig method visibility in YamlDetectionConfig
updated awaiter timeout values from 10 seconds to 30 seconds in Basic . java to allow more time for phaser execution to complete
removed BuildSlaveFinishedStatusEvent from DistBuildRunCommand and removed BuildSlaveFinishedStatusEvent from DistBuildSlaveEventBusListener to streamline
[ vmware ] use utf - 8 instead of utf - 8 for template uuid
added a test method to verify that depositing a workspace item without a workflow to ensure that the application correctly handles workflow submissions without a workflow item
updated classpath file processing to include distinct files to ensure that only distinct classpath files are processed
removed the isBoxedPrimitive method from Unbox . java to streamline the code by eliminating unnecessary method calls
refactor argument handling in SpecificCompilerTool to use an index - based indexing mechanism to improve argument validation and ensure correct ordering of flags in
added a check for external tables before deleting directories in HiveMetaStore . java to ensure that only external tables are deleted when necessary
updated asynchronous execution threads and modified logging messages in multiple classes to improve error handling and provide clearer context for asynchronous operations
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for serviceName and componentName and update related tests to improve code clarity and maintainability by centralizing
added a new variable ` diff ` to ` ConferenceInfoDocument ` in ` OperationSetTelephonyConferencingSipImpl . java
add a method ` clearEntries ( ) ` to ` FlutterLogTree ` and update ( ) ` in ` FlutterLogView ` to
updated return statements in ChannelEndPoint . java to check if the channel is open and input shutdown to ensure proper handling of socket input shutdown scenarios
refactor SetNullableGenerator class for improved clarity to enhance code readability and maintainability
camel - 14284 : added use of servlet transport in reportincidentroutes and reportincidentroutes .
refactor NettyRoutingFilter and FormIntegrationTests to use a wildcard import and improve content type handling to enhance code readability and maintainability by
added API operation annotations for ` hello ` and ` helloWithValue ` in multiple service classes to enhance functionality by allowing the use of ` hello `
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window classes to improve thread safety and ensure proper disposal of
updated the FG _ FK color from 90 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 to
set mp3 . required to false in soundmanager . audioformats . mp3
refactor secondaryindexmanagertest to use systemkeyspace . getBuiltindexes ( ) instead of execute ( builtindexesquery )
pmd : add ' about ' and ' preference . pmd . label . pmd . group . about ' and ' preference . pmd
[ hotfix ] [ test ] fix test failure in customserializationitcase
refactor MediaFormatUtil class for improved readability to enhance maintainability and readability of the code
added an overridden method ` isCellEditable ` to the ` GeneralTab ` class to determine if a cell is editable to ensure proper handling of cell
added a new method ` isOnlyPrintCommands ( ) ` in ` AbstractUnusedDependenciesFinder ` and updated message formatting in ` JavaBuckConfig
added a temporary count increment in VocalTractModifier . java and updated vscales array size in VocalTractScalingProcessor . java
updated import statements for ` BaseScalarUdfTest ` and ` TestGenericUdfConcat ` to use the correct package for ` BaseScalarU
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to enhance object comparison and equality checks for clientId and sessionId
updated TestSkeletonControlRefresh . java to use AnimComposer instead of SkeletonControl . j3o and AnimControl to improve animation handling
updated method names from NodeFilter to NodeCountFilter in NodeUtil . java to improve clarity and consistency in naming conventions
updated the condition in the sync block fetch check from ` size ( ) < = 0 ` to ` size ( ) < = 0 ` to ensure
updated the ` setState ` and ` getFloatType ` methods in ` DebugExpressionParser ` to use ` 366 ` instead of ` 365 `
updated dependency search logic to check if the scope is in the classpath before finding dependencies to ensure dependencies are only processed when the scope is present
replaced ` tmp ( ) ` with ` dst2 ( v ) ` and ` lerp ( v ) ` methods in ` Vector . java `
changed the initialization of the ` args ` array from ` String [ ] ` to an empty array to ensure proper initialization of the ` args ` array
replaced List with ImmutableList for linker flags in RustBinaryDescription . java and added a new method in RustLinkerIntegrationTest . java to
[ java ] use travis . properties instead of travis . properties
added configuration for the LLAP query name in HiveConf and updated logging in GenericUDTFGetSplits to improve the clarity of the
removed unused import of java . io . File in TileAtlas . java to streamline code by eliminating unnecessary dependencies
refactor EscapeProcessingOutputStream and GradleDaemonExecutor to use AtomicBoolean for closed stream handling to improve thread safety and prevent potential memory leaks
updated the ` validateQuery ` method to include an additional ` arguments ` parameter to enhance error handling by including additional arguments for better debugging
updated index version from 1 to 2 and refactored the getTree method in LuceneExecutor . java to improve code readability and maintainability by
[ hotfix ] [ runtime ] add test case for default kryoregisteredclassesdid not change
added a null check before removing configuration properties in BlueprintConfigurationProcessor . java and updated test cases in BlueprintConfigurationProcessorTest . java to ensure
added BooleanUtils import and refactored boolean value handling in MetaStoreDirectSql . java to improve code readability and maintainability by utilizing
added a call to hideCustomizationDrawer ( ) in Launcher . java to ensure the correct drawer is displayed in the launcher
replaced the ` hasWarnings ` variable with a constant ` TV _ KEY _ WARNINGS ` and updated related logic in ` TermVectorComponent . java
added a conditional check for optimistic types and modified log statements in Compiler . java to ensure optimistic types are only logged when optimistic types are enabled
refactor Expect class implementation to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enhance Docker client configuration management
added ` @ Tag ( " flaky " ) ` annotations to ` CloseableDoSFilterTest ` and ` CloseableDoSFilterTest `
camel - 14284 : added exception class for rxstreamsnoactivesubscriptionsexception .
refactor Vectorizer to use TezWork instead of mrTask for better task handling to improve code clarity and maintainability by centralizing task
updated constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to ensure proper initialization of the stream name in the logging process
fix npe in jmetertreemodel when guipackage be null
do n ' t use long [ ] for function . getlinkage ( ) and add isunsafe ( ) method .
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
add a unit test for the defaulttransactionlocal . get ( ) method
added a check for non - existent operation handles in HiveStatement . java to ensure proper error handling for invalid operations on server side
rename ALTER _ TABLE _ ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ 
camel - 15284 : camel - aws - secrets - manager - aws - aws - secrets - manager - aws - aws - secrets - manager
refactor SimpleTree class to improve code organization to enhance maintainability and readability of the code
updated error message handling in UserREST . java to include the exception message to improve clarity of error messages for better debugging
updated the ` fromContent ` method to accept a ` subTree ` parameter and modified the ` fromContent ` method to include a ` subTree
updated column width calculation in Sheet . java and added a test for column width functionality in TestHSSFSheet . java to ensure correct column width
added configPath parameter to the command ` less ` method in ` Builtins . java ` to include the ` configPath ` parameter in the
replaced ` Set ` with ` Collection ` in the ` DotWriter ` , ` GraphExecutable ` , and ` GraphExecutable ` classes to improve code
updated the sshd image property from " sshd . container . image " to " sshd : 1.0 . 0 " to ensure compatibility with the
added a null check for hostId in AgentManagerImpl . java to ensure that hostId is not null to avoid potential NullPointerExceptions
refactor the handling of rawKey in DefaultGroupKeyGenerator to use BlockSingleValIterator for multi - valued columns to improve code readability and
updated the testSeekNegative method to testSeekingExceptions and modified the seek method to handle EOFExceptions to improve error handling and ensure correct
updated the instantiation of ` variantFrom ` and ` input ` in ` BCSiliconRecipes . java ` to use ` ImmutableSet . Builder `
[ hotfix ] fix typo in graphhopperconfigmixin . putobject ( )
updated visibility handling in CellLayout and modified onDragExit method to include a new doDragExit method to improve code readability and maintainability by
updated ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` and added a new test for ` upstreamRequestBody `
added a check for package accessibility in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure that only accessible classes are processed
updated logging levels from warn to trace in LoggingHandler . java to improve logging granularity by using trace level instead of warn to avoid potential
refactor prefix extraction logic in WhiteBlackList . java and add a new test case for wildcard handling in Issue348 . java to ensure correct
added new imports and modified the onOptionsMenu method in GalleryActivity . java to enhance user experience by allowing users to view images from the Gallery
refactor MongoDBService instantiation to use a static instance variable to improve code readability and maintainability by reducing duplication
added methods to prevent code formatting masquerade calls in InlineConstantMutatorTest . java to ensure proper handling of boolean values in the code
[ java ] add blackhole to recordtest . decode ( )
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.16 . 0 (
updated methods in DPTUnits and DeviceThingHandler to use Map . Entry instead of String to improve type safety and ensure correct handling of group addresses
removed the call to clearWitnesses ( ) in ManagerTest . java to ensure that the witness list is cleared before proceeding
added logging functionality to JdbcPageSink to improve error handling and provide more informative error messages
updated stack handling in NativeError . java to use ScriptFunctionImpl and modified stack property management to improve code clarity and maintainability by centralizing stack
added a condition to check if the path name starts with " . " in DrillPathFilter . java to ensure that the path name starts with
renamed ` onboard ` to ` autoLoad ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure that the index is cleared before execution
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to correct the color of the
updated the ` fThreadGroup ` variable to be volatile and modified ` fLookForStuckThread ` and ` fTimeUnit ` constructor to
corrected the spelling of " Value " to " Value " in the ValueResultData class to improve code readability and maintain consistency
updated hash code calculation in FuzzyQuery . java to use super . hashCode ( ) instead of null to improve code readability and maintainability by
removed debug print statements from PushedResourcesTest . java to clean up the code and improve readability
removed nullable annotations from removeFile and removeDirectory methods in SharedOpenFilesCache . java to simplify method signature and improve code readability
updated database version from " 2.1 . 1 " to " 2.1 . 0 " in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to ensure compatibility
updated ` retrievePersonAttributes ` method to use ` buildResolvedPrincipal ` instead of ` createPrincipal ` to improve code readability and maintainability by
changed log level from info to warn in OpenWebNetBridgeHandler . java to improve logging clarity by using a more descriptive variable name
replaced ` intHash ` and ` longHash ` methods with ` hash ` across multiple files to improve code readability and maintainability by standardizing
added a constructor to ThumbnailGenerationTask and modified conditional logic in FileUploader to ensure that the ThumbnailGenerationTask is only executed when the
modified the loop condition in GroupSelectionQuery . java to include a check for a maximum number of tries before stopping the group selection to ensure that the
added a new file ` Bug1933922 . java ` that implements a method to handle program and program loading to demonstrate the behavior of program
refactor comparison logic in MultipleSeriesProvider and Tokenizer classes to improve code readability and maintainability
updated the condition from ` c < 33 ` to ` c < 32 ` in ` FileResolver . java ` to ensure that control characters are valid
added a call to requestFocus ( ) in the Display class to ensure that the cmp has a focus before proceeding
updated test data paths and method names in InstructorHomePageUiTest . java to improve clarity and consistency in test data handling
rename JsonParserAsync to JsonStreamParser across multiple files to improve clarity and consistency in naming conventions
added a check for empty messages before canceling all widgets in DetailFragment and updated the onPause method in MainActivity to improve user experience by
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder ` and removed the ` JAVA _ TOOL _ OPTIONS
updated the IP address from InetAddress . getLocalHost ( ) to InetAddress . getByName ( " 127.0 . 0.1 " ) in HintedHandOff
refactor subsystem assignment to use a loop for better readability to improve code readability and maintainability by reducing duplication
added imports and assumptions to skip tests on macOSX in DaemonLifecycleManagerTest . java and InstallCommandIntegrationTest . java to ensure tests
fix vmciversioncheckcompilationtest by use getrequiredproperty instead of getproperty ( )
refactor Mockito class for improved readability to enhance maintainability and readability of the code
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page functionality
updated ` BinaryParser ` and ` PlainTextParser ` to use ` source . getSource ( ctx ) ` instead of ` source . getSource ( )
added a new enum ` MultiPartFormDataCompliance ` and implemented it in ` HttpConfiguration ` to enable dynamic configuration of multi - part FormData compliance
added JDK - 17 release version to GradleDistributionManager . java to ensure compatibility with JDK - 17 and above
updated the ` addType ` method to accept a ` Class < ? extends DatabaseObject > ` parameter and modified type addition logic in ` SnapshotControl
refactor Term class to improve code readability to enhance maintainability and readability of the code
added null and empty check for runWith in ChangeSet . java to ensure robustness by preventing potential NullPointerExceptions
add unit test for xaconnectionfactorytest . issamerm ( )
updated multiple Java files related to AudioDeviceInfoBuilder , MediaCodecInfoBuilder , MediaConnectionInfoBuilder , NativeInput , and TextUtils to improve
pdf417 : fix bug in localblockbinarizer . testblackboxcountingresults ( )
updated the assignment of ` mSnapshotView ` and ` mDigitalWellBeingToast ` to include ` mTintAmount `
added a new file ` SumZeroAggr . java ` that implements ` DrillAggFunc ` and implements ` SumZeroAggFunc ` to
updated test cases in FirstValueFunctionIT . java and NthValueFunctionIT . java to improve code readability and maintainability
refactor getAllocationFailWarningMessage method to use StringBuilder for better readability to improve code readability and maintainability by reducing duplication
added a null check for propName before adding it to roleObject to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation to several fields in StatusBarTouchController . java and modified method visibility in RecentsView . java to enhance encap
http : / / issues . apache . org / jira / browse / amq - 4253 - add logcontainerstream parameter to dockerclient
add testmvstorecacheperformance test for mvstore .
updated the type of the LONG constant from " L " to " J " in PrimitiveType . java to ensure consistency with Java naming conventions for
changed the access modifier of the delegatingApplicationListener method from package - private to static to allow subclasses to access the delegatingApplicationListener
camel - 14284 : camel - rest : set message body to null in camel - rest
added new files ` FileDeletingTasklet ` , ` TaskletJobFunctionalTests ` , and ` TaskletJobFunctionalTests ` to
update size keep drawables when the companion be update
updated byte buffer calculations to use ' hi ' and ' lo ' instead of ' i ' for consistency to improve code readability and maintainability by
updated the ` sendEventToTest ` method to accept a ` stateOrdinal ` parameter across multiple classes to improve state handling by using an ordinal parameter
added user - agent checks in MediaMonitor , RequestHandlerV2 , and RequestV2 classes to ensure proper handling of video thumbnail requests based on
updated error handling logic in ErrorCheckerService . java to improve clarity and accuracy of error reporting to enhance error reporting and provide clearer diagnostics for
added conditional checks for the " menuButtonTopBool " and " menuButtonBottomBool " mode in SideMenuBar . java to ensure the button is
updated Skia . java to include preload attribute " libskia " and added preload attribute " libskia " preload = " libskia
added a constant for the ID _ UNITTESTNET in NetworkParameters . java to enable unit tests based on the ID constant
added a HumanReadableException for invalid format arguments in QueryCommand and implemented corresponding tests in QueryCommandIntegrationTest to ensure proper error handling for invalid format arguments
replaced ` capacity ` and ` mask ` variables with ` length ` in ` IntIterator . java ` to improve code readability and maintainability by
updated walkRuleAndAdd method to include the srcRule parameter and modified the walkRuleAndAdd method to include a srcTarget parameter to enhance dependency
[ netbeans - 2424 ] fix module path override for class output in patch module
[ java ] remove semanticversion . major ( protocolversion ) check from candidatetermid check
added conditional setting for SINGLE _ SESSION _ PER _ ACCOUNT based on SAML authentication to ensure consistent behavior based on SAML authentication status
added null checks for ` mappedTableResource ` in ` ReadBatch ` , ` WriteBatch ` , and ` WriteBatch ` classes to ensure that
use utils . close ( ) instead of try - catch block
refactor AnonymousAuthenticationFilter to use a deferred context instead of a hardcoded context to improve code readability and maintainability by encaps
updated the ` removeActor ` method to accept a ` boolean unfocus ` parameter and modified its implementation to enhance flexibility in actor removal and unfocus
updated the prompt method to use a valid configuration variable instead of a hardcoded string to improve readability and maintainability of the code
http : / / issues . apache . org / jira / browse / amq - 4078 - add log level to netty http server
refactor DatumAliases , AbstractParser , Formattable , and Parser classes to improve code organization and maintainability
replaced ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ( ) : update ( ) ` in ` CodeDependenciesPanel .
camel - 14247 : camel - groovy : refactor to use language . getscriptfromcache instead of map .
do n ' t include versionless key in plugin dependencies
changed the visibility of the ` ProgramOptions ` method from package - private to public in ` CliFrontendParser ` and ` ProgramOptionsUtils ` to
replaced ShadowSharedPreferencesEditor with TestSharedPreferencesEditor in TestSharedPreferences . java and added a new TestSharedPreferencesTest class for testing SharedPreferences
refactor storageAlias retrieval logic in HttpsMessenger . java to improve certificate chain management to enhance code readability and maintainability by reducing redundancy
httpcommandexecutor : improve error message when convert text to response
changed access modifiers of updateImage method from private to protected in ImageButton , ImageTextButton , and ImageTextButton classes to allow subclasses to access
[ fix ] drop serverlevel resource when drop block .
added ` spatiallocationcalculatorconfig ( ) ` methods to ` DataOutputQueue ` , ` depthai ` , and ` front ` classes to enhance
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor ` isEmpty ( ) ` method to accept a ` Node < V > ` instead of ` keySet ( ) . isEmpty ( ) ` to
refactor foreground and background retrieval methods in AttributedStringBuilder . java to improve readability and maintainability of the code
fix peersync to disable fingerprint if solr . disablefingerprint = true
changed the access modifier of the moveFunds method from private to public to allow external access to the moveFunds method from other classes
updated event handling in MongoTemplate and added unit tests in MongoTemplateTests to improve event processing accuracy and ensure proper application context handling
fix collectionitem . writedata ( ) and collectionitem . settransactiontest . testsettransactiontest . testsettransactiontest
TikaCLI : close input stream if it do n ' t exist
updated exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling by catching
removed unnecessary whitespace in the loadConfig method call to improve code readability and maintain consistency
updated log message formatting in InstructorFeedbackAddActionTest . java and InstructorFeedbackCopyActionTest . java to improve clarity of log
changed the ` cleanup ` variable from ` throws Exception ` to ` final ` in ` ExternalWorkerService ` , ` JobServicePipelineResult ` ,
removed the step parameter from DisplayTextVirtualDatapoint and updated related methods in HmDatapoint and HomematicTypeGeneratorImpl to simplify the code
added exclusive lock management methods in PostgreSQLReadWriteAdvisoryLocksTest . java to improve debugging and tracking of shared locks
refactor scheduleJobs ( ) method call in BaseSchedulerServiceImpl . java to improve code readability and maintainability
[ java ] do n ' t fail test if selenium . istextpresent ( ) return false
refactor logger initialization to use ThreadLocal for better thread safety to improve thread safety and maintainability of the logger management process
refactor FunctionInitializer and FunctionInitializerTest to use MockitoJUnitRunner instead of JMockit to improve code readability and maintainability by using
added a new method ` boxedTypeOrType ` to ` Types ` , ` Infer ` , and ` T6995200 ` to
added null check for newFocusedTaskViewId and set orientation state to INVALID _ TASK _ ID in RecentsView . java to ensure proper
[ hotfix ] [ test ] simplify testflushfromclient # testflushfromclient # testflushfromclient # testflushfromclient # test
refactor repository handling in TransactionExecutor . java to ensure original repository is not deleted when no contract details are present
updated balance calculations in ` TokenIssueProcessor ` , ` Program ` , and ` Program ` classes to use dynamic properties instead of a hardcoded
refactor cache handling in RealisticRenderStrategy to utilize a new method for clearing Textures to improve code readability and maintainability by reducing
replaced direct calls to ` srcRas ` and ` dstRas ` with ` tmpSrcRas ` and ` tmpDstRas `
added a new boolean variable ` isUnselectedStyle ` and modified the ` stringWidth ` method to utilize it to improve font handling and ensure
updated initialization of ArrayLists in multiple webflow configuration classes to initialize with an initial size of 3 to improve performance and maintainability of the code
removed the ` flags ` parameter from several method signatures in ` ShadowApplicationPackageManager . java ` to simplify method signatures and improve code readability
refactor PingRequestHandler to improve code organization to enhance maintainability and readability of the code
add support for mp4 sample with increasing timestamps . mp4
[ hotfix ] [ trdfri ] remove old firmware check in gatewayhandler .
refactor AjaxElementLocator to improve code organization to enhance maintainability and readability of the code
updated BoxLayout and DefaultLayout checks from InlineLayout to DefaultLayout and added a check for " table - cell " in DefaultLayout to ensure compatibility with
updated JsonDecoder to handle multiple JsonToken types and added a new test for reordering fields in TestJsonDecoder to ensure proper handling of array types and
use removalcause instead of notification . getkey ( ) in blockcache . releaselocation ( )
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added multiple @ Test annotations to DroolsMvelParserTest . java to ensure proper functionality of the parser functionality
changed fields from non - final to final in ContextRegisterListener . java to ensure immutability of fields in the ContextRegisterListener class
added a cacheIterator parameter to the ObjectHashSet constructor and modified the reset method to accept a boolean parameter to enhance flexibility in iterator management and improve test
added a new constant ` BATCH _ BYTES ` and modified conditional checks in ` SparkReduceRecordHandler ` , ` ReduceRecordSource `
changed MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE in AppSettings and Update
updated JdbcProxyGenerator to include additional logging statements and improved error handling in JdbcProxyGenerator . java to enhance debugging capabilities and ensure proper resource management during
updated the ` getAnimationToState ` method to use ` mState ` instead of ` getState ( ) ` to improve accessibility handling based on state
change log level from warn to debug for malformed edit
corrected the substring method call in UaaTokenServices . java and added a new test in UaaTokenServicesTests . java to ensure correct
updated import statements in SchemaRetrievalOptionsBuilderTest , AvailableJDBCDrivers , TestAvailablePlugins , and TestAvailablePlugins classes to improve
added a new interface ` ExecutableCommand ` to handle command execution in the kie API to facilitate the use of command execution in the kie API
remove itest - itest - itest - itest - itest - itest - itest - itest - idempotent
added padding methods to CellLayout and modified bitmap creation in Launcher to improve padding handling for cell layouts
added a conditional check for ` sb . length ( ) ` before retrieving the cands list in ` LineReaderImpl . java ` to ensure
updated ` SamlMetadataUIParserAction ` and ` SamlMetadataUIParserAction ` to utilize ` WebUtils . putServiceUserInterface
added a method to check if LDAP ports are open in LdapMockMvcTests . java to ensure proper handling of LDAP ports in the process
[ log4j2 - 146 ] reduce the number of shutdown call from - 1 to 0 .
updated URL handling logic in Fetcher . java and HTMLMetaProcessor . java to include new URL filtering to improve URL processing accuracy and provide clearer
updated SolrQuery instantiation to use " name : samsang " instead of " samsang " to improve clarity and consistency in query
refactor Console initialization to use reflection instead of reflection to improve code readability and maintainability by reducing duplication
changed access modifier of getVerticesColors method from public to private and added a check for BMesh compatibility to improve encapsulation and ensure proper
updated HTMLReportGenerator and HTMLReportGeneratorTest to use FileFilter for timestamped reports to enhance file filtering capabilities for better reporting of timestamped reports
refactor datavalidatortest to use parameterizedtest
pdfbox - 4071 : remove unused method addmetadata ( )
added a null check for bindStatus in FieldUtils and FieldUtils to improve error handling by providing clearer feedback when binding form errors
removed debug print statement from JoglInput . java to clean up the code and improve readability
added a new boolean field ` allowExtractingPrivateFields ` and updated related methods in ` FieldSupport ` and ` FieldSupport _ fieldValues _
added a replacement for the device name in WebDataHandler . java to ensure that the device name is correctly formatted for better data handling
added a lookup mechanism for Java 8 types in Platform . java to ensure compatibility with Java 8 types and improve code readability
added a deprecated method ` weights ` to the ` ZParams ` class and updated its usage to use ` weightsByDouble ` instead of ` weights
added a Database parameter to multiple writeCustomHTML methods across multiple writer classes to include the database as a parameter to enhance functionality by allowing the use of
added a null check and modified key deserialization logic in BTreeMap . java to improve code robustness and ensure correct handling of null values
added exception handling for BalanceInsufficientException in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and TransactionTrace
add a check for profiler . heap . zerofile in profiler . heap . profiler . heap . zerofile
updated message handling in ChangeSet . java and modified license key handling in Main . java to improve error reporting and provide clearer feedback during command execution
updated buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record handling in HortonworksEncodedSchemaReference
added imports for ChunkListener and ItemProcessListener across multiple batch - related classes to ensure compatibility with the new batch processing framework
refactor methods in AbstractProviderModule to improve readability and maintainability to enhance code readability and maintainability by reducing duplication
removed the ` doc . get ( ' title ' ) ` method from multiple classes to simplify code and improve readability
refactor Test7005594 . java for improved readability to enhance maintainability and readability of the code
updated error message formatting in ResourcesValidationProcess . java to improve code readability and maintainability
refactor TopKRollupPhaseOneJob class to improve code readability and maintainability
cloudstack - 1076 : do n ' t throw exception if ip address do n ' t exist
updated imports and refactored method calls in Gamepad . java to utilize MCOptionUtils to improve code readability and maintainability by
updated ` iteratesOverSequence ` and ` iteratesOverSequence ` methods to use ` Iterable < T > ` instead of ` Object ` to
added a check for the length of the pair array before processing headers in DefaultHttpBinding . java and DefaultHttpBinding . java to ensure that only
added unit tests for SQL query execution in ActivityHistorySQLServerStoredProcedureTest . java to ensure correct behavior of SQL queries in the application
replaced mYLabels . getProgress ( ) with largeValueFormatter in BarChartActivityMultiDataset . java and added LargeValueFormatter . java to
replace ' z ' with ' INNOCUOS _ CHAR ' and update related logic in CommentsParser . java to improve code readability and
removed @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to eliminate unnecessary warnings and improve code clarity
corrected a typo in the printLir method call in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintainability
added a TODO comment to the NullAssertionValidator class to clarify the purpose of the stub implementation
added import for RuleKeyAppendable and modified rule key handling in DefaultRuleKeyBuilderFactory to ensure proper formatting of rule keys in the build process
added system profile directory creation and setup methods in PmsConfiguration . java and updated test cases in DLNAMediaInfoTest . java to ensure
refactor createThreadFactory methods in TestcontainersDockerCmdExecFactory to improve code readability and maintainability
replaced ` inMessages ` with ` receiver . getMessagesIn ( ) ` in ` HttpChannelOverHTTP ` and ` HttpReceiverOverHTTP `
added a new attribute " accept " to the image input dialog in ImageFileInputDialog . java to enhance user experience by allowing users to specify the
replaced ` NodeBuilder ` with ` PreBuiltTransportClient ` and updated imports in ` ElasticIndexWriter ` and ` TestElasticIndexWriter
added various witness and class information to the ForkController . java file to enhance debugging capabilities by providing more detailed information about the class
added a new test class ` NullPointerAndEmptyArrayTest ` to verify the behavior of ` NullPointerAndEmptyArray ` with null pointer and empty array
removed generated source paths from BaseIjModuleRule , IjProjectBuckConfig , and IjProjectBuckConfig classes to streamline
added support for character delimiters in wildcard pattern construction in UaaStringUtils to enhance flexibility in matching wildcard patterns based on character delimiters
refactor alias validation logic in Vectorizer . java for improved clarity to enhance code readability and maintainability by reducing duplication
updated MockitoJUnitRunner import to use MockitoJUnitRunner instead of MockitoJUnitRunner to simplify code and improve readability by eliminating unnecessary exception
added functionality to set firmware settings in TinyGFirmwareSettings . java to improve firmware setting handling and error logging
refactor getLangs method to return a set instead of a list and streamline language handling to improve code readability and maintainability by reducing
updated import statements and refactored assertions in LazyTraceScheduledThreadPoolExecutorTests . java to improve code organization and maintainability
hbase - 16464 add table lock to enable snapshot creation
[ j2kt ] add ` ` isnull ' ' to ` ` isnull ' ' call in ` ` isnull ' ' method
[ hotfix ] [ test ] remove unused test
added a boolean flag ` isSuspended ` and modified thread state handling in ` Thread . java ` and ` Test _ Thread . java ` to
updated JavadocVisitor and ReloadableJava8JavadocVisitor to use Javadoc . Hidden and SerialData instead of Javadoc . Since to
camel - 14224 : camel - remoting - fix camel - spring - remoting - spring - spring - integration - spring - remoting - spring -
removed duplicate @ Override annotations across multiple security classes to streamline code by eliminating unnecessary overrides
added ModuleImportDescriptor to Java2TypeScriptAdapter and updated eval method in EnumTests to enhance module import handling and improve test coverage for static field
updated the language from XMLConstants . W3C _ XML _ SCHEMA _ NS _ URI to " http : / / www . w3
added logic to set content description based on badge status in BubbleTextView . java to enhance user experience by displaying badge information based on badge status
added MouseWheelListener to handle wheel movement events in TestMouseWheelScroll . java to ensure proper handling of wheel rotation in the scroll pane
pdfbox - 2852 : close pdf document when positioning - absolute
updated currency codes from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests . java
rename vacuumenvironment . location to use string instead of object
removed redundant currency assignment for DSH , QTM , and QTM in BitfinexAdapters . java to simplify code and improve readability
updated JsonFormat . java to use ImmutableSet and TreeMap for field printing to improve performance and efficiency in handling optional fields
updated JacksonXmlFormatMapper to handle enum types in JacksonXmlFormatMapper to ensure proper handling of enum types in JSON output
updated the ` RUNNABLE ` and ` PARKED _ SUSPENDED ` constants in ` VirtualThread . java `
updated ` DirectoryTaxonomyWriter ` and ` NameIntCacheLRU ` classes to use ` BytesRef ` instead of ` NoOpCache ` to
refactor VetoableChangeSupport class implementation to improve code readability and maintainability
updated the calculation of the y - coordinate from ` getY ( ) ` to ` getHeight ( ) ` in ` BrowserContentPane . java ` to
pdfbox - 4071 : remove unnecessary ` ` invalidpasswordexception ' ' declaration
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper
app : fix a bug in inputbarhelppanelw . showhelpbutton ( )
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code readability and maintainability
updated Thread usage in BackendInitializerHelper and TerminalClient , and added new test cases for G28 _ 2 and G28 _ 3 with axes to
refactor version checking logic in SwingStartup . java to use ReleaseStatus instead of BuildProperties . getVersion ( ) to improve code readability and maintain
added support for the inclusion of generated files in the MigrationXmlWriter class to enhance the migration process by allowing users to specify the inclusion of generated files
added " player | * > " to the usage descriptions in multiple plot classes to enhance functionality by allowing player - specific usages
deleted BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused filter classes to streamline the codebase
updated method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to improve clarity and consistency in method naming
added a condition to check if parallel is enabled in TestNGContentHandler to ensure proper handling of parallel scenarios in XML processing
fix http : / / issues . apache . org / jira / browse / amq - 4667 - fix the issue of routeinfomanager
fix checkstyle issue in ctmethodimpl . java
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across the application
updated DeadLetterEntry , JpaSequencedDeadLetterQueue , and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated the SHA _ 1 method in ShibbolethCompatiblePersistentIdGenerator and added a new test method in ShibbolethCompatiblePersistentId
added null check for ` parameter ` in ` Parameters . java ` and updated the condition in ` TestAction . java ` to improve robustness by
added a new file ` Person . java ` with a private field ` name ` to facilitate the management of the Person class in the project
[ java ] use fbutilities . getlocallocalendpoint ( ) instead of fbutilities . getlocaladdr ( )
corrected the spelling of " timeStr " to " timeStr . toUpperCase ( ) " in the conditional statement to ensure consistent formatting of the
added assertions for time column and total documents in SegmentMetadataImplTest and modified segment metadata handling in SegmentMetadataImpl to improve test coverage and ensure accurate
updated the background color of the simPlotPanelDesc to use DARK _ RED . toAWTColor ( ) instead of java . awt
added disconnectEmitters . onNext ( new Object ( ) ) method call to NettyStreamingService . java to ensure proper disconnection handling during
changed the type of ` scopeHierarchy ` from ` String ` to ` Class < ? extends Annotation > ` in ` DefaultBeanContext . java `
added a test method to verify the behavior of the ` click ` method in the ` ClickScrollingTest ` class to ensure that the element is
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
[ jbpm ] add support for custom JTA transaction synchronization registry .
changed the access modifier of the pickUri method from public to private to allow access to the method from other classes
removed the hasFunction method from Library . java to simplify the code and improve maintainability
renamed ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using a more descriptive
updated timestamp handling in BeamRowToStorageApiProto and added TIMESTAMP field in BigQueryUtils to improve accuracy in timestamp comparisons and ensure
removed unnecessary null checks for buffer and user credentials in Identifiers . java and DatabaseConnector . java to simplify code and improve readability by eliminating unnecessary
[ flink - 13232 ] [ graphql ] fix the typo in coercevalueforinputobjecttype
added a check for row and column boundaries in FlightConfigurablePanel . java to ensure proper validation of row and column values
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to ensure the scroll selection is visible for better user
[ java ] fix npe in unnecessarylocalbeforereturnrule
replaced ` ScriptEngineManager ` with ` ScriptEngineManager ` in ` AbstractScriptExecutor . java ` to streamline script engine retrieval to improve code clarity and
refactor EuclideanDistanceSimilarity and its corresponding test cases to improve code readability and maintainability by reducing duplication
[ java ] do n ' t run incrementally backup if sstable be null .
updated the ` relativize ` method to accept an additional ` Path ` parameter and modified the ` relativize ` method to ensure
updated null checks for columnSize and decimalDigits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values for columnSize and decimalDigits
updated file deletion logic in DeadLetterQueueWriterTest . java to skip current writer head file 1 . log . tmp to ensure proper handling of temporary
replaced ` toHexString ` with ` toJsonHex ` in ` TronJsonRpcImpl . java ` to improve code readability and maintainability by
renamed ` ErrorHandlerController ` and ` ErrorHandlerController ` to ` Error403Controller ` and introduced ` Error404Controller ` and ` Error
replaced calls to ` resetTerminal ` with ` resetIf ` in ` UnixTerminal . java ` and ` WindowsTerminal . java ` to ensure consistent
updated Tiny . java to use NewArrayTree and NewArrayTree instead of MethodInvocationTree and refactored related imports to improve code
refactor connection management logic in ConnectionPool . java to improve code readability and maintainability
updated timezone reference from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in multiple configuration classes to improve clarity and consistency in
pdfbox - 4071 : do n ' t create a tree if there be an id _ tree
updated error message formatting in JavassistUtils . java to include classLoader information to improve clarity of error messages for better debugging
added exception handling for writer and reader threads in LargeStreamletTest . java to improve error reporting and provide clearer error messages
updated page type handling in HomeFragment to use shared preferences instead of a hardcoded value to improve flexibility in managing extra pages based on shared preferences
added error handling for broken Gaussian image rendering in AndroidImplementation . java to improve robustness by handling potential exceptions during rendering
added ` @ SuppressSubnodes ` annotation to the ` BaseParser ` class and updated its usage in ` ImplicitActionsConverter ` to improve
replace direct instantiation of RandomAccessRead with a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
deleted the TestDocInverterPerFieldErrorInfo . java file to the test file is no longer needed
added a shell command for key event 82 in AbstractLauncherUiTest and removed a assertion in LauncherInstrumentation to ensure proper handling of key event handling
added JSON file handling for output URLs in FileDumper . java to improve the handling of JSON file paths in the output
make profilerserver . resetresultsnotifiedflag a private method
refactor TextureHelper to use a new method ` loadImage ` instead of ` getTextureFromImage ` to improve code readability and maintainability
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests from " application : " to " application
updated randomization values in RandomizersTest from " 9781797745008 " to " 9781797845005 " to
updated the notification sound setting logic in AlarmReceiver . java to use a URI for the ringtone to improve code readability and maintainability by
added a method ` reportLoopCount ( int count ) ` to the ` RootNode ` class to report loop counts to ensure that loop counts are
[ java ] do n ' t update stack version if the version be not standard .
corrected a typo in the method name from " rangeId " to " regionId " in PortableIpDaoImpl . java to ensure
removed redundant call to streamManager . open ( ) in ItemOrientedStep . java to improve code readability and maintainability
added a new file ` CountedLoopProblem . java ` that tests the result of ` CountedLoopProblem . java ` to verify the hash
removed the ` nmethod ` parameter from ` executeCompiledMethod ` and ` executeCompiledMethodVarargs ` methods across multiple classes to simplify method execution
[ hotfix ] [ jvmci ] make pendingfailurespeculationoffset configurable .
rename ` TransformerSupplier ` to ` ValueTransformerWithKeySupplier ` in ` KafkaStreamsTracing ` to improve clarity and consistency in naming conventions
updated the ` FeedbackConstantSumQuestionDetails ` and ` FeedbackSessionsLogicTest ` classes to include a ` toStringArray ` method to
removed the call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline code by eliminating unnecessary calls to
added thread management and stack dump functionality in CloseRace . java to improve thread management and error handling during dump operations
updated return value from ` val ` to ` val . intValue ( ) ` in ` IntPointField . java ` and added assertions in ` Test
updated the arc size calculation in MyButton . java to account for a fraction of the width and height to improve the accuracy of the button ' s
updated width values from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java from 768 to
rename ` minifySqlEnabled ` and ` shrinkWhitespacesInSql ` methods to ` shrinkWhitespacesInSql ` and update related methods accordingly to
removed the ` waitForStateTransitionToEnd ` method from ` AbstractLauncherUiTest ` and refactored state transition logic in ` WorkProfileTest
added imports for ` CasCoreConfiguration ` and ` CasCoreHttpConfiguration ` in multiple test files to improve code organization and maintainability
replaced ` readLong ( ) ` with ` readFully ( buf ) ` in ` Volume . java ` to improve data reading accuracy by using a more efficient
camel - 14284 : camel - http - fix camel - http to use the mandatory endpoint in camel - http
updated the initialization of the ` result ` variable in ` DeclarativeHintsParser . java ` to use ` bootCP ` instead of ` EMPTY
added a new file ` MediaScriptScopeProvider . java ` that implements the ` ScriptScopeProvider ` interface to provide a mechanism for managing audio and
added methods to get and set the layer manager in AnimComposer , AnimEvent , and TestJaime classes to enhance animation functionality and
added a check for empty queue in DeferredHandler . java and removed the updateWallpaperOffset ( ) method from Workspace . java to ensure that
added null checks for mapOp , mapWork , and mapWork in MapRecordProcessor , TezProcessor , and updated exception handling in Tez
refactor cylinderregion to use vector2d instead of vector2d .
refactor TestBadUseCases to use ExpectedException instead of a try - catch block to improve clarity and maintainability of the test code
added null check for subparams before sending a single query in QueryExecutorImpl . java and created a new test method in StatementTest . java to
added a conditional check for the customizeEnvironment method in Installer . java and modified the customizeEnvironment method in SecurityModel . java to improve flexibility in
added rctag = android% 20edit to review interface
refactor Test class for improved readability to enhance maintainability and readability of the code
updated PBEKeySpec from blkSize * 8 to keyLength in PBES2Core . java to ensure correct key length is used for
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in the document header
added speed calculation for jump detection in GpsLoggingService . java to ensure accurate jump detection based on the current location information
added cell background and completion messages in TableLayout and TableLayout2 classes to enhance user experience by providing more detailed cell information
updated DataLabelingServiceClient and package - info . java files to improve documentation clarity and maintainability
refactor InsightFilter to use WeakReference for rootNameFn , sourceFilterFn , and sourceFilterFn to improve thread safety and reduce potential null
removed redundant sorting logic in AllAppsList . java to simplify code and improve readability
refactor ` SettingsActivity ` to extend ` PreferenceActivity ` instead of ` ThemedPreferenceActivity ` to streamline code and improve maintainability by
updated the valueClass from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of the value class
corrected a typo in the assertRootArcs method call to improve code readability and maintainability
added a assertion to check if the security policy does not exist or file is not a file to ensure that the security policy does not exist or not
added override for olingo2component . getconfiguration ( ) in olingo2component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for the test to complete
updated logging statement from ` e ` to ` e ` in MongoPersistentEntityIndexResolver . java to improve clarity and consistency in logging output
add a method to publish a xmpp image by http to xmpp .
camel - 14284 : camel - netty - use channellocal instead of channellocal
updated URL template patterns in BalancedClickhouseDataSource . java and added tests for URL splitting in BalancedClickhouseTest . java to
removed system property setting for disable JSR 199 in FragmentActivator . java to ensure compatibility with the latest JSR version in the application
added null string handling in CSVRecordReader and corresponding tests in CSVRecordReaderConfig to ensure proper handling of null values in CSV output
added LiquibaseService import to multiple connection classes to skip processing in the codebase
updated the calculation of aggregatedScope to use JavaSourceFile instead of J . CompilationUnit to ensure that the cursor is an instance of JavaSourceFile
updated event topic handling in ItemCommandTriggerHandler and ItemStateTriggerHandler to include " / command " instead of " / command " to improve event
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve error handling by
added " zkCredientialsProvider " case to " zkCredientialsProvider " and " zkCredientialsProvider " to
fix mana tablet not show mana , fix mana crash .
added a method to set the identifier collection for the current call event in P25P2DecoderState . java to ensure that the current call event
removed import of HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter from TestRandomChains . java to streamline code by eliminating
updated the thread pool name in ScryptUtil from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to
refactor GeneratedCode class to improve code organization to enhance maintainability and readability of the code
updated assertion message from " definition to " definition " in TypeDefinitionRegistry . java to improve clarity of error messages for better debugging
updated import statements and visibility of shareWithMeIcon in LocalFileListAdapter . java to improve code readability and ensure the share icon is visible
updated the link to the ` crossorigin ` link in ` DefaultLogoutPageGeneratingFilter ` and ` LogoutPageGeneratingWebFilter ` to ensure
updated import statements and modified method signatures in RouterFilter , RouterServerListFilter , and RouterDistributorTest classes to improve code clarity and ensure
updated assertions in TestIndexWriterMergePolicy to include segment count information to improve clarity of assertion messages for better debugging
mark multiple classes as deprecated to indicate that these classes are outdated and should no longer be used in future development
added a null check for the context in CrawlerSessionManagerValve and implemented a test for multiple contexts in TestCrawlerSessionManagerValve
added security checks to the getJspApplicationContext method in JspFactoryImpl to ensure proper access control based on security settings
updated calculations for minimum and maximum values in RocketComponentConfig . java to improve accuracy in calculating model models based on the component ' s bounds
updated NonceService and OpenIDAuthenticationProviderModule to utilize Scopes for SINGLETON to enhance security by allowing NonceService to be
updated the ` updateChildLinks ` method in ` FileWrapper . java ` to use ` thenCompose ` for updating child links to ensure that child
updated method signatures in SpringCloudPlugin . java for consistency and clarity to improve code readability and maintainability by reducing redundancy
increased the timeout value of publishWithDelay from 100ms to 500ms in RetrievalBlockingMessageStoreTests . java to allow for more time for
added a boolean flag ` mShiftCodesAlwaysOverride ` and modified the logic for determining the ` mShiftCodesAlwaysOverride ` variable to ensure that
[ java ] fix race condition in zookeeperleaderelectionmanager . isleader ( )
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer to check if the identity is a reference to ensure that the identity is only processed when the identity is
updated the ` newInstance ` method signatures to accept a ` noop ` parameter instead of ` AbstractCommandOptions ` to enhance flexibility in creating artifacts based on
added a sleep delay of 3000 milliseconds in TestListenTCPRecord . java to ensure proper handling of InterruptedExceptions
refactor method call argument handling in PatchExtensionMethod . java to improve code readability and maintainability
replaced Map with Set for loading native libraries in RawNativeLibraries to simplify library management and improve code clarity
added support for " apply - sequence " and " ignore - send - failures " attributes in DefaultRouterParser and AbstractChannelNameResolvingMessage
added x509PublishUrl and x509ViewName fields to ClientKeyPublisherMapping , ClientKeyPublisherMapping , and JwkViewResolver classes to
refactor readers assignment logic in QueryComponent . java to improve readability and maintainability of the code
replaced ` FunctionQParser ` with ` Double2Parser ` in ` ValueSourceParser . java ` to use ` Math . min ` instead of
removed conditional check for focus and pointer events in the Container class to simplify the code and improve readability
removed the ` n ` and ` minScore ` variables from ` Highlighter ` , ` SpanGradientFormatter ` , and ` TokenSources ` to
fix a typo in the SQL insert statement in configurationserverimpl
added conditional on web application annotations and updated CompositeProviderSelectionMultifactorWebflowConfigurer to use ObjectProvider for flowBuilderServices to enhance flexibility in managing
refactor WriteJdbcPTest to improve database connection handling and enhance database connection management to enhance test reliability and ensure proper connection management during database operations
refactored laf handling in DefaultPlatform . java to simplify code and improve readability
replaced calls to ` getStateEntity ( ) ` with ` stateEntity ` in ` ServiceComponentHostImpl . java ` to simplify code and improve read
removed conditional logic for setting margin start in FloatingTaskView . java to simplify layout calculations for better readability and maintainability
updated status line setting in RootFolder . java and updated setStatusLine method in NavigationShareTab . java to improve user experience by providing clearer status
[ hotfix ] [ runtime ] remove unnecessary threadid assignment in cpucallgraphbuilder
use deftoolbar instead of hardcoded ` ` 0 ' ' for default perspective
added NetworkAddressChangeListener to HomekitImpl and updated logging messages to include NetworkAddressChangeListener to enhance network address management and improve logging clarity
hbase - 16446 testhdfseventsinkonminicluster . testhdfseventsinkonminicluster . test
replaced ` SourcePath > ` with ` linkStyle ` in ` CxxLibraryDescription . java ` to improve clarity and maintainability of the code
added a null check for the message before processing in ExceptionHandlerRegistryFactory . java to prevent potential NullPointerExceptions when message is null
modified the ` nextID ` variable to be volatile and updated its usage in ` DirectoryTaxonomyWriter . java ` to ensure thread safety and improve error
[ java ] fix test failure in jmstransportnetworkbrokertest
added ` HasSourcePath ` interface and updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and `
replaced StringBuffer with direct string concatenation in Arrays . java to simplify error handling and improve code readability
added a default index field name to the OrdinalMappingAtomicReader and updated related tests in TestOrdinalMappingAtomicReader to ensure the correct index field
modified the calculation of ` millis ` based on ` seconds ` and ` nanoseconds ` in ` Instant . ofEpochMilli ` to improve accuracy in
fix shader renderer to use ` ` name ' ' instead of ` ` name ' '
added a boolean variable ` scriptsBlocked ` to manage block update scripts in ` CopyPaste . java ` to ensure that the application correctly handles scripts
added a new file TestCMoveLimitType . java that implements a method to test the move limit type in a CharBuffer to demonstrate the behavior of
[ java ] do n ' t reset temporal attributes in record configuration .
camel - 14235 : camel - sql - parser : use token scaletoken instead of arraylist in camel - sql
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to ensure compatibility with Oracle Corporation
refactor color handling in Main . java and add printVersion method in VersionCommand . java to improve code readability and maintainability by encap
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to utilize EncryptionUtils for hashing to improve code readability and maintain
added EOFException handling in Http11InputBuffer . java to ensure that EOFException is thrown when the input buffer is empty
added unit tests for deleting members from non - existent groups in DefaultGroupProviderTest . java to ensure that deleting members from non - existent
camel - 14284 : remove unnecessary array initialization in camel - communicator
deleted the V2ReplicationProtocol . java file to remove unused code to streamline the codebase
updated the type of ` compileTimeClasspathDeps ` from ` BuildRule ` to ` compileTimeClasspathSourcePaths ` across multiple classes to improve clarity
added two new demo classes , ConstructorArgsDemo , and StrictDemo , and updated StupidFinal and StupidFinal classes to improve
make directtemplatefeaturecollectionfactory use threadlocal to avoid memory leak
update assertion to check if responseCount is less than 2 times to improve accuracy of response count validation
added null check for getIndexNumber ( ) in ItemRowAdapter . java to prevent potential NullPointerException when getIndexNumber ( ) is null
rename ` showAnchestorsShown ` to ` showAncestorsShown ` across multiple classes to improve clarity and consistency in naming conventions
added a check to return early if the app ' s width is less than 12 to prevent processing when the app ' s width is less than 12
updated the condition in ChangeLogParameters to check for non - global changelog parameters and added a new test case in ChangeLogParametersTest to ensure
changed the visibility of loggers from static to final to allow subclasses to access the loggers map
updated return statement to use getBasePlot ( false ) instead of a hardcoded value to improve code readability and maintainability by using a consistent
make upload directory creation conditional in restserverendpoint . createuploaddir
added a boolean parameter ` sendStatus200 ` to the ` ServerGenerator ` , ` HttpTransportOverFCGIConnection ` , and ` ServerFC
added a check for the length of the comment in the multi - line comment to ensure that the comment is not empty before proceeding
added imports and modified file type removal logic in BuckModule . java to ensure proper handling of file types during write operations
updated import statements and method signatures in ComposedUtil . java to improve code readability and maintainability by using wildcard imports
[ hotfix ] [ test ] fix flaky test usertmlocking on macos
renamed the variable ` DUMMY _ ACCOUNT _ NAME ` to ` ACCOUNT _ NAME ` in ` AccountsActivityTest . java
refactor Player class to improve code organization to enhance maintainability and readability of the code
added an import statement for ChannelTypeUID and invoked it in AbstractModbusOSGiTest . java to utilize the Mockito package import for
fix findbugs warning in polyglotexceptionimpl . java
added context reset functionality to ` AndroidTestEnvironment ` and ` ShadowFontsContract ` classes to ensure proper context management and prevent potential memory leaks
added ` toMillis ` method to ` TimeGranularity ` and modified ` endDateTime ` initialization to use ` TimeUnit ` instead of `
added null check for _ try . getFinally ( ) before visiting control flow to improve robustness by preventing potential NullPointerExceptions
updated assertions in Assert . java to check for array lengths and added error handling in ArrayEqualityAssertTest . java to improve error reporting for array
updated the ` WindowClickLogic ` class to include a default case for ` ClickType . UNKNOWN ` and adjusted the maximum stack size calculation to ensure
corrected a typo in the index calculation in MeshBuilder . java to improve code readability and maintainability
nifi - 126 : remove unnecessary controllerserviceprovider from standardprocessscheduler
added AP _ PROCESSORS _ ARG to KotlincToJarStepFactory and a corresponding test in KotlincToJarStepFactory
updated RESCROLL _ DELAY from 750 to 150 in DragController and PagedView classes to improve responsiveness and responsiveness of the page
added permission check for shortcuts in the LauncherModel and LauncherModel classes to ensure shortcuts are only updated when necessary
added case statements for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance search functionality for better user experience
added null check for cname in CoreAdminHandler . java and improved error handling in CoreAdminHandlerTest . java to ensure robustness by preventing
added marker selection functionality to the NearbyMapFragment to ensure the bottom sheet is selected when the map is selected
added exception handling in FileSyncAdapter to improve error handling by logging stack traces
refactor TestMemoryAwareness to use OutputAnalyzer for better error handling to improve code readability and maintainability by reducing duplication
updated refill and merge logic for feeds in FeedQueues . java to ensure proper handling of Urgent applications based on application settings
[ java ] add debug log for defaultdrmsessionmanager . getdefaultdrmsession ( ) .
updated ` PackageType ` and ` ResourceCompressionMode ` methods to use ` Locale . US ` instead of ` Locale . valueOf ( ) ` to
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure compatibility with application - specific XML formats
replaced instances of ` configFile ` with ` INSTANCE . confFile ` in ` Args . java ` to ensure consistency in file naming conventions
updated waitUntilReadyAndTimeout method call from " sleep 5 ; exit 1 " to " exit 1 " in HostPortWaitStrategyTest . java
updated the number of distinct aggregates from ` intMath ` to ` longMath ` in ` HiveExpandDistinctAggregatesRule . java ` to
added multiple checks for headless systems in the Toolkit class to ensure proper handling of headless environments in the Toolkit class
added a condition to check if the current recipe matches the world in ExoflameFurnaceHandler to ensure that the canSmelt
[ hotfix ] [ solver ] add movethreadcountdescription parameter to defaultsolver .
fix a bug in search with rev - include do not select the same resource type
added a new test class ` Issue582Test ` to verify the behavior of ` pumpSource ` in ` BTreeKeySerializer ` to ensure
[ native ] add test for overflow in general query .
refactor LoadingCache class implementation to improve code readability and maintainability
added a rule matching for " AvoidNonConstructorMethodsWithClassName " in NamingRulesTest . java to ensure proper handling of non - constructor methods with
added exception handling for StaleElementReferenceException in ExpectedConditions . java to improve robustness by handling potential StaleElementReferenceExceptions
refactor ` ViewExistsPrecondition ` , ` DatabaseSnapshotGenerator ` , ` JdbcDatabaseSnapshotGenerator ` , and ` JdbcDatabaseSnapshotGenerator ` to
refactor DOMUtil class to improve code organization to enhance maintainability and readability of the code
added translation calculations to TaskViewUtils and implemented a logMatrix method in Utilities . java to enhance debugging capabilities by providing more detailed logging information
change default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags and RotationHelper
added a walk method to TempFSTTermsReader and modified TempTermOutputs to handle arcs more effectively to improve performance by avoiding unnecessary operations
added SolrQueryRequest import and updated method signatures to include SolrQueryRequest in multiple augmenter factory classes to ensure compatibility with Solr ' s query request
added SQL statements for CREATE , UPDATE , and UPDATE statements in SingleTableMySQLTriggerTest . java to ensure proper handling of null values in SQL
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a new setComparator method in FieldValueHitQueue and TopFieldCollector
updated SQL query formatting in PhoenixQueryBuilderTest . java to use backslashes to improve code readability and maintainability
added Spark initialization to the init method in RequesterTest . java to ensure proper initialization of the Spark instance
added methods to save and save the total storage pool and total storage pool in DynamicPropertiesStore . java to improve resource management and error handling for invalid
added support for dev mode in AssetsController and updated related test cases in AssetsControllerTest to ensure compatibility with dev mode and improve resource management
updated method call from ` containsKey ` to ` getMapMarkKey ` in ` MapMarksManager . java ` to improve code readability and
added a TokenRewriteStream parameter to the getDefaultValue method and updated its usage in BaseSemanticAnalyzer and DDLSemanticAnalyzer to support token rewrite handling
removed ` throws IOException ` from several methods in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` JavacProcessingEnvironment ` to simplify
updated file path retrieval and logging statements in JxBrowserManager . java and added error handling in FileUtils . java to improve code readability and ensure
added a condition to check if the AppVersion key is " AppVersion " before creating images in IOSImplementation . java to ensure proper handling of
removed the bridge id from the debug log message in SomfyTahomaBridgeHandler . java to simplify the debug log message for better read
disable flaky test on github ci
refactor OpenWireConnectionTimeoutTest to use static properties for keystore type and password to improve code readability and maintainability by reducing redundancy
fix npe in dynatrace exporter v2 due to NaN value .
added a call to remove the session ID from the session info to ensure that the session is removed from the session information
added host name setting for alerts in HeartBeatHandler and updated AlertReceivedListener to include it in AlertReceivedListener to ensure hostname is set
refactor buffer flushing logic in ChannelEndPoint . java to improve code readability and maintainability
updated the resource path from " org / kie / kmodule . xsd " to " org / kie / api / kmodule .
added unit tests for the ` seekTo ` method in ` ShadowMediaPlayerTest ` and modified the ` seekTo ` method in ` ShadowMediaPlayer `
rename the method ` createTask ` to ` createThrowingTask ` in multiple classes to improve clarity and consistency in method naming
added a conditional check to set the border of the CloseButtonTabbedPane based on the AQUA _ LAF flag to ensure the button is
updated TSPTimeStampService and TestSignatureInfo to set HTTP methods and charset , and removed unused imports to streamline code and improve readability
refactor xstreamutils . createxstream ( ) to use reflection - based method .
added validation for diamond types in Attr . java and created a new DiamondRaw class in Neg12 . java to improve error handling and provide clear
updated the parameter name from ' targetType ' to ' targetType ' in RelOptUtil . java to improve code readability and maintainability
updated argument validation logic in Http2Settings . java to include an additional condition to ensure that the value is valid before proceeding
removed the Issue664Test . java file to the test file is no longer needed in the project
removed redundant session insert logic in SessionsPoolTest . java to streamline session management by eliminating unnecessary operations
geojsonwmsbuilder : add start / end object to start root object
updated the ` setIndex ` method to use ` intValue ( ) ` instead of a hardcoded value to improve code readability and maintainability
added a check for manual unstash behavior in TaskbarStashController . java to ensure that unstash behavior is only performed when the
camel - 14263 : camel - managed - camel - do n ' t use ` ` customid ' ' attribute instead of ` ` true
modified the getEventMismatchMessage method to accept a boolean parameter for wait for expected events to enhance event verification by allowing more time for event mismatches
added a new file HeaderFixer . java that implements a header file processor to implement a header file processing mechanism
added constants for first load complete and action handling in the Launcher and LauncherProvider classes to enhance user experience by allowing users to receive first load
deleted the SuperJumperAndroid . java file to the file is no longer needed in the project
updated the return value in SystemTableScan . java and added a new test for broadcast join functionality in TestStarQueries . java to ensure that broadcast
removed multiple KeyValuesProviderAware and ObservationConventionAware interfaces from the Observation class to streamline the code and improve maintainability
added missingBlocks parameter to the processIdRematches method and removed it from missingItems in PersistentRegistryManager . java to enhance the functionality by allowing
updated return statements to use ` base ( long ) i * scale instead of ` base ( int ) i * scale ` in multiple classes to ensure
cache the last format record in hssfcellstyle . getdataformatstring ( )
updated the query parameter in RemoteAuthenticationEndpointTests to include a filter for user attributes to ensure correct filtering of user attributes based on the username
updated the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure correct handling of
added container info logging for the LAUNCHER _ ALLAPPS _ EXIT event in Launcher . java to enhance logging capabilities for the launcher
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
deleted the DeadlockTest . java file to remove unused test classes to streamline the codebase
added checks for newInput and newInput in BugContentProvider . java and modified marker handling in BugGroup . java and BugGroup . java to
added a new menu item for reopening the browser in the JavaScriptEditor and updated its usage in JavaScriptServer to improve user experience by providing clear
updated error handling in ErrorMsg and SemanticAnalyzer classes to improve clarity and consistency to enhance error reporting and provide clearer context for multiple output scenarios
updated the ` addEntryListener ` method in ` BasicTest . java ` to include an ` EqualPredicate ` parameter to ensure proper handling of entry
fix coordinatearrays . reverse ( ) to return early if coord . length < = 1
updated the method call from ` setOpen ( ! isOpen ( ) ) ` to ` setOpen ( ! isOpen ( ) ) ` to ensure proper
added initialization of the first variable in TestPayloads . java to ensure that the first variable is set to false
removed conditional logic to enter the overview mode when the workspace is in the overview mode to simplify the code and improve readability by directly entering the overview
[ hotfix ] [ test ] set destination in networkroutetest
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java from Integer . MIN _ VALUE to
[ hotfix ] [ test ] fix checkstyle violation in nestedlogicallogicaltest . java
replaced ` writerIndex ( ) ` with ` true ` in ` HttpClientRequestImpl . java ` and updated buffer handling in ` HttpTest . java
updated the regex pattern in GetMavenDependenciesTask . java to replace " analyzers - " with " solr - ) analysis - " to improve clarity
pdfbox - 4071 : remove unnecessary type casting
removed system . out . println statements from ReferenceUtil . java to simplify code and improve readability
[ hotfix ] [ graphql ] add query type to visiblefieldpredicate
added ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcEnable ` parameters to ` CommonParameter ` , ` Constant `
added a check to ensure the folder is an instance of DropTarget before removing the drop target to avoid potential ClassCastException when removing the DropTarget
refactor stub jar generation logic into a separate method ` createStubJar ` to improve code readability and maintainability by encapsulating the
updated feature descriptions in StartPageTopComponent . java and added new features in StartPageTopComponent . java to enhance user experience by providing clear
[ hotfix ] [ cassandra ] remove unnecessary call to schedulewithfixeddelay
removed unnecessary type casting in OnlineTestCase . java to simplify code and improve readability
replaced ReturnAttributes . NONE with ReturnAttributes . ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure correct return attributes are returned for
refactor ` onIdleTimeout ` and ` onFailure ` handling in ` HttpChannelState . java ` to improve code readability and maintainability
updated the CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to simplify the class structure and improve readability
updated table header separator regex in TableBlockParser . java and added a new test case in TablesTest . java to improve readability and ensure
updated the return value from 32.0 f to 31.5 f in Camera . java from 32.0 f to 31.0 f
added a preference for " startonbootup " in GpsSettingsActivity and updated the return values in Utilities to ensure proper handling of boot setup
updated the base64 secret value from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java from 128 to 512 to ensure compatibility with the
updated error message from " enablePassingNulls " to " enablePassingNulls " in MySQLStoredProcedureTest and PostgreSQL
added JUnit Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race condition still
refactor ` getInputPinnotFS ` and ` getOutputPinotFS ` methods to use ` PluginManager ` instead of ` FileURIScheme `
added locale checks in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting based on the current language
added import for MetalLookAndFeel and set the MetalLookAndFeel in bug8032878 . java to enhance the visual appearance of the UIManager based on the
added a ` @ PreDestroy ` annotation and modified ` pingAtRegularIntervals ` method to use ` pingScheduledExecutorService ` to ensure thread safety
updated error message retrieval from ` getMessage ( ) ` to ` getReasonPhrase ( ) ` in ` GlobalErrorHandler . java ` to improve error handling
rename method ` addReads ` to ` addReads ` and ` addExports ` in ` ModuleTable ` , ` PackageTable `
added handling for CmdLineException in PinotAdministrator . java to improve error logging for better debugging and debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` in ` Subject . java ` and added ` equals ( o )
refactorPlaybackOverlayFragment and ImageButton to use boolean flags instead of boolean flags to improve code readability and maintainability by reducing redundancy
updated zoom level minimum and maximum values from 10 to 24 in BasicMapViewer . java to ensure proper handling of zoom levels in the map
added processUser and processUserGroups fields to the DrillRoot class to enhance user and group management by utilizing ImpersonationUtil for better
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( sm . checkPermission ( sm ) ` in multiple files to simplify permission
added argumentExtractors parameter to DelegatedClientAuthenticationAction and updated related methods in DelegatedClientAuthenticationAction to enhance functionality by allowing dynamic retrieval of
changed the ` defaultGroup ` variable to be final in ` NacosServerRegisterRepository . java ` to ensure immutability of the ` default
replace the ` destroyTileCache ` method with ` createTileCaches ( ) ` in ` TileSizeChanger . java ` to improve code
removed redundant calls to ` addInfoRow ` and ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment ` and ` InfoLayoutHelper `
refactor ` cleanEntriesForFeedsWithoutSubscriptions ` method to accept a list of feeds to improve code readability and maintainability by
replaced ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to streamline authentication handling
nifi - 12626 : use temporaryfolder instead of java . io . temporaryfolder for test
[ hotfix ] [ mathematicalfivepoint ] fix infinite loop in lincompositepoint
removed unnecessary whitespace in RandomAccessReader . java to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotation to Fields . java and MockitoBeforeTestNGMethod . java
refactor CImage methods to use a list of images instead of a single array to improve code readability and maintainability by encapsulating
hbase - 16446 use bytearraycomparator instead of writablebytearraycomparison in maprdbfilterbuilder
updated variable names from " runtimeVisibleMethodOfFieldAnnotations " to " runtimeVisibleFieldOrMethodAnnotations " in ClassParser . java and JavaClass .
replaced null checks with ` Objects . equals ` for version comparisons to simplify equality checks and improve code readability
add miss @ nullable annotation to resolveclassfromcanonicalname ( )
added assertions to verify location locations in NinjaDefaultTest . java to ensure proper handling of view HTML errors and HTML errors
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
updated padding bottom calculation in DetailFragment . java and modified listViewPositionOffset initialization in ListFragment . java to improve layout responsiveness and
refactor exception handling in ZkStateReader to use currentThread ( ) instead of Exception to improve code readability and maintainability by standardizing exception
added null checks for ` f . getName ( ) ` and ` field . getValue ( ) ` in ` HttpFields . java ` , and added
do n ' t allow static nat service to be use in the specified network id
added resetHeaderScrollingState ( ) and resetFabVisible ( false ) methods to OCFileListFragment . java to ensure proper state
removed the extra empty screen from the workspace to ensure the extra screen is removed when necessary
added a new boolean variable ` fixedWidth ` and modified conditional logic in ` BitmapFont . java ` to ensure glyphs are only added when fixed
removed the ` showTitle ` parameter from the ` createFragment ` method in ` MainFragment ` and ` ChangeLogFragment ` classes to simplify the
added preEvent , postTransition , and postTransition methods to AbstractStateMachineFactory to enhance event and error handling capabilities for state machine events
refactor ConfigDescriptionProvider to improve code readability to enhance maintainability and readability of the code
updated role creation to include " owner " and modified HiveConf initialization to support Windows - specific role configurations to ensure compatibility with Windows environments and
updated sorting logic in FacetComponent . java and added new test cases in TestDistributedSearch . java to improve clarity and functionality of facet sorting logic
updated the property name from " target " to " overridingProperties " in CheckstyleReport . java to improve clarity and consistency in property naming
added functionality to stop the Jetty Solr runner in DeleteInactiveReplicaTest . java to ensure that the Jetty SolrRunner is stopped when a replica
added a new parameter ` fileName ` to the ` FileActionsDialogFragment ` constructor and updated the ` FileActionsDialogFragment ` to include a string parameter to
added INVALID _ DIRECTION constant and updated condition checks in CellLayout . java to improve code readability and maintainability by reducing redundancy
updated fields in InnerTransferRequest and AccountAPI to include currency , from , to , and to to enhance account transfer functionality and ensure compatibility with new
add jobexecutionservice . getexecutionidforjobid ( ) and assertjobrunningeventually ( ) to sinkstresstestutil
added a new annotation ` EnableAdminClient ` to the ` org . noear . solon . admin . client . config ` package to enable
replaced specific imports from ` org . openrewrite . java . tree . J ` with a wildcard import in ` FindTypes . java `
added a method to set the action text color based on the primary dark color to enhance user experience by providing a visual representation of the action text
added ComparableField to the ` find ` method in ` Manager ` , ` StreamSupplierComponent ` , and ` StreamSupplierComponent ` classes to enhance
refactor method names from ` addTestStepsForBeforeHooks ` and ` addTestStepsForAfterHooks ` to ` createCreateBeforeHooks `
corrected the spelling of " noArgMethod " to " validNoArgMethod " in multiple test files to improve code readability and maintain
added a cancelClient method to the startDriver method and implemented a cancelClient method in RpcServer to improve client cancellation handling and provide clearer error
added ` getImplicitPreCoercionValue ( ) ` method to ` SkylarkParamInfo ` , ` ParamInfo ` , and
initialized the ` lastDisplayedUser ` variable to a default value of ` Optional . empty ( ) ` to ensure that the ` lastDisplayedUser `
added an ` findAll ` method to the ` QueryDslMongoRepository ` class and modified the ` createQueryFor ` method to accept an `
added null checks before stopping the SchemaRegionConsensus and DataRegionConsensusImpl instances to avoid potential NullPointerExceptions when stopping
added a break statement to the DefaultPlannerBenchmark class to exit the warm - up loop when a failure occurs
add xread ( ) and xread ( ) method to multikeypipelinebase and multikeybinaryredispipeline
[ hotfix ] [ table - common ] fix typo in streaminput class
added WebSecurityCustomizer to CasWebAppSecurityConfiguration and refactored configureHttpSecurity method in CasWebSecurityConfigurerAdapter to improve security
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to validate the behavior of ` HiveHiveSessionHookTest `
added a method to register providers in ShadowContentResolver and updated ContentProviderController to utilize it in ContentProviderController to improve provider registration functionality and ensure
updated the constructor of AttributeReader to use ClassFile . Version instead of Version to improve clarity and consistency in class naming conventions
added a call to setKeepAlive ( ) in SingleConnectionManager . java to ensure that the connection is kept alive based on the configuration
[ java ] rename unicastsenderflowcontrol and multicastsenderflowcontrolstrategy to unicastsenderflowcontrolsupplier
added a null check for the current point in DrawLocus . java and updated the condition in GBasicStrokeD . java to ensure that the
added handling for IOException in ChannelEndPoint and modified flushing logic in WebSocketGeneratorD13 and WebSocketMessageD13Test to improve error handling and ensure
[ java ] allow selenium . take . screenshot to be pass to the webdriver .
updated assertions in ` ShadowCornerPathEffectTest ` and ` ShadowPackageManagerTest ` to use ` assertThat ` instead of ` assertEquals ` to improve test
trufflelanguage : remove deprecate method that be no longer need
updated error handling in StubberImpl . java and added new test classes StubbingWithBadThrowablesTest and UninstantiableThrowableTest
refactor ascendant handling in Actor . java and Group . java to improve clarity and consistency in error reporting
add location permission dialog to the location picker activity
added a new file ` CounterMDB . java ` that implements the ` GenericMessageDrivenBean ` interface to implement the ` CounterMDB
added CookieSpecs import and set cookie spec in GetHTTP . java to ensure consistent cookie handling across HTTP requests
updated the comparison logic in Intersector . java to use ` overlaps ( r1 . overlaps ( r2 . x , r1 .
replace DeemphasisFilter with NonClippingGain in P25AudioModule and update audio filtering logic in AirspyTuner
added monitoring URL parameter to the ScrollingPanel constructor and updated related classes to include it to enhance user experience by allowing users to configure the monitoring URL
[ hotfix ] [ config ] remove unused service _ create _ timeout option
added switch - case handling for " landmark " and " city " icons in NearbyListFragment . java to improve clarity and functionality of the
added a null check for the package before processing to avoid potential NullPointerExceptions when the package is null
added a new file PrintInlining . java with a main method that prints a string to demonstrate the usage of the PrintInlining class
fix ( javadoc ) : fix nested brace in javadoc tag
[ java ] remove unnecessary assignment of publicationstarttermid and publicationstarttermoffset in archivetest
updated edge data model from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java `
removed unused import of ClassPathResource and ResourceLoader in SpringResourceProperties and PasswordManagementConfiguration to streamline code by eliminating unnecessary dependencies
updated Timber log message format in VideoManager . java to include playback speed information to improve clarity of error messages for better debugging
[ muc ] remove muc room when the cluster be start .
updated the JSON format in AutoScalingHandlerTest . java from ' replicas ' to ' cores ' to improve clarity and accuracy of the test
added key properties forFlipY ,GenerateMips , and generateMips in TextureHelper . java to enhance texture rendering capabilities for better user experience
refactor ` PythonDslProjectBuildFileParser ` to use ` EventReportingProjectBuildFileParser ` instead of ` PythonDslProject
[ j2cl ] add library normalization pass to j2cl transpiler
replace ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and update related test cases to improve clarity and
[ hotfix ] [ runtime ] fix npe in memorysegment
added Temporal annotations and TemporalType imports in ConsoleSessionVO . java to ensure proper handling of timestamp timestamps in the console session
added a new file ` Hbs . java ` and ` HbsTest . java ` with a template engine to facilitate the handling of Handlebars rendering
refactored message creation logic into a separate method ` setUpIncomingMessage ` to improve code readability and maintainability
updated the method call from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to use ` values ( )
[ selenide ] add test for wait for alert dialog ( # message )
added a check to return null for distinct column indices in ReduceSinkDeDuplication . java to ensure that only one distinct column indices are
refactor MiscUtils to improve handling of jar paths and enhance error logging to enhance code readability and maintainability by reducing duplication
chore ( deps ) : update license year for generated file ( # 244 )
updated the package name from " jetty - websocket - server " to " jetty - websocket - client " in TestOSGiUtil . java to
updated return statements in SAMLAuthenticatedUser . java to return an unmodifiable map instead of unmodifiable map to improve code readability and maintainability by
do n ' t repaint program header if there be no location
replaced instances of ` new Double ( bytes ) ` with ` getDeclaredConstructor ( ) ` across multiple Java files to simplify code and improve readability by
updated the method call from ` getDate ( colName ) ` to ` getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure
added a condition to check for " javax . naming . Context " class name in HtmlJndiTreeReport . java to ensure that the class
refactor database option handling in StorageUtils and Manager classes to improve code readability and maintainability by centralizing database options
changed edgeType from " double " to " mutual " in ImporterGEXF . java to ensure consistency in edge type handling
removed the static final modifier for FLAG _ SLIPPERY in StatusBarTouchController . java to simplify the code and improve readability by
truffleconstantfieldprovider : use array . isarray ( ) instead of math . min ( 1 , 1 )
added functionality to retrieve and set Google Drive folder path in the preferences to enhance user experience by allowing users to specify the Google Drive folder path preference
[ geogebra ] shuffle suggestion popup in drawevaluatorweb to allow shuffle suggestion
added @ Nullable annotations to several method signatures in Truth . java to ensure that targets are not null before proceeding
updated the return value calculation in ArrayUtil . java to use a fixed value of 4 instead of a fixed value to ensure proper handling of array size
added a new test class ApiExceptionTest and modified ClassInstrumentor to check if an ApiException can be instrumented to ensure that the application correctly handles exceptions
added synchronization to manage waitingForAnticompactions in StreamInManager and StreamOut classes to ensure that the waitingForAnticompaction is
added ` isKeyguardSecure ` and ` setIsKeyguardSecure ` methods to ` ShadowKeyguardManager ` and updated related tests in `
added serialVersionUID fields to the StringDialog class to ensure proper serialization compatibility for various components
updated regex pattern in GrblUtils to replace ' > ' with ' > ' and added a conditional check for the length of ' > ' to
renamed the test method from " assertEmptyThrowsMutipleFailureExceptionForManyThrowables " to " assertEmptyThrowsMultipleFailureException
modified the checkDrained ( ) method in AsyncFileImpl . java and added a new test method in FileSystemTest . java to ensure that the
updated LIGHTS _ NUM , LIGHTS _ INTESITY , LIGHT _ INTESITY , and LIGHT _ INTESITY
replaced ` FakeProjectFilesystems . createProjectFilesystem ( ) ` with ` workspace . getProjectFileSystem ( ) ` in multiple integration test files to simplify
refactor ` loadRerunFile ` and ` loadRerunFile ` methods to use ` PathWithLines ` instead of ` String ` to
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from TEST _ DIRS array to clarify the purpose of the array
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` ShadowParcelFile
added a method to reset the prefix index in BasisLibrary and refactored the prefix index handling in BasisLibrary to improve thread safety and
added logging level for the HttpConnection in TestDistributedStatsComponentCardinality . java to enable debugging of the distributed stats component cardinality
added multiple calls to throwIfImmutable ( ) in IntList . java to ensure that immutable values are properly declared as immutable
updated ` onApplicationEvent ` method to include ` @ NotNull ` annotations and improved URI handling in ` GrpcClientBuilder ` to enhance code clarity
refactored package structure and method calls in Graal . java to improve readability and maintainability of the code
do n ' t invalidate key array if it ' s not valid
added platform - specific file handling in GenerateManifestStep . java to ensure proper handling of OS - specific line endings in the manifest file
fix for rfe3531161 : do n ' t invoke null check on nonnull value
added nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry and ThingResource classes to enhance null safety and prevent potential NullPointerExceptions
[ hotfix ] fix checkstyle violation in masterjobcontext
added a condition to initialize the crop box when the page is not found to ensure that the crop box is initialized correctly when the page is selected
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable accessing all apps
refactor FragmentTestUtil to use Robolectric for creating and resuming FragmentActivity instances to improve code maintainability and reduce duplication in activity
rename ` getFileCoordinates ` to ` processFileCoordinates ` and add ` getDecimalCoords ` method in ` FileProcessor ` and ` ShareActivity `
renamed classes ABCASE1 _ 1 , ABCase2 , ABCase1 _ 2 , ABCase3 , and ABCase7 _ 3 to
updated method parameter name from ' num ' to ' value ' in DynamicPropertiesStore . java and added null check for blackhole address in Manager .
refactored the handling of the current RocketChangedEventHandler in OpenRocketViewer . java to improve code readability and maintainability by using
added a new recipe class ChangeDependencyGroupIdAndArtifactId to update Maven dependency groupId and artifactId to enhance dependency management by allowing users to change Maven dependency
updated IndexingJob and SegmentChecker to check if the input path is not an indexable to ensure that the input path is not an indexable
updated address comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use Supplier for replacement paths and improve error handling to enhance code readability and maintainability by reducing duplication
changed the class name from JsonExamples to Examples in JsonExamples . java to improve clarity and consistency in naming conventions
added debug logging statements for entry and output streams in ViewExtractor . java to improve traceability and debugging of entry and output operations
refactor FindsByLinkText class implementation to improve code readability and maintainability
added a new file ` Main . java ` that prints the Java oop entry point to demonstrate the usage of the java oop entry point
[ sip ] fix synchronization issue in sip registrar connection .
removed redundant continue statements in NativeScanner . java to streamline code and improve readability
changed the package of RendererConfigurationTest from ` test ` to ` configuration ` in ` RendererConfigurationTest . java ` to improve organization and clarity of
refactor dependency resolution in AndroidLibraryDescription to use a memoization method to improve code readability and maintainability by centralizing dependency resolution logic
updated the method call from ` remoteContainsResults . stream ( ) . count ( ) ` to ` remoteContainsResults . size ( ) ` to
added charset handling to the metadata collection in ExtractingDocumentLoader . java to ensure correct content encoding is used for document loading
update databaseconfig to use ` ? ` instead of ` ` ? ' '
added a check to return early if the slot is - 1 in PlayerInventory . java to ensure proper handling of non - negative slot values
added a new boolean field ` ignoreTransitiveRepositories ` to ` DefaultMavenExecutionRequest ` and its implementation in ` DefaultMavenExecutionRequest ` to
removed the @ Inject annotation from the backgroundJobManager in ContactsPreferenceActivity . java to streamline the code by eliminating unnecessary dependencies
updated the ` ColorsActivity ` class to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with the latest Android features and
added null check before closing selection in NIOTransport . java to avoid potential NullPointerException when selection is null
added a condition to check if the current index is a string before proceeding with matching matches to ensure proper handling of string lengths in the regexp
updated the @ IntegrationTest annotation to include a value of " server . port = 0 " to ensure the test uses the correct server port configuration
added a new function ` UDFReverse ` to the ` FunctionRegistry ` class and created a new ` UDFReverse ` class to facilitate the
replaced direct calls to ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` in multiple classes to improve code readability and maintain
refactor Tracer class to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to RocksDBStateBackendReaderKeyedStateITCase . java to temporarily disable tests related to RocksDB
updated import statements in XMLChangeLogParserTest . java to use wildcard imports to improve code readability and maintainability
replaced UnsupportedOperationException with synchronized block for buffer clearing in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during split operations
updated forecast minutes , hours , and days in OpenWeatherMapOneCallHandler . java from 0 to 60 , 60 , and 8 to improve forecast
updated test timeouts in AbstractPageOperationTemplateTest . java and modified assertions in AbstractPageOperationTemplateTest . java to improve test reliability and ensure
added logging for multiple remote target handles in RemoteTargetGluer and FloatingHeaderView classes to improve debugging capabilities and manage app fade - in animation
updated the ` parseRerunFile ` method to use ` splitAndThenFlatMap ` and modified the return type of ` parseRerunFile
add livewood , livingwood , livingwood , mana , dark , and dark quarry to creative tab .
updated assertions from ` assertEquals ` to ` assertEquals ` in ` TestRadioButtons . java ` to ensure consistency in assertions by using a more descript
added file size handling in RCFileCat . java and updated related methods in RCFile . java to improve file size management and provide better
refactor clustering and Triangle classes for improved organization to enhance maintainability and readability of the codebase
added multiple checks for MXNet NDArray in JnaUtils . java to ensure that MXNet NDArrays are properly closed
refactor BlobServer class to improve code organization to enhance maintainability and readability of the code
pmd : fix warning in unusedprivatemethodrule
renamed ` lexicalScope ` to ` lexScope ` in multiple files to improve clarity and consistency in variable naming
added a test method ` testAutoStartup ` to ` InboundChannelAdapterParserTests ` to verify the behavior of ` SftpAutoStartup `
added getter and setter methods for child and boundables in Quadtree , AbstractNode , and STRtreeNode classes , and updated constructors accordingly
updated version parsing logic to handle both minor and minor version numbers to ensure proper handling of minor version numbers
added a check for non - empty tags before adding tags to the ActiveItem to ensure that tags are only added when no tags are present
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and updated ` DateTimeFunctions ` to utilize it to
[ hhh - 17100 ] [ stringwrapper ] fix nullpointerexception in stringwrapperusertype
refactor Log4j2ConfiguratorServlet to improve code organization to enhance maintainability and readability of the code
replaced HiveException with a direct return statement in StorageBasedAuthorizationProvider . java to simplify exception handling and improve code readability
updated CGoCompileStep to use String . join for C++ command prefix and added a new test for prebuilt dependencies to improve code readability
added @ Buildable annotation to CustomResource . java to disable the builder package for kubernetes apis
removed the @ Override annotation from the Only class to improve code clarity and maintainability
added timeout settings for HTTP client requests in HttpClientFactory . java to improve connection handling by allowing more time for timeouts
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ target _ node _ parse _ pipeline "
refactor security handling in SeleniumServer . java to improve clarity and maintainability to enhance code readability and maintainability by encapsulating the
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary annotations
refactor username assignment logic to use OwnCloudAccount for better error handling to improve robustness by handling potential exceptions during account retrieval
added BatchStatus import and a test for resuming paused instances in SimpleJobLauncherTests to ensure proper handling of job execution state during paused instances
added null check for cacheConfig before processing parameters to avoid potential NullPointerExceptions when cacheConfig is null
[ grid ] make dockersession public and add delete method to localnode
updated package name handling in CompilationUnitContext to use ` DEFAULT _ PACKAGE ` instead of ` toString ( ) ` to improve code readability and
pdfbox - 4071 : fix bug with non - sequential pdfs and non - sequential pdfs
[ hotfix ] [ test ] fix flaky test testdistributedlanczossolvercli
refactor HttpServerTestBase to improve code organization to enhance maintainability and readability of the test cases
[ hotfix ] [ test ] fix flaky test in portletapplicationmaptest
added unit tests for ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` and ` NestedBeanIgnoreNulls ` classes to ensure
added a list of auto - configuration customizers in RedissonAutoConfiguration . java and created a new interface RedissonAutoConfigurationCustomizer . java to
refactor index calculation in Indicator . java and add a new test class IndicatorTest . java to improve code readability and maintainability by
added new method ` execInContainer ` and ` execInContainerWithUser ` to ` ContainerState ` , ` ExecCreateCmd ` , and
refactor conditional checks for WebSocketByteListener and WebSocketTextListener in NettyWebSocket . java to improve readability and maintainability of the code
added unit tests for the Semgrex pattern and negated attribute in SemgrexTest . java to ensure correct functionality of the Semgrex
added a broadcast intent for the CLEAR _ PULL _ UNREAD activity in HomeFragment . java to ensure that the application clears the
removed conditional check for SDK version in TouchImageView . java to simplify the code for better readability and maintainability
add a flush ( ) bean to the dstu21config to make it easy to destroy it .
camel - 14247 : camel - jbang - do n ' t throw runtimeexception in abstractcamelcontext
added FloatingActionButton and FloatingActionButton functionality to ShareActivity to enhance user experience by allowing easy access to specific image coordinates
added inline parsing functionality to ToDateTokenizer and updated related tests to utilize InlineParslet to enhance date parsing functionality and improve test coverage for
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated error messages in ` ErrorMessages _ sv . java ` and ` XPATHErrorResources _ sv . java ` to use ` toppn
added a check for server address and server is checked before binding operations service connections to ensure that the operation is only binded when the server address is
updated the position instantiation from ` getBeginColumn ( ) ` to ` getBeginLine ( ) ` and ` getEndColumn ( ) ` to
added waitFor method calls in CxxPreprocessAndCompileStep . java and implemented waitFor method in ManagedThread . java to ensure proper resource management and
added a flag ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented a new test for ` PrincipalAttributeRepositoryFetcherTests ` to
fix race condition in mapcontainer . getrealmaxsizechecker ( )
added support for enabled SSL protocols in NettyWebServer and ServerBasicConfig classes to enhance security by enabling SSL protocols based on configuration
replaced AtomicBoolean with AtomicReference in SetOnce . java and added a trySet method in TestSetOnce . java to improve thread safety and ensure proper handling
added a null check for the property before retrieving the field name in QueryDslMongoRepository to avoid potential NullPointerException when the property is null
remove roundrectborder . getborder ( ) from roundrectbordertest
[ java ] do n ' t run node start if there be no cluster configuration
remove selenide integration test that be no longer need
updated countDownLatch and futures initialization to use min instead of cnt and added a check for the length of the sign before proceeding to ensure that the
updated conditional check from ` if ( windows ) ` to ` if ( ! windows ) ` in ` ProcessInformationsPanel . java ` to ensure
refactor MoreCollectors methods for improved clarity and consistency to enhance code readability and maintainability by standardizing method naming conventions
added null checks for orderbook and compression handler in BitmexStreamingExchange and BitmexManualExample classes to ensure proper handling of WebSocket client
added validation checks for latitude , longitude , and lon in GeoPointField . java to ensure proper error handling for invalid geopoint fields
refactor workflow file handling by replacing ` saveDraft ` with ` getWorkflowDrafFileName ` in multiple classes to improve code readability and
refactor ResponderId class implementation to improve code readability and maintainability
updated the ` getTableDocument ` method to accept a boolean parameter ` withDependents ` to enhance flexibility in retrieving table documents based on the ` with
added a check for the number of consecutive uploads without coordinates before calling handleSubmit ( ) in UploadActivity . java to improve user experience by providing
added a new POST endpoint for managing profile data in ProfileResources . java to enhance the handling of profile data in the application
refactor property value handling in JpaMetamodelEntityInformation to use DirectFieldAccessFallbackBeanWrapper for source and target ID attribute extraction to improve
added assertions to bootstrap last DDL timestamps for tables and views in UpgradeIT , ConnectionQueryServicesImpl , and UpgradeUtil classes to
dropwizard : add support for register default jersey exceptionmappers
added a new parameter ` storeFieldAction ` to the ` EntryEditor ` class to ensure that the ` storeFieldAction ` is set to false
updated the ` nativeCreateNSWindow ` method to include a ` ownerPtr ` parameter and modified the way ` nativeWindowPtr ` is retrieved to
updated SQL command to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID in FileContentProvider . java to improve clarity and consistency
add the ability to create a stock tile , and add the ability to use it .
fixed - rbuckets . get ( string , string ) return a string instead of null
do n ' t log generic signature in typeframemodelingvisitor ( # 3470297 )
refactor LauncherBackAnimationController to utilize BackProgressAnimator for improved back animation handling to enhance code readability and maintainability by centralizing
changed the ` _ initialPageNo ` variable from ` final ` to ` _ initialPageNo ` in ` ContentLimitContainer . java ` to
updated bitwise operations in JedisClusterCRC16 and adjusted TOTAL _ OPERATIONS from 10000000 to 100000000 in CRC16Benchmark . java to
added comment parsing logic in FormattedSqlChangeLogParser and created a corresponding test in FormattedSqlChangeLogParserTest to ensure correct parsing of
refactored the initialization of the JarArchiver instance in MavenArchiver and added a method to set the archiver in AbstractJarMojo to
replaced ` HumanReadableException ` with ` BuckUncheckedExecutionException ` and updated exception handling in ` DefaultClassUsageFileReader . java ` to improve error
refactor aggregation logic in TSServiceImpl . java and add multiAggregationTest method in DaemonTest . java to improve code readability and
added support for UNSIGNED _ BYTE and UNSIGNED _ BYTE formats in GwtGL20 . java to ensure compatibility with UNSIGNED _ 
added a new test method ` testDebugInfo ` to ` OutputMemoryTest ` , ` testPrintR ` , and ` testDebugInfo `
replaced ` UnmodifiableClassException ` with ` Throwable ` and added exception handling in ` InlineBytecodeGenerator . java ` to improve error reporting
updated trace class initialization checks and added new methods to track class initialization traces to improve trace reporting and enhance debugging capabilities for class initialization processes
updated parameter name from ` queryLevelTimeoutMs ` to ` queryTimeoutMs ` in ` BaseBrokerRequestHandler . java ` to improve code readability
updated TopicRouteService to use Caffeine cache instead of Google ' s cache to improve cache management and enhance error handling for topic route loading
added a ` readOnly ` parameter to the ` createDataSource ` method in ` MBTilesDataStoreFactory ` and updated the connection pool configuration to
updated INVALID _ SOURCE _ TARGET _ RELEASE regex to include additional characters to improve error reporting accuracy for invalid target release
updated location intent handling in DetailFragment . java to include location information to improve user experience by providing clearer location information for the application
added a null check for ` getInheritedParameterContexts ( ) ` in ` StandardParameterContextDAO . java ` to prevent potential NullPointerException
refactor ClassLoader class implementation to improve code readability and maintainability
added a method to set the origin response header in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure that the response headers are
added a new instance of ProfileSettingDrawerItem to the GpsMainActivity to enhance the functionality of the profile setting drawer
added XML validation support to multiple XML parser classes to ensure proper validation of XML documents in the application context
updated error messages and added a new test method for JavaScript string handling in ExecutingJavascriptTest and FirefoxDriverTestSuite to improve clarity and ensure correct
added a maxRows variable and modified SQL query handling in IoTDBStatement . java to ensure that the query does not exceed the maximum number of
fix ( sqlstream ) : use allactionsareoptimizablefilters instead of iscountoptimizable
added node event handling and mouse event dispatch logic in StandardVizEventManager . java to ensure proper event dispatching based on selection settings
refactor ManyToOneRingBuffer to use a separate zeroBuffer method for better readability to improve code readability and maintainability by centralizing
refactor xorGroup initialization to use a memory object instead of a hardcoded value to improve code readability and maintainability by encaps
removed redundant methods ` getHeight ( ) ` and ` getWidth ( ) ` from ` LCDUIImageMonochromeBitmapSource . java ` to streamline
refactor source path handling in SourcePathResolver to use a new method ` getPathPrivateImpl ` for improved clarity to enhance code readability and maintain
do n ' t encode xml identifier in dstu2
changed the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and updated URI handling in ` WebsocketRoutingFilter `
updated file paths in LLVMPaths . java to use " EXTERNAL _ TEST _ SUITES _ EXECUITES _
added a new method ` getCxxPlatform ` to retrieve the ` CxxPlatform ` from ` BuildTarget ` and ` BuildTargetArg ` to
added imports for ` org . apache . lucene . index . IndexReader ` and ` org . apache . lucene . index . Hits `
updated ConcurrentLinkedStack to handle null exceptions and added new test methods for bubbles in ConcurrentLinkedStackTest to improve error handling and ensure correct behavior
[ java ] add ismatched ( ) and setmatched ( ) methods to BinaryHeapQueueTest , BaseQueueable , and BaseQueue
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerExceptions when mDirectories is not initialized
added a condition to check if the overview state is not enabled in the RecentsView to ensure that the overview state is only enabled when the first
added multiple package - info . java files for various Lucene files in the Lucene package to improve package organization and clarity in the codebase
added a text field to the visible auto leveler in AutoLevelerTopComponent to improve user experience by providing a clear text for the auto level
added optimization callbacks for post - optimized updates in DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler classes to enhance event listener functionality for better
modified the initialization of the Inflater and adjusted the input handling logic in CompressionMode . java to ensure that a dummy byte is set when the compressed length
removed a call to check ( user _ data ) in Shaderc . java to streamline code by eliminating unnecessary checks
added a condition to check if the base is a local meta store in RetryingMetaStoreClient to ensure that retrying does not exceed retry limits
updated exception handling logic in HeliosSoloLogService . java to check for timeout and connection closed exceptions to improve error logging clarity and ensure
refactor Subject class to improve code organization to enhance maintainability and readability of the code
use concurrentreferencehashmap instead of chashmap in abstractserializationservice
updated color distance calculation in HSSFPalette . java and added a test for findSimilar color functionality in TestHSSFPalette . java
refactor multiple request classes to improve code organization and readability to enhance maintainability and readability of the codebase
[ java ] add test for findelementbynumericid ( ) and findelementsbyid ( ) method .
added a flags parameter to the ShadowApplication and ShadowContextImpl classes and updated related methods to include it to enhance the functionality of the receiver registration process
refactor ffmpeg version verification in FFmpegTest to use InvocationOnMock for improved readability to enhance readability and maintainability of the
added a previous input stream parameter to the Ogg and OggInputStream classes to ensure proper resource management and prevent memory leaks
added a new constant RESPONSE _ WAS _ NULL to the AssertionResult class to improve code readability and maintainability by encapsulating
updated condition in DetectionMigrationResource to check for anomalyFailureCount and anomalyWarningCount to ensure that anomaly warnings are
refactor BaseActivity to extend SherlockActivity and update toast handling in DetailActivity to improve code readability and maintainability by encaps
updated the method and request template retrieval in TracingFeignClient . java to use the delegate ' s request template instead of the method
added name validation and improved exception handling in LDAPCertStore . java to enhance robustness by ensuring proper naming and error handling for LDAP names
refactor socket retain logic into a separate method ` retain ` to improve code readability and maintainability by consolidating the retain method
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test method ` performItemClick _ ShouldFireOnItemClickListener ` to
[ hotfix ] [ test ] fix checkstyle violation in checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to remove unused code to streamline the project
added selectedobject and getselectedobject ( ) method to sipcompositeselectorbox
added JUnit ' s @ Isolated annotation to MetaInfConfigurationTest . java to enable the use of Isolated annotation for the FileSystem
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to serverConnector to ensure the server connects with a specific port
added conditional checks for " authorization _ code " and " client _ credentials " grant types in DynamicClientRegistrationEndpoint . java to ensure proper validation of
added CloverInstrumentationFilter to check if a class is a candidate class and updated SplitLogCounters to utilize it to improve the accuracy of
added support for Smartmi Evaporative Humidifier in MiIoDevices . java and updated ReadmeHelper . java to enhance the
refactored the ` plausibleToBreak ` method to use ` CalculationContext ` instead of ` BlockStateInterface ` to improve code readability
changed the access modifier of the setScrollRangeDelta method from package - private to public to allow external access to the method from other classes
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to improve error handling for empty repositories
updated the condition to check for missing values in IntHashSet . java to improve code readability and maintainability
added Serializable interface to RuleAdministratorImpl . java to enable serialization of RuleAdministrator instances
updated ` allowedOrigins ` , ` allowedOrigins ` , and ` allowedTimingOrigins ` to use a set of allowed origin patterns to
updated G3dHudTest to use " g3d / knight . g3dj " instead of " g3d /
added error logging for invalid solidified blocks in Manager . java to improve error handling and provide clearer logging for invalid solidified blocks
hbase - 16464 fix npe when call pinger . gettype ( ) return null
added a method to check if a remote user has access and updated response handling logic to improve code readability and maintainability by encapsulating
replaced the ` writeTo ` method with ` getStubClassBytes ` in ` ClassMirror . java ` and refactored ` StubJar . java
added a TextView for the internal link text in FileDetailSharingFragment to enhance user experience by providing a visual representation of the internal link text
updated the expected string format from " % . 4f " to " % . English " in PredictionTest . java to ensure consistent formatting across
updated the condition in ModelZooTest . java to check if the calendar is not the day of the week to ensure that the test accurately reflects
removed the hideIme method from AllAppsContainerView and updated UI logging in LauncherAllAppsContainerView to improve user experience by
[ java ] configure embedded event storage engine in event handling configuration test
refactor BsdFileStore and UnixNativeDispatcher to use a new method getmntonname0 in BsdNativeDispatcher to
[ issue # 1599 ] add test case for issue # 1599
added support for parameter ` x ` , ` y ` , and ` z ` in ` SpawnCommand . java ` to enhance command functionality and
added MIN _ CONTENT _ DIMEN constant and refactored content area width calculation to improve code readability and maintainability by centralizing content
make test scope final in graalcompilertest . java
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with Windows semantic
added plugin check class names to the upgrade check list in UpgradeCheckRegistry . java and modified the addColumnsToUpgradeTable method in UpgradeCatalog
refactor Environment class to improve code organization to enhance maintainability and readability of the code
added import for LuceneTestCase and annotated RecoveryAfterSoftCommitTest with @ BadApple annotation to address a bug reported in SOLR - 7421
added a check for ` getFileSystemSeparator ( ) ` before calculating the home string in ` CodenameOneImplementation . java ` and removed a warning for
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AU
updated LiquibaseEntityResolver to use CompositeResourceAccessor and modified XMLChangeLogSAXParser to utilize FileSystemResourceAccessor to improve resource management and
added security imports and set disabled algorithms to an empty string in ComHostnameVerifier and JavaxHostnameVerifier to ensure that SSL algorithms are
updated Immutable annotation to include builder and copy = false in AbstractCxxDeps . java and modified CxxLibraryDescription . EMPTY in CxxDeps
renamed ` expectedDirectory ` and ` actualStubDirectory ` to ` actualStubDirectory ` in ` StubJarTest . java ` to improve clarity and
updated the variable name from ` resizeThreshold ` to ` resizeThreshold ` in ` Int2ObjectHashMap . java ` to improve code readability and
updated folder name hint handling to check for empty title and hint settings to improve code readability and maintainability by reducing redundancy
updated client names from " example " to " uaa " in UaaResetPasswordServiceTests . java to ensure consistency in client naming conventions
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to methods and enhance encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , UnsafeBufferPosition , and UnsafeBufferPosition to ensure accurate representation of the isClosed state
refactor MimetypeIconUtil class implementation to improve code readability and maintainability
corrected the spelling of " supportsViewFor " to " supportsViewsFor " across multiple view provider classes to improve code readability and maintain
added a test for negated instance types in UnnecessaryParenthesesTest . java and modified the condition in Unnecessary
added teleport functionality to the Location class to ensure proper handling of location teleporting in the Location class
replaced instances of ` Base64 . encode ` with ` Base64Utils . encodeToUrlSafeString ` in ` TokenKeyEndpoint ` and `
updated import statements in TranslatorManagerHelper . java and added a new Statistics . report method in TranslatorManagerHelper . java to improve code organization
changed the interface ` ContainerAnnotation ` from ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the annotation
added a null check for the result parameter in ObjectIdentityImpl . java to ensure that the result is not null to prevent potential NullPointerExceptions
refactor ` setUpRevampedTweet ` method to include a ` isMuffled ` parameter and update related logic in ` TimeLineCursor
added conditional logic to retrieve the verified text based on the theme settings to ensure the verified text is displayed based on the application ' s theme settings
refactor AbucoinsDigest to use a final instance variable instead of a static variable to improve code readability and maintainability by encaps
camel - 14284 : camel - mongo - add autowire to mongo component to resolve mongo connection .
added a sourceIndex field to the AttributeMapping constructor and updated related classes to utilize it to enable dynamic indexing based on the current source index
hive - 16464 : improve error message when alter table ( sergey shelukhin , review by jbellis )
added UserGroupInformation . isSecurityEnabled ( ) method call to AuthParams . java to enable security checks in the application
refactor ConnectivityReceiver , TerminalKeyListener , and EastAsianWidth classes to improve code organization and maintainability
do n ' t escape the contact email in geoserverhomepage when the contact email be null
[ flink - 17424 ] [ module ] fix modulemanagerimpl . enrichreflectionswithsubsystems ( ) to work with the
updated mmfStream to use a variable for the number of features instead of a fixed length to improve code readability and maintainability by using a
do n ' t use ` ` < math ' ' instead of ` ` < math ' '
[ hotfix ] [ kafka ] do n ' t log offset info if debug logging be enable .
updated playback action from ACTION _ SET _ PLAYBACK _ SPEED to PlaybackStateCompat in MediaSessionConnector . java to ensure compatibility with
refactored launch event handling in various classes to improve clarity and maintainability to enhance code readability and ensure proper handling of launch stages and delay
tika - 552 : fix the issue that the ascii name length be equal to the ascii name length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic on JDK
refactor lock file creation into a separate method ` createLockFile ( ) ` to improve code readability and maintainability by encapsulating
updated version check from version _ 5 _ 3 to version _ 5 _ 3 _ 1 in UpdateUtils . java to include sync interval and favorite notifications
added a check to return null if the user is the FEDERATION _ USER in AuthenticationManager . java to ensure proper handling of usernames
do n ' t check if the value be an instance of truffleobject in executemethodnode .
replaced ` Collectors . toList ( ) ` with ` Collectors . toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest `
logbackvalve : do n ' t throw error when access event do n ' t exist
refactor Collection , Map , and Map classes to improve code organization and maintainability
removed the import of ` org . apache . lucene . util . Version ` from ` CreateIndexTask . java ` to clean up the code and
added schema handling and schema handling in MissingPrimaryKeyChangeGenerator . java to ensure compatibility with Oracle and Oracle databases in the database
added MetastoreException to execute and repair methods in MsckOperation . java and updated exception handling in MSCKRepair . java to improve error
[ hotfix ] [ kafka ] make kafkacommitter retryable .
add receipthandleprocessor to forwardmessagetodlqactivity to ensure that the correct receipt handle be remove .
added a new method ` withServices ` to ` DockerComposeContainer ` and modified the ` DockerComposeContainer ` class to handle empty DockerComposeContainer
replaced direct iteration over entrySet ( ) with a copySet ( ) method in Export . java and StructContextDecorator . java to improve code readability
replaced htmlcleaner with exception . printStackTrace ( ) in FeedParser . java to improve error handling and streamline XML processing
updated conditional check to use numCustomPages ( ) instead of mLauncher . getAppsCustomizePagedView . DISABLE _ ALL _
change the data type of several fields from int to double in MeterRealtimeBodyDataDTO . java to ensure consistency in data type handling
added a new file ` bug4150029 . java ` that extends ` JApplet ` to ensure that the BackSpace keyboard button does not
added ` isSparkConfigUpdated ` and ` setSparkConfigUpdated ` methods to ` HiveConf ` , ` SparkClient ` , and
added ` getLongPressIndicator ` method to ` AppIcon ` , ` AppIconMenuItem ` , ` Launchable ` , and ` Launchable `
added checks for empty polys in WKBWriter and refactored test methods in WKBWriterTest to improve handling of empty polygons and
refactor NativeLibraryMergeEnhancer and AbstractUnflavoredBuildTarget to use an interner for unflavored build targets to improve
added a new file ` MultiplyByMaxInt . java ` containing a class ` MultiplyByMaxInt ` with a method to test the
added logic to enable the drawer indicator for the current file in OCFileListFragment to improve user experience by ensuring the drawer indicator is enabled when
removed unused imports from TestRAMDirectory . java to streamline code by eliminating unnecessary dependencies
replaced FixedBitSet with BitSet in Automaton and Operations classes to simplify the code and improve readability by using a more descriptive variable name
[ DMN ] add no _ expression _ for _ name _ on _ node to error message
replaced ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( DC . class ) ` in multiple test files to improve
added a duration variable to the console message in AbstractController . java to improve readability and maintainability of the console output
added package access check for the base class name in OpenMBeanAttributeInfoSupport . java to ensure proper package access checks for the base class name
[ hotfix ] [ table - planner ] fix readresponseresolver constructor .
added a calculation for freeSize in StoreDirect . java to correct the calculation of freeSize to ensure freeSize is correctly calculated for better memory management
modified the ` areTouchesDisabled ` method to accept a ` MotionEventEvent ` parameter and added a new method ` areTouchesDisabledTillLastF
updated SslContextFactory instances from SslContextFactory to SslContextFactory . Server in multiple files to ensure compatibility with the latest SSL context
removed the PrivilegedSocket class from the PG _ Stream class to streamline the code by eliminating unnecessary privilege management
refactor InputTest class for improved readability to enhance maintainability and readability of the code
updated DepthController and AbsSwipeUpHandler to include a QuickstepLauncher parameter and adjusted animations accordingly to enhance user experience by allowing users to pause
added null check for curLatLng before adding it to NearbyMapFragment . java to prevent potential NullPointerException when curLatLng is null
updated the ` removeSecret ` method to use ` clientDetailsService . retrieve ` instead of ` client ` in ` ClientAdminEndpoints ` to improve
updated SQL query parsing to use ` @ BeforeEach ` instead of ` @ BeforeAll ` in ` SqlSourceBuilderTest . java ` to improve
( chore ) camel - activemq : fix test failure in activemqmessageconsumer
added unit tests for handling unknown key exceptions in SlidingGanttCategoryDataset to ensure proper handling of unknown key scenarios in SlidingG
updated filterConditions to return an empty list instead of an empty list to improve robustness by preventing potential NullPointerExceptions
[ jme3 ] add control dir and light to light control .
added @ SuppressWarnings ( " UnusedAssignment " ) annotations and modified stack handling logic in StdErrLog . java to improve code readability and
updated HttpSessionEventPublisher to utilize ApplicationContext for event publishing to ensure proper context validation and prevent potential NullPointerExceptions
do n ' t throw exception if create cq statement have change from v0 . 14
[ hotfix ] [ test ] fix typo in flinkiotdbsink javadoc
add a counter for custom simplified node in the canonicalizer phase to improve code readability and maintainability by reducing duplication
updated the method call from ` null ` to ` context ` in ` ActivityListAdapter . java ` to ensure the correct file icon is used for
updated indexOrConstraintName assignment to use schema name instead of schema name to improve clarity and consistency in naming conventions
added DateTime formatting for time and timestamp fields in BigQueryTableRowIterator and corresponding tests in BigQueryUtilTest to ensure accurate representation of timestamps
added ` findViewWithTag ` method to ` ShadowView ` , ` ShadowViewGroup ` , and corresponding tests in ` ViewGroupTest ` to
replaced ` ( String ) ` with ` < String > ` for loops across multiple classes to enhance type safety and avoid potential ClassCastExceptions
updated import statements in IndexToolForDeleteBeforeRebuildIT , IndexToolForDeleteBeforeRebuildIT , and MetaDataClient classes to improve code
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated method annotation handling in SpringBootDocBuildTemplate to enhance the
do n ' t use classpathutils for jar file in resourcefeature
updated CUDA _ R _ 32I and CUDA _ C _ 64I values in cuda . java to ensure proper handling of
refactor ResourceLoader to use FileFilter instead of File for resource handling to improve code readability and maintainability by encapsulating resource loading logic
refactored the getAttachedFace method to use SimpleAttachableMaterialData instead of RedstoneTorch to improve compatibility with SimpleAttachable
added a case for VARBINARY in RelToStageConverter . java to handle VARBINARY case in RelToStageConverter . java to improve
removed unused import of DateHelper in NoteAdapter . java to streamline code by eliminating unnecessary dependencies
added error handling for backup load failures in the backup profile to improve user feedback by providing feedback when a backup fails
changed the position of the eview1 element from ABSOLUTE to RELATIVE in EuclidianSimplePanelW . java
refactor file deletion logic in ShadowParcelFileDescriptor . java to improve code readability and maintainability
replaced ` poll ( ) ` with ` removeFirst ( ) ` and ` addFirst ( ) ` in ` StackBasedSecurityContextHolderStrategy . java `
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to improve clarity and consistency in rule naming
added unit tests for XorNeutral and XorNeutral references in IntegerEqualsCanonicalizerTest and modified IntegerEqualsNode
removed the static final Type STRING _ ARRAY constant from TypeFactory . java to streamline the code and improve maintainability
added hideIme ( ) method to AllAppsContainerView and updated logging methods in LauncherAllAppsContainerView , LauncherAll
fix blockstatecontainer . setbits ( int ) to force bit density to fix network issue .
updated assertions in TimelineMetricCacheSizingTest . java and modified cache management in TimelineMetricCacheTest . java to improve test clarity and
add the ability to calculate the maximum texture size in the player usage snooper .
[ java ] fix typo in trystoplogrecording ( )
added a conditional check to reset startPosn when isInTransform is true to ensure startPosn is reset when isInTransform is true
added a ` _ skipStarTree ` flag to the ` AggregationGroupByOrderByPlanNode ` and updated related methods to utilize it to
added a lockNearbyView variable and modified the refreshView method to check if the nearby places are refreshed to improve user experience by preventing unnecessary
make maptransformer . of ( ) and maptransformer . inverse ( ) public
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added a new method ` getLoadedLauncherWidgetSpanInfo ` to the ` LauncherPreviewRenderer ` and modified ` PreviewSurfaceRenderer ` to
replaced ` ChangeEvent ` with ` EventObject ` in ` StageSelector . java ` and ` StageAction . java ` to improve event handling by
added calls to ` Robolectric ` and ` ShadowBinder ` classes with methods to retrieve and reset the calling UID in ` ShadowBinder `
updated the ` ExpectationFailure ` class to use ` Objects ` instead of ` AutoValue ` to improve clarity and maintainability of the code
BitcoinSerializer : remove warn log when no support for deserializing message
refactor calculations for ` newW ` and ` newH ` in ` ImageReplacedElement . java ` to improve code readability and maintain
added handling for &# 10 in MarkdownNodeRenderer , MarkdownWriter , and SpecMarkdownRenderer classes to ensure proper handling of &# 10 characters in
refactor password handling in SharePasswordDialogFragment to improve code readability and maintainability by encapsulating password setting logic
refactor IoUtil to use a new MappingMethods class for handling FileChannelImpl addresses to improve code readability and maintainability by encapsulating
changed access modifiers of several methods from public to non - public in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to
added keytab option descriptions to LlapOptionsProcessor . java to enhance user configuration options for keytab functionality
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation functionality to the ` ExtractionModelFrame `
added synchronization and workspace loading checks in LauncherModel . java to ensure proper synchronization and error handling during workspace loading
changed the ` data ` variable to be ` final ` and modified the ` isFinished ` field to be ` final ` to ensure immutability
updated ` IssueInterface ` and ` ValidationReport ` classes to include ` messageType ` and ` checkValid ` parameters to enhance message validation functionality and
added a method to safe the provider name and updated exception handling in RSAClientKeyExchange . java to improve code readability and maintainability by central
renamed ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to improve clarity and consistency in naming conventions
change log level from WARNING to OFF in CCJSqlParserUtil . java from WARNING to OFF to allow for more flexible logging behavior
removed a conditional check for ` i ` in ` AggregateLifeCycle . java ` to streamline output formatting for better readability
changed the visibility of BITMAP _ HEIGHT and WIDTH from private to public to allow external access to BITMAP _ HEIGHT and
removed the @ Ignore annotation from CovariantOverrideTest . java to clean up the test code and improve readability
refactor curly method to use Qtype instead of a hardcoded value to improve code readability and maintainability by encapsulating
camel - 14284 : add a method to load route definition from a node instead of the root node .
added space minimum and maximum values to the X - axis in ScatterChart . java to ensure that the X - axis coordinates are consistent with the
corrected the spelling of " as INTERVAL " to " as INTERVAL " in ExpressionStringBuilder . java to improve code readability and maintain
added a method ` shouldPreserveDataStateOnReapply ` to ` SplitScreenSelectState ` , ` RecentsView ` , and ` State
added a check for the " UTF8 " property in CheckEncodingPropertiesFile . java to ensure proper handling of UTF - 8 encoding keys
updated TestReproduceMessage and LuceneTestCase to use @ SeedDecorators annotation and added random value logging in LuceneTestCase to improve test reliability
added a UI event for long - pressed AllApps item in StatsLogManager and updated ItemLongClickListener to utilize it to improve user interaction
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null log
added a condition to check if the sector preset is null and updated the condition to include the showSectorLandInfo flag to ensure that the sector
updated type casting to use generics in multiple Java files to ensure type safety and avoid potential ClassCastExceptions
refactor Enum class to improve code organization to enhance maintainability and readability of the code
updated the ` buildNearbyRandom ` method to accept a boolean parameter and added validation checks for the ` randomSelection ` parameter to enhance flexibility in
[ net . minestom . server . utils . cache . cache ] remove temporarycache from temporarycache
removed the private WebMarkupContainer variable and updated its visibility logic in NewLayerPage . java to improve code readability and maintainability
set the ` availability _ availability ` variable to ` Availability . UNAVAILABLE ` to ensure proper initialization of the ` Availability _ availability ` variable
updated ` FetchInvDataMsgHandler ` , ` PeerConnection ` , ` PbftCommitMessage ` , and ` PbftCommitMessage
update gapic - generator - java version to 2.1 . 0 and update gax - java version
updated the ` _ freeSpaceReclaimDisabled ` variable from boolean to int and modified the ` _ freeSpaceReclaimQ ` method to accept
changed access modifiers of ` KDC _ OPT _ REXIABLE ` and ` KDC _ OPT _ FORWARDABLE ` from
refactor JsonWriter initialization to set writer to null to improve code clarity and ensure proper initialization of the writer object
updated variable names for consistency and clarity in ProfilePager . java to improve code readability and maintainability
changed the method name from ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to improve clarity and consistency in the
added a method ` valueFromClassConstant ` to retrieve object values from class constants to ensure proper handling of object value constant values in the configuration
added logging for initialization failures in KafkaService . java to improve error handling and logging for service initialization failures
updated the ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` set to use ` ImmutableSet . of ( " usr / share /
camel - 14284 : camel - messagebus should use ` ` default - output ' ' instead of ` ` default - channel ' '
added handling for the " keywords " field in HTMLDocument and created a test for indexing in TestDemo to ensure that the indexing functionality works correctly
updated SDK _ INT check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to include a conditional statement to improve code readability and maintainability
replaced ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` getClass ( ) ` in ` CorrespondenceSubclassToFactoryCall `
refactor Builder class to improve code organization to enhance maintainability and readability of the code
[ isbn2bibtex ] update isbn to use ebook . de / isbn2bibtex
fix race condition in polyglot context . setkeepalivetime ( )
added null check for the text before dispatching data change events to avoid potential NullPointerExceptions when the text is null
use rnnutils instead of simplematrix . getparamstovector ( ) .
trim whitespace from the line in SuffixURLFilter . java to ensure that the line is trimmed before processing
added a condition to check if the player is in the god mode before proceeding to avoid unnecessary processing when the player is in god mode
do n ' t register or unregister popup if flag be set to false
updated constructor parameters from ' true ' to ' maximumSize ' in LinkedHashMapCache and BoundedLinkedHashMap constructors to improve code clarity and maintainability
removed redundant calls to ` _ channel . close ( ) ` in ` ChannelEndPoint . java ` to improve code readability and maintainability
added null checks for keyIndex in FixAcidKeyIndex and updated related classes to improve robustness by preventing potential NullPointerExceptions
added Locale import and modified exception handling in DirectUpdateHandler2 . java to ensure consistent error reporting across different locales
add storecheckguard input type , fix check condition .
do n ' t use jsrentryblock . getsuccessor ( ) . startbci ( ) in bciblockmapping .
added a new method ` getClassificationDisagreement ` in ` AbstractCloud ` , ` Cloud ` , and ` ViewFilter ` classes to
replaced ` BuildTarget . copyOf ` with ` BuildTarget ` in multiple files to improve code readability and maintainability by reducing redundancy
refactor SqlRunner class to improve code organization to enhance maintainability and readability of the code
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorage
replaced ` knownApis ` with ` knownSdks ` in ` DefaultSdkProvider ` and updated related methods in ` RobolectricTestRunner
use confidenceprogressindicator instead of progressindicator in createofferview
updated the USER _ AGENT header type from " Cling / " to " UMS / " in multiple files to ensure compatibility with the new
add a force iterate to the tilebuilder and blockindex , so that it do n ' t fail .
add view _ type _ message to the chatfundingchatadapter . getitemviewtype ( ) method
changed memoryEncodeUTF16 method from memEncodeUTF16 to memEncodeASCII in LinuxLibrary and MacOSXLibraryDL classes to ensure consistent encoding
updated regex pattern in EnglishGrammaticalRelations . java to ensure correct matching of target values
updated the ` insert ` method to use ` writePackEntry ( ) ` instead of ` canvas ` in ` TexturePacker . java ` to
refactored the ` getVisitors ( ) ` method in ` RefactorModule ` to use a new ` apply ` method to improve code
added methods ` getChildByName ` and ` getChildByNameRecursive ` to the ` Xml ` class to enhance functionality for retrieving child elements in XML processing
set the content - charset header to " UTF - 8 " in HttpSolrServer . java and BasicHttpSolrServerTest . java to ensure proper
added ` @ SystemUiControllerFlags ` annotation and modified UI state handling in multiple classes to improve code clarity and maintainability by centralizing UI state
removed the private ClientConfigurationService field from IntrospectingTokenService to clean up the code and improve maintainability
updated error message formatting in HiveRecordSet . java to include offset and length information to improve clarity of error reporting for better debugging and debugging
removed the private byte array ownerId from NodeEntry . java to clean up the code and improve readability
corrected the spelling of " BackupSnapshotAferTakingSnapshot " to " BackupSnapshotAfterTakingSnapshot " in multiple files
added score calculation for textEndPos in the merge method to ensure that textEndPos does not exceed score boundaries
removed the private Digester field from Md4PasswordEncoder . java to clean up the code and improve readability
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure that maximumUnimprovedStep
added a check for empty editors in EditGcodeFile . java to ensure that only active editors are processed
refactor verify method calls in BDDMockito and add new test cases in BDDMockitoTest to improve code readability and maintainability
replaced ` Thread . currentThread ( ) . getContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` to ensure compatibility with the
updated ` sayHi2 ` method to handle ` CodeFirstPojoClientIntf ` and modified ` sayHi2 ` method to return ` C
add log for test log in abstractsplitrainprotectiontest .
added null check for logoutConfigurer before adding it to the DefaultLogoutPageGeneratingFilter in DefaultLoginPageConfigurer and ServerHttpSecurity to prevent potential NullPointer
[giac ] use degree ( 0 ) instead of degree ( 0 ) if degree = = 0 )
added logging functionality to ` DockerComposeContainer ` and created a new test class ` DockerComposeLogConsumerTest ` to enhance the handling of log consumers
updated the parameter type of the testMapping method from ` Class < ? > ` to ` Class < ? > ` to improve code readability and
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a way to retrieve the supplier from a supplier
replaced a break statement with a return statement in ConsoleActivity . java to improve code readability and maintainability
camel - 16284 : fix text content type issue in camel - Vertx
added ` pathWithPlatformSeparators ` method to ` MorePaths ` and modified arguments in ` CopyStep ` to improve path handling for Windows and
added null check for authorizationContext . getParams ( ) before processing parameters to avoid potential NullPointerException when params are not provided
refactor ` load ` method to use ` throwExceptionIfFail ( ) ` instead of ` loadLibraryOnlyIfPresent ( ) ` to improve
updated SDK version from " 4611349 " to " 4514284 " and added tests for the isStopped method in ShadowTextTo
queuetransactionlog : add a new class TransactionLogKey to facilitate the retrieval of transaction log items by name
added a boolean field ` enableSqlWithoutProfile ` to ` JdbcEnvironmentProperties ` and updated related methods in ` JdbcEnvironmentProperties ` and ` Jdbc
added a try - finally block around the write method call in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
modloading stage : use eventgenerator . fromfunction instead of supplier
updated date formatting from date to calendar in DateUtils . java and added a test in FontParsersTest . java to ensure correct formatting of date
updated the loadValue method to include a trace depth parameter in CachedThreadStatesGaugeSet and modified thread info retrieval in ThreadStatesGaugeSet to enhance
added a new method ` prevTlogOnPrecommit ` to ` UpdateLog ` and modified sleep duration in ` LeaderTragicEventTest
update FastAsyncWorldEdit - P2 - V6 from " FastAsyncWorldEdit - P2 - V6 / " to " FastAsync
refactor directory creation logic in SegmentGeneratorConfig . java to ensure proper directory creation and prevent potential NullPointerExceptions
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored vector calculations in ` TriangulationHelper ` to
updated the ` find ` method to use ` IdentityZoneHolder ` instead of ` IdentityZoneId ` to ensure the correct identity zone ID is retrieved
refactor SpanCollector class to improve code organization to enhance maintainability and readability of the code
added a null check for SESSION _ MANAGER . getCurrSession ( ) in AuthorizationFilter . java to prevent potential NullPointerExceptions during session
refactor TransactionIsolationLevel class implementation to improve code readability and maintainability
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController . java to improve code readability
added a method to set the thread name to " Forwarding to " " to " forwarding to " slot . getRemoteURL ( ) . "
refactor CookieManager class to improve code organization to enhance maintainability and readability of the code
refactor the return statement in LauncherExtension . java to simplify the code and improve readability
added a new OverviewToAllAppsTouchController to the list to enhance the functionality of the app ' s touch controller
renamed the method ` scaleHotseatWithWorkspace ` to ` getWorkspaceScaleAndTranslation ` and updated related logic in ` LauncherStateTransitionAnimation
updated the condition for checking JUnitRule in DefaultStackTraceCleaner . java and added a new test case in StackTraceFilterTest . java to ensure
replaced instances of ` hasArray ( ) ` with ` isDirect ( ) ` in ` MappedResizeableBuffer . java ` to streamline
added a private BalanceListener variable and updated walletService ' s addBalanceListener method to ensure the balance listener is only added when necessary
updated color conversion logic in RealisticRenderer . java to handle different edge modes to ensure proper color conversion based on different edge modes
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and removed unnecessary calls to LogFactory . getLog ( ) to improve robustness by preventing
added import for PatternUtil and modified the pattern checking method in Gl200ProtocolDecoder . java to ensure proper pattern validation for the Gl200 protocol
added a last playback time check to the FullDetailsActivity to ensure that the last playback time reflects the current time of the episode
added MWE _ PHRASAL constant and refactored SpanishXMLTreeReader to utilize this constant to improve code readability and maintain
added a conditional check to clear the language and iso settings in InstallItem . java to ensure that the item is cleared only when the first value is
updated the implementation of the ` overrideScheme ` variable in ` ReactiveLoadBalancerClientFilter ` and added a corresponding test in ` ReactiveLoadBalancerClientFilterTests
[ java ] fix typo in batchdispatchrequest initialization .
[ hotfix ] [ runtime ] fix checkstyle violation in nativeimagedebuginfoprovider
refactor Correspondence instantiation in ShadowBackupManagerTest to use Correspondence . from for better readability to improve code maintainability and read
corrected the spelling of " isNonUS " to " isNonEN " in JRELocaleProviderAdapter . java and LocaleDataMeta
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify the code and improve readability
add a new file for the MinecraftForgeClient class to implement texture binding functionality for ITextureProvider to enhance the client ' s ability to render
added a return statement in TxCacheDB . java to ensure proper handling of transaction execution
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal .
refactor FastDictionary class to improve performance to enhance performance and maintainability of the code
make sure to close the connection if it be close . close the session . status _ closed .
updated FlightEvent instances from 1200 , 1200 , 1200 , 1200 , 1200 , 1200 to 43 , 1 , 1 ,
updated import statements in TextSource and ByteKey classes to use org . apache . protobuf . ByteString instead of com . google . protobuf . ByteString to
updated the method call from ` target ` to ` newElement ` in ` SaajStaxWriter . java ` to ensure the correct namespace declaration
updated ` profilePictureLink ` and ` getStudentProfilePictureLink ` methods to use ` instructor . courseId ` instead of ` getProfile
added a shortRule to the DefaultPasswordValidator class to manage the default password rules based on the length of the password to ensure proper validation of password
add a new command that capture screenshot to the server .
removed the JUnit Test annotation from ProxyClassSerializationTest . java to streamline test execution by eliminating unnecessary dependencies
added format attribute for thumbnail dimensions in DLNAMediaInfo . java to ensure correct format is applied for thumbnail dimensions
[ gr - 14135 ] remove redundant canonicalization of speculativeguardmovementphase
added a condition to check for the alias of AUTHENTICATION _ MANAGER in AuthenticationManagerBeanDefinitionParser to ensure that multiple authentication managers are
added handling for PortSetHostPort in ForwardedRequestCustomizer and updated test cases in ForwardedRequestCustomizerTest to ensure that the forwarded server is
added a call to setLength ( 0 ) in ConsoleReader . java to ensure that the output stream is properly closed
changed access modifiers of ` allowedRoles ` , ` disallowedRoles ` , and ` disallowedRoles ` lists from private to protected to allow subclasses
update OpenIDE - Module - Specification version from 1.11 . 0 to 1.11 . 0 and update version base in manifest . mf
hbase - 16464 add default value for hbase . server . netty . tls . wrapsize to enable the use of hbase . server . netty
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use JUnit ' s Assert class and add new test cases for tokenization to improve test coverage and ensure correct
updated the protocol binding handling in OpenSamlAuthenticationRequestFactory to use a configurable protocol binding to improve flexibility in handling SAML authentication requests
refactor transaction handling in DepthController to use AttachedSurfaceControl for improved clarity to enhance code readability and maintainability by centralizing transaction
update version check from " - SNAPSHOT " to " - SNAPSHOT " in AsciidoctorConventions . java to ensure compatibility with the
replaced ` WRITE ` action from ` WRITE ` to ` CREATE ` in ` AccessController . java ` to ensure consistency in action usage across
updated subList size from 0 to 0 in TsFileManagement . java and modified measurementSchemas in MergeTaskTest . java to improve performance and
camel - 14284 : fixed file input stream not be convert to file
added login method to DefaultShardManager and implemented login method in DefaultShardManagerBuilder to ensure proper login handling for ShardManager instances
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to ensure consistency in the
added a conditional check for marked responses before processing the response completion to ensure that the response is only terminated if the completion is marked before proceeding
updated the condition in FeedbackResponseCommentsLogic to check if the student is a user student to ensure that user comments are only processed when
added security checks for linked profile and platform checks in BMPImageReader . java to ensure compatibility with Windows - specific profile handling
updated the ` setSimpleCuboid ` method calls to use ` ex ` and ` ex ` instead of ` ex ` and ` ex `
added a notification message for PMD status in PMDOpenTool . java and modified actionPerformed method to include a Runnable to improve user experience by providing
refactor grid presenter initialization to use a dedicated method for setting sizes to improve code readability and maintainability by reducing duplication
updated return statements in ContributionsListFragment . java to return true instead of false to ensure correct behavior of the ContributionsListFragment
added a test skip range test for SELECT DISTINCT prefix1 DESC LIMIT 2 in DistinctPrefixFilterIT . java and updated
added a new test method ` testAcrobatCheckBoxGroupProperties ` in ` PDButtonTest . java ` to verify the functionality of
added a method ` getFileLastModified ( String file ) ` to retrieve the last modified timestamp of a file to enhance functionality by allowing users to access the
added a check for the " metaTable " property in the HiveIcebergStorageHandler to ensure that the file format is valid before proceeding
add a popup for currency other than the country default currency
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching specific exceptions
added a boolean variable ` mStartedEnterAnimation ` and modified item range notification logic in ` IconRecentsView . java ` to improve animation handling
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the active key ID in the application
updated method names from " send text mail " to " sendAttachmentMessageActionDescription " in SendMailActions . java to improve clarity and consistency in
changed the visibility of the isActive variable from non - volatile to volatile to ensure thread safety for the isActive variable
updated method name from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext ` and ` BrokerRequestTo
[ geoconic ] fix cast to stringlhs to stringlhs
added a condition to check if the app name is the ownCloud app in DisplayUtils . java to ensure that the app name does not exceed the
added security permission checks and updated directory creation logic in MasterFileSystem . java to ensure correct permissions are set based on the Kerberos authentication status
replaced ` httpServletRequest . getLocale ( ) ` with ` httpServletResponse . getLocale ( ) ` in ` JakartaServletWebExchange ` and ` Javax
refactor Instant class implementation to improve code readability and maintainability
updated state format handling in CollectionsHandler , ExternalCollectionsTest , and AbstractFullDistribZkTestBase to use String instead of int to improve
refactor ticket type handling in CentralAuthenticationServiceImpl and AbstractTicket classes to improve code readability and maintainability
pdicc : add check for illegalargumentexception in pdiccbased
corrected a typo in the conditional statement in AbstractFileResourceSet . java to improve code readability and maintainability
[ maven - plugin ] add support for pathtranslator in plugin parameter expression
added CoderRegistry and modified ByteStringCoderTest to include CoderFactory for better code organization to improve code organization and maintainability by encap
updated JpaQueryParsingToken initialization to include a false parameter and added a new test for querying signed numeric literals to ensure proper handling of
updated the ` generateLaunchLugFromRASAeroRailGuide ` method to include an ` parentLength ` parameter and adjusted instance separation calculations to
removed the getNonceFactory method from BitmexStreamingExchange to streamline the code by eliminating unnecessary method implementation
updated logging statements in MailBinding . java to include additional context for charset and content type information to improve log readability and maintainability of the log
[ java ] rename setup and teardown methods in DriverConductorTest . java to improve clarity and consistency in naming conventions
changed the default value of ` initializeLoadedClasses ` from true to false in ` ScanSpec . java ` to disable the initialization of loaded classes
added a call to grabFocus ( ) in FullTextSearchPanel . java to ensure focus is displayed when the search field is selected
fix a bug in tlsconnectionlogging . setnioparams ( ) so that it do n ' t throw exception .
updated the assertion from ` assertEquals ` to ` assertEquals ` in ` StatementTest . java ` to correct the expected value for random all tests
updated assertions in TestSolrConfigHandler to use testServerBaseUrl instead of testServerBaseUrl to improve clarity of error messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests . java ` to improve test
updated FilterResourcesStep . java to use ` fromDensity ` instead of ` density ` for better clarity to improve code readability and maintainability by
added a new ` buttonUIID ` variable and updated component prefix handling in ` ComponentGroup . java ` to improve code readability and maintainability
removed unnecessary DisplayMetrics import and simplified rotation condition in RecentsAnimationDeviceState . java to simplify code and improve readability by eliminating unnecessary dependencies
added two new classes ` TestCloneArrayWithDifferentLengthConstness ` and ` TestArrayCopyWithLargeObjectAlignment ` and ` TestArrayCopy
added import for LuceneTestCase . AwaitsFix and annotated ReplicationFactorTest . java with @ AwaitsFix annotation to mark the test as
fixed - redissonexecutorservice . schedule ( ) should return null if nextstartdate be null .
refactor credentials checking logic in FileDownloader and FileUploader classes to improve code readability and maintainability
added null check for the scanner before closing it in Compactor . java to prevent potential NullPointerException when the scanner is null
[ java ] use doubleValue ( ) instead of get ( ) in netmetrics # get ( )
added claims for the " nonce " token in TokenMvcMockTests to ensure the correct nonce claims are retrieved for the token
refactor multiple chart editor classes to improve code organization to enhance maintainability and readability of the codebase
added width and height settings for formLayeredPane in Form . java to ensure proper layout behavior for better user experience
updated import statements and added maxY method in BrowserContentPane . java to improve code readability and maintainability by centralizing the maxY method
modified the ` openDatabase ` method to return a boolean indicating whether the database is connected to ensure proper resource management and prevent potential memory leaks
updated DOCKER _ COMMAND to use Platform . DOCKER _ COMMAND instead of a hardcoded string to ensure compatibility with the
added a null check for the isartor parameter in the initializeParameters method to ensure robustness by preventing potential NullPointerExceptions
added a color parameter to the drawLeaveBehind method in TaskbarView , CellLayout , and PreviewBackground classes to enhance the visual
add a method to check if the plugin do not work properly with android Studio
http : / / issues . apache . org / jira / browse / amq - 4071 - fix npe when identityproxy table name be
added modulePersistEnable and modulePersistDisable fields to StartArgs . java to enable and disable module persistence in the application
updated argument validation in GeminiMarketDataService . java to allow for greater than one argument to improve flexibility in argument handling and provide clearer context for
replace HashSet with LinkedHashSet for questions in VerifyPasswordResetRequestAction . java to ensure consistent ordering of questions in the request context
add test case to verify that the user have a role .
added jsp exclusions for various jsp files in AuthCheckFilter . java to enhance the flexibility of jsp exclusions in the authentication filter
refactor runnable handling by introducing a boolean flag and modifying the queue logic to improve thread management and ensure proper sorting of posted runnables
updated method signatures in AbstractCommandRunner , AuditCommandRunner , CommandRunner , and CommandRunner from String [ ] to String . . . args to
refactor character reading logic in XMLParser . java to improve readability and maintainability of the code
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to verify that text appears on
added pivot position settings for the arrow in DeepShortcutsContainer . java to ensure proper alignment based on the current state of the arrow
do n ' t print stack trace in case of interrupted exception
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter to enhance functionality by allowing dynamic refreshing of the thumbnail based on gesture
pdfbox - 2852 : use class name instead of org . apache . pdfbox . ExtractTTFFonts . class . getName ( )
updated the InternetAddress instantiation to include a boolean parameter and added validation for the hostname to ensure that the hostname is valid and improve error handling for invalid
removed the ` this ` parameter from multiple instances of ` AuthenticatorActivity ` and ` OperationService ` in multiple activities to simplify the code and improve
refactor DocId handling in SizeBasedDocIdIterator and SizeBasedDocIdSet classes to improve clarity and consistency to enhance code readability and
added new method ` promptToOpenFile ` to ` FileDialoger ` and refactored the ` promptToOpenFile ` method to accept a
updated widget span values and modified page count updates in AppsCustomizePagedView . java and AppsCustomizeTabHost . java to
refactor FlightConfiguration to improve component transformation logic to enhance code readability and maintainability by reducing duplication
test : rename seda to direct in micrometer message history test
updated DateTimeFormatter to use Locale . ROOT to ensure consistent date formatting across different locales
dspaceobjectconverter : add permission filter to filter all metadata in the same namespace ( dspaceobjectconverter )
added a test method ` testMissingRequired ` to ` TestStarTreeConfig . java ` to ensure that the ` setDimensionNames ` method correctly
camel - 14284 : camel - spring - builder : add support for dynamic recipient list in camel - spring
refactor InlineLayoutBox and HoverListener to improve layout rewriting logic to enhance code readability and maintainability by reducing duplication
refactor AuthenticatorActivity to utilize OperationsService instead of DetectAuthenticationMethodOperation to improve code readability and maintainability by encapsulating
