http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 , set remotehost
refactor header handling in BasicAuthPlugin to use a dedicated method to improve code readability and maintainability by reducing duplication
updated the method call from ` RecordDescriptor . msgLengthOffset ` to ` getIntVolatile ` in ` ManyToOneRingBuffer . java ` to
cloudstack - 10297 : fix overcommit ratio calculation when vm detail be not set
added a ` flags ` field and its getter method in ` ShadowPaint ` and updated tests in ` PaintTest ` and ` PaintTest ` to
updated the title from " Set / clear / clear / append / rename fields " to " Set / clear / rename fields & content " to improve
test : do n ' t try to compile the project with Eclipse
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 .
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` class to accept a ` RemoteInputListener ` to improve input handling
removed unnecessary whitespace in OrcEncodedDataReader . java to improve code readability and maintain consistency
added a condition to check if the thing is enabled before filtering it in HomeConnectBridgeHandler to ensure that only active items are processed
added null checks before removing policies in AuthorizeAdminServlet . java to avoid potential NullPointerExceptions when bs is null
refactor json assertions in DefaultTypeAdaptersTest to use ` matches ` instead of ` if ( JavaVersion . isJava9OrLater
added JSON serialization and logging for Hive context in TezTask . java to enhance debugging capabilities by providing insights into the Hive context
updated heap time calculation in ComputedSummary . java and added getHeapTime method in HprofHeap . java to improve accuracy of heap time retrieval
replaced RxJava2Tasks class with CommonsApplication . getInstance ( ) . getMWApi ( ) . getMWApi ( ) . getMW
remove database . ismvstore ( ) and database . ismvstore ( ) from mvtable
[ issue # 5071 ] fix commitlog size calculation ( # 5071 )
updated folder handling logic in Launcher . java to check if the associated folder is not open to improve error handling by logging a warning when the folder
added a new test method ` testSortOrder ` to ` PGPropertyTest ` to ensure that the order of PGProperty names are sorted in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a clear
changed the parameter type of ` supportsDrop ` and ` getUninstallTarget ` methods from ` Object ` to ` ItemInfo ` in ` Uninstall
updated assertions in RequestBuilderTest to use ` isIn ( ) ` instead of ` hasMessage ( ) ` for clarity to improve test readability and
updated NearbyActivity to use NearbyListFragment instead of MapboxMapFragment to improve clarity and maintainability of the code by using
[ hotfix ] [ runtime ] fix typo in flatprofilecontainerfree constructor
added a new boolean field ` sendZeroAnomalyEmail ` and its getter / setter methods in ` EmailConfiguration ` to control the sending of
[ hotfix ] [ kafka ] fix npe in flinkkafkaconsumerbase
added methods to retrieve user and geofences from the DataManager class to streamline data management by eliminating unused methods
added constructors to BlockingResponseListener that accepts a maximum length to enhance flexibility in handling response sizes
[ java ] use byte [ ] instead of thread . currentThread ( ) for memberbroadcastsreceived ( )
updated logging level from ` System . out . println ( ) ` to ` logger . info ( ) ` and added a try - finally block to
corrected formatting of error descriptions in LoginSAMLAuthenticationFailureHandlerTest . java to improve code readability and maintain consistency
[ hotfix ] [ test ] fix checkstyle violation in configmetadataprovidertest
updated import statements in ListFragment . java and SnoozeActivity . java to use noteToUpdate instead of note to improve code clarity and maintainability
added a new ` AcceptAllFilter ` class and modified the directory stream creation logic in ` Files . java ` and ` WindowsDirectoryStream .
refactor JdbcTestDataSet class to improve code readability to enhance maintainability and facilitate future updates
fix finduniqueconcileileconcretemethod to throw noclassdeffounderror if noclassdeffounderror be throw
added DockerImageName class and corresponding tests in GenericContainer and DockerImageNameTest classes to ensure that the Docker image name does not contain a tag
updated the login failure dialog message from " failed _ username " to " failed _ credentials " in LoginActivity . java to clarify the purpose of the
added autofocus option to multiple form classes to enable automatic focus configuration for improved user experience
added a new test method ` test _ zone _ saml _ properties ` in ` SamlIDPRefreshMockMvcTests . java ` to
added checks for empty and non - empty list in ComparableVersion . java and updated test cases in ComparableVersionTest . java to ensure proper handling of
updated mode settings from topLeftMode and topLeftMode to bottomRightMode in Sheet . java and added theme properties in UIManager . java to
updated imports from ` org . robolectric . android . ParallelUniverse ` to ` org . robolectric . android . internal ` in multiple test files to
replaced the use of ` var ` with ` FACTORY _ CALL ` in ` LocalCacheFactory . java ` and ` NodeFactory . java
updated the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to
added functionality to draw self - loops in ProcessingPreview . java to enhance rendering capabilities for self - loops in the rendering process
updated variable names from ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in naming conventions
set the drag handle indicator to 0 in AllAppsTransitionController . java to ensure the drag handle indicator reflects the correct position of the drag handle
removed multiple log statements from CollectionViewer , CommunityViewer , and ItemViewer classes to streamline logging for better readability and maintainability
[ flink - 26469 ] [ table - planner - blink ] improve error message when query optimization be disable .
added an assumption to assume the build server has issues with finding itself in the build server to ensure that the build server has issues with finding itself
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser . java to ensure proper handling of Jetty
act - 119 : do n ' t retry async job if it ' s already in use .
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
replaced ` @ AddToRuleKey ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude specific
alexeibarantsev : refactor firefoxcustomprofilelauncher and firefoxcustomprofilelauncher to use firefox _ no _
[ hotfix ] [ table - planner - blink ] do n ' t create a new list if the table do n ' t exist
[ hotfix ] [ runtime ] fix npe in hadoopoutputcollector and hadooptupleunwrappingiterator
added a condition to check if the client version is below MIN _ SPLITTABLE _ SYSTEM _ CATALOG before adding derived columns to the
update the google id when update the student to the student .
removed unused import of TestCellReference from AllXSSFTests . java to streamline dependencies and improve code clarity
added a condition to check if the monsterness of a block is not equal to the world object to ensure that the entity ' s Mobility
added a new file LongPointerPressTest3049 . java to test the functionality of long pointer press functionality in the application
do n ' t call direct method in partial evaluator when there be no direct call .
removed redundant null checks in BaseBuilder , ResultSetType , XMLConfigBuilder , and XMLConfigBuilder classes to simplify code and improve readability
removed unnecessary check for ListBlockParser in ListBlockParser and added a new test for deeply indented list rendering to streamline parsing logic and ensure
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` and ` OptionalShouldContain ` in ` OptionalAssert `
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests related to issue # 1070
[ hotfix ] [ test ] remove jsinterop ' global ' from testcaselogger
updated the closing brace in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a check for video format in the RemotePlayHandler to ensure that video formats are only processed for video formats
added import for Security and set the jdk . tls . disabledAlgorithms property in ComHostnameVerifier and JavaxHostnameVerifier classes to ensure compatibility with
cloudstack - 10297 : do n ' t check for local storage in vms / vms
updated cache entry logging in Driver . java and QueryResultsCache . java to include additional context in log messages to improve log readability and provide more
added a new option to skip updating the model after managing dependencies to ensure that the model updates correctly when managing dependencies are updated
added unit tests for ` lastIntentSenderRequest ` and implemented ` send ` method in ` ShadowActivity ` and ` ShadowPendingIntent ` classes to
refactor Graphics2d to use GraphicsConfiguration for enabling and disabling FBO in RocketFigure3d . java to improve flexibility and
added synchronized list for controllerListeners in HydrawiseAccountHandler to ensure thread safety when accessing shared resources
added a setup method to the TestCoreAdminApis class to ensure compatibility with Java 9 to prevent test failures due to compatibility with Java 9
[ java ] fix date formatting in setobject310test
add a null check for the connection before disconnecting it .
fix checkstyle issue in txnhandler . java
replaced ` ByteChunk ` with ` ByteBuffer ` and updated related methods to use ` ByteBuffer ` instead of ` ByteChunk ` to improve memory management and
added a static method ` toSync ` to ` AsyncUtils ` and created a new test class ` AsyncUtilsTest ` for asynchronous operations to improve
added ActionGraphBuilder to multipleCompilerFactory and related classes to enhance the compilation process by incorporating action graph builder functionality
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to verify upload behavior with hidden files
removed redundant exception handling for creating tables in SQLManager . java to streamline code and improve readability
added a check to return the local Maven directory if the file does not exist to ensure that the local Maven directory is available before proceeding
ggb - 221 : do n ' t show label if the label do n ' t start
fix nullpointerexception in ctelementimpl . getmetadata ( string , object )
replaced ` setFlags ( ) ` with ` addFlag ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` in ` Default
added a check for sorted by id in the reordering condition to ensure that reordering only occurs when the cache is sorted by ID
updated error message in Reporter . java from " Method call not specified " to " Missing method call here " to clarify the purpose of the method call
added a null check for the backupFolder before logging the log statement to avoid potential NullPointerException when the backup folder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the ` ArrayNewInstanceOfVoid ` with an instance of ` void ` to
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler classes to enhance rule key management for better rule management
updated the timeout threshold from 10000 to PINCODE _ TIMEOUT in PinCheck . java to improve code readability and maintainability by using a
add issampled ( ) method to PrometheusMeterRegistryTest , PrometheusExemplarsSample and PrometheusExe
removed the ` @ Ignore ` annotation from multiple test classes to temporarily skip tests that require the mongodb server
[ java ] remove dependency on jmsconnection from consumeuncompressedcompressedcompressedmessagetest
replaced ` table . getName ( ) . startsWith ( " " ) ` with ` table . isArtifical ( ) ` in ` MetaDataSource
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty check for session attributes in MongoSessionManager . java to ensure proper handling of session attributes and improve code clarity
update surfaceHolder to use setSizeFromLayout ( ) method instead of setFixedSize ( 320 , 240 ) to improve layout flexibility and ensure proper
refactor stopping handling in AbstractConnector to use CountDownLatch instead of _ stopping to improve code readability and maintainability by reducing duplication
updated method signatures in HuobiStreamingService . java for consistency to improve code readability and maintainability
camel - 16297 : camel - defaultmessagehistory should use timestamp . currenttimemillis ( ) instead of take time .
[ java ] remove unnecessary call to doonerror ( ) in delayedmonopublishertest
updated assertion in WebsocketTest to check for WebSocketHandshakeException before verifying its type to ensure proper error handling for WebSocketHandshakeException instances
refactor AllAppsTransitionController to use View . OnLayoutChangeListener instead of an anonymous inner class to improve code readability and maintainability by
updated variable names from ' theHandler ' to ' handler ' in PolicyBasedAuthenticationManager . java to improve clarity and consistency in variable naming
integration - xml : add support for ` ` default - output - channel ' ' in xpathrouterparser
updated cacheSeconds from int to String and modified cacheSeconds initialization in CasCoreWebConfiguration and CasCoreWebConfiguration to use DurationCapable
updated string literals in multiple Java files to ensure consistency in string formatting across the codebase
added a call to append ( buffer , true ) in ByteBufferPool . java to ensure proper handling of buffer operations
added a check for alt - rt . jar detection in Main . java to skip tests when the alt - rt . jar is detected to improve test
updated SQL queries to use upper - case for user deletions to ensure consistency and correctness in user management tests
[ java ] do n ' t use jfr : + unlockdiagnosticnonsafepoints on jdk 7 +
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check if
added a check for ` _ contentView . hasContent ( ) ` in ` HttpParser . java ` and created a new test for chunked
camel - 15836 - camel - atmos : fix typo in javadoc
added support for " printf " and " print " in Java2TypeScriptAdapter . java to ensure compatibility with additional output formats
added a new file ` TestCapacityUntilGCWrapAround . java ` and a native method ` incMetaspaceCapacityUntilGC ( ) `
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
removed conditional check for stampedAtStart in SamplingStatCalculator . java to streamline time calculation by eliminating unnecessary checks
added unit test for error handler advice issue
pdfbox - 4071 : do n ' t throw icc _ profile exception when invalid icc single chunk
fix terraform rod not be able to be reequipable in terraform . close # 243
updated JoobyModule , SpringModule , SpringModule , SpringModule , and JoobyExtension to conditionally ignore entries based on type to
use container . getparentclassloader ( ) instead of thread . currentclassloader ( ) .
add additional namemap entry in nameupdater . properties file to allow additional namemap entry
added a variable to track the start state of the ellipsoid region selector to ensure that the ellipsoid region selector is properly initialized
added a default codenameOneComProtocol constant and updated URLs in JavaSEPort . java to enhance security by ensuring secure connections
[ geos - 1080 ] validate sortby attribute in getfeature ( # 10265 )
updated null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to ensure proper handling of null values to avoid potential NullPointerExceptions
added GraphicsConfiguration and GraphicsDevice imports and modified image processing logic in DiagramGenerationTest . java to ensure compatibility with different graphics configurations
add a null check for sidedDelegate in FMLCommonHandler . java to ensure proper error handling when sidedDelegate is null
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
change locktest to use asserteventually ( ) instead of waitforall ( )
added methods to handle whole and join tokens in the StringUtil class to enhance text processing capabilities for better token management
do n ' t log an error when no host be find
refactor command handling in SystemHighlighter to use a commandIndex variable instead of a hardcoded value to improve code readability and maintainability by
update version and version date from " 2012 - 07 - 14 " to " PENDING " and update version date to " PENDING " to reflect
updated the buffer position setting from ` idx ` to ` dimensionSize ` in ` StarTreeRecordStoreCircularBufferImpl . java ` to ensure correct
added support for handling drag - and - drop functionality in multiple classes to enhance drag interaction capabilities for better user experience
added JUnit ' s Assume annotation to socketTrafficClass tests in SecureSocketAppenderSocketOptionsTest and SocketAppenderSocketOptionsTest to ensure compatibility with
added a new cipher key " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to the TestCipher class to
updated method call from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment . java
added JSON property annotation to ScimGroupMember . java to enable JSON serialization and deserialization of the group member
updated HqlQueryRenderer to handle reserved words and added schema scoping functionality to enhance query parsing capabilities and ensure compatibility with schema scoping
corrected the spelling of " d " to " s " in ObjectHelper . java to ensure consistency with Java naming conventions
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
modified the ` offsetStreamIndex ` method to include an ` indexStartsAtOne ` parameter and adjusted related logic accordingly to enhance functionality by allowing
updated bitwise operator in MagicDetector . java and added new test cases in TestMimeTypes . java and TestMimeTypes . java to ensure correct
[ flink - 20636 ] [ table - planner - blink ] remove unnecessary method from flinksqloperatortable
added equals , hashCode , and toString methods to OneTimeTokenAccount and OneTimeToken classes to ensure proper object comparison and hashing functionality in the
added a condition to check if the assistant is not running before proceeding to ensure that fling is only processed when the assistant is not launched
added a new file SolarisShortDSA . java that implements a key pair pairing algorithm using KeyPair and SHA1withDSA to
added toggleSearchLabel ( false ) method call to ListFragment . java to control the visibility of the search label in the UI
cloudstack - 10297 : do n ' t attempt to backup a snapshot when create a snapshot
refactor ` DetailsServiceConnection ` initialization to use a new ` DetailsServiceConnection ` class to improve code readability and prevent potential null pointer exceptions
refactor error handling in HttpClientTLSTest to use AtomicReference for better readability to improve code clarity and maintainability by using a more descriptive
removed the equals method from ConjunctionScorer . java to streamline equality checks for Scorer instances
added a null check for the item before binding to prevent potential NullPointerExceptions when attempting to bind items
add timeout to getraftgroupidsop ( ) and getraftgroupid ( ) method in cpmemberaddremovetest
refactor cache size calculation in DefaultCache . java to improve readability and maintainability of cache size management
updated API version from " v2 " to " v3 " across multiple files to ensure compatibility with the latest version of the API
added a method ` empty ( ) ` to check if the size is zero in ` freenect2 . java ` to provide a way to
added null checks for page data in AsyncPageReader and corresponding test cases in TestEmptyParquet and TestEmptyParquet classes to address DR
updated parameter names and added validation for market data type and account subscription types in SerumStreamingService . java to enhance code clarity and ensure proper argument
disable the charging animation when an item be charging on top of a mana pool
[ java ] do n ' t try to close the cluster when a timeout occur .
updated exception handling from ` ignore ` to ` ex ` in ` WaitForHelper . java ` to improve error logging for interrupted exceptions
fix test that fail on window
removed unnecessary whitespace in StyleInjectorFull . java to improve code readability and maintain consistency
replaced instances of ` String ` with ` FileResource ` in multiple files to improve type safety and compatibility with the new Ant library
fix blockworldvector . equal ( ) method to use getx ( ) instead of getz ( ) .
refactor LongConcurrentLRUMap to improve code readability and enforce immutability to enhance immutability and enforce immutability of the
added regex quoting functionality to resourceConfiguration to ensure proper handling of string literals in resource configuration
updated the method for retrieving the KRB5CCNAME environment variable and added a check for the existence of the cache in FileCredentialsCache . java
updated the database path in ValidateMultiSignContractTest . java from " output _ PrecompiledContracts _ test " to " output _ ValidateMulti
[ java ] update ethprotocolmanager . hassufficientpeers and ethprotocolmanager . hassufficientpeers
[ java ] fix checkstyle violation in webdriverservlet
added a condition to check if the operation is a EQUAL _ BOOLEAN in ExpressionNode . java to prevent expansion of expressions that do n '
added a check to clear pendingRenderingOperations if there is a minimum size of 20000 and isMinimized to ensure that pendingRenderingOperations is cleared
fix race condition in hazelcasttestsupport . waitfordelay ( )
fix a race condition in writebehindqueue . setvalue ( ) and writebehindwritedelayseconds ( )
removed the icon from the JLabel in GroupTreeCellRenderer . java to reset the icon to null to improve user experience by preventing unnecessary icons
updated test method names from ` testRedirectMatches _ strict ` to ` testRedirectMatches _ default ` and ` testRedirectMatches _ nonstrict `
added IO imports and updated test methods in ShutdownMonitor and ShutdownMonitorTest to improve resource management and enhance test coverage for ShutdownMonitor
refactored the calculation of moveSize and chunksFillRate in RandomAccessStore . java to improve readability and maintainability of the code
added a new method ` readFields ` in ` Json . java ` to read fields from an object to improve code readability and maintainability by
[ hotfix ] [ runtime ] move componentclosingutils to coordination package
cloudstack - 10297 : delete a volume from the storage when create a snapshot
cloudstack - 10297 : do n ' t use ip6 range if ip6 range do n ' t exist
updated variable names from ` userDetailsBeanNames ` to ` beanNames ` in multiple configuration classes to improve clarity and consistency in naming conventions
updated the leader retry duration from 15 seconds to 30 seconds in the CollectionsAPIDistributedZkTest . java file to allow more time for leader retrieval
[ hotfix ] remove unnecessary ' input ' parameter from parameter
corrected the order of parameters in drawImage calls in URLImage . java to ensure correct rendering of images in the image
updated the comparison from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure compatibility with the latest Solr document structure
fix a bug in setfundef # isitemzerohighcarddim ( )
[ hotfix ] [ runtime ] add exception to streamtaskexception in streamconfig
refactor hashtag handling in Preprocess . java for improved readability and efficiency to enhance performance and maintainability of the code
corrected formatting of the read method in MessagePack . java to improve code readability and maintain consistency
added a new annotation ` Mapper ` to the ` org . apache . ibatis . annotations ` package to provide a way to define a Mapper interface for
do n ' t encode empty extension list in jsonparser . tostring ( )
fix a bug in the library manager when there be no internal name in the manifest .
added alias " node _ popup _ scripting " to the entryNavigator in ScriptingMenuEntryVisitor . java to improve clarity and organization of scripting
removed HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants from OverviewActionsView
camel - 14263 : camel - jms - make jmsmessage . getout ( ) return jmsmessage instead of jmsmessage . get
[ hotfix ] [ javadoc ] remove unnecessary throw clause in serviceoptions . java
deleted deprecated classes AbstractDelegatedVerb , FailureContext , and FailureContext to remove unused code to streamline the codebase
updated static variables in GzipHandlerTest . java and added a new MicroServlet class in GzipHandlerTest . java to ensure immutability
replaced ` getAndAdd ( n ) ` with ` BackpressureUtils . getAndAddRequest ( n ) ` in ` OnSubscribeRedo
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and improve error reporting for better debugging
add a new file ` LoadDSpaceOAIConfig . java ` to load the OAI configuration from the servlet context
refactor matcher reset logic in StoreScanner . java and modify test cases in TestWideScanner . java to improve robustness of matcher reset logic and
camel - 16297 : camel - test - infra - jmx should not be disable when run camel event notifier test .
updated SourceLineAnnotation to use a constant for the canonical package separator to improve code readability and maintainability by centralizing path separators
added YARNBIN application information printing functionality in HiveConf and RemoteSparkJobMonitor classes to improve user experience by providing insights into the application
added support for " maria " database name in the database check to ensure compatibility with additional database types
updated log message formatting in SplitLogManager . java and adjusted time calculation in SplitLogManager . java to improve readability and correctness of log
added a new test class ` ExecuteAndReturnStringTest ` to validate the functionality of the ` ExecuteAndReturnString ` class to ensure that the
added a new file ` InvokespecialInterface . java ` that implements the ` I ` interface and its implementations of ` invokespecialInterface ` to
refactor EvictingBoundedList class implementation to improve code readability and maintainability
fix turncosts not work when use edge _ based _ dir
added a condition to check if the selection is non - negative before proceeding with the disabled state to ensure that the selection is valid before proceeding
added a null check for the md parameter in RpcServer . java to ensure proper exception handling for unsupported methods
updated hotseatCellSize calculations to use border spacing for cell size calculations to improve layout consistency and responsiveness in the user interface
replaced hardcoded string concatenation with a method to retrieve the partition column index to improve clarity and maintainability of the code
add versioned interface to nametaskdecorator and taskdefinition to prevent task from be auto - dispose
updated directory retrieval from getIndexDir ( ) to getNewIndexDir ( ) in ReplicationHandler . java to ensure the correct directory is used for indexing
updated the ` equal ` variable to true and modified the comparison logic in ` DisplayModeTest . java ` to ensure that the test accurately reflects the
fix Unicodetolatexformatter # formathighcodepointunicodecharacter to use amsmath instead of amsmath
[ iotdb - 4071 ] fix npe in oaidccrosswalk . tostring ( )
[ java ] do n ' t select the last window handle in webdriverbackedselenium
added a clear button to the StringSearchPanel and modified BookmarksPanel to check if the name ends with BOOKMARKFILE _ EXTENSION
refactor port handling in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for URL generation to improve code readability and maintainability by utilizing
replaced ` new Date ( 0 ) ` with ` parseDatetime ( 0 ) ` for date assertions in ` SoftAssertionsTest . java ` to
updated the ` adaptOrders ` method to accept a ` boolean reverse ` parameter and modified the ` limitOrders ` method to accept a boolean
fix nullpointerexception in delombok and add a new java11var . java file
[ java ] removed unused imports from multiple test files to clean up the code and improve readability
updated the configuration initialization in HiveConf . java to use a default value instead of a hardcoded value to improve flexibility in configuration management by allowing
changed the method call from ` drawChildren ` to ` draw ` in ` WidgetGroup . java ` to streamline the drawing process by eliminating unnecessary
added unit test for filesplitstreaming with choice
use context . getcatalinabase ( ) instead of system . getproperty ( )
added unit tests for ` getBestDateTimePattern ` methods in ` ShadowICUTest ` and modified ` ShadowICU ` to handle different locale
updated the way color maps are initialized in PlotSquared . java to improve readability and maintainability of the code
added ZuulProperties configuration to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance flexibility by allowing customization of zuul
tika - 132 : fix fontparserstest failure due to time zone change
camel - 14284 : camel - sample - maven - plugin should use instant . now ( ) instead of instant . now ( )
updated the calculation of xDist in PagedView . java to use Math . abs to ensure the xDist is non - negative to improve accuracy
deleted the GUIRWTester . java file to the functionality is no longer needed in the project
updated method signatures from ` @ NullableDecl ` to ` String ` in ` LazyMessage ` , ` StandardSubjectBuilder ` , and ` Subject `
updated error message formatting in TestStream . java to improve readability of the error message
move xmltemplateparser and xmltemplateparser from org . thymeleaf . templateparser to org . thymeleaf . templateparser .
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated ` XPathTest . java ` in ` XPathTest
added @ Nullable annotation to FutureUtils . java to indicate that the method can return null values
add warn message when invokedynamic be not resolve during call graph construction
updated email addresses from " myfakeemail @ gmail . com " to " myfakeemail @ example . com " in ContextTest
updated HTTP response formatting in HttpConnectionTest . java and modified URIUtil . equals method in URIUtil . java to improve clarity and correctness of
added ` getColumnDataType ` method implementations to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a consistent
camel - 15836 - camel - aws2 - api - java : use default method instead of static method
refactor HSSFPictureData class to improve code organization to enhance maintainability and readability of the code
replaced ` long ` with ` java . time . Instant ` and updated time logging methods to use ` Duration ` instead of ` long ` to improve
updated LibMediaInfoParser to support versioning for MediaInfoLib - v and added a getVersion method to ensure compatibility with the latest MediaInfoLib
added reflection support for Idea dependency creation in ProjectReader . java to enhance the flexibility and functionality of IDEA dependency management
added a new class SerialHeap and replaced GenCollectedHeap with SerialHeap in CollectedHeapName to enhance heap management by integrating Serial
added multiple @ SuppressWarnings ( " serial " ) annotations in $ Gson $ Types . java to suppress serial warning messages in the application
fix mousewheelevent and mousewheelevent constructor to use vector2i instead of mouse position
updated MongoQueryCreator to handle null values and added a new test for findByFirstnameIgnoreCase in AbstractPersonRepositoryIntegrationTests to improve robustness by
[ hotfix ] [ table - common ] add multiset type information to maptypeinfo
added a method ` retrieveByIssuer ` to the ` XOAuthProviderConfigurator ` class and corresponding tests in ` XOAuthProviderConfiguratorTests ` to
pdfbox - 4071 : improve cmapparser to handle commas in cmap
refactor ContactsBackupJob to utilize OperationsService for managing file expiration and deletion to improve code organization and maintainability by encapsulating
refactor method signatures and add new classes T6938454a and T6938454a with a new class T6938454a to
add is _ config _ hidden ( ) method to accountlist and add isconfighidden ( ) method .
added error logging for inconsistencies in DisplayController . java to improve debugging by providing insights into the number of displayed displays
replaced ` SchemaUtil . getSchemaName ( ) ` with ` schema . getSchemaKey ( ) ` in ` PMetaDataImpl . java ` and added
ggb - 221 add passive login support to loginoperationw
added a new file Box2DTest . java for testing Box2D functionality to facilitate testing of Box2D functionality in the application
patch by jbellis ; review by brandonwilliams for cassandra - 1449
[ hotfix ] [ runtime ] increase default buffer request timeout for hybridshuffleconfiguration .
[ java ] update documentation to reflect the new version of the speech client
added a help button to the OpenOfficePanel to provide users with a help message for users
[ java ] update nettyacceptor to use child option for TCP _ NODELAY and TCP _ NODELAY to ensure proper handling of child options
updated method signatures in BinanceAuthenticated , closeUserDataStream , and BinanceFundingHistoryParams to use wildcard types to enhance type safety and improve
refactor class loading logic in ScanResultObject to use a transient Class < ? > classRef instead of a hardcoded String to improve code
refactor connection handling in DecodeServlet . java for improved readability and consistency to enhance code maintainability and reduce boilerplate
updated Querydsl to use a new method toQueryDslNullHandling in Querydsl . java and added a new test class Queryd
added null check for actor before processing actions in ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions when the actor is null
refactor ( cttypetest ) : fix typo in test message
added synchronized block for closing sfWriters in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and ` JK ` to implement and test the behavior of ` JJ ` and `
added support for revokeing an existing agent certificate in CertificateManager to enhance certificate management by allowing users to revoke an existing agent certificate
added a test for writing body after no body codes in AbstractHttpTest . java and created a corresponding test in HttpServerTestBase . java to ensure that
updated error handling for script scripts in ScriptTransformer . java to provide clearer error messages when script scripts are not available in Java 6 or above
added " DBCP " and " NONE " configurations to the connection pooling type and updated related imports in multiple files to enhance connection management
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to ensure consistency
added methods to filter locking and unlocking files in FileMenuFilter and OCFileListFragment to enhance file locking functionality and improve user
refactor version handling methods in mmm and ppp files to improve code readability and maintainability
patch by jbellis ; review by jbellis for cassandra - 1449
replaced direct calls to ` thrsync . waitForSignal ( ) ` with a new method ` waitForState ( Thread . State . BLOCKED ) `
replaced ` getRule ( ) . getCoercedAttrValues ( ) ` with ` getCoercedAttrValues ( ) `
[ java ] refactor localstorage and sessionstorage to extend storage interface
fix nullpointerexception in createviewstatementtest due to unnecessary or replace option
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error reporting for better debugging and user feedback
updated the method to retrieve the query string from the rb and added a null check for the query parameter to improve robustness by ensuring the query string
added validation for header values in Headers . java to ensure only valid characters and whitespace are processed to enhance robustness by preventing illegal input errors
rename ` instanceSize ` to ` arrayBaseOffset ` in ` HybridLayout ` and update related methods in ` HostedInstanceClass ` to
add @ Experimental annotation to astcommentcontainer and abstractapextreebuilder
hhh - 14258 - add ` ` fetchmodewithlazywarning ' ' to ` ` association with lazy ' ' and ` ` fetch
refactor ` NoGetOperationsFilter ` , ` NoUserOperationsFilter ` , ` NoUserOperationsFilter ` , and ` RemoveInternalParamsFilter
added database and table name assertions in TestCompactionTxnHandler and set database and table names in TxnHandler to ensure correct database and table names are
camel - 16526 : camel - timer : add a timergracefulshutdowntest to make it easy to configure the timer consumer .
added a condition to check if a block is processed before adding it to the traces list to ensure that only processed traces are added to the
updated the ` ProviderManager ` to use ` CollectionUtils . iterator ( ) ` instead of ` contains ( ) ` in ` ProviderManager ` to
removed unnecessary exception handling for PostgresDatabase in InsertOrUpdateGeneratorPostgres . java to simplify the code and improve readability by eliminating unnecessary exception handling
added LOCAL _ INDEX _ LIMIT attribute and modified query handling in LocalIndexIT , BaseScannerRegionObserver , and ExplainTable classes to improve
added validation to ensure that a collection with the same name has been used in the past to prevent duplicate additions to the existing collection
updated cursor position calculations in VDUBuffer and vt320 classes to ensure correct cursor positioning based on screen dimensions
removed the constant USE _ RETRIES from HttpShardHandlerFactory . java to streamline the code by eliminating unnecessary constant
updated the version number formatting in JavaVersion . java and added a new test in TestJavaVersion . java to ensure compatibility with the latest Java version
[ hotfix ] [ runtime ] do n ' t run stream task if there be no input gate
added a new test method ` test ` to ` TestReceivingMessageSourceParserTests ` to ensure that the test method behaves as expected
added a null check for properties before returning it to avoid potential NullPointerExceptions when properties are null
updated IOException handling in FileSystemBlobStrategy to use initCause instead of throwing an IOException to improve error handling by providing more context about the file opening failure
updated error messages in ClusterStackVersionService , RepositoryVersionResourceProvider , HostRoleCommandDAO , and HostRoleCommandDAO to correct the spelling
remove txconfidencelistener from txidfield so that it can be add to the wallet service .
added G1 Perm Gen constant to the JmxSupport class to support the G1 Perm Gen feature in the application
updated import statements in NearbyController . java and removed the loadAttractionsFromLocationToPlaces method to streamline the code and improve
pdfbox - 4071 : make clonefornewdocument public , so that it can be use a tcobase .
added activity type checks in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activity types during swipe up gestures
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related constants to improve clarity and consistency in naming conventions
updated test methods in ShadowTelephonyManagerTest and added case handling in ShadowTelephonyManager to improve test accuracy and ensure consistent
updated the method call to set unfreezeAmount in UnfreezeBalanceV2Actuator . java to ensure proper handling of unfreeze balances
[ hotfix ] [ table - common ] remove minute from penalty description
replace google common io . files . copy with commons - io . FileUtils . copydirectory in firefoxprofile
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability
refactor Observable class to improve code readability to enhance maintainability and facilitate future updates
refactor ` update ` to use ` addMultiFieldOperation ` for multi - field operations to improve code readability and maintainability by centralizing
added null check for randomUUID before setting it in MockHubService to avoid potential NullPointerException when randomUUID is null
added an ` onHoverEvent ` method to ` InputConsumer ` , ` OverviewInputConsumer ` , and ` OverviewInputConsumerProxy `
added a sleep mechanism for the " boostrap _ conf " flag in CoreContainer . java to ensure proper handling of the " bootstrap _ conf "
rename maxheaderssize to maxheadersize to avoid confusion
updated HBase client RETRIES _ NUMBER from 5 to 15 in HBaseTestingClusterAutoStarter and HBaseTestingClusterAutoStarter
fix sourcesnippethelper to use file . separator instead of path . topath ( )
[ gr - 16286 ] fix test failure in encodedgraphcachetest
updated queryCommand from " customer _ count " to " all _ tables " and added a new test for querying over output to ensure correct functionality
added logic to retrieve and adapt currency codes from KrakenAssets in KrakenAdapters . java to enhance currency metadata handling for the Kraken assets
added a ` toString ( ) ` method to the ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test `
[ hotfix ] [ alert ] use dimensionmap instead of entry . getname ( ) in alertgrouperv2
fix influxdb publisher to check for non - blank measurement
rename ` doTransform ` methods to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming
updated address filtering logic in NetUtils . java to include a new method ` fe80 : : : : : 1 ` and added a method to
replaced the method ` writeRowHeader ` with ` quoteColumnNames ` in ` DataTextFormatter . java ` to improve the handling of column names
added methods to set system properties and properties in WrapSystem , StrUtils , and CompileMethodEntity classes to enable dynamic configuration of system properties and improve
added a constructor to the UpdateRequest class to initialize the UpdateRequest with a specified URL to ensure proper initialization of the UpdateRequest class
renamed EnumSerialization to EnumSerialization in multiple files to improve clarity and consistency in naming conventions
added a new method ` addExperimentalFormatWarning ` to ` RequestHandlerUtils ` and modified the ` addExperimentalFormatWarning ` method to
updated debug logging message to include a formatted string to enhance readability and maintainability of debug logging output
bug fix : adjust the size of the default label font in the table
[ java ] remove redundant code in defaultbrokerheartbeatmanager
[ hotfix ] [ table - common ] use mean _ partition _ size and partition _ count instead of partition _ size in cqlinputformat
removed unnecessary check for " Test " in JUnitTestsShouldIncludeAssertRule . java to simplify the condition for better readability and maintainability
[ hotfix ] [ table - common ] add equal and hashcode to ruleterminalnodelefttuple
added a new import for StageIDsRearranger and resolved StageIDsRearranger in TezCompiler . java to enable the recompil
patch by jbellis ; review by jbellis for cassandra - 1449
[ hotfix ] [ runtime ] do n ' t consume the initial / initial memory when the init memory be not set .
added imports for Apache Lucene ' s Document in multiple classes to enhance documentation clarity and maintain consistency across the codebase
updated LDAPAutoConfiguration and LdapProperties classes to handle anonymous read - only settings to ensure proper handling of anonymous read - only settings for LDAP connections
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
updated the access modifier of the EchoInputDoFn class from public to private to restrict access to the EchoInputDoFn class to enhance encap
added a new method ` finishMocking ` to ` DefaultMockitoSession ` and modified ` finishMocking ` to return a ` Throwable `
removed the ` extraDeps ` parameter from ` GoTestDescription ` and added new test cases in ` GoTestIntegrationTest ` and ` GoTestIntegrationTest
refactor SPDYAsyncConnection to replace ` flushing ` and ` writePending ` with ` readBuffer ` and ` writeBuffer ` to
updated block retrieval method from BlockLiquid . getStaticBlock to BlockLiquid . getFlowingBlock to ensure the correct block is used for flowing
updated background location handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to utilize Uri for URL parsing to improve flexibility in location handling by allowing
[ hotfix ] [ javadoc ] fix typo in aprendpoint
[ hotfix ] [ table - planner - blink ] add support for streamingplan in cli frontend
update craftingmanager to use computeifabsent ( ) instead of computeifabsent ( ) .
flume - 116 : add sleep to wait for backup file to prevent test failure
removed the " \ r " check from conditional statements in TabsAndIndentsVisitor . java to simplify the condition for better readability and maintain
added a Pattern . compile ( " . * pg _ temp _ . * " ) to the NeuteredLinesFilter class to enhance the filtering
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added support for " INTERVAL " data type in DataTypeFactory and updated conditional checks in UnknownType to enhance data type handling and ensure correct data type
[ wavefront ] add metric for sum / max / avg / max / avg / max / avg / max / avg / max / avg /
updated the ` handleAdd ` method to include ` springCloudSelectorHandle ` in ` ShenyuClientRegisterSpringCloudServiceImpl ` and modified
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enhance functionality for registering listeners with specified parameters
added full and uri test methods and logging in SelectChannelServerSslTest . java to ensure proper logging of SSL connection issues to improve error handling and
camel - ignite : fix nullpointerexception in camel - ignite component
added null check for ` cnt ` in ` AbstractClient . java ` and modified the logic for determining if the total line number is empty to improve
pdfbox - 4071 : catch exception instead of ioexception , a suggest by valerybokov
added unit tests for ` setDisplayHdrCapabilities ` and ` setDisplayHdrCapabilities ` methods in ` ShadowDisplayTest . java ` to ensure correct
set classLoader to null in JavacInMemoryStep . java to ensure proper resource management and avoid potential memory leaks
improved error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to enhance debugging by providing more context in exception messages
added a constructor to the Message class that initializes the Message class to allow instantiation of the Message class
[ java ] fix serializableidiom priority for gui class
updated PhoenixDecimalObjectInspector to accept a PrimitiveTypeInfo and modified the initialization of PhoenixDecimalObjectInspector to accept a PrimitiveTypeInfo instead of byteValue to
updated ` CompressionResponseStream ` to use ` OutputStream ` instead of ` GZIPOutputStream ` and modified the handling of the ` gzipstream ` header to
updated regex patterns and variable names from " WWWAuthenticate " to " authenticateHeader " in Authenticator . java to improve clarity and consistency in
added a condition to check if the name starts with " EJS " , " _ " , and " omg " in DCD . java to
updated thread group information in ThreadLeakTest to use a dedicated method to improve code readability and maintainability by encapsulating thread group
added logging functionality to the ` afterPropertiesSet ` method in ` MethodInvocationPrivilegeEvaluator ` to improve debugging and traceability of the ` afterProperties
updated package name from org . apache . nutch . crawl to org . apache . nutch . tools in DmozParser . java to
removed the import of lombok . ToString from RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to stream
cloudstack - 10225 : add iso path for user vms to the vm
refactor signal handling logic in SigInt . java and improve test assertions in SigIntTest . java to enhance code clarity and maintainability
[ hotfix ] fix checkstyle violation in nodetool
updated AxonAutoConfigurationWithSpringCloudTest from NoopDiscoveryClientAutoConfiguration to HibernateJpaAutoConfiguration and added a new discovery
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
remove deprecate resetinitializedplanningentity in favor of resetinitializedplanningentity ( )
added ` buildTimeMs ` parameter to multiple ` Pair ` and ` CachingBuildRuleBuilder ` classes to allow dynamic configuration of build time for
updated field access logic in GroupByOperator . java to use getDeclaredFields ( ) instead of getDeclaredFields ( ) to improve code readability and ensure
added null check before adding blockAppearance calls in Wallet . java to prevent potential NullPointerExceptions when the block is null
added a new currency " CNC " to the currency pairs and updated the TickerDemo to include it to support the CNC currency in the
updated the skewAllowance value from 5 to 15 in SamlIdPResponseProperties , SamlRegisteredService , and SamlProfileSamlSubject
updated the sorting logic in SongListActivity and Utils classes to use ItemSortBy instead of null to improve clarity and consistency in sorting behavior
removed unused imports and modified the readBodyToBytesIfNecessary method in Utils . java to streamline code and improve readability by eliminating unnecessary dependencies
rename block to legacybaseblockwrapper and move it to legacybaseblockwrapper instead of baseblock
refactor IcebergBranchExec to use SnapshotRef instead of Optional to simplify snapshot retrieval and improve error handling for non - existent tags
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest . java
fix bounce count bug in photonmappingdemo
updated password change validation logic in IdentityProviderEndpoints . java and added debug logging in IdentityProviderEndpointsMockMvcTests . java to ensure proper handling of
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that uninitialized fields are properly initialized in constructors
updated the SQL execution error message to include a URL if the connection is closed to ensure correct URL is used for database operations
added a new test method ` testRequiredBody ` in ` SpringmvcClient . java ` to validate the presence of a microservice name to
updated regex patterns in CredentialInjector and CredentialInjectorTest to use " . user " instead of " . password " instead of " password "
added a new menu item " Item4 " to the menuItems array and modified the key event handling in ActionListenerCalledTwiceTest . java
updated query messages in TestCoreParser . java to include class name and modified assertions in TestCoreParser . java to improve debugging information by providing more
corrected the spelling of " id " to " id " in the conditional statement to improve code readability and maintain consistency
changed the access modifier of the class PopulatorContextStackItem from public to package - private to restrict access to the class for better encaps
updated numDocs handling in MoreLikeThis . java and added a new test method in TestMoreLikeThis . java to improve accuracy of document count
reformatted code for better readability in QuestManager . java to improve code readability and maintainability
[ hotfix ] [ test ] add testlogger to networkbufferpooltest
updated the append method call in MongoSessionDataStore . java to include the " $ lt " prefix to ensure that the query appends the correct value
added a new native method ` unsafeGetLong ` to ` CompilerDirectivesSubstitutions ` to enhance the functionality of the ` unsafeGetLong `
updated time zone strings from " ARAST " to " EET " across multiple language files to ensure accurate representation of time zone information
updated the id from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of the logger
hhh - 14258 - do n ' t throw jdbcexception if rollbackonly be set to true
do n ' t print an error message if the external file suffix be null .
[ macosx ] disable screen menu bar on macosx
add a new integration test for piecewise operations in the GeoGebraCasIntegrationTest class to ensure correct functionality of the quadratic equations in
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` from private to protected in ` BaseSwipeUpHandlerV2 `
added a new variable ` modWhiteListPattern ` and a new test method ` testConfigWhiteList ` in ` HiveConf . java ` to
added a call to put an invalid class value in EntryLoader . java to ensure proper handling of invalid class entries
use player . team ( ) instead of team . sharded
updated the domain name from " comp1 " to " getHostName ( ) " in CookieImplementationTest . java to ensure the cookie uses the correct hostname
added validation logic for nullable columns in multiple generator classes to ensure proper validation of nullable values based on search conditions
refactor security - related classes for consistency and clarity to improve maintainability and readability of security - related components
refactor CustomCollectionTest and CompositeIdRouter to use static final variables for separator and bits separator to improve code readability and maintainability by reducing
added scratch data handling in ExecutablePreparedStatementBase and updated dependenciesChangeLog in PostgreSQLIntegrationTest and PostgreSQLIntegrationTest to improve data
updated conditional checks and formatting in DefaultServlet . java to enhance code readability and maintain consistency
fix bib file drag - and - drop in jabref
updated ` ExecutionUnitRunner ` , ` CucumberTest ` , and ` ExecutionUnitRunnerTest ` to use ` Description . createTestDescription
replaced ` ! ! isEmpty ( ) ` with ` StringUtils . isNotEmpty ( myVersion ) ` in ` CommandLineUtils . java ` to improve code read
removed the ' public ' access modifier from several methods in TimeUtils and TimeUtilsTest classes to restrict access to these methods for better encaps
updated SecurityFrame handling logic in RefectionMHTests to use VersionCheck for improved clarity to enhance code readability and maintainability by reducing redundancy
updated file extension check from " jpg " to " . jpg " in PreviewImageFragment . java to ensure correct handling of file extensions
updated method handling in NativeImageDebugInfoProvider to check for HostedMethod instances to improve compatibility with HostedMethod methods
added ` getIcon ( ) ` methods to ` Data ` , ` Data ` , and ` Data ` classes , and updated ` DataTableTopComponent `
added a conditional check for the lastIndexOf parameter before substring in CounterRequestAggregation . java to prevent potential null pointer exceptions when retrieving the request name
updated regex replacement logic in FindAndReplace . java and added a test for dollarsignsTolerated in FindAndReplaceTest . java to ensure
do n ' t use xmppconnection in jabber and smackpacketdebugger if it be not a xmppconnection .
refactor SchemaExtractionProcessor class to improve code organization to enhance maintainability and readability of the code
added a new method ` copyDir ` to the ` IO ` class and updated imports in ` SpecWebAppTest ` and ` SpecWeb
added exception handling for unknown datum class in JacksonUtils . java to improve error reporting for unknown datums
refactor DefaultJavaLibraryBuilder to utilize HasJavaAbi for obtaining library targets and source ABIs to improve code readability and maintain
removed unnecessary calculations for item height and background padding in SelectBox . java to simplify height calculations by eliminating unnecessary padding
added normalization of database and table names in ObjectStore . java to ensure consistent handling of identifiers in database and table names
added handling for " oracle " database type in DbSqlSession . java and updated table retrieval logic in DbSqlSession . java to ensure correct database
removed the call to ` finish ( ) ` in ` HomeFragment . java ` to simplify the logout process by eliminating unnecessary logging
[ hotfix ] [ test ] fix flaky test ( # 1337 )
fix npe in fastimportaction when there be no candidate
replaced Managed . MANAGED with wasManaged in ContainerLifeCycle . java and updated assertions in ContainerLifeCycleTest . java to ensure correct bean management
rename iexecutionattributesdialect to iexecutionattributedialect for consistency
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure proper resource management and prevent memory leaks
do n ' t create new string if there be no location
[ iotdb - 4071 ] fix npe in tableinsertiondatacontainer when use disruptor queue
deleted the Session2Token . java file to the class is no longer needed for the current implementation
remove the volume from the database if it fail to create a new one
added a new ` Install ` class to the ` SystemShortcut ` and integrated it into ` SystemShortcut ` to enhance user experience by allowing users to
added a constructor to ` LdapAuthenticationProvider ` and aPopulator to manage null authority populations to enhance flexibility in handling null authorities in LDAP authentication
updated the way the retrolambda jar is retrieved and added a check for the existence of the " retrolambdaJarPath " system property to
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to streamline the build process by eliminating unnecessary
refactor the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` to improve performance and maintainability by util
added a method to handle null results in JMESPathExtractor . java to ensure proper handling of null values in JMESPathExtractor
updated import statements in AuthorizeTag . java and added a null check for currentUser authorities to improve code clarity and prevent potential NullPointerExceptions
updated test assertions to use ` getLogoutUrl ( ) . toExternalForm ( ) ` instead of ` getLogoutUrl ( ) . toExternalForm ( ) `
cloudstack - 10297 : fix typo in vm snapshot error message
updated annotation retrieval from ` classConfig ` to ` methodClassConfig ` in ` RobolectricTestRunner ` and ` Config ` classes to ensure
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to align with the latest Jetty API changes
added a method to check for partial parts in HiveAlterHandler . java to improve the accuracy of partial key comparisons in the Hive metastore
added a new debug flag ` ENABLE _ ICON _ IN _ TEXT _ HEADER ` to the ` FeatureFlags ` class to enable the icon
corrected a syntax error in the conditional statement to improve code readability and maintain consistency
replaced instances of ` SharedBlockingCallback ` with ` Callback . Completable ` across multiple files to streamline the code by using ` Callback .
added workspace listener functionality to PreviewControllerImpl and modified PreviewUIController to handle workspace updates to improve workspace management and manage workspace updates effectively
updated conditions in ReflectionFactory and ReflectUtil to include reflection checks to ensure proper handling of anonymous classes and improve code clarity
refactor TransportHelper class to improve code organization to enhance maintainability and readability of the code
updated file path from " file : / / " to " file : " in CatalinaAcegiUserRealm . java to ensure compatibility
updated log messages for server and manager initialization in AmbariServer . java to improve clarity of log messages regarding server initialization and manager initialization
added null checks for initial and modify nodes in JSONWriter . java to enhance robustness by preventing potential NullPointerExceptions
updated method signatures in SliderAppsViewControllerImpl to accept FileSystem directly instead of using a hardcoded file system path to enhance flexibility by allowing
added a condition to check if the backgroundManager is not attached before attaching it to ensure that attach is only called when the backgroundManager is not
added logic to set the current tab in AllAppsTabbed , Launcher , and updated child height calculations in PagedView to ensure proper
added null check for the URL in BaseDataSource and a corresponding test in SimpleDataSourceTest to ensure that an IllegalArgumentException is thrown when the URL is
added JRE support to the PebbleModuleTest class to enable compatibility with newer Java versions and ensure compatibility with newer Java versions
added a ` EditNameDialog ` to the ` FileDisplayActivity ` class to handle directory creation and deletion to enhance user experience by allowing users to
added case handling for setting bar border widths in multiple classes to ensure proper rendering of chart elements based on data type
updated SSL URIs in OkCoinExchange . java to use " www . okex . com " instead of " www . okcoin . com
add naturalscorecomparator to the acceptedforagertest
replaced ` FileChannel ` with ` SeekableByteChannel ` and modified the ` read ` method to use ` SeekableByteChannel ` instead of ` FileChannel ` to improve
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter for clarity to enhance code readability and maintainability
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] fix checkstyle issue in serializationconfigurationparser
added heap limit setting for ActivityManager in DEBUG _ DEVICE to optimize memory usage for non - debug devices
[ hotfix ] [ table - common ] fix bug in collection . sumwithcompaction ( )
[ log4j2 - 1343 ] fix test failure in abstractloadbundletest
[ hotfix ] [ table - common ] fix checkstyle violation in precompactedrow
updated return values in ICC _ Profile , ColorConvertOp , and ColorConvertOp classes and added a new test class for invalid rendering intents to
added meterregistrylifecycle to enable auto - configuration of meter registry
change log level from warn to info for config center
added error handling for certificate generation in CertificateFactoryTest . java to ensure proper handling of CertificateExceptions during certificate generation
camel - 14297 : simpleparser : fix string indexoutofboundsexception in simple expression
refactor onTabUnselected method in EditorActivity and add focus change handling in IDEEditor to improve code readability and maintainability by reducing
updated error message to include the user ' s name in the error message to provide more context for the error message for better debugging
updated the SkeletonModelGpuSkinningTest and OgreXmlLoader to use a new robot - mesh . xml . g3d
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that these methods are outdated and should no longer be used
[ jsweet ] add - d . ts - output directory option for generate d . ts file .
[ hotfix ] [ stream ] add test for kinesis fetch timeout
[ hotfix ] [ dataflow ] fix typo in streamingdataflowworker
increased the default value of METASTORESERVERMAXTHREADS from 100000 to 1000 to allow more time for the metastore server to run
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` in ` RecentsModel . java ` to allow
updated shadow radius setting from mMaxShadowRadius to shadowRadius to ensure consistent shadow radius configuration across animations
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to verify the functionality of chaining and aggregation in
updated loop condition from ' limit ' to ' end ' in MarketSellAssetActuatorTest . java to use ' end ' instead of
fix ( context ) : use ` ` interactive ' ' instead of ` ` internal ' '
updated null check for previousCachedFilePath in CreateKeytabFilesServerAction . java to improve code readability and prevent potential NullPointerExceptions
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to enhance functionality by integrating DisplayController functionality
updated toolTipText assignment logic in MetalFileChooserUI , SynthFileChooserUIImpl , MetalFileChooserUIImpl , and MetalFileChooserUI
updated the method to retrieve the screen size from ` getToolkit ( ) ` to ` Toolkit . getDefaultToolkit ( ) ` to ensure compatibility with the
[ hotfix ] remove unnecessary ' ? extends recognisedobject ' keyword from tensorflowrestcaptioner . recognise ( )
added unit test to ensure that jpasqlbase . fetchresults ( ) and jpasqlbase . fetchresults ( ) work correctly
removed unnecessary drag index calculation in FreeformFinSetConfig . java to streamline the code by eliminating unnecessary complexity
updated the moe version from " 1.9 . 2 " to " 1.9 . 0 " to ensure compatibility with the latest features and fixes
add program . spendallgas ( ) to the error message
updated error message formatting from " error " to " error " in multiple Java files to improve readability and consistency of error messages
added @ Deprecated annotation to Weights class to indicate that the class is outdated and should no longer be used
do n ' t register unsafe . misc . unsafe plugin for unsupportedcaskinds
added @ Hint annotations to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and added new test classes for blacklisted modules to
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable center pages vertically for improved user
[ hotfix ] [ runtime ] fix typo in migrationrequestoperation
updated variable names from HOST to BASE _ URL in KonnectedBindingConstants . java and KonnectedUPnectedServer . java to
changed the data type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy
added database creation and query processing functionality in TestJdbcWithMiniLlap and LlapBaseInputFormat to enhance database management and support for non -
added a new test method ` testCaseInsideBrackets ` in ` CaseExpressionTest . java ` to validate SQL parsing functionality to ensure correct parsing of
added touch event handling and refactored copy mode logic in ConsoleActivity . java to improve code readability and maintainability by reducing duplication
refactor the ` writeXmlOutput ` method to use ` DocumentBuilderFactory ` and ` Writer ` for XML output handling to improve code readability and
camel - 14297 : camel - json - aggregation - strategy : fix npe when exchange be null .
camel - 16297 : camel - exchange - exception message should include the cause of the exception message
move basicconfigurator to classic package and move it to classic .
added a check for the presence of a valuenumber . PHI _ NODE in the targetVN comparison to ensure that the targetVN is
removed unused import of SharedStringSource from TestXSSFRichTextString . java to clean up the code and improve maintainability
added a static method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to provide a way to invoke a method with additional parameters for method
updated multiple classes related to BoxAndWhiskerCalculator , HistogramType , Regression , and Statistics to improve code organization and maintainability
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the ` NormUpdate ` class from private to static and updated field comparisons to use ` equals ` instead of ` equals ` to improve
changed the visibility of the singleton instance of IndexFileNameFilter from public to private to restrict access to the singleton instance and enhance encapsulation
[ java ] fix ifstatementtest to use gif instead of gif
replaced ` getPutOnlyTableHeaderRow ( tableMetaData ) ` with ` getTableHeaderRow ( tableMetaData ) ` in ` ConnectionlessQueryServices
replaced GsonBuilder with TypeAdapter ' s nullSafe method in TypeAdapter to simplify the type adapter registration process and improve code readability
updated the expected size from 12 to 13 in BundledDistributionTest . java to reflect the correct number of elements in the distribution
added a new file ` EXIFReader . java ` to handle EXIF metadata handling in the upload process to provide a mechanism for processing EXIF
[ cloudwatch ] change default batch unit to none when unit be unknown
[ kie - tools ] fix bug in pmmlmodelcommand and pmml4datafactory
improve error message when we get a repeated countercurrencytransferstartedmessage
added a check to return early if the bubble bar is visible to optimize performance by avoiding unnecessary processing when the bubble bar is not visible
fix aarch64 backend to handle branch target out of bounds exception .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java and created a test for
added a ` find ` method to ` TicketCatalog ` and modified logging messages in ` DefaultTicketCatalog ` , ` DefaultTicketCatalog ` ,
refactor SSL connection initialization to improve code readability and maintainability to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] fix lock issue in sort merge result partition
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 641 , use long .
updated PluginHandleController , PluginHandleController , PluginHandleDTO , and PluginHandleDO classes to include type and sort parameters to enhance functionality by allowing
replaced ` start ( ) ` with ` start ( ) ` in ` DefaultSpanCreator . java ` and ` SleuthAdvisorConfig .
added color and depth format configurations to IOSGraphics and IOSApplicationConfiguration classes to enable customizable drawable color and multisample configurations for
refactor login logic to use a new method ` attemptLogin ` to improve code readability and maintainability by reducing duplication
refactor : make sure real ( ) and complex ( ) do n ' t throw an unsupportedoperationexception .
replaced the loop condition with a do - while loop in SynchronizationStatistics . java to improve code readability and maintainability by eliminating redundant checks
refactor Implements and ShadowPicker classes to improve code organization and maintainability
refactor ` RestTransportClient ` to use a dedicated method for creating HTTP / 2 client options to improve code readability and maintainability by central
updated type checks in DynamicStruct , SolidityFunctionWrapper , and SolidityFunctionWrapper classes , and added null check in Solidity
updated ` getStringProperty ` and ` getFloatProperty ` calls to include a new boolean parameter ` true ` in ` InlineLayout . java ` and `
added constructors to CopyStep and a corresponding test in CopyStepTest to enhance flexibility and ensure correct functionality of the CopyStep class
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) call in rsemaphore
camel - 14284 : fix test failure on window
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` and ` BuildTargetParser ` to utilize it for parsing flavor
[ java ] use bytebuffer instead of string in witnessschedulestore .
added a check for non - empty resultsMeta before printing results to avoid unnecessary print statements when resultsMeta is empty
refactor ConcurrentLinkedQueue to improve item removal logic and add a new RemoveLeak class for testing to enhance code readability and maintainability while ensuring
added a new boolean parameter ` addSpecialTokens ` to the ` encode ` methods in the ` HuggingFaceTokenizer ` class to enhance flexibility in
[ hotfix ] [ runtime ] make taskmanagerservices # computeslotresourceprofiles non - thread - safe
added data size tracking for chunk data in LoadSingleTsFileNode . java to ensure accurate chunk size tracking for improved performance
added a new session storage context constant to the BrowserSessionStorage and updated the DuoSecurityMultifactorWebflowConfigurer to use it to enhance session
added a new test method ` testSchemaValidation ` to ` TestJspDocumentParser ` for validating XML schema validation to ensure that the XML
added a constructor to TypeAdapter and modified the @ Ignore annotation in ReflectionAccessTest to ensure compatibility with Java 17 and improve code clarity
refactor event handling in SuspendedEvent and add a kill method in SuspendedEvent to improve code readability and maintainability by reducing
refactor AntPathRequestMatcher class implementation to improve code readability and maintainability
refactor : remove unused parameter from createresourcepolicy ( )
added null check for _ deflaterEntry before release in GzipHttpOutputInterceptor . java and updated assertions in BlockingTest . java to improve
added JUnit AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure tests are executed after each test execution
updated the MD5 checksum computation to use Normalizer for normalization to ensure consistent checksum formatting across different operating systems
refactor builtin command handling and tmuxing logic in Example . java to improve code readability and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] make keylistener final in baseappstate
replaced ` @ SuppressWarnings ( " unchecked " ) ` with ` dbDoc ` in ` MongoTemplate . java ` and added a new test for
added a method to check for multiple remote addresses in RequestUtils and a corresponding test in RequestUtilsTest to enhance functionality to handle multiple remote addresses in
change return type of getJobArgs and getJobArgs methods from String to ObjectBuilder in JsLibrary . java to enhance flexibility in handling JSON file paths
refactor InetAddress handling in CookieManagerTest and UnmodifiableMaps classes to improve code readability and maintainability by centralizing IP address retrieval logic
added whitespace handling in GlyphLayout . java and updated test cases in BitmapFontTest . java to improve performance and ensure proper resource management during glyph execution
pulsar : add pauseorresumesplits ( ) method to pulsarsourcereaderbase and pulsarpartitionsplit
added HIVESCRIPTIDENVVAR and HIVESCRIPT _ OPERATOR _ ID configuration in HiveConf and ScriptOperator classes to enable dynamic environment variable
refactor ` getListedTermCounts ` method to use ` SimpleImmutableEntry ` and ` SimpleImmutableEntry ` for processing term counts to improve
added a new action ` UseSeparateStepSizeAction ` to manage step sizes in the localizing service to enhance user experience by allowing users to
refactor FileMenuFilter to use final fields for files and improve locking logic to enhance code readability and maintainability by ensuring immutability
hbase - 26469 fix regionserver split to use empty list instead of list
change the default header value from " false " to " 1 " in HttpClientRequestAdapter and updated the parent span ID in HttpClientRequestAdapterTest to
pdfbox - 4071 : use ioutils . closeQuietly ( ) instead of a hardcoded value .
updated GwtApplication and GwtGraphics to use native methods for screen width , height , and fullscreen mode to enhance rendering capabilities and ensure proper fullscreen
updated the type of ` issuers ` and ` parameterName ` from ` String ` to ` URI ` and modified the ` normalizeResource ` method to
added a new test class ` SoulApacheDubboClientConfigurationTest ` for testing Dubbo configurations to ensure that the configuration
replaced ` Gdx . files . internal ( fileName ) ` with ` resolve ( fileName ) ` in ` SkinLoader . java ` to ensure
updated log level from warn to info in ChainingAttributeReleasePolicy , OidcDefaultJsonWebKeystoreCacheLoader , and Oidc
replaced ` lock ( ) ` method calls with ` lockInterruptibly ( ) ` across multiple classes to ensure that the lock is only called when necessary
changed the package declaration from ` java . lang ` to ` java . lang ` to improve organization and clarity of the code structure
added exception handling for code exceptions in NullDerefAndRedundantComparisonFinder . java to improve error reporting for redundant branch cases
update dashrendererbuilder to use defaulthttpdatasource instead of defaulthttpdatasource
added a configuration property for maximum prepared statements per connection to enhance flexibility in managing prepared statements per connection
renamed the ` WritableConfig ` method from ` WritableConfig ` to ` Configuration ` across multiple files to improve clarity and consistency in naming conventions
removed the checkErr method from AutoScalingHandler . java to streamline error handling by eliminating unnecessary error checks
refactor CombinedDataset class to improve code organization to enhance maintainability and readability of the code
updated the loop variable name from ` buf ` to ` b ` in ` InflateIn _ DeflateOut . java ` to improve code read
added methods to remove and remove cryptography restrictions from the Utilities class to enhance security by removing unnecessary cryptography restrictions
send teleport event to teleport if the entity be cancel
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure that page margins are
removed redundant assignment of vContext in Vectorizer . java to streamline the code and improve readability
fix ( net ) : set the speed of the wialon position in the wialon protocol
hbase - 24286 disable user conf for cluster metric ( # 241 )
added a ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` isEmpty ( )
updated boolean flags for user presence , visibility , and attached states in Launcher . java to improve clarity and control over receiver state management
refactor multiple HttpClientRequest , HttpClientResponse , HttpServerRequest , HttpServerResponse , and NetSocket classes to improve code organization and maintainability
[ hotfix ] [ runtime ] add parameter to the zadd method in pipelinebase
[ hotfix ] [ test ] use utf - 8 encoding in test
[ hotfix ] [ test ] rename testasyncmessages to testasyncmessagesperformance
added a new method ` getNodeOptional ` to ` VersionedTargetGraphBuilder ` and modified the ` Arg ` class to handle optional targets to improve
updated epoch checks from EPOCH _ SECONDS _ HIGH to 31 _ 556 _ 832 _ 999 in TimeZoneProvider . java to
updated return value from ` field _ pictureData . length + 4 ` to ` field _ pictureData . length _ HEADER _ SIZE ` and added
removed redundant initialization of row and column variables in JSONParser . java to streamline code and improve readability
replaced ` JavaType . ShallowClass ` with ` Pattern . compile ( ) ` in ` FindTypes . java ` and ` JavaType .
updated the DETAIL _ THUMB _ HEIGHT constant and added a new ACTION _ PLAY _ TRAILER in BaseItemDetailsFragment
added a method to remove glyph information from cache in CStrike . java and introduced a native method in CStrikeDisposer . java to
act - 126 : terminate end event activity when terminate end event
camel - 16297 : camel - spring - boot should use xml . bind . XmlRootElement instead of xmltype . getname ( ) .
use http : / / www . apereo . org / scottb . org instead of http : / / www . apereo
add option to reset all preferences to default value
change visibility of these fields from private to protected in ThriftMetrics and ThriftServer classes to allow subclasses to access these fields for better extensibility
added CHANNEL _ MANUAL _ FAN _ SPEED to the DanfossAirUnitHandler and removed deprecated channels to streamline
use hamcrest assertion instead of junit in camel - core
removed redundant calls to ` expansionHelper . stop ( ) ` in ` TweetActivity . java ` to streamline the code by eliminating redundancy
added equals and hashCode methods to PartitionPanel and PartitionFactory classes to ensure proper equality and hash code generation for PartImpl instances
cloudstack - 10297 : add default disk size to user vm ( # 11486 )
updated PredictionRowView to use PreferenceManager2 for enabling predictions based on user preferences to enhance user experience by allowing users to toggle predictions based on
do n ' t throw an exception if the crs be null or empty .
added validation methods for value and position parameters in LibrustzcashParam . java and updated ivk [ 31 ] in LibrustzcashTest
add @ deprecate annotation to ithrowableentity to indicate that it should no longer be used
added initialization of ' x ' and ' y ' variables in NodeDataImpl . java to ensure consistent positioning of the node data
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to improve clarity
refactor JavacStep to use try - with - resources for invocation , firstOrderStdout , and returnedStderr to improve resource management and
updated the version string from " 0.1 . 1 " to " 0.1 . 2 " to reflect the latest release of the software
added a condition to check if the item type is DEEP _ SHORTCUT in LoaderCursor . java to ensure proper handling of duplicate shortcut
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hash code generation for different data types and columns
changed access modifiers of classes from private to protected in BooleanQuery , DisjunctionMaxQuery , and Disjuncts to allow subclasses to access
added a boolean flag ` useProxyResponseCode ` to control the behavior of the NTLM proxy handling in ` HttpURLConnection . java ` to
aarch64 : use aarch64 . sp instead of aarch64 . sp in aarch64macroassembler
cloudstack - 10225 : do n ' t list user vms by host id in the list of user vms by host id
added a null check for maxScore before includeScore in JSONResponseWriter . java and added a new query method in TestDistributedSearch . java to
updated audio recoder from 22050 to 44100 in AudioRecorderTest . java to correct the audio recoder from 22050 to 44
updated the calculation of newOriginX in RocketFigure . java to account for the center of the subject bounds to ensure accurate positioning based on
updated error handling in DruidQueryBasedInputFormat . java to check for null or empty dataSource to improve robustness by preventing potential NullPointerExceptions
added ` ORIGINAL _ TYPE ` and ` ORIGINAL _ TYPE ` to ` CustomProperty ` and corresponding tests in ` CustomPropertyTest
added a static method ` create ` to the ` Index ` class to provide a way to create an instance of ` Index ` based on a specified
removed unnecessary boolean assignment for isBetweenGivenPeriod in Dates . java to simplify the code and improve readability
[ hotfix ] [ table - planner - blink ] fix schema compatibility type mismatch issue
added persistent attribute types handling in QueryUtils . java and modified path join logic in QueryUtils . java to improve handling of entity paths and ensure proper
added synchronized block to the spans list and modified return statements in TestSpanHandler . java to ensure thread safety when accessing shared spans
updated method signatures from ` List < Object > ` to ` List < ? > ` across multiple classes to allow for more flexible argument types in method
updated exception handling to catch InvocationTargetException instead of Exception in ViewContextImpl . java to improve logging granularity and provide clearer diagnostics
refactor OAuth2AccessTokenEntity to improve code organization to enhance maintainability and readability of the code
updated error messages related to request rejection in SCBEngine , TestInvocationFactory , TestInvocationFactory , TestInvocationFactory , and TestInvocationFactory to
added new ipad images to the project files in GdxSetup . java to enhance the visual representation of the ipad image
updated import statements in TestSearcherManager . java to use ConcurrentMergeScheduler instead of List to improve performance by allowing concurrent merging of tests
updated conditional checks in QTestUtil , GenericUDTFInline , GenericUDTFInline , and LazyBinaryArray classes to ensure proper handling
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
[ hotfix ] [ table - planner - blink ] do n ' t call preventDefault ( ) in spreadsheetkeylistenerw
refactor HibernateBundleActivator to initialize persistence and session factory services to improve resource management and ensure proper cleanup of service instances
use connectiontimeout instead of elapsedtimems in hikaripool . gettimeout ( )
add support for non - packaged resource in voicecompiler
updated file handling logic in Compat . java and FileOpener . java to use File . separatorChar instead of URL . toString ( ) to
changed the return type of ` row ( ) ` from ` Cell < T > ` to ` void ` in the ` row ( ) ` method
[ beam - 12265 ] add checkportclash ( ) method to besucommand to check if multiple port be specify .
added a nullMask field and its getter / setter methods to WebSocketClient and updated WebSocketConnectionD12 to utilize it to enhance WebSocket masking
refactor ` genUDTFPlan ` method to return a ` Pair < > ` instead of returning a ` udtf ` instance to
added incrementBucketedNodeSelectedCount ( ) and getBucketedNonPreferredNodeSelectedCount ( ) methods to NodeScheduler , NodeScheduler , and
added a new file ` Person . java ` containing a ` Person ` class with a ` setName ` method to provide a way to retrieve the name
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow . java ` to improve handling of owner pointers
added animation and timing functionality to the PlaybackOverlayFragment to improve user experience by providing visual feedback during animations
refactor : remove redundant call to world . markdirty ( ) in place of world . getpos ( )
removed the ` final ` modifier from the ` IMPL ` variable and updated exception handling in ` SegmentReader . java ` to improve code clarity and
do n ' t call firecellupdatedevent ( ) on the main thread to avoid race condition
updated DefaultInetAddressAdapter and Gson classes to use CollectionTypeAdapter instead of DefaultInetAddressAdapter and CollectionTypeAdapter to improve type adapter
added new constants for null values and assertions in Series . java and corresponding test cases in DataFrameTest . java to enhance error handling for null values in
updated audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " in VideoManager .
fix ( geo ) : do n ' t use ` ` > = ' ' in georect ( )
cloudstack - 10225 : use getdiskofferingid ( ) instead of getdiskofferingid ( ) to getdiskoffering
added JUnit setup and teardown annotations to HazelcastTest . java to ensure proper cleanup of Hazelcast resources after tests are executed
added exception handling for AES algorithm instantiation in BlockCipherTest . java to ensure robustness by handling potential exceptions during cryptographic operations
added log messages for going to print operations logs in QFileClient . java to improve user experience by providing clearer insights into operations logs
[ iotdb - 4071 ] add support for inject parent and parent interface in aop .
add null check for currentConnectionAddress before assigning it to the proxySocketAddress to prevent potential NullPointerExceptions when currentConnectionAddress is null
replaced the call to ` Math . addExact ` with ` MathUtils . cappedAdd ` in ` WebSocketConnection . java ` to simplify the demand
refactor image output stream handling to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
replaced ` TvApp . getApplication ( ) . showSearch ( ) . showSearch ( ) . showSearch ( ) ` with ` Intent `
removed unnecessary ' this ' keyword from SchemaCrawlerOptions and modified the toString ( ) method in GrepOptions to streamline code and improve readability
added osgi configuration to the web console to make it easy to configure the web console
added a @ Autowired annotation to the PersonRepository in RepositoryIndexCreationIntegrationTests . java to enable dependency injection for the PersonRepository instance
changed the return type of the stop method from Exception to InterruptedException in UIServer . java and TestVertxUIManual . java to improve error
refactor case statements in BlockCactus . java to include additional case statements to improve code readability and maintainability by using more descript
refactor mouse event handling in ThemeSelector to use a dedicated listener for mouse events to improve code readability and maintainability by encapsulating
[ java ] make minmultimulticastflowcontrol rhspadding abstract , so that it can be reuse by other class .
added alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance the functionality by allowing vertical alignment
[ hotfix ] remove unnecessary exception throw from stattoksentannotator
added a condition to check if distinct queries are present before processing group by expressions in ClusterIntegrationTestUtils and QueryGenerator to ensure that distinct queries are handled
[ gr - 24186 ] add support for string similarity in native linkage ( graalvm )
fix typo in jsyntaxtextarea and jsyntaxtextarea
added a null check for the children array before processing to avoid potential NullPointerExceptions when children are null
added tokenPosition and currentPosition fields to MessagePackParser and updated JsonLocation instantiation in MessagePackParserTest to improve handling of token and current position
added a ` @ AfterClass ` method to set the default locale in ` AbstractSolrMorphlineTestBase . java ` to ensure consistent locale handling across
removed unnecessary conditional checks for launcher size calculation in LauncherFragment . java to simplify code and improve readability
added a new file MetricsReporterTest . java to implement unit tests for MetricsReporter functionality to ensure correct functionality of metrics reporting in the application
camel - 14263 : camel - mock - core - remove unused typecache
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for Rectangle objects
[ hotfix ] [ kafka ] fix test failure in streamkafkaptest
updated the strength validation logic in DSAParameterGenerator . java to use BigInteger . ONE instead of BigInteger . ONE to improve code readability and maintain
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and updated related methods to use it in multiple classes to enhance
fix test failure in clientoutofmemoryhandlertest
replaced direct calls to ` getCmoObjectId ( ) ` with a new method ` getCmoObjectId ( ) ` across multiple shape classes to
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of selecting distinct scalar
refactor multiple Java files related to search functionality to improve code organization and maintainability
fix ( kubernetes - client ) : remove unused method from managedkubenetesclient
updated text setting logic in DetailsDescriptionPresenter and added new utility methods in Utils for media stream handling to improve code readability and maintainability by central
migrate tests from JUnit 4 to JUnit 5 in TestAuthHandlerBoot , TestRSAProviderTokenManager , and TestRSAProviderTokenManager to
added error handling for IOException and TransformerException in the generateSummary method in BugCollectionBugReporter and XMLBugReporter to improve robustness by logging errors
replaced direct calls to intPool . reset ( false , false ) with direct calls to bytePool . reset ( ) to simplify code by eliminating unnecessary
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated the API level check in ShadowWindowManagerGlobal . java to use TIRAMISU instead of S _ V2 to improve compatibility with
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 9090 : fix issue
added support for MSSQLDatabase in the foreignKey constraint handling logic to ensure compatibility with MSSQLDatabase ' s handling of foreign key constraints
hbase - 26464 fix typo in hstore . replacestorefiles ( )
[ pipe ] add a filtereventeventhandler to the pipebehavioremzuli so that it can be use by the pipeeventitem .
[ java ] add setlogging ( ) method to htmlidentifier to make it easy to configure the htmlidentifier .
[ flink - 18186 ] [ table - planner - blink ] fix hivelookuptablesource and hivelookupjoinitcase
[ java ] : fix thread leak when use wrong thread .
updated the SCHEMANAME string construction in SequenceSnapshotGenerator . java to use CatalogAndSchema for schema name filtering to improve clarity and maintainability of
updated color calculations in SpriteBatch , SpriteCache , LwjglDebugStarter , LwjglDebugStarter , and
fixed - rconnection . join ( ) return a batchpromise in redissonconnection # join ( )
added handling for HTTP and HTTPS base URLs in SolrLoggerServiceImpl . java to ensure only valid base cores are included in the statistic
updated method names from ` launchTask ` to ` launchTaskFromView ` in ` TaskActionController ` , ` TaskAdapter ` , and `
refactor MorfologikFilter to use a new ` DictionaryHolder . DEFAULT _ DICT ` resource instead of a wildcard import to improve code
updated sorting options from " stars " and " critic " to " community " and " critic " in GridFragment . java to ensure consistency in sorting
added imports and visibility setting for ListRow in CustomListRowPresenter . java to enhance user interface by visually indicating the status of the header
added a try - finally block around the switch statement in StressAction . java to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced calls to ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to improve code readability and maintainability by
add support for java _ time _ module in jsr310 serialization
[ hotfix ] [ log4j2 - client ] use slf4j instead of slf4j .
changed the type of mergedType from TypeBearer to Type in PhiTypeResolver . java to ensure type consistency and avoid potential ClassCastExceptions
removed unnecessary whitespace in CoinbaseTransaction . java for consistency to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and updated ` ProjectCommand ` to include ` forceBuildingWithBuck
added garbage collection of BusySpinIdleStrategy in Ping . java to ensure proper resource management and prevent memory leaks
replaced instances of ` ContentProvider ` with ` ContentResolver ` across multiple files to standardize the codebase by using ` ContentResolver ` instead of
removed redundant conditional checks in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in testinglogicalslot
added a new file ` RemoveCallsToSystemGc . java ` that implements a recipe for removing calls to ` System . gc ( ) `
removed redundant super ( ) calls from multiple exception classes to streamline code and improve maintainability
added a method to set the UIID in ScaleImageLabel to ensure the correct UIID is set for the image label
updated variable names from ' foundEntry ' to ' update ' in FeedUpdateService . java to improve clarity and consistency in variable naming
added support for both " - classpath " and " - cp " option in command - line arguments to ensure compatibility with additional command - line options
updated the link from " options = " nodeprecated " to " compiler = " nodeprecated " in the Avutil class to ensure compatibility with
updated the initialization variable from ` initialized ` to ` initialized ` in ` StorageService . java ` to ensure proper initialization of the storage service
refactor Test7196045 . java for improved functionality to enhance code readability and maintainability
updated density , decay , and decay values in ShaderParametersLightShaft . java to improve the visual quality of the shader parameters
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and updated the ` OidcRedirectActionBuilder `
added null checks for unique constraints in BaseTableDdl . java to ensure proper handling of null values in table alterations
updated permission checks in UsersAndGroupsSearchProvider and EditShareFragment to include a boolean for federated sharing to improve share handling logic based on user
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to provide a way to determine if document values are
improve javadoc for bufferalignmentinterceptor and bufferalignmentinterceptor
added a new method ` intForEach ` in ` Int2ObjectHashMap ` and updated the corresponding interfaces in ` Int2ObjectHashMap ` to
fix worldserver . setdata ( ` ` scoreboard ' ' ) to not share scoreboards early .
change return type of count ( ) method from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository
updated log level checks for MTree snapshot creation and logging in MManager . java to ensure that the MTree snapshot is only created when necessary
updated distance calculations in VectorUtil and TestVectorUtil to improve accuracy and accuracy of vector scoring calculations
added IRREVERSIBLE _ THRESHOLD constant and methods to manage the last confirmed block number in DynamicPropertiesStore and Manager classes to enhance the
replaced the ` setLocale ( ) ` method with ` Systems . setLocale ( ) ` in multiple activities to streamline locale setting logic and
added a condition to check if the database was created in LauncherClings and introduced a wasNewDbCreated method in LauncherProvider to
updated error message formatting and refactor collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability
added a null check for datamodel before setting is64Bit to avoid potential NullPointerExceptions when datamodel is null
added a thread variable and a check for the current thread in TestIndexWriterDelete . java to ensure that the test only runs when the current thread
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the closeDatabase method
updated imports from ` org . jellyfin . apiclient . dto . BaseItemPerson ` to ` org . jellyfin . sdk . api
added attribute setting functionality to the SVG element in BatikSVGDrawer . java to ensure the correct XML attributes are set for SVG elements
updated exception handling in ConsoleKeys . java to improve code readability and maintainability
added a new putExtra for " WaitForResult " in AndroidImplementation and modified waitingForResult logic in CodenameOneActivity to ensure proper handling of result
updated constructors in HitQueue , SpanPositionQueue , HitQueue , SpanPositionQueue , and HitQueue to use a Supplier < T > to
added widget description handling in WidgetCell . java to improve UI responsiveness by displaying widget descriptions when widget information is unavailable
added a maximum attribute count constraint to the Attribute class to ensure that the alias registration process does not exceed the defined maximum allowed attribute count
move predicatestest from com . hazelcast . query . impl . predicatestest to com . hazelcast . query . impl . predicates . impl
camel - 16457 : camel - default - header - filter should be case - insensitive
refactor inline and break logic in InlineLayout and Breaker classes to improve code readability and maintainability by using more descriptive variable names
refactor ` getView ` method to use ` @ NonNull ` annotation and improve null safety to enhance code robustness and prevent potential NullPointerExceptions
removed unused imports and modified the ` shouldInstrument ` method to include ` androidPackages ` and ` parentIsInstrumented ` method to streamline
added a null check for association before source in BrowserContentPane . java to ensure proper handling of insert destinations in the browser content pane
add memory limit file name to the command modifier test
replaced instances of ` CxxDeps . of ( ) ` with ` EMPTY _ INSTANCE ` in ` AbstractCxxDeps ` and added a static
added a null check for the rule parameter in JavaTestRule . java to improve error handling by throwing a HumanReadableException when the specified source is
add support for mc version in botania ' s proxy loader
removed unnecessary check for atIndex in StringUtils . java to ensure atIndex is non - negative before setting it to zero
increased timeout duration from 100 milliseconds to 500 milliseconds in TimeoutTest . java to improve test reliability by allowing more time for tests to complete
updated TaskOverlayFactoryGo constructor to accept a AssistContentRequester parameter to enhance flexibility by allowing the use of a custom AssistContentRequest
updated the method of obtaining the readable witness address to use encode58Check instead of createReadableString to ensure proper encoding of the witness address in the
updated DefaultMethodRegressionTests . java with new test cases to improve test coverage for default method behavior
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to ensure compatibility with the latest Kafka framework
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ` ExceptionThrowingTaskletStub ` and corresponding test cases in ` FaultTolerantException classesTests ` to
[ hotfix ] [ config ] provide more context in error message
added an ` Map < String , String > extraProperties ` parameter to multiple table configuration classes to enhance flexibility in configuring table configurations
added handling for in - progress segment metadata in PinotRealtimeSegmentsManager to ensure that segments are only added if they are in progress
added a check to return null if touchable is disabled in Table . java to ensure proper handling of touchables when touchable is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to verify the build
add a retryablehazelcastexception if the cache config be not create yet
added a method to check if a node package is installed in the JSweetTranspiler to ensure that the cache is only installed when the
added ManagedObject annotation to MBeanContainer and Destroyable classes to enable monitoring and management of MBeans in the application
changed the condition from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in ` LongClickableSpan . java `
replaced ` . equals ( " 0 " ) ` with ` . equals ( " 0 " ) ` for string comparisons to improve code readability
updated condition in ` mmm Types . java ` and added new classes ` T6558559b . java ` and ` ppp T6558
update player . print ( ) to include position set in the worldeditlistener .
camel - 14284 : camel - kafka should shutdown the consumer when the consumer be shutdown .
removed the default examples method from Schema . java to simplify the code and improve readability
modified thread interruption logic in AgentRunner . java to ensure proper handling of thread interruptions and improve error reporting
removed time column from dimensions and result in DefaultAggregationLoader , PinotDataSourceDimensionFilters , and PinotDataSourceDimensionFilters to ensure proper cleanup of
simplified the condition for shards in FacetComponent . java to improve code readability and maintainability
replaced references to ` LinkerProvider ` with ` CxxPlatforms ` in ` RustBinaryDescription ` , ` RustLibraryDescription `
added a ` name ` field with getter and setter methods to multiple properties in ` JaasAuthenticationProperties ` , ` JdbcAuthenticationProperties ` , and
updated CFGPrinterObserver , IdealGraphPrinterDumpHandler , and IdealGraphPrinterDumpHandler to handle null printer instances to improve error handling and
added support for small scan thresholds in BaseQueryPlan and related classes to enhance query performance by allowing configurable scan thresholds for point lookups
updated the string representation of RetryGatewayFilterFactory to include routeId and routeId in the RetryGatewayFilterFactory to improve clarity and consistency in the
replaced redisplay ( ) calls with callWidget ( REDISPLAY ) calls in LineReaderImpl . java to improve code readability and maintainability by
replaced ` onOverviewShown ` method with ` showForOverviewIfNeeded ` across multiple classes to improve clarity and maintainability of overview display logic
lucene - 1077 : fix checkindex . deleteallpointdocs ( ) to delete all point doc
updated the publish method from ` true ` to ` updateLastState ` in ZkController . java to improve clarity by using a more descript
updated string concatenation format in MetastoreDirectSqlUtils . java to ensure compatibility with multiple string literals
added a null value to the exp list in SpliteratorCollisions . java to ensure proper handling of null values in spliterator collisions
[ java ] add support for ` ` text ' ' and ` ` exact ' ' condition .
replaced multiple calls to ` do ` with ` while ` in ` ManyToManyConcurrentArrayQueue . java ` to improve code readability and maintainability
add support for forward - only fetch size in query engine
added a check for ClosedChannelException before sending 404 responses in HttpServerMultiplexChannelHandler . java to improve error handling and provide clearer logging
pdfbox - 4071 : initialize pdobjects list with an initial capacity of size of beads . size ( )
updated window radius calculation in QuickstepAppTransitionManagerImpl . java to support rounded corners on Windows to enhance user experience by allowing rounded corners to be
refactor DesktopTaskView to use View instead of ShapeDrawable and update thumbnail orientation handling to improve flexibility and maintainability of the code by allowing dynamic
refactor UpstreamCheckService initialization to use a new UpstreamCheckService instance to improve code readability and maintainability by encapsulating
[ java ] use debug log level instead of warn for immortal session
updated ZooKeeperHiveLockManager to return the locks object instead of throwing an exception to improve error handling by providing access to the locks
[ hotfix ] [ runtime ] fix typo in javadoc
added a condition to check if custom data is present before generating MIPmaps to ensure MIPMaps is only generated when custom data is
updated key and secret key assertions in DefaultMaskingFormatterTest to use ' secretKey ' instead of ' xxxxx \ ' to ensure consistency in key
added selectable property and methods to manage touch event behavior in List . java to enhance user experience by allowing selection of touch events when no items are
added a check for zero values in the field vector in LlapArrowBatchRecordReader . java to ensure proper handling of empty vector values in the
updated the handling of file separators in PolicyContext . java and added a test for file separator expansion in TestPolicyContext . java to improve code
changed the type of ` flatQueries ` and ` expandQueries ` from ` HashSet ` to ` List ` in ` FieldQuery . java ` to
refactor TLSRestrictions class for improved readability to enhance maintainability and facilitate future updates
updated KafkaManager to use a Runnable for closing the producer to ensure proper resource management and prevent potential memory leaks
added a new parameter " freedisk " to the assertNodeStateProvider method and modified the assertNodeStateProvider method to include ignorableNodeValues to
added a lock file for the workspace in RocksdbMavenPomCache . java to ensure proper resource management and prevent potential memory leaks
hbase - 2181 update minizookeepercluster to use iaddress instead of default port .
added a new method ` getResponse ` to the ` RestRestClient ` class and modified the ` getResponse ` method to accept a ` HttpURLConnection ` to
[ hotfix ] [ core ] use array . tostring ( ) instead of array . tostring ( )
updated loginStudent method from ` test _ STUDENT2 _ ACCOUNT ` to ` test _ STUDENT1 _ PASSWORD
added null check for mCurrentItem in EnhancedBrowseFragment , StdBrowseFragment , and StdBrowseFragment to prevent potential NullPointerExceptions during
increased the number of strings from 500 to 100 in TestSpecialOperations . java to allow more time for string processing
refactor : remove unused hexbyte ( ) method from wkbattributeio
corrected the spelling of " messageWithHeaderEntry " in the method name from " messageWithHeaderEntry " to " messageWithHeaderKey
added a method to check if a substate is direct substates in AbstractStateMachine . java to ensure that only direct substates are processed in the
added handling for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct equality checks for
added JoinOperation interface to PostJoinOperation class to enhance functionality by allowing join operations
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest ` to verify the behavior of Postgre
[ amq - 5035 ] fix amq5035test that fail on slow ci server
refactor AvaticaDatabaseMetaData class to improve code organization to enhance maintainability and readability of the code
updated MongoDbConnectionProperties to use ` @ DurationCapable ` for lifeTime , idleTime , maxWaitTime , and maxWaitTime to
updated the method call from ` MediaFormatFactory ` to ` SipActivator . getMediaService ( ) ` in ` SdpUtils . java `
refactor filter handling methods in FacetProcessor to return a boolean indicating applied filters to improve performance and maintainability of filter processing logic
added a new constant ` TIMEOUT _ HANDLER ` and modified the timeout handling logic in ` ShuffleHandler . java ` to allow configuration of
replaced hardcoded value of mQuickStepStartingRotation with a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code
updated logging statements in XPathBuilder , XQueryBuilder , and XQueryBuilder to use debug log statements to improve log readability and provide more detailed debug information
[ hotfix ] [ table - planner - blink ] use dataresource instead of class . getclass ( ) .
add a new test class EdgeCasesTokenizerTest for testing the tokenizer functionality to ensure that the tokenizer behaves correctly with escaped back slash characters
added error handling for missing ' atlas ' property in AtlasTmxMapLoader . java to ensure that the ' atlas ' property is not
camel - 14265 : camel - spring - boot : remove property placeholders helper from camel - core
replaced ReceiveSource with levelDbDataSource . closeDB ( ) in BlockchainTest . java and removed unnecessary ReceiveSource instantiation in KafkaTest . java
refactor code to use a new method for retrieving lines from a list instead of splitting strings to improve code readability and maintainability by using a
[ int - 139 ] fix checkstyle violation in camel - core
replaced ImmutableList . Builder with List in ProjectableSQLQuery , SQLBindings , and AbstractSQLClause classes , and added logging for deprecated SQLBindings constructor
added a check for the Java VM name in the VirtualMachine class to ensure compatibility with OpenJDK environments
added a keepAlive flag to the baseUrl setting in ReactorClient . java to improve performance by reducing unnecessary connection attempts
replaced string " a _ position " and " a _ texCoords " with a new POSITION _ ATTRIBUTE in MD5Renderer and Obj
camel - 16297 : camel - spring - boot : add support for property component in defaultcamelcontext
refactor null check for accountCapsule in UnfreezeBalanceActuator . java to improve code clarity and prevent potential NullPointerExceptions
updated version from 0 to 1 in XMPPServer . java to reflect the new release status
replaced direct calls to ` t ` with ` t . unannotatedType ( ) ` for consistency to improve code readability and maintainability
updated assertions in StorageGroupProcessorTest to use a new variable for seqTsFileSize and setSeqTsFileSize to improve code read
added environment - specific DumpableCollection to multiple classes and modified dumping methods to include environment - specific information to enhance debugging capabilities by providing additional environment
added a new parameter ` waitbeforestart ` in ` FFMpegVideo . java ` to set the waitbeforestart value to 2
removed the ` _ skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor and related classes to simplify the constructor and eliminate unnecessary
updated test cases in AccessorsTest . java and added new test methods in AccessorsTest . java to improve test coverage and ensure correct
add a method to compile a method that return a framemap instead of a structuredgraph
updated DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ` @ ConditionalIgnore ` instead of ` @ Ignore ` to enable
fix a bug where the water block be n ' t block water . close # 243
updated string representation in Directory and added a new getLockID method in RAMDirectory to enhance readability and maintainability of the code
removed the allowExperimentalOptions ( ) method from the Launcher class to simplify the conditional check for experimental options
added methods ` then ` and ` then ` in ` BDDAssertions . java ` to provide utility functions for assertions to enhance flexibility in
updated variable names from ` hp ` to ` hostField ` in ` ForwardedRequestCustomizer . java ` and ` ForwardedRequestCustomizerTest
changed log level from debug to warn for Kubernetes config files to provide a warning message when a non - desired file is not available
added handling for OCFile upload status in UploadListActivity to improve user experience by allowing users to cancel uploads based on upload status
added a new ProviderLoader class and refactored ProviderManager and TerminalManager to use a dedicated ProviderInstaller class to improve code organization and maintainability
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor . java ` and ` StreamEnvironmentPostProcessorTests . java `
updated SelectFromDatabaseChangeLogHistoryService to use ColumnConfig instead of hardcoded values to improve flexibility and maintainability of the change log selection
hhh - 14258 - remove @ generatedvalue annotation from auto - generated test
do n ' t calculate partition count if there be no data member
added error handling and logging for scheduling start logic in ExecutionScheduleManager , ExecutionSchedulerImpl , ExecutionSchedulerImpl , ExecutionSchedulerImpl , and ExecutionScheduler
removed the ` toString ( ) ` method from the ` InlineBox ` constructor and added a conditional check for ` blockParent ` to simplify the code
[ hotfix ] [ runtime ] fix checkstyle violation in statisticmap
updated the slide end value from 383 to 500 in TabletSplitToConfirmTimings . java to reflect the correct slide end duration
updated button name from " [ accent ] " to " commandmode . name " in WaveInfoDialog . java and PlacementFragment . java to
added a condition to check if the plot area is owned as a plot area to ensure proper handling of owned plots when the plot area is not
added a new test method ` setTouchExplorationEnabled ` to ` ShadowAccessibilityManagerTest ` and modified ` ShadowAccessibilityManager ` to use
pdfbox - 5328 : fix a bug in cmapsubtable . getcharcodelookup ( ) ( # 5328 )
remove unnecessary ` ` new stringproperty ( ) ' ' call from testelementproperty ( )
pdfbox - 4071 : use create ( ) instead of create ( ) in testnpidefsfilesystem ( )
added imports for PS and updated plot area retrieval logic in Move . java to enhance functionality to retrieve plot areas based on user input
updated regex pattern in TestWebHCatE2e . java for version matching in TestWebHCatE2e . java to ensure correct
updated the condition for the count check from ` count ` to ` count ` in the Filters class to ensure that the count does not exceed the
fix issue with consumer id in kafka consumer processor
added a check for the existence of IsolatedClassLoader in JavacCompiler . java to ensure proper error handling and provide clearer feedback on execution
do n ' t repaint the view when the selected index change .
camel - 14263 : camel - spring - batch - fix typo in spring - batch - producer
added a method ` isAnimationFinished ` to check if the animation is finished to provide a way to determine if the animation is finished based on the
added a new test method ` testCustomFavIcon _ With _ LineBreaks ` to the ` LoginMockMvcTests ` class to ensure
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified the ` setRefreshingText ` method in `
ggb - 221 add space to the list of space in the equation
refactor ObjectHashSet methods for improved performance to enhance performance and maintainability of the code
refactor null checks in DataUtilities . java to use Arrays . equals for better readability and performance to enhance code clarity and maintainability by reducing
mc - 12770 : allow for deletion of enchanted books ( mc - 12770 )
[ microprofile ] add unit test for asyncresource . get ( ) and asyncrequest ( )
rename ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP ` and update related
added logging for send failures in MailService . java to improve error handling and provide more informative logging for send failures
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItemView `
added unit tests for partition retrieval methods in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct functionality of partition retrieval with multiple batch
added a closing brace in FileListListAdapter . java to improve code readability and maintainability
changed data types from ArrayList to List in OCFile . java and OCFileListAdapter . java to align with Java ' s data structure
updated the method call from ` getChildAt ( getChildCount ( ) 1 ) ` to ` getChildAt ( getChildCount ( ) - 2 ) ` in ` Bubble
updated the visibility of " org . eclipse . jetty . websocket . util . server . internal " from " org . eclipse . jetty . server .
change the default value of the S3Request constructor from true to false in S3Request . java to simplify the initialization of the S3Request
fix npe in jfxradiobuttonskin when timeline be null
updated the condition in DeweyNumber . java and added a new test case in DeweyNumberTest . java to improve error handling and
updated the format of the CATEGORIES FOUND string in MwVolleyApi . java to replace " Category : " with a
updated assertion messages in WebSocketClientTest . java from " Invalid close control status code code 1111 " to " Invalid close code code 1111 "
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestVirtualWebappLoader to ensure proper handling of
remove duplicate code in PersistentAttributeTransformer . java to improve code readability and maintainability
pdfbox - 4071 : avoid classcastexception in pdfbox - 4071
added a new file ` TestPorterStemFilter . java ` to test the functionality of the ` PorterStemFilter ` class to ensure the correct
hbase - 24286 indexer do n ' t write index update if the minibatchoperation be successfully write .
updated package names from ` exlore ` to ` explore . support ` across multiple test classes to align with the new project structure for better organization
added synchronization to the chat window manager to ensure thread safety when accessing chat rooms
removed the ` Sys . touch ( ) ` call from multiple classes to streamline the code by eliminating unnecessary touch calls
added " - mardu " command to HG _ CMD _ TEMPLATE and modified the ` untrackedFiles ` method implementations to
camel - 14284 : camel - netty - use hashedwheeltimer instead of hashedwheeltimer in camel - netty
changed variables from ` intensity ` to ` final ` for ` Vector3 ` and ` position ` in ` DirectionalLight ` , ` PointLight
updated width and height calculations in X11GraphicsConfig and WGLGraphicsConfig to use a maximum value of 1 instead of target . getWidth ( )
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and ` DelegatingSecurity
added a new class ` AnnoFilterTreeSet ` and modified the ` findAnnotatedClassesThatExtend ` method to accept a ` innerClasses `
updated length validation logic in BytesColumnVector . java to handle integer overflow and maximize size of the next smallBuffer to ensure proper handling of overflow cases
updated assertions in WriteBehindMapStoreWithEvictionsTest to use AssertTask for assertions to improve test reliability by ensuring the count store is
updated the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` XTextArea
[ ggb - 147 ] add isequal ( polyfunction ) method to polyfunction .
added a null check for the table before setting the column class to avoid potential NullPointerExceptions when the table is not initialized
added error handling for ClassCastException when creating CustomChange instances to improve robustness by catching potential ClassCastExceptions during instantiation
refactor ` DistBuildConfig ` and ` RecordingFileHashes ` classes to use ` DistBuildConfig ` instead of ` ConfigPath
change the default value of ` ` double entry ' ' from ` ` default ' ' to ` ` false ' ' in ` ` export warning '
added JUnit Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests that are not ready for execution
change return type of ` doJoin ` method from ` void ` to ` boolean ` in multiple classes to indicate success or failure of join operations
removed the getAutodeps ( ) method from JavaLibraryDescription . java to streamline the code by eliminating unnecessary dependencies
updated intent flags in LauncherTimelineCursorAdapter . java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure proper handling of new tasks
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide a way to check paging order based on the
updated repository URLs from 0 to 2 in RepositoryConventionPluginTests . java to ensure correct repository URLs are used for the latest version
added a new AffiliationTask class to manage a new Affiliation task to facilitate the execution of the Affiliation process in the pubsub
add error message for invalid uris in taglibraryinfoimpl
changed the access modifier of the ` buildUserProfileByClassCompleteName ` method from private to public to allow access to the method from other classes
refactor ` CacheKey ` and ` CacheKeyTest ` classes to improve array handling to enhance code readability and maintainability by reducing redundancy
add getfiletypedetector ( ) method to unixfilesystemprovider . getfiletypedetector ( )
added a call to close the WebSocket session in TestWsWebSocketContainer . java to ensure proper resource management and prevent potential memory leaks
refactor ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to use ` VirtualSensorDirectChannelCallback ` instead of ` Shadow
added a condition to check if the contextBeforeExecution is not equal to the contextBeforeExecution in HttpSessionSecurityContextRepository to ensure that the security context
rename ` lch ` to ` loopback ` in ` NetUtil . java ` and update related logic in ` NetUtil . java ` to
rename constants and variables from BUF _ SIZE to DEFAULT _ BUF _ SIZE and  inflate _ tmpbuf in Zlib . java to improve
added secure validation for referent in KeyInfoReferenceResolver , modified exception handling in TransformXPath , and TransformXPath to improve validation logic and enhance error
added a boolean variable ` iconChangeListenerInstalled ` and modified the handling of ` iconChangeListenerInstalled ` to ensure that the listener is only updated when necessary
added Russian language support to the Language class to enhance language support for Russian - speaking users
hhh - 14258 fix typo in basesqmtosqlastconverter . getduration ( )
disable state verification in substrategraphkit
added configuration properties for prior SDKs and resourcesMode in RobolectricTestRunnerTest . java and reset system properties in TestUtil . java to
added " org . slf4j . LoggerFactory " system class to ViewClassLoader and corresponding unit tests in ViewClassLoaderTest to ensure proper loading of the
updated the handling of Maven packaging in ChangePackaging . java and added a test for removing default packaging in Xml . java to ensure proper handling of
[ java ] download file with ` ` txt ' ' extension instead of ` ` ' '
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the buffer
replaced instances of ` defaultUnits ` with ` preferredUnits ` in ` JogService ` , ` Settings ` , and ` JogStatusLine
updated the expected date format in DatePatternConverterTest to use UTC and added timezone handling to ensure correct date formatting and formatting in tests
reformatted the return statement in Terminator . java to improve code readability and maintain consistency
updated IOException messages to include additional context for file URIs and improved error handling in FileSystem and LocalFileSystem classes to enhance debugging by providing clearer error
use jabrefexecutorservice . submit ( ) instead of executorservice . schedule ( ) in jabrefframe . java
[ hotfix ] [ test ] fix ftpreconnectattemptserverstoppedit fail on slow machine
replaced ConcurrentHashMap with ConcurrentSkipListMap in KeyedProperties . java to improve concurrency handling for keyed properties
added ` ignore ` method to ` JavaUtilLog ` , ` Logger ` , ` Logger ` , and ` StdErrLog ` classes to provide
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
removed unnecessary type casting for item and contents in BukkitWorld . java to simplify code and improve readability
removed unnecessary image cleaning in PanelManager . java to streamline image processing by eliminating unnecessary images
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing unmaps to facilitate the management of MMapDirectory and SimpleFS directory configuration
pdfcleanupprocessor : add null check for cleanUpcolor to avoid npe
corrected the variable name from " field1 _ s maxDocFreq " to " field1 _ s maxDocFreq " to ensure consistency in
refactor ExtendedOperatingSystemMXBeanImpl . java for improved readability to enhance maintainability and facilitate future updates
added a method to install left commands and modified the handling of left and right commands in SideMenuBar to improve command management and ensure correct title bar status
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` setUpWindow ( ) ` calls in ` TweetActivity `
added support for SybaseDatabase in the DropPrimaryKeyGenerator to ensure compatibility with SybaseDatabase in addition to FirebirdDatabase
refactor Client class to improve code organization to enhance maintainability and readability of the code
[ java ] call notifyleaderready ( ) instead of reset the lastrecordingposition in sequenceragent .
replaced invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and added shouldDelayChildPressedOrFocusedIcon
added a return statement to the NearCachedClientMapProxy class to ensure proper termination of the method execution
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added error handling for server startup in ListenHTTP . java to improve robustness by handling potential exceptions during server shutdown
camel - 15836 - camel - aws2 - s3 : fix checkstyle issue in camel - aws2 - s3
[ hotfix ] [ runtime ] use task _ manager _ id _ key instead of parameter _ TM _ ID in webmonitor metrics handler
upgrade226to227 : do n ' t drop key that do n ' t exist in 2.1 . 7 version of the database
added a new test class ` TestThriftCLIServiceSecurity ` and modified the password handling in ` TOpenSessionReq ` to ensure that the password
added maxEnergyLimit variable and updated energy limit assignment logic in VMActuator . java to ensure accurate energy limit configuration for constant calls
added maxInMemorySize property and its getter / setter methods to HttpClientProperties to allow configuration of the maximum in - memory size for improved performance
refactor Cache class for improved performance to enhance performance and maintainability of caching mechanisms
added two new Cucumber test classes , RunCucumberTest , StepDefinitions , and StepDefinitions to implement Cucumber testing capabilities for
added error handling for parsing double values in TypeJsonUtils . java and updated test cases in TestArrayOperators . java to improve robustness by
removed redundant initialization of byte arrays in Utf8StringBuilderTest . java to streamline code and improve readability
refactor parameter handling in Params . java to utilize isParamSet method to improve code readability and maintainability by consolidating parameter
camel - 14297 : camel - loadbalancedefinition should throw an exception if there be too many output
updated the maximum buffered documents configuration in TestIndexWriterExceptions to ensure that the document frequency does not exceed the maximum allowed limit
replaced instances of ` String ` with ` Sha1HashCode ` across multiple files to simplify hashing logic by using ` update ( ) ` instead of
[ hotfix ] remove unused method from asmruntime . java
added new biome tags to the ForgeBiomeTagsProvider class to enhance the functionality of forge biomes in the ForgeBiomeTagsProvider
refactored imageloader to use threadfactory instead of thread . start ( )
[ hotfix ] [ table - planner - blink ] add initcustomvariables ( ) method to basetableupsertmetadatamanager
updated strings from "             
replace ` getImage ( ) . equals ( vid ) ` with ` hasImageEqualTo ( vn ) ` in ` AbstractSunSecureRule
camel - 16297 : jbang - add -- repos to jbang run command
added handling for NaN values in CrawlDbReader . java to improve robustness by avoiding potential null pointer exceptions
added a cleanup method to the target file in OnStartupTriggeringPolicyTest . java to ensure proper resource management and prevent memory leaks
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor ` and modified focus handling in ` FindAction `
[ hotfix ] [ test ] fix checkpointscleaner to clean up the checkpointscleaner
added a new file XPathWhiteSpaceTest . java to test XML schema creation to ensure proper handling of whitespace in XML files
[ te ] do n ' t override trie log layer with rollback not override trie log layer
refactor FilledNewArrayInstruction class implementation to improve code readability and maintainability
[ hotfix ] [ test ] increase timeout for simplenetworktest
updated path validation logic in OCFile . java to use endsWith instead of equals to improve accuracy in determining if the parent path ends with a slash
added a print statement to log the error when loading the skin file to improve visibility into the loading process of the skin file
added markDirty ( ) and isValid ( ) methods to LgoLevel2BatchSubscription and initialized dirty state in LgoGroupedLevel2Update
replaced instances of ` new Result ` with a static final ` UNDEFINED ` instance in ` Result . java ` to improve code readability and maintain
changed exception handling from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure proper exception handling for NullPointerExceptions
add check for jet service in uploadjobmultipartoperation to check if jet service be not enable
[ hotfix ] [ table - planner - blink ] do n ' t throw ioexception when recover data
[ bugfix ] add summarylevels . ignoringchild ( ) and summarylevels . of ( nodemodel ) method to summarylevels
changed the ` pos ` variable from ` volatile ` to ` sizeMask ` and modified the ` ensureAvail ` method to use a more
added JUnit @ Ignore annotations to ChaosMonkeySafeLeaderTest , RecoveryZkTest , and ChaosMonkeySafeLeaderTest to
replaced the use of ` targets ` with ` endpoints ` in the ` StorageProxy ` class to simplify the code and improve readability by using a
[ hotfix ] fix typo in filemanager
updated TransformFunctionType and TransformFunctionFactory to include additional transformation function types to enhance flexibility and maintainability of transformation functions
add javadoc for element . getname ( ) and element . getEnclosingelement ( )
updated RFC3280 and RFC5280 from " RFC3280 " to " RFC5280 " across multiple Java files to ensure compliance with RFC
updated the version number from " 2.13 . 3 " to " 2.13 . 4 " and changed the type casting in SearchAnnotationVisitor to
replaced ` HashMap < Integer , Boolean > ` with ` SparseBooleanArray ` in ` ListActivity ` , ` ListActivity ` , and ` Note
removed unnecessary else statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener and added a test for absolute resource defaults in ConfigFileApplicationListenerTests to improve code readability and ensure
added context parameter to PreviewPositionHelper and updated PreviewPositionHelper initialization in TaskViewSimulator and TaskThumbnailView classes to improve context handling and
[ java ] do n ' t publish new leadership term in election when there be no leader
pmd coverage test : add error stream log to test
refactor ByteArrayInputStream to use a variable ' avail ' instead of ' pos ' for better readability and maintainability to improve code clarity and ensure
simplified the condition for showing the changelog in UpdaterTask . java to improve readability and maintainability of the code
changed the visibility of MAX _ HEADERS from final to public and added a conditional check for the size of the block headers to allow access to the
added " rt . jar " to the list of standard LIBRARIES in the STANDARD _ LIBRARIES list to include the rt
[ java ] remove unnecessary de - framer creation in abstracthandshakehandler
map heterogeneous granules to the catalog configuration bean instead of hardcoded string .
added a condition to check if the response is committed before sending an error to improve error handling by logging a warning when the response is already committed
refactor condition checks in HttpSession . java for improved readability to enhance code clarity and maintainability by reducing redundancy
updated fadeOutFakeTaskView from true to false and added support for new feature flags in GestureTutorialController and SwipeUpGesture
fix the prefab serialization log to warn instead of info
replaced the creation of ScimGroupExternalMembershipManager with a direct addition of " internal . superuser " and " internal . superuser " to
updated the calculation of thirtyDays in FreezeBalanceActuator . java and added a validation check in TransferActuator . java to ensure
updated the index calculation in FileResolverTestBase . java to use File . separator instead of a hardcoded slash to ensure compatibility with different operating systems
do n ' t show command error if there be no soft input
updated description retrieval in GpsMainActivity and AnnotationViewFragment to use session description instead of a hardcoded string to improve code readability and
added a conditional check for the number of pages in JsoupNonVisualRegressionTest . java and modified the assertion in JsoupNonVisual
update androidnativebufferallocator to use androidnativebufferallocator instead of androidbufferallocator
added checks for the start of " ! " and updated flag handling logic in Main and PrimaryItem classes to ensure correct parsing of flags based on their
added noPMD comment to JDBCHistoryCache . java to indicate that the executeQuery method is no longer needed
change item _ item _ use _ grant _ select _ retract to item _ use _ grant _ select _ retract
[ hotfix ] [ test ] fix test failure in queueprioritytest
[ bugfix ] [ test ] remove unused test in affinityapitest
added null check for command and help arguments in Main . java to ensure help is printed correctly when no command is provided
[ java ] increase lightoutputstream capacity to reduce memory usage .
changed the visibility of the Scanned class from static to public to allow access to the Scanned class from other packages
modified the ` showBlank ` flag in ` ClassWriter . java ` and added a new class ` T8032819 . java ` to
replaced Assert . hasLength with Assert . hasLength in Person . java to ensure proper validation of the parameter ' p . sn '
added null check for file extension in VirtualFile . java to ensure robustness by preventing potential NullPointerExceptions
do n ' t return the right button menu if the right button menu do n ' t exist
[ hotfix ] fix checkstyle issue in simpleslot and slotsharinggroupassignment
simplified the calculation of the screen index in InstallShortcutReceiver . java to improve code readability and maintainability
refactor PlainSocketImpl to use SocketImpl instead of direct type casting to improve code readability and ensure proper resource management
added functionality to clear removed items from the media details in BookmarkListRootFragment and MediaDetailPagerFragment to enhance user experience by allowing users to
updated log message from " in - view center of element " to " in - view center point " to clarify the purpose of the log message
added a new file ` bug4865918 . java ` to implement a GUI test for scrollbar behavior to verify that the scrollbar block increment is
removed the VelocityEngine initialization from ADKerberosOperationHandler . java to simplify the code and improve readability by eliminating unnecessary initialization
replaced specific imports with a wildcard import and added group triggers handling in QuestCommand . java to streamline imports and add group trigger
fix issue where user can not select account file from database
added Lombok ' s ToString annotation to PartitionChangeEvent , TbApplicationEvent , and TbApplicationEvent classes to improve code readability and
added config _ uri constant to cloudservice . io
removed viewport component and JScrollPane from BrowserPanel . java to streamline scrolling functionality by eliminating unnecessary components
updated key codes in LwjglInput , LwjglInput , ParticleEditor , Layout , and TWL classes to improve
added a conditional check for ` moreIndexingFilter . indexMimeTypeParts ` before retrieving parts to enhance flexibility in handling MIME types based on configuration
added a regex pattern for author formatting in JSDoc . java to improve the handling of author lines in comment statements
updated metric constants from " DELTA _ TOTAL _ DATABASES " to " CREATE _ TOTAL _ PARTITIONS " and "
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillMetaStoreClient and SchemaConfig instead of tableList to improve schema management and error handling
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap ` parameter and added error handling in the ` LoginPageGeneratingWeb
updated Hijrah date format from " Hijrah - umalqura " to " Islamic Umm al - Qura Calendar " to
updated the supported condition in WebAudioWrapper to include browser compatibility to ensure compatibility with both IE and Firefox browsers
added a new method ` appendInterceptor ` to ` GrpcServerBuilder ` and removed the private constructor in ` InterceptorConstants ` to enable interceptor
added default charset to the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with the new database schema requirements
updated method calls in WriterRecordBatch and StreamingAggTemplate classes to improve code readability and maintainability
[ hotfix ] [ runtime ] remove allocationtimeout from executiongraph
added a boolean flag ` hasFrom ` to the ` Delete ` class and modified ` DeleteDeParser ` , ` DeleteDeParser ` , and
changed the status check from ` isSuccess ` to ` isMultiStatus ` in ` SynchronizeFolderOperation . java ` and updated related methods accordingly
refactor ` applicableListTests ` logic into a separate method ` applicableListTests ` to improve code readability and maintainability by reducing duplication
updated the regex pattern for logLine in LogAnalyser . java to include additional characters to enhance the accuracy of log parsing by allowing additional characters
camel - 14265 : camel - integration - integration - integration - integration - integration - integration - integration - integration - integration - integration - tests
fixed - redissonsearch . score ( ) method should not be inclusive and exclusive
refactor CCLicenseStep to use generics for improved type safety and readability to enhance type safety and maintainability of the code
added a null check for ` ifcRoot . getGlobalId ( ) ` before adding it to the ` guidIndex ` map to avoid potential
updated comparison logic in OptionalAssert to use objects . getComparisonStrategy ( ) instead of equals ( ) to improve accuracy in comparison comparison logic
do n ' t set the lmb in the memory when there be no lmb
added a new file TestArrayCopyToFromObject . java to test array copying functionality to ensure proper exception handling for array copying operations
updated string concatenation for Python paths in BuckPythonProgram . java to ensure consistency in path handling across different operating systems
[ java ] fix checkstyle violation in ajpprotocol
add a new method ` findfiles ( modcontainer , function , function ) ` to the forgehelper . findfiles ( modcontainer , function ,
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test case due to unstable test cases
added a null check for the exception before invoking doRequest ( ) in TestInternalInputBuffer . java to prevent potential NullPointerExceptions during request processing
updated the ` autoloadCall ` method to include a ` lowerName ` parameter and modified the ` autoloadLocks ` method to accept a
removed unused imports and updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController classes to streamline server version comparison logic and improve
replaced instances of " final " with " localhost " in multiple files to ensure consistency in host naming conventions across the codebase
modified the Jsr250Voter to conditionally return ACCESS _ DENIED based on the jsr250AttributeFound flag to
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability
added a new constant HS2 _ PROXY _ USER and modified session parameters handling in ConnectionFactory . java to improve clarity and maintainability of
camel - 16297 : camel - snappy - add support for compression codec in hdfsproducer
added a delay of 1000 milliseconds in HttpClientTest . java to ensure proper synchronization during test execution
[ bug - 64836 ] fix bug # 648 , remove cell value from multi - cell formula .
pdfbox - 4071 : fix bug with multiple whitespace character in font layout
[ java ] remove istio dependency from istio integration test
replaced calls to ` ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . getPlaybackManager ( ) . getPlaybackManager (
patch by jbellis ; review by brandonwilliams for cassandra - 151
[ hz - 2296 ] fix maploaderhittingeviction on initial load
updated the return statement in ResponseFlag . java to correct the logic for bitwise operations to ensure proper handling of bitwise operations
[ dspace ] add read policy to fix default policy when there be no community
added SoftReference for cached CompositeFont instances to improve memory management and avoid potential memory leaks
modified the calculation of prefHeight to set a default value of 0 to ensure prefHeight defaults to zero to prevent potential null pointer exceptions
drools - 4071 : dmn message should be an empty string instead of an empty string
removed unused imports from multiple Java files to streamline code and improve readability by eliminating unnecessary dependencies
changed the access modifier of ` finishRunningRecentsAnimation ` method from private to public and updated execution logic in multiple classes to allow external access to
added null checks for node IDs in ElementFactoryImpl and improved edge type handling in ImportContainerImpl and ImporterGDF to ensure robustness
[ beam - 10220 ] fix npe in fnapicontrolclient and fnstategrpcclientcache if responsefuture be null
nifi - 129 : fix flowfile . createsession ( ) to use sessionfactory . createsession ( ) instead of sessionfactory . createsession
updated the calculation of the closest core in the Teams class to use Mathf . dst2 instead of Geometry . findClosest to improve accuracy of
added a check to skip copying content - length into requests in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to
updated type handling in Java2TypeScriptTranslator and added new test cases in Literals and Literals classes to improve type safety and ensure correct evaluation
updated filter dimensions and sample sizes in multiple classes to improve filtering accuracy and performance to enhance user experience by optimizing filter configurations
hbase - 26464 add - allregions command line argument to Canary . runallregions ( )
[ hotfix ] [ cassandra ] remove node . environment from cassandra connector
added a call to resetCursorPosition ( ) in KahaDBStore . java to ensure the order index is reset before further operations
added minimum width and height adjustments in CallDialog and OneToOneCallPanel to ensure frame dimensions do not exceed defined limits
fix world gen loss of state information during world gen
updated test cases in TestHTTPSamplersAgainstHttpMirrorServer . java to use static variables instead of hardcoded values to improve code
added null check for kerberosPrincipalEntity before removing it from entityManagerProvider to improve robustness by preventing potential NullPointerExceptions during entity removal
removed the ' true ' parameter from the getTableSnapshot method call in StatsOptimizer . java to simplify the method call by eliminating unnecessary parameters
[ java ] catch throwable in apr / apr / apr / apr / apr / apr / apr / apr
updated the error message in AndroidGradleBuilder from " Service & Apis " to " Monetization setup " to clarify the purpose of the
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` in ` DLNAResource `
[ drools - 4071 ] add support for ` ` loot - inf . classes ' ' and ` ` loot - inf . classes '
added an assumption to the CheckIndexTest class based on the version of the Runtime . version ( ) to ensure compatibility with newer versions of the
removed the parameter ` mContext ` from the ` assignTargetsForSplitScreen ` method in ` AbsSwipeUpHandler ` and ` RemoteTargetGluer
refactor LeaderLatch class to improve code organization to enhance maintainability and readability of the code
added methods to init Zksnark parameters in SolidityNodeHttpApiService . java to enable the initialization of Zksnark parameters
refactored confidence type handling to use a dedicated method for setting depth in blocks to improve code readability and maintainability by reducing redundancy
added a new method ` createMediaRecorder ` to ` CodenameOneImplementation ` and updated related methods in ` Location ` , ` Location ` ,
set default platformName to " ios " in JavaSEPort . java to ensure platformName defaults to " ios "
refactor PageEditClient to improve code organization to enhance maintainability and readability of the code
fix checkstyle issue in graphics2d . java
refactor CreateVisibleSignature class to improve code organization to enhance maintainability and readability of the code
added error handling to the nextOutgoingFrame method in AbstractExtension . java to improve robustness by logging exceptions when the callback is not found
updated security checks in ContextHandler . java to use AccessController for accessing the caller class to improve security by preventing unauthorized access to the caller
added functionality to retrieve and update child categories in CategoryREST . java to ensure proper parent - child categories are reset after processing
updated the dialog to display a title based on the contribution type to improve user experience by providing a more descriptive title for the contrib manager
added a new ` vwap ` BigDecimal to the ` Ticker ` class and updated related methods to include it to enhance the Ticker functionality
added functionality to manage and manage the absence of widgets in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to enhance user experience by
[ rendergraph ] add render graph api to the worldrendererimpl and add it to the render graph api
added a color setting for the primary theme in NCFirebaseMessagingService to enhance the visual appearance of the application
refactor ShadowUsbManagerTest . java for improved test coverage to enhance reliability and maintainability of test cases
updated training percentage calculations in AbstractDifferenceRecommenderEvaluator and added logging in AverageAbsoluteDifferenceRecommenderEvaluator and RMSRecommenderEvaluator to improve evaluation
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration updates correctly
updated bounds calculation in AndroidGraphics . java to use Math . max ( 1 , strokeWidthUpperBound ) instead of a hardcoded value to ensure
updated iteration order from HashMap to LinkedHashMap in multiple Java files to ensure consistent iteration order across the codebase
replaced ClosureManager with ClosurePool for closure management in NativeClosureFactory . java to improve code clarity and maintainability by using a more descriptive
chore : migrate routetest to junit5 and camel - jupiter - api
added new files WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java and WebsocketPluginTest . java to implement and
[ azeckoski ] remove unnecessary dsm . getservicebyname ( ) method from dsm
refactor authentication equality check into a separate method ` isAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by reducing du
added a conditional check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to
refactor method calls from ` getType ( ) ` to ` callNodeType ` in ` CodeGenerator . java ` to improve code readability and maintain
added @ Insecure annotation to MessageBuffer and updated MessageBuffer class to improve security by restricting access to specific methods
added new configuration variables for Hive configuration parameters in HiveConf . java to enhance flexibility in configuration options for Hive operations
set scopes and policies to a new HashSet in ResourceSet . java and added null checks in DefaultResourceSetService . java to ensure consistent iteration order
modified the ` decrefOnClose ` variable to be final and modified the ` MultiReader ` constructor to accept an ` IndexReader ` parameter to
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
alexeibarantsev : fix test that fail on slow ci server
refactor Gson classes to use ` final ` instead of ` $ Gson $ Types ` to improve code clarity and enforce immutability for type argument
changed the return type of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Values in Int2IntHashMap .
added a duration parameter to the FlipTransition constructor and modified motion motions to include a duration parameter to enhance flexibility by allowing dynamic adjustment of the
removed logging for not setting subsAreValidForStreaming in DLNAResource . java to clean up the code and reduce unnecessary logging
update major and minor version in forgeversion . java to reflect new release .
[ hotfix ] [ runtime ] add support for multi - release JARs in runtime environment
added new Java 14 and Java 16 validators to the parser configuration to support additional Java features in the parser
updated background padding settings for replies in ExpansionViewHelper . java to accommodate more than one replies to improve layout responsiveness and ensure proper padding
[ java ] make partitionbackupreplicaalientropytask return a response if no callback be available
added metadata management in SeedUrl , SeedResource , and SeedUrl classes to enhance the seed URL functionality by allowing dynamic metadata retrieval and
added a null check for the declaration before creating a Pattern instance to avoid potential NullPointerException when the declaration is null
refactor TestCoprocessorWhitelistMasterObserver . java to improve code readability and maintainability
[ ww - 4071 ] add package name to annotationactionvalidatormanager . getname ( ) .
updated assertions in IterableTest to handle null values and added a new test for the containsExactly method to improve type safety and ensure proper handling of
added multiple stream methods to MapIterable , PrimitiveObjectMap , and MapIterableTestCase classes to enhance functionality for streaming and parallel data structures
modified the return statement to clone the notifInfo object to ensure that the original notifInfo is not modified when returning it
refactor command key comparison logic in AppW . java to improve readability and maintainability of the code
refactor AEADBlockCipher class implementation to improve code readability and maintainability
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap ` classes
added null check for resource ID in PackageResourceTable and changed default resource mode from best to legacy in RobolectricTestRunner to ensure proper resource
added a conditional check for ` ulSize ` and ` ulPos ` before retrieving ` upem ` in ` TrueTypeFont . java ` to
updated SignPlugin constructor to accept a new ` HttpMessageReaders ` parameter and modified the constructor to accept a ` ServerCodecConfigurer ` to enhance
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
removed unnecessary dependency on MavenDeployer in StandardMavenAuthenticationProvider . java to streamline the authentication process by eliminating unnecessary dependencies
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
added SSL context initialization and improved exception handling in LinkyHandlerFactory and EnedisHttpApi to enhance security and provide clearer error messages for
refactor HiveFunctionRegistry to use Stream and Stream for better performance to improve code readability and maintainability by utilizing stream operations
fixed typo in xarecovery and xarecoverybrokertest
updated the method signature of ` getBuildTargetForAlias ` to include a ` possiblyFlavoredAlias ` parameter and modified the return statement accordingly to
[ olingo2 ] fix npe in olingo2consumer when there be no entry
hive - 24186 : fix the issue of hive version in metastoreschemainfo . getshortversion ( )
cloudstack - 10297 : do n ' t advance expunge for vms that do n ' t have expunge
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should no longer be used
replaced direct calls to ` getNotesCounters ` with ` getNoteTitle ` in multiple classes to improve code readability and maintainability by
updated GoogleAuthUserConfigTable to use nvarchar / int4 / int4 / int4 / int4 / int4 / int4 / int
replaced commit ( ) calls with apply ( ) in WallpaperCropActivity , InstallShortcutReceiver , LauncherBackupAgentHelper , LauncherBackupAgent
added a new TestIdleListener to the Session instantiation in AsyncTimeoutTest . java to enable testing of idle listeners in the session
updated the formatting of the testBigQueryTable string in BigQueryIOIT . java to improve readability and maintainability of the code
added background resources for predicted and reset icons in HotseatPredictionController and BubbleTextView to enhance the visual appearance of the predicted icon in the hot
[ hotfix ] [ mondrian ] fix typo in mondrianproperties
[ native ] add test for native system . runtime . query
added a check for all features before retrieving the active features in LIMEExplanation . java to ensure that only active features are retrieved from the explanation
added argument handling to the AppleSimulatorController and InstallCommand classes to allow users to specify arguments when running with - r to enhance flexibility in command execution
refactor area retrieval logic in LineSelection to use GenericStyledArea instead of getArea ( ) to improve code readability and maintainability by
[ java ] do n ' t call pipeline . getavailable ( ) . isavailable ( ) . isavailable ( ) . isavailable ( )
added clipping to outline in QsbWidgetHostView to enhance the visual appearance of the QSB background in the widget
added flag conversion logic in SQLManager . java and modified split method in BlockTypeListFlag . java and PlotArea . java to improve flag processing
lwjgl : do n ' t use gl _ depthfunc in floatingtextrenderer when gl _ depth _ func be not set
rename libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ libffi _ lib
added getter and setter methods for propagationBehavior in JdbcAggregationRepository to improve flexibility in managing transaction propagation behavior
add support for l1 and l2 regularization in layervalidation
added error handling for reading and writing operations in AbstractChecker . java to improve robustness by catching potential exceptions during reading and writing operations
changed the visibility of the colorStack variable from static to instance variable to allow instance - level access to the colorStack variable
change default value of getMappedStatement method from false to true in Configuration . java to ensure proper handling of mapped statements in the configuration
updated the method to convert the tradableIdentifier to lowercase to ensure consistent depth retrieval regardless of case sensitivity
update channel state test to reflect the new version of channel state
remove unused ` ` versionedhash ' ' parameter from enginepayload parameter
added trigger price handling in MutableOfferView . java to ensure trigger price updates correctly when the price field changes
fix a bug in studentfeedbacksubmissioneditsaveaction that cause a nullpointerexception in studentfeedbacksubmissioneditsaveaction
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 16469 hstore . getlog ( ) should check if result be true
update entitybeanintercept and savemanybeans to use setchangedproperty instead of setloadedproperty ( )
added a boolean field ` _ alwaysSaveUri ` and its getter method ` getAlwaysSaveUri ( ) ` to the ` FormAuthenticator ` class
added methods to check layer type , layer type , paint , and paint in ShadowRenderNode . java to enhance functionality for setting layer types and paint
replaced specific imports with wildcard imports and added accessibility checks in LWChoicePeer . java to improve code readability and ensure proper visibility of
refactored the initialization of the ` insert ` map in ` StressProfile . java ` to remove redundant code to improve code readability and
replaced instances of ` scala . asScalaIterable ` with ` collectionAsScalaIterable ` across multiple files to improve code readability and maintain
fix npe in mockservereventlog when request be null
added logging for properties file loading failures in DefaultEnvironment . java to improve error handling and provide clearer feedback when properties file loading fails
refactor SessionDataSet initialization to use try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a condition to check if the nic is up before proceeding with loopback operations to ensure proper handling of multicast and up scenarios
updated the constructor of sqlCommand to include a length parameter to improve flexibility in command handling by allowing different lengths
added methods to setLatestConsumeTime and setLatestConsumeTimeForEnergy in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor
added a new method ` invalidSessionStrategy ` to ` SessionManagementConfigurer ` to allow configuration of a specific ` InvalidSessionStrategy `
[ hotfix ] improve error message in ProtobufAnnotationSerializer to provide more context for serialization failures
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of the ` containsKeys ` method in the ` Map
added a new interface ` JDBC4TemporaryPreparedStatementMethods ` and updated the ` genclass ` method calls in ` JdbcProxyGenerator ` to enhance
added a ` ensure ` method to ` ServerWebSocketContainer ` and modified the ` start ` method signature in ` DirectUpgradeTest ` to improve WebSocket
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to replace ` ImmutableMultimap ` with ` ImmutableListMultimap `
pdfbox - 4071 : remove unnecessary type cast from getcurrentpoint ( )
replaced the instantiation of ` MethodHook [ 0 ] ` with a static empty array of ` MethodHook [ 0 ] ` to simplify the code and
added a boolean flag ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the authentication logic to enforce access control to enhance security by
updated methods in JobListener , CompositeJobListener , CompositeJobListenerSupport , and JobListenerTests to accept JobExecution parameter to enhance functionality by allowing
added a check for the file ' s execution status in SharedLibraryLoader . java to ensure that only non - writable files are processed
added hasTimeSeriesQueryLanguage ( ) method implementations in TimeSeriesQuery and TimeSeriesQueryOrBuilder classes to provide a way to check the language
bug 60225 : use samplers . sampleevent instead of res for unmarshalling
added new constants for BATTERY _ LEVEL , TIME _ WITH _ OFFSET , and PROFILE _ NAME in CustomUrlManager . java
make searchexpression . applyrule return a map instead of a hashmap
refactor : rename ` ` movedwidget ' ' to ` ` absolutescreenlocateable ' ' in euclidiancontroller
updated texture dimensions and filters in ProjectiveTextureTest . java and ProjectiveTextureTest . java to improve texture handling and enhance texture filtering capabilities
changed the return type of the setResourceToDelegate method from void to File and updated the return type of the setResourceToDelegate method to improve
camel - 14263 : camel - jbang - fix the regression of camel - core by use the property placeholder instead of the property placeholder
updated the condition in ActionScheduler to check if the last attempt time is greater than or equal to the last attempt time to ensure that the last attempt
updated the dbg _ zip path from " / tmp / ums _ dbg . zip " to " / tmp / ums _ db
update renderingdebugconfig to use renderingdebugconfig instead of renderingdebugconfig . worldrendererimpl .
pipe : add resetgate ( ) method to blockgenericpipe . resetgate ( )
updated TestSupplementary to use Locale . getDefault ( ) for setting the default locale to ensure consistent locale handling across test execution
updated the team # color value from 0.18 f to 0.18 f in the Team constructor to improve the visual representation of the team team ' s
change sequencematcher to use collection instead of set in sequencematcher .
updated the condition to check for null or empty annotation in SoftAsserts . java to ensure proper handling of null and empty annotation cases
added error logging for invalid JSON and UnrecognizedPropertyException in StorageResources and StoragePluginRegistryImpl to improve error reporting and provide clearer error messages
refactor calltreeprinter to use tocsvfile instead of reportutils . report
added null checks for ` note ` and ` mActivity ` before accessing its properties in ` DetailFragment . java ` to prevent potential NullPointer
added peakTasks and peakTasks tracking logic in AssetManager . java to track peak tasks and adjust calculations accordingly to improve performance and accuracy of task loading
simonstewart : enable native event in firefoxdriver on window
added methods to retrieve scores and fetch intervals from URLs in Injector . java to enhance score management and fetching capabilities in the application
updated import statements from Apache Commons Collections to Apache Commons Collections4 in ScimExternalGroupsTypeResolvingFactoryBean and RsaJsonWebKey
added a new method ` isShareSchema ( ) ` to the ` CoreContainer ` class and a corresponding test in ` TestCoreContainer ` to
updated ` sizeInBytes ( ) ` method calls to use ` sizeInBytes ( true ) ` instead of ` sizeInBytes ( true )
updated assertions in VersioningTest . java to use assertNull instead of assertEquals for version 1 _ 2 to simplify test assertions and improve readability
updated SQL queries to include typtype ' d ' in SQL queries and added tests for null domain columns in DatabaseMetaDataTest and DatabaseMetaDataTest to
[ java ] do n ' t set result to false if there be no follower .
removed the buildMediaType method from WebClientPlugin . java to streamline the code by eliminating unnecessary dependencies
replaced occurrences of ` termBytesReader . fillUsingLengthPrefix ` with ` termBytesReader . fillAndGetIndex ` across multiple files to improve
added a check for the compacted base status in AcidUtils . java and implemented a new cleanup method in TestCleaner . java to ensure proper
[ hotfix ] [ table - planner - blink ] avoid nullpointerexception in ptableimpl
added new classes PojoProducersCustomized , RestProducersCutomized , and RestProducersCutomized , and RestProducers
updated cache configuration to use CACHE _ SECTION _ NAME instead of hardcoded strings to improve maintainability and readability of the code
removed redundant registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to streamline serialization process
add a new item for the wooden slab in the OreDictionary . java file to enhance the visual representation of the wooden slab in the Ore
refactor multiple session factory classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class structure by
prepare next release 3.2 . 2 - bump version to 3.2 . 2
hhh - 14298 fix denormalizedtablelogicalincludedtableconstrainttest to work with different dialect
fix issue where spritebatch . draw ( ) do n ' t work
updated permission checks in PlayerFunctions . java and added a toString ( ) method in PlotId . java to improve accuracy in permission checks and ensure consistent
added a new version constant LUCENE _ 8 _ 5 _ 0 to indicate that the version is outdated and should no longer be used
corrected a syntax error in the closeSocket method call to improve code readability and maintain consistency
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing of signed
[ flink - 24186 ] [ runtime ] add dependencytype enum to semanticgraphoutputter
removed the ` NoSuchBuildTargetException ` and ` createForMissingBuildFile ` methods from ` NoSuchBuildTargetException ` and ` ParseContext ` classes to
updated the initialization of MyChild from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to
changed the array size of configBlocks from ` block . blocksList ` to ` 256 - 1 ` to optimize memory usage by reducing the number of
updated logging statements in BukkitMain . java to use Bukkit ' s version checks instead of hardcoded values to improve code readability and maintainability
updated SQL statement escaping logic in AbstractSQLChange . java and added a test for escaping PostgresQuestionmarkOperators in AbstractSQLChangeTest .
added new methods ` ofAll ` and ` withAll ` in ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` Bag
added checks for HTML escape codes and improved error handling in BuildNavAndPDFBody . java to ensure only valid HTML files are processed and prevent potential
added a new parameter to the MqttBrokerConnection constructor in NhcMqttConnection2 . java to allow for additional configuration of the Mqtt
updated the way change sets are retrieved from the database change log to ensure the change log is initialized before accessing it to avoid potential null pointer exceptions
remove unnecessary new methodresult ( ) call from loginfo . output ( )
added database drop functionality in TestHiveMetaStorePartitionSpecs and improved logging in TestObjectStore to enhance database management and provide better visibility into
added a new parameter " order _ currency " to the ` BithumbAuthenticated ` and ` BithumbAccountServiceRaw ` classes to support order currency
remove thymeleaf webconfig from sseflux
updated method checks in JsonBuildHelper , IDocBuildTemplate , IDocBuildTemplate , and IDocBuildTemplate to use getReturns ( )
added a new method ` listYamls ` to retrieve YAML configurations from a specified ID to enhance functionality by allowing users to retrieve YAML configurations
removed the public access modifier from the equals and hashCode methods in Marker . java to restrict access to these methods for better encapsulation
refactor thread factory to use a lambda expression instead of a lambda expression to improve code readability and reduce boilerplate
added unit tests for the ` addToList ` method in ` MongoTemplateTests ` and created a new ` PersonWithAList ` class to
ggb - 221 sync applet panel size should not overlap width and height .
replaced direct toolbar visibility setting with a delayed execution in DrawerActivity . java to improve responsiveness and responsiveness of toolbar visibility
[ flink - 24186 ] [ table - planner - blink ] avoid unnecessary initialization of the first page reader .
do n ' t try to save vm password if vm be not run on router
added new variables ` usingOutputStream ` , ` isCharacterEncodingSet ` , and ` isCharacterEncodingSet ` in ` Response . java ` to
added a conditional check to skip assignment side effects in GroupDialog . java to optimize performance by avoiding unnecessary assignment side effects
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the conditional check in FileUploadApiController . java to ensure the icon ' s height is within acceptable limits to improve the accuracy of the icon
refactor ` RegisteredServiceProperty ` , ` JwtTokenCipherSigningPublicKeyEndpoint ` , and ` JwtTokenCipherSigningPublicKeyEndpoint `
updated import statements and added a method to check mimetypes in Basic . java to improve compatibility with Windows and ensure correct mime type handling
add jzlib decoder and encoder to nettyconnection . iscompression ( )
added a new method ` doesClassLoaderDescendFrom ` in ` Util ` and refactored the ` nestHost ` logic in ` MethodHandles
added logging for missing " io . netty / handler - proxy " logging in ChannelProvider and ProxyChannelProvider to improve error handling and provide clearer
added a test for handling empty final columns in TextReader and created a corresponding test in TestCsvHeader to ensure correct handling of empty final columns in
added compass gravity and margin options to the NearbyMapFragment to improve user interface responsiveness and visual consistency
added a new test method ` testInterpolation ` in ` GeoPathTest . java ` to verify the behavior of the ` computeNearestDistance ` method
added exception handling and improved logging in LeafFilterFactory , ParquetFilterPredicateConverter , and TestParquetRecordReaderWrapper to enhance error handling and
added language setting logic for currentAudioTrack in LibMediaInfoParser . java to ensure the currentAudioTrack reflects the current audio track ' s language
added a warning log for invalid microservice versions in MicroserviceRegisterTask . java to inform users that schemas in new versions are less than the
replaced usage of ` sizeNeeded ` with ` addAll ` for array copying to improve code readability and maintainability by reducing duplication
[ hotfix ] fix checkstyle violation in DataSourceProxy . java
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a Map of ClientRegistrations to improve flexibility and enforce non - null
added a method ` resetUIState ( ) ` to ` SchemaUpgradeHelper ` to reset the UI state to ensure that the UI state is correctly
added a failedStep flag to JUnitReporter and corresponding tests in JUnitReporterTest to ensure proper handling of failed and non - strict scenarios
add playerselector patch to allow . in entity selectors to allow .
added Closeable interface to the Selector class to ensure proper resource management and prevent potential memory leaks
added a MultiplexConnectionPool for connection pooling in MaxConcurrentStreamsTest . java to improve connection management and performance during testing
added multiple calls to ` stringType ( ) ` in ` CoreOptions . java ` to ensure consistent handling of string types across the application
updated HqlQueryRenderer to handle character and parameter in HqlQueryRenderer and modified test cases in UserRepositoryFinderTests to ensure compatibility with the
replaced instances of ` process ( ) ` with ` HttpStatus . NOT _ SET _ 000 ` across multiple files to standardize HTTP status handling across
pdfbox - 4071 : fix typo in pdfbox - 4071
fix test failure in hikaricpcollectortest
refactor ParquetFormatPlugin and ParquetGroupScan to utilize a new method for managing Parquet file metadata to improve code readability and
modified the ` isSuccess ` boolean to true and modified the compilation logic in ` Jsr199Javac . java ` to improve the
added a new ` BaseTableModelListener ` to the ` DefaultSortedTableModel ` class to handle table change events to improve user experience by allowing users to
updated the condition for the number from 49152 to 65535 in ServerConfig . java to ensure that the number is less than 65535 instead of 49
added support for handling documents and roots URIs in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to ensure compatibility with newer Android
removed logging from MainApp . java to streamline logging process by eliminating unnecessary logging
updated exception handling in FilterChainProxy to utilize ThrowableAnalyzer for improved error reporting to enhance error reporting by distinguishing between wrapped and wrapped exceptions
updated StringBuilder . java to use ' this . length ' instead of ' length ' for array copying to improve code readability and maintainability by using
pdfbox - 4071 : fix npe in filter . decode ( null , null )
added a new file ` TbStopWatch . java ` with methods to start and get the last task time in milliseconds to provide a way to
fix typo in pliststore . init ( )
mark multiple continuation classes as deprecated to indicate that these classes are outdated and should no longer be used in favor of newer implementations
[ hotfix ] [ runtime ] set the context class loader in remoteinterpreterserver
fix checkstyle issue in forgehooks . java
updated minSdk from VERSION _ CODES . P to VERSION _ CODES . O _ MR1 in ShadowRttCallTest and Shadow
updated method parameters from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to improve clarity and
# 119 - add getname ( ) method to beandescriptors ( ) and getname ( ) method .
updated URLs from " wro / all . js " and " wro / all . js " to " static / all . js "
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT ` for testing the latest timeseries functionality to
rename ` appContextLocation ` to ` contextConfigLocation ` across multiple files to improve clarity and consistency in naming conventions
updated OCSPChecker to handle CertPathValidatorException more effectively to improve error handling by distinguishing between CertPathValidatorException and CertPathValidatorException instances
[ benchmark ] add writeoutputsolutionenabled property to config to allow configuration of writeoutputsolution
chore : set default maxinboundmessagesize to integer . maxinboundmessagesize ( int . maxinboundmessagesize )
added a new file ` Issue _ 815 . java ` with a test class ` TestWithTempDir ` to implement unit tests for slice size
add a slime waterproof recipe to the gameregistry to make it easy to use it . close # 116
[ mahout - 521 ] fix index out of bound exception in sequentialaccesssensevector
added metadata handling for the " ownerplot " entity in BukkitMain . java and updated EntitySpawnListener . java to utilize it to improve plot
added a method to retrieve the debug logger in DIHWriter and SolrWriter classes to provide access to the debug logger for debugging purposes
log a warning if the destination name length be less than ' maxfilenamelength ' to warn if recovery can result from name truncation
added a check for the presence of a tag in UpToTagChangeSetFilter and implemented a warning message in UpToTagChangeSetFilter to improve error
updated method signatures from ` Lists ` to ` ArrayList ` and replaced ` LinkedList ` with ` ArrayList ` in multiple files to improve type safety and
updated the implementation of the BrokerRoutingManager class to improve routing efficiency and maintainability
updated paint colors in CandlestickRenderer from gray and green to green to improve the visual appearance of candlesticks in the rendering process
refactor InsettableFrameLayout to use LayoutParams instead of FrameLayout . LayoutParams for layout parameters to improve code clarity and maintainability by using a
added ` duration ( ) ` parameter to ` BuildTargetDurationListener ` and corresponding tests in ` BuildTargetDurationListenerTest ` and ` BuildTarget
updated import statements in HsqlDbMigrationIntegrationTest and MySqlDbMigrationIntegrationTest to use system properties instead of @ Profile to ensure tests are only executed when
added a null check for the user object before processing claims to avoid potential NullPointerExceptions when the user is null
camel - 16297 : camel - test - add support for advicewith endpoint in camel - test - base
use non - blockingset instead of concurrentset to avoid concurrentmodificationexception
cloudstack - 10225 : listpublicipaddresses api : add sourcenetworkid parameter to listpublicipaddresses api
added unit tests for the ` isIgnoringBatteryOptimizations ` method in ` ShadowPowerManager ` and implemented it in ` ShadowPowerManager ` to
updated the version property retrieval in Jetty . java to use the buildProperties method to ensure compatibility with the latest Jetty build configuration
added unit tests for verifying invocations in NumberOfInvocationsInOrderVerifierTest . java to ensure correct behavior of invocation reporting in order verification
added conditional logic to handle no match instances in TRegexExecNode . java to ensure correct handling of regex results when no match instance is provided
added " - foreground " parameter to the startProfile method call in NewProfileExtensionConnection . java to ensure that the profile is marked as foreground
replaced TimeUnit with IOUtils for executor management in MiniSolrCloudCluster . java to improve code readability and maintainability by using standardized utility methods
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` in ` MetadataIndexer .
updated logging message to use file name instead of file name in CodeEditorView . java and added null check in EditorTextActionWindow . java to
updated log messages in ClassFileReader and JdepsTask to include error messages to improve debugging by providing more context for skipped entries
refactor Fetcher and FetcherMain to utilize a new LuceneStorage for managing content types to improve performance and maintainability of the code by
modified the ` populateBubble ` method to include an additional ` BubbleBarBubble ` parameter and added a null check for the ` existingBubble `
[ hotfix ] [ runtime ] fix log message when route be not start / suspend / resume
refactor method names from ` buildRpcExt ` to ` buildRpcExt ` across multiple files to simplify code and improve readability by eliminating unnecessary
[ java ] add support for multicast delay generator in receiver .
updated Gson initialization and added client secret handling in ClientInformationResponseView . java to ensure proper serialization and deserialization of client information
added a condition to check if the order ' s field amount is non - zero before setting average price to ensure that the order ' s field amount
removed the rawExecutionReports ( ) method from BinanceStreamingMarketDataService . java to simplify the code and improve readability
added a new method ` fail ` to ` LdapTimeoutTest ` and updated error handling in ` ReadServerTimeoutTest . java ` to improve error
do n ' t try to find the installed file if the user dictionary do not exist
updated password handling logic in AmbariServerConfigurationHandler and modified test cases in RootServiceComponentConfigurationResourceTest to ensure correct password storage based on
added parsing logic to Skip parsing already parsed segments in ParseSegment . java and refactored the isParsed method in ParseSegment . java to improve
[ hotfix ] [ yarn ] make yarn . application - attempt - validity - interval configurable
[ geos - 1080 ] log a warning when the h2 driver be not include .
hbase - 26464 add config for scan readtype in snapshot - based inputformat ( sergey shelukhin )
added fixed - height and fixed - width options to the LoginInstanceRequest class to enable dynamic configuration of the instance login settings
added corner radius parameter to multiple update methods in ActivityControlHelper , LauncherLayoutListener , and LauncherLayoutListener to enhance rendering capabilities by allowing
updated the COMMANDS _ TO _ REMOVE command to include a cross product query and added a filter for warnings in the QFile class to
added a retry mechanism to manage connection retries based on the ` doRetryOnConnPool ` flag to improve robustness by allowing retries to work around
add txncheckreserve ( ) method to queuecontainer . txncheckreserve ( transactionid , boolean polloperation )
added a new public final char [ ] array to the FirstOfStringsMatcher class to allow dynamic assignment of the string array
updated DELETE ROWS command from " DELETE ROWS " to " DELETE ROWS CLIENT SELECT " in CostBasedDecisionIT . java
[ iotdb - 4071 ] add support for ` ` insufficient data written ' ' in baseserviceexception
added support for rapid installation types in AdbHelper , AndroidDevicesHelperFactory , and related classes to enhance functionality by allowing configuration of rapid installation types
updated the seed pattern format in SortTest . java to allow for additional characters to enhance flexibility in seed generation
refactor MultimapSubject to use Factory instead of MultimapSubject for improved clarity and functionality to enhance code readability and maintainability by standardizing
updated the method to return the real display size of the hotseat instead of the visible bounds to simplify the code and improve readability by eliminating unnecessary
added a new boolean parameter ` transmux ` to the ` Transformer ` class and modified the ` ComponentListener ` constructor in ` TransformerInternal ` to
added localization functionality in Picker . java to ensure consistent localization of string values in the picker
camel - 234 - camel - cxf : fix camel - cxf to throw exception if the customer service be not find .
hhh - 14247 - add support for sql state conversion in PostgreSQL81dialect
updated test cases in TestJdbcDriver2 . java and HiveStatement . java to check for null queryId and modified HiveStatement . java to improve
[ beam - 14265 ] add test for unbounded pcollections in pardotest
updated HTML string formatting in GpsSimpleViewFragment . java to improve code readability and maintain consistency in formatting
[ java ] remove leadershiptermid parameter from consensusmoduleagent . joinlogasfollower ( )
refactor HttpSender to use a private instance of HttpExchange instead of direct calls to getHttpExchange ( ) to improve encapsulation and
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit 5
updated method names from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and corresponding tests to
fix nullpointerexception in recipe and search results
use double instead of float for font size in xwpfrun and defaultrunstyle
use array instead of string for email in addressbookdocomoresultparser
[ hotfix ] [ maven ] add exclusions to the list of artifact in the rawmavenresolver
updated DSXAdapters , DSXPairInfo , and DSXBaseService to utilize ExchangeInfo for currency pairs to improve error handling and
refactor multiple test classes for consistency and clarity to improve code maintainability and readability
[ drools - 90 ] fix incremental build failure on kie - 90
updated the initialization of ` copy ` to use ` finale - k ` instead of ` 0 ` and added a check for ` sobj .
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
use compilerasserts . neverpartofcompilation ( ) instead of findstaticgetter ( ) in hostfielddesc
added a new method parameter for CompletableFuture completion in DefaultNullnessAnnotations . java to enable support for CompletableFuture completion in the application
increase the freeze check point from 9000 to 10000 in PlaybackController . java to adjust the freeze check point from 9000 to 10000
removed unused imports and added Whitebox imports in AbstractCommonPowerMockRunner and PowerMockRunner to streamline the code by eliminating unnecessary dependencies
updated the method signature of ` unmarshalIn ` from ` typeCode ` to ` realType ( ) ` in ` AnyImpl . java ` to
refactor indentation handling in TabsAndIndentsVisitor to improve clarity and functionality to enhance code readability and maintainability by consolidating indentation
replaced LuceneTestCase with JUnit TestCase in TestSingleTokenTokenTokenFilter . java to align with the latest testing framework standards
updated the table name from ` newColumn ` to ` wrappedText ` in ` HtmlProcessInformationsReport . java ` to improve readability and
updated ` JdbcStepExecutionDao ` , ` JdbcStepExecutionDao ` , ` MapStepExecutionDao ` , and ` SimpleJobRepository ` to
added a conditional check for hiding a new media folder before adding it to the root folder to ensure that the folder is only added when the configuration is
added null checks for the actor in SplitPane . java to ensure proper handling of null actors and improve error handling
added handling for JavaType . Parameterized in RemoveUnusedImports . java to ensure proper type processing for Parameterized Java types
updated the method call from ` getModInfos ( ) ` to ` this . getModInfos ( ) ` in ` UniqueModListBuilder .
changed the logger initialization from private final to static final in TicketGrantingTicketImpl . java to improve performance by avoiding unnecessary instantiation of the logger
updated the SQL string in PhysicalPlanTest . java from " create timeseries root . 3e to " create timeseries root . 81 + 12
added a method ` isValue ( String value ) ` to ` AttrData ` and modified exception handling in ` Converter ` and ` LayoutInflaterTest `
added locale and modifier key checks in CPlatformResponder . java and introduced new methods in LWCToolkit . java to improve handling of character modifiers
[ java ] add aeron _ publication _ connection _ timeout to ctestmediadriver .
added a check for request URIs starting with " / css " , " / images " , and " / favicon " in GTVG
added a assertion to verify that the wellbeing test apk install fails to ensure the device is rooted before proceeding
no effective change - add @ ignore to testqueryforupdate and testqueryfindpagedlist
added a MultiMap mock for MultiMap in TestSimpleBodyHandler and updated assertions in TestVertxTLSBuilder and TestVertxTLSBuilder to
updated path formatting in DiffRuleKeysScriptIntegrationTest . java for consistency to improve code readability and maintainability
added a boolean variable ` mIsDismissHapticRunning ` to track if the DismissHaptic is not running to ensure that the
fix the explosion cause to be a projectile if it be not a projectile .
removed unused imports and implemented the getItemId method in SymbolInputAdapter . java to streamline code and improve maintainability
updated API endpoint parameters from " limit _ bids " and " limit _ asks " to " limit _ asks " in Bitfinex . java and
added handling for single quotes in StaxConverterTest . java to ensure proper formatting of string values in StaxConverterTest . java
[ hotfix ] [ k8s ] add tostring ( ) method to zookeeperleaderelectiondriver
refactor SqlSessionFactoryBean class to improve code organization to enhance maintainability and readability of the code
remove dependency on ReflectUtils . isgeneric ( ) in tripleinvoker
replaced error handling with a runtime exception in PolygonRegionLoader . java to improve error handling by throwing a runtime exception instead of throwing an exception
added a method ` isStarted ( ) ` to check if the Deadline is already started in the ` Deadline ` class to ensure that the
[ hotfix ] [ network ] add error message for closed channel in nettyrequestexecutor
updated the text setting logic in ItemListActivity to handle null genres more gracefully to improve robustness by preventing potential NullPointerExceptions when setting
[ hotfix ] [ checkpoint ] make checkpointcoordinator reset call in region recovery
add a new class ` MappedContainerComponent ` and corresponding test cases in ` EntityDataJSONFormat ` and ` ProtobufPersistedData ` to
[ hotfix ] [ table - planner - blink ] avoid nullpointerexception in checkpointmanager . getallunpinnedunpinned
added a test for retrying the same host on callback failure in HttpTest . java to ensure proper handling of failure scenarios in the HTTP client
fix typo in package - info . java for tutorial . background .
added a new test class SQLServerEscapeQuestionCharacterTest for SQL server escape functionality to ensure proper handling of special characters in SQL server queries
camel - 14263 : camel - jbang - add null check to camelmodule to avoid npe .
refactor JavaFXSEPort to use Util for waiting waiting to improve code readability and reduce boilerplate code
move parameterflags from com . kenai . jaffl . jaffl to com . kenai . jaffl . provider
do n ' t throw illegalargumentexception if imageobject be not a bitmap . patch by jbellis ; review by jbellis for cassandra
removed the appName parameter from the ` configure ` method and related methods in ` InputRC ` and ` InputRCTest ` classes to simplify the configuration
[ gr - 16386 ] fix install command not work with ignored dependency
replaced ` setHeadless ( true ) ` with ` addArguments ( " -- headless = chrome " ) ` across multiple test files to ensure compatibility
replaced the assignment of ` value ` with ` value . intern ( ) ` in ` VersionedValue . java ` to ensure that the value is
added support for " MOVE " and " MOVE " status in the connection validation to ensure proper handling of move operations in the database connection
updated ISO8601 _ MONTH _ DAY _ MONTH _ DAY _ YEAR _ TWO _ TIME values from " yy " to " dd "
updated import statements from ` org . apache . curator . shaded ` to ` com . google . common . collect . Lists ` across multiple
[ hotfix ] [ table - planner - blink ] make hsbuffercontext . startspilling ( ) optional .
updated permission checks in Visit . java to include untrusted visit flag checks to ensure proper handling of untrusted visits in the plot process
disable jabber service if jabber be not register
updated the condition in BasicURLNormalizer to include x5B and added a new test for curly braces in TestBasicURLNormalizer to enhance
changed access modifiers of methods from protected to private in QuickstepTransitionManager . java to enhance encapsulation and improve code readability
added a null check for ` res ` in ` EncodingConfiguration . java ` and updated the comparison logic in ` EncodingConfiguration . java ` to ensure
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` , ` SeparatedProjectsGenerator ` , ` SeparatedProjects
updated the logic for retrieving the native calendar type in HostLocaleProviderAdapterImpl . java to ensure that the calendar ID is within valid range to prevent
added a new file MSwingUtilities . java to demonstrate the functionality of the MSwing utility in the application
camel - 12297 : camel - mail - add async producer to the mail producer so it can be run on the same thread .
added @ RefreshScope annotations to CasCoreWebConfiguration , PasswordlessAuthenticationConfiguration , and PasswordlessAuthenticationConfiguration classes to enable dynamic refreshing of
added unit test to demonstrate how to handle and throw exception .
added new files Main . java , ScriptRenderer . java , and ScriptRenderer . java to implement integration - scripting functionality to facilitate the rendering of
updated condition in Request . java to include inputState = __ NONE and added a new test for query parameters after reading in RequestTest . java to
added checks for glyph width and height in BitmapFont , modified touch focus handling in Group , FlickScrollPane , and SelectBox classes to improve
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager ` and added a new test for failure handling in ` DeploymentTest `
fix typo in lexiconrecipemappings # tostring ( )
[ hotfix ] [ test ] increase timeout in constanttimebackofftest
updated import statements and added a wildcard import in LoincHandler . java to simplify import statements and improve code readability
use classpath . getresource ( ) in jollydayholms instead of hardcoded classpath
added a new file ` FieldUtils . java ` that implements reflection methods for field access to provide utility methods for field access and field retrieval
removed unnecessary condition in DeferredAttr . java and added a new DoubleStaticImport class with static imports to simplify the assertion for better readability and
updated layout inflation from ` layout _ custom _ content ` to ` layout . workspace _ screen ` and added padding for widgets in ` AppWidgetHost
add updatesettingswithsavelastaccount ( ) method to xabberaccountmanager . updatesettingswithsavelastaccount ( )
added a new method ` setvar ` to ` Commands ` for setting variable values in a command - line argument to provide users with help information for
add a new patch for the CatEntity class to handle an AnimalTame event to enhance gameplay experience by allowing the entity to
[ h2 ] improve error handling for unsigned range in windowframe
pdfbox - 4071 : testcreatesignature . testcreatesignature . testcreatesignature . testcreatesignature . testcreatesignature . testcreatesignature
added a method to set the mode of the app in PageListController . java to ensure the application correctly reflects the application ' s mode
added support for specifying build arguments in ImageFromDockerfile and created a new DockerfileBuildTest class to enhance flexibility in specifying Docker file paths and
added a null check for the threadId before assigning threadClassNames array to avoid potential NullPointerExceptions when accessing threadInfos
updated the threshold check in PieChartRenderer to use Utils . FLOAT _ EPSILON instead of hardcoded values to improve code readability and
[ hotfix ] [ table - common ] add more logging to singleinputgate and singleinputgate
added new table types in Schema . java to support additional table types in the application
updated FuzzyQuery and FuzzyTermEnum to include a minimumSimilarity parameter to enhance query flexibility by allowing customizable similarity values
replaced ` addActionsView ( ) ` with ` setActionsView ( ) ` in ` RecentsView . java ` to standardize method naming
remove unnecessary immediateflush flag from layout wrapping encoder
added " org . springframework . boot . autoconfigure . AMQPAutoConfiguration " and " org . springframework . boot . autoconfigure . Kafka
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java with a
replaced ` avro . shaded . com . google . common . base . Function ` with ` com . google . common . base . Function `
refactor bciblockmapping to use getreturnblock ( ) and getunwindblock ( ) instead of processblock ( )
added getter and setter methods for the legacyRenderer property in the Label class to enhance flexibility in rendering behavior based on the legacy renderer state
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJ
added null check for mObserver in NavigationModeFeatureFlag . java to prevent potential NullPointerException when mObserver is null
replaced ` Comparable < ? super U > ` with ` Comparator < T > ` in ` Comparator ` and added a new ` Department ` class to
refactor DocIdSet class to improve code organization to enhance maintainability and readability of the code
updated the end time setting in UserRuleAnomalyResult to use currentKey bucketMillis instead of null to ensure the correct time zone is set
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is never thrown when parsing integer values
updated the classloader setting for the enhancer in MockFactory . java to ensure the enhancer uses the correct class loader for better resource management
added a new ` OriginalFormat ` class and modified ` ConverterWithEnumFormat ` to utilize it to enhance formatting capabilities for various object types
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM / " in FileStorageUtils
refactor JAWTRenderer class implementation to improve code readability and maintainability
camel - 15836 - camel - aws2 - lambda : remove autowire test from camel - aws2 - lambda
cloudstack - 10297 : ensure that a mac address can be generated for a non - existent network .
removed authorization header name check from ProxyServlet . java to streamline authorization handling and improve code readability
replaced ` delegate . submit ` with ` delegate . execute ` in ` TraceableExecutorService . java ` to improve clarity and consistency in command execution
added ` getDetails ( ) ` method to multiple authentication classes and updated related classes to utilize it to provide detailed information about the authentication process
updated the initialization of ` randUsePoints ` to use ` nextInt ( 5 ) ` instead of ` nextBoolean ( ) ` to ensure that the
refactor : replace ` ` appenddot ( ) ' ' with ` ` endsentence ( ) ' '
updated the ` formatForConsole ` method to accept a ` Locale ` parameter across multiple files to ensure consistent formatting across different locales
updated import statements in GroovyParserVisitor . java and GroovyPrinter . java to use wildcard imports and added handling for named arguments to improve code read
added bounds checking for bottom and right insets in Border . java to ensure proper handling of edge cases in the layout
replaced instances of ` GestureState ` with ` DEFAULT _ STATE ` and refactored orientation transformation logic to improve code readability and maintainability
replaced ` DateTime . now ( ) . toString ( ) ` with ` DateTimeFormatter . BASIC _ ISO _ DATE ` in ` LlapService
refactor openblas classes to improve code organization to enhance maintainability and readability of the codebase
replaced IOUtils . closeQuietly with IOException . close ( ) in TorrentsStorage . java to improve resource management and prevent potential resource leaks
added synchronized keyword to the initTxnMgr method in SessionState . java to ensure thread safety during transaction management
increased timeout duration from 120 seconds to 480 seconds in ` AbstractDistribZkTestBase ` and ` AbstractFullDistribZkTestBase `
added a new file ` SearchResults . java ` that implements a list of results as an object to provide functionality for retrieving and retrieving results as objects
refactor threadCPURefresher initialization to use threadCPURefresher for consistency to improve code readability and maintainability by reducing duplication
updated the variable name from ` primitives ` to ` primitivesTemp ` and added null check for ` primitivesTemp ` to improve clarity and
added new versions " 8.6 . 0 - cfs " and " LUCENE _ 8 _ 11 _ 0 " to the TestBackward
updated the feature flag from DISABLED to TEAMFOOD in FeatureFlags . java and modified the package name in AppIcon . java to
added a new API endpoint to retrieve tenant pools for current instances to provide access to instance pools for current instances in the application
refactor canEarlyTerminateOnDocId and canEarlyTerminateOnPrefix methods to improve code readability and maintainability by reducing
updated the method signature from ` isAbstract ( ) ` to ` isToString ( ) ` in ` InlineBytecodeGenerator . java ` and added
added debug and warning log statements to CxxCompileStep and CxxPreprocessStep classes to improve error tracking and debugging capabilities for C++ compilation
fix stringutil . removecharacter ( string , string ) to use stringutil . removecharacter ( string ) instead of stringutil . removecharacter (
fix ( service ) : remove parameter from servicemetadataserviceexporter ( # 10265 )
[ kie - api ] add datatransformer interface to make it easy to use
changed the type of the array type from Object [ ] to Number [ ] in DistributionGraph . java to ensure type safety and prevent potential ClassCastException
removed the interesting flag from the visit method call in FormatStringChecker . java to simplify the code and improve readability
reformatted the initialization of the SolrCore variable to improve code readability and maintain consistency
refactor ITestDbTxnManager class to improve code organization to enhance maintainability and readability of the code
refactor connection handling in DatabasePlatformFactory to use try - with - resources for better resource management to improve code readability and reduce boilerplate
added remoteCodeFirst _ testMapModel method to CodeFirstPojoClient and implemented a remoteCodeFirst _ testMapModel method in CodeFirstPojo
pdfbox - 4071 : remove unnecessary null check for xobj in resourcevalidationprocess
refactor selection listener handling in ScaleDialog . java to improve code readability and maintainability by reducing duplication
rename ` updatePlayerStepStatus ` to ` tickBelt ` in multiple files to improve clarity and consistency in method naming
pdfbox - 4071 : do n ' t throw exception if no appearance stream be create
changed the insertion order of keys from SortedSet to LinkedHashSet in ExecuteSqlCommandStep . java to ensure consistent iteration order for the keys
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java and
updated preload values from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java to ensure
updated MainMockTransformer to conditionally set all constructors to public and added unit tests for mocking static methods with private constructors to ensure that
pdfbox - 4071 : avoid classcastexception in securityhandler
add window title for xtoolkit . xtoolkit in mainframe
updated depth assignment logic in XRSurfaceData . java to conditionally set transparency based on pixel size to ensure correct depth is applied based on the
added error handling for reading responses in OkHttpDataSource . java to improve error reporting by providing more context about the failure of the response body
added a static method ` exit ` to ` TopLogging ` and simplified the exit handling in ` TopThreadGroup ` to improve code readability and
modified the initialization of the ` start ` variable in ` NativeRegExp . java ` to handle non - global regexps more effectively to ensure that the
added JUnit @ Ignore annotation to OptaPlannerDaemonSolverTest . java to address compatibility issues related to PLANNER - 468
updated variable name from lowIndex to highIndex in DefaultAllocator . java to improve clarity and consistency in variable naming
added a method ` cleanEntriesWithoutFeeds ( ) ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` to delete entries without feeds
changed the return type of appendToLabel from void to AtomicCounter . java to enable method chaining for better usability
[ java ] use noopidlestrategy instead of busyspinidlestrategy in low latency media driver
added handling for HTTP status codes in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter classes to ensure headers are only written when not modified
[ hotfix ] [ test ] add instrumentationinfo ( ) method to instrumentationpartialevaluationtest
added a method to paint the tab area in SynthTabbedPaneUI . java to ensure proper rendering of tab areas in the tabbed pane
updated the ` getKrakenDepth ` method to accept an ` Object ` argument instead of a ` Long ` parameter to simplify the method signature
camel - 14263 : camel - file endpoint should use file separator instead of file . separator
added a new method ` build ` to the ` JavaProvenance ` class and modified ` MavenProjectParser ` to use it to enhance the
added trace logging for various UDFs in HiveFunctionRegistry . java and created a new test case in TestInbuiltHiveUDFs
updated loop iteration from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for state updates
patch by jbellis ; review by jbellis for cassandra - 1449
added a check for writable output files in NativeErrors . java to ensure that the output file is only written when the test runs as root to avoid
added package information retrieval and logging for getPackInfo in LauncherModel . java to improve error handling and logging for missing packages
cloudstack - 12420 : fix error message when database upgrade fails
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and FaultTolerantChunkOrientedTaskletTests to
replaced ` startsWith ( ) ` with ` regionMatches ( ) ` for string comparisons in ` LineReaderImpl . java ` to ensure accurate string comparison
added imports and modified data table handling in Recipe . java to utilize a global data table descriptor to improve code readability and maintainability
added Overview import and task dismissal logic in TaplTestsTaskbar . java to ensure proper task management by dismissing all tasks when available
add db upgrade check to database upgrade checker
removed unnecessary null checks for the connection variable in LdapClient . java to simplify the code and improve readability by eliminating unnecessary null checks
refactor code to use a variable for the current index in SequenceAction . java to improve readability and maintainability of the code
patch by jbellis ; review by jbellis for cassandra - 1449
added a check to skip processing for synthetic fields in ReflectUtils . java to improve performance by avoiding unnecessary processing of synthetic fields
added LoggerProvider and integrated it into ApplicationController and ApplicationController classes to enable logging functionality within the application
changed the type of ` ImmutableMap . Builder ` and ` ImmutableMap . Builder ` from ` ImmutableMap . Builder ` to ` ImmutableMap . Builder ` and `
added warnings for deprecated spring context configurations in SpringFactory . java and updated test cases in SpringFactoryTest . java to ensure that the spring context
added a deepStart method to the Startables class to enhance the functionality of the Startables class
removed deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and ` ShapeImpl ` classes to clean up the code and improve maintain
make lasertable implement ILasertargetblock instead of a hardcoded block
simplified the condition for checking object names in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
[ java ] do n ' t consume 2 * pageSize mem when consume 2 * pageSize mem which throw the test
removed null checks for ` p ` and ` handlerName ` in ` RequestHandlers . java ` to simplify code and improve readability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42215
refactor environment handling in ProjectBuildFileParser to use a constant for the environment variable name to improve code readability and maintainability by centralizing
added frame size validation and error handling in DirectAudioDevice . java and Toolkit . java to ensure proper handling of audio data and buffer sizes
add null check for enums before writing to ElasticSearchStringLookupService to avoid NullPointerExceptions when enums are null
updated error message formatting in CommitLogReader . java to improve clarity of error messages for better debugging
added a policy assignment in WebSocketSession . java to ensure the session ' s policy is correctly set based on the container scope ' s policy
simplified the condition for determining static fields of current type in Java2TypeScriptTranslator . java to simplify the logic and improve readability of the code
updated the configuration of the UI root path in UserService . java to allow dynamic configuration of the web root path
( chore ) camel - spring - dsl : migrate test to junit 5 ( # 4447 )
do n ' t use monitoredvmutil . isattachable ( ) instead of monitorvmutil . isattachable ( )
rename method ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in naming conventions
replaced multiple specific imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure proper resource management and prevent memory leaks
added null checks before setting foreground and background properties in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground and mOriginalBackground
updated condition checks for ` decExp ` in ` FloatingDecimal . java ` and added a new ` ToString . java ` class ` to ensure
updated the property type check in PropertyDescriptor . java and added a new test class Test7189112 . java to ensure proper type checking and
removed the maxVersion variable from recentUpdates . getVersions method to simplify the code by eliminating unnecessary complexity
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 - http : /
updated task visibility and animation logic in RecentsView and TaskView classes to improve user experience by providing smoother transitions and visual feedback
updated error messages to include the field parameter in ORCRecordReader . java to improve debugging by providing more context about the field being processed
[ bugfix ] remove unnecessary hls sample from demo
updated import statements in PersistenceProvider . java for consistency and clarity to improve code readability and maintainability by using more descriptive variable names
hive - 16469 : fix log4j2 - specific log in hadoop - ipc
added logging for diagnostics in TestSpecificCompiler . java and updated file object retrieval in TestSpecificCompiler . java to improve error handling and debugging capabilities
modified the websocket session creation logic in WebSocketEndpoint . java and added a new test for session closure in WebSocketIT . java to ensure proper handling of
[ hotfix ] [ state - network ] increase the number of state invalidation after batch processing .
replaced ` OpenSymphony Group ` with ` Apache Struts ` in ` XmlConfigurationProvider . java ` to ensure compatibility with the latest
added conditional stop logic for stream stop in WebCamInputPanel . java to ensure proper handling of video tracks when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new enum ` BittrexChartDataPeriodType
[ geot - 5131 ] fix test failure in gml example
updated method call from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58 . java ` to improve clarity
hhh - 10956 - add support for composite identifier mapping in abstractentitytuplizer and abstractentitytaltalizer
rename ` ` findfulltextaction ' ' to ` ` downloadfulltextaction ' ' for consistency
refactor URI registration logic to include host and port information in the listMap to improve code readability and maintainability by reducing redundancy
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code readability and maintainability
added a check for the OSDB hash before retrieving the API result from the OpenSubtitle class to improve error handling and provide clearer logging when
added token transfer functionality in RuntimeImpl and refactored it in MUtil to utilize TransferAssetActuator to improve token management and ensure
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13337 - improve
updated the default configuration method from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure
updated conditions in MapJoinOperator and HybridHashTableContainer to handle empty result sets and added BloomFilter import in HybridHashTableContainer to
added a new ` endPoint ` parameter to the ` HTTPSPDYAsyncEndPoint ` constructor and updated related methods in ` ServerHTTPSPD
added the " id " parameter to intents in multiple adapter and TweetFragment classes to ensure that the " id " parameter is correctly set for
added proxy - authorization handling and refactored disconnect logic in HttpURLConnection . java to improve code readability and maintainability by reducing duplication
replaced int _ numChildren with AtomicInteger _ numChildren in TraceContext . java and updated the number of child counts in TraceContextTest . java to
updated JWT parameters in multiple classes to ensure consistency in naming conventions to improve code readability and maintainability
disable the expectedExceptions test in ValueTypeTests . java to disable the test due to potential issues with NullPointerExceptions
chore : move resourcefactoryserviceimpl from kie - api to kie - api
replaced instances of ` PredicateType . IN ` with ` PredicateType . NOT _ IN ` across multiple predicate classes to improve clarity and consistency in the
replaced ` AccountNotFoundException ` with ` Exception ` in multiple classes to handle exceptions more gracefully to improve error handling and provide clearer context for
added null check for witnessService before validating the witness permission validation to prevent potential NullPointerException when witnessService is not initialized
updated the method of constructing the taggedCol string in JoinDesc . java to use getExprString ( ) instead of getExprString ( )
added a check to ensure the item ' s Javadoc is not present before setting the Java document to avoid potential null pointer exceptions when the Javadoc
renamed ` holderMethod ` to ` holderMetadata ` in ` CompiledICHolder . java ` and added new classes ` RedefineInterfaceCall .
replaced ` revalidate ( ) ` calls with ` revalidateWithAnimationSafety ( ) ` for consistency to improve code readability and maintainability by using
[ hotfix ] [ connector ] use unregisteredmetricsgroup instead of unsupportedoperationexception in kafkarecordserializationschemaadapter
updated the calculation of ` y ` in ` Polygon . java ` to use ` oldX ` instead of ` x ` to ensure accurate positioning
updated cacheManager . createCache method to accept Configuration < Object , Object > instead of null to ensure type safety during cache creation
added length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a test
refactor ShadowCookieManager class implementation to improve code readability and maintainability
added a new configuration option to disallow the storage check for external tables in Hive to ensure users are aware of permissions before dropping external tables
added a semicolon to the condition in Stage . java and adjusted the draw method call in ProgressBar . java to improve code readability and
cache byte order in platform capability to avoid memory leak
updated PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to align the
updated the ` initWebViewLogin ` method to accept a base URL parameter and modified the ` initWebViewLogin ` method to accept a base URL to
updated the exception message from " Paramter " to " Parameter " in CallableStatementHandler . java to clarify that the JDBC Type must be specified for
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 14848 .
[ hotfix ] [ test ] rename exponentialtimer to precisethroughputtimer
added functionality to remove and delete soft bodies in SoftBodyTest . java to ensure proper cleanup of soft bodies in the dynamics world
[ hotfix ] [ table - common ] make interface public
[ zeppelinhub ] fix log message in zeppelinhubclient , zeppelinwebsocket and zeppelinhubwebsocket
add a new test class JingleTest for testing the Jingle functionality to ensure that the Jingle functionality behaves as expected without redundant namespaces
add null check for redplasma in the stat collector to prevent nullpointerexception
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 422 - http2
removed redundant calls to ` getTrusted ( ) ` in ` Remove . java ` for consistency to improve code readability and maintainability
updated delimiter from ' + ' to ' + 2 ' in SimpleReport . java to accommodate a larger number of entries to ensure proper formatting of the
removed the option to ignore symbol files in JavapTask and added a new class T6863746 to streamline the code by eliminating unnecessary
renamed ` TickerDemo ` to ` StreamingTickerDemo ` in ` TickerDemo . java ` and removed ` TickerDemo . java
refactor contract validation logic in the Runtime class to improve error handling and provide clearer error messages for invalid contract types
ggb - 243 : do n ' t create input3d for non - linux applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
removed ParserException from the parsePayload method in ScriptTagPayloadReader . java to simplify the method signature and avoid unnecessary exception handling
rename method ` getRepositoryFactoryClassName ( ) ` to ` getRepositoryFactoryBeanClassName ( ) ` in ` JpaRepositoryConfigExtension . java ` to
changed the return type of ` getExecutableCommand ` from ` String ` to ` List < String > ` in multiple classes to allow for more flexible
replace instance variable assignments with instance variable assignments in IOSGLES20 . java to improve code readability and maintainability by reducing redundancy
removed the UploadPathActivity class and its associated method from ComponentsModule . java to streamline the codebase by eliminating unnecessary components
updated return statements in SimpleTextFieldsReader . java to conditionally return - 1 when indexOptions is not DOCS _ ONLY to ensure correct
fix ( class ) : fix implicit constructor not be add to subclass .
added a database parameter to several populateValidateValidateNullableIfNeeded and populateValidateForeignKeyIfNeeded methods to ensure compatibility with Oracle - specific operations
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder class to improve code organization to enhance maintainability and readability of the code
removed the indexOptions field from the iterator assignment in DefaultIndexingChain and PointInSetQuery classes to streamline the code and improve readability
removed the ` map ` method from ` rawName ` in ` SchematicHandler . java ` to simplify the code and improve readability
added case handling for various collection types in AbstractCollectionAssert . java and modified the return statement in CollectionAssert _ isUnmodifiable _ Test .
removed the static modifier from the Option enum in ProcessExecutor . java to allow access to the Option enum from other classes
refactored the handling of the ` doneClick ( ) ` button in ` Compose . java ` and ` ComposeActivity . java `
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` CheckBox ` in ` FileDetailFragment . java ` and removed
use java . util . base64 instead of java . xml . bind . base64 in imageutil . loadembeddedbase64 ( )
added new classes ControllerCounter , ControllerCounter , DBCallback , and DBCallback to encapsulate ControllerCounter , Count , and DBCallback functionalities in
changed the parameter type of the deleteTicket method from ` String ` to ` final String ` in ` EhCacheTicketRegistry . java ` to
added a new file FlywayMigrationRunner . java to implement a test for Flyway migration functionality in the application
replaced ` isEmpty ( ) ` with ` size ` in ` HashMap . java ` and added a new class ` OverrideIsEmpty . java ` to
updated the version number from " 0.9 . 0 " to " 0.9 . 0 " to reflect the latest version of the application
updated the ` modify ` method to accept ` @ Nullable EnumSet < Modifier > ` instead of ` EnumSet < Modifier > ` to improve null safety and
added null checks for ` mainValue ` in ` LauncherHelper ` and implemented a test for jar creation in ` Arrrghs ` to
[ hotfix ] [ test ] fix typo in test class name
graal : use compile graph size instead of compile graph size in hotprofileinfo
pdfbox - 4892 : remove clone ( ) from xssfsheet , a suggest by valerybokov
added a method to reset the load result in FloatingIconView to ensure that the loading result is reset before further operations
update formFieldValuesToCaps method to use getRawValueCharSequences ( ) instead of getValues ( ) to improve accuracy of form field value
updated dimension assignment logic in IconRecentsView . java to use resource directly instead of calling getResources ( ) for landscape and landscape orientations to ensure
deleted the AddAdapter . java file to remove unused code that is no longer needed in the project
do n ' t throw npe if there be no constructor
removed unnecessary null checks for parentColNames and bucketColNames in OpTraitsRulesProcFactory . java to streamline code and improve readability
refactor log watcher handling to use a dedicated looper method to improve code readability and maintainability by reducing duplication
added a print statement " < any > " to Java2TypeScriptTranslator . java to provide clearer output for type scripts
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the
added a conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS before setting the SPRING _ AOP _
removed the singletonLock initialization from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary dependency on the singleton lock
add more example to the example of the mock server
updated the ` writeFile ` method to include a ` appendToFile ` parameter and modified the ` writeFile ` method signature to include a ` appendToFile `
updated MavenExecutionContextView and MavenRepositoryMirror to use getMirrors ( ) instead of getErrorMessage ( ) in MavenExecutionContextView and MavenRepositoryMirror
added a ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` PathSourcePathTypeCoerc
updated the service client matching logic in OAuth20CallbackAuthorizeEndpointController to use ` matches ` instead of ` equals ` to improve the accuracy of service
replaced the usage of ` EMPTY _ ANNOTATIONS _ ARRAY ` with ` AnnotationParser . toArray ( ) ` across multiple classes to improve code
updated method implementations in UserManagerCompatVL . java to remove unnecessary type casting to improve code readability and reduce casting overhead
updated the default line separator from " OS default " to " LF or CRLF " in GlobalConfiguration . java to provide clearer guidance on
update configurationmanagerutils to use derived class instead of implementing interface
sanitization : sanitize input in model to ensure that input be not null
chore : update java and python dependency ( # 38 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added a new test for file contents to ensure
refactor CountersReader class implementation to improve code readability and maintainability
refactor ` logDeepShortcutsOpen ` methods to use ` LauncherLogProto . containerType ` instead of ` int containerType ` to
hbase - 16469 deprecate hbase . server . allocator . max . buffer . count and hbase . server . reservoir . initial . buffer
[ native ] add support for left _ table in ` ` user ' ' query
updated method names from ` getGenericParameterTypes ( ) ` to ` getAllGenericParameterTypes ( ) ` in ` Executable . java ` and ` Parameter . java
refactor TestFSTs class implementation to improve code readability and maintainability
updated method visibility from private to non - private in CanvasDrawable , DrawInputBox , and LaTeXTextRenderer classes to improve encap
hbase - 26464 addendum make initial size configurable for regionsplitpolicy . addendum
removed redundant model initialization in LauncherClings . java to streamline the loading process by eliminating unnecessary state management
replaced the initialization of keys and updates with a new variable ` keys ` and ` updatesAt ` in ` ManagedSelector . java ` to streamline
added a set of excludedDatasources to SpringDataSourceBeanPostProcessor and updated SpringDataSourceBeanPostProcessor to handle excludedDatasources to improve
added a call to storeUndoInfo ( ) in TableValuesView . java and removed unnecessary null check in TableValuesPanel . java to streamline
camel - 15836 - camel - aws2 - kinesis : add support for api level 2 . x
[ velbus ] make velbus channel mask more efficient .
updated comments in LocalCacheSelectorCode , BoundedLocalCache , BoundedLocalCacheTest , and BoundedLocalCacheTest to disable unfa
added a new test method ` illegalDatabaseNameTest ` to ` IoTDBSessionSimpleIT ` and implemented validation in ` PartialPath `
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are reset before further processing
rename ` desiredWorkspaceLeftRightRightOriginalPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and update related logic in ` DeviceProfile
refactored whitespace and formatting in CharTokenizer . java for improved readability to enhance code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 33 )
updated the XENSERVER _ NETWORK _ LABEL constant name from " xenservernetworklabel " to " xenservernetworklabel "
updated libGDX and libGDX versions from " 1.5 . 5 " to " 1.5 . 6 - SNAPSHOT " to reflect the
removed the private Set < String > metricNames from SolrCore . java to streamline the code by eliminating unused elements
replaced URI creation with Path creation in MavenManifestFactory . java to simplify path handling by using Fs . fromUrl instead of URI to improve code
replaced direct calls to ` System . getProperty ( " os . name " ) ` with a static final boolean variable ` IS _ MAC ` to simplify
refactor JdbcAggregationRepository class to improve code organization to enhance maintainability and readability of the code
added clear ( ) and addAll ( other . slotList ) methods to slotList to ensure slotList is reset and addAll ( other . slotList
set m _ predCount to - 1 in PredicatedNodeTest . java to initialize m _ predCount to - 1 to ensure proper initialization of
added imports and modified the mergeProperties method in ConfigurationSpringInitializer . java to merge properties dynamically to enhance configuration management by allowing dynamic modification of properties
[ hotfix ] [ runtime ] add support for slf4j in command line logging .
replaced HashMap with LinkedHashMap in multiple classes to ensure consistent iteration order for alias - to - work operations
added a check for the superclass of the jdbcHandlerMap in TypeHandlerRegistry . java to ensure the correct superclass is used for type handlers
added debug logging statements to multiple items in HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter to
updated the way the ` wellformed ` string is parsed in ` LocaleUtils . java ` to handle special characters correctly to ensure proper parsing of
updated the handling of the close handler in VertxHttp2Handler and added context execution in VertxHttp2Handler to improve context management and ensure
add cache for xssfevaluationworkbook . gettable ( ) and xssfevaluationworkbook . gettable ( )
updated schema text detail type from VERBOSE to BASIC in BaseSchemaTextFormatter . java to ensure compatibility with basic schema text format
replaced instances of ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to align with the
replaced HashSet with LinkedHashSet for roots , leaves , and leaves in SparkWork . java to ensure consistent iteration order of elements
added a null check for tableScanOpsForJoin in SkewJoinOptimizer . java to ensure the operator tree is cloned before proceeding with operations
added a null check for the client ID before retrieving it from DynamicRegistrationClientConfigurationService and JsonFileRegisteredClientService to avoid potential NullPointerExceptions
clear state of achievementlist . field _ 187981 _ e . clear ( ) in statlist
set default values for userName , productName , and driverVersion in MutableDatabaseInfo , MutableJdbcDriverInfo , and MutableJdbcDriverInfo classes to
updated method names from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in QuickSharingPermissionsBottomSheet
added methods to retrieve long data from ByteBuffersDataInput and modified long buffer handling in ByteBuffersDataInput . java to improve performance by utilizing
replaced ` FileTime . fromMillis ( ) ` with ` st _ atime _ sec ` and added a new ` toFileTime ( )
added a new file ` TestNoEagerReclaimOfHumongousRegions . java ` to implement and test humongous garbage collection
added a conditional check for the visibility of the search bar in AllAppsContainerView to control the visibility of the search bar based on user preferences
updated router route reference from " router " to " routes " in EnvRouterFeature . java to ensure the application uses the correct route for routing
added a null check for ` cur ` and ` next ` in ` LineChartRenderer . java ` to prevent potential NullPointerExceptions when ` cur
added a new action for reloading a page in the Eeze class to enhance user experience by allowing users to navigate to the correct page
change log level from info to warn in SQLManager . java to reduce log verbosity during development
updated the minimum Spring version from " 3.2 . 7 . RELEASE " to " 3.2 . 8 . RELEASE " to ensure compatibility with the latest
ambari - 17315 . upgradehelper should throw an exception if the configuration type do not have a selected version
use ServiceLoader instead of FactoryRegistry in GeoServerExtensions . java to simplify code and improve readability
added a finalize method to the HiveHBaseTableInputFormat class to ensure proper resource management and prevent memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` , ` HiveViewImpl ` , and ` HiveViewImpl ` classes
disable external dtd and load - external - dtd by default
replaced JdbCommand . waitForPrompt with JdbOutput in JdbStopThreadidTest . java to improve code readability and maintainability by
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure that the ` getType ` method returns
[ hotfix ] [ table - common ] fix type cast exception in expressionthreadpoolmanager
updated the default HTTP port from " 8080 " to " vertx . httpPort " in the HttpTestBase . java file to ensure compatibility with the
replaced ` addCaptureListener ( ) ` with ` addListener ( ) ` in ` Dialog . java ` to improve code readability and maintainability by
updated the default batch size from 10 to 3 in NewSessionQueueOptions . java to increase the batch size based on available processors
[ hotfix ] [ runtime ] catch exception when establish resource manager connection in taskexecutor
[ hotfix ] [ runtime ] fix npe in lambdarewriter
updated the IllegalArgumentException message to include the min and max parameters to improve error handling by providing more context about the minimum and maximum values
updated method signatures in DefaultStateMachine , State , MessageDispatcher , and related classes to include the owner context to enhance message handling by including the owner context
added new interface ` Cursor ` , ` Database ` , ` Row ` , and ` Database ` classes for database operations to provide a structured way to
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability
add setbeanid ( object bean id ) method to ebeanserver . setbeanid ( object bean id )
use getaddtositedescriptorxsl ( ) instead of tools / xslt / add - menu - to - site - descriptor . xsl
refactor requestMatcher initialization to use a list of RequestMatchers to improve code readability and maintainability by encapsulating the matcher list
added hashCode ( ) and equals ( ) methods to ContactResource class to enhance object comparison and hashing functionality for ContactResource instances
move request and response from abstractprocessor to abstractprocessor so that it can be reuse by other processor .
updated log messages for clarity and improved error handling in FileManager . java to enhance clarity of log messages for better debugging and monitoring
added a call to ` mockControl . reset ( ) ` in ` TestJdbcDataSource ` and a tearDown ( ) ` method in ` TestIndex
added import statements for LambdasWithInterfaces and refactored assertions in SyntaxTests . java to improve code readability and maintainability by standard
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
tika - 132 : remove unused parserdecorator from parserdecorator
make sure we do n ' t need to check if the client do n ' t have a security manager .
removed unused parameters from AccountUtils , IndexedForest , and CustomPopup classes to simplify code and improve readability
updated parameter from " swap " to " rename " in TestCoreAdminApis . java and added a new mapping in CoreApiMapping . java
added a new test method ` testJsxComment ` to ` JsLexerJsxTest ` and modified the token dumpingVisitor to include
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality in the test suite
added error handling for missing BUCK configuration in BuildEndToEndTest . java and modified assertions in CxxEndToEndTest . java
added physical memory and physical memory checks in TestStringBufferAndBuilderGrowth . java to ensure that the test runs only if the physical memory exceeds
refactored maptolocaldateconverter to use conversionservice instead of conversionservice . shared
added a success flag to the HiveMetaStoreClient class to enable successful execution of the metastore operation
updated the condition in ResourceReferenceInfo to use ` equals ( ) ` instead of ` = = ` in ` ResourceReferenceInfo . java ` to
updated condition checks in TimeLineCursorAdapter and TweetActivity to include " amp . twimg . com / v / v / v / "
added @ Deprecated annotation to AreaReference . java to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes for improved readability to enhance maintainability and facilitate future updates
updated assertions in MemberName . java to include REF _ invokeStatic and REF _ invokeSpecial , and modified reference kind handling in MemberName
changed the default value of __ submitKeyUpdates from " false " to " true " and added synchronization to ensure thread safety during key updates
updated conditional check for MouseEvent in EditNodeTextField . java to improve code readability and maintainability
camel - 14265 : camel - spring - boot : add static method to camel - bean expression
refactor BenchmarkPublisher , ProtocolDecodingServer , ProtocolPublishDecodingServer , and PublishReceiverHandler classes to improve code organization and maintainability
[ hotfix ] [ test ] fix checkstyle violation in agentrunnertest
updated descriptions in multiple classes to provide clearer and more descriptive descriptions for better user understanding of dependencies and dependencies
refactor the logic for adding faces in ObjLoader . java to improve code readability and maintainability by reducing redundancy
refactor ProcessEngine class to improve code organization to enhance maintainability and readability of the code
replace ` reentrantLock . lock ( ) ` with ` lock . lock ( ) ` in multiple Java files to improve code readability and
added maven packaging parameter to the ` getBomReference ` method in ` PrintMavenAsCycloneDxBom ` and ` Print
added a call to back ( evt . getComponent ( ) ) in UIBuilder . java to ensure the correct component is returned during the back operation
[ java ] fix checkstyle violation in saslauthentication
updated generic type parameters in ` ObjectArraySubject ` , ` StandardSubjectBuilder ` , and ` Truth ` classes to improve type safety and adhere to
replaced NutchConf . get ( ) with getConf ( ) in multiple files to ensure consistency in accessing configuration values
bugfix : removeboardspane ( ) and removeboardspane ( ) should be deselected ( ) instead of removeboardspane
[ hotfix ] [ runtime ] add getsessionid ( ) method to remotewebdriver
added null checks for ` getTimeInterval ( ) ` in ` ImportContainerImpl . java ` and updated test cases in ` ImporterGEXF
[ hotfix ] [ test ] remove log level info from mockservercontainer
updated error logging to include the exception message to improve error reporting by providing more context about the error
[ bugfix ] use crawlmetadata instead of robotshonoringpolicy in attachmentprocessor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
use file . separator instead of hardcoded path
added an alternative path method to the ExpectNewDemo class to provide a convenient way to retrieve the alternative path from the input stream
updated input initialization to use getFirstFilter ( ) instead of getFirstFilter ( ) in LogEntryParseTester . java to ensure proper initialization of the input
[ hotfix ] [ runtime ] add protectiondomain to bufferalignmentagent
added dispose method to the WaterRipples class to ensure proper resource management and prevent memory leaks
added configuration for disabling semi - join optimizations on external tables to enhance flexibility in managing semi - join optimizations across external tables
updated the authorization description in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
updated wallpaper offset from - 30 to 0 in Workspace . java and adjusted scroll range in Workspace . java to adjust wallpaper offset based on scroll
updated SybaseASADatabase to return true instead of false and modified SequenceSnapshotGenerator to check for SybaseASADatabase to ensure correct behavior
[ iotdb - 4071 ] fix autocommit issue in putsql when autocommit be false .
added directory creation checks in SnapPuller . java and updated test cases in TestReplicationHandler . java and TestReplicationHandler . java to ensure
corrected the spelling of " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency in naming convention
[ java ] make framer . frame ( ) return void instead of bytebuffer .
refactor OAuth2Login and OAuth2LoginAuthenticationFilter constructors to remove unnecessary parameters to improve code readability and maintainability by standardizing parameter
[ te ] improve error message when split text into key - value pairs
replaced the static constant INSTANT _ STAMPLE with a standardized formatting method in PlainFormatter . java to improve code readability and maintain
refactor the close method in AgentRunner to use a retry mechanism instead of a hardcoded value to improve code readability and maintainability by
hhh - 14458 remove reflection - based access to privatelookup in classloadingstrategyhelper
refactor Mockito class methods for improved readability to enhance maintainability and facilitate future updates
updated debug log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify the purpose of the log message for
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable the test due to insufficient sample results
updated error message from " then " to " then zero " in GridLayout . java to clarify that rows and columns must be greater than zero
refactor feature return statements in DecisionNode and WagonCART classes to use try - finally blocks to improve code readability and maintainability by
added sorting functionality for bound sheet records in XLS2CSVmra and introduced BOFComparator in XLS2CSVmra to improve the
replaced occurrences of ` avgImpulse ` and ` endInstImpulse ` with ` startThrust ` and ` endThrust `
fix npe in niftyjmedisplay . setinputmanager ( )
do n ' t set hash code offset in universebuilder when use identity hash code
remove the deprecated getmesh ( ) method that be no longer need .
renamed the keytabPath variable from ` keytabPath ` to ` localKeytabPath ` in ` YarnApplicationMasterRunner . java `
added a new option ` EMPTY _ WORD _ OPTIONS ` and modified matcher logic in ` LineReader ` and ` LineReaderImpl ` to
updated the pushViewReplicaUpdates method call to include writeCommitLog parameter to ensure that view replica updates are only pushed when the commit log is not
added auto - open web button handling in CaptureActivity , ResultHandler , and URIResultHandler classes to enhance user experience by allowing users to open the
added a new test method ` testBatching ` to ` JoinedTableTest . java ` to verify the behavior of batching in the J
added exception handling for EntityExistsException in JpaPersistenceService to improve logging clarity by providing more informative error messages when attempting to persist an item
removed the ` -- format ` option from ` CucumberOptions ` , ` RuntimeOptions ` , and ` RunCukesByCompositionTest `
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary method calls
simplified the back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder ` and added a new ` Capacity ` class ` Capacity ` to ensure correct
replaced the call to ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to
added endnotes attribute to xwpfdocument . getfootnotes ( ) and add it to xwpfdocument .
added clientInfo parameter to the CasAuthenticationTransactionSuccessfulEvent and updated related tests to include clientInfo to enhance event details for better tracking of authentication
added a new test method ` testVersion ` in ` BridjOGRDataStoreTest . java ` to verify the version of the Ogr
added a new file Lifecycle . java to implement network error handling in the application to facilitate network error handling in the application
updated the URL handling logic in DeviantartRipper . java to include a retry mechanism for 404 status codes to improve the reliability of URL download
removed unused imports from BodyTubeShapes and RocketFigure classes to clean up the code and improve readability
add a retf to the texture attachment to make it easy to use .
add pub - available parameter to create additional settings component ( # 116 )
replaced the usage of ` PackedInts . PackedInts . FormatAndBits ` with a constant ` BLOCK _ SIZE ` and simplified
camel - 14263 : camel - defaultrouter should use originatingtype instead of statuscode . tostring ( )
removed redundant dataList initialization and streamlined the release process in GoAwayTest . java to simplify the code and improve readability by eliminating unnecessary
added support for FluentSetterBean in ReflectionUtils . java and created a new test class EasyRandomTest . java to ensure that FluentSetterBean is
changed the return type of ` ListenableFuture < ? > ` from ` ListenableFuture < ? > ` to ` ListenableFuture < HttpResponse > ` and
updated file URLs in FileSortByExpressionTest and FileSortByIgnoreCaseExpressionTest to use " b " instead of " noop = true "
updated logging statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by using a more descriptive
document : add flag to write image scaling information for msword
added a check for the aggregate function name before adding them to the columns to ensure that the correct aggregate function name is used based on the processor '
replaced LuceneTestCase with WithNestedTests and modified test classes to extend WithNestedTests instead of LuceneTestCase to improve test structure and ensure proper cleanup of
added selection of the XCapEnableBox and updated the XCapServerUri value in PresencePanel to ensure the XCapEnableBox reflects the
add ` ` handle . handle . exception ' ' option to the servlet dispatcher to handle exception .
added a ` stopEditing ` method to ` CodenameOneImplementation ` , ` TextArea ` , and ` Display ` classes to handle text and text
nifi - 114 - add a test for non - existing group attribute in controlrate .
renamed ` includeUndoModify ` to ` isNewComponent ` in the ` showDialog ` method and updated related logic in ` ComponentConfigDialog `
fix thread safety issue in chatannotation . sendmessage ( )
added a check to skip tests for non - Windows operating systems in HTMLDataFlavorTest . java to ensure compatibility with non - Windows environments
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the SERIALIZABLE configuration to enhance transaction isolation level and support SQL
refactor AsyncWriteEngine to use a loop for waiting for newRecids to improve performance by reducing the number of attempts to put a new rec
replaced JreCompat . getInstance ( ) . jarFileNewInstance ( ) . jarFileIsMultiRelease ( ) with File . open _ read
added null checks for ` getCommandClass ( ) ` before creating ` RegisteredServiceImpl ` instances to prevent potential NullPointerExceptions during service creation
patch by jbellis ; review by brandonwilliams for cassandra - 1443
removed public access modifiers from several methods in RipperInterface . java and RipStatusHandler . java to restrict method visibility to enhance encapsulation
[ java ] do n ' t use InetAddresses . isInetAddress ( ) in peerdiscoveryagent
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to streamline the code by eliminating unnecessary method
added ClusterDataCache to the computePartitionAssignment method in PinotSegmentRebalancer . java to optimize memory usage by utilizing cluster data cache
[ java ] add autoremove option to remove container .
[ selenese ] fix parsing of input line in selenesecommand
added multiple attempts rule to the CreateGlossaryTests class to enable testing of multiple attempts in unit tests
updated references from ` allOfRef ` to ` COMPONENTS _ SCHEMAS _ REF ` in ` ModelResolver . java ` to
replaced instances of ` deleted ` with ` deletedEvent ` in ` EntityDeletedEvent ` and updated related methods in ` IdentityZoneEndpointsMockMvcTests
added support for GOP format in FormatConfiguration and updated DLNAMediaInfoParser to utilize it to enhance support for GOP formats in the media
added a new file TestProfileReturnTypePrinting . java containing a class TestProfileReturnTypePrinting with methods to test method return type printing functionality
added locking mechanism to manage the locking mechanism in ParseConfigUtils . java to ensure thread safety during config refresh operations
added handling for AcquireReleaseColumnsSegmentOperator in MinMaxValueBasedSelectionOrderByCombineOperator . java to ensure compatibility with AcquireReleaseColumnsSegment
simonstewart : remove the @ ignore annotation from firefoxprofiletest . java
updated return statements in HasAndroidDeviceDetails . java to include @ return annotations and changed return types to Map < String , Map < String , Object
do n ' t add a bug to projectstats if there be no bug
bugfix # 22434 - use disabled shadow color instead of hardcoded color
removed multiple redundant @ Override annotations from CacheControlImpl . java to improve code readability and maintainability
added a check to return a date in the future if it is empty in the ScheduledAction class and a corresponding test to ensure that the scheduled action
refactor upload button handling in ShareActivity to use a Menu for better organization to improve code readability and maintainability by encapsulating the
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added ` loadMetaData ` method to ` MeXBTExchange ` , ` RippleExchange ` , and ` MeXBTExchange ` classes to
added serializers for Writable objects in CrawlDbReader . java to enable proper serialization of Writable objects in JSON format
removed unused imports from TestJaspicBasicAuthenticator . java to streamline the code and eliminate unnecessary dependencies
added a configurationPid parameter to the component annotation in MDNSDiscoveryService . java to enable configuration of DiscoveryService for the discovery service
added null check for messageItem before calling scrollToPositionWithOffset to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in TestBPIndexReorderer . java to use ForkJoinWorkerThread for thread pool creation to improve thread management and prevent potential race conditions
removed redundant assertions for DATANODE and NAMENODE roles in RoleCommandOrderTest . java to streamline the test by eliminating unnecessary roles
added methods to restore local info from the tableInfo in PartInfo . java to ensure that the tableInfo is not null to prevent potential NullPointerException
corrected spacing in conditional statements across multiple files to improve code readability and maintain consistency
added transformation matrix and flipping functionality in BitmapFontTest . java to improve rendering performance and ensure proper rendering of sprite images
added a condition to check for non - builtin aggregates in StreamPhysicalPythonGroupWindowAggregateRule to ensure that only non - builtin aggregates are
removed the ` hasPendingEcho ` flag and related methods from ` EndpointState ` , ` Gossiper ` , and ` Server ` classes to
[ hotfix ] add getunreachabletokenowners ( ) method to gossiper .
[ geot - 4892 ] fix multiplication bug in geosymbolic ( x ^ 2 ) and x ( x ^ 2 )
added content type handling in FormAuthenticator and SavedRequest classes to ensure that the correct content type is set based on the saved request object
replaced static variable ` _ display ` with ` null ` and added null checks for ` localEnv ` and ` device ` in ` XToolkit .
updated RecommenderJob , RecommenderJob , and AbstractJob classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock ` in ` EnvironmentImpl . java ` to improve thread safety and performance in concurrent access scenarios
added a new test method ` testReadIdentityProviderInOtherZone Using Zones _ Token ` to ` IdentityProviderEndpointsMockMvcTests ` to ensure
[ hotfix ] [ runtime ] fix null pointer exception in pointintimetrigger
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve maintainability
fix rebalance push to add a new version to the broker with lock
[ cairo ] add ` ` cairo . detached . mkdir . mode ' ' configuration property to make sure ` ` cairo . mkdir .
[ java ] : add test to check if there be a high follower in the cluster .
updated label pattern from " authors3 ] [ authors3 ] [ year ] [ year ] [ year ] [ year ] [ authors3 ] [
replaced direct calls to ` getCxxPlatform ( ) ` with ` CxxPlatforms ` in ` DBinaryDescription ` and ` DLibraryDescription
refactored the initialization logic in GoogleTTSService and added dispose method in GoogleTTSService to improve resource management and ensure proper cleanup of
camel - 14263 : fix fileconsumedonefile issue when the file name do n ' t exist .
added a new boolean variable ` reopenReaders ` to ` SolrConfig ` and modified the condition in ` SolrCore ` to conditionally reopen readers
[ hotfix ] [ runtime ] add dialect for freeplane version in mapwriter
added methods ` currentDate ` and ` currentTimestamp ` to ` Update ` and ` UpdateTests ` classes to provide functionality for retrieving current date and
added a dup method to ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest . java ` to
refactor ` Condition ` and related tests to use a lambda expression instead of an anonymous inner class to improve code readability and reduce boilerplate
replaced ` TermQuery ` with ` ConstantScoreQuery ` in ` TestFacetsCollector . java ` to replace ` TermQuery ` with ` Constant
removed unused ` invoke ` classes from ` ConcurrentClassLoadingTest . java ` to clean up the code and improve maintainability
updated the providesUploadController method to provide direct nearby upload preferences to improve user experience by providing direct nearby upload preferences
fix db2 - > db2 - > db2 - > db2 - > db2 - > db2 - > db2
refactor logging statements in TraceGatewayEnvironmentPostProcessor , SamplerAutoConfiguration , SamplerAutoConfiguration , and SamplerAutoConfigurationTests to improve
[ bug - 64836 ] add a way to get the last pid of the xml property in workbookproperties .
[ geotiff ] fix negative _ infinity _ nodata bug in geotiffreader . read ( )
updated CLIDriver . java and SessionState . java to use UUID . randomUUID ( ) instead of Date . toString ( ) to improve resource management and
replace ` Executor ` with ` Scheduler ` in ` MockRestAdapter ` and ` MockRestAdapterTest ` to improve code readability and maintainability
added a default method ` selectByRuleIdSet ` to ` RuleConditionMapper ` and modified the ` selectByRuleIdSet ` method to
added a method ` addExitDescription ` to ` ExitStatus ` and updated related classes to streamline exit description handling to improve code readability and
fix multiblock render when the entity player be not the player .
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity by using a more descriptive variable name
removed unused import of Collections and adjusted range length calculation in PlotConfiguration . java to streamline code and improve readability
refactored ioalertcontroller to use uialertcontroller instead of uialertviewdelegate
replaced ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java `
updated parameter name from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in parameter naming
removed assertion for message retrieval in AdvServiceTest . java to simplify the test by eliminating unnecessary assertions
refactor key handling in MappingMongoConverter to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
updated Timber log message formatting in NearbyMapFragment . java to improve readability of log output for better debugging
camel - 14265 : camel - spring - boot should use ` ` javatype ' ' instead of ` ` javatype ' '
updated FuzzyLikeThisQuery to handle non - existing terms and added a test for non - existing fields in FuzzyLikeThisQueryTest to
updated the ` writeApplicationsLinks ` method to include a ` tabularList ` parameter and modified the ` writeApplicationsLinks ` method to
[ dspace ] use identifierservicefactory instead of dspace . getservicebyname in createmissingidentifiers . java
replaced calls to ` bytes . length ` with ` bw . getLength ( ) ` in ` assignBytes ( bytes , 0 , destIndex ) `
changed the return type of the getDisplayScript method from abstract to non - abstract and added a null return statement to provide a default implementation for the method
[ java ] do n ' t ignore key - press and value in remotewebdriver and basickeyboardinterfacetest
pdfbox - 4071 : optimize memory allocation for cosarraylist . cosobjects
do n ' t wait for dbus connection if there be no active interface
fix for bug # 45538 - hssfworkbook . getobjectdata ( ) and getallembeddedobjects ( ) should return
removed unused import of Shdr from ShaderNodeLoaderDelegate . java to clean up the code and improve maintainability
replaced ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve code readability and maintainability
pdfbox - 4892 : add support for symbol font ( pdfbox - 4892 )
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure proper rendering of
updated LiveTvGuideActivity and ProgramListAdapter to use a new instance of mCurrentGuideStart and added a method to retrieve the current guide
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new classes ` CommonParentTest . java `
added new library paths for " libfreetype . so " , " libfontmanager . so " and " libfreetype . so " to
refactor functionparser to use a dummy argument instead of a hardcoded value
[ gr - 26464 ] fix loop limit guard for protected non - overflow unsigned value .
[ hotfix ] [ runtime ] refactor typeframemodelingvisitor to use instanceofvaluenumber instead of instanceofvaluenumber
added a new ` LocalizedString ` class and refactored type argument handling in ` Resolve ` and ` Resolve ` classes to improve type argument
added a new boolean field ` disableClasspathSearch ` and its getter / setter methods in ` ServerConfig ` and updated the condition in ` DefaultContainer
updated AudioFormat array fields to be final and replaced manual array copying with Arrays . copyOf to improve code readability and performance by avoiding unnecessary array copying
updated the default value of ` retries ( ) ` from ` 0 ` to ` 2 ` in ` Reference . java ` and ` Reference . java
added settings handling in TexturePacker . java and updated processing logic in TexturePacker . java to enhance functionality by allowing users to specify the settings
added new views for uploaded images and wiki text views in AchievementsFragment . java to improve UI consistency and prevent potential null pointer exceptions
[ hotfix ] [ test ] fix test failure in translatingjavacphasetracertest
updated generator parameter from " & generator = allcategories " to " & prop = categoryinfo " in CategoryInterface and added a new CategoryInfo class
updated error messages in AuthzAuthenticationRequest . java for consistency to improve readability and maintainability of the error message
updated TaskbarStashController to utilize AccessibilityManager for managing taskbar auto - hiding timeouts to enhance accessibility by allowing customizable timeout
added ' ^ ' case to the signature parsing logic in GenericSignatureParser . java to ensure proper handling of the ' ^ ' character in signature processing
updated access flag retrieval in ClassVisitorDriverFromElement . java and added new test cases in StubJarTest . java to ensure correct access flags are
added null checks for the input parameter in IntervalFilter and improved null handling in LowpassIntervalsSource to enhance code robustness by preventing potential NullPointer
added unit tests for the ` EntrySetIteratorLastHashNext ` and ` EntrySetIteratorLastNext ` methods in ` MapInterfaceTest . java
added a serialVersionUID field to TreeMap . java to ensure compatibility during serialization and deserialization processes
updated the timestamp from ` Instant . ofEpochMilli ` to ` Instant . ofSecond ` in the ImageData . java file to reflect the correct
[ grobcov ] add support for f2m in singularwebservice
added encryption utilities for account names in AccountRemovalJob . java to ensure consistent key management across accounts
replace hardcoded " keep - alive " header with a utility method ` AsyncHttpProviderUtils . keepAliveHeaderValue ` to improve code readability and
fix a bug in postjoinmapoperation when there be no interceptor
mondrian : remove redundant processor from standarddialect . java
[ hotfix ] [ table ] remove unused spillenabled parameter from hashtable
refactor EnvironmentVariableHelper to use Optional for process environment variable retrieval to improve code readability and maintainability by reducing redundancy
[ ww - 4071 ] fix checkstyle violation in defaultactionmapper
added import statement for SerializableMode in Mockito . java and updated formatting in PluginSwitch . java to improve code readability and maintain consistency in formatting
set fieldinjectionpoint to null when fieldinjectionpoint be null
added support for isolation level in select statements and introduced a new method to parse isolation level in select statements to enhance flexibility in handling isolation level in SQL
updated HiveConnection . java to use constants for transport mode and HTTP path to improve code readability and maintainability by using descriptive constants
added a method ` isCacheable ` to ` GlobalOrdinalsWithScoreQuery ` to provide a way to check if the query is cacheable
added a new file TestStrangeControl . java that implements a multi - threaded strange control test to demonstrate the behavior of StrangeControl
updated file path from " . json " to " . jsfile " in JsFile and JsLibrary classes to ensure compatibility with the new
added selectionStart and selectionEnd fields to ShadowEditText class to enable customizable selection settings for improved user experience
refactor GRPCEnrichment to use try - with - resources for better resource management to improve resource management and prevent potential memory leaks
updated the ` use ` method in ` Jooby ` and ` Router ` classes to accept a ` path ` parameter and added null checks to
added null check for fst in FreeTextSuggester . java to prevent illegal state exceptions when lookup is not supported
updated output formatting in T4975569 . java and modified imports in T6729471 . java and T6729471 .
added handling for ABI writer class loading in JavacInMemoryStep . java to ensure that the correct ABI writer class is loaded from the
add @ suppresswarnings ( " booleanmethodisalwaysinverted " ) annotation to pubroot
[ hotfix ] [ runtime ] do n ' t call schedule when the thread be stop .
[ hotfix ] [ javadoc ] fix typo in energyendpointer
componentpresetchooserdialog do n ' t use preincrement if the first column be favorite .
removed unused imports from BazaarRepository , CVSRepository , CVSRepository , CVSRepository , and IndexDatabase classes
camel - 14540 fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated ` CxxLibraryMetadataFactory `
deleted the files ` Constants . java ` and ` DistanceUtils . java ` to remove unused files to streamline the codebase
refactor key splitting logic in RandomPartitioner . java to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
[ gr - 24386 ] fix the issue of incorrect initialization of native - image - class .
[ hotfix ] [ test ] add test for createinline in rolebindings
added debug logging statements to UaaSessionCookieConfig . java to improve traceability and debugging of session cookie configurations
updated the file name prefix calculation in HotseatFileLog . java to use the current year instead of a hardcoded date to ensure accurate file
updated the condition from ' o ' to ' v ' in ObservableBlockingSubscribe . java to ensure correct handling of the TERMINATED state
added error handling for invalid option handling in JavapTask . java and created a new class T8033711 . java to improve robustness
replaced ` Collectors . collect ( toList ( ) ) ` with ` toList ( ) . toList ( ) ` across multiple files to simplify
updated log level from error to warn and added shutdown handling in TaskDriver . java to improve logging granularity and handle shutdown scenarios effectively
[ hotfix ] [ network ] add option to enable tiered storage in input gate spec
refactor emailsenderservice to use isnotsuccessstatus ( ) instead of issuccess ( ) .
[ hotfix ] [ cuboc ] set gl20 to true to enable gl20
remove unnecessary check for return type in jimplebody . java
replaced ` DefaultSourcePathRuleFinder ` with ` AddToRuleKey ` and updated imports in ` OutputMacroExpander . java ` to
[ hotfix ] [ test ] change assertnojobslefteventually to assertnolightjobslefteventually ( )
added a condition to check for both " / build / " and " \ build \ " in the MergeWordsListTask . java file to ensure
update instructorfeedbacksessionresultsbundle and instructorfeedbackresponsecomment to use list < string , string > instead of list < string >
reformatted code for better readability to improve code readability and maintainability
added a new file ` TestEscapeThroughInvoke . java ` containing a class ` TestEscapeThroughInvoke . java ` to test the behavior of the
replaced direct stream skip method with IOUtils . read method in FilePreviewService . java to improve performance by avoiding unnecessary stream skip operations
updated the ` init ` method in ` ConnectionPool ` , ` DataSourceProxy ` , ` DataSourceProxy ` , and ` DataSourceProxy ` classes to
changed exception handling from Exception to Throwable in CoreContainer . java to improve error handling by capturing a broader range of potential exceptions
fix lrublockcache . getcurrentsize ( ) to return 0 if eviction be in progress
removed unnecessary null check for taskCount in RecentsView . java to simplify code and improve readability
updated sleep duration from 1000ms to 5000ms in HelixBrokerStarter . java and HelixServerStarter . java to allow more time
added new ` CoinmateExchange ` , ` CoinmateStatic ` , ` CoinmateStatic ` , and ` CoinmateStatic ` classes , and
[ guacamole - 480 ] improve warning message for unresolvable project . basedir
pdfbox - 4071 : fix npe in pdfbox - 4071
add setdisplaydata ( ) and setdisplaydata ( ) method to ptransform to allow customization of displaydata .
replaced instances of DefaultSubject with assertThat for null assertions in SubjectTest . java to improve readability and maintainability of the test code
added a security property for disabled algorithms in ClientJSSEServerJSSE to enhance security by preventing the use of unsupported algorithms
updated error messages in OptionData . java for clarity to improve user understanding of command and group creation issues
refactor module - info . java files for improved organization to enhance code maintainability and readability
added error handling for server errors in the ensureConnection method to improve robustness by providing clearer and more informative error messages
corrected the spelling of " sCheckingEvents " in LauncherInstrumentation . java and added a finally block in LogEventChecker . java to
added exception handling and improved exception logging in FileSinkOperator . java to enhance error logging and ensure proper resource management during file operations
added diagnostic printing functionality to the task execution in SchemaGenerator . java to improve error handling by logging diagnostics during task execution
replaced SemanticException with OptiqSemanticException in SemanticAnalyzer . java to ensure proper exception handling for invalid column references
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a HashSet to track loaded resource paths before scanning methods in ClasspathMethodScanner to ensure that only loaded resources are processed during method scanning
updated the method to retrieve the test instance and added error logging for service initialization failures to improve error handling and provide clearer error messages for service initialization
added null check for the response object before processing to prevent potential NullPointerExceptions when the response is null
added natIp field to EkeyConfiguration and updated logging messages in EkeyUdpPacketReceiver and EkeyHandler to handle null values to improve
updated ArrowByteBufAllocator to use ArrowByteBufAllocator instead of BaseAllocator in multiple classes to improve memory management and align with the latest
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for parser header and body buffer in HttpConnection . java and created a new test for expected responses in RFC2616BaseTest . java to
refactor MultiTimeout to use AtomicReference for upstream and requested initial variables instead of Flow to improve code readability and maintainability by encapsulating
patch by jbellis ; review by jbellis for cassandra - 1449
added @ Test annotation to TestOrcTimezone1 . java to indicate that the test is intended for execution
updated the conditional logic to include a findMatch method for metrics substrings and added a new method to find matching metrics substrings to enhance
replaced ` JsonUtils . objectToJsonNode ` with ` JsonUtils . objectToString ` in multiple files to improve error handling and provide clearer
updated JTable . java to handle null columnClass and added a new test class Test6888156 . java with icons and icons to improve robust
added a check for the existence of the SHELL environment before adding it to the arguments list to ensure that the shell is only added when the
updated the delete operation from 10 to 1 in DatabaseCleaningService . java to correct the subscription count from 10 to 1 to ensure the database is
replaced LinkedList with LinkedHashSet in MockitoExtension . java and added a new InjectMocks class in JunitJupiterTest . java to improve performance
refactor FieldMonitor class to improve code organization to enhance maintainability and readability of the code
added transactionDisable ( ) and modified fileMmapEnableIfSupported ( ) method calls in BTreeMapTest . java to improve transaction management and
modified the iterator initialization logic in SortedIntList . java and added a new test class SortedIntListTest . java to ensure proper iterator
added JMXHelper unregistering the object object in DefaultRemoteProxy . java and modified exception handling in JMXHelper . java to improve resource management
updated the default writebuffer size from 4MB to 64MB in RocksDBConfigurableOptions . java to accommodate larger writebuffer sizes
removed the ' 0 ' parameter from the constructor call in Style . java to simplify the initialization process by eliminating unnecessary parameters
change the argument type from " message " to " message " in FacebookShare . java to ensure proper handling of message encoding in the request
[ hotfix ] remove pipelinejsonrenderer . tojsonstring ( ) from samzarunner
remove vector3f . ZERO , use mouseinput . left instead of vector3f . zero
[ hotfix ] [ test ] fix typo in looprotatebadnodebudget
added a new method ` convertToMongoType ` to ` AbstractMongoConverter ` , ` MappingMongoConverter ` , and ` MongoWriter ` classes to
[ ggb - 2461 ] fix linkedgeo ( ) to work with the linked geo
[ java ] remove unnecessary array conversion from sendkeytoactiveelement
added methods to get scaled instance and reduce image dimensions in AddAndScaleMultiImage . java to enhance image scaling capabilities for improved rendering performance
removed redundant method extendArgumentCheck and extendWrapStore from DBMaker . java to streamline the code and improve maintainability
[ java ] add updateshiftstatenow ( ) method to anyminikeyboard . java
removed the detected activity from multiple classes to streamline the code by eliminating unnecessary dependency on the detected activity
updated imports from ` ExtensionConfig ` to ` org . eclipse . jetty . websocket . protocol ` across multiple Java files to reflect the new package
removed the import of Buildable from AaptPackageResources . java to clean up the code and improve maintainability
added warnings for unused methods in multiple classes to improve code readability and maintainability by addressing potential issues with unused code
updated error message to include status code for invalid upgrade protocol to improve clarity of error reporting for invalid upgrade protocols
corrected a syntax error in the blockMode assignment logic to improve code readability and maintain consistency
refactor Mockito class methods for improved readability to enhance maintainability and facilitate future updates
removed redundant permission checks for plot permissions in Merge . java to streamline permission checks to improve code readability and maintainability by eliminating redundancy
removed deprecated ` getConversationID ( ) ` methods from multiple classes to clean up the code and improve maintainability
updated imports in DummyFreeTTSVoice and DummyFreeTTSVoice to use featureprocessors instead of com . speech . freetts
updated the ` stripQuotes ` method in ` BaseSemanticAnalyzer ` , ` PartitionSpec ` , and ` PartitionSpec ` classes to utilize
replaced the ` Rendering ` class with a ` RendererConfiguration ` class and modified the ` updateRendering ` method in ` DLNAResource `
[ hotfix ] [ runtime ] fix a bug in defaultpluginmanager . getrepositories
camel - 14265 : camel - cxf should close the applicationcontext before the test be run .
refactor PhysicsClient class implementation to improve performance and maintainability of the code
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failures
added initialization of the file object in ZipFile . java to ensure the file is properly initialized with the specified name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in future
add a test for the default constructor of the channel to make it possible to create a channel .
added logging of call stack traces in GenericDAOImpl , ForumServiceImpl , and ReflectionUtils classes , and created a new StackTraceUtils class
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution and improve test coverage
refactor ` unparseList ` method calls to use a new ` needParen ` method for consistency to improve code readability and maintainability by
updated ` get _ CONFIGS _ SELECT _ MORE _ THAN _ ONCE _ QUERY ` and modified ` configsSelectedMoreThan
rename ` supressWarnings ` to ` suppressWarnings ` in ` UnsafeAutomaticSubstitutionProcessor . java ` to improve clarity and consistency in naming convention
updated JsonTreeReader to handle both NAME and END _ ARRAY and END _ DOCUMENT types to improve error handling and provide clearer feedback for
added an option to consume the internal runner in TestCommand . java and a new test method in ExternalTestRunnerIntegrationTest . java to ensure that the command
added dedup methods to SolrDeleteDuplicates , SolrIndexer , and indexSolr in SolrDeleteDuplicates and SolrIndexer classes to enhance functionality
[ hotfix ] [ table - common ] add support for blink planner in planner example
added a call to clear the database in MssqlIntegrationTest . java to ensure the database is cleared before further operations
fix a bug in progress . setrenderpercentageontop ( false ) and add a dispose ( ) method in progress .
added a check for the existence of the parent file in the PathResource class to ensure that the parent file exists before proceeding with operations
added methods for writing and closing POI documents in IOUtils . java to ensure proper resource management and prevent potential memory leaks
updated print statements in JavaBuild . java to include newline characters to improve readability of output messages for better user experience
replaced Box with BlockBox and added getter methods for root and dotsPerPoint in ITextRenderer . java to provide access to the root box and
added custom query handling in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to include port 10636 to
added default ports functionality to the router and its builder classes to enhance the server ' s functionality by allowing users to choose between server and HTTP servers
[ java ] update snmp target status if the handler be initialize .
add instructor permission to the edit page action for instructors with submit privileges
added @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor path extraction logic in FileResolverImpl . java and add a new test class WarFileResolverTest . java to improve code readability and
updated the string concatenation for newFlushedSize in DocumentsWriterPerThread . java to include docstores and include docstores to enhance read
updated the DIRT block output to use the unlocalized name instead of a hardcoded value to improve clarity and accuracy of the output message
fix imageprocessor . stripwhitespacey ( ) to not strip whitespace
increased the lazy weak lock size from 1000ms to 1000ms in FeedRefreshUpdater . java to improve performance by reducing the number of concurrent threads
updated ` deserializeFrom ` method to include ` exactSearch ` in ` TsFileSequenceReader . java ` and added tests in ` Measurement
removed the ` dateFormat ` parameter from the ` CSVSaveService ` constructor to simplify the code by eliminating unnecessary parameters
added a dimension to the pane ' s setPreferredSize in NavigationShareTab . java to enhance the visual appearance of the tabbed pane
replaced ` OffsetAttribute ` with ` State ` in ` BeiderMorseFilter ` and updated attribute handling in ` BeiderMorse
refactor UpnpAudioSinkReg , UpnpRenderer , UpnpRenderer , and UpnpEntryQueue classes to improve code organization and maintainability
fix lswarp . setcollidedat ( x , y , z ) not work
refactor JsonTest to introduce a new ` toJson ` method for converting ` Json ` objects to a JSON string to enhance test coverage and ensure
refactor MutableContextDataSupplier class implementation to improve code readability and maintainability
updated exception handling in CoreContainer to catch Throwable instead of Exception to improve error handling and provide more informative logging
added https parameter to KubernetesMockServer constructor in KubernetesServer . java to enable secure communication for the Kubernetes
[ gr - 24186 ] fix the bug of the unary math intrinsic node in the defaultjavaloweringprovider
updated HTTP status codes from METHOD _ NOT _ ALLOWED _ 405 to METHOD _ NOT _ ALLOWED _ 405 in DefaultServlet . java
[ tika - 1338 ] fix format for lat _ long _ format to be locale - US
refactor exception handling in ShowFileRequestHandler to use rsp . setException instead of throwing a new SolrException to improve error handling and provide clearer
added try - catch functionality to ` ReflectorClassWriter ` to handle Throwable and InvocationTargetException to improve error handling and ensure proper exception management in the
added clamp method to Vector2 and implemented clamp method in Vector2 to provide functionality for clamping vectors based on minimum and maximum limits
added OAuth2Authentication handling in ChainedTokenGranter . java to ensure requested scopes are correctly set based on the incoming token ' s client information
refactor BC _ instanceof . java for improved functionality to enhance code readability and maintainability
replaced the use of setSaveFlags ( SAVE _ ALL ) with a static final logger instance to improve logging clarity and maintainability by using a
updated JUnit 5 annotations and annotations in UaaUrlUtilsTest . java and UaaUrlUtilsTest . java to use JUnit 5 for
hhh - 14499 - make nativequeryscalarreturn a domaintype instead of a type
added synchronization for font retrieval in SunLayoutEngine . java to ensure thread safety when accessing shared font settings
replace IntBigArray with IntArrayList in TypedSet . java to improve performance by utilizing the IntArrayList for better memory management
eranmes : use sessionid instead of sessionid in webdriver . getcurrentwindowhandle ( ) .
refactor BrokerRequestUtils methods for improved readability to enhance maintainability and reduce complexity in the codebase
refactor InjectorBuilderImpl to improve handling of injectables and instance creation to enhance code readability and maintainability by encapsulating
replaced calls to ` getBuckConfigView ( ParserConfig . class ) . getAbsolutePathToBuildFile ( ) ` with ` getBasePath ( )
added a null check for the value before setting the result to avoid potential NullPointerExceptions when the value is null
add keepalivemanager to keepalivemanager so that we do n ' t need to re - create a keepalivemanager .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.0F to 0.07 in IntHashSet . java to ensure the default load factor reflects the
added ` getAllDataTypePhysicalVariations ( ) ` method to ` VectorizationContext ` , ` VectorPTFOperator ` , and ` VectorP
move htmlassettranslator and stringsresourcetranslator from zxing to zxing . client . j2se
refactor conditional checks for overview actions in OverviewState . java to improve readability and maintainability of the code logic
added @ Entity annotation to BaseActivityEventEntity . java to enable entity - related functionality in the application
added TraceHelper partition section calls to NavBarSwipeInteractionHandler , TouchInteractionService , and changed SYSTEM _ TRACE to false in TraceHelper to
added a new file ` InvalidOptions . java ` that implements an option to validate Java program behavior to ensure that the application correctly handles invalid options and
added error logging for inconsistencies in DisplayController . java to improve debugging by providing insights into the number of displayed displays
refactor ` getClientIdAndClientSecret ` method to ` OAuth20Utils ` and introduce a new utility method ` getClientIdAndClientSecret `
changed the default value of _ unwrapServletException from false to true in ErrorPageErrorHandler and AsyncContextTest to enable unwrapping functionality in the error handler
set the status of ` si . status ` to ` ShortcutInfo . DEFAULT ` in ` PackageUpdatedTask . java ` to ensure proper handling
camel - 14265 : camel - seda should use default unbounded queue size instead of a fixed size .
added batchUpdateStart and batchUpdateEnd methods to the App class to enable batching of updates in the application
added http client configuration to the ThirdEyeApplication class to enhance the application ' s ability to configure the HTTP client within the application
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enable sorting functionality in the job execution process
updated CryptoFacilitiesTradeService to retrieve open order IDs from OpenOrders instead of throwing an exception to improve order cancellation logic and
ggb - 222 hide the keyboard when click on the web .
refactor memmove method to use nativefunctioninterface instead of hardcoded integer
updated formatting and formatting in BindLdapAuthenticationHandler . java for consistency to improve code readability and maintainability
added blockToolTip property and its getter and setter methods in ToolTipManagerW . java to control the behavior of the ToolTipManager component
updated DefaultDateTypeAdapter constructor to accept a timeStyle parameter and added a setter method for the time style in GsonBuilder to enhance flexibility in date
updated playerSet format in ListCommand . java from " < UID : " to " ( ( ) " ) " in ListCommand . java to
added a check for empty list in the List class to ensure that an empty list is returned when no elements are present
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper exception management for CommandExceptions
updated the ` getLikeExpression ` method to include a ` isLike ` parameter and modified the ` getLikeExpression ` method to accept a boolean
added start and stop methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl classes to provide functionality for starting and stopping streams in the component
added locale handling in the runChild method in LuceneTestCase . java to ensure consistent locale configuration across tests
refactor multiple SSL - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor context handling in DefaultServlet to use a dedicated initContextHandler method to improve code readability and maintainability by reducing duplication
add a test for the route builder reference in the OSGiBlueprintTestSupport class to verify the functionality of the route builder reference in the OS
[ flink - 24386 ] [ test ] fix test failure on window
refactor ` returnTypeSubstitutable ` methods to accept a ` Warner warner ` parameter for improved clarity to enhance code readability and
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13389 : add throttle
removed unnecessary pixel assignment in ColorBleedEffect . java and added conditional check in SpriteBatch . java to streamline code and prevent unnecessary
refactor Annotation and AnnotatedElement classes to improve code organization to enhance maintainability and readability of the code
added a new interface ` Model ` and updated ` Sheet ` , ` Workbook ` , and ` Workbook ` classes to implement the ` Model `
camel - 14263 : camel - cxf - filter should use camel _ filter _ pattern instead of camel - cxf
added a boolean flag ` clearEntityManager ` to the ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to allow configuration of
added null checks for ` ShortcutInfo ` in multiple classes to prevent potential NullPointerExceptions during shortcut addition
updated TwoDimensionalCollectionValuedMap instantiation to include a new boolean parameter to ensure proper initialization of the TwoDimensionalCollectionValuedMap instance
updated exchange names from " btc - e " to " Wex " in WexExchange . java to align with the new naming conventions
added null checks for columnReaders and readers in OrcEncodedDataConsumer and EncodedTreeReaderFactory to prevent potential NullPointerExceptions during
added null check for segments in the directory in SegmentInfos . java and a new test method in TestIndexReader . java to ensure robust error handling
[ flink - 24198 ] [ table - planner - blink ] use itestdatabuilder instead of list . of ( )
modify the calculation of ` percentValue ` to handle negative values more gracefully to improve code readability and handle potential negative values more gracefully
updated limit validation in RangeInputStream and RangeReader to return - 1 instead of 1 in RangeInputStream and RangeReader classes to ensure proper handling of invalid
camel - 16297 : camel - spring - boot should print duration if there be no route
[ java ] fix typo in hlchunksource . getnextchunk ( )
refactor ` NumericRangeFilterBuilderTestCase ` and ` NumericRangeQueryBuilderTestCase ` to extend ` LuceneTestCase ` instead of ` TestCase ` to improve
[ hotfix ] [ runtime ] add test for statefulmapper2 . map ( )
removed null check for fill before setting bitmap shader shift in Area . java and Line . java to simplify code and improve readability
removed the ` dbExists ` method from the ` Blockchain ` class and updated the ` dbExists ` method in ` BlockchainTest ` to
trim whitespace from the group value in SQLPlusSupport . java to ensure consistent behavior by removing leading and trailing whitespace
http : / / issues . apache . org / jira / browse / apr / browse / apr / browse / apr / a
updated the calculation of the divider location in DockSplitPaneW . java to ensure the correct divider location is used for better user experience
added health check metrics for controller health checks in ControllerMeter and PinotControllerHealthCheck classes to enhance monitoring capabilities for controller health checks
removed shared avatars from the item view in LocalFileListAdapter to improve user experience by hiding unnecessary avatars
move scss from web . scss to web . resources . scss . scss . scss . scss
[ java ] remove unnecessary ' > = ' operator from argument array .
added logging functionality to LogInterceptor to ensure command execution is only executed if log level is not FINE
replaced CountDownLatch with assertWaitUntil for finished spans in EventBusTracingTestBase . java to improve readability and maintainability of the test code
refactor locale handling in QueryParser to use Locale . getDefault ( ) instead of a static method to improve code readability and encapsulation
refactor : remove unused private variable in entrycustomizationdialog . getalltypes ( )
make rulebaseimpl public so that it can be use by the ruleset .
updated OCSPResponse . java and added a new OcspUnauthorized . java file to improve OCSP response handling and add OC
added a volatile server state variable and modified sleep duration in SSL . java to improve thread management and error handling for server failures
added a new constant ` COUNTER _ OPEN _ CONNECTION _ COUNT ` and its getter / setter methods to track the number of active connections
[ field ] add interfacetype . builder . fields ( ) method to interfacetype .
refactor createDefaultJavaPackageFinder to return srcRoots instead of paths to improve code readability and maintainability by encapsulating the
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to improve performance by utilizing ` PrintWriter ` for output writing
[ hotfix ] [ test ] fix test failure in filesourcetextlinesitcase
added import for DataTable and modified JRubyStepDefinition to support handling of DataTable instances in JRuby step definitions
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 420 .
refactor ReadSentimentDataset class to improve code organization to enhance maintainability and readability of the code
updated error message in FormulaParser to include more context to improve debugging by providing clearer feedback on parsing errors
added a bindAddress getter and setter methods to the WebSocketClient class and refactored connection binding logic to improve code readability and maintainability by
[ java ] fix checkstyle violation in modulesensusmoduleharness
refactor WidgetGroup to streamline width and height assignment logic to improve code readability and maintainability by reducing redundancy
change the type of ` sessionFixationAttribute ` from ` equals ` to ` Boolean . valueOf ` in ` HttpSecurityBeanDefinitionParser . java `
updated the switch statement to use the edgeOption parameter instead of a hardcoded value to improve code readability and maintainability by using a more
added a linear backoff coefficient to the ChromeBinary class and modified the backoff logic to increment the backoff coefficient to improve the responsiveness of the backoff
added URI attribute handling in TraceExchangeFilterFunction and updated ClientResponseWrapper constructor to include method and route attributes to enhance functionality by allowing dynamic configuration of
[ hotfix ] [ table - planner - blink ] use integer . min _ value for compactedrow
updated return values in ICC _ Profile , ColorConvertOp , and ColorConvertOp classes and added a new test class for invalid rendering intents to
add ' on ' and ' on ' parameter to contribute question
added calls to waitProduceNextBlock and PublicMethed . waitProduceNextBlock in ContractInternalTransaction003 . java to ensure proper handling
removed Serializable interface from KafkaRecord and KafkaRecord classes to suppress compiler warnings for REC _ CATCH _ EXCEPTION
added PGConnection support in PooledConnectionImpl . java and created a test for PGConnection in BaseDataSourceTest . java to ensure compatibility with Postg
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
changed log level from warn to info for missing token encryption secret in TokenAuthenticationHandler . java to provide more informative log messages when no token encryption
removed the @ Deprecated annotation from Hazelcast . java to clean up the code and indicate that the class should no longer be used
updated the handling of UNLIMITED _ KEY _ JCE _ REQUIRED in AmbariManagementControllerImpl , AbstractServerAction , and Final
updated NamedListCodec to use ITERATOR and EXTEND _ OBJ in NamedListCodec and added new iterator methods in TestNamedList
added null check for partition state before assigning owners in MigrationManager . java to avoid potential NullPointerExceptions during partition assignment
added schema inclusion rule to ApiExample options to ensure that public schemas are included in API documentation
updated the expected value of ` mean . doubleValue ( ) ` from ` 3.0 ` to ` 7.0 ` in ` StreamExpressionTest
fix ( ora ) : ensure valid ring for single point ora geometry
added base name and getDimensionCount methods to ConstantPool class to provide functionality for retrieving base names and dimensions in the ConstantPool class
add setdebugoutputfornexteval ( boolean value ) method to formulaevaluator , sheetutil , and xssfformulae
test : migrate testmodule to junit 5 ( # 4447 )
removed the ' false ' parameter from the profile initialization in LegacyMediaManager . java and added a condition in PlaybackController . java to simplify profile
added a return statement to the DynamicStyleBar class to ensure proper execution flow and prevent potential errors
added logging statements for database properties in Utils . java to improve visibility into database properties for debugging purposes
refactor ReactiveAuthorizationManager to improve code organization to enhance maintainability and readability of the code
added a condition to check if the type is a boolean before promoting strings to objects to ensure compatibility with both object and boolean types
[ gr - 32332 ] fix null address issue in llvmfunctionstartnode
refactor multiple Java files to improve code organization and consistency to enhance maintainability and readability of the codebase
add test case to verify transaction aware cache proxy
added a new method ` calculateBoundingBox ` to the ` Mesh ` class to calculate the bounding box based on the number of vertices and its attributes
added a new ` TargetHashFunction ` enum and refactored the hashing logic to use it to improve flexibility and maintainability of hashing
refactor DefaultConfigurationProperties class to improve configuration handling to enhance maintainability and readability of the code
updated high light color and alpha settings in ListViewMultiChartActivity and added arrow rendering in BarChart to enhance visual clarity and ensure proper visibility of the
[ hotfix ] [ table - planner - blink ] do n ' t add sg path plan to pgsgpathplanmap
updated InfinispanRemoteProducerIT . java from 2 to 1 in InfinispanRemoteProducerIT . java to correct the test case
added locking mechanism to ` MavenArtifactFetcher ` and modified ` MavenDependencyResolver ` and ` MavenDependencyResolver ` to use ` FileLock `
updated fragmentShader to use " # ifdef GL _ ES " instead of " varying vec4 v _ color " in SpriteBatch . java
changed the return type of ` SortedSet < Address > ` from ` SortedSet < Address > ` to ` Set < Address > ` in multiple classes to
added exception handling for JspPage loading in TagLibConfiguration . java to improve error handling and reduce log verbosity when no TLF processing fails
updated CustomAnalyzer and TestCustomAnalyzer to use DummyVersionAwareTokenFilterFactory instead of Version . LATEST to ensure compatibility with the new token filter
added a test method to ` ShadowPackageManagerTest ` to verify the functionality of reading and retrieving package archive information from the package manager to ensure that the
replaced direct calls to ` invoke ` with ` MethodUtil . invoke ` across multiple files to improve code readability and maintainability by using a consistent
added imports for ProjectConfigurationStartEvent , ProjectConfigurationStartEvent , and TaskStartEvent in GradleBuildService , and modified ProgressProgressListener to
remove unnecessary synchronization in androidwebdriver . syncobject ( )
remove unnecessary check for initializationfailtimeout in hikariconfig . getinitializationfailfast ( )
removed the ` int timeOut ` parameter from the ` getResult ` method and added a new method ` error ` to simplify the method signature and improve
changed the ` isNative ` variable from ` in ` isNative ` to ` transient ` and modified the ` addEntry ` method call to use
corrected the formatting of the error message in CEntryPointCallStubMethod . java to improve code readability and maintain consistency
rename ruleenablehandler to ruleenablementactionhandler in core module
[ java ] fix javadoc warning and add javadoc to tagsupport
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of log messages for better debugging
updated method names from ` getBasicSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` and ` getBasicSourceOptions ( )
added error handling for repository owner retrieval in UsersPanel . java to improve robustness by avoiding null pointer exceptions during repository ownership checks
added support for a new font type " . OTF " in the SunFontManager class to ensure compatibility with additional font formats
refactor type matching logic in AnnotationMatcher to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
changed the default value of " OFF " from " OFF " to " SEVERE " in Grep . java to provide a more informative
added a conditional check for debug logging before logging messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is
[ java ] use list . size ( ) instead of arraylist in SurefirePlugin . java
added a new method ` onHomeIntent ( ) ` to check if the folder is open before moving to the default screen to ensure that the home
updated the maximum bitrate from " 110 " to " 30 " in PMS . java to allow for more flexibility in bitrate settings
removed the ` getOptions ( ) ` method from the ` CommandLineParser ` class to simplify the code and improve readability
trim whitespace from the description string in MutableDatabaseProperty . java to ensure consistent formatting of the description string
updated the filename construction in XOMParserTest . java to use a direct path to improve clarity and maintain consistency in file path handling
[ hotfix ] remove unnecessary pid ( ) call in processbesunoderunner
added getLoadedMusic ( ) and getLoadedSound ( ) methods to MusicLoader , SoundLoader , and MusicLoader classes to provide access to music
removed unused imports from OnBeanCondition . java to streamline code and improve readability
added ScreenRecord annotation to RequestPinItemTest . java to enable screen recording for testing purposes
[ bugfix ] fix npe in cpufeature and memoryfeature . setselected ( false )
replaced ` PreferenceMultiline ` with ` PreferenceCategory ` and updated preference handling in ` Preferences . java ` to streamline preference management and improve code
fix checkstyle issue in xmppconnection . java
updated StringBuilder initialization in ObjectInputStream . java to ensure proper initialization of StringBuilder based on utflen to prevent potential issues with invalid UTF lengths
disable statsd in spring metrics auto - configuration in integration test
refactor InterruptedException class implementation to improve code readability and maintainability
refactor ServiceTicket class to improve code organization to enhance maintainability and readability of the code
refactor connection handling logic in ConnectionCheckOperation . java to improve code readability and maintainability by reducing redundancy
[ flink - 24186 ] [ table - planner - blink ] do n ' t convert string to string to address payload string
updated the number of fields in DSpaceCollectionItemFilterPlugin . java and updated the test cases in XmlWorkflowFactoryTest . java to reflect the
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to the AuthenticatorActivity to ensure the AuthenticatorActivity behaves as intended
fix : remove deprecate deprecate method in patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` from ` void ` to ` boolean ` and modified the ` beginDraggingWidget ` method
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for the root in DynamicStyle . java to prevent potential NullPointerExceptions when the root is null
[ java ] add confusion matrix to test classifier .
bug 60297 - jmeterthread : use lastsampleok instead of lastsampleinerror in case of error
added unit tests for Bluetooth connection state and connected devices in ShadowBluetoothHeadsetTest . java to ensure correct behavior of Bluetooth headset device
rename ` ` autowire ' ' to ` ` autowired ' ' in propertybindingsupport
added " clone " and " finalize " constants to the objectMethods set in ResultObjectProxy . java to enhance functionality by allowing the " finalize "
added null checks for counters in IntegrationTestBigLinkedList . java to prevent NullPointerExceptions during generator verification
add support for ` cangetinstanceinfo ( ) ` and ` cangetinstanceinfo ( ) `
added a serviceId parameter to the setRegisteredServiceFilter method in SamlIdPServicesManagerRegisteredServiceLocator to ensure that only valid SAML registered services
added a null check for the activity before executing the UI thread in PhotoFragment . java to avoid potential NullPointerExceptions when getActivity ( ) is not
corrected the spelling of " LOGGER " to " logger " across multiple files to improve code readability and maintain consistency in naming conventions
added stringType property to DatabaseAdaptor and updated JDBCSessionDataStore and JDBCSessionDataStore to utilize this new method to improve flexibility in handling string types
updated UIMAUpdateRequestProcessorTest to use " suggested _ category : " instead of " language : english " and added exception handling to improve test
refactor thread name handling in multiple classes to use a dedicated updateThreadName method to improve code readability and maintainability by centralizing thread name
refactor TaskletAdapter to improve code organization to enhance maintainability and readability of the code
drools2200 : dmn will _ be _ null if _ negative ( ) return null if negative
use glflush ( ) for texturemap . getglflush ( ) on macosx
added tooltip to the showCGCP checkbox in RocketPanel . java to improve user experience by providing a clearer tooltip for the CGC
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` , ` InterfaceFactory
add text , description , and text to hotreload action ( # 119 )
ggb - 149 fix for bug where column name can not be find .
corrected the calculation of the BRIGHTNESS _ FACTOR constant from intValue ( ) to doubleValue ( ) in BindingConstants . java to ensure
remove filter _ action _ pattern from scmhistoryparser so that it do n ' t throw exception .
added a new parameter ` isAdmin ` to the ` createUser ` method in ` HomekitAuthInfoImpl . java ` to allow users to
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and ` PropertyDescriptor `
updated debug log messages to use placeholders instead of string concatenation to improve readability and maintainability of log messages
updated method names from " runnable " to " task " in Context . java and Request . java to improve clarity and consistency in naming conventions
fix itemstack . setcapabilitiesfromspongebuilder # setcapabilitiesfromspongebuilder # setcapabilitiesfromskybuilder
updated the assertion in LifecycleUtilsTest from " default " to " executionId " to ensure the test accurately reflects the intended execution ID
added validation for creating a second contract with one account in Wallet . java and improved error handling in GetContractServlet . java to enhance contract creation
added package - info . java files for various image , image , runtime , and virtualization - related classes to provide package - level documentation for the
removed synchronization from the add method in DocumentsWriterDeleteQueue . java to improve performance by avoiding unnecessary synchronization
added a check for duplicate JavaFileObjects before parsing trees in JavadocTool . java and modified test arguments in T7091528 . java to
changed the default value of STRIP _ IPV6 from true to false in HostPort . java to ensure proper handling of IPv6 addresses in
added a parameter to the LoginServerTokenEndpointFilter constructor and modified the LoginServerTokenEndpointFilter to accept a list of parameters to enhance flexibility in
added a check for the " c " key in the LanguageFactory and updated the condition in CPPParserTokenManager to include a new constant C
replaced the usage of ` ThreadPoolExecutor ` with a custom ` MoreExecutors . newSingleThreadExecutors ` class to improve code readability and
added cache control and expiration headers in LoginService , FormAuthenticator , and ConstraintTest classes to ensure proper handling of cache control in the login page
updated error logging to include exception details to improve error reporting by providing more context about the error message
updated HSSFTests to use TestAreaReference , TestAreaReference , TestSheetReferences , and TestEmptyDocument classes instead of AllHSSF
refactor FetchHTTP2Test , FetchHTTPTestBase , and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for output before retrieving classDirectory to avoid potential NullPointerExceptions when output is null
added access control for external resource control priority in Java2DRenderer . java to enhance security by ensuring proper access control for external resources
added error handling for JDK rendering failures in TestTriggerCoverage . java to improve robustness by providing clearer error messages when JDK
changed the visibility of the ` mbean ` variable from ` private static ` to ` private final static ` and modified the main method to handle CPU time
added checks for empty space comments in TabsAndIndentsVisitor . java to ensure proper handling of whitespace in the code logic
updated assertions in SimDistribStateManager and TestTriggerIntegration to use greater than 100 instead of 5 . 0 to improve clarity and correctness of
updated comparisons to use case - insensitive comparisons for string comparisons across multiple classes to ensure case - insensitive comparisons for change sets
removed the ` getString ` method from ` ShadowBundle ` to streamline the code by eliminating unnecessary null checks
added locale handling for time formatting in TweetActivity to ensure consistent date formatting across different locales
added a check for empty connections before returning an empty list in StandardProcessSession . java to prevent potential NullPointerExceptions when no connections are available
refactor keyboard focus handling in DetailFragment . java to improve code readability and maintainability by reducing duplication
updated the way the extra class path is set based on the file ' s getCanonicalPath ( ) method to ensure compatibility with different operating systems
[ ggb - 221 ] fix bug where matrix . solve do n ' t work in multi - threaded mode .
added import statement for Message in GenericMessage . java to enable integration with Spring ' s Message class in the application
refactor SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a dedicated join method to improve code readability and maintainability
updated filter selection logic in AquaFileChooserUI . java to use setSelectedItem ( ) instead of fireContentsChanged ( ) and added a check
fix checkstyle issue in p2ptransportmanager . java
updated the method to return a boolean instead of a string representation of a boolean and added a new test for the toFormulaString method in TestArray
[ hotfix ] fix checkstyle violation in PGtokenizertest
refactor type element handling in Java2TypeScriptTranslator and test cases in GenericsTests to improve code clarity and ensure proper handling of anonymous variable
added sequence creation logic in PostgreSQL for auto - increment columns to ensure compatibility with PostgreSQL ' s auto - increment feature
modified byte reading logic in DataInput . java by removing unnecessary bitwise operations to simplify code and improve readability
updated assertions in ImageParserTest . java to reflect the correct dimensions for VerticalPhysicalPixelSpacing and HorizontalPhysicalPixelSpacing
updated the assignment of the parent variable to use the parent object to ensure the correct parent instance is used for proper functionality
updated import statements and formatting in multiple Java files to improve code readability and maintain consistency in formatting
refactor nativecryptotest to use engine _ free instead of engine _ finish .
added handling for iteration events in InterleaveControl and updated related classes to utilize this new iteration method to improve event management and enhance clarity in event
added release of HttpContent in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leaks
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are deleted after tests are completed
added a check for the presence of " twitter : / " in the URL before starting the web view to ensure that the URL is only launched when
[ hotfix ] [ test ] await host status in deploymentgrouptest
changed logResult from false to true in VisibilityController . java to ensure correct logging behavior for labels
increased the maximum number of retries from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of retries for better resource management
[ hotfix ] [ test ] remove system . out . println from standardtypemappercomponent
added support for a new fraction resource type in the resource loading process to enhance resource handling capabilities for fractions in the application
removed a conditional check for writing a file in BasicFrame . java to simplify the code by eliminating unnecessary checks
updated the ` findNewerDependencyVersion ` method to retrieve group and artifact IDs from resolution results to ensure that the correct group and artifact ID
hbase - 16469 - improve error message for exceed table quota in namespace
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class implementation to improve code readability and maintainability
added a check to ensure f0 is non - negative in HTSVocoder . java to ensure that f0 is non - negative
added null checks for connectionCatalog and updated logging messages in SchemaRetriever and TableRetriever classes to enhance robustness by preventing potential NullPointerExceptions
[ java ] make b2cconverter . getcharset ( ) more efficient .
added preferences for empty screens in the Workspace class to enhance user experience by allowing users to choose between empty pages and empty pages
added a warning log for deprecated cucumber - needles in NeedleFactory . java to inform users that the feature is outdated and should not be used
refactor ` ShadowActivityTest ` and ` ShadowArscAssetManager ` to use ` Resources . Theme ` instead of ` TestActivity ` to
updated error messages in VerifyFast . java to use ` Arrays . toString ( byteArray ) ` instead of ` String . toString ( byteArray ) ` to
no effective change - remove @ system _ versioning _ alter _ history
added support for the " __ proto __ " function in the ScriptObject class and updated its usage in Global , Global , and ScriptObject classes to
added a random ( ) method to the shuffle method call in TestFilterDirectoryReader . java to ensure that readers are ordered by a specified random number
updated the display name retrieval logic in UsersAndGroupsSearchProvider . java to conditionally share remote clarification based on user name to enhance user
updated the path format in CookieRetrievingCookieGenerator to use StringUtils . defaultIfBlank to ensure proper handling of blank paths in the cookie
removed unnecessary closing braces in AttachModel , JvmJvmstatModel , and JvmJvmstatModel classes to improve code readability and maintain consistency in
[ hotfix ] [ table - common ] make cache name final in abstractcacheservice
updated comparison logic in ValidationResult . java to use ' ve . pageNumber ' instead of ' pageNumber ' to ensure correct comparison of pageNumber
added a condition to check if the focused widget is not null before comparing it to ensure that the focused widget is not null before proceeding
corrected formatting of method parameters in SoundUtil . java to improve code readability and maintain consistency
refactor ApplePackageDescription to use a new method ` getAppleCxxPlatformsProvider ` for retrieving the AppleCxxPlatform flavor domain
add a test to verify the functionality of the clickhousify SQL query in ClickHouseStatementTest . java to ensure the correctness of the
rename onConnect method to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to improve clarity and consistency in method naming
refactor EnglishPTBTreebankCorrector class implementation to improve code readability and maintainability
added a new file TestGetLoggerNPE . java to test logging behavior to verify the behavior of logging and security policies in the Java AWT
remove the sharedmap in the scriptedprocessor and scripteddeciderule to reduce memory usage .
do n ' t throw espressoexception when use castexact for object [ ] .
added regex pattern for matching the " NEXTVALVALFOR " value in NextValExpression and updated related methods in ExpressionDeParser to enhance the
add more info to vmerror when resource bundle access be not pre - cached
refactor BoundedLocalCache to improve buffer draining logic and add a test for pending writes to enhance cache management and ensure proper removal of pending
added order direction parameter to QuoineExchange and QuoineNewMarginOrderRequest classes and updated QuoineNewMarginOrderRequest to include
added boundInitialization method to PropertyDescriptor and created a new test class Test7192955 with property change listeners to ensure that the MyBean class
replaced ` failsafeWidth ` and ` failsafeHeight ` with ` setDisplayModeCallback ` in ` LwjglApplicationConfiguration ` to
added a null check for the parent form before setting buttonsAwatingRelease to prevent potential NullPointerExceptions when the parent form is not initialized
updated wrapWidth calculation to use getWrapWidth ( ) instead of snappedRightInset ( ) in LineCell . java to improve layout responsiveness
corrected a syntax error in XSLTErrorResources _ it . java to improve code readability and maintain consistency
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to ensure consistent iteration order for paramValues
replaced direct string concatenation with String . format for consistency across multiple classes to improve code readability and maintainability by utilizing standardized string formatting
replaced the use of NamespaceContext with a direct call to getNamespace in StaxXmlPullParser . java to simplify the code and improve readability by
added a boolean field ` nestedJoins ` to ` TestAll ` , ` TestBase ` , ` TestLimit ` , and ` TestOuter
cloudstack - 10297 : fix error message for admin only
added handling for JavacFileManager in SourceFileManager and modified CompletionProvider to include a cursor parameter in CompletionTaskProcesor instantiation to improve
added configuration variables for METASTOREURIS , HIVE _ AUTHORIZATION _ MANAGER , and HIVE _ AUTHORIZ
replaced JUnit assertions with assertThat in KuduIOIT . java and XmlIOTest . java to simplify import statements and improve code readability
update metadatarenderer and textrenderer to use util . createhandler ( ) instead of createhandler ( )
updated offsetMemorySize calculation from SIZE to BYTES in SymbolMapReaderImpl . java and added a new test for symbol file mapping in LineTcp
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
removed the Reflection class and updated its imports in Jooby . java and TypeConverters . java to streamline the codebase by eliminating
refactor ThreadlessExecutor to use a dedicated setFinished ( ) method instead of a sharedExecutor instance to improve code readability and maintainability by
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter . java and added a new test for DateTimeException in TestDateTimeParsing . java to ensure proper
updated variable names from ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` for consistency to improve code readability
added a new case ` WILDCARD ` to the ` Types ` class and created a new class ` T7034495 ` with generic
[ java ] do n ' t call doblock ( ) if there be no key in the loop .
refactor conditional statements in TransclusionDecideRule . java to improve readability and maintainability of the code
remove versionutils . getmicronautversion ( ) and printmicronautversion ( )
added assertions to verify the functionality of the new _ sheet and getNameDefinition methods in TestBugs . java to ensure that the name record and its
add ` ` description ' ' to ` ` name ' ' and ` ` name ' ' in mind icon
updated the ` onHomeIntent ` method to accept a boolean parameter ` internalStateHandled ` instead of ` onHomeIntent ` to allow for
removed redundant calls to getPreferDependencyTree ( ) in CxxBuckConfig . java to improve code readability and maintainability by reducing
added a new method ` showDetails ` to multiple activities and modified the ` FileDetailFragment ` instantiation to include an ` activeTab ` parameter to
updated function name from " $ apply " to " apply " across multiple files to standardize function naming conventions for consistency across the codebase
add randomize253state ( ) method to MinimalEncoder . java and adjust test assertions in HighLevelEncodeTestCase . java to ensure that
updated header descriptions and formatting in SourceBuilder . java for consistency to enhance readability and maintainability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure that the adapter updates correctly when data changes
removed the setDefaultWALSyncMode method from ShadowSQLiteConnection . java to streamline the code by eliminating unnecessary methods
updated type checks in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to improve type safety and ensure correct handling of generic types
[ s3 ] remove unused method from defaults3crtasyncclient
updated test cases in ParserTest . java from " DEF length 110 object truncated by 28 " to " DEF length " to reflect the correct
updated the assertion message in HazelcastTestSupport . java to include a more descriptive error message to improve debugging by providing more context about the
do n ' t append comparenode to the current graph if it do n ' t exist
ggb - 224 fix for crash when use imagemanager . getimage ( )
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
updated the ` getOrderBook ` method to include a ` limit ` parameter and modified the ` getOrderBook ` method to accept a ` Long
[ hotfix ] [ core ] move oomeexception from stresshierarchy to heapoomeexception
added a stream read constraint to the StandardDataFlow class to enhance the handling of string lengths in JSON processing
updated the way engines are retrieved in PmsConfiguration . java to include an empty string to ensure thread safety by preventing potential null pointer exceptions
updated class names from FullIterator to WheelIterator in TimerWheel . java and TimerWheelTest . java to improve clarity and consistency in naming convention
added error handling for bug pattern generation in BugInstance . java to improve robustness by providing clearer error messages for missing bug patterns
[ hotfix ] [ test ] increase timeout for localchunkprovidertest
changed the visibility of the uncomplete checklists menu item from true to false to disable the uncomplete checklists menu item
added a new class ` Contract ` and modified ` DefaultResultSetHandler ` to resolve nested result maps and added a new class ` Contract ` to enhance
added null checks for ` defaultHome ` and ` defaultHome ` before unregistering the receiver to prevent potential NullPointerExceptions when ` defaultHome `
removed the VertxGen annotation from PumpImpl . java to streamline code by eliminating unused annotations
removed unnecessary type casting from method calls in FileDetailFragment and OCFileListFragment to simplify code and improve readability
added a trim ( ) method to the token array in ConfigAttributeEditor . java and a corresponding test in ConfigAttributeEditorTests . java to ensure
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , SelfClassWithAux , and Self classes to improve
[ gr - 26469 ] make dynamichub . singlemodulereference public , and add getunnamedmodule ( ) .
added a conditional check for the " pg _ " character before setting the relKind to " SYSTEM TABLE " in DatabaseMetaData . java to ensure
chore : update java and python dependency ( # 17 )
hive - 16457 : remove unnecessary ' - - 1 ' keyword from hivemetastore . rqst
added a new module - info . java file for the ` com . speedment . runtime . core ` module to define module exports and dependencies for
updated the handling of the flush state in SslConnection . java to include INTERESTED and WAIT _ FOR _ FLUSH to
refactor Log4j2LogDelegateFactory to Log4j2LogDelegateFactory and add a new test class NoExceptionInInitializerErrorTest
refactor execution environment variable names and add server and client VM checks in tests to improve code readability and maintainability by standardizing server and server
refactor ` ExecutableFindOperation ` , ` MongoOperations ` , and ` ReactiveMongoOperations ` classes to improve code organization and maintainability
updated the package name from " org . postgresql . ssl . LibPQFactory " to " org . postgresql . ssl . LibP
added a disabled annotation to the TestInterProcessSemaphoreEdges annotation to indicate that the test is currently failing due to a known issue
added sorting functionality for theme keys in EditableResources . java to improve readability and maintainability of the code
added a new file OSvTerminal . java and modified TerminalFactory . java to register OSV flavor to ensure proper handling of OSV environments
added support for " . gr " extension in the condition to ensure compatibility with both gs and gr files
[ drill - 1296 ] fix test failure in drilltestwrapper ( # 12265 )
added a check for the size of names and values in the loop to ensure that the loop does not exceed the size of the values array
refactor WebSocketPolicy class to improve code readability and maintainability
replaced instances of ` static ` with ` instance ` in ` ShadowTelephonyManager ` , ` setAccessWifiManager ` , and `
added a new parameter ` performTemplateBasedResolution ` and modified the ` resolveMessage ` method to accept a ` performTemplateBasedResolution ` parameter to
changed the type of ` Class ` instantiation from ` Class ` to ` Class < ? extends ClassVisitor > ` in ` AsmUtil . java
added a new file ` LoggingAuditService . java ` that implements the ` UAAAuditService ` interface to provide user authentication and logging functionality to
[ hotfix ] [ tadozone ] fix airconditioningzonesettingsbuilder when temperature be null
fix a bug in beandefinitioninjectprocessor when the model be abstract .
camel - 16297 : camel - http - add support for configure http . proxyhost and http . proxyport via system property
updated MAX _ ENCODING _ VERSION from " 1.9 " to " 1.9 " to reflect the latest encoding features and improvements
added JDK serial filter to System . java to enhance compatibility with JDK serialization
camel - 14263 : camel - jbang - add more detail to the log message when the camel context be disable .
replaced the ` forceFinishScroller ( true ) ` method with ` forceFinishScroller ( ) ` in multiple classes to simplify the scrolling behavior
updated the ` ensureRealtimeClusterIsSetUp ` method to use ` rawRealtimeTableConfig ` instead of ` realtimeTableConfig `
added iserror ( ) and error ( ) methods to ValidationReport and updated error handling in DisallowValidator , DisallowValidator , and RefValidator
updated inline QSB handling in InvariantDeviceProfile to use closestProfile constants instead of direct array copying to improve code readability and maintainability by
updated the ` createClassPath ` method to throw ` Exception ` and modified URL encoding handling in ` SortedArrayStringMapTest . java `
updated regex patterns in TransformSteps . java from ' 10 ' to ' ( . * ) ' in TransformSteps . java to improve clarity and accuracy
pdfbox - 4071 : fix npe in java2d . setrectangle ( 0 , 0 , 0 , 0 , width , height )
replace hardcoded timeouts with a variable ` timeoutMs ` in ` FaultToleranceTest . java ` to improve code readability and maintain
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in Environments . java to ensure the application uses the correct docker image URL
[ hotfix ] [ test ] use system . gc ( ) instead of system . gc ( )
refactor multiple Java files including AdditionalAnswers , AnswerFunctionalInterfaces , AnswerFunctionalInterfaces , and InvocationOnMock to improve code
renamed the ` createHardLink ` method to ` copyFile ` and added a ` copyFile ` method to the ` SnapshotTaker `
rename method ` appendToDescription ` to ` getDescription ` in multiple classes to improve clarity and consistency in naming conventions
[ dsm ] fix a bug in lsm and mxndmanager . getdevices ( ) and add checkdevices (
added a condition to check if the xml is an instance of Xml . Document before visiting the FindIndentXmlVisitor to ensure that only Document objects are
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` in multiple test classes to ensure compatibility with the Android testing framework
added new ` GasLimitRule ` and ` ParentGasLimitRule ` instances to the ` CommonConfig ` class to enhance rule management by allowing
changed the access modifier of the ` setupData ( ) ` method from public to private in ` BaseAssumptionsRunnerTest . java `
renamed ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and updated related references in ` ChangeSet . java `
added null checks for endStream and listener in TripleServerStream . java to ensure proper resource management and prevent potential NullPointerExceptions
[ hotfix ] [ runtime ] add doc to task _ failure _ recovery - strategy and restart - strategy
added a new test method ` testIssue154 ` to ` SelectTest . java ` for parsing and deparsing SQL queries to ensure correct
refactor Common class to improve code structure to enhance maintainability and readability of the code
refactor Launchable . java to use try - with - resources for context layer management to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ javadoc ] fix typo in streamexecdeduplicate javadoc
added logging for kafka message sending errors in KafkaSubscriber . java to improve error tracking and debugging for kafka message sending
dataes - 341 : add property accessor factory to simpleelasticsearchpersistententity and simpleelasticsearchpersistententity
modified the ` setCoord ` method to return a boolean indicating success or failure in ` GeoCoordSys1D ` and ` GeoSegment3D
added scroll distance calculations for gesture events in AskGestureEventsListener . java to improve responsiveness and responsiveness of gesture event handling
refactor comparison logic in NGramEstimator to improve comparison logic to ensure accurate comparison of values and keys in the NGramEstimator
updated import statements for ScenarioScoped from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple Java files to align
updated the method of retrieving folder icons in StatsLogCompatManager . java to include the number and cardinality of the folder icons to enhance the logging functionality
updated method name from getServerSlogan ( ) to getServerName ( ) in ThemeUtils . java to improve clarity by using a more descript
added a new file ` TestSkeletonPredicates . java ` to implement and test the behavior of the ` @ IR ` and ` @ IR `
refactor SelectionHighlighter to improve object comparison and hash code generation to enhance code readability and maintainability by reducing redundancy
added a new class ` StringResultConverter ` and refactored the ` AsmUtil ` and ` AsmUtil ` to utilize it
camel - 19751 : camel - jupiter - skip test that do n ' t work on apache ci
updated the condition in WaitForSingleObject check from " ! = 0 " to " ! = 0 " in JansiWinSysTerminal . java to
added null checks for the buffer before setting in the setInBuffer method to ensure stability by preventing potential NullPointerExceptions
updated the data directory assertion from " data / " to " dataDir " in TestSolrDiscoveryProperties . java to ensure compatibility with different operating systems
updated OS version handling in AutoUpdaterServerProperties from " linux " to " windows " and added platform compatibility checks to ensure compatibility with macOS
replaced ` lockFile ` with ` lockName ` in ` FSDirectory ` and ` Lock ` classes to improve clarity by using a more descript
replaced ` appIcon ` with ` allApps ` in ` Overview . java ` to improve clarity by using a more descriptive variable
replaced Invocable . Invocable . Invocable with ClientDatagramEndPoint . this in ClientDatagramEndPoint . java to improve code
updated the GET _ STEP _ EXECUTIONS string format from " oreder by " to " order by by STEP _
updated button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and added a check for the button to
added authentication parameters for workflow claimed tasks and rejects in TaskRestRepositoriesIT . java to ensure proper handling of submitted tasks and rejects in the
updated logger initialization in multiple builder classes to use a static logger instance to improve logging consistency and maintainability across the application
updated method visibility from public to package - private in SsoAccessTokenProvider . java and added unit tests in SsoAccessTokenProviderTest . java to
skip test for macos - github - build on macos
updated alarm suppression methods in GreetResourceMockedTest . java and OciMetricsCdiExtensionTest . java to return null instead of
removed unnecessary whitespace in the if statement in JFrame . java to improve code readability and maintain consistency
[ java ] fix npe in libraryscanner if no media database be available
refactor metricsContext initialization in SuggestComponent to use a superclass method to improve code readability and maintainability by reducing redundancy
refactor output formatting in OCFileListFragment to improve code readability and maintainability to enhance maintainability and readability of the output string
[ hotfix ] [ test ] use iterable instead of array to avoid arrayindexoutofboundsexception .
refactor SourceVersion class to improve code organization to enhance maintainability and readability of the code
added a new test class ` ThreadFactoryTest ` to verify the behavior of thread creation in a multi - threaded environment to ensure that the thread
refactor lock period retrieval in DelegateResourceActuator and ProposalUtil to use a dedicated method to improve code readability and maintainability by
added a new TicketModel instance to EditTicketPage . java to enhance ticket management functionality
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimiss apps from predicted list
updated constructor calls in multiple assertion classes to include Class < S > to enhance type safety and prevent potential ClassCastExceptions
updated MENU _ MENU _ DELETE _ TWEET and MENU _ SAVE _ IMAGE constants to include MENU _ QUOTE and
make sure interruptlock be not thread - safe
[ java ] change codecpassthrough to decryptonlycodecformat in mediacodecrenderer .
added a conditional check for the result before offering and closing the failure in ServerHTTP2StreamEndPoint to ensure that failure is only accepted when the result
updated error messages from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and XSLTError
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety during concurrent operations
replace ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter ` , and ` MockRestAdapterTest ` to
updated error handling for components file creation in ComponentPresetManager . java to improve code readability and maintainability
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration to HIVE _ RESULTSET _ USE _ UNIQUE _
refactor : add itemlistener to make sure we do n ' t need to update the audio effect when item be select .
added validation for invalid sessions in Session . java and updated test cases in SessionHandlerTest . java to ensure that an illegal state is handled correctly
hhh - 14499 remove exceptionhelper . getrootcause ( throwable ) from test
updated the key pair generation from 256 to 255 in JceX25519Domain . java to accommodate larger key pairs for improved security
set codec to Lucene41PostingsFormat3 to ensure compatibility with Lucene41PostingsFormat
[ hotfix ] [ runtime ] add log for empty checkpointrangeheaders
added support for the RSA / ECB / OAEP padding algorithm in the Asymmetric wrapper algorithm to enhance security by ensuring correct algorithm parameters are created
updated platform annotations from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with the latest architecture
updated error handling in DebugSourcesResolver to catch SecurityException instead of IOException to improve robustness by handling potential SecurityExceptions during URI resolution
removed unnecessary check for OS . IS _ UNIX before returning transport values to streamline the code for better readability and maintainability
updated the JERSEY _ ADMIN _ IS _ PRIMARY value from false to true in FileUploadUtils . java and modified file upload
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple classes to improve memory management and avoid potential memory leaks
changed the default value of USE _ PIPELINE _ DOWNLOADER from false to true in FastSyncChainDownloader . java to enable line downloading
updated date formatting logic in SimpleDateFormat . java and added a new class Bug7130335 . java with time formatting tests to improve accuracy of
refactor calculations for iconCount and rowCount in AllAppsView . java for improved readability and maintainability to enhance code readability and
cloudstack - 10225 : do n ' t return the default node if the router be not find .
refactor StringBuffer class for improved performance to enhance performance and maintainability of string manipulation operations
added uid assignment for ruleUID in RuleResource . java to ensure proper handling of rule UIDs in the application
added a null check for the listener before removing it from the registry to prevent potential NullPointerExceptions when listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the way ` jsonString `
make access _ table public instead of private .
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to use ' No resources ' instead of ' Resource ' to improve clarity and accuracy of error
add dorun ( ) to xmpptransport . run ( ) and throw ioexceptionsupport . create ( ) in xmpptransport
refactor multiple classes related to event handling to improve code organization and maintainability
added a new parameter ` isUpgradeSuspended ` and ` isUpgradeSuspended ` to the ` AmbariManagementControllerImpl ` class to
removed the copyright year from FindsByCssSelector . java to clean up the code and ensure accurate copyright information
removed the initialization of wfields in Resolver . java to streamline the code by eliminating unnecessary variable assignments
added initialization of OAuthProperties with default key size and signing key size to enhance security by allowing configuration of key size and signing keys
hbase - 26469 htabledescriptor . getfamilies ( ) return htabledescriptor . getfamilies ( ) . getf
updated the alias check method in SampleWebJspApplicationTests to use a lambda expression instead of an instance of AllowedResourceAliasChecker to simplify
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info classes to improve code organization and maintainability
[ java ] add reset ( ) method to cluster and service agent interface .
corrected a syntax error in the writer initialization in ChunkedWriter . java to improve code readability and maintain consistency
added a new abstract class AbstractJobExecutor that implements the JobExecutor interface to provide a framework for executing job executions within the batch processing framework
refactor replay method to use a future variable for better readability to improve code clarity and maintainability by explicitly defining the replayFuture variable
updated variable names from " hugeStaticBase " to " staticBase " in HugeResourceTest . java to improve clarity and consistency in naming convention
[ java ] return empty list if service id be not enable .
replaced Math . random ( float ) Math . random ( ) with SecureRandom . nextInt ( ) for hashSalt to improve randomness and prevent collisions
do n ' t print the error message when there be an invalid runtime compilation method .
removed redundant assignment of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline the code by eliminating unnecessary duplication
added support for abstract methods in CallsRealMethods and created corresponding tests in CreatingMocksWithConstructorTest to enhance functionality and ensure correct behavior
refactor package access checks in NashornScriptEngine and Context classes to improve code readability and maintainability by reducing duplication
updated ContextPathPluginTest to extend AbstractPluginDataInit and added setupErrorConfiguration method in ContextPathPluginTest . java to enhance error configuration and
replaced instances of ` dtm ` with ` model ` in ` ContributionListPanel . java ` to improve code readability and maintainability by using
added support for the " has - touch - interaction - service " protocol in multiple test classes to ensure that the application correctly handles the presence of the
refactor ConnectAction to improve readability and maintainability of the code to enhance code readability and maintainability by reducing unnecessary try - catch blocks
changed the data types of ` showRulesResult ` from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget , ShowOptions
add a new package for internal classes and implement native functionalities to improve organization and encapsulation of internal classes
added support for the ' & ' character in the ` Less ` class and modified the handling of ` HOME ` and ` END ` operations to
removed synchronization from the plots variable in PlotHandler . java to simplify the code and improve performance by eliminating unnecessary synchronization
refactor intent creation logic in Utilities . java to use Intent . createChooser for sharing activities to improve code readability and maintainability by reducing redundancy
changed the constructor visibility of the Roster class from public to package - private to enforce encapsulation within the package
added basicConstraints extension configuration in TestUtils . java to ensure proper handling of basic constraints in certificate generation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to verify the behavior of the fixed nested transform
refactored the initialization of ` ps ` in ` TrieDateField ` , ` TrieField ` , and ` TrieField ` classes to simplify
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to streamline the codebase by eliminating unnecessary components
added a new file ` ArrayLength . java ` that tests the ` getField ( ) ` and ` getDeclaredFields ( ) ` methods for array types
[ hz ] wait for the destroyforcibly ( ) method to close the hazelcast process
updated the ` save ` method to use ` @ ApplicationScoped ` annotation and refactored the ` save ` method to use ` @ ApplicationScoped
updated assertions in Safepoint . java to ensure that the value is non - negative to improve clarity and correctness of the value validation logic
updated thread name field from " [ C " to " Ljava / lang / String " and changed return type from charArrayToString to stringO
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in multiple HnswGraphBuilder and HnswGraph
bugfix : use font instead of stroke implementation in java2d .
refactor ` expandDynamicStar ` method into a separate method ` expandDynamicStar ` to improve code readability and maintainability by reducing duplication
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class and modified the ` Comment2000 ` class to include
added a status warning icon to the frame in HTTPServer . java to provide users with a specific status code for better user feedback
[ fix ] remove deprecated event . getModifiersex ( ) and remove unused method
updated node cycles from CYCLES _ 6 to CYCLES _ 3 in AMD64Node . java and AMD64CountTrailingZero
camel - 16299 : fix npe when send attachment to non - set content - transfer - encoding .
refactor Locale class to improve locale handling to enhance code readability and maintainability
added a ` clearLog ( ) ` method to ` ErrorConsoleController ` and implemented it in ` ErrorConsoleViewModel ` and ` ErrorConsoleViewModel
corrected a syntax error in the initialization of mRecentsAnimationController variable to improve code readability and maintain consistency
updated imports and method parameters in Debug . java , CaptionMap . java , CaptionMap . java , and DummyCaptionMap . java
updated ConcurrentBatchIdentifierTest , SequenceOptimizerIdentifierTest , SequenceOptimizerIdentifierTest , SequenceOptimizerIdentifierTest , SequenceOptimizerIdentifierTest , and AbstractTest
[ java ] add opera driver capability to the defaultdriversessions .
do n ' t print stacktraces when download fails
added new product types for various product types in LifxProduct . java to enhance the functionality of the LifxProduct class by including additional features
added async request handling in OverseerCollectionProcessor and updated node initialization in CollectionsHandler and CollectionsHandler to enhance functionality by allowing asynchronous processing of replica
updated access modifiers for PGSQL _ PK _ LIMIT and PGSQL _ PK _ SUFFIX in PostgresDatabase and PostgresTest
updated LogPanel initialization to use the repository model ' s HEAD instead of a null objectId to ensure consistent display of the repository ' s head
[ fix ] skeletoninterbrewire now use xyz instead of xyz
added a ` browserDestroy ` method to ` AndroidImplementation ` and removed the ` deinitialize ` method from ` AndroidBrowserComponent ` to streamline
added a waitForActiveCollection call to readApiTestViolations in AutoScalingHandlerTest . java to ensure that the readApiTestViolations collection
refactor screen terminal handling in ScreenTerminal and Tmux classes to improve readability and maintainability of the code
updated the condition for determining the controller state in SoftResetAction . java to include additional controller states to enhance functionality by allowing more control over the backend
disable on - disc stream cache on - disc stream cache reloading
added logic to retrieve the parent folder in Request and RequestV2 classes to ensure the correct parent folder is used for media rendering
[ hotfix ] [ network ] rename ispersistent to persistent to avoid confusion
modified the FileOutputStream initialization to use a custom close method to ensure proper resource management and prevent potential memory leaks
added error handling for RestClientException in StandardGitHubRepository . java to improve robustness by logging unauthorized HTTP responses
log4j2 - 1343 add getoriginal ( ) method to messagefactory2adapter so that it can be use by the log4j
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to
updated the regex pattern from " ( 1 , 2 ) " to " ( 1 , 3 ) " in Version . java to reflect the latest version
added initial and dismiss delay settings in ExtractionModelFrame . java to improve responsiveness by setting initial and dismiss delay for better error handling
refactor ` runIntellijProjectGenerator ` and ` runIntellijProjectGenerator ` to use ` passedInTargetsSet ` instead of
added timezone initialization in TimeTest . java to ensure correct handling of time zones in tests
refactor MediaSessionConnector class to improve code organization to enhance maintainability and readability of the code
use endpoint . gethandler ( ) . getsslimplementation ( ) instead of jsefactory ( ) . getsslimplementation ( ) .
updated distance display logic in GpsLoggingService . java to use accuracy instead of altitude and accuracy to ensure accurate accuracy display based on location information
added a new constant ` SPECIFIC _ PARAM _ FUTURES _ ENABLED ` and modified the ` adaptFutureExchangeMetaData ` method to
updated variable names from " accounts " to " instructor " in multiple files to improve clarity and consistency in naming conventions
added a method to set the accept queue size to maxWorkerThreads in ThriftHttpCLIService to improve performance by reducing the number of worker threads
replaced instances of ` getClass ( ) . getName ( ) ` with a static final constant ` PROPERTY _ DISABLE _ WATCHER ` to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 , use ssl scheme
updated error handling from UserException . parseError to UserException . validationError in DrillSqlWorker . java and TestWindowFunctions . java to ensure
do n ' t assert that the duration be zero for a really fast collection .
fix nodewithJavadoc . getcomment ( ) to return empty string instead of null
replaced the ` reserveMemory ` method with a ` readReservedMemory ` method in ` ReserveMemory . java ` and modified memory reading logic in `
added multiple calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing or splitting
hbase - 26464 make hbaseadmin . getpid ( ) protect and addendum
camel - 14284 - camel - cxf : allow to specify the service class when invoke cxf .
refactor YamlChangeLogSerializer to use a map for databaseChangeLog serialization to improve code readability and maintainability by using a centralized map
updated print statements in SchemaPrinter . java for consistency to improve readability and maintainability of the code
refactor code to simplify the regenerate process and improve error handling to enhance code readability and maintainability by eliminating redundant command - line arguments
updated the initialization of HomeFragmentNowPlayingRow and footer rows to use the activity context instead of getContext ( ) to ensure consistent access to the activity
updated @ GeneratedValue annotations to include the " native " annotation in multiple classes to ensure compatibility with the newer Hibernate framework
removed the ` country ` parameter from the ` getSystemTimeZoneID ` method and removed the ` country ` parameter from the ` getSystemTimeZoneID ` method
updated the write method to include position and remaining data in BZip2Codec . java and modified ByteBuffer initialization in TestBZip2Codec . java
refactor startlogger method to make it easy to use ae instead of ae .
added a new constant ` VALUE _ TYPE _ EMPTY ` and modified the creation method in ` Value ` to improve code readability and maintainability by
replace ` group = = = ` with ` group . equals ( group ) ` in ` GroupManager . java ` to improve code readability and
refactor Liquibase classes to improve code organization to enhance maintainability and readability of the codebase
refactor SimplexNoise class to improve code organization to enhance maintainability and readability of the code
refactor TargetGraphFactory to use newInstanceExact method for creating TargetGraph instances to improve code readability and maintainability by encapsulating instantiation
[ hotfix ] fix typo in nodecmd . java and nodecmd . java
add a new artifactversion adapter to the metadata collection , so that it can be serialize .
modified the handling of the ` set ` and ` delete ` logic in ` NativeArray . java ` to improve code readability and maintainability by
refactor file handling in FileUploader to use a parent file instead of a local file to improve code readability and maintainability by reducing redundancy
added a new file UTF8ReaderBug . java to test XML parsing with supplementary characters to ensure proper handling of special characters in UTF - 8
added unit test to demonstrate how to use the proxy builder
updated URIs from " btcusd @ ethbtc @ depth " to " btc @ depth20 " in multiple files to
added a resetAllocation method to the Wrapper class and initialized initial and maximum allocations to ensure proper resource management during parallel processing
removed the import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct calls to ` configProps ` and ` sysProps ` with ` sysProps ` in ` Agent . java ` and added a new test
refactor ModelUtils class to improve code organization to enhance maintainability and readability of the code
refactor AbstractDoubleArrayAssert for improved performance to enhance performance and maintainability of double array assertions
updated width and height calculations in Legend . java to include a conditional check for the length of mLabels to ensure that width and height are only
added delay and abort test methods to CodeFirstSpringmvc intf and CodeFirstSpringmvc classes to enhance test coverage for delay and abort
replaced ` get ( fieldName ) ` with ` getValues ( fieldName ) ` in ` MoreLikeThis . java ` to improve performance and readability
replaced the method of obtaining the source path to BuildTargetSourcePath with a new instance of BuildTargetSourcePath to improve code readability and maintain
botania . versioning . disabled : add chat message for disabled versioning
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a new variable ` numberOfFiles ` in ` MediaFolder
removed the " - b " option from AidlStep and GenAidlTest to simplify the command - line argument handling and improve readability
add test case for issue79 ( # 79 )
added a TODO comment to the FakeHttpLayer class to improve code readability and maintainability
replaced ` handleError ( cause ) ` with ` revokeLeadership ( ) ` in ` EmbeddedLeaderService . java ` to ensure the leadership is
refactor CompositeDiscoveryClient to use Java Streams instead of Streams to improve performance and readability of the code
replaced instances of ` applySystemConfiguration ( ) ` with ` new Configuration ( ) ` in ` ParallelUniverse . java ` , ` applyQualifiers
[ hotfix ] [ documentation ] add description to jobmanageroptions . restarts ( )
replaced ` updateNoWidgetsView ` and ` updateNoSearchResultsView ` methods with ` updateRecyclerViewVisibility ` for better clarity and functionality to
[ wstx ] use class . forName ( ) instead of class . forName ( ) in xmlutil . java
refactor test setup methods in AuditAliasCommandIntegrationTest to use a setup method to improve test structure and ensure proper initialization of the workspace
removed unnecessary logging statements in WidgetsFullSheet and WidgetsRecommendationTableLayout to clean up the code and improve readability
disable cxf test that do n ' t support the invocation without parameter
added error handling for periodical refresh failure in CachedStore . java to improve robustness by logging errors during periodical refresh failures
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use @ RequiredArgsConstructor and add a method to add providers to improve
added a method to check default background fills in HSSFCellStyle . java and updated color handling in HSSFPalette . java to
refactor ZonedDateTimeFormatterBenchmark class to improve code readability to enhance maintainability and facilitate future updates
refactor DistributedUpdateProcessor to introduce a new method ` shouldBufferUpdate ` to improve code readability and maintainability by encapsulating
added a null check for the rocket stage in the condition to ensure that the motor is not null before proceeding with further operations
add ` ` toreplaceid ' ' and ` ` toreplaceid ' ' command to editscript command
refactored ExtendedMasterSecretExtension class to improve code organization to enhance maintainability and readability of the code
changed the declaration of the ` processor ` variable from ` final ` to ` final ` in ` AndroidInput . java ` to enforce immutability
added error handling for end of stream writing in WritableKeyProcessor . java to ensure proper handling of write failures during stream writing
added " CUBE " to MySQLDatabase . java to support MySQL database operations
added a try - catch block around the ` rm ( snapDir ) ` method call in ` TestReplicationHandler . java ` to handle potential IOException
rename ` ExperimentalRobolectricTestRunner ` and related classes to ` MultiApiRobolectricTestRunner ` and ` TestRunnerForApiVersion `
refactor DefaultOkHttpClientFactoryTest to use reflection methods instead of reflection to improve code readability and maintainability by reducing boilerplate
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the os variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 244 fix for bug where we do n ' t have a layout in the w .
added a new parameter ` fromCli ` to the ` jailerMain ` constructor and updated exception handling in ` UIUtil ` to enhance flexibility in
refactor HttpRequest class methods for improved readability to enhance maintainability and ease of understanding for future developers
added a new update for unread pull notifications in TalonPullNotificationService . java to ensure the notifications reflect the current state of unread unread notifications
[ hotfix ] [ runtime ] fix npe in nullnode
updated dimensions and calculations in Box2DTest , Pong , Pong , and OrthographicCamera classes to improve memory management and optimize camera
refactor layout manager initialization for comments recycler and padding in ViewPostDetailFragment . java to improve code readability and prevent potential null pointer exceptions
changed log level from trace to warn in CLIService . java to provide more granular logging for background operation cancellation
add debug output for abstract method in jimple body builder
ggb - 221 - add support for ie10plus and ggb - 223
updated the ` getNotificationUsers ` method to include a deviceId parameter and modified user retrieval logic in ` NotificationManager ` and ` CacheManager `
updated the URL from " droppr . org / srtm / v4 . 1 / 6 _ 5x5 _ TIFs "
replaced ` getFileChooser ( ) . removeAll ( ) . removeAll ( ) ` with ` c . removePropertyChangeListener ( filterComboBoxModel , approveButton ,
change return value of doget ( ) to return true instead of void
refactor ` getRuleOptional ` methods to use ` getRuleWithType ` and ` getRuleOptionalWithType ` instead of ` fromNullable
set the visibility of the transportSpinner based on the makeShortcut flag to hide the spinner based on the makeShortcut flag to improve user experience by preventing
updated lint handling in Attr . java and added new classes T7073371 . java and T7073477 . java with annotations
added a check for media details before calling backPressed ( ) across multiple fragments to ensure that backPressed ( ) returns a boolean indicating success or failure
added a new constant ` LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB ` to ` QueryServices ` and modified ` MetaDataClient `
corrected a syntax error in the append method call in SDRTrunk . java to improve code readability and maintain consistency
replaced ` withMessageContaining ` with ` StringUtils . cleanPath ` with ` StringUtils . cleanPath ` in ` PrivateKeyParserTests . java ` to
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method and its usage in ` MTable . java ` to simplify the method
updated IndexWriter configuration from LUCENE _ 40 to TEST _ VERSION _ CURRENT in TestAddIndexes . java to ensure compatibility with the
hbase - 26464 add option to disable column family check in importtsv
[ java ] rename the variable ` logRecordingChannel ` to ` logSubscriptionId ` in the ` ConsensusModuleAgent `
updated startActivity method calls and added voice button proxy visibility settings in Launcher . java to improve user experience by ensuring the voice button ' s proxy is
added a check to return early if the number of elements in JSONNodeNew is equal to " i " to prevent processing of empty JSON nodes
modified the implementation of the Procedure class to improve code readability and maintainability
updated resource bundle handling in Toolkit and Window classes to include the system class loader to enhance resource loading flexibility by allowing custom class loaders
add a new class ` NormalizeArrayCreationsKotlin ` for normalization of array literals to facilitate the normalization of array literals in the
added conditions to skip processing for term enum forwarding in PerSegmentSingleValuedFaceting . java to ensure that the term enum forwards are
fix ` ` author ' ' field to be non - nullable instead of ` ` author ' '
added a new file ` OSGiTest . java ` and implemented tests for ` com . google . gson . annotations ` and ` OSG
[ java ] add support for allow controller service to be enable .
hbase - 12286 htable . setautoflushto ( ) should set autoflushto ( ) instead of setautoflush ( ) )
fix ( regen ) : fix type cast exception in ctscanner
feature : add hasusermetadata ( ) method to simplefeatureimpl . getusermetadata ( ) and property . hasusermetadata ( )
removed HiveException from method signatures in DDLPlanUtils , DDLPlanUtils , and ExplainTask classes to simplify error handling by eliminating unnecessary
refactor RelyingPartyRegistration class to improve code organization to enhance maintainability and readability of the code
removed the enableLogging method from JavaCompiler . java to streamline logging configuration for better performance
added a new class ` InJavaSourceSet ` and modified ` UsesJavaVersion ` to use it to enhance the functionality of Java source set
updated the test file path in TestGDALParser . java to use a resource path instead of a hardcoded path to ensure that the
added a static method ` createGetter ( Object obj , String attribute ) ` to the ` ReflectionHelper ` class to provide a way to create a
removed the conditional check for useExternalStorage in DirectUpload . java to simplify the conditional logic for better readability and maintainability
added a constant for " indexer . nocommit " in multiple classes and updated related logging to use this constant to improve code clarity and maintainability
cloudstack - 10297 : disable disk offering id parameter in createvolume command
added a comment comment in ToHtml . java and updated assertions in BaseTestCellComment . java to improve clarity and correctness of the assertion message
added null checks for ` amountToAdd ` , ` amountToSubtract ` , and ` periodToSubtract ` in ` LocalDate ` , ` LocalDateTime `
added a new file ` Issue382 . java ` that implements a server feature for handling specific error types to ensure proper exception handling for specific error
removed the ` signum ` method and simplified the return statement in ` PositionUtils . java ` to simplify the code and improve readability by eliminating unnecessary
set the visibility of the holder ' s text in AttachmentAdapter to hidden to improve UI responsiveness by hiding the holder ' s text when necessary
fix ( import ) : fix ( import ) : use ctreference instead of ctnameelementfilter
updated the method call from ` : : getProfile ( ) : : getProfile ( ) : : getProfile ( ) ` to lambda expression to
make liquidblock extend bucketpickup so it can be use by the block state property .
[ java ] do n ' t throw exception in log when getexceptioninlog ( ) be call .
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate time zone representation for the
replaced instances of ` existingObservation ` with ` distinctObservation ` and updated related logic in ` DistinctErrorLog . java ` to simplify the code
updated ` TEST _ NIGHTLY ` and ` TEST _ MONSTER ` to use ` TestGroup . class . getAnnotation ( TestGroup
rename ` createLogger ( ) ` to ` getOrCreateLogger ( ) ` and update logger initialization logic in SQLEditorSupport . java to improve clarity and
do n ' t allow access to class , field , and proxy in GraalContext
refactor to use raster and data elements instead of hardcoded values to improve code readability and maintainability by encapsulating raster and
updated the method signature of verifyAndAddTransactionalProperties to include the partition ' s SD instead of the table ' s SD to ensure
added a new boolean variable ` mLastOverlaySroll ` and updated the ` shouldZeroOverlay ` logic to include ` mLastOverlaySroll
hhh - 14258 add unmodifiablebatchbuilderimpl and unmodifiablebatchbuilder initiator
improve error message in analysiserror . shouldnotreachhere ( )
added a new test class ` MockWithStaticStateDemo ` in ` PartialMockingRetainsStateTest ` to verify the behavior of mock
added a new test method ` testUnionWithBracketsAndOrderBy ` in ` SelectTest . java ` to verify SQL parsing and deparsing
added null check and error handling for the action execution in SecurityUtil . java to ensure robustness by handling potential exceptions during action execution
replaced direct calls to ` alGetError ( ) ` with a variable ` errorCode ` in ` OpenALMusic . java ` to improve error reporting
camel - 14263 : camel - jbang - deprecate the ` ` resolve ' ' method in favor of ` ` resolve '
update rexnodeconverter to use precision and scale instead of precision and scale
fix nullpointerexception in webauthnmultifactordeviceprovider # getvendorproperties ( ) and getdeviceproperties ( )
updated the assertion in WalletTestAccount003 . java to use Long . toString ( now ) instead of a hardcoded string to improve
replaced ` AxialStage ` with ` RocketComponent ` in ` BasicFrame ` , ` DesignPanel ` , and ` DesignPanel `
added a new parameter ` longRunningTime ` and a default value ` 10 ` in ` Args . java ` to enable dynamic configuration of the long
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ LOW and added a new class Ideas _ 2012 _ 21 to
replaced usage of ` sun . misc . Service ` with ` java . util . ServiceLoader ` across multiple files to simplify the code and improve dependency management
[ geot - 5296 ] fix xml3 encoding test to work on window .
updated assertions in TestRestClientRequestImpl . java for consistency to improve readability and maintainability of the assertions
updated the condition in MissingUniqueConstraintChangeGenerator to check if the reference database is equal to comparisonDatabase to ensure proper handling of unique constraints in the
removed the addAndroidConstants method and updated asset path handling in IjProjectTemplateDataPreparer . java to streamline the code by eliminating redundant
replaced assertions in ` DuplicateCookieTest ` with ` await ( ) ` in ` DuplicateCookieTest . java ` and ` SessionRenewTest
added user arguments and timestamp in ChromeTraceBuildListener and corresponding test cases in ChromeTraceBuildListenerTest to enhance trace functionality by including user arguments and
refactor localizationsupport to use modulesupport . getcached ( ) instead of arraylist .
corrected a typo in the log message from " match limit " to " match order " to ensure accurate logging of match order settings
added a new file ` TheRockMetaDataDemo . java ` to demonstrate the usage of the ` TheRockExchange ` class to demonstrate the usage of
rename FloatingDecimal and FormattedFloatingDecimal classes to strictfp in FloatingDecimal , FormattedFloatingDecimal , FormattedFloating
replaced unparseIdentifier with columnName in ColumnStatsSemanticAnalyzer . java to simplify the column name parsing logic
added unit tests for replacing field declarations in JavaTemplateContextFreeTest . java and modified method signatures in BlockStatementTemplateGenerator . java to ensure correct
added a check for non - synthetic static methods in InstantiateStaticClass . java and a new test method in Bug1282 . java to ensure that
removed the call to getProjectFilesystem . getPathForRelativePath ( basePath ) in WorkspaceAndProjectGenerator . java to simplify the path retrieval process by eliminating unnecessary
added handling for pending rescues in IkStepDefinition . java to improve stability and error management in the execution flow
replaced ` final ` with ` equals ` and ` hashCode ` methods across multiple type classes to ensure consistent hash code generation across different types
added a new ` getSyncLevel ` method to the ` SyncLevel ` enum and implemented a method to retrieve the ` SyncLevel ` enum to
[ hotfix ] [ test ] fix checkstyle violation in controlcommandstest
added a condition to check if the slice state is not RECOVERY to ensure that only valid slice states are processed
fix a typo in opencv _ core . java
added SDKPath parameter to AppleBundle and SwiftStdlibStep classes and updated ProcessExecutorParams to include sdkPath to enhance flexibility in managing SDK paths
[ hotfix ] [ runtime ] remove storagedir . deref ( ) from transientblobcleanuptask
server : use static nat instead of 1 - 1 nat instead of 1 - 1 nat
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code organization and maintainability
added conversion of sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of row
refactor BetterBlockPos class to improve code structure to enhance maintainability and readability of the code
updated the method to retrieve the proxy from the class loader to ensure the proxy is accessible from the correct class loader
refactor nightly warning handling in MainWindow and ConnectionSettingsPanel to use a unified version string method to improve code readability and maintainability by
added support for OracleDatabase in LoggingExecutor and JdbcExecutor to handle trailing newlines in statement processing to ensure proper formatting of trailing newlines
add findbugs . nullderef . assumensp option to avoid nullpointerexception
updated the port used in the request to use a dynamic port instead of a hardcoded 8080 to ensure the server connects to the correct
updated BLOB _ SIZE , SLIDER _ MARGIN , SLIDER _ MARGIN , and PLAY _ MARGIN
added a method to add a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to ensure proper handling of multifactor authentication
removed unnecessary spacing in method signatures in MaxRectsPacker . java to improve code readability and maintain consistency
[ drools - 4071 ] add miss license header to license header .
added methods to update the help page in PMS and updated HelpTab to use it to improve code organization and maintainability by centralizing help page
added GeocodeProviderFactory . java and Constants . java files to the project structure to establish a foundation for geocoding functionality in the application
updated import statements from ` org . apache . lucene . analysis . util . CharArraySet ` to ` org . apache . lucene . analysis .
added a new test method ` testConstructorException ` in ` OptionTest . java ` and refactored exception handling in ` ResourceManagerImplTest .
[ py4j ] do n ' t delete an object if it ' s not the default one .
updated conditions in SegmentsInfoRequestHandler . java and CollectionsAPISolrJTest . java to use number _ tl and number _ tl and number _
updated the calculation of numPredictiveAppCols in DeviceProfile . java to use a default value of 4 instead of a maximum of 4 to
added a static method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated related checks in multiple classes to improve code readability and
add a craft craft that can be remove from the buildcraft . close # 243
refactor gravity settings in DeviceProfile . java to use FrameLayout . LayoutParams for drag target bar layout to improve code readability and maintainability by
replaced the call to ` run ( ) ` with a call to ` start ( ) ` in ` YahooSession . java ` to ensure the session
updated HiveMetaStore and HiveMetaStoreClient to set ms to null and modified the shutdown logic in HiveMetaStoreClient to ensure proper handling
updated ` getDisplayScript ( ) ` to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` in ` LocaleCategory . java `
updated references from ` CORE _ NAME _ PROP ` to ` ZkStateReader . CORE _ NAME _ PROP ` in ` getCore
replaced ThreadLocalRandom with Random in StoreDirectTest . java to improve performance by using a more efficient random number generator
added a check for the launcher readiness before executing backup operations in LauncherBackupHelper . java to ensure that backup operations are only performed when the launcher
replace ` < 0 : 0 : 0 : ` . ' ' with ` < 0 : ' ' in error message
added unit tests for the ResiliencePooledRouteOk class to ensure the resilience of the pooled route functionality works as expected
rename ` bodySpace ` to ` barSpace ` across multiple dataset classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code organization to enhance maintainability and readability of the code
updated import statements in FileMessageHistoryTest . java to use TemporaryFolder instead of File to improve test reliability by ensuring the test is not null
added debug logging levels for various loggers in Grasscutter . java to improve logging detail for better debugging and monitoring
changed the visibility of ` highlightCnstScrRngQuery ` from private to static in ` SpanScorer . java ` and updated
updated the overview mode logic in Launcher . java and added a getState ( ) method in Workspace . java to ensure proper handling of workspace state changes
refactor multiple assertion classes to improve code organization and consistency to enhance maintainability and readability of the assertion framework
add cacheable flag to snippettemplate . notifynewtemplate ( )
added new constants for core and core scope sessions in multiple classes to improve clarity and functionality of the data import process
updated SQL table creation from " measurement " to " primary key " in DatabaseMetaDataTest . java to ensure correct primary key is used for measurement creation
rename ` ` -- permissions - config - path ' ' to ` ` -- permissions - config - file ' '
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 64023 : remove unnecessary
added a new file ` TestIfWithDeadRegion . java ` containing a method to retrieve string values from a specified supplier to provide a mechanism for
corrected the spelling of " EnglishUsd . gz " to " EnglishUsd . gz " in the DependencyParser
replaced ` testConcurrentAccess ( ) ` with ` HighResolutionTimer . enable ( ) ` and ` testConcurrentAccess ( ) ` in ` Snow
added a static UI feature to the AppSettings class and modified the toast bar visibility logic in MainFragment to enhance user experience by allowing customization of
modified the return statement in WindowsSecurity . java to include a try - finally block to ensure proper resource management and prevent memory leaks
updated parameter handling in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` to use ` setParameterIfAbsent ` instead of `
updated JOptionPane messages in MEncoderVideo , NavigationShareTab , PluginTab , and PluginTab to use localization strings instead of hardcoded strings to
tika - 132 : add test case for tika - ooxml and tika - ooxml mime type
updated logging statements to use ` FixJava ` for better clarity and consistency to improve code readability and maintainability by standardizing logging practices
camel - 14263 : camel - eip - enricher - remove system . lineseparator ( ) from eip documentation enricher
[ flink - 18186 ] [ table - planner - blink ] fix migrationcoordinator to report endpoint version when endpoints be
added debug logging statements and refactored audio playback device handling logic in DeviceConfiguration . java to improve code readability and maintainability by standardizing
added WebsocketConfig and its getter and setter methods to the ShenyuConfig class and updated WebSocketPluginConfiguration to utilize it to enhance WebSocket
refactor cachevalidationlistener to implement testng . onstart ( ) and add testlisteneradapter . on ( ) .
added a check to ensure the content length is not empty before adding it to the document to prevent adding empty content lengths from being added to the
[ hotfix ] [ runtime ] fix synchronization issue in defaultsolverjob
added error handling for ` PathAlreadyExistException ` in the ` createTimeseries ` method in ` MManager ` to improve robustness by ignoring
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check the result of the authentication process
changed access modifiers of methods from public to protected in multiple classes to restrict access to methods for better encapsulation
cloudstack - 10297 : do n ' t allow user to create a virtual machine for a virtual machine with a virtual machine .
updated HttpParser and HttpParserTest to set the value string to an empty string instead of null based on compliance to ensure correct parsing of HTTP headers
replaced ` completeInitialization ` method with a new ` threadCompleteInitialization ` method in ` J9VMInternals ` and ` Thread ` classes to
added ` getExternalStoragePublicDirectory ( String type ) ` method to ` ShadowEnvironment ` and created a new ` EnvironmentTest ` class for testing to
jbrules - 2424 add test for mvel type coercion after mvel 2.1 . 0 .
updated formatting and formatting in LogConfig . java and LoggingConfig . java to improve code readability and maintain consistency
updated logging message in ActionNode . java to include the exception message to improve debugging by providing more context about the exception
added a check for the " tel : " character in the toNumber string to ensure the correct substring is used for processing
refactor visibility logic for shared files in FileListListAdapter . java to improve readability and maintainability of the code
[ flink - 18186 ] [ table - planner - blink ] remove deprecate optimize . sort . dynamic . partition .
updated the constructor of ` ExecuteStatementOperation ` and ` Operation ` classes to include a new ` LOG _ KEY ` parameter to enhance functionality by allowing
replaced ` Lists . newArrayList ( ) ` with ` ArrayList < String > ( ) ` in multiple classes to simplify code and improve performance by using
updated assertions in OGRDataStoreTest from ` getName ( ) ` to ` getTypeName ( ) ` in ` OGRDataStoreTest . java `
removed the onErrorInStep method from StepListenerSupport . java to streamline error handling by eliminating unused method
refactor Wallet class to improve code organization to enhance maintainability and readability of the code
camel - 14284 : camel - netty - http should set charset to http : / / issues . apache . org / activemq / browse
replace system . out . println with log . info ( ) in testnonblockingapi
added a check to ensure the row does not exceed the size of the connection list to prevent potential out - of - bounds errors
add a new class ` MethodWithSameNameAsEnclosingClass ` to handle method declarations with the same name as the enclosing class to ensure that the
added a new class ` ExtendedPlatformComponent ` for managing platform - managed objects in ` ManagementFactory . java ` to enhance the management functionality by allowing
added string replacement to SQL string in BasicQueryTest . java to ensure proper handling of special characters in SQL queries
updated URLs for BleutradeException and BleutradeExtendedDtoTest to include " org / knowm / xchange / dto / dto /
refactor TextEscapeUtils class to improve code readability to enhance maintainability and facilitate future updates
added a filter parameter to the FilterQuery class and updated the FilteredQuery instantiation in AbstractSpatialFieldType . java to enhance query functionality and improve query
removed conditional checks for auto email sending in GpsLoggingService . java and added a post call in AutoEmailHelper . java to streamline the
replaced ArrayList with HashSet and refactored iterators in Inlinks and LinkDb classes to improve performance and readability of the code
added a synchronized stopScan method to remove older results in TradfriDiscoveryService to ensure thread safety when stopping scans
updated filter handling in HiveMetaStoreClient and modified testFilterForPartition method to accept a boolean parameter to improve flexibility in filtering behavior based on server
added Abandoned support to the workflow status arrays in the TicketModel and TicketBasePage classes to enhance workflow status management by allowing
updated the initialization of columnAliasPrefix from " c " to " c " across multiple platform classes to simplify the code and improve readability by eliminating
changed the data type of ` reader ` from ` Text ` to ` BytesWritable ` in ` LlapRowRecordReader ` and ` Llap
terasology : do n ' t run on a 32 - bit jvm on a 32 - bit system
pdfcopy : use copyobject ( ) instead of copyobject ( ) to avoid classcastexception
added a DAEMON option to the RESET _ ALARM option and implemented daemon UI initialization in TerminalClient to enhance user experience by providing a
added a new class FlushIndexTask to manage PerfRunData flushing to facilitate the flushing of next buffers in the indexing process
update memtable . createflushwriter to use estimatedsize instead of guessedsize .
added a new check for ` SEASONS ` in the conditional statement to include ` SEASONS ` to ensure that both text and
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket interface with IPv6 address validation to ensure that the IPv6 address is
updated grid size points in GridSizeMigrationTask . java to correct the positioning of grid size steps and steps
replaced instances of ` getName ( ) ` with ` getName ( ) ` in ` SerializerPojo . java ` to simplify code and improve readability by
added a ` READ _ ONLY ` option to the ` Context ` class and modified the ` commit ( ) ` and ` rollback ( ) `
refactor LookAndFeelCommand class to improve code organization to enhance maintainability and readability of the code
updated the calculation of lastRunEnd in BlockBoxing . java to use lastRunStart instead of lastRunEnd to ensure correct calculation of run
updated assertions in GracefulStopTest to include EOFException and EofException instances to ensure proper exception handling for EOFExceptions
replaced locking mechanism with direct access to the HttpResponseListener and added a synchronized remove method to improve thread safety and maintainability of the code
refactor NetworkParameters class to improve code organization to enhance maintainability and readability of the code
added a conditional check for account asset optimization in DynamicPropertiesStore . java to ensure proper configuration of asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC and a constant J9 _ GC _ POLICY _ NOGC to the
updated transaction validation logic in TransactionCapsule . java to handle InvalidProtocolBufferException to improve error handling and provide clearer feedback for invalid contract
remove exceptiontypecheck from strictexception rule
updated resource path from " helpPre + file " to " en / " and added logging for no localization to improve resource management and provide clearer
added a new file ` ProcessorInfo . java ` to determine and read CPU processes based on available processors to provide a mechanism for retrieving CPU and ASCII
added a new stylesheet option to the PrintingBugReporter class and modified the PrintingBugReporter to utilize it to enhance the reporter ' s
refactored logbackloggingsystem . logbackxmllocation to be final and deprecate .
updated HostLevelParamsHolder and related classes to utilize ServiceComponentRecoveryChangedEvent for updating cluster data to improve code readability and maintainability by reducing
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to include user configuration for tag propagation to ensure proper
refactor RustCompileUtils to use a switch statement for handling different types to improve code readability and maintainability by reducing duplication
updated the ` oauth2LoginLinks ` method to accept a ` MultiValueMap ` parameter and added error handling in the ` LoginPageGeneratingWeb
hbase - 16469 hfilereader . seektofirst ( ) should return the first key if it ' s not the first key
hhh - 14258 - add ` ` always ' ' to ` ` always ' ' annotation in java . sql . tuple
add unit test for layernorm nan in profiler .
replaced direct calls to ` showShareFile ` with a call to ` mContainerActivity . getFileOperationsHelper ( ) . showShareFile ( )
added a new file ` LiquibaseUpdateMojoExecutionTest . java ` to test the functionality of ` LiquibaseUpdateMojoExecution ` to
updated the method to convert the proxyType string to uppercase to ensure consistent formatting of proxyType values across the codebase
add mod _ fml _ mod _ fml _ mod _ fml _ mod _ fml _ mod _ forge _ mod _ forge _ mod _ mod _
refactor JdbcDatabaseSnapshot to use a new variable for fetching columns and update cache logic accordingly to improve cache performance based on the number of columns
added a container for CSS borders in CSSBorderTest . java to enhance the visual appearance of the CSS border in the UI
added ` RetryableStatusCodeException ` to ` LoadBalancerAutoConfiguration ` and modified ` RetryLoadBalancerInterceptor ` to include a ` RetryTemplate ` to
replace LayoutParams . FILL _ PARENT with LayoutParams . MATCH _ PARENT in CellLayout . java to improve layout flexibility by allowing more flexible
updated the concatenation of the task name in PinotHelixTaskResourceManager from ` nanoTime ( ) ` to ` currentTimeMillis ( ) ` to
added error handling for AddServiceRequest parsing in ServiceResourceProvider . java to improve robustness by logging exceptions during service request parsing
refactor the return statement in IndexDatabase . java for consistency to improve readability and maintainability of the code
[ giac ] fix a bug where the sequence be n ' t take into account the length of the sequence .
refactor AnonCipherWithWantClientAuth class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] add miss @ deprecate annotation to producertemplate
updated method implementations in JLayer . java to improve performance and maintainability of the code
[ hz - 2296 ] fix test failure on slow ci server
replaced the method ` encodeInternal ` with a variable ` saltedPass ` in ` Md5PasswordEncoder . java ` to streamline the code
replaced ` viewTreeObserver ` with ` mTaskRecyclerView . getViewTreeObserver ( ) . getViewTreeObserver ( ) ` in ` IconRecents
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
[ hotfix ] [ table - planner - blink ] use long . max _ value instead of long . min _ value
add a setPreferredSize to the SecurityPanel panel to improve user interface responsiveness by reducing the number of call participants
added null checks for replies in TweetActivity , TimeLineCursorAdapter , TimeLineCursorAdapter , TimeLineCursorAdapter , and TimelineView
updated ` HitbtcBalance ` and ` HitbtcAdaptersTest ` to use ` Objects . equals ` and ` Objects .
[ iotdb - 4071 ] fix where clause with in statement in order by clause
updated return statement in RetriesExhaustedWithDetailsException to use addrs . toString ( ) instead of s to improve clarity and consistency in
refactor EditGcodeFile to use OpenCookie for file closing to improve code readability and maintainability by utilizing a standardized method for
updated imports from ` org . apache . http . impl ` to ` org . apache . hc . client5 . http . impl . classic
updated energy calculation logic in PipePowerWood . java to use minimum energy values instead of a minimum value to simplify energy handling by eliminating unnecessary checks
added a check to delete the temporary output file if it exists to ensure that the temporary output file is deleted before proceeding with operations
updated constructor parameters in BitstampWebSocketTransaction and added unit tests for trade retrieval in BitstampStreamingMarketDataServiceTest to enhance code readability and ensure
ReplayProcessor , ReplaySubject , ReplayProcessor , ReplayProcessor , ReplayProcessor , ReplaySubject , and ReplayProcessorTest
corrected the formatting of the expectedCitation string in CitationStyleGeneratorTest . java to improve code readability and maintain consistency
[ hotfix ] [ table - planner - blink ] add videohdformat to mediatablefiles # getvideohdformat (
g3d - 283 : add a feature to show only definition for a geo element in an equation .
added null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions during execution
hbase - 24286 add caching for scan root in metareader . addendum
updated the SQL initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved performance to enhance performance and maintainability of mathematical operations
added a new debug flag ` ENABLE _ TRANSIENT _ TASKBAR ` to the ` FeatureFlags ` class to enable transient taskbar
updated AccessExecution and ArchivedExecutionVertex classes to improve code organization and maintainability
added a condition to set density to 3f for scale in IOSGraphics . java to ensure correct density representation when scaling is 3
rename ` optional ` to ` vararg ` for consistency to improve code readability and maintainability by using more descriptive terminology
hbase - 26286 addendum : log the exception if the regionstatestore fail to load
updated the assertion in TestClusterUpgradeUtils to use a lambda expression instead of an anonymous inner class to improve code readability and reduce boilerplate
updated warning log messages and refactored AsyncHttpConnection and AsyncContextTest classes to improve clarity of warning messages and introduce a new test class for
added a new boolean parameter ` showArrow ` to the ` SearchUiManager ` class to enhance the functionality of the ` SearchUiManager ` class
added a lock mode assignment in Database . java and removed the testSetMode method in TestRowLocks . java to ensure proper locking behavior
skip linux / amd64 only test on linux / amd64
added type checks for ` input ` and ` input ` in ` Scalars . java ` to ensure proper handling of ` Integer ` and ` Int
updated error messages for missing and multiple primary keys in CreateTableStatement . java to improve clarity of error messages related to PRIMARY KEY specifications
added support for lmp icons in CellLayout , Hotseat , and Launcher classes to ensure proper drawable resources are set based on the device '
added exception handling for missing Flutter views in VMServiceManager . java to improve error handling and provide clearer feedback when no isolate is found
added getter methods for contentTypeOptions , xssProtection , and frameOptions in HeadersConfigurer . java to improve code readability and maintainability by
refactor ObjectEnumerableAssert class to improve code readability to enhance maintainability and facilitate future updates
[ grid ] move devtools test to router package
[ hotfix ] [ test ] fix test failure in eventsourcingrepositorytest
added support for handling prebuilt libraries in Python binary operations to enhance functionality by allowing users to specify prebuilt libraries in the binary
added support for clientAuth in NetServerOptionsConverter and removed deprecated methods in HttpServerOptions to streamline client authentication handling and improve code clarity
hive - 16457 : hive / cmroot / user / hive / repl / user / hive / repl / user / hive / repl /
refactor task visibility handling in RecentsView . java to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
[ hotfix ] [ test ] increase timeout for amqptransformertest
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary method calls
[ hotfix ] [ model ] rename controller to flowcontroller for clarity
[ flink - 24186 ] [ runtime ] fix the order of exchange count in the pipelinebuilder .
added import statement for ClassLoaderHandler in Module - info . java to enable class loading functionality in the application
[ jbrules - 2424 ] fix the problembusiness . solve ( ) method to return the best solution
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive data in JSON
updated null check from ` throwable ` to ` throwable ` in ` PlotListener . java ` to ensure proper handling of null throwables
refactor query info retrieval to use a variable for better readability to improve code readability and maintainability by reducing duplication
fix auto - craft progress not work when there be no item in the recipe
fix ( gl200 ) : do n ' t decode gl200 text with no attribute
rename ` timeColumnName ` to ` incomingTimeColumnName ` in ` AvroRecordToPinotRowGenerator . java ` to clarify the purpose
removed redundant calls to waitToProduceOneBlock in HttpShieldTrc20Token004 . java to streamline the code and improve readability
ww - 4071 add initializable interface so that it can be use in a container .
refactor TimerObservationHandler to use a wildcard import and introduce a new method for creating long task samples to improve code readability and maintainability by
changed the data type of SYNC _ DELTA _ RATE from float to double and adjusted the fetch time calculation logic to improve precision and
add warn log for deprecate fragment expression in future versions of fragment insertion tag
replaced HashMap with ConcurrentHashMap in SessionData . java to improve thread safety by using a more efficient map implementation
http : / / issues . apache . org / jira / browse / amq - 4071 - add debug output for message delivery .
added constants for main and secondary color constants and updated the extractInto method to handle light text handling to improve color extraction accuracy and support for dark text
add data folder path to the src folder path list if it ' s not accessible
updated the ` appendContent ` method to include a ` includeTitle ` parameter and modified related logic in ` NotesHelper ` to enhance functionality by allowing
changed the initialization of the SessionRegistry variable from an instance of SessionRegistryImpl to an instance of SessionRegistry to simplify the code by eliminating unnecessary instantiation
added logging for connection completion and failure in NettyStreamingService . java to improve error tracking and debugging capabilities during connection process
use internal javassistproxyfactory instead of cglibproxyfactory ( # 224 )
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to utilize ` Jetty ' s ` ConcurrentHashSet
refactor SocketExceptions and ExceptionText classes to use String . join for host and host string concatenation to improve code readability and maintainability by
added a check to check if the view directory is under the repository and implemented a method to check if the view directory is under the repository to ensure
remove tab - header - area from jabrefframe
added additional compression options for compressed Oops and pointers in multiple test files to enhance testing coverage for compressed object types in the application
peersync : do n ' t log error if log be not in active or replay state .
deleted the ConnectionHook . java file to remove unused code that is no longer needed in the project
removed the ` waitForReplicasInSync ` and ` waitForReplicasInSync ` methods from multiple test classes to streamline the code by eliminating
camel - 14265 : camel - rest - dsl - fix typo in rest - dsl
updated ApexLanguageModule to use Version . CURRENT . getExternal ( ) instead of hardcoded " 45 " to ensure compatibility with external version
refactor multiple Java files to improve code organization and consistency to enhance maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread management to improve code readability and maintainability by encapsulating thread management
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory management by allowing dynamic buffer allocation based on the
added scrollToPositionWithOffset logic in UploadActivity . java to adjust the scroll position based on the index to ensure proper scrolling behavior for thumbnails
fix ( sql ) : do n ' t overwrite column alias in sqlcodegenerator
refactor animation handling in LauncherAnimUtils , LauncherStateTransitionAnimation , and LauncherStateTransitionAnimation classes to improve animation responsiveness
added a check to disable the default user agent in the HttpClient configuration to ensure that the default user agent is disabled when the HTTP client is disabled
added Pubsubhubbub functionality to FeedRefreshUpdater and ApplicationSettings classes to control whether the feed is a pubsub hubbub
changed the visibility of the finalize method from public to protected to allow subclass access to the finalize method for better error handling
updated method signature from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` and added a condition to check for synthetic
[ dspace ] add a new dspacewebapp class to make it easy to configure the web application .
added a method to retrieve the table alias containing column names in CalcitePlanner and RowResolver classes to ensure that a SemanticException is thrown when
[ hotfix ] [ table - common ] fix typo in triggerkey
updated logging level from info to warn and error in Wallet . java to improve clarity and consistency in log messages related to transaction management
fix test failure in basicmaptest
updated the configuration of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig ` and ` TestHive
[ gitblit ] add option to ask for optional client certificate for https
removed the subscription check for authenticated feeds in KrakenFuturesStreamingService . java to simplify the subscription process and improve logging clarity
added support for HTTP headers and sub - protocols in the ProxyWebSocketHandler to enhance WebSocket communication by allowing customizable WebSocket protocols
added debug logging for fetchReq in HiveQueryResultSet . java to improve traceability and debugging of query results
updated dimension string formatting in HolidayEventFormatter . java to remove the dimName parameter to simplify the formatting of dimensions and improve readability
rename ` InnerClass ` and ` InnerStaticClass ` classes to ` InnerStaticClass ` and update related methods accordingly to improve clarity and functionality of
refactor UnexpectedJobExecutionException class to improve exception handling to enhance code clarity and maintainability
removed the ` shouldUseOpaqueButtons ( ) ` method from ` AquaLookAndFeel ` , ` AquaLookAndFeel ` , and ` AquaUtils
updated variable names from ' maxFreq ' to ' maxCost ' in DrillSidewaysQuery and DrillSidewaysScorer to
added a new classRegsitry to set the GeoDegeneratePath class to 36 to enable the generation of the GeoDegeneratePath class
removed the ` preFill ` parameter from ` ParticleEffectPool ` , ` FlushablePool ` , and ` ReflectionPool ` constructors to
updated taskbar launcher state handling in TaskbarLauncherStateController and updated FLAG _ STASHED _ IN _ APP in TaskbarStashController
added null check for the default style in CascadeDeleteVisitor . java to prevent potential NullPointerExceptions when comparing styles
bugfix # 204 , add new constructor to guiutil . getpanel ( ) and set maximum width in statustab .
refactor icon retrieval logic in FileTreeViewHolder to use TreeFileExtension . Factory for file extensions to improve code readability and maintainability by reducing redundancy
replaced instances of ` isEqualTo ( ) ` with ` contains ( ) ` for qualifier assertions in ` ParallelUniverseTest . java ` to improve readability
fix concurrentmodificationexception in xmlreporter
add a new test class ` TestNativeProbabilityFunctionQueries ` for testing native query runner functionality to facilitate testing of probability function queries in the native worker
added a call to deregister the shutdown thread in ClientContainer . java to ensure proper resource management and prevent potential memory leaks
alexeibarantsev : add a method to drop temporary table after use
[ java ] move color to htmlunit instead of htmlunit in webelement .
refactor multiple classes related to Solr core , XMLWriter , DocIterator , and QueryParsing to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code organization to enhance maintainability and readability of the code
updated hex string format in VirtualAllocCommitUncommitRecommit . java to include reserved 1024KB for Test to ensure accurate representation of reserved memory for
refactor ad playback state initialization in AdTagLoader and AdsMediaSource to improve code readability and maintainability
added @ SuppressWarnings ( " UndefinedEquals " ) annotation and modified the equality check in MultimapSubject . java to improve code clarity and suppress
updated wave frequency value from deg _ text to unit _ hz in WaveGeneratorActivity . java to ensure accurate representation of wave frequency in the application
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
refactored the initialization of the TreeMap to use a direct initialization of includedLabelSets to improve code readability and reduce unnecessary method calls
added a new constant NORMAL _ 4F for vertex format handling in VertexLighterFlat . java to improve code readability and maintainability by
updated ` TracingClientInterceptor ` , ` ITTracingClientInterceptor ` , ` TracingServerInterceptor ` , and ` ITTracingServerInterceptor `
replaced ` ZoneId . of ( timeZoneStr ) ` with ` TimeZone . getTimeZone ( timeZoneStr ) ` in ` ScheduledTrigger . java ` to
added AsyncBucket and AsyncBucketBuilder classes and updated related methods in Bucket , Bucket , ConfigurationBuilder , and InMemoryExtension classes to enhance functionality by providing
updated class directory handling in resexhausted003 . java to utilize a regex pattern for class path validation to improve flexibility and maintainability
added exception handling for InterruptedException in the setHost method to improve robustness by catching InterruptedException during execution
refactor OngoingStubbing class implementation to improve code readability and maintainability
updated the ` getValidWebServerPort ` method to accept an ` Optional < WebServer > ` parameter and modified server creation logic to enhance server
corrected the spelling of " productConstructor " to " constructor " in HttpClientUtil . java and added a static import in SolrTestCaseJ4
added error handling for clearing the allowlist in ParametersInterceptor . java to ensure that the thread allowlist is cleared before proceeding with further operations
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the correct output writer is
[ drools - 4071 ] do n ' t run dmndtanalyser if the hitpolicy be set to COLLECT .
added a new test method ` testSlidingWindowsCombine ` to ` CombineTest . java ` to validate the functionality of the ` Combine ` class with
updated logging statements in LauncherModel . java and LauncherModel . java to conditionally bind all apps based on the state of apps to improve
removed the check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest . java to streamline the test by eliminating unnecessary variable assignment
removed unnecessary print statement in Beautiful class to improve code readability and maintainability
refactor AquaMenuBarUI to use AccessController for property retrieval to improve security checks and ensure compatibility with embedded environments
[ fix ] highentity . setrawlocation ( ) and highitem . setrawlocation ( ) return false if fall distance be 0 .
refactor query logic in SimpleJpaRepository to use CriteriaQuery and applyCriteriaToCriteria to improve query performance and readability to enhance code maintain
added timestamp , parenthash , nonce , and number fields to BlockUtil . java to enhance the handling of genesis block arguments in the BlockUtil
remove loopsafepointinsertionphase . cansafepoint ( ) from graalcompiler . genloopsafepoints
hbase - 16469 fix npe in zkgroupinfomanagerimpl and zkprocedurememberrpcs . listchildren ( )
changed access modifiers of several methods from package - private to public in ArtifactResolver . java to allow access to these methods from outside the package
fix thread leak in clientconnectionhandler and bulletcompilationpipeline . stop ( )
added validation to ensure maxBufferedDocs is at least 1 to prevent IllegalArgumentException when maxBufferedDocs is less than 1
added a boolean flag ` loginCurrentlyInProgress ` and logging in ` LoginActivity ` to manage the state of the login process to ensure that the
added null checks for ` next ` and ` val ` in ` Pump . java ` and a corresponding test in ` PumpTest . java
updated access modifiers of ` loadbalancer ` and ` zombieServer ` methods in ` HttpShardHandlerFactory ` , ` LBHttpSolrServer
updated the order value from LOWEST _ PRECEDENCE to HIGHEST _ HIGHEST _ PRECEDENCE in BaseAuthentication
added imports for Server , ContextHandlerCollection , HandlerList , and HandlerList , and updated handler addition in TestJNDI . java to
updated variable names and conditions in SortedDynPartitionOptimizer . java and ReduceField . java to improve code readability and ensure correct operator
change return value from NioEventLoop to true in FileStreamChannel . java to ensure proper handling of NIO event loops
updated the calculation of numNulls in StatsUtils . java to conditionally update the number of nulls based on the new number of rows to
camel - 16265 : camel - jbang - add support for kamelet in camel - dsl
replaced ` PreferenceHelper ` with ` OpenStreetMapManager ` and updated access token handling in ` OSMJob . java ` to improve authentication handling
add main ( ) method to test meta access
added clientAuth configuration and related methods to IoTDBRestServiceConfig and RestService classes to enable configuration of client authentication for improved security
removed unnecessary mocks being injected in PropertyAndSetterInjection . java and added a new test class ChildWithSameParentFieldInjectionTest . java to
refactored bloomfilter64filter to use spring framework instead of spring framework
updated cursor adapter from false to true in HomeFragment . java and modified TweetPager . java to enable cursor refresh functionality in TweetPager .
updated the intermediate header height ratio from 1 f to 75 f in ProfilePager . java to improve scroll responsiveness by adjusting the header height
replaced the ` @ SuppressWarnings ( " null " ) ` annotation with ` @ SuppressWarnings ( " null " ) ` in multiple Java files to
added HOST _ SYS _ PREPPED and HOST _ SYS _ PREPPED configuration constants and methods to manage host - level
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and modified the ` include ` method to include it to allow
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13636 - fix issue
added properties for entities and scores in StaticPipeline . java to enhance functionality by allowing configuration of scores in the pipeline
refactor filename handling and add configuration handling in Frame . java , Utils . java , WhoopsModule . java , and WhoopsModule . java
do n ' t throw exception if no datastore be find in workspace
refactor assertions in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new test classes ` MultiLineJaggedTextExampleTest `
camel - 14284 : use sendmessagetoonetopic instead of stoproute in twoconsumeronsametopictest . java
refactor TsFileWriteAlignedWithTSRecord , TsFileWriteAlignedWithTSRecord , TsFileWriteAlignedWith
updated loop condition in TestPromotionFromSurvivorToSurvivorToTenuredAfterMinorGC . java to include actual memory
updated logging library name from " slf4j - log4j12 " to " slf4j - reload4j - reload4j "
refactor assertions in HueBridgeHandlerOSGiTest to use waitForAssert for better readability to improve code readability and maintainability by
updated package names from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` across multiple
[ drools - 1276 ] ignore test that fail when drools - 1276 be fixed
added a constructor to the PullRequestMergedEventsStream class to retrieve Avro schema from a specified file to improve flexibility and error handling when reading
refactor AbstractExpressionPart class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ javadoc ] fix typo in taskslot javadoc
replace ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` NettyWebSocket
added a check for LockException before releasing the lock in MoveTask . java to avoid potential deadlocks when unlocking the lock
refactor JRubyBackend to use ResourceBundle for property retrieval to improve code readability and maintainability by reducing redundancy
replaced the usage of ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY to simplify the code and improve readability by using
refactor class loading logic in ClassGraphClassLoader . java for improved readability to enhance code readability and maintainability
[ hotfix ] [ test ] fix jobmanager startup test
chore : update java microgenerator to 1.0 . 0 ( # 252 )
added a new Bundle instance to set extra extras in FileDisplayActivity to enhance the user experience by allowing users to specify additional data
updated the loop condition in ParticleEmitter . java to skip processing when the particle is null to improve loop flow and prevent potential null pointer exceptions
updated cluster test assertions from " and " cluster " to " 1 " in AmbariManagementControllerImplTest . java to reflect the correct number
changed the nullable column from nullable to nullable in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry .
updated Bug4823811 . java file to improve functionality to enhance performance and maintainability of the code
updated RmStep . java to utilize a function for path relativization to improve flexibility and maintainability of path relativization
fix thingdiscoverybridgehandler # requestfullstate ( ) not call on initial request
refactor ShibbolethCompatiblePersistentIdGenerator to use a String attribute instead of a hardcoded byte array to improve flexibility and maintainability
updated the @ Inject annotation from ` @ Inject ` to ` @ Inject ` in ` RequestValidationService . java ` to ensure proper injection of the
added a new bundle for the STATS _ LOGGER _ KEY in UiThreadHelper . java to manage the visibility of the keyboard message to improve
refactor MManager and MTreeTest to improve code readability and ensure proper cleanup of object files to enhance maintainability and ensure proper cleanup of
refactor NavigableMap , NavigableSet , and NavigableSet classes to improve code organization and maintainability
add unit test for slurp file
added @ FunctionalInterface annotation to several classes to enhance code readability and indicate that the interface is intended for functional interfaces
refactor span retrieval logic into a separate method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added support for converting ` DateWritable ` to ` ETypeConverter ` , ` HiveSchemaConverter ` , ` DataWritableWriter ` , and ` Hive
updated the split method to use ` Patterns . COMMA _ SEPARATOR ` instead of a hardcoded string to improve flexibility in parsing options
ggb - 224 add support for positive double conversion in dialog table view
refactor column validation logic in SemanticAnalyzer to include inColumnCnt and outColumnCnt to improve code readability and maintainability by reducing redundancy
refactor the scoring logic in WANDScorer . java to improve clarity and correctness to enhance code readability and maintainability by consolid
refactor Correspondence class implementation to improve code readability and maintainability
updated import statements in PaintSetEnabledDeadlock . java for improved clarity to enhance code readability and maintainability by eliminating wildcard imports
updated curPixVal initialization in XRSolidSrcPict . java and added a new white text color test class WhiteTextColorTest . java
rename ` listSubTypes ` to ` listSupertypes ` and update related methods to use ` LinkedList < Type > ` instead of ` List <
rename ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache . java ` to clarify the purpose of the variable ' s purpose
updated TaplTestsLauncher3 . java to include StabilityRule . LOCAL and PLATFORM _ POSTSUBMIT to ensure compatibility with different flavors
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
add a check for empty string in the logFileSuffix condition to ensure that the logFileSuffix is not empty before proceeding with further operations
refactor PythonBuckConfig . java for improved configuration handling to enhance code maintainability and readability
added unit tests for ` addSystemSharedLibraryName ` and ` clearSystemSharedLibraryNames ` methods in ` ShadowPackageManagerTest ` and ` Shadow
fix meiligao protocol decode error ( fix # 116 )
fix npe in powerdiode . java due to null tile .
updated cache size handling in PrefFragment and added a TrimCache class to improve performance by reducing cache size during pre - execution
fix checkstyle issue in java / awt / ui / rendertasklistgenerator / rendertasklistgenerator / rendertasklistgenerator / rendertasklist
replaced return statements with ` NotAuthorizedException ` in multiple classes to improve error handling by throwing a specific ` NotAuthorizedException ` instead of returning a
added a new method ` schedulePeriodically ` to the ` Scheduler ` class and modified the ` schedulePeriodically ` method to accept a ` Scheduler
updated the method of refreshing the list of files fragment to call onItemClicked instead of refreshing it to improve user experience by allowing users to
added logging and error handling for streams in StreamUtil . java to improve error handling and provide clearer logging for stream operations
refactor create _ table methods in SessionHiveMetaStoreClient and HiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to simplify
added a boolean flag ` aborted ` to the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to control
updated indentation checks in multiple parser classes to ensure proper handling of indentation values to prevent potential errors during parsing
add a network wifi status receiver to the docilealligator
removed the conditional check for control frames in FrameGenerator . java to simplify the code for better readability and maintainability
added visibility setting for collapse handle in WidgetsBottomSheet . java to enhance user interface by hiding the collapse handle button
added new files ` Issue475 . java ` and ` XSS . java ` to handle HTML , HTML , and JSS requests to ensure
added a check to return early if the unit to scroll is zero to improve performance by avoiding unnecessary processing when no units are available
updated the condition to check if the contract list size is less than 1 instead of greater than 1 to ensure that only one contract list is processed
added methods ` add ` and ` put ` in ` JsonArray ` , ` JsonObject ` , and corresponding unit tests in ` JsonArrayTest ` to enhance
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class with hashCode ( ) method to ensure consistent hash code
danielwagnerhall : use getversion ( ) instead of getiversion ( ) in db2idialect .
added a condition to check if the transaction fee is greater than zero to ensure the connection is enabled only when the transaction fee is greater than zero
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
update mediacodecrenderer . queueinputbuffer ( ) to increase clear data for adaptive reconfiguration byte
removed the ` public ` access modifier from several ` AsynchronousAntn ` , ` Bulkhead ` , ` CircuitBreakerAntn ` ,
added Retrofit imports to Part and PartMap classes to enable the use of Retrofit functionality in the application
refactor JsonBuildHelper and ParamsBuildHelper to streamline JSON building logic and enhance parameter handling to improve code readability and maintainability by
added TYPE _ TASKBAR _ OVERLAY _ PROXY and TYPE _ TASKBAR _ OVERLAY _ PROXY to
chore : update gapic - generator - java with mock service generation fix ( # 52 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to ensure correct alpha calculation based on the current
updated the method call from ` createRenderScript ( true , true ) ` to ` createRenderScript ( true , true ) ` in ` All
refactor PMD class to improve code readability to enhance maintainability and facilitate future updates
refactor to use pluginmanageractivator . issystembundle ( ) instead of system - bundle
updated import statements and formatting in IntegrationTestSparkBulkLoad . java for consistency to improve code readability and maintainability
updated BloomFilter initialization to use a constant LOW _ FALSE _ POSITIVE _ RATE to improve code readability and maintainability by using a
refactor the handling of default configurations in Overview . java to improve clarity and functionality to enhance code readability and maintainability by using a
server : fix npe in agentmanagerimpl # findattache ( hostid )
added null check for the value before converting it to a Data object to avoid potential NullPointerExceptions when accessing the value
cloudstack - 10265 : do n ' t return null when add host to cloudstack
updated error messages in ParamAction . java to include additional attributes to improve clarity of error messages for better debugging
changed the constructor visibility of BaseStubbing and ConsecutiveStubbing to allow for more flexible mock handling in the instantiation process
fix locationopener . getmethodline ( ) to strip method params
update version name and version code from " 15578 " to " 15584 " to ensure compatibility with the latest features and fixes
[ geot - 5296 ] use collection instead of list to avoid duplicate command
fix for geot - 5296 : add label cache item to symbolmblayer .
ggb - 221 fix popup not show when overlap feature be enable .
updated error messages from " Table : " to " Table - " in ValidationSuite . java to improve clarity and consistency in error reporting
refactor ` QuickstepTransitionManager ` to use a dedicated ` QuickstepTransitionManager ` instance to improve code maintainability and reduce boilerplate
added a doc comment inherited from MBeanServerConnection to improve code readability and maintainability
updated exception messages to include " com . sun . corba . se . impl . " instead of " com . sun . corba . se . impl
[ hotfix ] [ test ] increase timeout for threadsafetytest
[ pdfbox - 4071 ] fix npe in xrlog . setloggingenabled ( false )
added @ JsonIgnore ( true ) annotations to the Schema class to exclude certain fields from JSON processing
increase test timeout for nontxindexbuilder . testnontxindexbuilder . testnontxindexbuilder
refactor train methods in SimpleNaiveBayesClassifier to improve clarity and consistency to enhance code readability and maintainability by using more descriptive
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` to enhance the module ' s functionality by
refactor Prototype class to improve code organization to enhance maintainability and readability of the codebase
added a null check for tableIsTransactional in SemanticAnalyzer . java to ensure proper handling of transactional tables in the SemanticAnalyzer
[ java ] remove writefragment ( ) method from recordingwriter . onblock ( )
fix ( cea ) : return empty list instead of 0 when cue be 0
add ` ` alias ' ' to datapointsgroup and datapointsqueryimpl . getdatapoints ( ) method that return null .
updated currency pairs from " CAD " to " USD " and " QRK " in VaultOfSatoshiBaseService .
updated EntityManagerFactory handling in multiple test classes to ensure proper resource management and prevent potential memory leaks
updated import statements for KafkaSender from kafka11 to kafka in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to ensure compatibility with
added GwtBinaryIntegrationTest and A classes for testing GWT binary and compilation mappings to ensure proper functionality of GWT and A functionalities in the
updated the loading logic in BrowserContentPane and SQLConsole to handle null query builder dialogs and improved error handling in SQLConsole to enhance user experience
updated formatting in EnhancedRandomImpl . java and added new test cases in EnhancedRandomImplTest . java to improve code readability
added XMLSecurityPropertyManager to multiple configuration classes to support XML security properties in configurations
added a new file ` InlineDefaultMethod . java ` that implements ` InterfaceWithDefaultMethod1 ` , ` Decoy ` , and ` Instance `
updated SQL query parameters from " escape " to " GLOB " in SqliteFieldPredicateView . java to improve clarity and accuracy of query
[ drools - 4071 ] make getdmnprofiles protect to allow subclassing .
fixed - redissonscript . readallasync ( ) method do n ' t work in redis
remove the setwordfieldlong method from staticobject . setwordfieldbelt ( field , int )
updated debug log messages to use ` verbose ( ) ` instead of ` debug ( ) ` in multiple generator classes to improve logging granularity
update fml outbound handler to use payload . retain ( ) and release ( ) instead of payload . retain ( )
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and modified the thread pool initialization to use it to improve flexibility in
refactor shortcut handling logic in LauncherModel . java for improved clarity and efficiency to enhance code readability and maintainability by reducing redundancy
remove unnecessary check for string type in defaulthttpclientbinderregistry . convert ( )
removed the home navigation logic from DetailFragment . java to streamline the navigation process for better user experience
added a condition to check if the Android market is present before checking if includesPlayServices is true to ensure that includesPlayServices is only included when
updated cellStart and cellEnd logic in TableBlockParser . java and added a new test for pipes in TablesTest . java to ensure proper
added bridging header functionality to NewNativeTargetProjectMutator and related classes to enable flexible handling of bridging headers in project generation
refactor PotentiallyDeadCode to use a set of methods instead of a hardcoded path to improve code readability and maintainability by
added dash detection for diamond redundant argument types and created new classes T6939780 and T6939780 to enhance type safety and provide
refactor : use invocation . onstartsendrequest ( ) instead of invocation . getinvocationstagetrace ( )
removed the import of Utils and added a debug log statement in SolrCacheHolder . java to clean up the code and reduce unnecessary dependencies
added catch blocks for AuthenticationException in LdapCtxFactory . java to ensure proper handling of AuthenticationExceptions during authentication
updated the calculation of the zero value from ` d1 ` to ` - d2 ` in ` Test6796786 . java ` to
added a local file for the " logback . dev . xml " file in the JoobyMojo . java and Main . java files to
added a new file JaasEventCheck . java to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent to implement event handling for Ja
replaced direct access to ` currentPage ` and ` qsb ` with ` viewsToAnimate ` for animation to improve code readability and maintainability by
updated string comparison logic in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest . java to
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve type safety
removed multiple key strings from DefaultLeaderElectionService . java to clean up the code and improve readability
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
add agent . script . timeout property to allow more time for command to be modify
updated JDBC table parameters in AbstractJDBCConnectorProvider to use JDBC _ SCHEMA instead of JDBC _ TABLE to improve clarity and maintainability of
corrected the spelling of " SQLUpdate " from " AUP " to " SET " across multiple files to standardize the terminology
refactor schemaTypeCache initialization to use a synchronized map for thread safety to improve performance and reduce contention in concurrent scenarios
refactor header handling logic in StaticServerHttpHeadersWriter and add a test for header writing in StaticServerHttpHeadersWriterTests to improve header management
added JUnit Ignore annotation to LatticeDemo . java to temporarily disable tests that rely on files available from CMU
added directory creation for the storage storage in TestCollector . java to ensure that the storage directory is created for testing purposes
set chunked streaming mode to 1024 in StarTreeJobUtils . java to ensure proper handling of chunked streaming mode
Added new syntax checker classes for Basic , Multiple , and SingleTypeSyntaxCheckerTest to implement basic syntax checks for different types in JSON schema
hbase - 16469 fix import of hbase - thirdparty package in pbcell and pbtype
added a new test method ` Node ` to ` BeanPopulatorTest ` and created a new ` Node ` class ` Node ` to ensure proper handling
added IOException to the getRemoteName method in AccountingTransceiver . java to ensure proper handling of IOException during method execution
updated exception handling in UserAccountManagerImpl , ClientFactoryImpl , and ConnectivityServiceImpl to use HttpClient instead of OwnCloudClient to improve
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser and updated advisor registration logic to use it to enhance security by allowing the use of
updated import statements and refactored hostname verification logic in Connection . java to improve code readability and maintainability by reducing redundancy
modified the type of the ` remove ` method in ` OHLCSeries ` and added a new method ` remove ` in ` OHLC
updated method calls from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) ` in ` ClientSchemaService . java
removed redundant joint removal logic in World . java to streamline the process of destroying joints and improve code readability
fix nullpointerexception in searchfilter . issearchingphonenumbersmatch ( )
[ hotfix ] [ test ] move sourcereadertestbase to sourcereadertestbase and make sourcereadertestbase public
[ hotfix ] [ runtime ] remove redundant code in documentstorageprovider
added new classes ` HookDefinition ` , ` JavaHookDefinition ` , and ` JavaHookDefinition ` , and created ` JavaHookDefinition ` to
refactor flushIfDeadlockRisk method to use a new method ` flushIfDeadlockRisk ` to improve code readability and maintainability by
updated the ` setExoOptions ` method to include a ` allowTs ` parameter and modified the ` setExoOptions ` method to
removed the user identifier from the identifier collection to ensure that the user role is properly removed from the identifiers collection
added a new constant ` INVISIBLE ` and updated the ` toString ` method in ` Color . java ` and ` RailButtonShapes . java
updated null handling enabled logic in CountAggregationFunction . java and added a new test for total count with null handling in NullHandlingIntegrationTest . java to
set the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of the transaction state
updated the way the name is appended to the buffer in StreamInitiation . java to ensure proper handling of XML names in the buffer
updated file path initialization to use config . get ( " work . dir " , " work . dir " ) instead of hardcoded values to
added a condition to set the " deprecated " attribute to true in RuleSetFactory to ensure that the rule is only set when " deprecated " is
use codebuffer . position ( ) instead of amd64directcallop . bind ( )
[ hotfix ] [ runtime ] fix timerange constructor to be static final
refactor BitDocIdSet class to improve code organization to enhance maintainability and readability of the code
refactored the ` emitMetricsJson ` method to a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing
refactor DetailFragment and GalleryActivity to improve readability and maintainability of the code to enhance maintainability and readability of the code
fix tank . fill ( fluid ) not work when the world be remote
added handling for RuleAnalysisLegacyBuildRuleView in CsharpLibrary . java to ensure compatibility with RuleAnalysisLegacyBuildRuleView and improve dependency resolution
[ iq ] add a dummy pep service to the iq pep handler .
added a null check for the runtime before accessing the intrinsicGraph to prevent potential NullPointerExceptions when the runtime is not initialized
[ hotfix ] [ runtime ] fix checkstyle violation in streamingdataflowworker
pdfbox - 4071 : do n ' t ignore eof marker in pdfbox - 4071
added constructors for LwjglAppletApplication in LwjglApplet . java to initialize the application with a canvas to enhance
remove config . tostring ( ) in environmentandpropertyclientproviderstrategy . getenvironmentvariables ( )
refactor LdapAuthenticationHandler to handle password policy messages more effectively to improve code readability and maintainability by consolidating password policy handling logic
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a new private String variable ` resolveFromAttribute ` and updated the resolver setting in ` AbstractLdapAuthenticationProperties ` and ` LdapUtils ` to
refactor Readable class implementation to improve code readability and maintainability
pdfbox - 4071 : use testsupport . withfont ( ) instead of string . getallbytes ( )
updated menu item name from ` share _ menu _ item ` to ` ic _ menu _ menu _ item ` in ` CaptureActivity . java `
updated JVM version handling in Constants . java to use dynamic version checks to improve flexibility and maintainability of JVM version management
updated the ` IS _ JDBC41 ` variable from true to false in ` PoolUtilities . java ` and ` PoolUtilities . java ` to ensure
refactor GenericContainer class to improve code organization to enhance maintainability and readability of the code
changed the type of ` filteredSet ` from ` HashSet ` to ` List ` in ` Enclosed . java ` to improve performance by using a
added multiple @ Override annotations in CentralAuthenticationServiceImpl , CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasView , and AbstractCasView classes to
removed unnecessary spaces in ChartProvider . java to improve code readability and maintainability
set default extension to bibtex _ db for import and appenddatabaseaction .
removed the block from the return statement in JavacParser and added a new ExtraSemiTest class for testing to improve code readability and ensure
added AFTER and BEFORE case handling in JpaQueryCreator and updated User and UserRepositoryTests to include createdAt in UserRepository to enhance
refactor Test15FloatJNIArgs . java for improved functionality to enhance performance and maintainability of the code
updated plot version and website imports in plugin . java and plugin . java to use $ 1 million instead of $ 1 to improve maintainability and
updated substring logic in MockProcessContext and added a new test for encryption and decryption in TestMockProcessContext to ensure correct substring extraction for encrypted
[ java ] throw an exception if reentrant call be not permitted during callbacks .
added null check for ' inp _ dep ' before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 1007 .
refactor Peer class to improve code readability to enhance maintainability and facilitate future updates
refactor RealtimeIndexingCoordinator , RealtimeSegment , RealtimeSegment , RealtimeSegment , StreamProviderConfig , and StreamProviderConfig to
added null check for exportedData before calling writeTo ( out ) to avoid potential NullPointerException when accessing the exported data
refactor popup positioning logic in RecyclerViewFastScroller . java to use a dedicated method to improve code readability and maintainability by centralizing
updated error message in BuckWSServerPortUtils to restart IntelliJ and added a check for tool window instantiation in BuckEventsConsumer to improve
added a conditional check for Windows before setting the preventSleep checkbox in GeneralTab . java to ensure that the JCheckBox is only set on Windows to avoid
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java ` to align
added cropping and cropped size properties in QuickstepAppTransitionManagerImpl . java to improve layout handling for vertical bar layouts
added handling for full screen exclusive mode in XWindow and XWindowPeer classes to ensure proper state management and prevent potential memory leaks
[ log4j2 - 1334 ] fix stringindexoutofboundsexception in stringutils . playdurationstr ( )
added credentials handling methods to DagUtils for managing URIs in MapWork to enhance security by ensuring credentials are correctly marked as needing URIs
camel - 14284 : use map . entryset . get ( ) instead of keyset . get ( ) in camel - core
trim whitespace from the thread name in SessionState . java to ensure consistent handling of thread names by removing leading and trailing whitespace
updated the error message from " Not yet " to " Not yet " in GpsMainActivity . java to improve clarity of the error message for
refactor Job class to improve code readability to enhance maintainability and facilitate future updates
added a new abstract class ` Unused ` and a test method ` testUnusedType ( ) ` to validate the functionality of unused fields in the
rename " hbase _ master _ host " to " hbase _ master _ hosts " in multiple files to improve clarity and consistency in naming conventions
deleted the ` EventReaderDeserializer ` , ` EventWriterDeserializer ` , and ` EventWriterSerializer ` interfaces to remove unused classes to streamline the
[ flink - 18186 ] [ table - planner - blink ] make table output list a list instead of a list .
updated the maximum delegate lock period validation in ProposalUtil and related classes to accommodate a larger maximum delegate lock period to enhance flexibility in managing delegate lock
do n ' t return null if no network rate be specify .
added default constructor and applySpecification method to the CmcExchange class to ensure proper initialization of services and services
updated configuration handling in GossipLocalNode and Constant classes to use config . getConf ( " seed . node . ip . list " instead of
set the default value of ` enabled ` to ` false ` in ` ClientTpcConfig ` and add a new test class ` ClientTpc
bump swagger - ui version from 2.18 . 10 - 1 to 3.28 . 2 ( # 1338 )
refactor divide logic in MutableBigInteger and add a new ModInvTime class for testing modular inverses to improve code readability and maintainability
refactor key assignment logic in NamedObjectList . java for clarity to improve readability and maintainability of the code
replaced instances of ` Util . cleanupEmptyDir ` with ` cleanupEmptyTableDir ` in multiple query compactor classes to ensure consistent cleanup of empty
refactor AsyncCache and Cache classes for improved performance to enhance performance and maintainability of caching mechanisms
added import for RCFileInputFormat and registered it in SerializationUtilities . java to enable serialization of RCFileInputFormat in the serialization process
added default methods for retrieving type and category types in TypeMapperComponent to enhance type mapping functionality for better type handling
added error handling for invalid host headers in Request . java and created a corresponding test in RequestTest . java to improve robustness by providing clearer
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` classes to use reflection methods for better compatibility with Android SDK versions and ensure compatibility with
updated the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to handle outgoing values more effectively to improve
refactor SegmentCoreReaders and SegmentReader classes to use ` si . name ` instead of ` segment ` to improve encapsulation and
added ` hasMainThreadProfile ` method to ` AggregateDao ` , ` AggregateDao ` , ` AggregateRepository ` , and ` AggregateRepository `
added error handling for non - required annotation definitions in ` InterfaceValidator ` and a corresponding test in ` InterfaceValidatorTest ` to improve clarity of error
updated NAME strings from " greekLowerCase " to " greekLowercase " and " turkishLowercase " across multiple filter
refactor HSSFSheet and Sheet classes for improved readability to enhance maintainability and facilitate future updates
danielwagnerhall : use DiscoverySearchRequestProcessor instead of LuceneSearchRequestProcessor to avoid backward compatibility
added removal of " America / Dawson " , " America / WhiteHorse " , and " Canada / Yukon " from the list
updated the constructor of SurfaceSyncGroup to include the name " TaskBarController " to provide a clearer representation of the taskbar controller
removed unnecessary casting of ` BsonObjectId ` to ` getId ( ) ` in ` GridFSTemplate . java ` and added a new test
updated query methods in ShadowDownloadManagerTest to query column indices and added new tests for fetching total size and bytes to improve test coverage and ensure
refactor character insertion logic in TextField . java to use a boolean variable for clarity to improve readability and maintainability of the code
added a check to return early if the target equals the target to avoid unnecessary processing when the target is the same
refactor afterSetStatements method in Lower . java and BlockLexicalContext . java to use a new afterSetStatements method in BlockLexicalContext .
added hashCode ( ) method to IntervalXYDelegate , XYSeriesCollection , and XYSeriesCollection classes to ensure consistent hash code generation across different
fix clientqueuedisruptiontest to use @ after instead of @ nightlytest
updated CloudWatchAppender and CasPersonDirectoryConfiguration classes for consistency and clarity to improve code readability and maintainability
updated serialization method from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) method in ` GsonBuilder . java
added methods to wait for the next block in HttpTestZenToken002 and WalletTestZenToken007 to ensure proper block
added length checks for ` subtag ` and modified language tag handling in ` Locale . java ` , and updated test cases in ` LocaleEnhanceTest
add a configuration option to disable SSH to the KVM Agents by default to allow users to enable or disable SSH to SSH into the KVM
removed the ` public ` access modifier from several methods in ` SchedulerWhen ` and ` SchedulerWhen ` classes to restrict access and enforce encaps
replaced ` PagerSlidingTabStrip ` with ` PagerSlidingTabStrip ` in ` EmojiKeyboard . java ` to streamline import statements
added a condition to check if the filter contains an empty string before processing to ensure that only non - empty strings are processed in the filter
corrected the spelling of " natural order " to " Natural column order " in multiple files to improve clarity and maintain consistency in naming conventions
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java ` to
updated the write method in HtmlSessionInformationsReport . java to use htmlEncodeButNotSpace for remoteAddr to ensure proper encoding of remote
updated the topic check from " / " to " smarthome / items / " in ItemStateTriggerHandler . java to ensure the correct topic is
removed unnecessary synchronized block in FastHttpDateFormat . java to improve code readability and maintainability
added thread management for file operations in Hive . java to improve performance by reducing the number of file operations during file operations
added a new ` trigger ` method to the ` WrapTimer ` class and modified the ` trigger ` method to accept a ` period ` parameter to
added support for LOCAL _ DATE and LOCAL _ TIME types in TypeStringUtils . java and corresponding tests in TypeStringUtilsTest . java to ensure compatibility with
added a verbose option to error logging in AbstractStatusReporter to enhance error handling by allowing verbose logging of message errors
bugfix : remove unbundled menu from radio tree
cloudstack - 10297 : do n ' t allow vpn connection to be esitablished between same account ' s VPN
[ flink - 2366 ] [ table - planner - blink ] fix error handling in cursorreadingtask
pdfbox : do n ' t throw an error if the pdf be encrypted
fix ( CuratorZookeeperClient ) : do n ' t wait for the child listener to be shutdown
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code organization and maintainability
added an ` id ` parameter to the ` deleteItem ` method in ` HostsList . java ` to ensure the correct ID is used for
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of the ` replaceOrderBulk ` method from ` Collection ` to ` List < BitmexPrivateOrder > ` and updated
refactor method names from ` enterDefault ` to ` enterIdentNode ` in ` FindScopeDepths ` and ` enterFunctionNode ` to
added a new class ` J9ConstantHelper ` and modified ` ObjectHash ` and ` ObjectHash ` to use it to ensure proper handling of
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify the behavior of concurrent invocations in a multi - thread
move away from transportsession . removefromroster ( ) to transportsession . removeallresources ( )
replaced direct calls to ` pd . getProperties ( ) ` with ` pd . getOverlayedProperties ( ) ` in ` MapOperator . java `
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency in formatting
added null check for ` src . extTypeCustomDesers ` before creating ` ExtensionTypeCustomDeserializers ` to avoid potential NullPointerExceptions
removed the system property ` mockserver . logLevel ` from ` Main . java ` to set the default log level to " WARN " for better
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test execution and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code
updated the ` scoreMap ` map type from ` HashMap < Float , Float > ` to ` Map < String , Float > ` and added a
updated conditional checks in U64 . java to remove unnecessary bitwise operations to simplify conditions for better readability and maintainability
added headline style to the headline style in MainViewModel . java to enhance the visual appearance of the application
added a boolean variable ` didSupportDarkText ` to check if ` didSupportDarkText ` is true before notifying changes to ensure that changes
[ hotfix ] [ checkpointrequestdecider ] make checkpointrequestdecider more robust .
updated MAX _ POOL _ SIZE and KEEP _ ALIVE _ TIME _ MILLISECONDS constants in Parallel . java and CORE _ POOL _
replaced ` filter ( ) ` with ` anyMatch ( ) ` in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java ` to simplify the
fix opencvimagefactorytest failure on window core container
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 64015
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 : do n '
added a Repeatable annotation to the Issue class to enable the handling of Issue objects in the application
updated user properties from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and updated test cases
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13389 : fix issue
[ hotfix ] [ javadocs ] fix typo in slotstatus
removed unused import of ClassUtils from ReflectionUtils . java to clean up the code and improve maintainability
replaced HashSet with LinkedHashSet for multiple sets in SslContextFactory . java to maintain insertion order for various sets
added a static variable ` systemResource ` and updated resource assignment logic in ` Resources . java ` to improve resource management by ensuring the system resource is
[ java ] add extra size for plaintext segment in streamingaeaddecryptingchannel .
added a new test method ` circuitBreakerInvalidFallbackThrowsException ` to the ` ServerMvcIntegrationTests ` class to ensure that invalid fallback
added SSL connection handling to HttpClientBuilder in AppPage . java to enhance security by ensuring SSL connections are properly managed
removed the resetBytesReadCounter ( ) method call from PerformanceTest . java to streamline the code by eliminating unnecessary method calls
added ` preferAES ` property and its getter / setter methods in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` and ` Standard
camel - 14263 : camel - opentelemetrytestsupport should use log instead of system . out . println
added a new test method ` testLoadBalancerInstanceOperations ` in ` ElbIntegrationTest . java ` to verify the correct behavior of instance operations in the
corrected the spelling of " setAlarm " to " setRingtone " in the method name from " setAlarm " to " ringtone
added error handling for file creation in DiacriticTest . java to prevent file creation failures due to invalid path exceptions
hhh - 14258 fix test failure on oracle 11 when use oracle 11
updated file handling and exception handling in TextureUnpacker . java to improve robustness by ensuring atlas images exist before processing
updated locking mechanism in AmbariManagementControllerImpl . java to use a concurrent locking mechanism to ensure thread safety during concurrent operations
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a new test method ` testResultSetShouldNotCloseStatement ` to ` TestJdbcDriver2 ` , ` HiveStatement ` , and ` Hive
fix chunkingtest to use bufferedinputstream . mark ( 0 ) instead of mark ( 0 )
added handling for pre - deleted databases in ClusterSchemaManager to ensure that pre - deleted databases are removed from the schema map to improve database
removed the " chunkedWriter " pipeline from the writeAndFlush method in Http1xUpgradeToH2CHandler . java to simplify the
updated item deletion logic in EnhancedBrowseFragment and FullDetailsFragment to use getBaseItem ( ) instead of getItemId ( ) in Enhance
refactor rulefinder to implement rulebank interface and add a new rulefinder interface to improve code organization and maintainability by encapsulating rule
added try / catch block to handle potential exceptions during cryptographic initialization to improve error handling and provide clearer feedback on internal errors
added new files TestMonomorphicObjectCall . java and Object . java to implement and test monomorphic object calls to facilitate testing of mono
replaced the method ` removeMetaDataSource ( session ) ` with ` toFront ( ) ` in ` DataBrowser ` and ` Desktop ` classes to
hbase - 24186 allow to specify the family of the timerange in the memstore .
[ hotfix ] [ runtime ] remove unused local _ state _ root directory from taskmanagerservices
[ hotfix ] [ table - planner - blink ] make altertimeseriesstatement a final field .
updated regex pattern matching in ` Condition . java ` and added unit tests in ` MatchTextConditionTest . java ` to improve regex matching accuracy and
added error handling for routingTableBuilder retrieval in HelixBrokerStarter . java to ensure robustness by preventing application crashes due to potential exceptions
[ java ] fix nullpointerexception in httpclientintroductionreason . java
use char [ ] instead of string . tostring ( ) to avoid arrayindexoutofboundsexception
server : do n ' t invalidate session if there be a recursive domain
removed the tolerance parameter from the ` toSortedListWithCounts ` and ` equals ` methods in ` Counters . java ` to simplify the
modified the ` initialize ` method to accept a ` SimulationStatus ` object instead of a ` SimulationStatus ` to improve flexibility by allowing the
[ gr - 30667 ] make llvmamd64syscallclockgettimenode return the current time instead of system . currenttime
fix typo in prettyprinter . java
added a null check for the indexToNode array before creating a new Node instance to avoid potential NullPointerExceptions when accessing the indexToNode
refactor DatagramSocket initialization and filter filtering logic in DatagramChannelImpl . java to improve code readability and maintainability by reducing duplication
updated JUnit test imports from JUnit 4 to JUnit 5 in TestQueryDNS . java to utilize the latest JUnit 5 features
added a new file ` NutchServerInfo . java ` containing configuration and running jobs to provide a structured way to manage server information related to job
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter . java to simplify attribute handling and improve code clarity
add a timestamp option to the CqlInserter and ThriftInserter classes to allow users to specify the timestamp in the database operations
updated the strength validation logic in DSAParameterGenerator . java to use BigInteger . ONE instead of BigInteger . ONE to improve code readability and maintain
updated NumberUtils and Numbers classes to use intBits instead of double and added new imports for Float64Array and Float64ArrayNative to
updated the mask check in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and validate the
added handling for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to constraint
[ hotfix ] fix checkstyle violation in remotebrokeroffsetstore
added new methods ` addTab ` and ` insertTab ` to the ` Tabs ` class and refactored the ` createTab ` method
bugfix : arrayindexoutofboundsexception : arrayindexoutofboundsexception do n ' t throw arrayindexoutofboundsexception
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder and mockenvironmentbuilder
refactor conditional checks in MavenVisitor . java to improve readability and maintainability of the code
[ ambari - 11717 ] fix test failure on linux due to plugin name change .
added a new file FormatCheckingTest . java to test class format error handling to ensure proper error reporting for invalid class names in Java processes
updated line number setting in CodeGenerator . java to use lastLineNumber instead of statement . getLineNumber ( ) to improve code readability and maintainability by
added a try - catch block around the add method call in ConfigHelper . java to handle potential exceptions during configuration retrieval
added methods to create RadioButton and Command in RadioButton . java to enhance functionality by allowing user interaction with buttons
updated the initialization of the cache in LRUCache and modified the CHUNK _ METADATA _ CACHE _ SIZE constant in MetadataQuerierBy
integration - bus : make internal . bus . internal . messagebus . internal . messagebus . internal . messagebus . internal . messagebus .
add null check for symbolicname in osgi management name strategy
[ java ] add ` ` -- usemode ' ' system property to load contrib mode .
[ flink - 24186 ] [ test ] add log for shutdown hook failure in iomanager
rename projectRoot to androidManifestPath in RobolectricTestRunner and related classes to improve clarity by using a more descriptive variable name
[ issue # 132 ] fix a bug in abstractreplyproducinghandler when a non - exist header be add .
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests interface to Arg classes and updated RustBinaryDescription , RustLibraryDescription , and RustLibraryDescription to implement HasTests to
updated the recent image placeholders in FileMessageVH . java from 120dp to 120dp to improve the visual appearance of the recent image
refactor OnExitTest . java for improved test coverage to enhance reliability and maintainability of the test cases
added onUserPreferenceChanged method to TaskbarManager to recreate the taskbar when user preference changes
added reflection - based initialization and dumping functionality for JVM VMs in HeapDump . java to enhance flexibility and maintainability of the heap
camel - 14297 : camel - jbang - add try - finally block around session . commit ( ) in mybatisproducer
[ hotfix ] [ webdriver ] add wdswitchtowindow and wdquit to the webdriver function
[ java ] remove unused variable from iteratortofor . java
added a call to set the application ' s state to UNAVAILABLE to ensure the application reflects the current state of the application
replaced assertions in ByteBufferAs - X - Buffer . java with direct position and limit calculations in Heap - X - Buffer . java and StringChar
updated the method call from ` toUri ( ) . toUri ( ) . toUri ( ) . toUri ( ) ` to ` to
added setEmpty methods to ArrayData , ArrayData , ObjectArrayData , and DeletedRangeArrayData classes to ensure proper handling of array deletion
changed enum values from package - private to public in VirtualAuthenticatorOptions . java to allow access to the enum from outside the package
updated document handling in TestMultiPhraseQuery . java to use a new Document instance instead of a new one to improve code clarity and maintainability by
fix the issue of not assign ticket if the payment proxy do n ' t support it
added a timeout thread and improved exception handling in HttpChannelState . java to ensure proper thread management and prevent illegal state exceptions during timeout operations
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to use debug logging instead of stack
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the read method to conditionally use LOCAL _ QUORUM based on the consistencyForPaxos to ensure compatibility with different Consistency
added support for " Home " model in HeosDiscoveryParticipant and added serialization handling in HeosPlayerHandler to ensure proper handling of " Home "
added a ` Wait ` field and its getter / setter methods in ` PlainSelect ` , and created a new ` Wait ` class in ` Select
refactor attribute handling in Neo4j to use AttributeController and AttributeTable for node and edge data retrieval to improve code readability and maintainability
added a null check for the ' from ' variable in the if condition to ensure that the ' from ' variable is not null before proceeding with
nifi - 11436 move rocksdb to controller . repository and deprecate rocksdbmetronome
updated the method call from ` readBoolean ` to ` getString ` in ` TableExRetriever . java ` to ensure the correct string is retrieved from the
added logging for async execution and modified conditional logic in JavascriptContext . java to improve debugging capabilities and ensure proper handling of JavaScript commands
camel - 14263 : camel - cxf mtom test fail on macos
[ iotdb - 4071 ] fix bug in loadtesttool when new cf be not set .
added Disposable interface to Texture class to enable the Texture class to be disposed to improve resource management and prevent memory leaks
updated WebAppRegistrationCustomizerImpl and related classes to use WebAppDeployerHelper instead of WebAppHelper to ensure proper handling of null paths and
ensure -- genesis - file be not specify if goquorum - genesis be enable
replace IOException with Throwable in HttpInput . java to improve error handling by using Throwable instead of IOException
added a condition to skip Thailand because the " JP " country is not " JP " in the list to prevent issues related to Thailand from being skipped
updated API response types from Wrapper to ViewPrivilegeResponseWrapper in HostService , RootServiceService , and ViewPrivilegeService to ensure consistency in response handling
updated filter equality checks in FilteredQuery . java to includeBoost ( ) and modified hashCode ( ) method to use getBoost ( ) instead of
modified the constructor signature of FileMenuFilter to improve code readability and maintain consistency in formatting
ggb - 221 add a new textediteditadvicedpanel to show the first location .
added a new file TestCMSClassUnloadingDisabledHWM . java to implement and validate CMS class unloading behavior to ensure that CMS classes
fix a crash in spongeforgeeventfactory when there be no entity in the item .
updated ` ColumnMapKeyMappingPreparedStatementSetter ` and related classes to use ` ItemPreparedStatementSetter ` instead of ` KeyMappingPreparedStatementSetter
fix compaction test by use identityqueryfilter instead of range
added error handling for null ' type ' attribute in MiniAapt . java and a corresponding test in MiniAaptTest . java to
added ` SpELJudge ` to the ` OperatorEnum ` class and created a new ` SpELJudge ` class to enhance the functionality
[ hotfix ] [ runtime ] fix checkstyle violation in localexecutionplanner
bugfix # 16234 - use system . getdefault ( ) . lookup ( ) instead of system . providers ( ) . lookup ( )
updated CertBlacklist , ConscryptCertStore , ConscryptHostnameVerifier , ConscryptHostnameVerifier , and Java8EngineSocket to
refactor attribute resolution logic in AttributeResolution9 . java and ShadowArscAssetManager9 . java for improved readability to enhance code clarity and
updated the number of source options from " 1.0 " to " 6 " in SetupHid . java to accommodate additional source options for improved performance
changed access modifier of extractMetadataColumns from private to public and added support for MetadataOnlyProjectionRewriter in PushProjectIntoTableSourceScanRule to
added sorting functionality for localized names in AboutActivity to improve code readability and maintain consistent ordering of localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a conditional check for live streaming before updating shared preferences in HomeFragment . java to ensure shared preferences are only updated when live streaming is enabled
added exception details to the MappingException message in AuditConfiguration . java to improve debugging by providing more context on the exception
[ hotfix ] [ test ] use awaitility in fileconsumerpollstrategystoponrollbacktest
updated generic type parameters in CompositeType constructors to use wildcard generics to enhance type safety and improve code clarity
added support for transports in GitClientApplication and updated RepositoryUrlPanel to use it in RepositoryUrlPanel to enhance functionality by allowing the application to
added a new ` getDelegatorName ( ) ` method to multiple input consumer classes and implemented a new ` getDelegatorName (
fix npe in changeparentpom when mavenmetadata be null
added null and disabled check for large page Support in TestLargePageUseForHeap . java to ensure proper handling of large page support in testing
cloudstack - 10223 : do n ' t migrate event if database do n ' t exist .
updated the ` getTestParameters ` method to throw an ` IOException ` and modified the ` getTestParameters ` method signature to include OS - specific
removed the requireInitialized ( ) method from ObjectStreamClass and added a new TestObjectStreamClass class to facilitate testing of ObjectStreamClass functionality and ensure proper serialization
remove unnecessary null check for datacenterinfo in discovery filter
change log level from error to warn in opentracingtracer
added a toString ( ) method to the Generator class to provide a string representation of the registered generators
refactor doquote handling in URI . java and add new test cases in Test . java to improve code clarity and ensure correct handling of special characters
added a null and empty check for resources in ClusterControllerImpl . java and a corresponding test in ClusterControllerImplTest . java to ensure that a
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 : http :
added a conditional check for Android version 5 in VertexBufferObject . java to ensure compatibility with Android versions below 5
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the code
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related logic in ` HashJoinInfo ` to include it to
added a method ` getStringDistance ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for better encapsulation
added FLAG _ ONE _ SHOT , FLAG _ IMMUTABLE , and FLAG _ IMMUTABLE constants to AndroidImplementation . java to enhance
added methods to append read column IDs in HiveFileFormatUtils and refactored related methods in HiveInputFormat to improve code organization and maintainability
replace instances of ` UPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java ` to
added a new ` DisplayTemporaryToast ( ) ` method to the ` SavedExperiments ` class to display temporary toasts to improve user
added version handling in ServiceModule and a corresponding test in ServiceModuleTest to ensure that the service ' s version is correctly set when it is null
added a new test class RawSerializationTest for Gson serialization to ensure correct functionality of Gson ' s toJson method with various input types
[ java ] rename seleniumserver to sslcertificategenerator for selenium server
updated loop structure in ExpansionViewHelper to iterate over replies instead of iterating over the list to improve code readability and ensure proper padding for replies
increased the timeout duration from 3 seconds to 60 seconds in ` ExpiringUrlCacheTests . java ` to allow more time for exception handling in
added a new test method ` testNGramFilterPayload ` in ` TestNGramFilters . java ` to verify the behavior of the NGram
refactor AclImpl class to improve code organization to enhance maintainability and readability of the code
added a new test method ` differentArraysShouldBeRandomizedWithDifferentSizes ` to ` EasyRandomTest ` for different array sizes
do n ' t swallow exception when stop vm
http : / / issues . apache . org / jira / browse / amq - 4047 - fix for http : / / issues .
refactored the logic for determining the parent of the actor and added a method to check if the actor is visible to improve code readability and
added logging for rolling - update step failure in RollingUpdateOpFactory . java to improve debugging and traceability of the rolling update process
[ hotfix ] [ table - common ] fix checkstyle violation in table - planner - blink
added handling for BadCredentialsException in DaoAuthenticationProvider and introduced a new event class for handling username not found authentication to improve error handling and provide
refactor AtMostXVerificationTest . java for improved test coverage to enhance reliability and maintainability of the test cases
updated default QTYPE from OldLuceneQParserPlugin . NAME to QParserPlugin . DEFAULT _ QTYPE across multiple files to standardize
updated SimpleDateFormat initialization to include Locale . US in WeekDateTest . java to ensure consistent formatting across different locales
added a new method ` isInitialized ( ) ` in ` ILanguageServer ` and implemented ` isInitialized ( ) ` in ` JavaLanguageServer
updated the ` idToken ` parameter from ` idToken ` to ` shouldHaveIdToken ` in ` ClientAPITokenIntegrationTest . java ` to
added ` beginTransaction ( ) ` and ` endTransaction ( ) ` methods to ` DatabaseAdapter ` and updated transaction handling in ` GncXml
replaced byte array copying with ByteArrayOutputStream for reading bytes to improve performance and memory efficiency during byte reading operations
[ hotfix ] [ runtime ] add miss @ override annotation to messagingtemplate
added a method to check if the source source file is an instance of J . CompilationUnit to provide a way to check if the source file is
added maxBufferedDocs and setRAMBufferSizeMB to Integer . MAX _ VALUE in TestIndexWriterMergePolicy . java to improve performance by reducing memory
reset the wits collection in Manager . java and add a new test for witnessCapsules in ManagerTest . java to ensure that witness
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing out - of - bounds exceptions
[ flume ] remove log4j . level from flumenode . logenvironment ( )
updated assertions in BasicAuthIntegrationTest and DaemonStream to use a multi - threaded executor in BasicAuthIntegrationTest and DaemonStream to improve test
replaced HashMap with LinkedHashMap in DependencyUtil . java to maintain insertion order for nodes
add support for internal error mapper in jersey support
refactor header validation logic in Http2TestBase . java to use a dedicated method to improve code readability and maintainability by reducing redundancy
refactor system property handling to use a switch statement for handling different Java versions to improve code readability and maintainability by using a switch statement for
updated method signatures from ` String ` to ` CharSequence ` in ` StringSubject ` , ` doesNotContain ` , and ` StringTest ` to
added new intrinsics for ` toBeInvestigated ` in ` CheckGraalIntrinsics . java ` to enhance the intrinsics for
rename IntUtilsTest to PrimUtilsTest in IntUtilsTest . java to clarify the purpose of the test class
updated the way the database connection factory is stored in the PersistenceManagerProvider to ensure compatibility with compactor configurations
refactor DeploymentOptions class to improve code readability and maintainability
updated the method signature of ` updateTextButtonWithDrawable ` to use ` Drawable . ConstantState ` instead of ` Drawable . ConstantState ` to
replaced ` ByteArrayInputStream ` with ` StringReader ` in ` XmlParser ` , ` YamlParser ` , and ` FormatPreservingReader ` classes to
added functionality to rewrite COALESCE functions in RexNodeConverter and registered it in SqlFunctionConverter to enable the conversion of coalesce function
camel - 14297 : camel - hl7 - fix test failure in hl7
use the current thread ' s class loader when generate the proxy factory .
updated constructors and constructors in DefaultDateTypeAdapters . java to ensure thread safety to enhance thread safety and prevent potential NullPointerExceptions
updated method signatures in DocumentUtil . java for consistency and clarity to improve code readability and maintainability
removed the ` newQuery ` flag from ` HttpClientRequestBase ` and updated the query parsing logic in ` HttpClientRequestBaseTest ` to streamline the
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to streamline entry filtering logic to improve code readability and maintainability by
updated log level from fatal to warn in FSHLog . java to provide more granular logging for wal requests
refactor NodeMap to a new class NodeMapIterable and implement UnsupportedOperationException to improve code readability and maintainability by encapsulating the
updated import statements and variable name from ` predicate ` to ` subPredicate ` in ` DiscoveryClientRouteDefinitionLocator . java ` to improve code clarity
added a check for non - empty fields before adding project operations in MongoRecordReader and modified the return statement in RexToMongoTranslator to ensure
added a check for empty admin list before adding it to the admin list to ensure that an empty admin list is added when no admin list is available
replaced instances of ` MultiFields . getFields ( ) ` with ` SolrIndexSearcher . getSlowAtomicReader ( ) ` in multiple classes to simplify
replace bean . toString ( ) with ObjectHelper . className ( bean ) in ConstantBeanHolder . java to improve readability and maintainability of the
updated the logic for retrieving the primitive type in GroovyParserVisitor . java to improve robustness by avoiding potential null pointer exceptions
remove hashCode ( ) and hashCode ( string ) from frameinfoqueryresults . java
[ hotfix ] fix test failure in sedablockwhenfulltest
added a new file ` package - info . java ` to the ` org . apache . lucene . core . testresources ` package to provide package
updated the calculation of ` readLen ` in ` MessageUnpacker . java ` to use ` position ` instead of ` cursor ` to ensure
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core . lang . Nullable `
added a new column ` COLUMN _ USER ` to the ` IconDB . COLUMN _ COMPONENT ` array to include the user ' s serial value
change defaultmqproducerimpl . getbackpressureforasyncsendsize ( ) to defaultmqproducer . getbackpressureforasyncsendsize ( )
add a check for classfileonly before add the whitelisted resource to the classpath element .
cloudstack - 12420 : fix baremetal foreign key bug ( # 12420 )
removed the IJava2DRenderer interface from the Java2DRenderer class and removed it from the Java2DRenderer class to simplify the code
added an ` onTearDown ` method to ` DefaultAudioSink ` to handle offload buffers when the audio track is destroyed to ensure proper handling of
refactor UpstreamCacheManager to utilize a concurrent map for managing upstream task execution to improve performance and responsiveness of the UpstreamCacheManager
refactor StreamType class to improve code readability to enhance maintainability and facilitate future updates
updated assertion message in Recording . java to include more context to improve debugging by providing more context on the expected output
updated imports and modified user authentication logic in FilestorePage and RootPage classes to enhance user experience by allowing admin access to the application
added @ ignore annotation to camel - elasticsearch - rest - camel - elasticsearch - rest
[ hotfix ] [ runtime ] fix checkstyle violation in expressioncontrolbusfactorybean
updated button texts from " leftButton " and " rightButton " to " buyWithFiat " in OfferBookChartView . java to
camel - 14284 : allow url to be match on the uri prefix in the restlet .
rename block . createnextblock and block . createnextblockwithcoinbase to block . createnextblock ( )
replaced ` @ Ignore ` with ` @ Ignore ` in ` BTreeMapJava ` and updated test cases in ` JSR166Test `
added null check for getCause ( ) before logging error messages in RuleEngineImpl . java to avoid potential NullPointerExceptions during execution
fix checkstyle issue in main . java
updated the method call from ` mFilesAll ` to ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter . java `
deleted the PlainVerifier . java file to remove unused code that is no longer needed in the project
added a check to close the system window when the action is triggered from theAltTab to ensure proper resource management and prevent potential memory leaks
added imports and modified dialog handling in DialogFragmentIT . java and OCFileListBottomSheetDialog . java to improve dialog management and ensure
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 : use utf -
added a call to the superclass ' s deinitialize method in TextField . java to ensure proper initialization of the TextField class
replaced instances of ` ObjectInputStream ` with ` TestUtilities ` in the ` testSerialization ` method in ` LogFormatTest . java ` to simplify
updated method calls from ` - 1L ` to ` previousUntilLast ` in ` LogicalGenerator ` , ` GroupByFillDataSet ` , and
added validation for array size in JAXWSExceptionBase . java to ensure valid input lengths and improve error handling for negative array sizes
[ hotfix ] [ test ] migrate ctunresolvedimporttest to junit 5
increased the join time from 10 seconds to 60 seconds in T6567415 . java to allow for more time for the thread to complete
[ hotfix ] [ test ] change default schedulingstrategyfactory default to pipelinedregionschedulingstrategyfactory by default
added ` title ` and ` getTitle ( ) ` methods to ` ShadowActivity ` , ` ShadowDialog ` , and ` ShadowToast ` classes
use logfactory instead of warn ( ) in poifilesystem . java
updated alarm handling logic in InstarHandler . java to utilize a new method for setting channel state and object code to improve code readability and
increment remove latency in mapdeletemessagetask when delete a map
updated enum syntax and added a switch statement in Option . java and Response . java to improve code readability and maintainability
updated the method to find Javac locations in CheckResourceKeys . java to utilize a new method for retrieving Java files to improve code clarity and
[ flutter ] add project name to additionalsettings for platform compatibility
added a new test class ` DeprecatedStubbingTest ` to verify the behavior of deprecated stubbing methods to ensure that the stubbing functionality behaves
updated import statements in ITBraveServletFilter . java to use javax . servlet . DispatcherType instead of org . eclipse . jetty . server
mondrian : fix typo and add unit test for vbd
[ bouncy castle ] allow rsa key exchange by default
replaced ` output _ reader ` with ` reader . close ( ) ` in multiple classes to ensure proper resource management and prevent potential memory leaks
[ sdm ] add deleteoauthserviceandaccesstoken ( ) and deleteoauthservicehandleid ( ) method to pubsub api
updated the animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to improve
[ iotdb - 4071 ] add updateregionlocationplan to configphysicalplan and update log level
added a new file FileDialogLeakTest . java that tests the finalization of the FileDialog implementation to ensure that the FileDialog implementation behaves as expected
hbase - 16424 move testopentableincoprocessor to hbase - coprocessor package
[ gr - 24186 ] fix uninterruptible annotation in trufflefeature .
[ hotfix ] [ table - common ] remove unused variable in pbcodegenrowdeserializer and pbcodegenrowserializer
updated the condition in DrillSidewaysScorer . java to check if dims [ 1 ] . disi is not null to ensure that
[ java ] add synchronization to mediasource . setnewsourceinfo ( ) .
added support for JVM and JVM version checks in Constants . java to enhance compatibility checks for JVM and Java versions
updated the ` FileReporter ` constructor to accept a ` File ` type instead of a ` String ` to ensure proper handling of null values in the
changed the condition from ` isFalse ( ) ` to ` isTrue ( ) ` in the ` getEndToEndEncryptionKeysExist ( ) ` method
added home and back navigation functionality in DirectMessageConversation . java to enhance user experience by enabling home navigation and back navigation
added new user - related methods and updated protocol version from 5 to 6 and added user retrieval logic in multiple classes to enhance security by allowing users to
added a new property ` @ EnabledIfSystemProperty ( named " amd64 | x86 _ 64 " ) ` to ` TestJdbcPluginWith
replaced the variable ` startClass ` with a variable ` originalStartClass ` in the ` notFound ` method to improve code clarity by using a
add a parameter register to jbody . getlocals ( ) and add local to jbody . getlocals ( )
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContext
[ jbrules - 2424 ] fix wrong look and feel in the common app .
updated regex pattern in AppPage . java from " V { 0 - 9 ] + " to " V { 0 - 9 ] + " to
refactor animation listener implementations in LauncherAppTransitionManagerImpl to use launcherAnimator and appIconAnimatorSet for smoother transitions to improve
updated AddressFormatException message to use version instead of base58 to improve clarity and accuracy of error reporting
updated method call from ` getExtraDataMap ( ) ` to ` newOfferPayload ( ) ` in ` EditOfferDataModel . java `
updated milestone parameters handling in TicketPage . java to use newOpenTicketsParameter based on whether the milestone is open to ensure milestone parameters are
change the battery size from 640 to 80 in the RFBattery constructor to adjust the battery size for better user experience
refactor getClusterKey and getClusterInstance methods to include clusterId and blueprintRev parameters to improve code readability and maintainability by encap
initialized ` downgradeAllowed ` to true in ` UpgradePack ` and added a test for it in ` UpgradePackTest ` to ensure that
replaced instances of ` ATTRIBUTE ` with ` ELEMENTSTART ` and ` ELEMENTSTART ` in multiple XML - related classes to ensure consistency in naming convention
add ability to load library from classloader when load from classloader .
replaced ` Collator ` with ` getAppNameComparator ( ) ` in ` AppsCustomizePagedView ` and ` LauncherModel `
updated entry handling in DefaultPlatformManager and FatJarStarter to ensure proper resource management and prevent potential memory leaks
updated method signatures and assertion messages in TestSecretKeyCredentialHandler . java for consistency to improve readability and provide clearer context in assertions
camel - 14263 : camel - route - finder should use springcamelcontext instead of applicationcontextaware , not applicationcontextaware
[ hotfix ] fix typo in metricoptions
hbase - 16286 testfulllogreconstruction fail on slow ci server
added reuseAddress flag to DatagramSocketOptions and implemented related methods to enhance flexibility in handling DatagramSocket options in the application
updated player kick logic to use getShutdownMessage ( ) instead of a hardcoded string to improve code readability and maintainability by using a
[ java ] remove deprecate Locatable interface since it be no longer use .
updated error messages in VersionInfo . java to include searchable and non - retrievable fields to improve clarity of error messages for better debugging
replaced ` equalityPredicateColumns ` with ` predicateColumns ` in ` StarTreeIndexOperator . java ` to improve clarity and consistency in naming conventions
removed unnecessary whitespace in HandshakeHandler . java for consistency to improve code readability and maintainability
updated closing brace formatting in Navigator . java to improve code readability and maintain consistency
removed ` private ` access modifier from ` DEFAULT _ PARQUET _ RECORD _ READER _ CLASS ` and added a new test class
added support for ` gte ( ) ` and ` lte ( ) ` query parameters in ` MongoQueryCreator ` and corresponding unit tests to
refactor group by clause validation in CalciteSqlParser to use a dedicated method to improve code readability and maintainability by reducing duplication
updated MappedByteBuffer and FileChannelLinesSpliterator to include a bufRefCount parameter and modified the unmap method to include it to improve memory management and ensure
replaced direct calls to ` l . getValidator ( ) ` with a variable ` validator ` in ` LdapUtils . java ` to improve code read
added a ` schedule ( ) ` method to ` CircuitBreakerImpl ` and modified the ` WAIT _ SLEEP _ TIMEOUT _
removed the ` FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS ` from the intent flags setting to simplify the intent
rename webui . submit . upload . ajax property to webui . submit . upload . progressbar
added JUnit Disabled annotation to DisplayName and DisplayName annotations in TableExtRetrieverTest . java to disable tests related to column privilege retrieval functionality
fix race condition in entitygraph . getexportedcount ( )
updated import statements in MetricsImpl . java from IntRangeUtil1 to IntRangeUtil . requireNonNegative to ensure compatibility with the latest version of
updated character encoding checks in HttpParser and added a new test for encoded headers in HttpParserTest to improve error handling and ensure correct encoding of encoded
updated the layout resource used in ConfigurePagerActivity from trends _ activity to configuration _ activity to align the activity layout with the new configuration structure
updated the log message in SLWTTextListing from " document " to " document " to improve clarity of log messages for better debugging
solr - 12028 : forceleadertest should use tlog replica ( # 12028 )
refactor Thread class to improve code readability to enhance maintainability and facilitate future updates
[ java ] force template mode in configurabletemplateresolver by default
camel - 14263 : camel - cxf - add support for xml attribute in camel - cxf
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated date formatting in ToChar . java and added SQL queries in TestFunctions . java to improve readability and maintain consistency in date formatting
added transaction and write ID validation in GenericUDTFGetSplits . java to ensure proper handling of transaction and write IDs in Hive
updated debug log messages to use ` Collections . emptyList ( ) ` instead of ` ArrayList < String > ( ) ` for null and empty collections to
add a method to check if the book path be not null before try to load it .
[ sst ] add test case for continue record in sstdeserializer .
updated the default grid column handling in AppPreferencesImpl and modified the scaling logic in ExtendedListFragment to improve code readability and maintainability by central
updated error messages in Platform . java and ComparisonFailureWithFieldsTest . java from " empty - differences in line breaks to " line contents match
added a ` waitingForKeys ` flag to ` DecoderInputBuffer ` and modified the condition in ` ClippingMediaPeriod ` and ` Clipping
updated API paths in OkexV3 . java from " api / v3 / accounts / v3 / api / v3 / accounts /
refactor conditional checks in LineUtilitiesTests . java for better readability to improve code readability and maintainability by reducing redundancy
added validation for varargs and old array syntax in JavacParser and created new classes for VarargsAndOldArraySyntax and T656963
[ java ] add thread verification for defaultdrmsession and defaultdrmsessionmanager . setplayingthread ( )
added METHOD support to VariableContext and corresponding tests in TestVariableContext to enhance functionality to handle method calls in variable contexts
added tests for invalid JSON parsing in ExperimentParserTest . java and removed the asNullableBoolean method in ExperimentJSONParser . java to ensure
[ java ] do n ' t use buffer . position ( ) instead of buffer . limit ( )
added a ` HttpClientProperties ` parameter to the ` GatewayAutoConfiguration ` class and modified ` NettyRoutingFilter ` to include ` HttpClientProperties `
replaced instances of ` NativeLinkTargetGroup ` with ` NativeLinkTarget ` in multiple files to improve clarity and consistency in the codebase
add unit test for camel - main
added support for handling RexFieldAccess in ASTConverter and RexNodeConverter to enable the conversion of ExprNodeFieldDesc to RexNode
replaced direct calls to ` QueryLogEntry . values ( ) ` with a constant ` QUERY _ LOG _ ENTRY _ VALUES ` to improve code
add proxy . noproxypredicate ( ) and proxy . noproxypredicate ( ) to proxy .
updated the handling of certificate chains in PKCS12KeyStore . java and added a new method in StoreSecretKeyTest . java to improve code
added reflection access checks and refactored methods in NativeObject , Bootstrap , and ReflectionCheckLinker classes to enhance security by ensuring proper access control
removed the public access modifier from the CollisionMap constructor in CollisionMap . java to enforce encapsulation within the package
remove @ nonnull annotation in tradewalletservice . getrawinputfromtransactioninput ( )
refactor log level handling in ConfigurationValueConverter to use a switch statement for improved readability to enhance code readability and maintainability by reducing redundancy
cloudstack - 10265 : remove region _ id from configuration server api
[ bug 60284 ] throw encrypteddocumentexception if encryption be not support for old Excel file
add extra _ image _ build _ argument to graalvm _ benchmarks . py to make sure extra _ image _ build _ argument be
removed the else block from the image visibility setting in TimeLineCursorAdapter . java to improve code readability and maintain consistent formatting
increased the scheduler timeout from 10 to 50 and adjusted sleep duration in BatchingStateChangeUploadSchedulerTest . java to improve test reliability by allowing more time
updated directory creation logic in ShadowContext and added a test for creating a named directory in ContextTest to improve code readability and ensure correct directory creation
replaced the instantiation of ` ExceptionFactoryImpl ` with ` Class . forName ( " AssertionFailedError " , " AssertionFailedError " , " "
updated the WAIT _ TIME _ MS constant from 10000 to 60000 in LauncherInstrumentation . java to allow more time for the launcher to complete
updated ConnectOAuth2RequestFactory to use wildcard imports and added a new AUD extension handling in ConnectRequestParameters to enhance flexibility and maintainability
[ hotfix ] [ kafka ] remove default value for breakonfirsterror from kafka configuration
added a new constant ` selectableItemBackground ` to the ` R . java ` class to define a background color for selected items in the application
replaced multiple specific imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and
updated the event type assignment logic in TxnSetOperation . java to ensure correct event type handling when the record is null
refactor resumingexternaldownload to use resumablefilelistener instead of resumablefilehandler
updated the package name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
fix hssfdataformat . getcellvalue ( ) and getcell ( ) method in workbook . getcell ( )
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer that be n ' t use anymore .
updated the condition for checking compressed chunk length in CompressedInputStream . java to ensure that the length check is within the maximum compressed length to improve accuracy
added stringidempotentrepository to support string idempotent processor
fix ( containerrepair ) : fix damage when vanilla use metadata .
[ mng - 4071 ] fix bug when use local repository layout in legacylocalrepositorymanager
[ hotfix ] [ runtime ] do n ' t start localtaskmanager thread if taskmanager be not initialize
added descriptions for deploying files in AbstractArtifactResolutionException . java to provide clearer information about the deploying process for users
updated ` getTemporalPath ` method to include ` mContext ` in ` FileStorageUtils . getInternalTemporalPath ` method to
added a new method ` findByEntries ` to retrieve FeedEntryStatus from a list of FeedEntries to enhance the functionality of ` FeedEntryStatusDAO
added execution logic for the VertxThread in ContextImpl . java and refactored test cases in BlockedThreadCheckerTest . java to improve
updated the ` instantiate ` method to accept a ` String ` parameter and modified the ` convertOrNull ` method to accept a ` String ` parameter to
updated Ezvcard parsing logic to handle different Android SDK versions to ensure compatibility with different Android SDK versions
refactor ` setRemoteAddress ` and ` setRemoteHostname ` methods to use ` this . remoteAddress ` instead of ` setRemoteAddress ` to
added null check for shadowClass in Robolectric . java to ensure that the shadow class is annotated with @ Implements to prevent runtime errors
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 64815 : add
added SSL exception handling tests in BasicHttpTest . java to ensure proper exception handling for SSL requests in the HTTP endpoint
[ hotfix ] [ kafka ] provide access to consumer and producer in abstractkafkaresumestrategy
removed unnecessary whitespace in PageChangeListener . java and added imports in FrameRenderer . java to improve code readability and maintainability
updated log message from " address / subject / text / text " to " from / text " in CommunicationsManager . java to correct the warning message
no effective change - add ` ` draft ' ' to ` ` draft ' ' query
http : / / issues . sun . com / bugs / 5103988 . java / issues / detail ? id = 51039
[ java ] fix code style issue in executablefactory and zipfolder
refactor EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters classes for improved organization to enhance maintainability and readability of the code
update attachfileaction to use the current working directory instead of the default one
added LoadOptionsBuilder and SchemaInfoLevelBuilder to the AccessTest class to enhance schema loading capabilities by allowing dynamic schema info level configuration
changed the package of TestLoadLegacyLibrary from ` main ` to ` test _ load _ legacy _ library ` and added a new test method for
replaced the throw statement with a null return statement in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties in ProjectProperty . java to enhance functionality by allowing dynamic configuration of prototype properties
replaced direct instantiation of ConnectionInfo with a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ javadoc ] fix typo in datastreamjob
replaced the try - with a try - with - resources statement with a try - with - resources statement to ensure proper resource management and prevent resource leak
camel - 14297 : camel - cxf should use real class instead of class . getclass ( ) in cxfendpoint
added a conditional check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure correct handling of HTTP / 2 protocol
refactor ` LambdaToMethod ` and ` ClassFileVisitor ` classes to improve clarity and functionality to enhance code readability and maintainability by reducing redundancy
updated the copular word regex pattern in CoordinationTransformer . java to correct the spelling of " SomaticalRelations . copularWord
increased the cache file size from 5000ms to 60000ms in DL4JInceptionV3Net . java to allow more time for
added setSlop ( phraseSlop ) method to mpq in QueryParser . java to enhance query performance by allowing smoother processing of phrase
updated sleep duration from 10 seconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time for mouse events
updated server configuration from 8188 to 6188 in FlumeTimelineMetricsSink , HadoopTimelineMetricsSink , and HadoopTimelineMetricsSink to
[ terasology ] add scheduleParallel ( ) method to gamescheduler and screengraalber
updated visibility logic for the compound view based on the availability of edit options to ensure the compound view is only displayed when the options are available
added a calculation for the progress value in DepthController . java to ensure that the progress value does not exceed the defined minimum value
removed the ` packetReceived ` method from ` ClientSession ` , ` ComponentSession ` , and ` Session ` classes to streamline the code by
added debug logging for authentication failures in DefaultCasDelegatingWebflowEventResolver and refactored method calls in DelegatedAuthenticationGenerateClientsAction to
added null checks for ` service ` in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy ` and ` SamlIdPMetadataUIAction `
[ pantheon ] add hidden property to pantheoncommand . enableaccountlevel permissions
added a method to not instrument the CoroutinesRoom $ Companion class in AndroidConfigurer to prevent instrumentation of the CoroutinesRoom class
removed the ` HttpCallerInfo ` parameter from the ` isSupported ` method in ` NegotiateAuthentication . java ` to simplify the method signature
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unnecessary setter methods
camel - 14265 : camel - jms - reply should use thread name instead of thread name to avoid race condition
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
pdfbox - 4071 : do n ' t close mcblock in case of tag
[ log4j2 - 281 ] add unit test for patternlayout . formatselector ( )
alexeibarantsev : allow test to run in a webdriver with Selenium rc .
rename mwthankpostresponse to mwresponse and add a new mwresponse class
replaced ` ChannelEndPoint ` with ` SocketBased ` and added a new interface ` SocketBased ` and updated ` SslConnection ` to utilize
refactor revokingStore initialization and setMaxSize method calls in Manager . java to improve code readability and maintainability by reducing redundancy
add unit tests for hql collection and timestamp retrieval in HQLTest . java to ensure correct handling of implicit joins in JPA queries
updated assertions in NonVisualRegressionTest to replace line breaks with line breaks to ensure consistent line endings across different operating systems
refactor IndexWriter and MockDirectoryWrapper to use a filesToCommit collection instead of a pending commit to improve code readability and maintainability by
changed method modifiers from ` final ` to ` @ Final ` in ` BaseError . java ` to allow the ` @ Final ` annotation to be
added validation for the ` newPercent ` value in ` ConsumeUserResourcePercentActuator ` to ensure that the ` newPercent ` value
added a condition to check if old login is displayed before showing the legacy login to ensure that the user is only shown when the old login is displayed
[ hotfix ] [ test ] rename streamnetworkthroughputbenchmarktests to streamnetworkthroughputbenchmarktest
remove useless code in editteampage . setresponsepage
updated debug log message from " error with cred file " to " error initializing plugin credentials " to improve clarity of error messages for better debugging
added exception handling for closing the server socket channel in ConnectionManager . java to ensure proper resource management and prevent potential memory leaks
refactor Rocket class to improve code organization to enhance maintainability and readability of the code
added a method ` createDynPartSpec ` to handle dynamic partition specification creation to improve code readability and maintainability by reducing duplication
refactored stringtemplate . stringtemplate . getroundhalfupfactor ( ) and stringtemplate . stringtemplate . stringtemplate . stringtemplate .
added a ` visitDirectory ` method to ` JarDirectoryStep ` and corresponding tests in ` DirectoryTraversal ` and ` DirectoryTraversal ` classes to ensure
added a new file ` JWKSetEditor . java ` that uses ` JWKSet ` to provide a mechanism for setting a JWK set
refactored ` finish ` methods in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to use ` Pending
do n ' t call method . resolveparameterklasses ( ) with @ cached annotation
changed the default value of fetcher . threads . per . host . by . ip from true to false to disable the fetcher threads per host
removed unnecessary conditional checks for queryTimeout in StatementUtil . java to simplify the condition for better readability and maintainability
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to ensure proper handling of target
refactor ReplicaPosition class to improve code organization to enhance maintainability and readability of the code
[ cloudstack - 10225 ] add initial delay for network usage stats update task .
updated interpolator settings in QuickstepAtomicAnimationFactory , QuickstepAtomicAnimationFactory , AllAppsTransitionController , and AllAppsTransitionController to
updated swipe height calculation in Background . java to adjust the swipe size based on the display density
added a new module ` org . eclipse . jetty . http3 . server ` and updated the ` FillInterest ` initialization in multiple Java files to
refactor jsontype to use static final string instead of hardcoded string
removed unnecessary conditional checks for null context in ResourceResolverBean . java to simplify code and improve readability
[ hotfix ] [ checkpoint ] make executioncheckpointingoptions use default value instead of default value .
updated InnerClassesTable to use Element instead of TypeElement to improve type safety and ensure correct handling of inner class references in package annotations
updated command string formatting in TimestampCheck . java to improve readability and maintain consistency in command construction
replaced ` FluentIterable ` with ` Stream ` for collecting files to improve code readability and leverage modern Java features
fix ( service ) : add register parameter to serviceconfig . getregister ( )
do n ' t call endallsessions when security otr mode be disabled
added outline size and transparency properties to NodeLabelRenderer and updated renderProcessing methods to include outline size and transparency to enhance rendering flexibility by allowing customizable
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added a new boolean variable ` true ` to the ` Win32FontManager ` class to enhance font management functionality
added a null check for the variable ' v ' and set the cursor in TreeVisitor . java to prevent potential NullPointerException when ' v ' is
add errorhandlingpolicy to jdtbatchcompiler when there be no classpath
added contentAlignmentPoint and textAnchor properties to LabelBlock and its associated getter and setter methods to enhance the label rendering capabilities by allowing dynamic alignment of
refactor Class and Parameter classes for improved code organization to enhance maintainability and readability of the code
refactor IndexReader class to improve code readability to enhance maintainability and readability of the code
[ java ] make networkinterface . isloopback return a boolean instead of a boolean .
updated the ` fromRfc1123FormattedDate ` method to accept a ` Locale . US ` parameter and modified the ` fromRfc1
updated the download message to include an extension for PDF files to ensure the download functionality works correctly for PDF files
nifi - 11448 - add output _ no - hits property to jsonqueryelasticqueryelasticsearch to control the output of the flow
api : remove the aggregationratio parameter from the updatediskusage method and remove the aggregationratio parameter
[ java ] add try / catch around switch statement in election . java
[ hz - 2474 ] remove unnecessary call to close ( ) in readfilesp and streamfilesp
refactored the logic for determining the skipWidget variable in PageChangeListener . java to improve readability and maintainability of the code
bug # 44536 - add iswriteprotected ( ) method to workbook and hssfworkbook
added error handling for unregisterInvalidatedSessions ( ) in PluginMonitoringFilter . java to improve robustness by logging exceptions during session validation
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the status message from " reachable = false " to " reachable " in HueLightHandler . java to clarify that the status is not reachable
add a loading flag to the fmlclienthandler so that it can be load .
replace " mil [ ] mil [ ] " with " [ unit . thousands " in UI . java and BlockInventoryFragment . java to
updated MessagePackParser to handle BYTES , STRING , and added a new BinKeyPojo class with a test for reading strings as binary to improve
added parameterized test cases for query parsing with reserved words as identifiers in HQL and JpqlQueryTransformerTests to ensure correct handling of reserved words
added unit tests for HashMap serialization , deserialization , and deserialization in MapTest . java to ensure correct handling of nested maps in JSON serialization and deserialization
[ geot - 5296 ] fix geometry . getposition ( x2 , y2 , x2 , y2 , y2 )
updated sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to use SortingOrderDialogFragment instead of SORT _ ORDER _ DIALOG _
do n ' t try to find the testplan if there be no plan
updated method names from " dbmsName " , " schemaName " , " schemaName " , " schemaName " , " schemaName "
added null check for argIdent before adding it to parameters to prevent potential NullPointerExceptions when argIdent is null
camel - 14263 : camel - jetty - http : use scf . getprotocol ( ) instead of ssl - http / 1.1
set displayvolume to true in volumeVO to ensure that displayVolume is set to true to enable display volume functionality
updated the ` version ` method to accept a boolean parameter and modified the ` version ` method to accept a ` boolean full ` parameter to improve flexibility
updated the logic in ChangeLogParameters to improve the handling of global change log parameters to enhance the robustness of the change log processing logic
changed log level from warn to debug in JtaTransactionManager . java to improve logging granularity for better debugging
hhh - 14288 skip test that cause exception during formatting of the sql string
refactor socket timeout handling in Connection . java to improve readability and maintainability of the code
updated size calculations in multiple fragments to use ` MainActivity ` instead of ` mActionBarSize ` to improve code readability and maintainability by using
updated the CHA option key from false to true in EspressoOptions . java , DefaultClassHierarchyOracle . java , and DefaultClass
added debug log message to track the context classloader of the thread in ActiveMQResourceAdapter to improve traceability of thread context handling
refactor JodaTimeRangeRandomizersTest to use a wildcard import and simplify the test method signatures to improve code readability and maintainability by
added conditional logic to redirect entities based on servlet version to ensure compatibility with different JDK versions and improve resource management
fix ( kubernetes - api ) : add isnodeready ( ) , isnodeready ( ) , isnodeready ( ) , isnode
updated loops from liveEndpoints to handler endpoints in StorageProxy . java to use handler endpoints instead of liveEndpoints
added a null and empty check for creationStatements before proceeding to prevent potential NullPointerExceptions during execution
updated RPC version from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version of the RPC service
added security checks for package access checks in ObjectStreamClass and ObjectStreamField classes to enhance security by preventing potential NullPointerExceptions during package access checks
updated methods in Utils . java and XLCDCommunicator . java to improve code readability and encapsulation to enhance maintainability and
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 - add miss tag
updated the test suite name from ` MockBrowserTest ` to ` MockBrowserTest ` to ensure consistency in test naming conventions
updated default level from OFF to ERROR in Launcher . java to provide a more granular logging level for better user experience
changed member variables from non - final to final in IconNormalizer . java to enforce immutability and improve code readability
added a boolean flag ` firstCallPrepareDo ` to the ` PrepareInterceptor ` class and modified prefix invocation logic to conditionally invoke prefix methods based
refactor ` showWorkspaceAndExitOverviewMode ` and ` hideAppsCustomize ` methods for improved clarity and functionality to enhance code readability
replaced instances of ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature . java ` and ` Auth
add ignoreinvisibleassociations parameter to the incomingassociations method to control the visibility of the association
cloudstack - 10225 : remove unused private ip from pods when remove a pod
updated the relative URL format in ProfileServlet . java to include a new documentation for the profiler on Linux 4 . x to improve clarity and provide
fix : add requiredreffieldmodel and add requiredreffieldmodel in modelresolver
updated class names from ` CasCoreMultifactorAuthenticationAutoConfiguration ` to ` CasCoreConfigurationWatchAutoConfiguration ` across multiple files to improve
refactor FeatureFlags class to improve code organization to enhance maintainability and readability of the code
updated number of hue IDs from 23 to 17 in ConfigStore . java and added a new test for it in CommonSetup . java to improve
added image rendering logic in TimeLineCursorAdapter , TimelineLineCursorAdapter , and TimeLineArrayAdapter to ensure proper handling of image rendering in
updated the configuration message in HiveConf . java to clarify that compaction on insert - only tables should always run via queries regardless of the value of
added a condition to check if the storage path is not null before checking if the waiting to send is down to ensure that the storage path is not
replaced ` resizeThreshold < = ` with ` checkResize ( ) ` across multiple classes to improve code readability and maintainability by encaps
refactor LDAPConnectionService to improve connection handling to enhance performance and maintainability of LDAP connection management
[ hotfix ] [ table - common ] deprecate non - required field in aggregatedefinition
added debug logging statements in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to enhance debugging capabilities by providing clearer insights
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoftAssertions . java to
updated test assertions from ` hits . length ( ) ` to ` hits2 ` and ` hits3 ` in ` TestMultiSearcher . java `
added a new file ` LucenePackage . java ` that implements a package to provide a way to construct the Lucene package using the Lucene package
corrected the calculation of sizeInBytes from ` sizeInBytes ` to ` sizeInBytes ` in ` RAMDirectory . java ` to
[ hotfix ] [ table - planner - blink ] add estimate ( ) method to filter .
added a null check for the drawerToggle before creating a ValueAnimator instance to prevent potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to convertToAuthentication method to suppress warnings for unused parameters in the method
added functionality to scan modules based on classloaders and class loaders in the Scanner class to enhance the functionality of the scanner by allowing the scanner to
[ msbib ] fix export format test for corporate field
added a method to cancel the core recovery in CoreContainer to ensure proper cleanup of core states when ZooKeeper is aware of the core
replaced ` System . currentTimeMillis ( ) ` with ` System . nanoTime ( ) ` and added a new method ` currentTimeMillis ( ) ` to
removed debug print statements from RepoEditView . java to simplify code and improve readability
updated error messages in PGProperty . java for consistency and clarity to enhance user understanding of startup messages and improve code readability
added trustResolver , roleHierarchy , and permissionEvaluator to SecurityEvaluationContextExtension and updated the root object creation in SecurityEvaluationContextExtensionTests to enhance
added a condition to set exponentSize to primeSize when it is zero to ensure exponentSize is correctly set to primeSize when it is zero
replaced direct instantiation of ` File ` with a method call to ` FileStorageUtils . getUsableSpace ` to improve code readability and
replaced the delegate . combine method with a for - each loop in DistinctSqlAggregation . java and added a new test method in DistinctSql
added a new test method ` postLoginActivities _ post _ login _ activities _ for _ user _ on _ successful _ authentication ` to verify that
allow extractor spanishstrippedverb to accept a path instead of a static field .
removed unnecessary type checks in CharArraySet . java and added a new test method in TestCharArraySet . java to simplify code and improve readability
updated error messages in MuxerWrapper . java to use track type checks instead of audio checks to improve clarity of error reporting for unsupported track formats
updated ` JsBundleGenrule ` to use ` AndroidPackageable ` instead of ` JsBundleAndroid ` to simplify the code and improve
added UTF - 8 character encoding settings and refactored string indexing logic in StringDictionary and StringDictionary classes to improve character encoding handling and ensure
updated case name from " Logical Analyzer " to " Logic Analyzer " in InstrumentsFragment . java to improve clarity and consistency in
added instanceClassName and instanceClass variables to AbstractVector . java to ensure that the instance class is only instantiated if it matches the class name
removed syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unnecessary synchronization
refactor : fix typo in contribution question description
added TestLoggingExtension import and annotation to DiagramRendererTest . java to enhance logging capabilities for test output
renamed the method ` findProperty ` to ` mapUnderscoreToCamelCaseMapping ` across multiple classes to improve clarity and consistency in property naming conventions
added VIOMI _ WATERHEATERHEATERHEATER _ E1 device to MiIoDevices . java to support
replace calls to ` getSslSessionData ( ) ` with ` sslSessionData . getSslSessionData ( ) ` in ` SecureRequestCustomizer
added a new file ` CreateNewSpreadsheet . java ` to demonstrate the use of XSSFWorkbook and HSSFPatriarch ' s
changed the type of ` ttl ` and ` timeToLive ` from ` Duration ` to ` long ` in ` CacheProperties ` and ` Redis
updated CONTENT _ URI from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper , LauncherModel , and 
updated the version of the testCompile group from ' 2.0 14.0 ' to ' 2.0 27.2 ' in SwaggerResolveTest . java
replaced ` lucidaFontName ` with ` this ` in ` SunFontManager . java ` to ensure thread safety when accessing shared resources
updated conditional check in DocClassUtil . java to include the ' < ' character to ensure proper handling of spaces in input validation
removed unnecessary string . format call from the workspace scroll format string to simplify the code and improve readability
added import for liquibase ' s Scope and logged a message when no validation errors are found to improve user experience by providing feedback when no validation errors are
updated imports in IntegrationTestContextLoader . java and added a method to configure web resources in IntegrationTestContextLoader . java to improve resource management
updated scroll handling logic in Component and Container classes to improve scrolling behavior and ensure proper handling of wheel movement events
updated conditional check for UUID type in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated ` StatsService ` and ` DefaultStatsService ` to use ` String ` instead of ` Long
updated string replacement logic in CellContentConverter . java to ensure correct formatting of string values in the conversion process
updated regex patterns in SeleneseTestCase . java to use newlines instead of newlines to improve accuracy of glob matching results
[ hotfix ] [ runtime ] fix typo in mondrianproperties javadoc
added stack trace printing functionality in ProcessTools . java and modified test cases in CustomLauncherTest . java and CustomLauncherTest . java to improve debugging
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the code by eliminating unnecessary test cases
added a conditional check to ensure the storeType is only converted if it has a slot to avoid unnecessary conversions when the slot is present
added a conditional check for ` nextLoadPosition ` in ` ContainerMediaChunk . java ` , ` InitializationChunk . java ` , and `
updated imports and refactored IndexWriter initialization in BaseLockFactoryTestCase . java to use PrintStreamInfoStream and PrintStreamInfoStream to improve code
tika - 132 : add support for dynamic service loader in tika - config
updated import statements and modified import statements in DocLint . java and DocLintTester . java to use diamond operator to improve code readability and maintain
added a new constant ` IMPORT _ CMD ` to the ` DataImportHandler ` and modified the conditional check in ` DataImportHandler `
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest ` and modified the condition in ` Change
removed unused import of Log in JettyService . java to clean up the code and improve maintainability
updated the ` checkItemPlacement ` method to include a ` ArrayList < Long > workspaceScreens ` parameter and modified the ` checkItemPlacement `
added a KillSwitchServlet to Jetty7AppServer and created a new KillSwitchServlet to handle JVM termination to improve user experience by providing
[ hotfix ] fix npe in realtime segment data manager .
added a check for Windows operating system display names in the Tests class to ensure compatibility with Teredo operating systems
do n ' t show error dialog when add contact dialog be not register
refactor registration of USER _ DETAILS _ SERVICE _ FACTORY to use a new bean component to improve code readability and maintainability by
updated the drawBitmap method to use a null parameter instead of a hardcoded value to ensure correct rendering of bitmaps in the rendering process
updated date format from " yymmdd " to " yymmdd " in MeitrackProtocolDecoder and TotemDecoder classes to ensure correct
changed method visibility of ` getFontPath ` and ` getPlatformFontPath ` in ` SunFontManager ` and ` X11FontManager ` to
added @ Deprecated annotations to EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
[ hotfix ] [ test ] catch executionexception in clientmapstoretest and clientmapstoretest
add option to keep empty sentence
updated the ` createArtifactSubdirectory ` method to return a boolean instead of void and modified the ` createArtifactSubdirectory ` method to return a
replaced the use of ` IDELazyTreeLoader ` with ` JavaCompilerService . NO _ MODULE _ COMPILER ` across multiple files to
[ java ] avoid npe in directagentattache when resource return null
modified the ` sendEmail ` method to throw a ` MessagingException ` instead of throwing a ` MessagingException ` to simplify the email sending process by
add a new API annotation and check for null values in PipeItemsObsidian . java to enhance API functionality and prevent potential NullPointerExceptions
updated method signatures in DateFormatEvaluator and FileListEntityProcessor to use Locale . ROOT instead of TimeZone . getTimeZone ( ) to improve code readability and
added a boolean field ` includeDecals ` to the ` StorageOptions ` class and its getter / setter methods to control the inclusion of dec
added a null parameter to the generateDocumentation method in Liquibase and modified the getImplementedDatabases method signature in LiquibaseTest to
updated HiveProtoLoggingHook to include performance queue name and modified test cases in TestHiveProtoLoggingHook and TestHiveProtoLoggingHook to
corrected a typo in the log message from " Begining with Solr 5 . 0 " to " Beginning with Solr 5 . 0 "
updated output format in ignoreRecordAttribute . java to use MAJOR _ VERSION instead of 58 . 65535 to ensure compatibility with different Java versions
added a new test class LdapPasswordAuthenticationTest for LDAP user authentication to ensure proper functionality and validation of LDAP user attributes in the application
replaced OrcInputFormat with BasicStatsNoJobTask in TaskCompiler . java to utilize BasicStatsNoJobTask instead of OrcInputFormat to
add support for save / restore event project and editor in reload mode
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
fix ( kubernetes - client ) : do n ' t throw terminalexception when start without reconnecting
added support for dynamic number columns in EdgeDataTable , NodeDataTable , and EdgeDataTable classes to ensure proper handling of dynamic numbers in data
added null checks for the resolved group artifact version and plugins in RawPom . java to enhance code robustness by ensuring non - null values are
added null check for ` apiInfo ` in ` V2HttpCall . java ` to prevent potential NullPointerException when ` apiInfo ` is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added debug logging for shader loading and deletion in PhotoPanel . java and FlameRenderer . java to enhance debugging capabilities and improve resource management
[ gr - 24335 ] fix the issue of ignoremaxs and ignoremaxlocals ( ) not work properly .
updated the condition for handling newline characters in CSSParser . java to ensure proper handling of line endings to prevent index out of bounds errors
added a new property ` isDecorated ` to the ` UIServiceImpl ` class and set the default look and feel based on the look and feel
removed unnecessary ' this ' keyword from the SQL query in HostRoleCommandDAO . java to simplify the code and improve readability
updated test constants from " F2 _ UNKNOWN " to " F6 _ TRANSPONDER _ TEST _ COMMAND " in LJ
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve code readability and maintainability by reducing duplication
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` in ` ColorsActivity . java ` to align
refactor String class methods for improved readability to enhance maintainability and ease of understanding for future developers
removed unused logger imports from multiple classes to streamline code and improve maintainability by eliminating unnecessary dependencies
added a method to retrieve globals from the MapGlobalResolver class to enhance functionality by providing access to globals from the map
added assertions to validate the behavior of the sendcoin method in MultiSign34 . java to ensure that the sendcoin method behaves as expected for
test : migrate cufiltertest to junit 5 ( # 4447 )
updated classpath appending logic to use a configurable path separator to ensure consistent classpath formatting across different operating systems
removed the static modifier from the augmentSuccessViewModelObjects method in AbstractServiceValidateController . java to allow access to the method from other classes
added assertions for field presence in metamodel classes in InheritanceTest . java and updated field retrieval method in TestUtil . java to enhance test coverage
removed the ' conf ' parameter from Outlink instantiation in multiple parser classes to simplify code by eliminating unnecessary parameters
removed the ` LexicalContext ` parameter from multiple methods to simplify method signatures and improve readability by eliminating unnecessary parameters
added a method to remove unused imports and modified the return statement in UseLambdaForFunctionalInterface . java to improve code clarity and ensure proper
removed the appendClassSelector method from the method call in TestNGAntTask . java to simplify the file set creation process by removing unnecessary appendClass
added a check for the root input type in HiveCardinalityPreservingJoinOptimization . java to ensure compatibility with aggregate input handling
add pool to registryevent so that it can be use from the active registry .
updated variable assignments for x3 and y3 in Intersector . java to improve code readability and maintainability
added default methods for ` sbeDecodedLength ` , ` sbeLimit ` , and ` sbeLimit ` in ` MessageDecoderF
updated ElasticsearchContainerTest . java to use the latest ELASTICSEARCH version and added a new test method for restClientClusterHealth to ensure compatibility
change peermessage . parse ( ) to use bytebuffer . copy ( ) instead of array . copy ( )
[ ambari - 24335 ] [ ambari - 24336 ] [ ambari - 24213 ] [ g
camel - 14284 : camel - ftp - remove unused setconfiguration method from camel - ftp
[ zeppelin - 4071 ] fix the issue of fetch dependency in zeppelin
modified the ` newLocal ` method to handle reserved variable declarations and added a new test class ` NoLocalsMustBeReservedForDCEed
added basic constraints check in ForwardBuilder and created a new file BuildEEBasicConstraints . java for certificate validation to ensure proper handling of basic constraints and
added initafterfirstdbconnection ( ) method to jdbcpostgresqldao . initafterfirstdbconnection ( )
added a maximum message size limit in SimpleEchoClient and added a minimum buffer size check in AbstractWebSocketConnection to ensure that WebSocket requests do not exceed
replaced the undeleteAll flag with pendingDeleteCount in SegmentReader . java and added a new test for it in TestIndexReader . java to
added null check for ` scopes ` in ` ClientRegistration ` and updated test cases in ` ClientRegistrationTests ` and ` ClientRegistrationTests ` to
added null check for orderBy before adding them to the expression to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] fix checkstyle violation in clusterentrypointtest
cloudstack - 10225 : do n ' t try to delete vms that do n ' t exist
added debug logging for initHiveLog4jMessage in HiveServer2 . java to improve traceability of log4j initialization process
added a check for empty tasks before proceeding with asset loading to prevent potential NullPointerExceptions when tasks are empty
change the return type of deletenode method from void to boolean to make the method return a boolean instead of void
[ ds - 4071 ] fix nullpointerexception when search for an entity with type ' id ' and ' id '
added null checks for ` resultString ` in ` Code128Reader ` , ` Code39Reader ` , and ` FalsePositivesBlackBoxTestCase
replaced TreeSet with LinkedHashSet in SSLContextImpl . java and SystemPropCipherSuitesOrder . java to ensure consistent iteration order of cipher suites
updated character validation logic in Escaper . java and modified test cases in InternationalizationTest . java to improve character handling and ensure correct validation of character
refactor SqlSource and SqlProviderTest classes to use StringBuilder instead of String for better type safety to enhance robustness and prevent potential ClassCastExceptions
updated import statements and added null checks for aliasChildren in InternalMNode . java to enhance robustness and prevent potential NullPointerExceptions
added a method ` getLayoutTransitionOffsetForPage ` to the ` PagedView ` class and updated the calculation of ` scrollDelta ` in `
renamed variable ` synthetic ` to ` pruned ` for clarity and consistency to improve code readability and maintainability by using more descriptive variable
added setAccessible ( true ) method to WidgetInterceptor . java to ensure that the method is accessible during reflection
added a check for the presence of " database . server . id " in the field configuration to ensure that the field is only set when the database
updated AppleWebKit version from " rv : 36 " to " Windows NT 100.0 " in AbstractRipper . java to ensure compatibility with
added a menu item to browse the server ' s host in BasicSystemUtils . java to enhance user interaction by allowing users to access the server '
added a new constant ` actualValueName ` and updated related statements in ` HandleGetter . java ` to improve code readability and maintainability by
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by handling potential ArrayIndexOutOfBoundsExceptions
[ hotfix ] [ runtime ] fix log message in queue and filecheckpointio
do n ' t call avatar postload before avatar post load to avoid null pointer
updated Docker image format in PortForwardingContainer . java for improved readability to enhance clarity and maintainability of the code
added system . gc ( ) method to force an initial full - gc ( ) in ThresholdTest . java to ensure proper garbage collection of the
updated log handling logic in StdErrLog and added debug assertions in StdErrLogTest to improve logging accuracy and ensure correct logging behavior
fixed - rremoteservice . getremoteserivce ( ) method be not use in redissonclient . getremoteserivce
added methods to check if the button is selected in the MultiButton class to enhance functionality to control the selection of buttons in the user interface
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to align the playback functionality with the latest
remove unnecessary whitespace in BrokerController . java to improve code readability and maintain consistency
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection instead of ReactiveRedisConnection to ensure proper resource management and prevent potential memory leaks
refactor color handling in ProgramGridCell and Utils classes to utilize a new method for setting background and theme colors to improve code readability and
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and
removed duplicate registration of type adapters in ToolingApiLauncher . java to streamline type adapter registration process for better maintainability
updated test parameters in TestPayloadCheckQuery . java to ensure consistency in test coverage for payload validation
refactor ConsoleReader to streamline string handling and add a test for readlineWithMask in ConsoleReaderTest to improve code readability and ensure
added user handling in BaseCommand . java to display user information to improve user feedback during command execution
rename modulesupport to package org . graalvm . compiler . api . test
[ hotfix ] [ test ] remove unused parameter from slotsharinggroup constructor
updated the condition for creating VersionSpecific instances in StreamExInternals . java and modified the hasDropWhile variable in StreamExTest . java to
updated file paths from " data / wheel . png " to " data / sys . png " in DecalTest , MusicTest , and updated
refactor the registration and unregistering of the system dialogs receiver in Launcher . java to improve code readability and maintainability
updated import statement for Cluster class in HostsRemovedEvent . java to improve code readability and maintain consistency
updated the ` reuseRefreshToken ` variable and added ` allowIntrospection ` property to ` ClientDetailsEntity ` , modified client introspection handling in ` 
replace direct writing of session attributes with HTML encoding in HtmlSessionInformationsReport . java to ensure proper rendering of session attributes with HTML encoding
updated link references in Query . java to include PhrasePrefixQuery and SpanQuery links to improve documentation clarity and maintain consistency in link structure
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter . java ` and ` CommentsParser
refactor ` NoValueOfOnStringType ` to use ` getCursor ( ) . firstEnclosing ( ) ` instead of ` isLiteralString
updated method signatures in AbstractAssert , Assert , DateAssert , and Descriptable classes to use generics instead of generics to enhance type safety
updated the ` ThrowingFunction ` interface to use ` < T > ` instead of ` Object ` in ` JwtPlugin ` and ` 
refactored the ` getUploaderBehaviour ` method to use ` preferences ` instead of ` PreferenceManager ` to improve code modularity and
fix : check for final field before initialize final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method for BitmapDrawable to improve compatibility with Robolectric ' s functionality
updated method names from ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to clarify the purpose
updated the page indicator resource from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to reflect the current page indicator
added a new variable ` reinvocations ` and updated related log messages in ` BasicInvocation . java ` to track the number of reinvocations
updated the calculation of topPadding to use innerHeight instead of getHeight ( ) to ensure correct positioning of the top padding based on the inner height
added a break statement to the switch statement in Recognize . java to improve control flow and prevent fall - through behavior
added HapticFeedbackConstants imports and modified touch event handling in Workspace , FolderNameEditText , and PopupContainerWithArrow classes to enhance
added support for text formulas in ExcelBatchReader . java and created a new test for text formulas in TestExcelFormat . java to ensure
pmd : add test for anonymous inner class assignment in immutablefield
added a userAgent field to CommaFeedConfiguration and modified the userAgent assignment logic in HttpGetter to ensure proper user agent retrieval based on application settings
updated @ XmlAttribute annotation in AvroDataFormat , BarcodeDataFormat , and Base64DataFormat classes to ensure required attributes are provided for
change log level from info to debug for file not found to improve logging granularity for better debugging
renamed the QueueTest class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use getUniqueID method to ensure compatibility with newer Bukkit versions and improve error handling
updated logging messages and error handling in DefaultRoutesCollector . java to improve clarity and functionality of route discovery process
add a vertexcolor option to pshape3d to allow customization of color .
updated ` SchemaDotFormatter ` to include ` isPkColumnFiltered ` as a parameter and modified related methods in ` DiagramRendererOptionsTest `
replaced Shadow . extract with Shadow . getValues in ShadowMotionEvent . java to simplify code by eliminating unnecessary shadow extraction
changed package structure for MetaRules from ` com . facebook . parser . api ` to ` com . facebook . buck . parser ` to improve organization
refactor class retrieval logic in GroovyEngine . java to simplify code and improve readability to enhance maintainability and reduce boilerplate code
[ hawtio - plugin ] move plugin context listener to branding . plugin
removed unnecessary print statements in NativeCodeGenerator . java to clean up the code and improve readability
replaced calls to updateMotors ( ) with fireChangeEvent ( ) in FlightConfiguration . java to streamline event handling by using fireChangeEvent ( )
added unit tests for expected and expected exceptions in ThrowableAssert _ hasCause _ Test . java to improve test coverage and ensure correct exception handling in assertions
remove unused variable ` flattenName ` and ` pack ` from ` AutomaticDependencies . java ` to streamline code and improve readability by eliminating
rename ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to clarify the purpose of the variable '
[ firefox ] add test for setting profile in firefox option .
camel - 14263 : camel - managed - add description property to camel - core
refactor JavacTreeMaker class implementation to improve code readability and maintainability
added weight setting to the edge in ImporterCSV . java to ensure the edge ' s weight is properly set
fix ( core ) : do n ' t divide tariff cost per month in current month
updated SQL queries to use ` adsrc ` instead of ` null ` for column default values in ` DatabaseMetaData ` and ` DatabaseMetaData ` to
added null check for binarized sentences in SentimentAnnotator to ensure that Binarized sentences are not built by the parser
added string concatenation for username , password , and authorities in User . java to improve readability and debugging of user information
replaced the method ` extractBodyAsString ` with a null check for ` message . getBody ( ) ` in ` MessageHelper . java ` to improve
[ hotfix ] [ runtime ] fix typo in taskdeploymentdescriptorfactory . fromexecution ( )
update rosteraccess to use groupmanager . getowner ( ) instead of subscriber . getsubjid
added a reference to " maven . test . classpath " in AbstractJRubyMojo . java and removed unnecessary suppress warnings in CucumberMojo .
refactor MethodHandleImpl and MethodHandlesTest to improve type handling and add a new user method test in MethodHandlesTest to enhance code clarity and ensure
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , CommonGramsQueryFilterFactory , AnalysisSPILoader
updated width and height checks from ` > > ` to ` ! = ` in ` URLImage . java ` to ensure that dimensions are not equal
added a condition to check if the name starts with " META - INF / " before appending it to the list to ensure that the package
added a final modifier to the createImageToFileSystem and createImageToStorage methods in ImageDownloadService . java to ensure that background tasks are only
updated assertions in StackWalkerTest . java to correct expected number of values based on version check to ensure the test accurately reflects the expected number of values
changed the visibility of the addViewportJob method from protected to public to allow access to the method from other classes
[ hotfix ] remove partitions parameter from simplewordcount
removed server restart and checkRunning methods from TestDatabase . java to streamline server startup and check execution flow
added null and empty checks for block and empty block in NodePathsConvertOperator and SchemaQueryMergeOperator to ensure robust handling of null or empty block
add harvestingtime ( ) method to the service . gui . gui . callinfoframe . gethierarchytime ( ) .
updated font sizes for sprite batch drawing in ParticleEditor . java to improve rendering accuracy by allowing more time for sprite batch rendering
added Hadoop environment configuration handling in UpgradeCatalog240 . java and updated related test cases in UpgradeCatalog240Test . java to
added import for Color and set background color to 0 in SvgViewerFactory . java to ensure proper background color configuration for SVG rendering
removed ` minSdk = M ` from ` ShadowKeyguardManagerTest ` and ` ShadowKeyguardManager ` to streamline code by eliminating unnecessary
updated the ` containsExactly ` method to accept a ` varargs ` parameter instead of a ` accumulate ` to simplify the method signature and improve
updated Bucket4jFilterFunctions to use capacity and refillGreedy instead of simple and added a check for non - empty keys to
added comments to GermanAnalyzer , WordlistLoader , and WordlistLoader classes to improve code readability and maintainability
updated the generation logic to accept a set of hooks in multiple classes to ensure proper handling of built - in hooks during query execution
added error handling for NoClassDefFoundError in REngine . java to ensure proper handling of NoClassDefFoundError during execution
replaced ` Span . class ` with ` SpanAndScope ` in ` TraceWebFilter ` and ` TraceWebFluxTests ` to improve
updated exception handling in AbstractUpdateCommandStep to check for null cause before setting the exception message to improve robustness by avoiding potential NullPointerExceptions
updated SolrServerException constructor to include base URL as a parameter to improve exception handling by ensuring the correct base URL is used
updated the landscape setting logic in HSSFPrintSetup . java to check if the print setup record is not empty to ensure that the print setup
added a null check for the ' o ' variable in JavaVoidObjectInspector to prevent potential NullPointerException when ' o ' is null
added validation for argument names in ArgDesc . java to ensure valid argument names are processed and prevent runtime errors
added background location listener handling for location updates in AndroidLocationPlayServiceManager to improve location management by allowing customizable background location listeners
updated the condition for primitiveType from ' ! ' to ' = = ' in MeshBuilder . java to ensure correct handling of primitive types
trufflestring : do n ' t check the length of a byte array in the toindexablenode ( ) method .
added a method to set the command list in the ComboBox to ensure the command list is correctly configured for the combo box
nifi - 12626 : fix a bug where ` ` . pem ' ' do n ' t escape the filename in tlsclientmanager .
updated zkcli command lines to use localhost instead of hardcoded values to ensure consistent configuration across different environments
updated comparisons to use ` getStatusDetail ( ) ` instead of ` equals ( other . progress ) ` for consistency to improve code readability and
added a conditional check for remoteGrpcStatus before posting the event in LocalFallbackStrategy . java to ensure that the event is only sent when the remote
refactor method signatures in XYItemRenderer and XYItemRenderer classes to improve code readability and maintainability
added entity ID to the tick ' s ticket to ensure that the tick ' s entity is added to the world
added a method ` getErrorString ` to handle error strings in ` GLSurfaceViewAPI18 . java ` to improve error handling by providing clearer
add a method to retrieve supported locale from the FeatureRegistry class to improve locale management and provide clearer error messages for unsupported locales
updated the server URI handling in RFC2616BaseTest . java to use the correct host instead of the server URI to ensure the test accurately reflects the
added a call to ` addToHelperList ( ce ) ` in ` Construction . java ` to enhance the functionality of the ` addToHelperList `
added a condition to skip the first of the escape sequence in GlyphLayout . java to skip processing if the length is - 2 to improve performance by
added security permissions to manage class loader and context class loaders in Transport and TCPTransport classes to enhance security by restricting access to class loaders
added null checks and error handling in ReceiveExternalFilesActivity . java to ensure proper directory structure and prevent potential NullPointerExceptions
added null check for m _ serviceLoaderClassLoader before loading it to avoid potential NullPointerExceptions when m _ serviceLoaderClassLoader is null
removed debug logging and adjusted the deltap calculation in BarrowmanCalculator . java and TubeCalc . java to simplify the calculation by removing unnecessary
updated column handling logic in TimelineControllerImpl . java to check for Node instances instead of getNodeTable ( ) to improve type safety and clarity in
added a new method ` registerExtraComponents ( BrokerAdminApiApplication ) ` to the ` BaseBrokerStarter ` class to enable the registration
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT . java ` to verify the correct behavior of the
change peergroup . getcandidates to use a list instead of an arraylist .
fix an issue where the builder do n ' t work when there be more than 100 unchanged cycle
updated configNodeSimpleConsensusSnapshotTriggerThreshold and related classes to utilize a Supplier for consensus configuration to improve flexibility and maintainability of
refactor multiple Java files for consistency and clarity to improve code readability and maintainability
added a check for ManagedService annotations before unregistering JMXHelper to avoid potential NullPointerExceptions when the ManagedService annotation is not available
[ tika - 1076 ] fix the encoding detection of non - unicode entry name in the packageparser
added a new file TestSplitThruPhiDivMod . java with tests for modulo and div operations to ensure correct behavior of modulo operations
added methods to lookup generic interfaces , superclasss , and interfaces in TemplateRegistry . java to improve type safety and ensure correct type registration for generic types
updated the buffer size from 512 to 1028 in ByteArrayOutputStream . java to optimize memory usage for better performance
added TODO comments for Chinese and Persian symbols not yet available in PlayerSettingsScreen . java to provide clearer information about the availability of Chinese and Persian
[ java ] do n ' t allow transfer completion when there be too many bytes to transfer
corrected spelling of " windowLostFocus " to " windowDeactivated " in multiple classes to improve code readability and maintainability by using
updated error handling in SemanticAnalyzer to check for null src before throwing an SemanticException to improve robustness by preventing potential NullPointerExceptions
added scaling and extent calculations for the skeleton mesh in SkeletonRenderer . java to improve the visual representation of the skeleton mesh ' s positioning
added the ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide
added @ ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the application
removed the getAccount ( ) method from UserListItem . java to streamline the code by eliminating unnecessary method
added tests for the ` installPackage ` method in ` ShadowPackageManagerTest ` and modified ` processName ` assignment in ` ShadowApplicationPackageManager ` to
refactor AvailableSettings class to improve code organization to enhance maintainability and readability of the code
added ReceiptCapsule fields and their initialization methods in TransactionTrace . java to enhance transaction tracking capabilities for better transaction management
add option to disable shuffle member list in client connection listener
replaced Text with CrawlDatum in SegmentReader . java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer class implementation to improve code readability and maintainability
updated configuration keys in TsfileDBConfig . java and modified fetchSize initialization in QueryProcessExecutor . java to improve thread safety and ensure fetch
updated the error message from trunk ( ) to trunc ( ) in GenericUDFTrunc . java to correct the spelling of " trunk (
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve maintainability
set the title variable to an empty string instead of an empty string to ensure proper initialization of the title variable
add null body to asynchttpclientcall and add unit test
add a new interface ` EmbeddedServerInstance ` that extends ` io . micronaut . discovery . EmbeddedServerInstance ` to indicate that the interface
add support for register mac event in jabrefframe
renamed the class ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated its usage to improve clarity and
changed the method call from ` toEnum ` to ` toEnum ` in ` HandlerLibrary . java ` to ensure the method returns a valid enum
changed the ` hideUnprivilegedObjects ` variable from non - final to final to ensure immutability of the ` hideUnpriv
change log level from info to fine in threadedacousticscorer and add a test for audiodatasourcestest
added conditional logic to save GiphyAndroid11 video URL in IOUtils . java to ensure compatibility with newer Android versions
add deserializedObject for variable instance entity in servicetaskvariablestest
updated multiple classes related to EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , and SamlCompliantUniqueTicket
refactor logging logic in MavenLoggerFactory to use computeIfAbsent instead of direct access to the loggerMap to improve code readability and efficiency
hbase - 26464 remove outputstreamoutputstream from hbaseobjectwritablefor96migration and hbaseobjectwritablefor96migration
updated the configuration for the Hive stats column autogather configuration in TestAcidOnTez . java to ensure that the Hive stats column
change log level from info to debug in MavenEnhancePlugin . java to provide more detailed logging for enhanced class functionality
added a static method ` getDefaultProviderName ( ) ` to the ` Platform ` class and modified ` OpenSSLProvider ` initialization to use it to
added Captor annotation processing for Captor instances in MockitoBeforeTestNGMethod . java to enhance the handling of Captor instances in the Mockito framework
added validation checks for ` onlyRun ` , ` onlyRun ` , and ` testMethodNames ` in ` TestSuiteBuilder . java ` to
updated GroovyAutoComplete . java and GroovyLanguage . java to include whitespace checks and modified prefix computation logic to improve code readability and ensure proper handling of
[ java ] use graphhopperosm instead of graphhopper . init ( )
( chore ) camel - selenium - remote - handlesession : add baseUrl and retries to the http client
changed the ` mHideSysUiScrim ` variable from ` final ` to ` private final ` and added functionality to hide the system UI sc
refactor ` enqueue ` method in ` Call ` , ` OkHttpCall ` , and ` OkHttpCall ` classes to improve error handling and
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve code readability and maintainability by reducing duplication
updated the RequestMatcher interface to extend the Spring Security ' s RequestMatcher class to ensure compatibility with Spring Security ' s request matching framework
updated method signatures in DeferredAttr . java and added a new abstract class ImplicitLambdaConsideredForApplicabilityTest . java to enhance
move boxed and devirtualized type test to testutils . isj2kt
added unit tests for ` applyQualifiers ` and ` setDimensions ` methods in ` DeviceConfigTest ` and ` DeviceConfig ` classes to ensure
replaced ` IOException ` with ` RuntimeException ` in multiple test files to improve error handling by using ` RuntimeException ` instead of ` IOException ` and
updated COLUMN _ ICON from logo to mipmap . ic _ launcher in RootCursor . java to use mipmap . ic _ launcher
added a call to setContentText ( content ) in FileUploader . java to improve error handling by ensuring the error message is properly displayed
refactor ConcurrentHashMap to improve concurrency handling to enhance performance and maintainability of the code
added methods to adapt user trades and trades in AbucoinsAdapters , AbucoinsTradeService , and AbucoinsTradeService
updated method calls in PlotSquared , Claim , Delete , and SetBlockFast to use true instead of false to simplify the plot removal logic and
simonstewart : add support for firefox and internet explorer in the htmlunit driver
added handling for VARBINARY type in BlobType . java to ensure proper handling of VARBINARY data types in the database
refactor variable names and conditions in SetCookieSupport . java for consistency to improve readability and maintainability of the code
added synchronization to LibFFIContext . java to ensure thread safety when accessing shared resources
replaced ` Context ` with ` ContextInternal ` in ` InboundBuffer ` and added a test for invalid thread rejection in ` InboundBufferTest
updated the ` waited ` variable in ` Connection . java ` and refactored timeout handling in ` LdapTimeoutTest . java ` to improve timeout
updated the Usage message from " UniocdeData . txt uniName . dat " to " UnicodeData . txt " in CharacterName . java
camel - 14265 : camel - cxf should use ` ` inoutheader ' ' instead of ` ` inoutheader ' '
refactor multiple UI components to improve code organization and maintainability to enhance maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver and updated return value in ComponentAssemblySaver to ensure proper handling of BoosterSet instances
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 80 : do n ' t
replaced the usage of ` MetricsUtil . getMeter ( ) ` with ` MetricsUtil . BLOCKCHAIN _ FORK _ COUNT ` across
updated error handling in Class . java to return false instead of throwing an InternalError for JEP 359 support to ensure compatibility with JEP 359
remove mortbay logging from testipcutil . testipcutil . testipcutil
camel - 14284 : remove chunkedtransfer from netty routing filter
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure attributes are properly cleared before processing
added a pollingPeriod parameter to the VerificationAfterDelayImpl constructor and modified the VerificationAfterDelayImpl constructor to include a pollingPeriod parameter to
added a compaction option to the Hive authorization manager and modified conditions in the SemanticAnalyzer and SessionState classes to enhance security by preventing unauthorized access to
[ zeppelin - 4892 ] fix docker interpreter process to handle jar file .
hbase - 24186 cleanup regioncount in hbaseadmin . gettableregions ( ) and testThriftserver . testregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable tests that are not ready for execution
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to improve
added a try - finally block to reset the reader ' s content handler and error handler to null in SimpleSAX . java to ensure proper resource
added release of the byte buffer pool in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to utilize the
added null and closed check for the ResultSet before closing it to prevent potential NullPointerExceptions when closing the ResultSet
updated the driver version from - 1 to 6 in DerbyDatabase . java to ensure compatibility with the latest features and improvements
pmd : fix usestringbufferlength to check if there be no literal
[ hotfix ] remove unnecessary log . error ( ) from remoteparkjobmonitor
modified the createDb method to return a Connection instance instead of void to ensure proper resource management and prevent potential memory leaks
refactor multiple metric classes for consistency and clarity to improve code maintainability and readability
hbase - 26464 add option to disable off - peak compaction
added handling for " address " in ` BitstampDepositAddress ` and created a new JSON test class ` DepositAddressJSONTest ` to ensure correct
replaced IllegalStateException with a response . abort method in BufferingResponseListener . java to ensure proper handling of invalid buffer capacity scenarios
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkInDeletedDirectories ( ) ` to ensure the correct absolute path is
change the type of ` InvocationFinishedEvent ` from ` Event ` to ` InvocationType ` in ` InvocationFinishedEvent ` and ` DefaultMetricsRegistry
added multicast support check to the return statement in OptionsTest . java to ensure compatibility with multicast - specific interfaces
updated the condition for checking valid check sums in ChangeSet . java to improve readability and maintainability of the code
added an ` clone ( ) ` method to ` BufferedChecksumIndexInput ` to ensure that the ` clone ( ) ` method does not throw an
replaced ` Math . sqrt ( x , y , y ) < = 0 ` with ` radius ` in ` Circle . java ` to simplify the
added a condition to check the frequency band identifier before assigning it to the frequency band to ensure that the frequency band identifier is only set when necessary
rename variable ` tapSquareSize ` to ` tapRectangleWidth ` and ` tapRectangle ` in ` GestureDetector . java ` to improve clarity
[ hotfix ] [ table - planner - blink ] change default replication _ on _ write to false
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` and ` CryptoFacilitiesTradeServiceRaw
added ` getDelegate ( ) ` method to ` TraceCallable ` , ` TraceRunnable ` , and ` TraceRunnable ` classes to provide access to
updated error handling in FileActivity and added synchronization events in FileDisplayActivity to improve user experience by providing clearer error messages when sharing files
added error handling for writing quiche connections in ForeignIncubatorQuicheConnection and JnaQuicheConnection to ensure proper
updated the method call in JavascriptContext . java to include a boolean parameter to enhance flexibility in JavaScript execution
removed the ' Align . left ' parameter from TableCell constructors in BaseTextFormattingHelper . java and TableCell . java to simplify the
added a new file ` TracingAutoConfiguration . java ` to configure tracing functionality in the application to enable customizable tracing capabilities in the application
added a para variable ` secondP ` to the ` addContent ` method in ` Submissions . java ` to improve code readability and maintain
refactor ` getPrunedQueryableSegments ` method to accept a list of segments to improve flexibility and maintainability of the query execution process
refactor VertxBufferTest . java for improved test coverage to enhance test coverage and reliability of buffer operations
add test case for hsmf and add unit test
changed the visibility of the mContext variable from private to protected to allow subclasses to access the context variable
removed unused imports from ShowTablesOperation and ShowViewsOperation classes to clean up the code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to include ` WriteResult ` and ` MongoActionOperation
[ hotfix ] [ runtime ] fix npe in jobcoordinationservice
refactor DisplayUtils methods to replace bitsLen and bytes to human readable strings with new ones to improve code readability and maintainability by reducing redundancy
removed unnecessary check for TieredMergePolicy in TestUpgradeIndexMergePolicy . java and added a new test method in TestMergeOnFlushMerge
added a check to return early if the overview state is not enabled to optimize performance by avoiding unnecessary processing when the overview state is not enabled
[ hotfix ] [ runtime ] improve error message for non - hardware - extensions avx
updated method parameters in ` loadSettingModels ` and ` contextInitialized ` to accept ` referencePropertiesInputStream ` as a parameter to enhance flexibility by allowing
added null checks for input in FilterLeafReader . java to ensure robustness by preventing NullPointerExceptions when input is null
[ bouncycastle ] add defaultsecretkeysizeprovider to jcecrfencryptorbuilder and add test for key size
updated IOException handling in NetSocketReader , SoftEndOfStreamException , SocketUtils , SocketUtils , SocketUtils , SocketUtils , and SocketUtils to
added @ Inject annotations to multiple Java classes to ensure proper injection of the classes to improve code clarity and reduce unnecessary dependencies
updated the expected size from 9 to 10 in BundledDistributionTest . java and added database user assertions in PostgreSQLTest . java to
[ hotfix ] [ config ] add default job name configuration to streamexecutionenvironment
updated scaling logic for two - panel devices in OverviewState . java to improve accuracy of scaling based on device profile type
updated IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome to improve the structure and structure of the IcePlainsBiome
removed zone parameter from methods in DataUpdateManager and StorageUtils classes to simplify code and improve readability by eliminating unnecessary parameters
[ j2cl ] add isqualified a a parameter to thisreference so that it can be use by the compiler .
updated regex pattern in XhamsterRipper . java from " wmde . " to " wmde . " to ensure compatibility with
fix infinite loop in glowworld . getall ( )
danielwagnerhall : fix oracledialect . gettablename ( ) to work with schema .
[ hotfix ] fix checkstyle violation in console filter
added a new parameter ` numberOfAllFiles ` to the ` FileMenuFilter ` constructor and updated related classes to include it to allow users to select
[ java ] use termlengthmask 1 instead of termwindowlength in network publication .
refactored GuildUpdateOwnerEvent class to improve code organization to enhance maintainability and readability of the code
fix a bug where a creative entity do n ' t update the in - portal tick when the player be not creative .
updated layout calculations in ClusterMonitorTileSkin . java to use a minimum height and added compressed state management to improve layout responsiveness and ensure consistent
refactor multiple codec template classes to improve code organization to enhance maintainability and readability of the codebase
changed the type of ` lengthDataBits ` and ` numberTriplets ` from ` int ` to ` long ` in ` Base64 . java
removed unnecessary null check for the renderer variable in RendererConfiguration . java to simplify the conditional logic for better readability
volume api : skip disk offering change when use custom service offering .
updated import statements in Order . java and HitbtcAdapters . java to use the new LimitOrder . Builder class to improve code clarity and
[ hotfix ] fix typo in llrealtimesegmentdatamanager
updated the name of the JRuby Scripting service from " automation " to " jrubyscripting " to clarify the purpose of the automation service
updated variable names from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in variable naming
updated the condition in ParticipateAssetIssueActuator . java to include an additional check for preciseExchangeAmount to ensure that the exchange
removed unnecessary loops in FeedUtils . java to streamline code by eliminating unnecessary iterations
added a new test method ` testHDF4 ` to ` HDFParserTest ` to validate HDF parsing functionality to ensure compatibility with Java
added a new constant ` CALCITE _ 6092 _ FIXED ` and modified the cast method calls in ` SqlOperatorTest . java `
reformatted code for better readability to improve code readability and maintainability
added a new method ` quietCloseAll ` to ` CloseHelper ` for handling multiple closeables to improve code readability and maintainability by
updated the argument string from ` posBtn ` to ` common _ res ` in ` RemoveFileDialogFragment . java ` to provide a more descript
added a null check for srcWidth and dstHeight before calling drawImage in Pixmap . java to avoid potential NullPointerExceptions when srcWidth and
replaced reflection - based reflection calls with reflection - based reflection methods in UnsafeAccess . java to improve code maintainability and reduce boilerplate code
updated regex pattern matching in GUIUtil . java and added validation tests in GUIUtilTest . java to improve regex matching accuracy and ensure proper validation of
change the type of ` conflict ` from ` boolean conflict ` to ` long conflicts ` in ` CachedRowSetWriter . java ` to improve clarity
update sdk configuration notification provider to use pubspec . yaml instead of version .
modified the handling of the REFERENCE case in ReferenceMemory . java to include a conditional check before assigning a reference to ensure that the reference is
refactor input handling in Injector to include seed file checks and improve error logging for non - file inputs to enhance input validation and provide clearer
added a condition to hide the original view when the original view is not a ItemInfo to ensure that the original view is hidden when the original view
updated the calculation of ` maxNodes ` to ensure ` maxNodes ` does not exceed ` maxTrips ` and adjusted the condition for node limits
added logging for unsupported texture coordinates type in CombinedTexture . java to improve error handling and provide clearer logging for unsupported coordinates
added a check to prevent deletion of the barcode file in EncodeActivity , SupplementalInfoRetriever , and MatrixUtil classes to improve error handling and
camel - 14263 : camel - core - add support for seek ( ) and close ( ) in camel - core
updated the SQL update query to use oldPrefixLength instead of locate to ensure correct handling of old prefix paths
refactored the initialization of convertedValsList to streamline the initialization of convertedValsList to improve code readability and reduce redundancy
added a deprecated constructor to AbstractTimer that accepts a baseTimeUnit parameter to indicate that the constructor is outdated and should no longer be used
added a boolean flag ` showNightlyWarning ` to check if the Universal Gcode Sender is a nightly build to inform users about
[ hotfix ] [ table - common ] sort response by team name when team name be null .
updated return statement in UnnecessaryThrows . java from " Remove unnecessary throws " to " Remove unnecessary throws declarations . " to improve clarity
replaced CacheController with CacheController in CommonsApplication and ShareActivity classes to improve clarity and maintain consistency in naming conventions
replaced instances of realObject . getApplicationContext ( ) . getApplicationContext ( ) . startService ( ) with RuntimeEnvironment . application . startService (
refactor StatisticsServlet class to improve code readability to enhance maintainability and facilitate future updates
updated RuntimeEnvironment to use ResourcesManager for updating configurations to ensure compatibility with devices running KitKat and above
added a new constant ` VERSION _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` and a corresponding test in ` Stack
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerException when oldIndexName is null
added new packages " com . sun . org . apache . xml . internal . resolver . helpers " and " com . sun . org . apache
rename method ` save ` to ` add ` and updateExecutionContext ` across multiple repository classes to improve clarity and consistency in method naming
fix loop exit node in graphutil . process ( )
replaced RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController . java and updated related methods to use WidgetsRecyclerView instead of RecyclerView to improve
added a conditional check for terminal support in ConsoleReader . java to ensure that the console is only processed when the terminal is supported
updated variable types from long to int and modified timeAllowed calculations in CloudExitableDirectoryReaderTest . java and LBHttpSolrClient . java
updated session validation check from ` isDirty ( ) ` to ` isValid ( ) ` in ` AbstractSessionCache . java ` and added a test
added null checks for columnNames in ChangedIndexChangeGenerator . java to improve code readability and prevent potential NullPointerExceptions
replaced ` Vector ` with ` ArrayList < RadioButton > ` for adding buttons and refactored related methods to use ` ArrayList < RadioButton >
refactor UserManagerCompat and UserManagerCompatVN classes to use a new UserManagerCompatVM class to enhance compatibility with newer Android versions
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to ` MockDatabase ` , ` Database ` , and `
updated the ` spawnThreadToCompareActionGraphs ` method to use a new constant ` MAX _ MISMATCH _ RULES _ TO
added new class ` LockDatabase ` , ` UnlockDatabaseDesc ` , and ` UnlockDatabaseDesc ` to provide descriptions for database and unlock operations
refactor RankingTopComponent , RankingUIModel , RankingToolbar , and RankingToolbar classes to improve code read
added disconnect message handling for remoteId length in HandshakeHandler . java and updated logging in NodeImpl . java to improve connection disconnection handling and ensure
added a new test method ` testSetDeleteSG ` to ` IoTDBAuthorizationIT . java ` for managing SSG permissions to ensure proper
chore ( proto ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
refactor type validation logic in Assertions . java and add new methods in FindMissingTypes . java to improve type validation logic to enhance type safety and
added two ` afterTestClass ` and ` beforeTestClass ` methods to the ` StepScopeTestExecutionListener ` class to provide a way to
updated import statements and modified the CountersManager constructor parameters in CountersManager . java to improve code readability and maintainability by reducing redundancy
removed the ` toString ( ) ` method implementation from ` MultiSteps ` , ` SendEmail ` , and ` SendEmail ` classes to simplify the
added logic to initialize joinKeys and clone the joinKeys array in JoinDesc . java to ensure proper manipulation of joinKeys to prevent unintended modifications
added PrincipalResolver support in WebAuthnConfiguration to enable the registration of authentication handlers with a default principal resolver
updated the ` addSettingsFromFile ` method to include a ` SearchPaths ` parameter and modified the parsing logic in ` XcconfigStack ` to
changed fields in Oracle . java from package - private to final for better immutability to enhance immutability and ensure immutability of the
[ hotfix ] [ doc ] do not advertise unaligned checkpoint until rescaling of unaligned checkpoint
[ calcite - 4071 ] add support for ` ` invalidated ' ' clause in queryparser
[ graal - 591 ] make ` ` compiletheworld ' ' more verbose .
do n ' t throw an illegalstateexception if the local variable be not a local variable
added support for MySQL timestamp column types in CreateTableGenerator to ensure compatibility with MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper class loader management and prevent potential memory leaks
added a condition to set the EjectionDelay when the stageNr is zero in SimulationListHandler . java to ensure that the motor is
rename ` FunctionalRunnerConfig ` to ` SpringOrderRunner ` and update references accordingly to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
updated ` BaseTokenSigningAndEncryptionService ` , ` OAuth20TokenSigningAndEncryptionService ` , ` UmaRequestingPartyTokenSigningAnd
added null check for the collection before returning the string representation to prevent potential NullPointerExceptions when coll is null
replaced ` getStyle ( ) . setAlignment ( ) ` with ` getAllStyles ( ) . setAlignment ( ) ` in ` TextArea . java `
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance flexibility in managing foreign database and schema names
[ java ] throw exception instead of call state ( nowns ) in election . java
refactor ShadowActivity and ShadowBluetoothDevice to use a private method for extracting PackageManager to improve code readability and maintainability by
drill - 4192 : fix selection root in dfs _ path ( # 4192 )
deprecate item . onblocktick ( ) in favor of item . inventorytick ( ) and item . inventorytick ( ) .
use warresource instead of jarfile in ioutil . getjarsignature ( )
added null check for getSherlockActivity ( ) before calling invalidateOptionsMenu ( ) to avoid potential NullPointerException when getSherlockActivity ( )
refactor widget configuration handling in AppsCustomizePagedView , Launcher , and PendingAddItemInfo classes to improve widget configuration flexibility
added new constant strings for various CAPABILITY and CAPABILITYABILITY in EcobeeSensorThingHandler . java to enhance code readability and maintainability
add session . getsession ( ) . getsession ( ) . getsession ( ) . getsession ( ) . getsession ( ) . get
add AAPT2 environment variable to the environment variables in Genrule . java and its test in GenruleTest . java to support additional AAPT
do n ' t dump access table when use trufflecompileroptions . getvalue ( )
added a null check before disposing of the message to prevent potential NullPointerExceptions when disposing of the message
modified access modifiers of ` db ` and added ` @ Getter ` annotations to ` db ` in multiple classes to allow external access to the ` db
[ hotfix ] [ core ] fix log warning in corecontainer
replaced ` printStackTrace ( ) ` with ` fail ( ) ` in ` CategoryPlotTests . java ` to improve error handling by providing clearer failure
refactor IOSImplementation and IOSImplementation to use SmallByteArrayOutputStream instead of ByteArrayOutputStream to improve performance by avoiding unnecessary byte array operations
replace hashmap with intmap in oglesshaderrenderer . getattribute ( )
updated JDBC connection from territory to shutdown in AbstractDIHJdbcTestCase . java to ensure proper resource management and prevent potential memory leaks
camel - 14263 : camel - route - server should handle null value for firstexchangedate and lastexchangecompletedtimestamp
updated the default language handling in TestHtmlTag and TestUseOption to use a default language instead of a default language to ensure consistent behavior across different
added a condition to check if the result is incomplete and the size of the item list is greater than 10 to ensure that the item list is
updated usage command line argument from ` timeFieldSpec ` to ` timeColumnName ` and modified condition checks in ` HybridClusterIntegrationTestCommandLineRunner `
updated output format handling in SiteSnapshotVariationsTest and OutputOptions classes to use a more descriptive variable name to improve clarity and consistency in
modified the condition to check if the QSB is not enabled when the QSB is not enabled to ensure correct behavior when QSB is not enabled
add equal ( ) and hashcode ( ) method to animationlist , animationlist , gltfmodelkey , scenekey , scenekey , scenekey
added a new ` _ date ` field and modified the ` setDate ` method in ` HttpGenerator ` , ` HttpGenerator ` , and ` Http
replace Adler32 with CRC32 in Store . java to improve code clarity by using a more descriptive class name
updated the XenHeartBeatInterval configuration from " any # of seconds " to " null " in the XenHeartBeat
added a new constant ` ZERO _ AREA _ FIN ` and updated warning checks in ` FinSetCalc . java ` and ` FinSet
update elasticsearchio to use jsonserializer instead of jsonformat
hhh - 11447 add support for trunc function in h2 , oracle , and saml
updated error handling in MetricUtils to differentiate between " memory Pool not found " and " Memory Pool not found " to improve clarity and accuracy of error
added a boolean flag ` useJavaScript ` and modified the ` ensureSignedUp ` method to return a ` CompletableFuture ` in multiple classes to enhance
[ hotfix ] [ runtime ] improve error message for type annotated with @ runtimetype
updated the BACKFILL constant from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils .
updated return statements in PrecompiledContracts . java to use a single DataWord instance instead of a new DataWord instance to improve code readability
refactor item update logic in AllAppsContainerView to use BubbleTextView instead of AlphabeticalAppsList to improve code readability
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated comments in ResourceService , ResourceHandlerTest , and ServletContextHandler in ResourceServiceTest . java to clarify the correct behavior of the start method in
removed the conditional check for WORKSPACE _ CUSTOM in Cling . java to streamline the code by eliminating unnecessary complexity
remove assertion that be n ' t need in trufflejdkservices
added JUnit @ Ignore annotation to ClassicSuperHandlingTest . java to temporarily disable tests that make sense until call - through is turned on by default
updated import statements for ItBitDemo , ItBitTickerDemo , ItBitTickerDemo , ItBitTradesDemo , ItBitTickerDemo ,
refactor : remove unnecessary null check in profilingactivationinterceptor . getparameters ( ) .
added a private constructor to Utils , ApplicationUtils , and Whois classes to enforce immutability and prevent instantiation of these classes
add try - with - resources to prevent resource leak
replaced instances of ` o . getClass ( ) . getName ( ) ` with ` java . util . Vector ` and ` java . util . Hashtable
added tableNameWithType to the warning log message in RetentionManager . java to provide more context about the retention time being processed
trim whitespace from the fragment list to ensure consistent handling of string lengths across the codebase
modfileresourcepack : use modfile . getfilepath ( ) instead of path . tofile ( ) .
refactor ` PartitionToolbar ` to use ` TransformerBuilder . Node ` and ` TransformerBuilder . Edge ` instead of ` Node ` and ` Edge
added a check for task view visibility in RecentsView . java to ensure the task view is visible before proceeding with grid scrolling logic
updated method signatures in CalculatorEndpoint , CalculatorRestEndpoint , CalculatorService , CalculatorServiceImpl , and CalculatorServiceImpl to use
replaced ` Comparator . comparing ` with ` Comparator . comparing ` in ` QueryCommand . java ` to simplify the comparison logic for improved readability and
fix hay bale not be able to move it to the top of the bottom .
refactor environment variable handling in WindowsProcessAddressSpace . java and J9DDRImageProcess . java to improve code readability and maintainability
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest to enhance functionality and ensure correct handling of custom plugin properties in the
updated condition in HashJoinBatch . java to check if hashTable is empty instead of null to improve robustness by avoiding potential NullPointerExceptions
updated timestamp validation logic in Timestamp . java and added unit tests in TimestampTest . java to ensure correct handling of timestamp values and improve test coverage for
[ java ] remove unused ` ` archivecontext ' ' from service agent .
added a condition to check if the compiler threshold is not compiled before proceeding with compilation to ensure the code only executes when the compiler threshold is
add test for image2 and imagemosaic ( ) and imagemosaic ( ) method
refactor TogglableFlag to use a new constant for the NAMESPACE _ LAUNCHER and add a listener for property change notifications to
updated log messages to include placeholders in DockerClientFactory . java to improve log readability and maintain consistency in logging
added a condition to skip processing for ANDROID platforms in SnapshotScreenListener . java to improve performance by avoiding unnecessary processing on non - ANDRO
updated assertions in RoutesTest to use Hamcrest assertions instead of hardcoded values to improve readability and maintainability of the test code
added new interfaces BytePredicate , ByteToLongFunction , FloatToLongFunction , and ShortToLongFunction to implement functional programming for byte ,
updated ` getSubsColor ` method to return a string instead of an integer and modified its return type from ` int ` to ` String ` to
added a conditional check before deregistering the invocation registry to avoid potential null pointer exceptions when the future is not complete
replaced direct instantiation of ControlFrameBytes with a direct output method in AbstractWebSocketConnection . java to improve code readability and maintainability by using a
added a check for the " redirected " flag before starting the welcome activity in LoginActivity and SignupActivity to ensure that the welcome activity is
added ShadowCheckedTextView . java and ShadowCheckedTextView . java for testing checked text functionality to facilitate testing of checked text functionality in Robolectric
added Serializable interface to ParserState and updated serialization handling in AccessorProperty , AccessorProperty , and Property classes to ensure proper serialization of the Parser
added a new certificate " identrustdstx3 [ jdk ] " to VerifyCACerts . java to enhance certificate verification capabilities
removed redundant attribute setting for TEMPDIR in WebInfConfiguration . java to streamline code by eliminating redundancy
fix a bug in the occupant . getnick ( ) method in occupant .
refactor QuicConnection and QuicSession classes to use a single context map instead of a single context map to improve code clarity and maintainability
updated merge policy handling in CreateIndexTask to use getConfig ( ) instead of getScheduler ( ) and setUseCompoundFile ( ) methods to improve
updated variable names from ` c ` to ` cValue ` in ` ICU4JImpl . java ` and ` TextPosition . java `
added ` ComputedDateValue ` and ` ComputedNumericValue ` imports and refactored exception handling in ` AddDefaultValueChange . java
refactor NbtScoreboardIoService class to improve code readability to enhance maintainability and facilitate future updates
make saml2configuration and saml2serviceprovidermetadataresolver work with existing classpath
changed the visibility of the printer variable from private to protected and refactored the printer initialization logic in GraphPrinterDumpHandler to allow subclasses to access
added BigDecimal rounding and average price calculations in HuobiAdapters . java to ensure accurate calculation of the average price in the order
replaced ` ProjectionOperation ` and ` TypeBasedAggregationOperationContext ` with ` Field ` in ` ProjectionOperation ` , ` TypeBasedAggregationOperationContext ` ,
refactor the addViewer0 method to check if a player is already present before sending a packet to improve code readability and maintainability by simplify
added constant state management in FolderAdaptiveIcon , FolderAdaptiveIcon , ShiftedBitmapDrawable , and ShiftedBitmapDrawable classes to
refactor SPDYClient to improve connection handling and session management to enhance code readability and maintainability by consolidating connection creation logic
fix nullpointerexception in protostuffobjectoutput . writeobject ( null )
pdfbox - 4071 : improve code readability and maintainability
refactor BarrowmanCalculator class implementation to improve code readability and maintainability
do n ' t draw axis when there be no axis
replaced ` setFilter ` and ` setWrap ` calls with ` unsafeSetFilter ` and ` unsafeSetWrap ` methods in ` Texture . java
corrected a syntax error in the returnToWorkspace method call to improve code readability and maintain consistency
updated SSL connection handling in CustomUrlJob . java and added a new class CustomUrlTrustEverything . java for SSL trust management to enhance security
updated method names from ` getRealUsedClockRateString ( ) ` to ` getRealUsedClockRateString ( ) ` across multiple classes to
refactor TextureAtlas class to improve code organization to enhance maintainability and readability of the code
updated method calls from ` getProductNameForBuildTargetNode ` to ` getModuleName ` in ` ProjectGenerator ` and added a method to set
added locking mechanism to the registry in TestSlot . java to ensure proper resource management and prevent potential memory leaks
# 102 - add support for id _ list type in sqltreebuilder . find ( )
replaced ` closeFrame ` with ` rbuf ` in ` WebSocketServletRFCTest . java ` to improve clarity and maintainability of the code
[ wasm ] fix memory leak in wasmfunctioninstance .
add TTL configuration to log collection
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper , CustomPreconditionWrapper , and XMLChangeLogSerializer to
refactor DeploymentExceptionTest to use JUnit ' s Server and HandlerCollection instead of QueuedThreadPool to improve code maintainability and leverage JUnit
added error handling for Timber initialization in CommonsApplication and NearbyController to improve robustness by catching potential exceptions during initialization
added null and empty check for objectName before trimming to avoid potential NullPointerExceptions when objectName is null
updated error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve clarity
[ hotfix ] [ table - planner - blink ] avoid nullpointerexception in environmentsettings
updated variable names and added null checks in KeyTool . java and Resources . java to improve code readability and prevent potential NullPointerExceptions
mark RuntimeOptions . java as deprecated since version 23.0 to indicate that the class is outdated and should no longer be used
replaced CharBuffer with string . getBytes ( utf8Charset ) for encoding to simplify code and improve performance by eliminating unnecessary byte manipulation
added a new interface ` PermissionEvaluator ` to manage authentication permissions in the security framework
added support for ERASE _ LINE _ ON _ FINISH in LineReader and LineReaderImpl to enhance line reading functionality by allowing
updated the condition to check if the server name is not already present in onlineServers to ensure that online servers are not stored in the database
replaced instances of ` CALC _ MERKLE _ ROOT _ FAILED ` with ` BLOCK _ SIGN _ ERROR ` across multiple files
refactor expandwar to use URLConnection instead of JarFile to ensure proper resource management and prevent potential memory leaks
[ iotdb - 4071 ] catch throwable and log a warning in defaulthttpclientoutofboundsexception
change the layout of the wrapper in Picker . java from centering to centerAbsolute to ensure the spinner is centered within the center of the layout
[ hotfix ] [ network ] make networkbufferpool # recyclememorysegment interruptable
[ hotfix ] [ test ] make testjbeanserver static in testjbeanintegration
refactor AbstractIT to use RetryTestRule instead of AndroidJUnit4 for JUnit 4 compatibility to improve test reliability and maintainability by using
removed the ` autoCommit ` boolean parameter from the ` QueryStateMachine ` and ` QueryStateMachine ` classes to simplify the code and improve readability by
[ java ] move exception to package - info . java and add package - info . java file .
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser to
[ hotfix ] [ stream ] remove unused callback from streamtasktimertest
updated request handling logic in mmm Request . java and added a new test for connection request URLs in RequestTest . java to improve robustness and
replaced the static final string ` KEY _ LAST _ SEEN _ VERSION _ CODE ` with a direct reference to ` WhatsNewActivity `
added methods for handling session availability and unavailable sessions in the SessionManager class to enhance session management functionality and improve session management
added a package name " liquibase . pro " to the ServiceLocator to enable scanning of the Liquibase Pro package in the application
replaced ` syncedFolderArrayList ` with ` deleteOtherSyncedFolders ` in ` MainApp . java ` and ` SyncedFolderProvider
updated the ` loadWithNewGlobal ` method to accept an additional ` args ` parameter and modified the ` context ` method signature to include an additional
updated regex patterns in FastPathResolver to use the correct startIdx variable instead of a hardcoded value to improve code readability and maintainability
replaced ` length ( ) ` with ` toIntExact ( ) ` in ` weigher ( ) ` method calls in ` HiveClientModule .
rename methods related to randomization depth from ` isExceedRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple classes to
added support for LEAD and LAG functions in UnsupportedOperatorsVisitor and created a new test for lead parameters in TestWindowFrame to
clear the headers in AbstractProxyServlet to ensure that the proxy request headers are properly cleared before proceeding
added a check to skip the SA attach test in CompressedClassSpaceSizeInJmapHeap . java to skip tests that are not expected to
added null check for bgColor before accessing alpha check in GraphicsDevice . java and created TranslucentWindow . java for window translucency
added null checks and error handling for user information in UserInfoActivity . java to improve robustness by preventing null pointer exceptions and provide clearer feedback
added custom header serialization and deserialization functionality to PrecompiledHeaderData and PreprocessorDelegate classes to ensure compatibility with different machine environments
[ hotfix ] [ table - common ] [ table - planner - blink ] add enum value for append mode
added a new test class ` MultipleOutputsIntegrationTest ` to validate the functionality of named output groups in the build process to ensure that named output groups
updated regex patterns in FileSettings . java to ensure proper handling of line endings to improve readability and maintainability of the code
[ flink - 18186 ] [ runtime ] fix ssl context initialization and flow snapshot in stateless flow
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to ensure proper handling of taskbar mode during tests
added new device status entries for leaving - dock , energy - save - mode , and energy - save - mode in DeviceStatus . java to enhance
add itemloadingexception to log error message when load item model from a blockstate
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
pdfbox - 4071 : do n ' t return 1 for non - 2x graphics .
refactor RussianLowerCaseFilter class implementation to improve code readability and maintainability
refactor server property handling in CsvBulkLoadToolIT and QueryUtil to use ReadOnlyProps . EMPTY _ PROPS instead of Maps . new
replace ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` FileDisplayActivity . java ` to ensure consistent file path handling
add a resettableinputstream to the wavloader , so it can be use by the wavloader .
added a new boolean flag ` repeatFirstLineIndent ` and modified the indent calculation logic in ` ColumnText . java ` to allow users to control
changed the type of the oid comparison from ` oid ` to ` Object ` in ` Oid . java ` to ensure type safety and prevent potential
do n ' t call registerMBeans ( ) if config . getmetricstrackerfactory ( ) do n ' t exist
use controlflowanchored instead of controlflownode in loopex
added focus paint to the buttons in WindowsPlacesBar . java to improve the visual appearance of the buttons in the user interface
added support for UniqueConstraint , ForeignKey , and PrimaryKey in DatabaseSnapshot . java to ensure compatibility with additional constraint types
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and updated API endpoint in ` AccountAPI `
[ ds - 2424 ] fix the issue where a group rest can not be create with a title mdv .
refactor utterance handling in GapInsertionDetector to improve readability and error handling to enhance code clarity and ensure robustness by handling empty utterances
added unit test to demonstrate how to use cache script engine
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` in ` FeedRefreshUpdater ` and added getter and setter methods in `
updated the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to adjust the fast scroll threshold for
use ljava / lang / system instead of metautil . tointernalname ( ) in hotspotresolvedjavafield
hhh - 13644 fix npe in procedurecallimpl . getresultstream ( )
added null check for configuration . getApiProperties ( ) before retrieving API properties to avoid potential NullPointerExceptions when accessing API properties
added BinaryFrame and TextFrameGenerator classes for BinaryFrame , TextFrame , and BinaryFrame to enable the generation of BinaryFrame , TextFrame ,
[ java ] use webdriverwait instead of findelement ( ) in pageloadingtest . java
refactor calculations for lat , lon , and radius in RandomGeo3dShapeGenerator to use nextBoolean ( ) method to improve code readability
added a method to keep the ClassLoader instance in ResourceBundle . java to improve resource management and prevent potential memory leaks
changed the return value from false to true in SQLiteDatabase . java to ensure the method accurately reflects the intended functionality of the SQLiteDatabase
refactor the handling of concurrent sig prefixes in the FindJSR166LockMonitorenter class to improve code readability and maintainability by reducing
added MkdirStep to multiple Android - related classes to ensure consistent file path handling across different operating systems
updated error messages in MeshLeveler . java to include both xCoord and yIdx to improve clarity of error messages for better debugging and debugging
[ drools - 4071 ] skip kie - pmml integration when jpmml module be not available on classpath
change locationMode from locationMode to thermalStatus in ShadowPowerManager . java to ensure correct handling of thermal status in power management
added a new constant ` OS _ MAC _ TMP _ DIR _ PREFIX ` and modified the method to use it to ensure compatibility with different
add support for use memory buffer on window
added a validation check for the presence of an organization in the pom . xml file to ensure that Plugis requires an organization in the pom .
updated contributor license agreement handling in SepPostingsWriterImpl . java to ensure compliance with contributor licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused code to streamline the codebase
updated the method call to use the system property ` java . class . path ` instead of a hardcoded string to ensure compatibility with different environment
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` byte [ 0 ] ` in ` KM200Device . java `
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to verify the behavior of the ` rewriteRun `
updated the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the LAUNCHER3 _ PHY
added new HTML elements to the HTML report in HtmlThreadInformationsReport . java to improve user experience by providing clearer feedback on thread information
updated LUCENE _ MAIN _ VERSION from " 3.0 " to " 4.0 " in Constants . java and updated version constants in Version .
added symbolicator , task , and task variables to BsdDebuggerLocal . java and updated platform check in PlatformInfo . java to ensure compatibility
fix memory leak in fmlclienthandler and fmlIndexedmessagetomessagecodec
log unmuted networkdispatcher exception when connection reset by peer
[ java ] initialize adminbuffers in order to avoid nullpointerexception .
added a break statement to the switch statement in TouchImageView . java to ensure proper flow control in the loop
chore : update protos to match new proto
[ grizzly ] remove sslserver . flush ( ) from feedablebodygenerator
added handling for JavaType variables in TypeUtils . java to ensure correct type assignment based on the type variable ' s variance
use concurrentset instead of nonblockinghashset to avoid concurrentmodificationexception
added null check for tree . errs in MemberEnter and JavaCompiler , and modified error count checks in Erroneous classes to enhance error handling and
change browser background color from NO _ BACKGROUND to NONE in BugInfoView . java to improve user experience by providing a more visually appealing browser
corrected the method call from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure the
fix integerstamp . getdiv ( ) and integerstamp . getdiv ( ) to handle negative value
added a new method ` readStream ` to read a stream from an InputStream to improve code readability and maintainability by encapsulating the
updated SwitchCompiler and ExprGenerator to include variable variable handling and added local variable handling to improve code clarity and ensure proper variable management during switch operations
do n ' t throw unsupportedoperationexception when cryptographic provider be not available
updated library references in WinGammaPlatformVC10 . java to use psapi libs instead of WMC libs to ensure compatibility with psapi
updated comment formatting in StringUtilsTest . java and added newline support in StringUtilsTest . java to ensure proper handling of newline characters in SQL statements
added compatibility and output encoding configurations in TemplateEngineFreemarker . java and updated maliciousJavascript string formatting in ApplicationController . java to enhance compatibility and
replaced ByteArrayInputStream with direct byte array handling in CRDGeneratorTest . java to simplify code and improve readability
do n ' t use static field in sample sender factory
added a null check for the " testngEmailableReporter " system property before adding it to the EmailableReporter to avoid potential NullPointerExceptions when
added a boolean variable ` quoted ` and updated conditional logic in ` CommandLineBuilder . java ` and corresponding test cases in ` CommandLineBuilderTest . java
removed the ` public ` modifier from several interfaces in the ` Clock ` , ` MetricProducer ` , and ` MetricProducer ` classes to restrict access
added job . setNumReduceTasks ( numFetchers ) method to FreeGenerator . java to set the number of reduced tasks for improved performance
[ flink - 24335 ] [ table - planner - blink ] fix schemageneratorhelper . getobjectfielddefinitions ( )
updated the file version from 505365 to 532077 in SaveService . java to reflect the latest version of the application
added support for " OES _ TEXTURE _ FLOAT " and " GL _ ARB _ texture _ float " extensions in FloatTextureData .
add a synchronized method to fileserver . write ( filename , value ) and closefile ( ) to ensure thread safety
added null check for ` jarStream ` and ` jarStream ` before setting the output directory to avoid potential NullPointerExceptions when ` outputDirectory `
updated SQLiteConnection to use PerfStatsCollector for performance tracking to improve performance tracking during sqlite execution
replaced instances of ` getCurrentJDKTool ( " jmap " ) ` with ` getTestJDKTool ( " jmap "
add a new enum resourceerrorhandling to provide a mechanism for handling resource errors in the geoserver configuration
added a check for buffer size in RAMInputStream and created a test for EOFException in TestRAMDirectory to ensure bufferPosition does not exceed buffer
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 40615 : add
updated ForkJoinPool and ForkJoinWorkerThread constructors to include an innocuous parameter and added a new AccessControlContext class for permission checks to enhance flexibility in
updated the cache check constants and added logging for HardRef cache checks to improve memory management and enhance debugging capabilities
hbase - 24286 testsplittransaction . testsplittransaction do n ' t use tabledesc . gettabledesc ( )
added null check for currentSelectionArea before processing to avoid potential NullPointerExceptions when currentSelectionArea is null
added a new test method ` testJaasDemo ` to ` DemoModulesTests ` for testing Jetty ' s demo functionality to ensure correct
added a check for spanX and spanY in the canCreateFolder method to ensure that the folder creation only occurs when spanX and spanY
refactor CacheOffHeap class implementation to improve performance and maintainability of caching mechanisms
add error message when create a table with more than one table
added a warning log for extra XML gid values in TiledLoader . java to inform users that extra XML gid values are corrupted to prevent potential
added synchronized keyword to the setWorkingSet method to ensure thread safety when modifying the setWorkingSet method
added a new file ` Solution . java ` containing a solution that calculates the number of final steps to account for 0 starting stone to ensure correct
add addresschecker . isinvalidaddress ( ) method to trackerrequestprocessor
fix a typo in the logic of gettranslucentMovingBlock ( )
add a new method ` removeTag ` to the ` guiconfigentries ` class to make it easy to understand
updated thingTypeVersion from int to String and modified property handling in ModuleType , Capability , NetatmoThingTypeProvider , and Netat
added null check for recieptents before sending messages in JavaSEPort . java to avoid potential NullPointerExceptions when recieptents is
refactor isSingle method to use a dedicated isSingle method to improve code readability and maintainability by reducing duplication
[ hotfix ] [ docker - image ] add failfast flag to dockerclientfactory . client ( )
added ` resourcesMode ` parameter to ` AndroidMetadata ` and updated ` AndroidMetadata ` constructor to include ` resourcesMode ` to enhance metadata tracking by
replaced ` DateUtils . truncate ` with ` Calendar . getInstance ( ) ` for setting date values to improve code readability and maintainability by using
replaced ` gradleImporter . importProject ( projectFile ) ` with ` gradleImporter . importProjectCore ( projectFile ) ` in ` OpenAndroid
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve user feedback during command execution
refactor TreeMap class implementation to improve code readability and maintainability
add option to enable async stack trace in cn and display
added a method to set the glow color in BubbleTextView and updated Folder to use it in BubbleTextView and Folder to enable customization of
added style classes for link and description in LinkedFilesEditor . java to enhance the styling of text elements in the editor
updated the return statement in AbstractJdbc2ResultSetMetaData . java and added a new test method for class matching in ResultSetMetaDataTest . java to ensure
removed unnecessary try - finally block in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify code and improve readability
added a null check for _ info before checking if the status is upgrading to prevent potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a String provider to enable the creation of ShadowLocation instances with a specified provider
added a condition to check if the deviceRam is less than 2048 in LauncherPreferenceJavaFragment . java to ensure maxRAM does not
update localmapstatsprovider to use localmapservice . getstatsofnodataincludedmaps instead of localmapstatsprovider .
add log to fileprofileactivator to make it easy to debug
updated error message from " noname1234 " to " invalid _ " in PdfWriter . java to clarify the purpose of the message related to invalid
fix copy of role from list to set
updated return value from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to ensure proper handling
added unit tests for the delete operation in DashboardUserMapperTest . java to ensure correct behavior of delete operations in the DashboardUserMapperTest
rename recipient to primaryparticipant in instructorresultspagedata to avoid confusion
[ gr - 23232 ] fix auto deref handle for address .
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size for better resource management
add ` ` headless ' ' and ` ` headless ' ' option to terasology
added functionality to update the action bar title based on old interactions to enhance user experience by providing clearer feedback on new interactions
updated CommandLineParserTest . java with new test cases to improve test coverage for command line parsing functionality
added interpolators for smoother transitions in QuickstepAtomicAnimationFactory and PortraitStatesTouchController to improve animation responsiveness during transitions
updated the method call from ` Character : : toUpperCase ` to ` javaNameFromExternal ` in ` DefaultJavaLanguageNamer . java ` to
removed unused native methods from CWrapper . java to streamline the codebase by eliminating unused native methods
added constant handling logic in Checker . java and created a new ValueTest . java file with unit tests for constant values to ensure that non -
refactor MontgomeryMultiplyTest , MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code organization and maintainability
removed null check for constructors in PojoUtils . java to simplify the code by eliminating unnecessary null checks
refactor JiraConfiguration class to improve code organization to enhance maintainability and readability of the code
updated error and coverage error message formatting in UploadBuild . java to improve code readability and maintainability
updated bounds calculations in DeviceProfile . java to use getSearchBarTopOffset ( ) instead of edgeMarginPx to ensure proper layout positioning
[ java ] do n ' t call shutdown ( ) if idletimeout be 0 .
refactor OverviewCommandHelper to run on the UI thread instead of using a lambda expression to improve code readability and maintainability by reducing boil
removed unused imports and methods from AppleSource . java to streamline code and improve readability by eliminating unnecessary dependencies
increased the wait time from 220000 to 320000 in TestSimTriggerIntegration . java to allow more time for the trigger to complete successfully
[ java ] use positioncount instead of outputpositioncount in FloatSelectiveStreamReader . java
refactor the logic for handling the startNode and bestSoFar array in AbstractNodeCostSearch . java to improve accuracy of node cost comparisons
added a condition to skip processing for Form , Dialog , and Dialog components in ResourceEditorView . java to ensure compatibility with additional UI component types
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java ` to
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is initialized before use to avoid potential null pointer exceptions
added unit tests for ` imeiForSlot ` and ` imid ` methods in ` ShadowTelephonyManagerTest ` and ` Shadow
updated debug methods in SimpleHostRoutingFilter to use RequestContext . getCurrentContext ( ) . getRouteHost ( ) . getHost ( ) . getHost ( )
added destory ( ) method and close ( ) methods to multiple classes to ensure proper resource management and prevent memory leaks
[ rocketmq - 4071 ] fix test failure in normalmessagesendandrecipeit . testsynsendmessage ( )
replaced ` Charset . forName ( " UTF - 8 " ) ` with ` StandardCharsets . UTF _ 8 ` in ` StatVisualizer . java `
hbase - 26464 addendum add test for bulkload in hbaseregion . bulkload
added a ` commission ` parameter to the ` DefaultWithdrawFundsParams ` class and updated related parameters in ` RippleWithdrawFun
removed the import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve readability
replaced MorphlineRuntimeException with SolrServerException in LoadSolrBuilder , SolrLocator , and SolrLocator classes to simplify exception handling by eliminating unnecessary repetition
added validation for abstract methods and improved error handling in Java2TypeScriptTranslator . java to ensure proper method invocation and provide clearer error messages for
replaced direct disk sweep with a try - with - resources statement in TestFileSessions . java to ensure proper resource management and avoid potential memory leak
added Serializable interface to MutableColumnDataType and refactored entity mapping in Entities and Entities classes to improve serialization handling and ensure consistent serialization behavior
refactor tests for SubExactLConstantTest and SubExactLNonConstantTest to improve code clarity and maintainability
added null check for claimRequestString before parsing to avoid potential NullPointerExceptions when claimRequestString is null
updated imports and refactored the constructor of HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve code
updated the ` processTypeHintForNestedDocuments ` method to handle null source and added unit tests for null values in ` UpdateMapperUnitTests
replaced ` mcr ` with ` coreStatus ` in ` CollectionsAPIDistributedZkTest ` and added a new method ` getCoreStatus `
[ java ] initialize transformers and locators list with empty list instead of empty list
fix typo in exception message in abstractquerydslprocessor
add getcallstack ( ) and getcallstack ( ) method to PEgraphdecoder . java
rename methods from ` setOf ` to ` copiedSetOf ` in ` RestTemplateBuilder . java ` to improve clarity and consistency in naming convention
camel - 16297 : camel - mail - make it easy to use identityhashcode . getidentityhashcode .
added null check for originaldestination in connection factory and prefetch subscription
updated the return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure that the identifier name has a valid property name
add WaveGeneratorActivity to handle wave generator activities in the application to enhance user experience by providing a wave generator activity
added logging for missing sheets in KeyedProperties and SheetOverlaysManager to improve error handling and provide clearer logging for missing sheets
fix ( kubernetes - client ) : add test for execlistener and execlistener
added a new test method ` testNoWriter ` to ` TestReplicationHandler . java ` to ensure that the SolrCore . initIndex detects
do n ' t call super . dispatchmethodkernelokra ( range , args ) if it do n ' t exist
updated DefaultDnsClient , DefaultDnsClient , DefaultDnsClient , DefaultMxRecord , and DefaultMxRecord classes to implement Comparable < M
refactor thread creation to use a privileged action for privileged actions in XToolkit . java to improve code readability and maintainability by using a more
added validation for SelectBox in SelectBox . java and selected Linux6 in UITest . java to ensure that the SelectBox is properly validated and
replaced IllegalStateException with Collector . printStackTrace ( e ) in JobGlobalListener . java to improve error handling by logging stack traces instead of throwing an
updated the ` createState ` method to include a ` parentSplit ` parameter and modified related logic in ` FlowBuilder ` and ` SplitState `
changed the ` connectionState ` variable to be volatile and modified the connection state retrieval method to improve thread safety and reduce unnecessary method calls
[ java ] increase polling period from 10 to 1000 in abstractpollingendpoint .
replace ` ByteBuffer ` with ` long ` in ` MemoryStack ` and ` MemoryUtil ` methods to use ` MemoryUtil ` instead of ` ByteBuffer
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting and provide
[ java ] fix unusedmodifier rule for enums in enums .
replaced lambda expressions with method references in multiple Java files to improve code readability and reduce boilerplate code
[ hotfix ] [ test ] fix test failure in abstracthttpclientservertest
[ hotfix ] [ runtime ] improve error message when transformation service be not available
updated variable names from ` userPermissions ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and consistency in
replace EqualsBuilder with EqualsBuilder for equality checks in Point . java to improve readability and maintainability of the code
added null check for outputRoot before processing to avoid potential NullPointerExceptions when outputRoot is null
pdfbox - 4071 : add a annotationfilter interface to make it easy to use .
refactor StackTraceCleaner class to improve stack trace cleaning functionality to enhance code readability and maintainability
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure proper content type is set based on path information
hhh - 14258 skip test for sqlserver and sqlserver
updated the ` upgrade ` method to use ` slotSize ` instead of ` slotValue ` and added null and empty checks for ` versionValue `
added ` getStats ( ) ` method to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` DocBuilder ` classes to provide
[ kerberos ] add longpolling option to the kieclient to make it easy to configure the kerberos client
updated touch handling in PagedView , BaseOverview , and LauncherInstrumentation to use scroll methods instead of fling methods to improve responsiveness
updated the initialization of unlocks in UI . java and added a button in PausedDialog . java to enhance user experience by providing access to unlock
added a call to clear drops in PlayerEventListener . java to ensure that drops are cleared before proceeding with further operations
added a static final string DEFAULT _ PARAM to the StreamResult class to provide a default value for the input name in the output stream processing
removed MalformedURLException from the test method signature in AttributeNormalizerTest . java to simplify error handling by removing unnecessary MalformedURLException
updated printlnBoth method to include chunk type in TsFileSketchTool . java and modified strBuffer flip method in LocalTsFileInput .
added handling for " lib - Swift . h " headers in UmbrellaHeader . java and updated test assertions in ProjectGeneratorTest . java
corrected the spelling of " onHttpHeaderError " to " onHttpHeaderError " to improve code readability and maintainability
added a call to encode ( ) in RequestPlugin . java to ensure proper encoding of request data
add support for db2 in rolap native query
added validation for null or blank passwords in LdapAuthenticationProviderImpl and created a new test class for LDAP authentication to ensure that invalid LDAP users are
pdfbox - 4892 : remove unnecessary integer . tostring ( ) call in pdfbox - 4892
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure complexWriters is cleared when conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple classes to suppress warnings related to serialization
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and added a null check for ` classInfo ` to enhance encap
added error handling for " _ errors " in ErrorResponseException . java and modified the return statement in ErrorResponseException . java to improve error reporting
added a constructor to EventSourcingRepository that initializes the eventStore and snapshotTriggerDefinition to ensure that the eventStore is properly instantiated and
refactor variable declarations in ` Attr . java ` to use ` BinaryNode . lhs ( ) ` instead of ` BinaryNode . lhs ( )
refactor search cursor handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to use string split instead of string manipulation to improve
[ hotfix ] add support for page _ ON and page _ ON command .
updated planar configuration to use TIFFBaseline . PLANAR _ CONFIGURATION _ CHUNKY instead of TIFFExtension . PLANAR
added a call to ` is . close ( ) ` in ` ItemListTag . java ` to ensure proper resource management and prevent potential memory leak
add a new utility class ` AverageUtil ` and modified ` TileLaserTableBase ` and ` TileLaserTableBase ` to
added new classes ` SigInt ` , ` SigIntBarrier ` , and ` SigIntBarrier ` , to implement a mechanism for
refactor graph model handling in ExporterGEXF to use HierarchicalGraph instead of GraphModel to improve code readability and maintainability by
replaced byte array with Text class in TCTLSeparatedProtocol . java and updated related methods to use Text instead of byte to improve performance and
initialize rubricanswerdetails only if there be an invalid index
replaced DB2Database with CatalogAndSchema . ORIGINAL _ CASE in CatalogComparator . java to improve code readability and maintainability by
[ java ] fix browsermobproxytest . testbrowsermobproxytest . testbrowsermobproxy
fix ( core ) : use integer . tostring ( ) instead of string . format ( )
removed redundant calls to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code readability and maintainability
[ hotfix ] [ javadoc ] fix typo in trufflestring javadoc
[ hotfix ] [ table - common ] use tuple2 instead of tuple3 in graph .
refactor multiple Java assertion classes for consistency and clarity to improve code maintainability and readability
deleted the Class  . java file and added a new DiacriticTest . java file to implement a test for Mac OS X compatibility
[ java ] make clustermembershiptest more robust against concurrent test failure
added exception handling for WorkspaceReader and modified condition checks in DefaultMaven . java and DefaultGraphBuilder . java to improve robustness of workspace reader management
replaced ` startsWith ( ) ` with ` equals ( uri . getScheme ( ) ) ` in ` ServiceRegistryConfig . java ` and added new import
refactor Mockito class methods for improved readability to enhance maintainability and facilitate future updates
updated the parameter name from ' url ' to ' String ' in Jdbc3Connection constructor to ensure consistency with Java naming conventions
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure thread safety when accessing the servlet instance
[ binance ] add deltaservertime ( ) method to BinanceExchange and BinanceBaseService to track expire time
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) Servlets For JavaServer Pages ( tm )
added null check for the form before deregistering the animated form to prevent potential NullPointerExceptions when the form is not initialized
refactor ` ShadowBitmapFactory ` and ` ShadowCanvas ` classes to accept ` BitmapFactory . Options ` instead of ` BitmapFactory . Options `
[ java ] use configuration . numberofmessages ( ) instead of hardcoded 10 to 10
added click functionality to the TimelineArrayAdapter to enhance user interaction by allowing tweets to be displayed in the UI
added " text " to the list of supported data types in PostgresDatabase and updated related logic in NumberType to enhance data type handling and ensure
fix race condition in entryprocessorbouncingnodestest ( # 3683 )
updated state checks from " isHardDeletableState ( ) " to " isRemovableState ( ) " in Ambari
added a null check for the bridge UID before adding results in CreateBridgeServlet . java and updated test cases in CreateBridgeServletTest . java to
[ hotfix ] make crawlserver . updaterobots ( ) synchronized
replaced direct calls to getDisplayName ( ) with a variable dName in multiple files to improve code readability and prevent potential NullPointerExceptions
added default shader functionality to SpriteBatch and SpriteBatch classes to enhance flexibility in shader creation by allowing custom shaders
added properties for " - c synchronous _ commit = on " and " - c synchronous _ commit = on " in TestUtil . java
added elementTypeCoercer to the SortedSetTypeCoercer class and modified the fill method in SortedSetTypeCoercer to
updated confirmation messages in RemoveFileDialogFragment . java and RemoveFilesDialogFragment . java to improve clarity and functionality of confirmation messages based on file presence
updated the condition in URLPathEncoder to check for non - 256 characters before accessing the safe array to prevent potential ArrayIndexOutOfBoundsException when accessing
updated IP address handling in UserContext . java to use a dynamic port instead of a hardcoded value to improve code readability and maintainability
[ hotfix ] [ test ] fix test failure in hostresourceprovidertest
[ hotfix ] [ yarn ] remove log dependency from yarnentrypointutils
add init ( ) and repaint ( ) method so that it do n ' t need to be final .
removed the ShadowHtml class from RobolectricBase . java and updated test assertions in HtmlTest . java to streamline the codebase by
added a new class StarTreeRecordStoreFactoryBlackHoleImpl to handle StarTreeRecordStore creation with dimension and metric names to facilitate the creation of
replaced instances of ` logger ` with ` h3Logger ` and ` quicLogger ` in ` HttpClientLoadTest . java ` to improve logging
changed the visibility of the ` addListeners ` method from private to package - private in ` MockSettingsImpl . java ` and added a new test
refactor StateHandleStore class implementation to improve code readability and maintainability
updated import statements from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty . http . security .
improve error message when there be no section in the student
use try - with - resources to prevent resource leak
camel - 11245 - camel - test : add port not available handler to camel - test - java
added BuildTarget parameter to multiple classes and updated related methods in JarBuildConfigJavaLibrary , DefaultJavaLibraryRulesFactory , and JarBuildStepsFactory
corrected a typo in the error message from " validating - cerficates " to " validating - cerficate
bug 12225 : remove unnecessary method getpagesizeval ( ) from listcapacity api
added a new case CLOSED in IteratingCallback . java to return early if the callback is closed
added a boolean field ` isAuthorized ` to the ` AccessControlContext ` class and modified its initialization in ` AccessControlContext ` and ` ProtectionDomain `
updated OSGiDeployer . java to check for non - AbstractOSGiApp instances before processing deployment events to ensure proper handling of binding
added handling for " tiff " MIME type in DLNAMediaInfo . java to ensure proper MIME type handling for tiff files
[ hotfix ] [ runtime ] fix npe in optimizedcalltarget
added a new file ` CubocDesktop . java ` and modified multiple loops in ` Map . java ` , ` MapRenderer . java
updated file paths in PolicyMonitorTest . java to use ` File ` instead of ` MavenTestingUtils . getTestResourceDir ( ) `
added a call to removeAllFiles ( ) in TrashbinActivity . java to clean up the trashbin list adapter
updated the import statement from ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) . allConnectors ( ) ` to `
make checkglobalvariablestoragenode . execute ( ) return a boolean instead of void
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and modified the ` dispatchUserEvent ` method to include ` Intent `
updated the calculation of myMaxBurnAmount to use a constant MAX _ BURN _ LOWER _ FLOOR instead of a hardcode
updated import statements in UniqueConstraintSnapshotGeneratorSnowflake . java and added a snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake
updated the SQL select statement handling in DMLTransformer . java to check for empty insertStatementBuilder before adding it to the string to improve clarity and
updated test method names from " pgtUrl " to " https " in ServiceValidateControllerTests . java to improve clarity and accuracy of service ticket
added a ` isStatement ` parameter to the ` getDefaultValidFunctionName ` method and modified the ` getDefaultValidFunctionName ` method to include a ` hide
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix compile error in jdk8
do n ' t send hole punch packet if we do n ' t have a quality control .
added a new test method ` testUpdateWithPGobject ` to ` ResultSetTest . java ` to verify the update functionality of PG objects in Post
updated password reset endpoints to handle non - existent emails and added a test for non - UAA origin to ensure that password reset functionality works correctly
replaced the method of obtaining the XML element from getChildNodes ( ) to getDocumentElement ( ) to simplify the code and improve readability by using a more
refactor Cache class for improved performance to enhance performance and maintainability of caching mechanisms
updated variable names from ` timeInSec ` to ` timeMillis ` in ` Isochrone . java ` and ` SPTResource .
allow light relay to be bind if it ' s not valid
added a new ` Chainer ` class and updated the ` contains ` method in ` CollectionSubject ` , ` CollectionTest ` , and ` My
refactor Model class to improve code organization to enhance maintainability and readability of the code
updated recordedTime calculation in Locations . java to include a new integer value of 619315200000L to ensure accurate counting of 1024 weeks
added a condition to resize the status based on the terminal type to ensure the status is resized when the terminal is Windows
added a condition to check if the host version state is not required before setting the host version in UpdateDesiredStackAction . java to ensure that the
[ java ] move j2cl / java _ src to test / integration / integration / j2cl / j2cl / j2cl
change settingbuilder advice to use linkedhashset instead of hashset .
removed unnecessary try - catch block around Operation object conversion to simplify code and improve readability by eliminating unnecessary try - catch blocks
updated the order of method calls in PluginHelper . java for consistency to improve code readability and maintainability
updated the thread pool name from " commitlog _ archiver " to " commitlogArchiver " in CommitLogArchiver . java to improve
added connection calls to CloudSolrClient and created a test for uploading configurations in TestCloudSolrClientConnections to ensure that CloudSolrClient upload
[ java ] synchronize on allbindings to avoid concurrentmodificationexception .
refactor file handling in RobolectricTestRunner and ShadowContext to use a dedicated method for clearing files and cache to improve code maintainability and
added TreeMap and TreeMap imports in SecureXStream . java and XStreamPersisterTest . java to ensure consistent ordering and ordering of elements in the
chore ( kfs ) : add ` ` kmodulemodel ' ' to internalkiebuilder , and add ` ` kmodulemodel ' '
updated block event handling logic in BlockEventListener . java to check for Farmland farmland and newFarmland types to improve accuracy of harvesting and
added a default method ` getLocalIp ( ) ` to the ` FinishedSpan ` class to provide a default implementation of ` getLocalIp ( )
updated JDBCStepExecutionDao to use SerializationUtils for deserialization and modified skip limit values in tests to ensure correct handling of integer values and improve test coverage
remove              
[ pytorch ] add cpython / cpython / mkldnn folder to the python classpath
refactor PluginTab to use a new refresh method and add a button for refreshing plugins to improve code readability and maintainability by reducing redundancy
changed log level from info to warn for history file reloading and trimming history files to provide more granular logging for better debugging
vmware : fix npe in vmwarestorageprocessor when vm be not find
[ sftp ] allow sftp server to be stop by default .
refactor ExperimentalMockitoJUnitRunner to improve code organization to enhance maintainability and readability of the code
updated GpsSettingsActivity and Session classes to use Utilities . GetBuildSerial ( ) instead of Build . SERIAL to improve code maintainability and
refactor SwapGBuffers class implementation to improve performance and readability of the code
added null checks for spatial and skeletonControl in AnimControl . java to ensure proper control management and prevent potential NullPointerExceptions
added a new test method ` setSmartReplies ` to ` ShadowRankingTest ` and modified ` ReflectionHelpers ` to use ` Reflector
[ java ] do n ' t add a segment file to the archive directory if it do n ' t start with - suffix .
[ hotfix ] [ runtime ] remove unnecessary call to resourceloader . getConfigdir ( )
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to address potential null pointer exceptions
update ASM API version from ASM7 to ASM9 to ensure compatibility with the latest ASM API version
updated exception handling in RecommenderMapper and CacheTest to throw TasteException instead of returning null to improve error handling and provide clearer
added clientInfo handling in SurrogateAuthenticationEventListenerTests to ensure proper initialization of client information during test execution
added a new variable ` isUserView ` to ` CardPresenter . java ` to track the user view state of the card presenter
updated method names for clarity and consistency across multiple classes to improve code readability and maintainability
refactor metric creation to use a variable for better readability to improve code readability and maintainability by reducing redundancy
added a new module - info . java file for the SQLite connector to define module exports and dependencies for the Speedment framework
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for web type " new " and " api " in permissionsManager instantiation to simplify the code by eliminating unnecessary conditions
refactor DateParser and TestDateParser classes for improved date parsing functionality to enhance code readability and maintainability
added a method to get the depth of the SpringLoadedState class to provide a way to calculate the depth of the application
replaced manual array copying with a constant MIN _ SIZE in BinaryDecoder . java to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ javadoc ] fix typo in executiongraph
added a method to remove a notification from NotificationActivity and removed swipe layout components from NotificationRenderer to streamline notification handling and improve user experience
updated exception handling in DefaultExceptionConverter to handle null invocations instead of throwing an exception to improve robustness by providing a clearer error message when
[ hotfix ] [ runtime ] fix npe in glowcontainer . lock ( )
replaced MethodHandle with reflection for setting the target field in ProxyMaker . java to simplify method retrieval and improve code readability
update bitand test to use integer . intValue ( ) instead of int
replaced StringUtils . join with StringUtils . join for baseSubject in BaseEmailContentFormatter . java to simplify string concatenation for better readability and maintainability
added a simple panel for layout management in LayoutPanel . java to enhance the user interface by providing a simple panel for better layout management
added a null location check in ServerCallable to prevent potential NullPointerExceptions when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest files to improve code organization and maintainability
added a null check for key parameters before generating public keys in BasicChecker . java to prevent NullPointerExceptions when the key parameters are missing
refactor MediaTypeRequestMatcher to use a new method ` shouldIgnore ` to improve code readability and maintainability by encapsulating the logic
updated logging statements to include taskAttemptId and taskAttemptId in LlapBaseInputFormat . java to improve clarity of log messages for better debugging and
add spring . main . allow - bean - definition - overriding to eventservicetests
added a null check before closing the indexReader to prevent potential NullPointerException when indexReader is not initialized
updated package declarations for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , BTCMarketsStreamingExchange , and BTC
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to verify rendering behavior of code blocks
added a new file ` CompatibilityTest . java ` containing tests for internal DTD and property file handling to ensure compatibility of internal DTD and
added new modules ` VariantComponentsModule ` , ` PushUtils ` , and ` SecurityUtils ` to provide utility classes for push registration and security
refactor replica calculations in TableRebalancer and add new test cases in TableRebalancerTest to improve code readability and ensure accurate replica
bump version from 2.16 . 1 to 2.17 . 0 for release
[ log4j2 - 1379 ] fix test failure on window
[ java ] throw ajpioexception if ajpprocessor . readtimeout be set to false if ajpprocessor . readtimeout
set default values for friction , restitution , and sensor to zero to ensure default values are set for proper initialization
updated method signatures to include ` AnomalyFunctionSpecMap ` instead of ` fetchSaclingFactors ` across multiple classes to enhance functionality
added shell command execution for wait for broadcast idle in LauncherInstrumentation . java to improve error handling and provide clearer logging during broadcast idle operations
added unit tests for font and link tags in ResourcesTest . java and modified the span creation in ResStringPool . java to improve test coverage for
update the source path for GuiStatsComponent from ` src _ work / / src _ work / / src _ work / / src _ work /
added permission request handling for phone calls in Launcher . java to enhance user experience by allowing users to request phone calls without requiring permission
updated return values in SimulationPanel , SimulationDialog , BasicEventSimulationEngine , and BasicEventSimulationEngine to include flightData parameter to enhance
updated GeoPointDistanceQuery , GeoPointInBBoxQuery , GeoPointInBBoxQuery , and GeoPointInBBoxQuery classes to
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to check if the Docker client is available to ensure thread safety
removed the static final string VPX from CodecTypes . java to streamline code by eliminating unnecessary constant
added a coordinatorAddress parameter to DistBuildFactory and DistBuildRunCommand classes and updated DistBuildRunCommand and AbstractDistBuildExecutor
added a new method ` match ` in ` FsUtils ` and refactored timer handling in ` WrapTimer ` to improve path matching functionality
added a null check before adding label values in TestTaxonomyFacetSumValueSource . java to avoid adding empty values to the labelValues list
ggb - 221 : fix npe in getboolean ( ) when getboolean ( ) return null
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline the test execution process
added functionality to set the materialization time in ObjectStore and created a test for update creation metadata in TestObjectStore to ensure correct handling of material
added error handling for missing native dependency in VoskSTTService . java to improve robustness by logging warnings when the native dependency is missing
fix a bug in the jms sampler and add response code to the response code .
refactor conditional logic in GlyphView . java for better readability to improve code clarity and maintainability
refactor byte reading logic in RCFile . java to use a buffer for better memory management to improve performance by reducing the number of read operations
added @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address the issue identified in SOLR - 13028
refactor ToePool to use a LinkedList for managing steps and processors to improve code readability and maintainability by utilizing a centralized LinkedList
removed the ` setToSortedDataFlavorArray ` method and its usage in ` ClipboardTransferable ` , ` DataTransferer ` , and
hbase - 24286 add - infoport option to testThriftservercmdline
added a check for EOF in RegExpScanner . java to ensure proper handling of EOF scenarios in the regex scanning process
added null checks for metrics and timers in Debug . java to ensure metrics and timers are only processed when it is not already present
added null check for getnickname ( ) in chatroomjobberimpl to avoid npe
do n ' t print error message when file name be null or empty .
refactor the refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve readability and maintainability of the error message
[ hotfix ] [ yarn - spring - boot ] do n ' t clear the job registry at the high availability service
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a mechanism for retrieving the hardware
added SSL URI for BTCChinaMarketDataService initialization in BTCChinaExchange . java to ensure proper SSL configuration for the BTCChina exchange
update cpdtask to use pathchecker instead of hardcoded file path
added new classes ` OauthController ` , ` Oauth2PluginTest ` , and ` Oauth2PluginTest ` to implement and test
refactor SemgrexPattern class to improve code organization to enhance maintainability and readability of the code
refactor stream and entrystream methods in AbstractStreamEx , StreamEx , StreamEx , StreamEx , and EntryStream classes to streamline the
improve error message in restcodec and exceptiontoproducerresponseconverters
updated the ` shouldComeFromThisClassLoader ` condition to include ` org . junit ` in the ` RobolectricClassLoader ` check to
changed the condition from checking if the sdp encoding is not present in MediaControl . java to ensure that only valid audio encodings are processed
updated the type of ` generateDatabaseFunction ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator ` and added
update normalizedmultivaluemapstest . teststation3gml32 ( ) to check for station .
added a boolean variable ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` , ` UaaHttpRequestUtilsTest ` , and
added a check for configuration before expanding regex mapping in ColumnarDataSource and modified return statements in RowProcessor and RowProcessor classes to ensure proper handling of
updated the ` CustomSeekProvider ` class to use ` SEEK _ LENGTH ` instead of ` splitIntoThirtyParts ` to improve
added XLCDCommunicator , XLCDController , and XLCDController classes , and refactored firmware handling in FirmwareUtils to
[ drools - 4071 ] make xmlmoduletransformer . loadschema ( string ) more generic .
updated condition checks in EventQuery001 , EventQuery002 , EventQuery003 , EventQuery002 , EventQuery003 , and
replaced multiple calls to ` awaitThreadState ` with a constant ` WAIT _ FOR _ TEST _ THREADS _ TIMEOUT ` to improve
refactor ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and add a new test class ` DelegatingMethodTest ` to
updated energy cost constants from 20000 to 10000 in EnergyCost . java to optimize resource allocation for better performance
added exception handling to the command method in DownloadPlugins . java to ensure proper handling of ConfigurationException during command execution
deleted the SpringTransactionHooks . java file and replaced it with AbstractSpringTransactionHooks in SpringTransactionHooksTest . java to streamline transaction management and
refactor AbstractClassAssert to improve code structure to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValue . java ` that tests the functionality of the ` GetUninitializedStringValue ` class to demonstrate
added ` providedDeps ` handling to ` AndroidLibraryDescription ` , ` AndroidLibraryDescription ` , ` GraphEnhancementQueryEnvironment ` , and `
added a new device flag ` ENABLE _ KEYBOARD _ TRANSITION _ SYNC ` to the ` FeatureFlags ` class to
replaced the system anomaly message retrieval with a static boolean variable ` sSavedBugreport ` to simplify the code and improve performance by avoiding unnecessary
added a constant for the " cinepack " format in FormatConfiguration and updated LibMediaInfoParser to utilize it to support the Cine
added camera bobbing animation options and updated rotation and poke logic in the Player class to improve user experience by allowing camera bobbing to be smooth
chore : replace data . describe ( ) with digest . tostring ( ) in casblobuploader
deleted the HSQLDBServerFilesFilter . java file and modified the file filtering logic in TestUtility . java to streamline the code by eliminating
walletappkit : do n ' t restore from seed when restore from key be null .
updated the method for retrieving the latest API data version from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( )
added an override for the visitMethodInvocation method in HasTypes . java to ensure proper handling of method invocations based on type information
replaced hardcoded values with a constant NUM _ VALUES in AmbientCubemap . java to improve code readability and maintainability by using a
[ netbeans - 4071 ] add a new profiler _ mode _ reset option to the profiler ' s description
added checks for ` value ` in ` GenericUDFMask ` , ` GenericUDFMask ` , and ` GenericUDFFirstN `
refactored test to use temporaryfolder instead of file . deleterecursive ( )
add itemstack . isitemdamageable ( ) and itemstack . gethassubstitutions ( ) method to make it easy
fix line width for mc - 167447
eranmes : fix firefox ' s startup page for the firefox driver
added a condition to check for CONNECT , GET , and HTTP response headers in Http1xClientConnection . java to ensure proper handling of connection
updated the task from " compile " to " process - classes " in JoobyMojo . java to align task execution with the new naming convention
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 1 : do n ' t
added a check for aggregate function suffix before processing metrics in AmbariMetaInfo . java to ensure metrics are only added when aggregate function suffix is
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to return mCurrentFullscreenParams instead of a hardcoded
added a new file ` Solution . java ` with a algorithm to calculate and print frequencies to demonstrate the number of frequencies used in
set the SocketChannel variable to null in ClusteredAgentManagerImpl . java to ensure proper initialization of SocketChannel to avoid potential null pointer exceptions
refactor MutisignOperationerGodicTest . java for improved test coverage to enhance reliability and maintainability of the test cases
added exception handling for NoSuchElementException in StaxEventItemReader . java and created a test for restarting at an end of a file to improve
replaced specific imports with a wildcard import and added null check for qualifiedResourceName in ShadowTextView and TestAttributeSet classes to improve code readability and
updated import statements from ` shaded . json ` to ` net . minidev . json ` in multiple test files to ensure compatibility with the latest
added support for " AIX " family in OS . java and updated PKCS11Test . java to set the family to " aix
api : use router . getid ( ) instead of privateipaddress in virtualnetworkappliancemanagerimpl
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to provide a way to invoke without blocking with result
removed the PresenceMessageComboTests . java file to remove unused test code to streamline the codebase
replaced manual rounding with Math . round for calculations in PortraitPagedViewHandler . java to improve code readability and performance by using Math .
updated method parameters in TestClusterDumper . java for consistency to improve code readability and maintainability
updated the calculation of ClassSize in KeyValue . java to adjust the alignment logic to accommodate an additional array size to ensure proper alignment of the row cache
camel - 14263 : camel - core - add type converter to camel context to avoid npe
added handling for ConditionalTask instances in SparkCrossProductCheck . java to enable processing of ConditionalTask instances in the SparkCrossProductCheck class
refactor action handling in Launcher , LauncherModel , and LauncherModel classes to improve code readability and maintainability by reducing redundancy
updated the condition for handling JSON responses in LoginInfoEndpoint . java and added unit tests for active Oauth providers in LoginInfoEndpointTests . java
added a ` toDescriptiveString ( ) ` method to ` AssignmentManager ` to provide detailed state and server information for debugging purposes
renamed ` message ` to ` result ` in ` HuobiAccountInfo ` and updated related getter methods in ` HuobiAccountServiceRaw
added support for reserved words in MariaDBDatabase and a corresponding test in AddColumnGeneratorTest to ensure correct SQL generation for period columns in MariaDB
[ beam - 12265 ] add e . g . localhost and e . g . localhost to the documentation of the configuring portable
added new error messages for Android 7 . 1 - launcher shortcuts and bug fixes in VersionChangeLogs . java to provide clearer guidance for users
updated the access modifier of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT and TestUtil to allow external access to
removed debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] use aeronclientinvoker . invoke ( ) instead of aeronclient ( ) in archive and sequenceragent
updated validation logic for implicit lambda parameters in Attr . java and added a new class NoWarnOnImplicitParams . java with a test for raw merging
refactor ` hideMenuItem ` methods in ` FileMenuFilter ` and ` FileDetailFragment ` classes to improve code readability and maintainability by
added BTC _ deposit , reserved0 , credit , and reserved8 to BTCETransHistoryResult . java and updated type assertions in BTCE
replace List with Set for series and exceptions in RetryFilterFunctions . java to improve performance by using a more efficient data structure
added @ Deprecated annotation to PluginLoader . java to indicate that the class is outdated and should no longer be used
added a check for ` getEndTime ( ) ` in ` LastQueryExecutor . java ` and a new test method ` IoTDBLastIT
updated the formatting of the request string in HttpResponse . java to improve code readability and maintain consistency
set slf4j . simplelogger . log . org . slf4j . simplelogger . log . org . apache . http . wire to
added a method to set the safe area of the title bar in the Sheet class to enhance the visual appearance of the title bar
modified the loop condition in OverflowSeriesImpl . java to iterate over all TimeSeriesChunkMetaDataList to improve performance by reducing the number of iterations
added SQL statement parsing and deparsing in AlterTest . java to ensure correct parsing and deparsing of SQL statements in the ALTER TABLE
[ hotfix ] make abstracthikariconfig . copystate public
fixed - redissonexecutorservice . getremotepromise ( ) return a completableFuture ( ) to avoid race condition
add a constant for suffix _ split _ file in filelister and filelister
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - b
corrected formatting of conditional statements in CompareFunctionsProcessor . java to improve code readability and maintain consistency
[ hotfix ] [ table - common ] reducescopeforlimitedspace should not throw exception if there be enough space for compaction
removed redundant ` toString ( ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to
added state validation in AbsSwipeUpHandler and removed task stack listener in TaskAnimationManager to ensure proper cleanup of task stack listeners when the state is
added ` getLockTimestamp ( ) ` and ` setLockTimestamp ( ) ` methods to ` AppPreferences ` , ` PreferenceManager ` , and
refactor artist retrieval logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added a null check for remoteMessage before accessing its data to avoid potential NullPointerExceptions when remoteMessage is null
[ java ] add null check for splitinfo and add test for zero byte input
added support for Windows key store in HttpsConnectorFactory to ensure compatibility with Windows - specific key store types
increased the default check timeout from 400 to 1 _ 000 in RestTemplateSenderTest , WebClientSenderTests , and WebClientSenderTests to
added a condition to ignore the FILE _ NOT _ FOUND result code in FileSyncAdapter . java to ensure that the remote folder is not found
added animate properties and methods to the Slider class for improved animation control to enhance the control over animation behavior in the slider
updated assertions in LineSeparatorProcessorTest from ` eol ` to ` lineSeparator _ cu ` in ` LineSeparatorProcessorTest . java ` to
increased maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to optimize resource usage for better performance
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest ` to ensure
camel - 14263 : camel - hazelcast - queue - fix npe in camel - spring and camel - spring - boot
added a new test class ` TextFeedbackTest ` and modified ` AllTests ` and ` TestRunner ` to implement unit tests for text feedback functionality
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve performance and readability of scoring logic
updated LCD display constants in AddAndScaleMultiImage . java and ResourceEditorApp . java to use try - with - resources for resource saving to
added arrayclasselementoffset ( ) method to arraycopysnippets . readclasselementoffset ( )
log4j2 - 126 add a check for the first line in the defaultlogpublisher .
added remoteScmSupported property and related getter / setter methods to Configuration , RuntimeEnvironment , and Indexer classes to allow retrival for remote S
updated state handling in MieleApplianceHandler to include STATE _ RINSE _ HOLD and STATE _ RINSE _ HOLD
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to standardize logging functionality
corrected the spelling of " log " to " LOG " in the LocalZookeeper class to improve code readability and consistency
added unit tests for project generation events in EventSerializationTest . java to ensure correct serialization and deserialization of project generation events
ggb - 221 add support for select point in selectionmanager .
refactor the JavaCompiler class to improve code structure to enhance maintainability and readability of the code
added a check for remainingTime before executing random reads in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure that the test execution
refactor multiple Java files related to heap management to improve code organization and maintainability
added " -- gc - sections " and " nocopyreloc " flags to the ldflags in NdkCxxPlatform . java to
updated URI construction in SpringCloudCircuitBreakerFilterFactory to use a fallback URI format to enhance flexibility in URI handling for circuitbreaker requests
[ java ] fix license header in firefox test
do n ' t check for name in sharedstringstable if it be n ' t specify .
added a method to retrieve the account network using a query address in HttpMethed . java and a corresponding test in HttpTestAccount001 .
added a null check for availTextWidth in SwingUtilities2 . java and modified the GTKLookAndFeel initialization in Test6635110 . java to
refactor FlatteningIterator and FlatteningIterator to simplify iterator handling and improve clarity to enhance code readability and maintainability by reducing unnecessary
updated the ` removeColorHtml ` method to remove leading and trailing spaces from the title and body in ` TweetLinkUtils . java ` to
updated package - info . java files for SecurityCenterSettingsServiceClient and related classes to improve organization and clarity of the codebase
instructorfeedbackeditquestionsuitest : add test for reloading and deleting any existing question
pdfbox - 4071 : fix bug in hssfsheet . getfirstrownum ( ) and getlastrownum ( )
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and Launcher classes to enhance security by ignoring malicious intents
[ java ] : replace notifysessionopened ( ) with sendevent ( ) in sequenceragent
[ hotfix ] [ runtime ] add hashcode ( ) to abstractparquetmapinspector .
added a check to flush the session when remotely closed to ensure proper resource management and prevent potential memory leaks
changed the ` SplitReader ` interface to extend ` AutoCloseable ` and removed the ` close ( ) ` method from ` SplitReader ` to
removed redundant copy methods from GsonBuilder to streamline the code and improve maintainability
[ hotfix ] [ runtime ] fix npe in llscanner and llsourcebuilder
refactor file handling in RestClientRequestImpl to use a for - each loop instead of an array to improve code readability and maintainability by
updated dispatchStatusString method call in GrblController . java to ensure proper dispatching of the status string
replaced ` MockFactory . class . getClassLoader ( ) ` with ` SearchingClassLoader . combineLoadersOf ( toMock ) ` in ` Mock
added a new file TestRefreshFlagBug . java to test the functionality of refreshing nodes in the scene
added support for LEFT _ SEMI _ JOIN in the conditional statement to ensure proper handling of LEFT _ SEMI _ JOIN conditions
updated HTTP status checks in HttpReceiver and HttpSender classes to use HttpStatus . CONTINUE _ 100 instead of boolean to improve code readability and
rename arraylengthoffset to arrayopdesclengthoffset for clarity
add default policy to the brokertestsupport to make it easy to configure the broker
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added a check for the running state before stopping the application context to avoid unnecessary processing when the application is not running
changed the return type of the drawItem method from void to GlyphLayout in the drawItem method to improve method usability by allowing the method to
updated SpringmvcClient to utilize MetricsPublisher for metrics retrieval to improve metrics management and error handling in the application
removed the static final long SAFE _ ACCOUNT _ AGE _ DATE from accountAgeWitnessService . java to simplify the code and improve read
updated formatting and formatting in StructureHeader . java , StructureReader . java , and StructureReader . java to improve code readability and maintain consistency
added support for the ` ResourceUrlProviderExposingInterceptor ` bean in the ` CasWebflowContextConfiguration ` to enhance the webflow
add a new DexReturnInliner class to handle DexBody and DeadAssignmentEliminator transformations to improve the handling of return
refactored ruleresource to use property instead of extend rule .
updated the method call from ` LinkOption . NOFOLLOW _ LINKS ` to ` Files . isDirectory ( ) ` in ` PathResource
[ flink - 20635 ] [ table - api ] remove sql dialect property ( # 20519 )
refactor ` rDotJavaPackages ` to use ` Supplier < ImmutableSet < String > > ` instead of ` Iterable < ImmutableSet < String > >
[ java ] add test case for package declaration in java ast
added configuration for min _ cross _ compaction _ unseq _ file _ level to set the minimum cross compaction unseq file level to improve
[ hotfix ] rename activeresourcemanager to activeresourcemanager in k8s runtime
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ DisabledTestCheckColumn _ 
replaced URI creation with URI creation in ZipResource . java and added a new test class for parsing feature files with spaces to improve error handling and ensure
updated formatting and formatting in ExpandableUploadListAdapter . java for consistency to improve code readability and maintainability
updated RobolectricTestRunner to use a hierarchy of test classes and added a new test case for merging parent class and method configurations to improve
replaced ` Lists . newArrayList ` with ` Iterables . filter ` for filtering blocks and items to improve code readability and maintainability by using
removed the abstract keyword from several methods in AbstractDataChangedListener and WebsocketCollector classes to simplify the implementation and improve code readability
added enum color handling in JSONPojoConvertor and updated test cases in JSONPojoConvertorTest to improve color management and enhance test coverage for color
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the ` --
updated the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and replaced ` StringBuilder ` with ` ByteArrayOutputStream `
refactor GyroControl to use OrientationCorrectionListener for sensor event handling to improve sensor responsiveness based on device orientation
updated the BIOME _ LIST _ SIZE constant from 256 to BiomeGenBase . getBiomeGenArray ( ) . length to ensure the
updated method calls from ` println ( ) ` to ` print ( ) ` in ` GetInterfaceTest . java ` to improve clarity and consistency in
removed redundant assignment of the Environment variable in FileCompilerConfig . java to streamline code by eliminating redundancy
added a new interface ByteToLongCollector in the com . speedment . common . function package to provide a structured way to handle byte - to
added a preload parameter to MMapDirectoryFactory to control the preload behavior based on user - defined parameters
added custom metrics for various component configurations in BukkitPlatform . java to enhance performance monitoring capabilities based on user settings
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the code
added aspect ratio and default card image retrieval in CardPresenter . java to enhance the visual appearance of the default card image in the application
danielwagnerhall : do n ' t check if the login page url be implicit
refactor VectorHashKeyWrapper to handle empty and empty arrays more robustly to improve code readability and maintainability by reducing redundancy
added tests for the CRIU time JIT cleanup phase in TimeChangeTest . java to enhance testing coverage for the CRIU restore process
added line trimming logic in MultiPartFilter and updated MultipartFilterTest to print the request parameter in MultipartFilterTest to improve robustness by
add event for livingexperiencedropevent , close # 119
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to include " @ text / offline . config - error - quota - error -
[ beam - 12265 ] remove unsupportedsupportedatorsvisitor ( ) from queryplanner
replaced UnsupportedOperationException with RdepsFunction in GraphEnhancementQueryEnvironment . java and added RdepsFunction in GraphEnhancementQueryEnvironmentTest
refactor Character class to improve code readability to enhance maintainability and readability of the code
added functionality to scale the entire rocket based on the component type to ensure that the entire rocket is only scaled when the entire rocket is present
replaced ` Arrays . toString ( ) ` with ` Arrays . getBytes ( 4 ) ` in assertions to simplify code and improve readability by eliminating unnecessary
added time boundary handling for offline tables and refactored PinotQuery methods in BaseBrokerRequestHandler . java to improve clarity and maintainability of the
do n ' t add poller in ajp / http / apr / apr / apr / apr / apr processor
updated the EightmusesRipper . java file and modified album title handling in EightmusesRipper . java to improve user experience by providing
replaced direct calls to ` mDevice . getDevice ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to improve code
added a condition to check if the profile is phone in QuickstepLauncher . java to ensure proper layout behavior for phone devices
updated Hibernate query assertions to use ` unwrap ( QueryImpl ) ` instead of ` getValue ( ) ` in ` PartTreeJpaQueryIntegrationTest
replaced the method ` readAllLines ` with ` readMatchingLines ` in ` SubSystem . java ` and added a private method ` readMatching
removed the dynamicCheck flag from JpaQueryExecution . java to streamline the code by eliminating unnecessary dynamic check logic
added a null check for the entity before processing to prevent potential NullPointerExceptions when the entity is null
add test for entryprocessor . clears _ value _ attributes _ set _ map _ when _ value _ attribute _ value _ attributes _ be _
add jitsi - conference - room to notify join jitsi room to the join room .
updated color assignment in Utils . java and updated htmlMessage in UtilsTest . java and UtilsTest . java to use bgcolor instead of 99TEST
fix : set disable on text input when no value be specify
updated scratch path in Aapt2Link . java to include a RmStep and added RmStep functionality to enhance the build process by
replaced instances of ` new Capture < > ( ) ` with ` newInstance ( ) ` in ` ExternalJavacTest . java ` and ` Thrift
ggb - 221 : do n ' t clear selected geos when move to ggb
do n ' t swallow emptystackexception in ysldvalidator
added ` isCanceled ( ) ` method implementations across multiple call classes to provide a consistent way to check if the call is canceled
changed the visibility of the ` isAnnotationPresent ` method from public to default in multiple classes to simplify the annotation retrieval process by eliminating unnecessary null checks
added a default method ` removeAllWidgets ( ) ` to the ` UILayout ` class to provide a default implementation of ` removeAllWidgets (
[ hotfix ] [ test ] fix test failure in yarnsessionfifoitcase and yarnsessionfifoitcase
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 64836 - make sure
added handling for high - res content transcoding in PlaybackController to ensure proper transcoding of high - res content when Fire TV sticks are
[ beam - 11436 ] fix npe in readsourcetranslatormockbatch and readsourcetranslatermockbatch
refactor GpsLoggingService to use a wildcard import and modify listener handling logic to improve code readability and maintainability by reducing redundancy
changed the return type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` in ` vt320 . java
added support for BaseItemDragListener in FolderIcon . java to enhance drag - and - drop functionality for better user interaction
added ` createEmptyArtifact ` method to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` AbstractRepositoryConnector
removed unnecessary comments in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed the calendar check for the video link in VideoViewerActivity . java to simplify the code by eliminating unnecessary calendar checks
added compactPath method to SftpOperations . java to ensure that the file path is compacted to avoid potential issues with relative paths
[ hotfix ] [ weather ] increase wait time in baseweatherconsumertest
renamed the variable ` groupSortStr ` to ` sortWithinGroupStr ` in ` QueryComponent . java ` to clarify the purpose of the variable
fix double plant and blocktype . issolid ( ) to handle large _ fern .
updated focus settings from ` setFocusable ( false ) ` to ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java `
cloudstack - 10297 : do n ' t throw exception in vmmanagerimpl . getvirtualmachine ( )
updated DB2TestSystem , DockerDatabaseWrapper , DockerDatabaseWrapper , and DockerDatabaseWrapper to handle DB2TestSystem instances and modified import statements
modified the ` units ` variable to be ` private final ` and added a setter method for the ` units ` field in ` DoubleModel ` to
added a new static final CurrencyPair BTC _ ZMW in CurrencyPair . java to facilitate the creation of BTC _ ZMW
added a check to set the number of samples in TestPBRLighting . java to ensure that the fpp has a valid number of samples
updated assertions in StepWithSimpleTaskJobParserTests to remove hardcoded strings to improve code readability and maintainability by reducing redundancy
changed variable declaration from ` UsernamePasswordCredential ` to ` final ` in ` CentralAuthenticationServiceImplTests . java ` to ensure immutability of
updated string concatenation syntax in ExpressionNode . java to improve code readability and maintain consistency in formatting
added multiple calls to ` addServiceOutput ( ) ` and ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to
[ jbrules - 2424 ] fix issue with bigdecimal and biginteger coercion
added " org . eclipse . jdt . " to the WebAppContext class to hide jdt usage by Jetty
changed the return value of ` useAuthCache ( ) ` from ` super . useAuthCache ( ) ` to ` false ` to simplify the
updated namespace assignment to capitalize segments in PageTitle . java to ensure consistent namespace naming across different operating systems
camel - 12626 : camel - direct - add support for not available consumer in the direct endpoint
added a null check for the zooKeeper before setting it to null to prevent potential NullPointerExceptions when zooKeeper is null
corrected a syntax error in the progressBar step statement to improve code readability and maintain consistency
replaced direct calls to ` vibration . vibration . cancel ( ) ` with ` runOnUiHelperThread ( Runnable runnable ) `
added a call to updateLastRemoteStreamId ( streamId ) in HTTP2Session . java to ensure the last remote stream ID is updated correctly
added text aliasing settings to Graphics2D variables in EditorHeader , EditorToolbar , and EditorToolbar classes to enable text aliasing for better visual
[ java ] move term window size from nexttermoffset to sentposition in driverpublication .
refactor ( ctannotationimpl ) : remove static import of ctrole . value
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with ` getRGBPixels ` in ` WRobotPeer . java ` to improve performance by avoiding unnecessary native
added a new method ` newPrintStream ` to handle FileOutputStream ' s encoding to improve flexibility by allowing custom encoding settings
increase vibrate from 1 to 25 in TouchableMovementMethod . java to improve the responsiveness of the touchable movement method
[ hotfix ] fix checkstyle violation in test environment
removed unnecessary parameters from WebSocketClient constructors to simplify constructor parameters and improve code readability
updated the selection of the HTML file in I18nTest . java to ensure the correct HTML file is opened for testing purposes
do n ' t throw an exception if the build time be not available
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper authentication state management during integration tests
added a new ` LowercaseComparator ` class to the ` CoNLLUFeatures ` class to implement a custom ` LowercaseComparator ` class to
refactor the parsing logic in JavadocTool to use a uniquefiles set instead of a single parse method to improve code readability and maintainability
simonstewart : re - enable the test to check if the option be not in a multi select
removed a check for the length of keys in HighestKvno . java to streamline error handling by eliminating unnecessary exceptions
added error handling for retrieving attributes in HDF5BatchReader . java to improve robustness by logging warnings when only Huge objects with 1 record
[ beam - 11436 ] fix type inference for writeresult ( # 11486 )
updated XmlRootElement name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added @ ApiImplicitParams annotation in ProcessGroupResource to
added a new file TestMultiANewArray . java to test the functionality of multi - ANewArray to verify the behavior of class file creation
added a new configuration option for deploying a secondary storage in the management server to enhance the management server ' s configuration for secondary storage management
updated variable names and logic in SyncBlockChainMsgHandler . java for clarity to improve code readability and maintainability by using a consistent variable name
set the theme of the preview tab content in PreviewTabView to ensure the preview tab displays the correct theme for better user experience
added null check and closing of the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testHttpIdleTimeout ` to ` ConnectorTimeoutTest . java ` to verify the idle timeout behavior of the HTTP client
[ coref ] add property ` ` dcoref . dictlist ' ' and ` ` dcoref . dictpmi ' ' to
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new method ` read
removed unnecessary type casting in JpaPagingItemReaderIntegrationTests . java and updated parameter values in JobLaunchingGatewayParserTests . java to
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for improper child nodes
refactor ColorExtractionService to use a dedicated method for retrieving hotseat palette to improve code readability and maintainability by encapsulating palette
added DefaultDataTableEntryTransformer and TableCellByTypeTransformer to TypeRegistry and updated TypeRegistry to utilize the new TableCellTransformer class to enhance
removed assertion for newAvailableShared in AtomicRemainder . java to simplify the code by eliminating unnecessary assertions
chore ( regen ) : update license year for generated file
removed the ` projectGenerated ` field and its getter method from ` ProjectGenerator ` and ` WorkspaceAndProjectGenerator ` to streamline the project generation
[ hotfix ] fix checkstyle violation in driverutils
added contact form functionality to the application to support contact form functionality in the application
guacamole - 102 : change simpleuser to use a more generic permission set instead of a permission set
updated the RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
changed the parameter type of setMode from KnowledgeBase to KieBase in the setMode method to align with KieBase naming conventions
replace occurrences of ` findWhereNameLikeAndActive ` with ` findWhereNameOrAliasLikeAndAlias ` across multiple classes to improve clarity and
replaced manual closing of PerDocConsumers with IOUtils . closeSafely in DocFieldProcessor . java to improve code readability and maintainability by
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflowButton in ExpansionViewHelper . java to enhance user interaction by allowing the overflow button to be displayed
updated error messages from " is not null " to " is a reference " in multiple classes to improve clarity and accuracy of error messages related to subject
ggb - 22 update help button line height for help button .
[ java ] move protobufferutilitiestest to core . util package
use width instead of position for divider in jabrefframe
add support for crossref in aux sub generator
do n ' t use map < string , object > instead of map < string , object >
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the list of data tables
add a new method ` metaContactAvatarUpdated ` to ` MetaContactList ` , ` MetaContactChatSession ` , and ` MetaContactChat
updated import statements for Command in ShellCommand and ShellFactoryImpl classes to ensure compatibility with the new package structure
added a new test method ` testCleanUpAuditLogTablePostParametersByPosition ` in ` AuditLogTest . java ` to verify the cleanup
added @ SuppressWarnings ( " unchecked " ) annotation to the inject method in ComponentContext . java to suppress unchecked cast warnings and ensure type safety
added regex pattern matching for comment lines in ACLFileParser . java and modified comment parsing logic in ACLFileParserTest . java to improve accuracy in
updated the ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` classes to include ` FileSystemPlugin ` as a parameter to enhance
added ancestorDimensionValues to StarTreeImpl and updated related logging in StarTreeNodeImpl to improve the handling of ancestor dimension values and enhance logging clarity
added user unlock check before dumping PluginManagerWrapper and updated closeOpenViews method calls in BaseQuickstepLauncher and Launcher classes to ensure proper
updated the condition from ` widthStr ` to ` positionStr ` in ` Photo . java ` to correct the spelling of " positionStr "
refactored conditional statements in PKIXValidator . java for consistency to improve code readability and maintainability
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org . apache . integratedtest . dubbo ` to ` org . apache . integrated . test . alibaba . dubbo ` to
cloudstack - 10297 : remove unnecessary skipprojectnetworks call from networkserviceimpl . java
fix runtimetypeadapterfactoryfunctionaltest by use get instead of remove ( )
add storeundoinfoforproperties ( ) and storeundoinfoforproperties ( ) method to store undo info
replaced direct property retrieval with a privileged action in XRCompositeManager . java to enhance security by ensuring the gradient property is retrieved in a privileged context
updated assertions in StreamCloseTest to use ` await ( ) . atMost ( 5 second ) ` instead of ` assertEquals ( 0 , 0 )
removed the ` doAfterFlush ( ) ` method from multiple classes and updated the ` perFields ` initialization in ` TermVectorsConsumerPerField
added support for non - deprecated enums in ConfigurationMetadataGenerator and updated property processing in AbstractJpaProperties to enhance configuration handling and improve error handling
updated access modifiers and variable declarations in BiInt2ObjectMap , Int2ObjectHashMap , Int2ObjectHashMap , and Int2ObjectHashMap to
updated the number of threads in HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 in HiveConf . java
[ hotfix ] [ runtime ] add trace log to parallelniosender . sendmessage ( )
added a null check for the context before creating a new SchemeAndroidIDE instance to prevent potential NullPointerExceptions when the context is null
refactor nativeimagegeneratorrunner and nativeimagebuildserver to remove dependency on nativeimageclassloader
changed the return type of modifyGrantedAuthorities from void to List in SwitchUserAuthorityChanger and SwitchUserProcessingFilter classes to improve type safety and
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and added new classes ` RawJaxrsIntegrationTestBase ` and ` 
add querytimeout support to poolutilities . isquerytimeout ( )
added multiple @ DataProvider annotations to ` XslSubstringTest ` and ` SupplementaryCharactersTestData ` classes to enhance test coverage for
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter ` and added
added MariaDBDatabase constructor and implemented sequence support in CreateSequenceGenerator and CreateSequenceGenerator to ensure compatibility with MariaDB ' s sequence handling logic
updated error messages for consistency across multiple classes to improve readability and maintainability of the code
updated imports to use ` TableDataManagerProvider ` instead of ` BrokerResponse ` across multiple test files to utilize the new ` Table
added support for both " jsse . enableMFLNExtension " and " jsse . enableMFLNExtension " properties in SSLExtension
changed the type of the iterator from ` ObjectHashSetIterator ` to ` ObjectHashSetIterator ` and added new constructors in ` ObjectHashSetIterator `
updated character remaining and shortened URL lengths from 22 to 23 in multiple classes to ensure correct length calculations for better user experience
[ hotfix ] [ datastore ] add datapoint _ ttl to datapoint _ writebuffer .
updated the ` checkForAndKillXcodeIfRunning ` method to accept a ` boolean enablePrompt ` parameter and modified the prompt handling logic to improve
added a method to retrieve terrain at a cell in TerrainGrid . java to provide functionality for retrieving terrains based on cell coordinates
added default value handling in Pretty . java and created a new class T6665791 . java with a method to print a default value to enhance
added error handling for missing QuestEncryptionKeys . json file in ResourceLoader . java to improve error reporting for missing QuestEncryptionKeys . json
updated the return condition to check if the HTTP transport is not pushed to ensure that the HTTP transport is only enabled when the push is not enabled
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method call from BlockUtil . java to streamline the signing process by eliminating unnecessary sign operations
updated the return statement in FileSystemView and Win32ShellFolder2 to handle null roots and added security checks in Win32ShellFolder2 to enhance
updated row height calculations to use getMaxHeights ( ) instead of getRowHeight ( ) in ColumnText . java and modified methods in PdfPRow
added SparseArray for undoNotesList and updated related methods in ListFragment . java to improve memory management and enhance note management
add support for multiple feedback question in uploadbackupdata
removed null check for data in getTransferData method to streamline error handling by eliminating unnecessary null checks
no effective change - no effective change - no functional change
replaced the usage of ` Launcher . Padding ` with ` AppWidgetHostView . getDefaultPaddingForWidget ` in ` AppWidgetResizeFrame
refactor MethodHandle initialization and add consStringFilter handling in NashornBeansLinker . java to improve code readability and maintainability by reducing
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the code
rename ` latch ` to ` goAwayLatch ` in ` IdleTimeoutTest . java ` to clarify the purpose of the CountDownLatch ' s
replace ` getMessage ( ) ` with ` hasMessageThat ( ) ` for failure messages in ` IterableSubjectTest . java ` to improve clarity and
replaced ThreadLocal ` ThreadLocal ` with ` null ` for ` currentBook ` in multiple classes to simplify code by eliminating unnecessary calls to ` set ( )
do n ' t throw illegalargumentexception if the object type be not support .
removed unused imports from DataLoader . java to clean up the code and improve maintainability
updated ` postUpdateLog ` methods to accept an ` rowsAffected ` parameter and modified the ` postUpdateLog ` method to accept an integer to
ggb - 221 : fix suggestion margin and margin to be right - clickable
set foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration . java to ensure proper initialization of foregroundFPS and backgroundFP
added assertions to track and release objects in HdfsTransactionLog , TransactionLog , HdfsTransactionLog , and HdfsTransactionLog
replaced ` DefaultWebSocketFrame ` with ` ChannelFutureListener ` in ` DefaultHttpServer . java ` to simplify the WebSocket frame handling by using a
updated ` TestApplicationEventListener ` to use ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` instead of ` TestApplicationEventListener ` to
refactor SettingsActivity to use a new method to set the list background color to improve code readability and maintainability by reducing duplication
updated imports and added null check for the line in RMEThingHandler . java to ensure compatibility with the openhab library ' s utility class
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to update the accumulator ' s sum and count based on a
updated formatting in Put . java and ReplicationSink . java to improve code readability and maintain consistency
replaced ` Set ` with ` Map ` for regexp caching in ` RegExpFactory . java ` to improve performance and maintainability by using a more efficient
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a way to reset the ` gameThread ` instance
http : / / issues . apache . org / jira / browse / amq - 4071 - fix a bug in digestauthenticator
refactor parameter handling in SavedRequestAwareWrapper to use an iterator for merging parameters to improve performance and maintainability of parameter merging logic
updated log messages from " hiddenSingleton " to " lc " in BasicConfigurator . java and added a toString ( ) method in LoggerContext . java
replaced ` waitPoint . countDown ( ) ` with ` wakeup ( ) ` in ` CommitLog ` and ` HAService ` classes to
added a check for Android O and introduced a new method to check if the imageView is not Android O to ensure compatibility with devices running Android O
updated the schema info level from minimum ( ) to basic ( ) in SchemaCrawlerOptions . java to ensure consistency in schema info level configuration
replaced ` zipOut ` with ` bufferedOutputStream ` in ` SaveTask . java ` and removed the call to ` writeEndElement ( ) `
replaced the use of ` pool . bytesToString ` with ` charset . forName ( " UTF - 8 " ) ` in ` TestPayloads .
fix mc - 103516 - fix mc - 103516 ( mc - 103516 )
added " psiprobe . Tomcat101ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " to the list
[ drools - 4071 ] add test case for accumulate ( ) in marshaller
fix switch / cases indentation see camel - 14540
pdfbox - 4071 : remove public access to pdfcloneutility , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy and WSFederationRelyingPartyAttributeWriter to use SpringExpressionLanguageValueResolver instead of HttpMethod . GET to
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to improve code readability and maintainability by encapsulating
added a notification notification for the command start in AsyncBackgroundTaskManagerTest . java to ensure proper notification of command start events
refactor ` computePreviewDrawingParams ` method to use ` mPreviewItemManager . recomputePreviewDrawingParams ` instead of ` Drawable ` to
replaced the use of ` TokenFilterFactory ` with ` CharFilterFactory ` in the ` LukeRequestHandler ` class to improve handling of character filters in
replaced ` IllegalArgumentException ` with ` ParamChecks . nullNotPermitted ` in ` AbstractCategoryItemRenderer . java ` to improve code readability
added verbosity functionality to the createSubContext method in JavacStep . java and ExecutionContext . java to enhance user experience by allowing customizable verbosity
added null and uppercase handling for database schema in DbSqlSession . java to ensure proper schema handling for Oracle database types
updated contextDesc construction in AsyncLoggerAllThreadContextImplementationsTest to use LogManager . getContext ( false ) . getClass ( ) . getSimpleName ( )
added a new file TestShrinkToOneRegion . java containing a main method for garbage collection to demonstrate the usage of System . gc ( ) in
updated the package splitting method in SandboxTestRunner to use Splitter for improved readability to enhance code readability and maintainability by using a more
updated context handling in AnalyzingInfixSuggester and added a new test for binary context in AnalyzingInfixSuggesterTest to
updated the handling of the local attachment in PushsaferMessageBuilder . java to use a localAttachment variable to improve clarity and maintainability of the
remove the showlabelstats ( ) command from modelexplorance and sequencemodelexplorance
pdfbox - 4071 : remove unnecessary null check , a suggest by valerybokov
updated string concatenation for FORMATTER in multiple test classes to ensure consistent formatting across test cases
updated the ` evaluate ` method to accept a ` Double ` parameter and modified the ` evaluate ` method to return ` BigDecimal ` and ` Double `
refactor GraalJSScriptEngineFactory to use ConfigParser ' s valueAsOrElse method to improve code readability and reduce boilerplate
changed the access modifier of the Test1 and Test2 classes from package - private to public to allow access to the Test1 and Test2 classes
updated permission constants in PlayerEventListener to use " deny . no _ enter " instead of " permission . no _ permission _ event " to improve clarity
updated method signatures in ConditionAndOr , ConditionInConstantSet , and TestOptimizations classes to include a session parameter to enhance functionality by allowing the
replaced ` doTestNormsVersStoredFields ` and ` doTestNormsVersusStoredFields ` with ` doTestNorms
added loops to create box and circle creation and reset friction in Box2DCharacterControllerTest . java to improve test coverage for box and circle
added tests for memory and thread buffer size limits in TestBadOptionValues . java and updated TestBadOptionValues . java to ensure proper handling of
updated assertions in ObjectAlignment . java and Options . java to ensure correct validation of input values in the output
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` , ` AndroidManifestReader ` , and ` DefaultAndroid
refactor DocHelper class to improve code organization to enhance maintainability and readability of the code
updated the initialization of acceptableThrowawayItems to use an empty ArrayList instead of an empty list to improve performance by avoiding unnecessary array creation
replaced generic type casting with explicit casting for method calls in Test6987555 . java to improve code readability and reduce boilerplate
reformatted code for improved readability and consistency in MessageHandler . java to enhance maintainability and clarity of the code
refactor Inflection class implementation to improve code readability and maintainability
added methods to retrieve and set the locale in EvaluationContext to provide access to the locale in the evaluation context
removed unused import of Plugin from SummaryPrinter . java to clean up the code and improve maintainability
added a break statement to the switch statement in DrawerActivity . java to improve control flow and prevent fall - through behavior
updated the import statements in MongoQueryCreator . java to use a wildcard import and modified the debug log message to improve code readability and provide more
add support for xwork . loggerfactory in xwork2
add adminaddpeerfailswhenp2pdisabledacceptabilitytest : rename adminaddpeerfailswhenp2pdisabled to adminadd
rename @ conditionalonmissingbean to @ conditionalonmissingbean ( name = ' ' livenessstatehealthindicator ' ' )
[ hotfix ] [ runtime ] make localpstoreprovider more efficient .
changed the access modifier of the deleteFiles method from public to private to enhance encapsulation and improve code readability
replaced instances of ` Provider < T > ` with ` ServiceProvider < T > ` in ` ServiceLoaderSpliterator ` and ` TypeUtil ` classes to
do n ' t throw javainteropreflect . findfield ( ) and javaobjectmessageresolution . setfield ( object , object , object )
added checks for toolchain creation in multiple classes to ensure proper handling of Android SDK changes when toolchains are present
fix race condition in polyglotengineimpl . removecontext ( )
use contains ( ) instead of indexOf ( ) in abstractcheckdescriptor . java
updated method names from ` setLinkerFlags ` to ` setExportedLinkerFlags ` in ` PrebuiltCxxLibraryDescription ` and
replaced ` onConfigurationChangedInternal ` with ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` RecentsView ` classes to
updated type checks from ` instanceof ` to ` instanceof < ? > ` across multiple Java files to improve type safety and eliminate unchecked warnings
updated the method call from ` newBlock ` to ` newBlock . getHeader ( ) . getHashAsString ( ) ` in ` AbstractBlockChain
[ java ] use getstorepathphysic ( ) instead of getstorepathcommitlog ( ) .
[ hotfix ] [ micrometer ] remove unnecessary try - with - resources
[ flink - 20635 ] [ table - planner - blink ] fix compaction log for deleted message
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
added a method to check if the system UI has a specific system UI object in AbstractLauncherUiTest . java to enhance functionality for handling system UI
changed the access modifier of ` principals ` and ` sessionIds ` in ` SessionRegistryImpl . java ` to be ` static ` to allow
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 : do n '
[ bonsai ] add debug log to Bonsai value .
changed the return type of the getText method from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to
added @ NotYetImplemented annotation to AlertsTest . java to indicate that the test is not yet implemented
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 12448 - fix for
rename CMD _ ESCAPER to CREATE _ PROCESS _ ESCAPER across multiple files to improve clarity and consistency in naming conventions
added synchronization to the DbTxnManager class to ensure thread safety when accessing the DbTxnManager instance
refactor ` transformBuildResultIfNotPresent ` and ` wrapWithTracingAndCancellation ` methods in ` CachingBuildEngine . java ` to improve
added updateFirstLineShowing ( ) method to TextArea . java to address drag - selecting text outside the bounds of the TextArea ' s bounds
added a temporary directory configuration for TestInformationSchemaWithPrivilege in TestInformationSchemaWithPrivilege . java to ensure compatibility with different Hadoop environments
refactor graphics configuration retrieval logic in Component . java to improve readability and maintainability of the code
tika - 132 : fix oom test in legacy mode
camel - 14297 : camel - core - remove the doprocess method that be no longer need .
refactor LexicalizedParser to use a parser file instead of a hardcoded value to improve flexibility and maintainability of the code by allowing
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test for SQL
[ hotfix ] [ test ] fix flaky test on window
[ java ] make startfromtruncatedrecordinglogtest more robust
updated the calculation of ` arc ` in ` LineBorder . java ` and modified the ` outer ` initialization in ` RoundRectangle2D . Float
fix npe in post gallerytypeimagerecyclerviewadapter when there be no gallery image
updated deployment ID handling in StandardChangeLogHistoryService , CreateDatabaseChangeLogTableGenerator , and CreateDatabaseChangeLogTableGenerator to use SetNullable
pdfbox - 4071 : rename ` ` fdf ' ' to ` ` interactive ' '
removed unnecessary boolean parameter from method signatures in AlterTableAddConstraint . java to simplify method signatures and improve code readability
added support for provisional engines in QuickfixjComponent and updated test cases in QuickfixjComponentTest to improve engine management and ensure proper handling of
added a boolean field ` displayZoomControls ` and modified the ` setMixedContentMode ` method to return ` int ` instead of ` int `
add corporea _ block and its key to the corporea spark , close # 119
refactor ConnectionFactory class implementation to improve code readability and maintainability
added method ` EnableDisableMenuItems ( ) ` and ` EnableDisableMenuItems ( ) ` to ` GpsMainActivity ` to enable menu
updated the message for empty favorites from ` search ` to ` filter ` in ` ExtendedListFragment . java ` to improve user experience by providing
hhh - 14258 fix test failure due to serviceregistry change
updated AutoResizeMode and autoCreateColumnsFromModel settings in MotorMountConfigurationPanel and modified mountConfigPanel instantiation to use subpanel instead of this
updated the LINE _ SEPARATOR constant from ` lineSeparator ( ) ` to ` System . getProperty ( " line . separator " ) ` to
added getter and setters for creator and subject properties in POIXMLProperties . java and updated test cases in TestPOIXMLProperties . java
removed redundant call to super . doStop ( ) in HandlerWrapper . java to improve code readability and maintain consistency
[ java ] do n ' t check for empty cnc file if there be no file
rename ` ` marker ' ' to ` ` command ' ' in unsatisfiedtypebounds
added support for jmod files in ClassFileSourceImpl . java to enhance compatibility with different Java files
updated ` TreeBackedElement ` and ` TreeBackedEnter ` classes to accept ` Preconditions ` instead of ` PostEnterCanonicalizer ` to
updated token request initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest instead of ClientId to improve
[ hotfix ] [ table - common ] fix array . get ( array . get ( arraylength , valuerangeobject , array . get (
hbase - 26464 zookeepersync ( ) should call zkw . sync ( path ) instead of zkassign . sync ( path )
added check for EGL _ NO _ CONTEXT in GlUtil . java to ensure proper exception handling for no current context
[ flink - 24186 ] [ runtime ] do n ' t remove the rule flow group if it ' s active
added a return statement to the HystrixDashboardConfiguration class to ensure proper termination of the method execution
replaced ` PipeNotExistException ` with ` PipeNotExistException ` in ` DropPipeProcedure . java ` and added assertions in ` IoTDBPipe
fix clientqueuedisruptiontest to use @ after instead of @ nightlytest
fix ( ctreferenceimpl ) : use defaultjavaprettyprinter instead of signatureprinter
changed the access modifier of the validateInstance method from public to protected to restrict access to the validateInstance method for better encapsulation
updated import statements in GeoPointField , GeoPointInBBoxQuery , GeoPointNumericTermsEnum , and GeoPointPrefixTermsEnum classes to
added a new file FakeBuildable . java to implement a mock implementation of FakeBuildable to facilitate testing of buildable behavior in unit tests
fix nullpointerexception in itemstack . isempty ( ) and itemstack . isempty ( ) in guiingameforge .
updated variable names from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity and consistency
updated velocity calculation in TubeCalc . java to check for EPSILON conditions before proceeding with calculations
use blobid . of ( blobid , blobid ) instead of getbucket ( gcsuri ) in gcspinotfs
removed redundant blockCloseVertxByName method call in TestHighwayTransport . java to streamline code by eliminating redundancy
[ flink - 18186 ] [ table - planner - blink ] add drop view if exists to trigger based history ddl
[ hotfix ] [ test ] fix clusteringenginetest . testclusteringclusteringenginetest . testclusteringclusteringenginetest
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
replaced instances of ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand ` and added ` ParserStateObjectInputStream ` to
added null checks and initialization for objectQuotingStrategy in ChangeSet and DatabaseChangeLog classes to ensure proper handling of object quoting strategies
replaced ` parse ( zipFile ) ` method with ` fromXmlStream ( zipFile ) ` method in ` SliderAppsViewControllerImpl .
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the codebase
refactor path handling in AntCompiler to use a dedicated quotePathList method to improve code readability and maintainability by encapsulating
added scrim animation functionality to the Launcher and LauncherAnimUtils classes to enhance visual feedback during screen off transitions
updated the condition in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java and IoTDBDescriptorTest . java
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added support for handling different path types in WindowsPathParser and improved error handling in PathOps to enhance path parsing capabilities and ensure correct handling of different
replaced InetSocketAddress with direct instantiation of MulticastSocket in Promiscuous . java to simplify the code by eliminating unnecessary parameters
removed redundant calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
modified the return statement to clone the nBits array before returning it to ensure that the original nBits is not modified externally
changed the visibility of the deriveCollectorName method from private to protected in ProfilerCollector . java and added a test in TestProfilerCollector . java
updated the ` MappingMongoConverter ` to use a new method ` requiresTypeHint ` for better type handling to improve code readability and maintainability
refactor ProxyMaker to use PerfStatsCollector for better performance tracking to improve performance tracking of proxy factory creation in tests
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
added exception handling for connection exceptions in TCPConnection . java to improve error reporting by providing more context about the connection issues
refactor reinflateWidgetsIfNecessary method to use getWorkspace ( ) instead of getWorkspace ( ) to streamline widget reinflation logic
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion of an inside file dialog to ensure that the DeleteInsideFile
update lwjglabstractdisplay . update ( ) and processmessages ( ) when renderable . get ( ) return false .
add test case for instructorstudentlistpageuitest that show a picture in the student list page
added methods and methods for onlyrun , onlyRun , and method in TestIgnorance . java to enhance functionality to exclude specific methods and
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature by removing unnecessary parameters
added null check for pageable in QueryDslJpaRepository to prevent potential NullPointerExceptions when pageable is null
[ hotfix ] [ runtime ] add computememorysize ( ) method to memorymanager
[ java ] increase test timeout in publishjmsconsumertest . testpublishjmsconsumertest .
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
updated the initialization of previousIndex and previousBatch in StreamingAggTemplate . java to simplify the code and improve readability by eliminating unnecessary null checks
do n ' t throw a GraalError if the plugin need to be null
added a default method ` stream ( TableIdentifier < ENTITY > tableId ) ` to the ` StreamSupplierComponent ` class to provide a default
updated log messages for clarity and improved error handling in MediaMonitor . java to enhance readability and maintainability of log messages
modified the ` newInstance ` method in ` InjectorProxy ` , ` ReflectionUtil ` , and ` StandardInjectorProxy ` classes to use ` Invocation
[ hotfix ] [ stream ] remove unnecessary close ( ) call in flinkstreamingcreatefunction
added unit tests for parsing and deparsing SQL statements in ShowStatementTest and UnsupportedStatementTest to ensure correct parsing and deparsing of SQL
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of null
updated test cases in NamedSetTest . java from Deliberate error to Quality Distribution in the test to ensure that the test accurately reflects the expected
refactor WebSocket connection handling and logging in DeconzBridgeHandler and WebSocketConnection classes to improve clarity and maintainability of connection state management
remove null value from session . setsession ( ) in abstractprocessingfilter . java
hbase - 24286 testregionreplicareplicationendpoint : use createorenabletablewithretries instead of hbase . getadmin ( ) .
added PMS configuration to FormatRecognitionTest . java to ensure proper handling of PMS configurations
cloudstack - 10265 : make imagestoreuploaduploadmonitorimpl . createovadatadisktemplates ( ) return false if the template be
updated ` PrincipalAttributeRegisteredServiceUsernameProvider ` to use JUnit4 instead of ` CasCoreServicesConfiguration ` to streamline test setup and
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationServiceImpl , and NoOpLockingStrategy classes to ensure proper
updated SQL statements in AppendOnlySchemaIT . java for consistency and clarity to improve code readability and maintainability
added a validation check for deleted documents in SegmentReader . java to ensure that the document count matches the expected document count to prevent CorruptIndexException
add a new method ` logTrace ` to ` siplogger ` to make it easy to understand
add a comment to clarify that shorter length is needed for staves w / no starting barline
changed the ` handleFileUploads ` variable from ` true ` to ` true ` in ` VertxPlatformHttpServerConfiguration ` and added a
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests ` to
removed static field declarations from HotSpotObjectConstantImpl . java to simplify code and improve readability
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in spell checking functionality
updated the way Instant is used in the match method to include watermark in the file processing logic to improve code readability and maintainability by using
[ hotfix ] [ table - planner - blink ] fix nullpointerexception in registercopy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData functionality for SQL metadata handling
updated the log message format in JsLibrary . java to include the project ' s root path to provide clearer context about the project ' s
updated the slider slider model from 180 to Math . PI in RailButtonConfig . java to ensure the slider reflects the correct angle range for better visual
updated the height of the drawEncloser method from 8f to 9f in OverlayRenderer . java and modified Saves . java to
added support for expression language in Kerberos properties to ensure compatibility with expression language features
removed unnecessary null checks for remote characters in ThirdPersonRemoteClientSystem . java to simplify code and improve readability
updated the ` setupViews ` method to include a ` ScrimView ` parameter and modified the ` setupViews ` method to accept a ` Scr
[ hotfix ] [ state - backend - changelog ] add option to enable periodic materialization
added a ` value ` field and its getter / setter methods to the ` ProtocolParameter ` class and updated ` List ` and ` ParamTagHandler
add a test to verify the behavior of the chunking servlet with a head
added a boolean flag ` isBumped ` to control the behavior of the ` parseDetails ` method in ` CheckRouterAnswer . java ` to
added a header for " application / x - www - form - urlencoded " in SwitchToPostInterceptor and updated test cases in SearchRequestUnitTest
refactor EmbeddedClientConnector class to improve code organization to enhance maintainability and readability of the code
added logging for SQLFeatureNotSupportedException in PhoenixResultSet . java to improve error handling by logging warnings instead of throwing an exception
added initialization of AndroidNet in AndroidDaydream . java to ensure proper initialization of the AndroidNet instance
[ hotfix ] [ runtime ] fix typo in llrealtimesegmentdatamanager
removed the boolean parameter from the getDepositAddresses method calls in KrakenAccountService . java to simplify the method by eliminating unnecessary parameters
hbase - 16464 remove unused prefixtreecodec from mapmapreduceutil
added a ` inflationFailed ` flag to ` DesignerActivity ` and modified the ` root ` variable to be final in ` XMLLayoutInflater `
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
refactor LoweringToolBase to use a static factory method to improve code readability and maintainability by encapsulating the LoweringTool
updated error message from download _ folder _ failed _ content to sync _ folder _ failed _ content in ErrorMessageAdapter . java to provide clearer
updated the Makefiles class to use ` string ( ) ` instead of ` Parsers . among ( " : # 999 " ) ` to
updated method calls from ` reader . getDeletedDocs ( ) ` to ` MultiFields . getDeletedDocs ( reader ) ` and added null check
updated refresh flag handling in SimpleBatchNode . java to include RF _ TRANSFORM and bound refresh flags to ensure proper refresh behavior based on the
use isuninterruptible ( ) method instead of isprovidedsafepoint ( )
added a framebufferSizeCallback to handle window size changes in LwjglWindow to ensure proper resource management and prevent potential memory leaks
updated calculations for centerTaskParallaxToRight and otherAdjacentTaskParallaxOffscreen in LauncherAppTransitionManagerImpl .
changed the type of the ` NodeLiteralNode ` class from ` NodeLiteralNode ` to ` NullLiteralNode ` and updated related methods accordingly to
added methods to set the total size and length in CompoundFileWriter , FSDirectory , and IndexOutput classes to ensure proper handling of file lengths and
updated AndroidNdkScriptGenerator and AntScriptGenerator to handle AndroidManifest . xml and modified AntScriptGenerator and AntScriptGenerator
camel - 15836 - camel - aws2 - s3 : use sourcebucket instead of copysource in camel - aws2 s3
added permission handling for " * " role in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin and TestRuleBasedAuthorizationPlugin to
updated ZookeeperClientServerRegisterRepository to handle null or empty data and improved URI registration logic to enhance robustness and maintainability of the code by
renamed methods and variables from ` makeDeepMock ` to ` deepStub ` and ` deepStub ` in ` ReturnsDeepStubs . java `
updated byte array handling in Runtime . java to return an empty byte instead of null when no call values are provided to improve robustness by preventing potential
updated debug log message format in BibEntry . java to improve readability and maintainability of log messages
updated the method signature of ` mapPBEAlgorithmToOID ` to throw ` NoSuchAlgorithmException ` and modified the return value in ` PBE
refactor TIFFReader to use inputLength instead of length to improve code readability and maintainability by using more descriptive variable names
added validation for job parameters in CommandLineJobRunner . java and updated error message formatting in CommandLineJobRunnerTests . java to ensure that job parameters are
updated test assertions from " \ r \ n " to " foo \ " in SmtpTests . java and MailTests . java to ensure correct
fix switch / cases indentation see camel - 14540
replaced synchronized block with AtomicLongFieldUpdater for lastSequenceId to improve thread safety and performance in the LongSequenceGenerator class
added a new file ` Test . java ` with a static method ` sum ( x , y , y , y ) ` to implement a test
updated ShadowWifiManagerTest , WifiUsabilityStatsEntryBuilder , WifiUsabilityStatsEntryBuilder , and WifiUs
added a new file ` Solution . java ` that implements a algorithm that iterates over an integer array based on a specified number of queries to demonstrate
[ java ] use concurrenthashmap instead of map to avoid concurrentmodificationexception .
refactor TaskbarManager to improve readability and maintainability of the code to enhance code readability and maintainability by reducing redundancy
refactor SyncFutureCache class implementation to improve performance and maintainability of future caching logic
updated the DEFAULT _ DUBBO _ PROTOCOL _ VERSION and LOWEST _ FOR _ RESPONSE _ ATTACHMENT constants from "
pmd : fix uselessstringvalueof rule for string literals
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest ` to verify the behavior of the symmetric
add target max type shard size to the write engine to allow for customization of the max type shard size .
added new versions " 5.0 . 2 - cfs " and " 5.0 . 2 - nocfs " to the TestBackwardsCompatibility
refactor CompilationTask class to improve code organization to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis . java and refactored database description handling in DDLTask . java to improve clarity and maintainability of database
added a thread - safe execution of ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase . java to ensure the database change log table is cleared before
refactored RestClient and CallPath classes to improve version handling and path validation to enhance flexibility and maintainability of the code by allowing users to
refactor the ` close ` method in ` PhoenixDriver ` to use ` checkClosed ( ) ` instead of ` UntableToRegister ( ) `
do n ' t throw unsupportedoperationexception instead of nullpointerexception
updated ConflictsResolveActivityIT and FolderPickerActivityIT to extend AbstractIT and modified FolderPickerActivity to extend AbstractIT and added a screenshot
graalvm : do n ' t use optimization phases when run in dev mode .
added a check for the length of the copy in StringHelper and a corresponding test in StringHelperTest to ensure correct handling of leading and ending quotes
updated JpaQueryCreator and ParameterMetadataProvider to handle NOT _ CONTAINING cases and added a new method in UserRepository to improve type
do n ' t push branch ID if user do n ' t have authentication
added a dispatch call to P25Message in P25MessageFramer . java to enable the dispatch of a message to the P25MessageFrame
added null checks for the handler before executing the checkClosed ( ) method in WebSocketImpl . java and a corresponding test in WebsocketTest . java to
( chore ) camel - discovery - integration - test : use indexablepooltask instead of workflowitemservice
updated widget padding logic in AppWidgetResizeFrame and Launcher classes to use Launcher ' s getAppWidgetInfo ( ) method to improve widget
added ` hideAllApps ( ) ` method to ` LauncherTaskbarUIController ` , ` TaskbarAllAppsController ` ,
removed synchronized keyword from the launch method in CrawlJob . java to simplify the launch process by eliminating unnecessary sleep
updated the zoom level calculation in JavaSEPort . java to use the canvas ' s coordinates to ensure accurate zooming based on the canvas ' s
replaced notifications with startForeground for notification notifications to improve the responsiveness of notification notifications and ensure proper handling of upload status
add a new test method ` testStaticFinal ` to the ` ExcessivePublicCountTest ` class to verify the behavior of public static final
hbase - 24286 addendum set the retry number to 3 in testThrifthbaseservicehandler
change log level from info to debug in TransactionalMessageServiceImpl . java to improve logging granularity for better debugging
added error handling for FileNotFoundException in ResourceUtils . java and changed logging level in AbstractCipherExecutor . java to trace in AbstractCipherExecutor . java
added a new ` getTickers ( ) ` method to the ` BittrexTickersResponse ` class and updated ` BittrexM
refactor entityentry to use object [ ] instead of type . getenumconstants ( )
camel - 14284 : camel - ws should use endpoint class instead of class . getclass ( ) , not class .
updated character arrays in FileUtils . java to include additional character formats to enhance compatibility with various character encodings
updated ResourceService and ResourceHandler to use Resource instead of String for stylesheet handling to enhance flexibility and maintainability of resource management in the application
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before further operations
updated the method call from ` ObjectParameterStrategy ` to ` PointerParameterStrategy ` in ` X86MethodGenerator . java ` to align with the
updated the database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with Cockroach
removed the check for " isEnum " in the name comparison logic to simplify the code by eliminating unnecessary conditions
rename ` UnsatisfiedLinkError ` to ` SymbolNotFoundError ` in ` Library . java ` and add a new class ` SymbolNotFoundError . java `
added conditional logic to handle pseudo - fields in BinaryResponseWriter . java to improve handling of non - pseudo - fields in response processing
added support for PING , PONG , and PONG in WebSocket communication to enhance WebSocket functionality and ensure proper handling of ping packets in the WebSocket
updated NON _ IDENT _ ESCAPES string format from " $ " to " $ " in RegExpScanner . java to correct the regex
refactor DnsResolverProvider to use wildcard imports and modify DNS cache resolution logic to improve code readability and maintainability by consolidating DNS
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to ensure MessagingTracing is only enabled when necessary
mondrian : remove unnecessary code in sqlquery . quoteidentifier ( ) .
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionMode , IDEEditor , and IDEEditor to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 63023 : xml parsing
removed the visibility setting for the input field in TouchCharInput . java to streamline the user interface by eliminating unnecessary visibility
added a null check for ` c . getCurrentUser ( ) ` before comparing user IDs to avoid potential NullPointerExceptions when accessing the current
added a conditional check for the index before setting the slot and member in JSObjectLinker . java to improve code readability and maintainability by
refactor ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to initialize ` randomStringGenerator ` with default values
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added @ Deprecated annotation to multiple classes to indicate that these methods are outdated and should not be used in future development
deleted the JoglDebugAdaptor . java file and replaced it with GuiceStartup . java to streamline the codebase by eliminating unnecessary functionality
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and corresponding tests in ` AWSPropagation ` and ` AWSPropagationTest ` classes to
added PendingIntent import for PendingIntent in FileDownloader and FileUploader classes to ensure proper handling of notification content
modified the ` nextOrd ` method to include a ` set ` method and modified the ` nextOrd ` method to return a boolean indicating
refactor DateTimeFormatter class to improve date formatting logic to enhance readability and maintainability of the code
updated desktop property keys in WToolkit . java for consistency to improve code readability and maintainability by eliminating unnecessary exception handling
added validation for null and empty principal in setAdministratorCredentials method in KerberosOperationHandler . java to ensure that null or empty principals do not
added a MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and modified width calculation in BaseWidgetSheet . java
add start / end render ( ) and end render ( ) method to psurfacejogl . java ( )
refactor Hashing class for improved performance to enhance performance and maintainability of hashing operations
updated the ` accept ` method to use ` Files . getBaseName ( ) ` and ` Files . getBaseName ( ) ` instead of
added string resources to the addToListIfNeeded method and updated the addToListIfNeeded method to include contentDescriptionInt parameter to enhance user information display by providing
added a null check for the ` newType ` field in the ` J . java ` class to ensure that the ` newType ` variable is
increased the start delay from 500ms to 800ms in the Launcher class to allow more time for the launcher to complete successfully
added a constant for the WEBAPP _ HOME file in SolrJettyTestBase and updated the path configuration in JettyWebappTest
refactor diameter initialization and clearSelection method in ThrustCurveMotorSelectionPanel . java to improve code readability and ensure selectedMotorSet is
added import for BufferUtil and modified buffer clearing logic in ByteBufferPool . java to improve buffer management and prevent potential memory leaks
remove edgeeventactiontype from notificationcontroller . processnotificationrules ( ) method ( # 233 )
updated configuration keys from " authorization . ldap . groupBase " and " groupMembershipAttr " to " authentication . ldap . groupBase " and "
added deleteExchange ( " x " , " q " ) and queueDelete ( " x " ) in DurableOnTransient . java to ensure
[ hotfix ] [ test ] fix bulkslotproviderimpltest failure in bulkslotproviderimpltest
refactor connection handling in PingService and ServerInfoService to use addListener for better resource management to improve error handling and provide clearer error messages
refactor CompositeHandlerAdapter to improve code organization to enhance maintainability and readability of the code
refactor Quartz2Adapter class implementation to improve code readability and maintainability
added a try - catch block around the execute method call in SulongLibrary . java to handle IllegalStateException to improve error handling for illegal state exceptions
update Spring Security schema version from 24 to 25 in multiple files to ensure compatibility with the latest Spring Security features and improvements
updated the ` newNameResolver ` method to accept ` NameResolver . Args ` instead of ` helper ` in ` ConfigMappedNameResolverFactory `
added checks for non - empty annotations before conversion in JavacParser . java and created a new method in TestAnnotatedAnonClass . java to
added " com . sun . naming . internal . " to CheckPackageAccess . java to ensure compatibility with the latest naming conventions
changed the strict flag from false to true in StaxEventItemReader . java to enable strict mode for improved user experience
updated OfflineSorter to include an isExhausted boolean parameter and modified the readPartition method to include a new isExhausted boolean to
refactor ActionResetingPool class to improve code readability to enhance maintainability and facilitate future updates
fix npe in lightstateconverter when color mode be not set
refactor CellLayout to use a new ICON _ VISIBLE _ AREA _ FACTOR for folder creation and reorder radius calculations to improve code
added import for FileDisplayActivity and removed the call to showLoadingDialog ( ) in FileOperationsHelper and OCFileListFragment to streamline
added null checks for uigestureFile before creating HashMaps to avoid potential NullPointerExceptions when uigestureFile is not available
updated assertions in FieldNamingPolicyTest to use Locale . getDefault ( ) instead of toUpperCase ( ) to ensure consistent behavior across different locales
added listener setting for the result in XmlSuite . java to ensure listeners are correctly set for the suite
added a new property ` loadWithNewGlobal ` and updated the ` Global ` class to include ` loadWithNewGlobal ` functionality to enhance the
added fromJsonString and toJsonString methods to StarTreeIndexSpec and updated test cases in TableConfigTest to enhance JSON serialization capabilities for StarTree
added import for ObjectPostProcessorConfiguration in HttpSecurity , HeadersConfigurer , OAuth2Login , OAuth2ResourceServerConfigurer , and ServerHttpSecurity classes
replaced string literals with single quotes in file paths across multiple files to ensure consistent handling of file paths across different operating systems
jbrules - 2457 : fix npe in inoperator when a null value be null
added import for FieldCache and modified field cache purge logic in TestDistributedSearch . java to prevent potential memory leaks and avoid potential memory leaks
added unit test for boundary message event on subprocess and in subprocess multi instance
refactor : add support for static call in j2me compiler .
make the group hash bucket count configurable for the queue and policyentry
added constants for NETSCAPE _ SLOT _ ID and FIPS _ SLOT _ ID and modified slot handling logic to
added alignment functionality to the addWidget method in Layout . java and updated GdxRenderer . startRenderering method in GdxRenderer . java to
[ hotfix ] [ test ] disable unalignedcheckpointitcase for now
added imports for Receiver , Receiver , Transmitter , and Sequencer classes in JDK13Services . java to ensure compatibility
added a condition to check if a keyword is already present before adding it to the reference to ensure that the correct keyword is added to the reference
fix a bug in the multicastprocessor when there be multiple exchange pair in the same order .
removed unused methods from SegGraph , SegToken , and WordDictionary classes to streamline code and improve readability
add escape character to flavorstatsdlinebuilder ( # 644 )
[ catalina ] add udp port to member and add udp port to the member .
replaced instances of ` OperatorMulticast ` with ` OperationMulticast ` in ` Observable . java ` and ` OperatorMulticast . java ` to standardize the
increased the send timeout from 1 to 100ms in EventBusTracerTestBase . java to allow more time for message delivery to complete
added a try - finally block around the exception handling in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added a synchronized method to destroy the SessionFactoryServiceRegistryImpl class to ensure proper resource management and prevent memory leaks
[ java ] use ` ` jwt _ token ' ' instead of ` ` home ' ' in test
[ pytorch ] add test for map of tensor in ivalueutilstest
added a task stack listener to clear the visibility of the task stack in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to
[ itextpdf ] make defaultsplitcharacter profiler faster
camel - 14284 : camel - cxf should set property on factory bean to avoid npe
refactor endPendingAnimation logic into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
added logging for playTime in LauncherAnimationRunner to improve debugging and ensure playTime is correctly set based on device version
added a conditional check for BailoutOnException in CiResult instantiation to ensure that exceptions are only thrown when Bailout is enabled
removed hardcoded signup and passwd strings from Links . java and updated assertions in IdentityZoneConfigurationBootstrapTests . java to simplify code
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reservedallocations in slotprofile
refactor TimeConverter to use a new ` getOnlyFormat ( ) ` method instead of a ` SimpleDateFormat ` instance to improve code readability
fix for geotiffreader . getrenderedimage ( ) to use nodatacontainer . GC _ NODATA
[ gr - 16286 ] fix npe in functionstartnode . getsourcesection ( )
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java ` and
replaced the blockUntilConnected ( ) method with a listener for the connection state in TestPathChildrenCache . java to ensure proper handling of connection state
refactor ArrayTypeHandler to handle null values more gracefully to improve code readability and prevent potential NullPointerExceptions
replaced ` RegexpTunnel ` with ` REProgram ` in ` JakartaRegexpCapabilities . java ` and removed ` RegexpTunnel . java ` to
updated the method call from ` null ` to ` Application . class ` in the ` pick ` method call to ensure compatibility with the new application class
[ drools - 4071 ] fix npe on mutable global in kiesession . setglobal ( )
replaced Preconditions with TransactionUtil for asset name , URL , URL , and description validation in AssetIssueActuator and TransactionUtil classes to improve asset
ggb - 223 copy paste do n ' t work if the parent algorithm be a textfield
updated action descriptions from " @ text " to " @ text " in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , and
replaced ` setSeedNodes ( ) ` and ` setTrustNodes ( ) ` with ` addAll ( ) ` for setting seed and trust nodes to
updated assertions in BaseTokenStreamTestCase to include termAtt and added failure handling in BaseTokenStreamTestCase to improve debugging by providing more context about the
log4j2 - 1334 fix timebasedtriggeringpolicy . increment ( ) and timebasedtriggeringpolicy . increment ( ) to use
refactor ` performItemClick ` and ` findIndexOfItemText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` classes to
pdfbox - 4071 : fix typo in pdfbox - 4071
add graphdecoder . aftermethodscope ( ) and graphdecoder . aftermethodscope ( methodscope ) method to graphdecoder
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) in HttpSessionDestroyedEvent . java and added unit tests for security contexts to
added a test for changing the service name in a zipkin span to manually provided to ensure that the service name is correctly updated in the zipkin
added logging statements to JavaInMemoryFileManager , JavacToJarStepFactory , and JavacToJarStepFactory to improve traceability of
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming conventions
increased the timeout value from 4 seconds to 10 seconds in the tryLock method from 4 seconds to 10 seconds to allow more time for the locking
updated the ` ConfluentSchemaRegistryDeserializerProvider ` to include a cache capacity parameter to enhance flexibility in cache capacity management during schema registry deserialization
rename ` remind ` to ` checkatstartup ` for clarity to improve code readability and maintainability by using more descriptive names
refactor NodeGenerator to use a new method ` isMethod ` for improved readability and maintainability to enhance code readability and maintainability by
added a final variable for ` childEntityName ` in the ` CascadingActions ` class to ensure that the ` isTransient ` method is
added support for the " __ proto __ " and " setProtoCheck " functionalities in ScriptObject . java to enhance object extensibility
updated default read mode from " heap " to " mmap " in CommonConstants . java and modified the initialization of ImmutableSegmentImpl in ImmutableSegment
added support for ByteArrayTemplate in ArrayTemplateBuilder to ensure proper handling of byte data types in the application
added Hipchat configuration to SamlServiceProviderProperties and created a new CasSamlSPHSPHSPConfiguration class to enhance SAML service provider
changed the type of commandRegistryUrls from List to Set and added a HashSet to set the list of command registry URLs to improve performance by
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve debugging and traceability of warning messages
remove checkloggedin ( ) from svnrepositoryconnector . login ( )
camel - 14284 : camel - activemq - configure should not create a transactionmanager if it ' s not transacted
fix typo in vmwareresource . tostring ( )
refactor Timers class implementation to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java `
[ hotfix ] [ test ] remove deprecate tokenizer constructor in favor of new one
removed the ` Map < Object , Object > ` interface from the ` ScriptObject ` class and updated assertions in ` ContextTest ` to simplify the
refactor EventBusMetrics class to improve metrics handling to enhance performance and maintainability of event bus metrics
[ hotfix ] [ workflow ] add a method to retrieve locale from eperson . getlanguage ( ) .
updated the JaversTransactionalDecorator class to implement InitializingBean and added a afterPropertiesSet method to ensure proper initialization of the JaversTransaction
removed null check for pgTypeName before adding it to _ pgNameToSQLType to simplify the code by eliminating unnecessary null checks
added multiple calls to ` setServer ( ) ` for multiple handler instances in ` ScopedHandlerTest . java ` to ensure correct server configuration for
fix calltimeoutexception in waitnotifyserviceimpl and calltimeoutexception
fix checkstyle issue in restloginprocessingfilter
updated permission check from ` Objects . equals ( " ) ` to ` . equals ( " * " ) ` in ` CommandMap . java
renamed the ` encoding ` variable to ` sourceCharset ` and updated its usage in ` AbstractCompiler ` and ` ICompiler ` to improve clarity and
changed the data type of postLogin from byte [ ] to String in HostBean , TerminalBridge , and HostDatabase classes to improve type safety and
refactor simulation handling in GeneralOptimizationDialog to use GenericComponentModifier and FlightConfiguration for improved clarity to enhance code readability and maintainability by reducing
camel - 15836 - camel - main - add contextreloadstrategy to camel - main
updated logger configurations in CommonTestUtils . java for better clarity and consistency to improve readability and maintainability of console output
refactor PrologSizeSanityCheck class for improved readability to enhance maintainability and facilitate future updates
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a check for non - markSupported before invoking the method in RequestBody . java and created a test for non - mark functionality in RequestBody
[ neo4j ] do n ' t check for empty beans type argument list when no class be available .
update movementdebugcommands to use health instead of normal speed value
updated the ` RandomLoadBalancer ` constructor to include a ` halfLengthTotalWeight ` parameter and modified the ` random ` method signature to include an additional
refactor GsonParser to simplify cache string handling and improve error reporting to enhance code readability and maintainability by eliminating unnecessary validation checks
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 , http :
rename the ` checkTransactionSynchStatus ` method from ` checkTransactionSynchStatus ( ) ` to ` pulseTransactionCoordinator ( ) ` to
replaced ReentrantLock with PipeTaskCoordinatorLock in PipeTaskCoordinator . java and added a new PipeTaskCoordinatorLock class to improve thread safety and provide a
added a conditional check for preinstrumented jars in DefaultSdkProvider to conditionally use preinstrumented jars based on system property to enhance
changed the condition from ` ! isSilent ` to ` isSilent ` in ` ExecDriver . java ` to simplify the conditional check for silent mode
added validation checks for default value and required fields in IndexSchema . java and created a test for unsupported attributes in BadIndexSchemaTest . java to
patch by jbellis ; review by brandonwilliams for cassandra - 1449
replaced ` ImmutableSortedSet ` with ` Iterables ` and updated ` addAllSystemIncludeRoots ` method to use ` Iterables . transform `
refactor ` AdaptableX509CertSelector ` and ` ForwardBuilder ` to include a new boolean variable ` isSKIDSensitive ` and improve
[ log4j2 - 1343 ] remove unnecessary try / catch block in nosqlappender
added a @ Deprecated annotation to GuiScreenEvent . java to indicate that the method is outdated and should no longer be used
removed unused methods from CategoryEditSearchRecyclerViewAdapter to streamline the codebase by eliminating unnecessary methods
update ebean - cache factory to use servercachetype instead of servercachetype .
refactor the initialization of ` massOverriddenBy ` and ` CGOverriddenBy ` to iterate through all components to improve code readability and
[ nbjavac ] fix thread safety issue in javacompilationservice
refactor MultiThreadedBuildRuleResolver to use a Supplier < V > instead of an abstract class to improve code readability and maintainability by
refactor the WanReplicationServiceImpl class to use a thread - safe executor initialization to improve thread safety and prevent potential null pointer exceptions
added null checks for ` getSd ( ) ` and ` getSd ( ) ` in ` Partition . java ` and ` DDLSemanticAnalyzer
refactor LocalServiceRegistryClientImpl and RemoteServiceRegistry to use lambda expressions instead of lambda expressions to improve code readability and reduce boilerplate
added unit tests for file deletion functionality in ` FilesTest . java ` and created a static method ` delete ` in ` Files . java
removed unnecessary try - catch blocks from ServerSocketAdaptor and SocketAdaptor to simplify resource management by eliminating unnecessary exception handling
updated the class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replaced the method of adding a working directory with a method call to addWorkingDir to improve code readability and maintainability by using a dedicated method
added null check for ` cn ` in ` ItemInfo . java ` and updated insets in ` Workspace . java ` to ensure proper handling of null
changed the access modifier of the String constant from public to private to restrict access to the String constant for better encapsulation
removed the HTTP redirect from the Java file path in SimplePostTool . java to simplify the URL structure for better readability and maintainability
apps - 219 add geosymbolic ( ) method to item . issymbolic ( ) and add test
refactor ShutdownThread registration logic in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to ensure proper cleanup of client container resources
added a null check for the type parameter in the condition to ensure that the condition correctly handles cases where the type is null
close the web application context after each test to avoid memory leak
added a method to retrieve the search string from request URIs and updated the search functionality in RemoteBrowseHandler to improve user experience by allowing users to
removed the visibility of the neutral button in SetupEncryptionDialogFragment to enhance user experience by providing a visual indication of the neutral button
hhh - 14247 - itemdao . countitems ( ) method now include includewithdrawn , not includewithdrawn
updated string concatenation in DDLTask . java for consistency to improve readability and maintainability of the code
added logging for OAuth2 exceptions in CheckTokenEndpoint . java to improve error handling and logging for OAuth2 exceptions
refactor XYDrawableAnnotation , XYCategoryItemLabelGenerator , XYAreaRenderer , CrosshairPlot , and BoxAndWhis
refactor identity zone integration tests to use ParameterizedTypeReference for better type safety and clarity to enhance code readability and maintainability by using more descript
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame , DataBrowser , and SQLConsole to increase dismiss delay from 20000 to 10000
added support for JUnit 5 in the ActionProviderImpl class to ensure compatibility with JUnit 5 and improve compatibility with JUnit 5
replaced HumanReadableException with IOException in WorkerShellStep . java to improve error handling by using RuntimeException instead of HumanReadableException
[ hotfix ] [ table - common ] move @ experimental to @ experimental to avoid confusion
[ hotfix ] [ javadoc ] fix typo in streamcepstrumsource javadoc
added a check to ensure the index is within the bounds of the items array to prevent index out - of - bounds errors
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure correct handling of parenthesis expressions in tests
added a confirmation flag to the debugPaste command in the CommandCategory . DEBUG to enhance user experience by allowing confirmation of the debugpaste command
updated method calls in JerseyWebEndpointManagementContextConfiguration and WebFluxEndpointManagementContextConfiguration to use orElseThrow for endpoint retrieval to improve error
do n ' t focus math quantumgggggggggggggggb on textarea
updated GoBinaryDescription to use ` GoBinaryDescriptionArg ` instead of ` Arg ` to align with the new naming conventions and improve code clarity
updated environment variable retrieval logic in Jooby . java to use URL for configuration to improve flexibility in handling application environment configurations
replaced ` RetryListenerSupport ` with ` SecondDummyRetryListener ` across multiple files to standardize retry functionality and improve clarity in the codebase
[ geot - 498 ] fix # 498 report metric with decimal ( # 498 )
changed email and commits variables to be final and added a constructor to the Contribution class to enhance immutability and ensure immutability of
modified the loop condition in JUnitFormatter to use a do - while loop instead of a loop to improve code readability and maintainability by reducing
changed the variable name from ` elements ` to ` tmp ` and added a conditional check for ` LinkedList < E > ` to ensure that ` elements
updated error messages in StaxEventItemReader to include resource URL to improve debugging by providing clearer context on the error
fix testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget . testmultirendertarget
added null check for currentProfile before retrieving client result to avoid potential NullPointerExceptions when currentProfile is null
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure correct namespace declaration is added to
added BigInteger values for various BigInteger values in KeyStoreManager . java to enhance security by enforcing stricter algorithm requirements
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` Mesh
[ activiti - 5 ] set engine version in bpmn deployer to activiti - 5
updated resource loader properties from " class " to " resource . loaders " and " resource . loaders " in SpecificCompiler . java to
added verification methods for thread attachment in CEntryPointSnippets and VMThreads classes to enhance thread management by allowing verification of thread attachment status
added null check for the map before adding values in GenericUDFMapValues . java and created a new test class TestGenericUDFMapValues
updated the property name from " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to clarify the purpose of
energy generator : allow oil wells to be enable by default
[ hotfix ] [ runtime ] add . clean - me file to the import context
fix memoryrealm . readxml to use sm . getstring ( ) instead of sm . getstring ( )
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
updated EXTID _ ZIP64 , EXTT _ FLAG _ ZIP64 , and NTFS constants in ZipConstants64 . java
refactor ` newFileSystem ` and ` newFileSystem ` methods in ` ZipFileSystemProvider ` to utilize ` ZipError ` for file handling to
replaced ` Box . createHorizontalStrut ( ) ` with ` Box . createHorizontalGlue ( ) ` in ` IfControllerPanel . java `
updated the initialization of the connection variable in FailoverUpdateURIsTest . java to improve code readability and maintainability
added Gson annotations for JSON serialization in ServiceOsSpecific . java to enhance JSON serialization capabilities for better data representation
add deletebook ( ) method to databaseadapter . deleterecord ( bookuid )
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability
corrected the calculation of the buffer size in AbstractAjpProcessor . java to correct the calculation of the buffer size
adminconsoleplugin should restart the admin console server if it fail to start .
replaced unregisterHandlers ( ) method calls with MessageConsumer < ? > in WebSocketImplBase . java to improve code readability and maintainability by reducing
added properties for device ID transformation , enable ID table , and log files in IoTDBDescriptor . java to enhance configuration flexibility for the application
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 in ExitableDirectoryReaderTest . java and added a new Delaying
http : / / issues . apache . org / jira / browse / rfc3161 / rfc3161 / testsignatureinfo . java fails
[ flink - 18223 ] [ table - planner - blink ] replace scriptbuilder . data with scriptbuilder . write ( )
updated the expression to include " / schema / types / fieldType " to include " / schema / types / fieldType " to ensure compatibility with additional schema
updated the ` Completers ` class to include ` NullCompleter ` and added a new test class ` OptionCompleterTest ` to ensure that the
fix checkstyle issue in s3utils . java
change sourcePeerId from String to int in multiple classes to improve compatibility with larger source peer IDs
use uploadfile ( ) instead of uploadfile ( ) when upload a zip file .
updated the reply button ' s alpha value in TweetFragment . java to improve the visual appearance of the reply button
[ hotfix ] [ test ] fix test failure in accesslogsupporttest
update marycachetest to use temporary directory instead of hardcoded path
removed redundant null checks for subscribers in SettingImpl . java to simplify code and improve readability
refactored the initialization logic in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to use an IllegalArgumentException instead of a static block to simplify
replaced printStackTrace ( ) calls with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of printing stack
added a condition to check if the asset directory is in dev mode and updated test cases in AssetsControllerTest to ensure proper handling of static directory
[ hotfix ] [ state - backend - rocksdb ] add writeoptions parameter to rocksdbkeyedstatebackend
updated the default format string from " value - tag - index " to " value - index " to correct the spelling of " value - tag
do n ' t set hint for dijkstrabi in mainactivity
change default value of native secp256k1 and altbn128 pairing precompiled contract to true
rename ` DuclsSandboxTest ` to ` SandboxTest ` for consistency to improve code readability and maintainability by using a more descript
camel - 14265 : camel - cxf should use exchange . exchange . exception instead of log a warning .
changed the access modifier of the ` forwardPropagateTree ` method from package - private to public to allow access to the method from other packages
[ hotfix ] [ table - planner - blink ] fix test failure in jdbcexample
add a warning when interpolate file location in profile activation
refactor Style class to improve code organization to enhance maintainability and readability of the code
added zoom handling functionality to ShareActivity to enhance user interaction by allowing zoom - out interactions
added a condition to skip processing for deprecated fields in Json . java to ensure proper handling of deprecated fields during deserialization
added animations for showing and hiding the layout in LauncherFragment . java to enhance user experience by providing smoother transitions when the layout is displayed
refactor method invocation in Utils . java for improved readability to enhance maintainability and readability of the code
added Progressable parameter to multiple createSequenceWriter calls across multiple classes to enhance functionality by allowing progress tracking during file operations
[ hotfix ] fix typo in sourcecoordinatorprovider . java
remove contribution from panelByContribution and update panel ordering and color updates in ContributionListPanel . java to ensure proper panel ordering and color updates
renamed ` HyervisorTemplateAdapter ` and ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and updated the
added a check to set the user ' s directory if it is empty in RegularFileObject . java to ensure the user ' s directory is
updated the sampleRate assignment in DefaultAudioSink . java to use a default value of 48000 instead of a hardcoded value to ensure consistent
log4j2 - 1343 add a filter method to check if a message be a match .
updated test cases in VerificationInOrderWithCallsTest . java to improve test coverage for verification functionality
updated the parameter from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method to ensure correct positioning of
updated COLLECTION _ DELIM constant from " colelction . delim " to " collection . delim " to align with the new naming convention
[ zeppelin - 4892 ] add test case for listener connectatstart ( ) to ensure that the listener be connect at start .
[ gr - 5355 ] fix documentation for functiontio ( # 5355 )
replaced ` SystemProperties . getBoolean ( SUPPORT _ SUPPORT _ ONE _ HANDED _ MODE ` with a boolean variable ` mIsOne
added onDetachedFromWindow ( ) method to manage lifecycle tasks in AppsCustomizePagedView . java to ensure proper cleanup of task
added a dictionaryResource parameter to MorfologikAnalyzer and MorfologikFilterFactory constructors and updated the MorfologikFilter to
changed the count variable from ` count ` to ` thrown ` in ` ResultSetTest . java ` to simplify the test by eliminating unnecessary increments and
updated the log message format from " debug " to " " in GradleBuildService . java to simplify the logging output for better readability
replaced AtomicReference with AtomicBoolean for preventedByLocking , preventedByLocking , and MVCC in AbstractPhenomenaTest . java to
refactor tooltip text handling in ComponentTreeRenderer to use a dedicated method to improve code readability and maintainability by reducing duplication
increased the timeout duration from 5 seconds to 10 seconds in the await method from 5 seconds to 10 seconds to allow more time for the zipkin server
add deviantart username and password to ripme when login to ripme
updated GOOGLE _ GOOGLE _ SIGNATURES and GOOGLE _ LEGACY _ KEY constants in PackageUtils . java
fix importdirsolveallturtletest to use createsolutionbusiness ( ) instead of createsolutionbusiness ( )
added a method to notify window state changes in WWindowPeer . java to improve state management and logging for window state changes
added description to entity group key content formatters in EntityGroupKeyContentFormatter and TestEntityGroupKeyEmailContentFormatter to enhance user experience by providing
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` in ` UserData . java ` to ensure
updated language retrieval logic in Locale . java and added error handling in LocaleTest . java to improve robustness by avoiding unnecessary calls to getISO3
refactor DatabaseChangeLog parsing to use a dedicated createUpdateVisitor method to improve code readability and maintainability by reducing redundancy
added a check for screen pinning active in OverviewCommandHelper . java to prevent processing when screen pinning is active
added ` mNoDataText ` and ` mNoDataTextDescription ` fields to the ` Chart ` class and updated text drawing logic accordingly to
added synchronized block to check the head written response in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety when accessing
refactor nettyresponse to use sslhandler instead of chunker .
added support for the " http " header in Http2TestBase and updated test cases in TestHttp2Section _ 8 _ 1 and TestHttp2
fixed - redissonlocalcachedmap . keySet ( ) and redissonlocalcachedmap . values ( keypattern , valuepattern , keypattern ,
camel - 14263 : camel - jpa - add a dostart ( ) method to make it easy to configure the jpa component .
updated jumpSpeed assignment from fallSpeed to jumpSpeed in PhysicsCharacter . java and PhysicsCharacter . java to ensure consistency in variable naming convention
added a null check for reparsedFunction before processing syntax extensions to prevent potential NullPointerExceptions when reparsedFunction is null
updated logging statements in BitstampPusherService . java for consistency and clarity to improve code readability and maintainability by standardizing logging practices
added a new constant ` OLD _ SEGMENT _ PATH ` and deprecated methods to ` getOldUploadSegmentHttpsURI ` in ` File
updated the method call from ` dbCol . findOne ( ) ` to ` dbCol . findOne ( filter ) ` in ` MongoDbTailTracking
added assertpredicatefails ( string expression ) method to languagetestsupport .
added a alpha value bound to the range of alpha in RecentsView . java to ensure consistent alpha values across the application
update import package version handling in ManifestReversion . java to ensure correct versioning of the Import - Package attribute
refactor DataSyncConfiguration class to improve code organization to enhance maintainability and readability of the code
added import for JavaSnippetRepository and initialized JavaSnippetRepository in JavaLanguageServer . java to ensure proper initialization of Java snippets in the application
added a loop to iterate over numTimeBuckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to improve code readability
[ hotfix ] [ test ] update chromedriver to use http : / / chromedriver . storage . googleapis . com / index .
camel - 14263 : camel - pg event producer should use try - with - resources to avoid resource leak
updated imports from ` syndication ` to ` rometools ` in ` FeedParser . java ` and added a close method call to
[ java ] set totalbytestotransfer to 0 if no content - length header be specify .
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the constructor of EnhancedRuntimeException from the EnhancedRuntimeException class to streamline the constructor and improve code readability
[ hotfix ] [ test ] fix test failure in socketappendertest
camel - 14265 : camel - spring - boot : remove unused endpointbuilders from camel - core
updated method signatures in ByteArray . java for consistency and clarity to enhance error handling and improve code readability
added a method to disable input proxy on touch events in RecentsAnimationWrapper . java to enhance control over input handling during touch events
removed the @ Ignore annotation from RestletDomainServiceTest . java to temporarily disable the test due to issue CAMEL - 6770
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ( ) ` method in ` HashTableTemplate . java ` to simplify
test : move modulepath to test / test / test / modulepath
[ hotfix ] [ runtime ] add sourcedirs configuration to classpath .
updated menu item ID from open _ web to mute _ hashtags in TweetPager . java to streamline the user interface by eliminating unnecessary
rename test methods from " nodeIsAncestorOfItself " to " nodeIsNotAncestorOfItself " in AncestorDescendantTests and HasParent
update worldeditplayer to use math . max ( 0 , 0 ) instead of math . max ( 0 , 0 )
added PathNotExistException handling to the selfCheckDataTypes method in InsertNode . java to ensure proper handling of non - existent data types
updated closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ stream ] remove mailboxexecutor from operator factory
hbase - 26464 add support for settablestateinmeta and fixmeta ( ) in hbck
updated the method call from ` meter : : getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests
fix junit4classrunner to use getjavaclass ( ) . getjavaclass ( ) .
use lasttimedata instead of remoteitems for delete
updated the calculation of allAppsCellWidthPx in DeviceProfile . java to adjust the cell padding for better layout consistency
[ hotfix ] [ core ] add parent first log pattern to coreoptions
updated method calls from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure correct
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the writer is properly
updated the ` close ( ) ` interface to extend ` Closeable ` and changed the return type of ` close ( ) ` from ` Connection ` to
refactor GetLocations class to improve code organization to enhance maintainability and readability of the code
replaced ` printStackTrace ( ) ` calls with ` if ( ex = = null ) ` in ` SchemaValidatorTask . java ` to simplify error handling
updated exception handling in Contents . java to throw a UncheckedIOException instead of throwing an IOException to simplify error handling by eliminating unnecessary exceptions
updated ` GeneratePubkeyActivity ` to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with newer Android versions
ruby flavor : refactor to use stringbuilder instead of string
updated logging level from warning to debug and added null checks for username and password in DerbyDatabase , BaseLiquibaseTask , and DiffDatabaseTask
[ java ] remove the usecaches flag from nio2endpoint
refactor ` CasGeoLocationConfiguration ` to accept ` CasConfigurationProperties ` instead of ` MaxmindProperties ` to improve flexibility in
[ java ] fix test for instructorfeedbackresultspageuitest . testfeedbackresultspageuitest
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter in the conditional statements to enhance flexibility by allowing the use of
removed public access modifiers from multiple methods in ApprovalStore , ApprovalStore , and ApprovalsControllerService classes to restrict access to these methods
added a new boolean variable ` mStartedDownload ` and a delay to cancel the downloader notification to improve user experience by preventing unnecessary downloads when
updated method names from ` getOpenView ` to ` getAnyView ` in ` AbstractFloatingView ` and added a new method ` getView
updated project version from " 1.0 . 11 " to " 1.0 . 13 " in JFreeChartResources . java to reflect the latest release of the
replaced direct calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve thread management and
refactor GsonBuilder class to improve code organization to enhance maintainability and readability of the code
added null check for centerGeo before adding to fixedPoints to avoid potential NullPointerExceptions when centerGeo is null
remove the espresso home option from espressooptions and remove it from espressoproperties
refactor ( ctcodeelement , cttypeelement , ctif , cttypeinformation , ctqueryingelement , cttypeinformation , cttype
changed the deleteSessionAction class to be final and modified its access modifiers to enhance encapsulation and improve code readability
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to improve code readability
updated the initialization of ` resultList ` and modified ` result ` initialization in ` JoinQParserPlugin ` , ` SolrIndexSearcher ` , and
updated triggerMediaScan method call to include the file parameter to ensure that the media scan triggers correctly for the specified file
removed the conditional check for printTestResults in TestRunning . java to simplify the code and improve readability by eliminating unnecessary conditional checks
added multiple settings for custom G - code text in MainWindow . java to ensure consistent handling of custom G - code settings across the application
[ hotfix ] do n ' t use dom4j . io . outputwriter in some case .
refactor JsonElement class to improve code organization to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and reset exception ignores in TestBadConfig . java to ensure proper exception handling during test execution
added a new method ` removeFragmentsAndActionBar ( ) ` to ` GpsMainActivity ` to handle fragment removal and action bar closure to
removed the " = = RRB = " token from the tokens list in TokenizerAnnotatorITest . java to streamline tokenization
updated ` RemoteMediaHandler ` , ` RemoteRawHandler ` , and ` RemoteRawHandler ` to use ` Range . Byte ` instead of `
updated G - code file paths and added new test cases in VisualizerCanvas . java and GViewParse . java to improve test coverage and ensure
added new version strings " 8.0 . 0 - cfs " and " 8.0 . 0 - nocfs " to the TestBackwards
updated the formatting of the method call in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain
added a check to close the exchange client if the output stage is not completed to ensure proper resource management and prevent potential memory leaks
do n ' t create temporary folder when check for file in integrity check
removed the import of SolrClient from ChaosMonkey . java to streamline the code by eliminating unused dependencies
added null check for the ` fas ` variable in ` ConfigurationActivator . java ` to prevent potential NullPointerExceptions when ` fas ` is
reformatted code in NestedRepositoryTreePanel . java for consistency to improve code readability and maintainability
make the extensiontypeheader constructor public and add a check to ensure that the type be within - 128 to prevent runtime errors
pdfbox - 4071 : remove redundant try / catch block , a suggest by valerybokov
[ hotfix ] make pushonshutdown configurable to PrometheusProperties
refactor ReactiveStateMachineExecutor to include a new ` REACTOR _ CONTEXT _ TRIGGER _ ERRORS ` parameter and add error
added a test for setting Python executables on path first in BuckConfigTest . java to ensure correct behavior of Python executables in the configuration
added a default button to the InitialAccountRegistrationFrame to enhance user interaction by allowing the sign - in button to be clicked
added TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN _ REDUCTION _ FOR
updated error messages in RegistrationRestRepository to include the exception parameter to improve debugging by providing more context on the error message
move reflectionutils to util package instead of reflection . reflection
added a static method ` listableCollector ` to ` OidcIdTokenClaimCollector ` and created a corresponding test class ` Oidc
removed the ` center ` field from multiple Circle , Ellipse , and Polyline classes to streamline the code by eliminating unnecessary variables
refactored conditional check in RegisterAndProcessBundleOperation . java to improve code readability and maintainability
refactor SslContextFactory to improve SSL context handling to enhance security and performance during SSL operations
[ hotfix ] [ config ] remove @ ignore annotation from configurationproperties
change return value from " access _ confirmation " to " access _ confirmation _ error " in AccessController . java to clarify the purpose of the confirmation
add a consumerclassloaderfilter to allow use of the context class loader
pdfbox - 4071 : make hssfsheet . shiftrows ( ) a suggest by valerybokov
updated roll icon and pressed icon settings in FontImage . java to ensure correct handling of pressed icons for better user experience
refactor TaskViewUtils and TaskViewSimulator to use mGridTranslationY instead of a hardcoded value to improve code readability and maintain
refactor Assertions class methods for improved readability to enhance maintainability and facilitate future updates
added null check for currentDateTimeFunction in multiple database classes to ensure consistent retrieval of the current date and time function across different database implementations
added an anonymousPath method to IOUtils and updated logging in Log4jUtils to utilize it for path handling to improve code readability and maintain
updated the ` DigitalWellBeingToast ` and ` TaskView ` classes to include a new ` contentDescriptionForTask ` parameter to
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 420 : wait for meta
updated LineNumberTagAggregator and TestDominance classes to improve code organization and maintainability
use stateconverterutil . defaultconversion instead of null to avoid npe
updated BidirectionalOneToOneNPlusOneTest to use ClassImportIntegratorProvider and added a new test for fetching Post and Details Projection
removed the extra empty screen from the search page index and adjusted the startSearchPageIndex initialization logic to ensure proper handling of empty workspace screens
fix npe in markbasepointersphase and add null check in indexedvaluemap
updated string literals in GoogleLineChart and GooglePieChart to use single quotes instead of single quotes to ensure consistency in string formatting across the
refactor wait logic in SendingAccountor . java to use addAndGet for batches to improve readability and maintainability of the code
added position field and logging functionality to the WALPrettyPrinter class to enhance the printing capabilities by allowing users to set and log the position of the
updated the port of the Transceiver from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to correct the port
added sorting of events before generating a report in SimpleReport . java and created a corresponding test in SimpleReportTest . java to ensure that events are
added a new test method ` getCsvLineWithDoubleQuote _ DescriptionContainsDoubleQuote ` to ` CSVFileLoggerTest ` to verify the functionality
add coref . doscore / chinese / chinese / chinese / chinese / chinese / chines
bugfix : iqrouter and iqhandler do n ' t check for remote jid
removed the @ JniImpl annotation from VM . java to clean up the code and improve maintainability
updated configuration settings in Fetcher2 . java to use Protocol . CHECK _ ROBOTS instead of hardcoded values to improve code read
added a condition to check if the video HDR format format is not " dolbyvision " in FFMpegVideo . java
updated package names from " other _ package " to " other _ package2 " in AstTests . java to reflect changes in package structure
fix worldborder . setdiameter ( ) and setdiameter ( ) do n ' t work
hbase - 24286 addendum remove replication status from master ( # 241 )
updated the ` checkOpen ` method to include a ` EventRenderable caller ` parameter and modified the ` checkOpen ` method signature to include a caller parameter to
refactor ` dataResourceOnline ` method calls to use a new method for generating instance configurations to improve code readability and maintainability by reducing
changed the visibility of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add unit test for read erroneous maven project contain reference
removed redundant null checks for protoHistory in PropertyMap . java to simplify the logic for better readability and maintainability
refactor relay handling in DoorbirdInfo and ControllerConfiguration to use a streamlined list of relays to improve code readability and maintainability
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource management and avoid potential memory leaks
removed the condition for generating refresh token in OidcConsentApprovalViewResolver . java to simplify the condition for better readability and maintainability
removed debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with a custom NoopGetter interface in BaggagePropagation . java to improve code readability and maintainability by using a
refactor ConditionalOnEnabledResourceChain class to improve code organization to enhance maintainability and readability of the code
added a condition to check if the treeRoot has a child before processing to ensure that the treeRoot has a valid child before proceeding
replace ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure
updated logging statements in FacebookImpl . java to use CN1 instead of System . out to improve clarity of log messages and ensure proper handling of
updated return values in ShadowICU from " h : mm a " to " skeleton " in ShadowICU . java and added tests in Shadow
removed the KeyguardManager dependency and simplified the condition in TouchInteractionService . java to simplify the code by eliminating unnecessary dependency on KeyguardManager
cloudstack - 10225 : avoid npe when create a volume with custom volume ( # 11486 )
replaced FileChannel with AsynchronousFileChannel and added position handling in UtowBodyHandler . java to improve performance by using asynchronous file channels instead of
[ hotfix ] [ runtime ] fix checkstyle violation in sigint
ggb - 221 : make text . getmineditorwidth ( ) return text . update ( ) instead of updatebyboundbounding
change return value from - 1 to 0 in Asset . java to correct the behavior of the method
refactor ComputeBenchmark to use Callable < Integer , Boolean > instead of any lambda expressions to improve code readability and reduce boilerplate
added setOnRefreshListener to UploadListFragment to notifyDataSetChanged ( ) on refresh to ensure that the data is updated when the fragment is refreshed
remove file . tofile ( ) from bibdatabasecontext . getdatabasefile ( ) and setdatabasefile ( )
replaced instances of ` items [ i ] ` with ` get ( i ) ` in ` ParticleEffect . java ` and added a dispose method
refactor Tomcat to use findServices ( ) and findChildren ( ) method to improve code readability and maintainability by encapsulating
updated string formatting in BuildRuleFactoryParams , Console , and BuildRuleFactoryParamsTest classes to improve readability and consistency of error messages
added a check to return early if the playback state is not playing to prevent unnecessary processing when the playback state changes
updated the retrieval of ServiceComponentDesiredStateEntityPK to use findById instead of findByPK to simplify the code and improve performance by avoiding unnecessary dependencies
added a new class ` InnerClassFieldClash ` to the ` Java2TypeScriptTranslator ` and created a new test class ` Structural
added logging and followRedirectFilter functionality to DockerClientFactory and DockerClientProfile classes to enable customizable logging behavior for Docker connections
replaced direct displayChanged ( ) calls with awtUnlock ( ) and added a try - finally block to ensure thread safety during displayChanged operations
hhh - 10183 : use sqlserver2008dialect instead of sqlserver2008dialect
pdfbox - 4071 : do n ' t call verifyzipheader ( ) in case of failure .
changed the visibility of the ` storeClassFile ` method from private to public to allow access to the method from other packages
added a new test class ` TestSortedSetDocValues ` and modified ` comparingIdentical ` in ` ecj . javadocs . prefs `
updated error messages in CGIHandler . java and added a new JavaVM callback handler in JavaVM . java to improve clarity of error messages and
added support for a new line character " 033 [ 0m " in the LineReaderImpl class to ensure compatibility with new line endings
changed the data type of ` List ` and ` hashCodesToFetch ` from ` List ` to ` Set ` in multiple classes to improve performance and
added a check to return early if the vertex count is zero in OGLESShaderRenderer . java to avoid unnecessary processing when there are no vertices
updated test methods and error handling in IncorectBindingPuzzleFixedTest . java and DescriptiveMessagesOnVerificationInOrderErrorsTest .
replaced ` FileUtil . createData ( root , path ) . delete ( ) ` with ` FileUtil . createFolder ( root , path )
remove unused import from typesystem . java
refactor JsonObject class implementation to improve code readability and maintainability
added a condition to check if idleTime is greater than zero in SelectChannelEndPoint and HttpConnection classes to ensure that idleTime does not exceed the
fix typo in cansustainplant call
added CREATE TABLE SALTEDTABLE123 and modified SQL queries to include MULTI _ TENANT _ BUCKETS in multiple classes to enhance
updated SimpleDateFormat to use Locale . US for date formatting and added a new class B6791927 to ensure consistent date formatting across different locales
removed duplicate database close calls in DbHelper . java to improve code readability and maintainability
increase timeout for batchmessagelistenercontainerintegrationtests to 5 second
[ gr - 26469 ] make economyallocationstage a option for tracera .
add save key binding to the code area for save key in the source tab
refactor ObjectMapper initialization to use a static block to ensure consistent line endings for better readability and maintainability
updated path handling in NativeEnvironmentRepository to replace backslashes with backslashes to ensure consistent path formatting across different operating systems
added a PostConstruct annotation to BaseTest and modified Application initialization in multiple test classes to streamline application initialization and improve resource management
[ java ] remove validateexistinglog ( ) method from recordinglog
use errorgroupname instead of group name in ITsystemtest . java
testfuscation : remove sleep ( ) from flaky test
added a boolean variable ` reverseImage ` and modified the initialization of shared preferences in ` CameraManager . java ` to improve code readability and maintain
updated string comparisons in multiple files to use ` . equals ( ) ` instead of ` . equals ( ) ` to improve code readability and
add a predicate to terserutil . replacefieldsby ( Triple < Triple < Triple < BaseRuntimeChildDefinition , IBase > > )
updated JUnit 4 test imports from JUnit to JUnit 5 in AuthenticationSuccessListenerTests . java to ensure compatibility with JUnit 5 features
replace new . arraylist ( ) with new . arraylist ( ) . indexOf ( ) in settypes . java
refactor TypeUtil class to improve code structure to enhance maintainability and readability of the code
updated the ` triggerTime ` variable to use ` LocalDateTime . ofInstant ( ) . toZoneId ( ) ` instead of ` LocalDateTime ` to
added a method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` to handle abstract method errors to improve error handling for abstract method
camel - 14297 : camel - simple : fix invalid syntax error in simple expression
removed an empty check for ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary checks for empty
camel - 14297 : camel - cloud - aws - jcloud should copy the is / cos value from the payload instead of use it
camel - 14284 : camel - cdi should not be release due to OSGi bundle not be release
updated flags check in Check . java and added a new test class CheckACC _ STRICT _ STRICT _ STRICT _ STRICT _
[ java ] increase driver timeout for channel validation test .
added a new file ` FileExtensions . java ` that defines constants for CLANG _ SOURCES , CLANG _ HEADERS , and HPP
replaced the ThreadLocalDateFormat instantiation with a ThreadLocal initialization for ISO8601CanonicalDateFormat to simplify the code and improve performance by avoiding unnecessary object creation
[ hotfix ] [ runtime ] remove unused deprecate flag in vmdeprecatedoptions
added display name property to multiple client properties and updated related configurations to enable dynamic display name configuration based on environment variable
added EarlyTerminationException to multiple operator classes to improve error handling by providing a specific exception for early termination scenarios
[ hotfix ] fix checkstyle violation in tracefunctionaroundwrapper
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 42139
fix npe in forgeeventfactory . getcapabilities ( ) when parent be null
wallettool : catch keycrypterexception instead of keycrypterexception
added @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that the service is outdated and should no longer be used
[ hotfix ] [ table - common ] fix typo in hyphenationtree
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to ensure proper synchronization during the registration process
move resource . getsettings ( ) to javax . swing . resources . simpleaccreg package , since it ' s no longer need .
corrected a typo in the PARAMETER _ NEEDS _ TO _ BE _ NAMED message in ParameterBinder . java to improve clarity
set providersChanged to false in ConfigurationManager . java to ensure proper handling of provider changes
added a method to quote identifier tokens in the SemanticAnalyzer class to enhance token handling for Hive lexers
added a check for missing ' name ' entry in the PostScript file in FileSystemFontProvider . java to ensure that a missing ' name ' entry
replaced ` AbstractAnalysisFactory ` with ` AnalysisSPILoader < ? extends T > ` in ` SolrResourceLoader . java ` to improve type safety and
updated the condition for determining the hit position in the Window class to improve the accuracy of the hit detection logic
added a null check for the appManifest before setting targetSdkVersion to avoid potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog to use a unified method for adjusting configuration metadata to improve code readability and maintainability
added userName property to the Driver class and related classes to allow configuration of the user ' s name in the Driver class
camel - 14284 : camel - xslt - add getter and setter to camel - xslt component
added HadoopShim integration to ContainerRunnerImpl , TaskRunnerCallable , TaskExecutorCallable , TaskExecutorTestHelpers , and TestFirstInFirstOut
updated test cases in ShadowAssetManagerTest , ShadowContentObserverTest , ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest
add null check for context before log access in coyoteadapter .
[ java ] do n ' t use system . currentcount ( ) instead of system . currentcount ( )
do n ' t use java . vm . version instead of system . property . contains ( ` ` java . vm . version ' ' )
[ scb - 1641 ] fix npe in defaultlogpublisher when load metric model from log publisher
updated logback configuration file handling in FrameworkLauncherExtended . java to use resolveSystemProperty instead of system . err to improve flexibility by allowing configuration file resolution
updated method signatures in CipherExecutor , CookieRetrievingCookieGenerator , CookieValueManager , and related classes to use @ NotNull annotations to enhance
replaced ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` across multiple files to standardize escape functionality across the
refactor waitUntilReadyAndSucceed method to use try - with - resources for better resource management to ensure proper closure of the container
updated the test class name from TestLucene50FieldInfoFormatTestCase to TestLucene60FieldInfoFormatTestCase to reflect the new
removed unnecessary closing brace in RelativeDateFormatTests . java to improve code readability and maintainability
added a generateShieldAddress method to RpcApiService to handle ShieldAddress generation to enhance the functionality of the RpcApiService class
changed return type of ` readConsoleInput ` and ` readConsoleInput ` methods from ` byte [ ] ` to ` String ` in multiple terminal
updated regex patterns in TestStabilityRule . java to use wildcard characters instead of presubmit characters to improve readability and maintainability of the code
updated DefaultSolrHighlighter to limit fragment scores and added a new test for multi - valued fields to ensure that multi - valued fields do not exceed the
updated the tryToLogin method to accept username , password , and password parameters to enhance security by allowing credentials for the login process
updated entity handling in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to handle entity avatars
camel - 14297 : camel - jms - fix typo in camel - jms
removed the wrapCollection method from the update method call in DefaultSqlSession . java to simplify the code by eliminating unnecessary wrapping
added logging for unknown currencies in BTCEAdapters . java to improve error handling and logging for unknown currencies
[ java ] use candidatesubscriptionname instead of clientid in demandsubscriberbridge
pdfbox - 4071 : set average , spacing , and spacing tolerance to 0
updated startController method to accept a useTenantIsolation parameter and added createServerTenant and createServerTenant methods to enhance flexibility in managing tenant and server
replace ImmutableMap . builder ( ) with a direct casting of response . getValue ( ) in HasSettings . java to simplify code and improve readability
added a check for non - empty attrs in ProjectWorkspace . java to prevent potential ArrayIndexOutOfBoundsException when attrs . size ( ) is zero
added abstract methods for getProjectJdkName , getProjectJdkType , and projectLanguageLevel in AbstractIjProjectConfig and Ij
updated the terminology in HiveSessionProperties . java from " Experimenal " to " Experimental " to clarify the purpose of the optimization
added tests for handling user details in GrantedAuthorityEffectiveAclsResolverTests to ensure correct resolution of effective ACLs with different object types
use getSolvedJavaLangObject ( ) instead of reflectionmodel in javaparsertypedeclarationadapter . solvemethodintype
added a new constant ` MAX _ BUTTONS _ SUPPORT ` and modified the return logic in ` XToolkit . java ` to ensure the
updated import statements in RedefineInterfaceCall . java from jdk . testlibrary . assertEquals to com . oracle . java . testlibrary . assertEquals to
added a new ` MessagePackFactory ` class and modified the ` newUnpacker ` method in ` MessagePack ` to utilize it for
add ' is _ cave ' and ' is _ cave ' tag to forge tags .
rename ` present ` method from ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
updated layout handling in ComponentGroup . java to conditionally set UI IDs based on horizontal status to ensure proper UI ID assignment based on the horizontal
do n ' t use regex for url pattern in dOIserviceimpl
replaced instances of ` AndroidMultiTouchHandler ` with ` hasMultitouch ` in multiple input classes to simplify the code by removing unnecessary type checks
[ java ] : remove checkcommitposition ( ) from clusteredserviceagent to ensure that the commit position be properly close .
add a new entity ` UserSite ` , ` UserSiteId ` , ` UserSiteId ` , and ` RecordIdClassTest ` to
refactor port handling in HttpConverterRegistrar to improve error handling for malformed URLs to enhance robustness by providing clearer error messages for malformed URL
api : do n ' t return empty host or pool id if the host or pool id be not set
replaced the method ` openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` fileLength ( fileName ) ` to improve
refactor JavascriptCompiler to use ` generateClass ` instead of ` beginCompile ` and update method signatures accordingly to improve code readability and maintain
removed unnecessary synchronization from UISettings class to ensure thread safety when accessing shared resources
modified the visibility of the ` fireDataChanged ` method from private to public to allow access to the ` fireDataChanged ` method from other classes
[ te ] spannerio : improve error message when emulator fail to accept multiple transaction .
[ hotfix ] [ test ] use diamond operator instead of diamond operator
changed array types from double [ ] to short [ ] in ObjectInputStream . java and added CloneArray . java test for ObjectInputStream ' s cloning
remove unnecessary type cast in oidcauthenticationfilter . getnonce ( ) .
[ hotfix ] [ table - common ] add support for relationship field in inputset
added CAPABILITIES _ SERVER _ SLOGAN capability to FileDataStorageManager and updated related table metadata to improve capability management and
updated conditional checks for menuItem equality in DrawerActivity . java to improve code readability and maintainability
updated test to use JUnit ' s Assume class instead of JUnit ' s fail message to improve test clarity and ensure proper error handling during network
added a check for empty ` missingSymbolEvents ` in ` MissingSymbolsHandler . java ` to prevent processing when no valid symbol events are present
updated string concatenation in StringHelperTest . java to include additional data types to enhance readability and maintainability of the test cases
added a warning log for data provider holders in Parameters . java to inform users that the data provider is not returning an empty array or iterator
camel - 14284 : use collections . empty ( ) instead of collections . empty _ set for java 8 compatibility
updated XML version from 1.1 . 0 to 1.1 . 8 in FreeplaneVersion . java and modified MapStyleModel . java to utilize new features
corrected the parameter name from ' mass ' to ' restitution ' in the setRestitution method call to improve clarity and consistency in
added a new file AutoFtpActivity . java that implements a FTP activity for testing FTP operations to facilitate testing of FTP operations within the application
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added getter and setter methods for ` getImageX ( ) ` , ` getImageY ( ) ` , ` getImageY ( ) ` , and `
added a new class ` RemoteExecutionEnabled ` and corresponding tests in ` BuildableSerializerTest ` and ` BuildableSerializerTest ` to validate remote
pdfbox - 4071 : fix typo in error message ( a suggest by valerybokov )
replaced FileReader with InputStreamReader in ImportCsv . java and added UTF - 8 warnings in PublicBAOS . java to improve code readability and maintain
added a assertion to verify that working scores are not stale in AbstractScoreDirector . java to ensure that the working score is not stale during execution
updated the configuration key from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion " in HiveConf
[ hotfix ] [ network ] add slf4j instance to ignore message content .
updated directory removal logic in SynchronizeFolderOperation . java and modified file handling in FileDisplayActivity . java to improve directory management and enhance user feedback
added assertions to validate the transaction hash in PollingTransactionReceiptProcessorTest . java to ensure that the transaction hash is correctly validated and validated
added a @ Deprecated annotation to the ISchemaRegion class and updated the test method name from ` testConstructSchemaBlackList ` to ` testDelete
added a null check for ` newFormat . sampleMimeType ` in ` MediaCodecRenderer ` to ensure that an exception is thrown when ` newFormat
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource `
updated @ AllArgsConstructor annotations to include @ JsonCreator . Mode . PROPERTIES and @ AllArgsConstructor _ in J . java to ensure proper
added SQLFeatureNotSupportedException for creating an index on a view in MetaDataClient . java to ensure that creating an index on a view is not supported
added a new class ` Website ` with properties for name , URL , and uri in the ` PopulatorImplTest ` class to facilitate the
added a setup method to set the default locale to " en " in BSFormatterTest . java to ensure consistent formatting across different locales
add a derpfilter to the coremodmanager so that it do n ' t complain about miss . jar . zip file
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to improve readability and maintainability of the assertion
added checks for single and single parameters in SimpleExprGenerator . java to ensure correct handling of variable expressions in the expression generation process
added a volatile boolean field ` createdVertx ` and modified the conditional check to include it to ensure that the ` createdVertx ` variable is
updated writeAttributes method calls to use a NodeModel instance instead of null to improve type safety and clarity in attribute handling
updated error messages to use " Synchroned " instead of " Synchroned " for consistency to improve clarity and prevent potential NullPointerException
added a new API property ` ignoredReadStatus ` to the ` Entries ` class and updated ` CategoryREST ` and ` FeedREST ` to
updated resource paths from ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` to ` MavenPaths . targetDir ( )
refactor data validation logic in RegisterServerConsumerExecutor and URIRegisterExecutorSubscriber to streamline data validation to improve code readability and maintainability by
updated the condition in GwtMusic . java to check if the sound is paused to ensure the music is only played when the sound is not paused
added PERMISSION _ ADMIN _ SUDO _ AREA permission to the permission checks in MainCommand . java and Captions . java
updated ` ServerRequestPlanVisitor ` to use ` HashMap ` instead of ` ImmutableMap ` and introduced a new ` updateQueryOptions ` method in `
replaced calls to ` toUri ( ) . getPath ( ) . endsWith ( " / " ) ` with ` path . getFileName ( ) . toString
updated assertions in ResourcesTest . java to include a new string variable for pure and mixEmojiAndText to improve code readability and maintainability by
added new native methods for NMTOverflowHashBucket and NMTMallocWithPseudoStack in WhiteBox . java to enhance memory management capabilities by
[ hotfix ] [ type - serializer ] rename EitherSerializerSnapshot to javaeitherserializersnapshot
refactor AddressResolverOptions to use AddressResolver . DEFAULT _ ROTTS _ RESOLV _ OPTION instead of a hardcoded value
added a call to ` __ associate ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplateTest ` to ensure
pdfbox - 4071 : avoid npe when get a non - terminal field ( pdfbox - 4071 )
updated XML namespaces from " liquibase / parser / core " to " www . liquibase . org / xml / ns / " across multiple files to
move commonmimetypelocator . java to test - source package
updated RepositoryVersionState from INIT to NOT _ REQUIRED across multiple files to ensure consistency in repository version state management
updated comparison logic in GenerateChangeLogTask to include schema comparisons to ensure accurate comparison between catalog and schemas
updated Test import statement from JUnit to TestNG in TestBackwardAnoamlyFunctionUtils . java to utilize TestNG ' s annotations
added a new file ` ProgressJPEGTest . java ` that includes Texture and TextureRegionDrawable classes to implement and test progressive JPEG
updated opacity settings in MaterialLoader . java to use a new float setting for ambient , emissive , emissive , and tex
fix native - image building on x86 architecture
added a null check for the text before setting the size in the Label class to prevent potential NullPointerException when the text is empty
updated the readVarInt ( ) method to use a constant value of 1 _ 000 _ 000 instead of a hardcoded value to
added a private constructor to PushUtils , PushUtils , ThumbnailsCacheManager , and ThumbnailsCacheManager classes to enforce immutability and prevent
simplified the calculation of the length in RocketPanel . java to simplify the code and improve readability by eliminating unnecessary loops
removed unnecessary cast to MockDirectoryWrapper to simplify code by removing unnecessary casting to MockDirectoryWrapper
updated the CSV file loading format from " . * " to " . * " in the componentPresetDao . load method to ensure the CSV file
updated accessibility announcement logic in TaskbarStashController , InvariantDeviceProfile , and FloatingIconView to use a temporary object array to ensure
replaced ` Args . getInstance ( ) . getInstance ( ) . getMyKey ( ) . getMyKey ( ) . getMyKey ( )
add targetjdk1 _ 5 support to targetjdk 1 . x
replaced PowerMockRunner with MockitoJUnitRunner and updated QuotaResponseBuilderImplTest to use MockitoJUnitRunner instead of PowerMockito to
added errStream and outStream variables to TestSchemaToolCatalogOps . java to improve error handling and error reporting
added a DFSClient parameter to the SaslNegotiateHandler class and updated related methods to include it to enhance functionality by allowing the DFS
updated MongoQueryMethod and related classes to include RepositoryMetadata parameter to enhance query functionality by integrating metadata handling
fix a bug in digester when there be an entityentityresolver2 .
updated import statements in MetaDataEndpointImpl . java for consistency to improve code readability and maintainability by reducing redundancy
added a retry mechanism to the ALLOWED _ REPEATED _ DEADLOCKS constant and modified deadlock count handling in TxnHandler . java
updated variable names from ` xl ` to ` xAxis ` in ` BarChartActivity . java ` , ` LineChartActivity . java ` ,
added utility methods to check printable characters in FsUtils . java to enhance character handling and support for printable characters in the application
rename ` ` in ' ' to ` ` using ' ' for consistency
add option to disable the process plugin in the project build process
updated calculations in ProxyConnectionManager , ProxyConnectionManager , ServerTrafficCounter , and ServerTrafficCounter to use a constant value of 0 to improve precision
updated resource path handling in ITSystemTest . java to use Files . exists for file existence checks to improve robustness by ensuring resources are only
add remote host to authenticateduser . getremotehost ( ) method .
do n ' t set admin button in community list for admin admin
replace ` longCompactions ` and ` shortCompactions ` threads with ` AtomicInteger ` threads in ` CompactSplit . java ` to improve thread
updated the method of obtaining the package name to use resources . getResourcePackageName for wallpapers to improve flexibility by allowing dynamic retrieval of wallpapers
updated the ` getPlayersInPlotVisible ` method to accept a ` PlotPlayer ` parameter and added a new method ` getPlayersIn
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
refactor MlibOpsTest . java to improve test coverage to enhance reliability and maintainability of the code
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _
corrected a typo in the attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a test
removed unnecessary null checks for key and iv in UploadFileOperation . java to simplify code and improve readability by eliminating unnecessary null checks
added @ Stability annotation to WorkProfileTest . java to ensure test stability for different flavors
removed unnecessary check for bucketing version in TezCompiler . java to streamline the code by eliminating unnecessary checks
replaced ` setCursorPosition ` method with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure correct cursor positioning
refactor LockFreeBucket to extend AbstractBucketContendedTimeMeter and add a new class LockFreeBucketLayout to improve class structure and provide a
patch by jbellis ; review by jbellis for cassandra - 1449
updated the method to retrieve the maximum bitrate from user preferences to ensure the maximum bitrate is calculated based on user preferences
refactor ZipkinHttpSpanExtractor to include only and span ID checks to improve code readability and maintainability by reducing duplication
[ bsqswap ] make userpaymentaccounts return a set of userpaymentaccounts ( ) method abstract
refactor : remove reflection dependency on reflection to simplify code and improve readability
added a call to set the project in the fs to ensure the project is properly set for the file system
updated ` JsBundle ` , ` JsBundleBuilder ` , ` JsLibraryBuilder ` , ` JsBundleBuilder ` , and
refactor multiple databinding - related classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor MetricsDSLContext class to improve code organization to enhance maintainability and readability of the code
removed the ` VersionBuckConfig ` interface and updated the initialization of ` universes ` to use ` ImmutableSet . BuilderWithExpectedSize ` to
added a try - catch block around the bindShadowClass method call in Robolectric . java to handle potential TypeNotPresentException when binding
changed the visibility of the validateTypes method from static to public to allow access to the validateTypes method from other classes
chore ( deps ) : update gapic - generator - java with mock service generation fix ( # 42 )
added SLF4J logging for the SimulationStatus class to improve debugging and tracking of simulation status changes
updated the splash font version from 138 to 150 in Splash . java to reflect the new version of the splash screen
refactor notification creation to run on a lambda expression to ensure notifications are added only once to improve code readability and reduce boilerplate
removed the mock . foo ( ) method call from ReturnsElementsOf . java to simplify the code and improve readability
corrected a typo in the error message for drop partitions for non - string partition columns to improve clarity and consistency in error reporting
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` for testing line file documents to ensure proper functionality of
added a method to retrieve the version code using the MainApp class to improve code readability and maintainability by centralizing version code retrieval logic
camel - 14263 : camel - jbang - add support for explicit method invocation in bean .
replace calls to ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamInputStreamTest . java ` to
added bufferOwned boolean and modified BufferUtils disposeUnsafeByteBuffer method in IndexBufferObject and VertexBufferObjectWithVAO to improve buffer management and
added a transition for the " forgotPassword " password in the PasswordManagementWebflowConfigurer to enhance user experience by allowing forgotPassword to be
refactor JerseyClientConfiguration class to improve code organization to enhance maintainability and readability of the code
[ int - 171 ] remove unused import of streamreadingmessagesource . class in consoleinboundchanneladapterparser
updated print statements in InstanceOfPatternMatchTest and RemoveRedundantTypeCastTest to use ' o ' instead of ' s ' to improve
added logic to handle empty string arrays in StringDict and adjusted row count in Table to ensure proper handling of empty strings and improve data integrity
added AutoCloseable annotation to the Container class and implemented a new ` AutoCloseable ` hook in ` GenericContainer ` to improve resource management and
updated logging level from info to error in MediaInfo . java and modified test cases in RendererConfigurationTest . java to improve error handling and ensure consistent
add schemapattern option to bundleddriverdatabaseconnector and propertiesdatasourcedatabaseconnector to allow customization of schemapattern option
use empty _ bytes instead of empty _ bytes to avoid npe
refactor calculations for bitmap sizes in AndroidGraphics . java to improve readability and maintainability of the code
refactor Base64 class for improved performance to enhance performance and maintainability of the code
[ gr - 26464 ] add support for i64 managed and single context in llvm global container
[ java ] ignore test that fail on iphone
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
updated ` ResResource ` to use ` int resId ` instead of ` ResName ` in ` AttributeResource ` and ` OverlayResourceIndex
refactor ` DefaultDockerClientConfig ` and ` DockerContextTLSFile ` classes to use ` Optional < File > ` instead of ` Storage ` to
updated test setup method from ` @ After ` to ` @ Before ` in ` SimpleReactiveElasticsearchRepositoryTests . java ` to ensure proper setup
refactor type variable handling in Attr . java and add a new class T6450290 . java with a generic class T64502
added logging level configuration to the LoggingFlags and LoggingOptions classes to allow configuration of logging levels based on user - defined settings
added logging statements to various classes to track the removal of items from the database to improve traceability and debugging of package removal processes
added allFilesOption method to FileActivity , FileDisplayActivity , and PreviewImageActivity to handle file options in FileActivity and PreviewImage
added new methods ` forEachOperation ` , ` hasOperation ` , and ` hasMatching ` to ` MutationOperationGroup ` in ` MutationOperationGroup
updated the calculation of numPredictiveAppCols in DeviceProfile . java to use a default value of 4 instead of a maximum of 4 to
updated the initialization of the String value to use UTF - 8 encoding to ensure proper handling of character encoding for better compatibility
added RequestMatchers . java and RequestMatchersTests . java files for testing matchers to enhance functionality for matching request matchers in the security
do n ' t use the temporarymode if it ' s not applet .
updated position calculations in ProgressBar . java to use ` bgRightWidth ` instead of ` knobHeightHalf ` to ensure correct positioning
[ hotfix ] [ test ] use external _ functions . json resource instead of src / test / external _ functions . json
[ hotfix ] [ test ] add native method to permuteargs ( )
added a condition to check if the state handler is invalidated before proceeding with gesture state validation to ensure that gestures are only processed when the
updated layout calculations in DynamicGrid and Workspace classes to use constrainedLongEdge and smallestSize instead of smallestSize to improve layout responsiveness and ensure
added a check for the " / robots . txt " file in the HttpRobotRulesParser . java file to ensure that the URL matches the
add a warning icon to the nb - java module so that it can be use in the netbeans module
updated widget registration from " continue " to " createWorld " and " return " in AdvancedGameSetupScreen . java to clarify the purpose of the
updated UDFOPDivide logic in UDFOPDivide . java and added a new test class TestUDFOPDivide . java
updated formatting and formatting in FlowJob and FlowJob classes to improve code readability and maintain consistency in formatting
updated configuration properties in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use BeanDefinitionBuilder instead of hardcoded values to improve flexibility and maintainability
added onDestroy ( ) method to ShareActivity , ContributionsActivity , and ContributionsActivity to ensure proper resource management and prevent memory leak
replace ` thumbNail ` with ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity by using a more descriptive
refactor multiple BeeLine - related classes for consistency and clarity to improve maintainability and readability of the codebase
added a method to set the request timeout in RaftServerConfigKeys . java to ensure proper request timeout configuration for the Raft server
updated logging level from error to debug in TsFileResourceManager . java and refactored ResourceManagerTest . java to improve error handling and ensure
added system properties to setModelSource method in MavenModuleLoader . java to ensure proper configuration of model source and system properties
added metrics for readiness checks and updated getReadinessStatus method signatures to use server metrics to improve monitoring of readiness checks and enhance monitoring capabilities
add support for animatedtorch , close # 244
added a null check before closing the writer to prevent potential NullPointerException when the writer is not initialized
added a utility method to retrieve Hive configuration from a specified directory to improve code maintainability by centralizing Hive configuration retrieval logic
added a new link to Muting Users in the FeaturesActivity to enhance user experience by providing direct access to Muting Users
added a property ` jdk . reflect . useDirectMethodHandle ` to the ` initializedProperties ` property to disable direct method handle functionality in the application
hbase - 26469 splitonleadingvarcharcolumnspolicy : use steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] add module folder and plugin folder to ship file for yarn cluster
[ bugfix ] use getword ( ) . getspelling ( ) in build transcript hmm and trainerdictionary
updated JSON string formatting in JsonUtilsTest . java to include additional newline characters to improve code readability and maintain consistency in formatting
added the " id " parameter to both TimeLineCursorAdapter , TimelineLineCursorAdapter , TimeLineArrayAdapter , Compose , and 
added a warning log message when underlying ring buffer data is lost in MessageRunner . java to inform users about the loss of underlying ring buffer data related
do n ' t throw an exception if there be no class to analyze
replace java . security . Key import with java . security . PublicKey import in KeyFetcher . java to ensure compatibility with the latest security standards
set the ` isIncompatible ` variable to true in ` DLNAResource . java ` to ensure proper initialization of the ` isIncompatible ` state
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to ensure compatibility with the new contract structure
pdfbox - 4071 : do n ' t throw exception if there be no range
[ issue AMQ - 5071 ] fix message listener redelivery test ( # 5071 )
updated default star tree format version from " ON _ HeapFormat " to " OFF _ heapFormat " across multiple files to ensure compatibility with
updated the title setting logic in FeedUpdateService to use a substring substring instead of a hardcoded value to ensure the title does not exceed the
updated the initialization of ` previewPanel ` in ` JColorChooser ` to use ` ColorChooserComponentFactory . getPreviewPanel ( ) ` to
change log level from info to debug in DefaultBuildExtensionScanner . java to provide more granular logging for better debugging
added null check for reusableBitmap before setting inSampleSize to avoid potential NullPointerExceptions during bitmap retrieval
added a new ` getLayoutParams ( ) ` method to ` FakeView ` class to provide access to the ` getLayoutParams ( ) ` method for accessing
added a check to throw an IllegalStateException for closed Cursors in DefaultCursor . java and a corresponding test in CursorSimpleTest . java to ensure
pdfbox - 4071 : avoid classcastexception in pdfbox - 4071
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private ` ts ` field and its getter and setter methods to the ` Message ` class to provide access to the ` ts `
add exceptionmapperutils . toresponse ( ) for error handling
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
[ isochrone ] remove legacy parameter from routeresource . query ( )
removed the ' public ' access modifier from multiple test classes to restrict access and improve encapsulation within the test suite
refactor CSRF handling in PluginServlet to use a dedicated method to improve code readability and maintainability by reducing duplication
added bootstrap flag handling in EclipseLoaderPatcherTransplants . java to improve flexibility in loading shadow classes based on bootstrap requirements
[ drools - 4071 ] add numeric disabled option to rule sheet parser
updated log level from info to debug in HiveConf . java to improve logging granularity and control over log level during development
added null checks for axes and buttons in Lwjgl3Controller and updated polledControllers handling in Lwjgl3ControllerManager to
updated ObjectFactory imports from ` cucumber . api . java ` to ` io . cucumber . core . backend . ObjectFactory ` in multiple files to align
removed redundant check for host before saving port forward in PortForwardListActivity . java to improve code readability and maintainability by reducing redundancy
added a new constant ` SHOULD _ SNAPSHOT _ DATA ` and related configurations in ` GlobalConfiguration ` , ` Data ` ,
refactor PersistableBundle initialization to use a File object instead of a PersistableBundle instance to improve code readability and maintainability by
refactor LocationMarshaller class to improve code readability to enhance maintainability and facilitate future updates
replaced calls to ` isTrackpadMotionEvent ( ev ) ` with ` isTrackpadMotionEvent ( ev ) ` across multiple files to simplify
updated package structure for VectorReader and related classes to improve organization and clarity of vector reader implementations
updated Mockito imports from ArgumentMatchers to Matchers across multiple test files to ensure compatibility with the latest Mockito API changes
replaced the usage of ` Suppliers . of ( ) ` with ` PathSourcePath . get ( ) ` across multiple files to simplify the code
refactor ` RecordReader ` and ` RecordReaderConfig ` methods to accept ` RecordReaderFileConfig ` instead of ` RecordReaderReader ` to
added null check for the extractor before processing annotations in ControllerMethodInvoker . java to ensure robustness by preventing potential NullPointerExceptions
cloudstack - 10265 : fix secondary storage limit for domain and domain
add Potionshiftevent to inventoryeffectrenderer and add it to guiscreenevent .
[ hotfix ] [ table - common ] deprecate cold _ reads _ to _ omit option in sizetieredcompactionstrategyoptions
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent memory leaks
[ rocketmq - 559 ] fix the bug that popmessageprocessor do n ' t work with retry .
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable the test until the moment is resolved
rename mongoreactiveautoconfiguration to nettydrivermongoclientsettingsbuildercustomizer and fix race condition
added upgrade request handling in JettyTrackingSocket and a corresponding test in ClientConnectTest to ensure proper handling of upgrade requests and validate functionality through unit
added timeout functionality to AndroidImplementation to allow customizable connection timeouts
replaced ` RpcUtils . getRepositoryMemberPermissions ` and ` RpcUtils . getRepositoryTeamPermissions ` with ` List < RegistrantAccessPermission > `
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to verify SQL parsing and deparsing functionality for quoted
updated assertions in Misc . java to check if the file is a root and added a helper method to check if the file is writable or executable
added logging for thread group configuration and modified executor selection logic in FixedThreadExecutor . java to improve thread management by allowing configurable group and thread per group
added null checks for the " field " field in AbstractChangeGenerator . java to prevent potential NullPointerExceptions when field is null
replaced ` CasEventListener ` with ` InitializingBean ` across multiple configuration classes to improve clarity and consistency in naming conventions
refactor end animation logic into a separate method ` endAnimation ( ) ` to improve code readability and maintainability by reducing duplication
hbase - 16469 fix regionfile . close ( ) to close the deflater stream when close the stream
added a new file ` gsp001 . java ` that tests the JVMTI GetSystemPropertyAgent on load to facilitate testing of JVMTI
camel - 14297 : camel - spring - boot - bean - spring - boot should use bean annotation instead of bean .
fix cameracontrol . readenum ( ) and cameracontrol . writeenum ( ) for jme3 .
refactor PopupNotificationPanel to use SwingUtilities for obtaining the parent window to improve code readability and maintainability by reducing duplication
rename noinstanceexception to inferenceexception in infer . java
added a method to retrieve the feature value from the FeatureField class to provide access to the feature value from the application
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` after ` method from ` int ` to
added properties ` onBuild ` and ` ExecutionDriver ` to ` ContainerConfig ` , ` ContainerConfig ` , and ` Info ` classes to enable
added conditional logic to set the icon based on the RTL state in Toolbar and FlowLayout classes to ensure proper icon setting based on the RTL
added a configuration option to enable position increments in StopFilterFactory to enable position increments based on user preferences
updated EmailsTest and SystemErrorEmailReportTest to use a new InternetAddress instance instead of a hardcoded value to improve code maintainability
added a new variable ` mTryShareAgain ` to ` FileActivity . java ` to control the sharing behavior of the activity
added tty name handling in JansiNativePty . java to enhance compatibility with different jansi library versions
refactor bandwidth cost calculation to use a variable ` bytesSize ` instead of a hardcoded value to improve code readability and maintainability by
replaced ` then ` calls with ` Awaitility . await ( ) ` in ` Issue410Tests . java ` to ensure asynchronous task execution
updated URLs in EaseeBindingConstants to be private and added a new API base URL to enhance security by restricting access to the API
updated sleep duration in KafkaIOIT . java and added startup attempts in kafkaContainer . withStartupAttempts ( 3 ) to improve responsiveness and
replaced ` Matchers . anyOf ` with ` is ( itemName ) ` in ` SearchResultMatcher . java ` to improve code readability and
added SSL trust management functionality to the OkHttp class to enhance security by ensuring trusted issuers are properly managed during HTTP requests
replaced ` mA11yLongClickListener ` with ` navButtonController . onButtonLongClick ` in ` NavbarButtonsViewController . java `
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` byte ` instead of ` byte
added null checks for stdout , stderr , and stderr in ShellStep . java to ensure that the working directory path is not null to avoid potential NullPointer
increase TIMEOUT _ MILLIS from 1000 to 2000 in AsyncAppenderTest . java to allow more time for asynchronous operations to complete
refactor ` escapeDatabaseObject ` methods to accept ` Table . class ` and ` Index . class ` instead of ` tableName ` and ` table
added a new boolean variable ` inputChanged ` and modified the condition for checking the title in ` MaterialRenameDialog . java ` to ensure that the
added a new test method ` setState ` in ` ShadowDisplayTest ` and implemented the ` setState ` method in ` ShadowDisplay ` to ensure correct
add a direct invocation service to the dispatcher and add a test for it .
added key codes for KEY _ X and KEY _ Y in GlobalKeyDispatcherW . java to support additional key codes in the application
added compatibility checks for pg _ catalog and pg _ class pkic in PgDatabaseMetaData . java to ensure compatibility with newer versions of the database
added a nullable annotation to the ` message ` variable in ` QueueChannel . java ` to ensure that the ` message ` variable is properly initialized and
removed the ` IOException ` parameter from the ` getPathsFromResource ` method and replaced ` jarPath ` with ` pathUri ` to simplify the
added support for adding Jenkins nodes URLs to the remote collector based on application name to enhance functionality by allowing dynamic configuration of monitoring paths based on application
refactor headers attribute handling in HeadersBeanDefinitionParser to use a new resolveAttribute method to improve code readability and maintainability by centralizing attribute resolution
[ iotdb - 4071 ] fix typo in ProtobufLogReader . java
[ nacos ] clean up nacos registry when destroy nacos service
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to utilize a new ` writeStatusCode ` method to improve code readability and maintain
added a print statement to the AuditEvent constructor and updated the JSON output in AuditEventTests to improve code readability and ensure correct JSON output for
added checks for floating - point rounding errors in the Interpolation class to ensure proper handling of floating - point conversions
fix wrong path in forgeworldedit . getworldpath ( )
refactor variable assignment in DxStep . java for clarity to improve readability and maintainability of the code
added equality checks for PointRangeQuery instances in TestPointQueries . java to ensure correct equality comparison for PointRangeQuery instances
hbase - 24286 testhfilecleaner : use a constant for the table / table / region
added a condition to check if the file name matches the file name before setting the label in ReceiveFileConversationComponent . java to ensure that the file
[ hotfix ] [ runtime ] remove unnecessary throw statement in JedisClusterCommand . java
[ hotfix ] [ table - planner - blink ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap ` to
added benchmarks and modified HashMap initialization in QMapReadRandomKeyBenchmark , QMapSequentialKeyBenchmark , and QMapWriteBenchmark classes to improve
added G _ SCH _ B initialization to HybridPlotWorld . java to facilitate the initialization of G _ SCH _ B in the plot
added null and empty fields checks and refactored identifiers handling in GroovyEngine . java to improve robustness and maintainability of the code
ggb - 224 fix for issue with drawable drawable in dependency number
added SERVER _ READ _ SOCKET _ TIMEOUT and TCP _ KEEP _ ALIVE configuration settings to HiveServer and updated TServerTransport
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java ` to
no effective change - no effective change - no effective change - remove unnecessary code
refactor RealtimeSegmentRelocator to use a lambda expression instead of a ThreadFactory to improve code readability and maintainability by reducing boiler
vpc : do n ' t set success flag to true in createvpccmdbyadmin
updated windowAlpha calculation in WindowTransformSwipeHandler and modified condition in FloatingIconView to ensure windowAlpha is non - negative based on progress
updated the fatal message to reflect the latest version of Spring Security to ensure compatibility with the latest Spring Security features and improvements
refactor multiple assertion classes for consistency and clarity to improve code maintainability and readability
[ hotfix ] [ runtime ] fix checkstyle violation in favor of final
added a new file TestConfigureUDF . java for testing UDF configuration to facilitate testing of UDF configuration in Hive
updated regex pattern matching in LogMessageWaitStrategy and added unit tests in LogMessageWaitStrategyTest to enhance pattern matching accuracy and improve test coverage for
[ hotfix ] [ log4j2 - core ] remove the ' final ' variable from slf4j . logger
remove update _ timestamp from deletepurgeds ( ) and deletedeletedhardnodes ( ) method in postgres
update Java language version from " 17 " to " 17 - preview " in JavaLanguageModule . java and its test cases to ensure compatibility with the
[ hotfix ] [ runtime ] add a constant to wait for compression job to finish .
[ hotfix ] [ runtime ] fix checkstyle violation in volatilereadnode
added a new method ` getSteps ( ) ` to the ` SimpleJob ` class and modified the ` getSteps ( ) ` method signature to
removed the ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and updated ` @ JsonRpcError `
refactor currency pair creation to use a variable for clarity to improve code readability and maintainability by reducing duplication
[ hotfix ] [ runtime ] use basetimeunit ( ) to measure task duration
[ flink - 18186 ] [ euphoria ] fix the issue of reducebykeytranslator . partitioncustom ( ) to return the
refactor color handling in HostEditorActivity to use CharSequence for improved type safety to enhance code readability and maintainability by reducing redundancy
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update related methods accordingly to improve clarity and consistency in naming conventions
added a constant for the maximum number of replies in the loop condition to prevent exceeding the maximum number of replies in the query
increased the refresh interval from 1 to 2000 in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map refresh to complete
updated tailPages handling in Queue . java and added a new test for persisted byte size in QueueTest . java to ensure correct behavior of the
fix checkstyle issue in glowserver . java
added a new ` grow ( n ) ` method to the ` DataIO ` class to improve code readability and maintainability by reducing duplication
removed unused import of DataOutputStream from GdxSetup . java to streamline code by eliminating unnecessary dependencies
added a method to retrieve the submitted file name from the AttachmentHttpBinding class to provide access to the submitted file name from the part
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure proper loading of data from the launcher
removed the ` PRINT _ FAILED _ CLASSES ` flag and updated exception handling in ` JarInstrumentor . java ` to improve error handling
added an ` checkForSpillPossibility ` method to ` HashAggTemplate . java ` to ensure that an ` AGGR ` is not
updated method calls from ` info . info . getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter . java ` to
added a default name ID format for SAML name IDs in SamlProfileSamlNameIdBuilder . java to ensure proper handling of SAML name formats
added redirect and error handling in ChangePasswordPage . java to improve user experience by providing feedback when a password change is aborted
removed an unnecessary semicolon in Deadlock2 . java to improve code readability and maintainability
added a new method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide access to the maximum idle time for
deleted the FontScalingTest . java file to remove unused test class to streamline the codebase
updated filter start and end date handling in RRD4jPersistenceService . java to improve code readability and maintainability by reducing redundancy
added checks for non - negative number of vectors in GenericUDAFComputeStats . java to prevent unnecessary processing when numVectors is zero
test : migrate executablereftest to junit 5 ( # 4447 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java with a
camel - 14265 : camel - wiretap - add a method to process wiretap expression .
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
[ calcite - 1076 ] add option to enable topn for planner . enable _ topn
[ java ] remove unneeded aerondirectoryname call from test .
fixed - rconnection . setqueued ( true ) do n ' t set queued flag in pingconnection ( # 1232 )
replaced ` ByteArrayOutputStream ` with ` FileOutputStream ` and modified ` getConfVarURL ` method to use ` FileOutputStream ` instead of ` ByteArray
updated the method call from Device . defaultDevice ( ) to criteria . getDevice ( ) in BaseModelLoader . java to ensure the model creates
removed the onCreateOptionsMenu method from SimulationViewer . java to streamline menu item handling and improve user experience
refactor CertificateValidator class to improve certificate validation logic to enhance security and maintainability of certificate validation logic
use hawtio . dirname instead of user . home / . hawtio . dirname
added a condition to return SINGLE _ SPACE if comments are empty to ensure proper handling of whitespace in the space logic
updated variable access modifiers to be volatile in multiple dictionary classes to ensure thread - safe access to these fields during concurrent access
removed printStackTrace ( ) method from ContextHandler . java to streamline error handling by eliminating unnecessary stack trace printing
[ mctester ] move customitemdroptest to integration test
added a boolean parameter ` ifNotExists ` to the ` DDLTask ` , ` DDLSemanticAnalyzer ` , and ` AddPartitionDesc
updated byte reading logic in NfsSecondaryStorageResource . java to improve efficiency and readability of byte array handling
[ java ] remove unnecessary controlrequeststreamid ( ) call in EchoServiceNode and BasicAuctionClusteredServiceNode classes to streamline the
added support for spatial operators in the capabilities transformer to enhance functionality to support spatial operations in WFS capabilities
added LuceneTestCase import and annotation to BasicDistributedZkTest . java to address a known issue related to SOLR - 2161
refactor preface handling logic in Http11InputBuffer . java to improve clarity and correctness of preface parsing logic
[ java ] disable ipv6 exclusive by default .
hbase - 14286 addendum : hfile . block . cache . size and hbase . offheapcache . ioengine . cache .
updated ` JSONRecordReader ` to use ` currentRecordNumberInFile ( ) ` instead of ` recordCount + 1 ` to improve accuracy of
added a check to remove a year from merged items in CategorizationFragment to ensure only valid year entries are processed in the mergedItems list
updated drawColor method calls from 0x00000000 to 0 in CacheableTextView , CellLayout , and HolographicOutlineHelper classes to ensure consistent color
added a check for OpenGL version compatibility in the render method to ensure compatibility with OpenGL ES 2 . 0 rendering features
xwork2 : set the execution context to null when create a background process
updated methods in BaseSemanticAnalyzer and QBParseInfo to include database name and table names to enhance flexibility in identifying database names based on user -
added connection timeout configuration to TestConnections . java and changed the visibility of the count variable from static to static final in StubConnection . java to improve
added multiple assertion statements for the ` approx _ percentile ` method in ` TestHiveAggregationQueries . java ` to ensure that the query
updated DEFAULT _ IDLE _ TIMEOUT from ZERO to 30 seconds in WebSocketConstants . java and modified idleTimeout handling in WebSocketChannel . java to
updated the method to retrieve shares from the user ' s account name to ensure the correct user ' s account is used for sharing
refactor Inet6Address to use generics and improve type safety to enhance type safety and prevent potential ClassCastExceptions
replaced ` enableViews ` and ` disableView ` methods with ` setButton ` methods in ` PlaybackControlView . java ` to improve code
updated the ` isPresent ` method to accept a session ID instead of a ` Session ` object to improve clarity and consistency in the code by using a
updated the method from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java
[ hotfix ] [ runtime ] change useexceptionprobability from true to __ __ __
updated color handling in PredictedAppIcon to use m3HCT for themed icons to ensure correct color representation based on the icon '
guacamole - 362 : fix MySQLuser . init ( userid , password , password , permissioncheckservice )
added " centre " alias to the aliases list in Middle . java to enhance the functionality by allowing the addition of " center " to the list of
added dependency injection for DirectUpload in CommonsApplicationComponent to enable dependency injection for DirectUpload in the application
added space settings for left and right axis in BarChartActivity , BarLineChartBase , and YAxisRenderer classes to ensure proper positioning of
added support for additional Java ABI flavors in AndroidLibraryDescription and JavaLibraryDescription to enhance functionality to support additional Java library features
added a new request parameter for operation event status type in OnlineHubService and initialized the services list in CompositeLogService to ensure the services list is
added debug output for annotations in DexAnnotation . java to improve traceability of annotations in the code
[ java ] remove @ startbundle and @ teardown from jmsio . java
updated ProcessBuilder initialization to include classpath information to improve clarity and maintainability of the process creation process
updated file path separator handling in PackageResourceLoader . java to ensure correct path separator is used for Android and above
[ hotfix ] [ table - common ] remove unnecessary ' this ' reference
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable tests related to bug b / 243855320
updated error message formatting in ShouldHaveMessage . java and added new test cases in ShouldHaveMessage _ create _ error _ Test . java to enhance
fixed - http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 12415
[ activiti ] reduce log level when the command context be already claim .
added a semicolon to the ALPNClientConnectionFactory initialization in HTTP2Client . java to ensure proper initialization of ALPNClient
update entitypropertiespacket to use instance . basevalue ( ) instead of instance . getvalue ( )
use thinghandlerhelper instead of thingstatus in manosaudiosink
increased countDownLatch . await ( ) timeouts from 500 milliseconds to 5 seconds to allow more time for countDownLatch to complete before timing out
change log level from info to debug in LightThingHandler . java to improve logging granularity for better debugging
cloudstack - 10297 : fix a bug that be cause the job to fail to start .
updated import statements and improved error message formatting in Reporter . java and ReturnsSmartNulls . java to enhance code readability and maintainability by using
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` in ` DataGenerator . java ` to improve type safety
refactor module - info . java files for consistency and clarity to improve maintainability and readability of the module structure
added a check for non - empty physical column name in OrcPageSourceFactory and created a new test for orc use column names with empty
added a call to ` methCla . mixPlay ( input , amp ) ` in ` Engine . java ` to enable the mixing of
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated test cases in FinderPatternFinder , QRCodeBlackBox1 , QRCodeBlackBox1TestCase , and QRCodeBlack
removed unnecessary checks for leadingIncludePaths in PreprocessorDelegate . java to simplify code and improve readability
refactored the test method name from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` isVectorMatrixMultiplicationShouldUseBracket
added new search criteria to the SelenideElementProxy class to enhance search functionality by including additional criteria
updated the sampleRate assignment in DefaultAudioSink . java to use a default value of 48000 instead of a hardcoded value to ensure consistent
add formula . setformula ( string ) and setformula ( string ) method to xssfname so that it can be use
updated the scale factor calculation from 60000 to 90000 in HighDimensionsTest . java to improve test accuracy by reducing the scale factor
[ geot - 5258 ] fix the bug that the patternfacet do n ' t have a value in the string .
added a new test class ClassPathXmlJobRegistryContextTests to verify job retrieval and retrieval of job names to ensure that job names are correctly located
change the data type of ` mHistoricTimes ` from ` float [ ] ` to ` long [ ] ` in ` MotionPauseDetector . java
camel - 12320 - camel - restlet : add @ uriparam annotation to rest restlet endpoint
camel - 14284 : remove unused method from logendpointbuilder . showout ( )
refactor trace event writing logic into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by reducing duplication
modified the order handling logic in HuobiAdapters . java to include status checks before adding them to limitOrders to ensure only relevant orders
added pixel offset calculations and validation in LCMSImageLayout and LCMSImageLayout classes to improve image layout handling and ensure correct pixel offset calculations
update jrubyevent to use jrubyutil . rubytimestamp . newrubytimestamp ( ) instead of create newrubytimestamp ( ) .
added path validation in ContextHandler and a corresponding test in WebAppContextTest to ensure correct handling of resource paths and validate functionality through unit tests
updated the method name from " TypeErrorThrower SETTER " to " GETTER " in ScriptFunctionImpl . java to improve clarity and consistency in
updated variable names from ' amt ' to ' scrollAmount ' in JEditTextArea . java to improve clarity and accuracy in setting values based on
graphdecoder : do n ' t set guard stage if caller loop scope be null
test : migrate sniperprettyprinterjavaxtest to junit 5
updated URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added @ Entity annotations to Mail class to enable entity - related functionality in the Mail class
updated default values for tablespace and indexes in Main . java to enable tablespace functionality in the application
added getter methods for ` metaDataBuffer ` , ` valuesBuffer ` , and ` valuesBuffer ` in ` CountersReader ` to provide access to
added a boolean flag to manage read non - empty files in ScanBatch . java and a corresponding test in TestJsonReader . java to ensure proper
updated failure handling in StringSubject to handle custom names and improved test coverage in StringTest . java to enhance robustness by providing clearer error messages
added regex pattern matching for library names in LibUtils . java to improve accuracy in determining if library names are valid
updated exception handling in JrtJavaBasePackages and PackageHelper from ClassNotFoundException to Exception in JrtJavaBasePackages and PackageHelper to improve error
hbase - 16286 add a check to ensure that zk file system be in safe mode
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and message to improve clarity of error reporting for better debugging
remove plugincache . clone ( plugin ) method from defaultplugincache
bugfix : do n ' t dispatch contact status event if there be no resource
remove unused method withresourceandparams ( ) from rest - api
added a new file ` AccountInfoFetchIntegration . java ` for testing the ` BTCEAccountService ` to verify the functionality of fetching account
added mouseWheel method to VDUInput , vt320 , and TerminalView classes to enable mouse wheel functionality in the terminal view
refactor library path handling in Natives . java to use a variable for clarity to improve code readability and maintainability by reducing repetitive
no effective change - no effective change - remove @ deprecated columnhstore
add skin _ SKIN _ FLAGS configuration to metadataindex
updated LoadBalancerWithServiceTests to use SLF4J ' s Logger instead of RequestFieldMatcher to improve test readability and maintainability by using
[ hotfix ] [ table - common ] fix npe in mapservice . createsimpleentryview
replaced System . getProperty ( " os . version " ) with AccessController . doPrivileged ( ) in JRSUIUtils . java to enhance security by
refactor file suffix handling in TemplateEngineFreemarker to use a configurable file suffix to improve flexibility and maintainability of the file suffix configuration
[ hotfix ] [ table - common ] fix hash code in selectmessagequeuebyhash
refactor toolbarpanel to use layout . animationcallback to improve responsiveness of toolbarpanel
updated EasyBind binding to use ` when ( hasCaret ) ` instead of ` bindConditionally ` to improve code readability and maintainability by
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , CxxGenruleDescription , and CxxGenruleDescription to use Cxx
replaced instances of SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator and PartTreeJpaQueryExecution to align with the new package structure
added a null check for the passwordAttribute before setting it in LdapAuthenticationProviderConfigurer to prevent potential NullPointerException when passwordAttribute is null
added handling for array types in DataUtilities and a corresponding test in DataUtilitiesTest to ensure correct initialization of array types in data utilities
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 63023 : allow correct
hbase - 24286 testfstabledescriptors . testcachehits ( ) should check if cachehits be greater than or equal to
[ hotfix ] [ webdriver ] add wddeletecookie ( string ) method to internetexplorerdriver
added a boolean variable ` mHasEndedLauncherTransition ` and modified the return condition in ` AbsSwipeUpHandler ` and ` RecentsView
updated HTML content type in HTMLListWriter and HTMLWriter to include the meta charset to ensure proper handling of HTML content in the output
refactor IndexReader class to improve code readability to enhance maintainability and readability of the code
updated the default value of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 in multiple classes to
modified the insertion of the arrowButton in BasicComboBoxUI . java and added a new test class bug6337518 . java with a test
refactor TestRandomAccessBuffer class implementation to improve performance and readability of the code
refactor UserInfoActivity class implementation to improve code readability and maintainability
added imports for HomeContentProvider and CONTENT _ URI in multiple service classes to ensure proper notification of content URI changes
added stay pressed state management and background management in BubbleTextView and Launcher classes to improve user experience by ensuring pressed and focused states are properly
added an ` Throwable ` parameter to the ` getFallbackResponse ` method across multiple classes to enhance error handling by associating it with a specific error
removed the check for ` env . _ compile _ only ` in the conditional statement to simplify the condition for better readability and maintainability
[ java ] fix nullpointerexception in channeluri . gettags ( )
updated JAVA _ REGEX _ SPECIALS regex pattern from " [ ] ( ) " to " [ ] ( ) " in Regexp
added a new constant ` KEY _ ACTION _ BAR _ TITLE ` and updated action bar title in ` FileActivity ` and ` FileDisplay
updated method call from ` getOnlyElement ( ) ` to ` getLast ( ) ` in ` PythonDslProjectBuildFileParser ` and added
updated the schedule annotation from " * " to " 0 " in CleaningService . java to correct the time zone for the cleaning service
updated TransactionalValidationListener to handle partitioned tables and improved table path validation to enhance schema validation and ensure correct table structure is used
added a new method ` Enable polling ` in ` SnapPuller . java ` to enable polling functionality in the SnapPuller class
changed the data type of ` generatedKey ` from ` int ` to ` long ` in ` ShadowSQLiteDatabase . java ` and added new
reformatted the return statement in SimpleReferenceCache . java for consistency to improve code readability and maintainability
updated error messages in multiple test classes to include " failed to " to improve clarity and accuracy of test failure messages
increase keepAlive timeout to 10 second
deleted the HttpTestAccount001 . java file to remove unused test class to streamline the codebase
use try - with - resources to catch throwable instead of exception .
camel - 14263 : camel - cxf - binding should not use the default cxf _ message property .
added a case for the ' ~ ' case in ClientUtils . java to handle the case ' ~ ' in addition to the existing ' ~ '
camel - Slack - add a default delay value to SlackEndpoint and SlackEndpoint to allow for customizable delay values in the Slack endpoint
do n ' t drop chances when a block be drop , close # 119
updated the layout parameters in TranscodingTab . java from 4 * to 5 * ( 5 * ( 5 * ( 5 * ( 5 * )
added a new file ` bug8057791 . java ` that implements a JList with a Swing look and feel using Nimbus Look and Feel
updated conditional checks in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java with a static field to improve code clarity and
fix websocket method not be add when engine api add ethsubscribe
replaced ` to . length ( ) > 0 ` with ` to ` null ` in ` ComposeActivity . java ` to improve null safety by
refactor ParquetFixedWidthDictionaryReaders to conditionally set the mutator based on the ` usingDictionary ` flag to enhance flexibility in handling dictionary
refactor layout calculations in PortraitPagedViewHandler to use ` dp . isLandscape ` instead of ` appsStackedVertically
added new annotation classes ` Log ` and ` LogInterceptor ` and ` LogInterceptor ` for logging functionality to enhance logging capabilities in the application
updated the string concatenation logic in QueuedThreadPool . java to include an additional condition to improve readability of thread state logging
updated method signatures and logic in CacheGenerator and CacheProvider to include the implementation parameter to improve clarity and functionality by distinguishing between implementations and implementation
added a totalFrameSize parameter to the createReferenceMap method to include the totalFrameSize parameter to ensure the reference map reflects the total frame size
refactor TypesafeConfigurator class to improve code structure to enhance maintainability and readability of the code
added camel - karaf test for camel - karaf and camel - karaf
renamed the main method from ` main ` to ` bug1 ` and added new method ` bug2 ` to ` bug1 ` and ` bug
do n ' t use utf - 8 encode for http client
refactor unsupportedPlatformTool to implement the UnsupportedPlatformTool class to improve code readability and maintainability by reducing duplication
updated loopCount type from double to int and added TimeUnit . MILLISECONDS . toSeconds for better type safety to enhance code readability and maintainability by
added a ` size ( ) ` method to ` FlightConfiguration ` and ` FlightConfigurationImpl ` classes to provide a way to retrieve the size of
[ drools - 4071 ] fix test failure on window due to miss field .
updated COL _ SPEC values in VLCVideo . java from " right : pref , " grow , " , p , 7 , p ,
use bitsquare / bitsquare / issue instead of bisq / bisq / bisq / bisq / issues
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker .
updated directory paths and improved error messages in MavenCli and MBoot classes to enhance clarity and maintainability of the code
added a call to glBindBuffer ( GL20 . GL _ ARRAY _ BUFFER ) in VertexBufferObjectWithVAO . java to
refactor ServerHttpSecurity class implementation to improve code readability and maintainability
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests related to Postgres functionality
added default headers handling in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility
added new response for credentials violations and user password not valid exception to improve error handling for invalid credentials and user password validation
deleted the NoOpConfigPathGetter . java file to the class is no longer needed for the current implementation
updated signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to improve compatibility with tuweni ' s byte encoding
replaced CascadedStyle with CSSName and added null checks for float values in FloatUtil . java to ensure proper handling of float values and prevent
[ drools - 543 ] add miss import to the property class in the drools - planner module
replaced instances of ` CaseInsensitiveHeaders ` with ` MultiMap ` and added a new method ` defaultHeaders ( ) ` in ` RestUtils `
replace ` encoding ` with ` charset ` in ` ProxyServer ` , ` Realm ` , and ` Realm ` classes to improve code clarity
added a method ` getJobId ( ) ` to the ` StepContext ` class and corresponding unit tests in ` StepContextTests ` to ensure that
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils to use Long . compare ( ) instead of Long . valueOf ( ) to improve
change log level from error to debug in defaultjdkhttpclient and jdkblockingclient
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials instead of GeneralSecurityException to ensure compatibility with the
changed the visibility of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : do n ' t remove filter that do n ' t exist
pdfbox - 4071 : add wrap ( inputstream ) method to bcpginputstream . wrap ( inputstream )
replaced DataOutputStream with BufferedOutputStream in MinimalLockingWriteAheadLog . java to ensure proper resource management and prevent potential memory leaks
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified column qualifier handling in ` HiveBaseResultSet
refactor FocusTransitionTest . java for improved clarity to enhance maintainability and readability of the code
updated import statement from org . gwtproject . core . client . GWT to Google ' s GWT to ensure compatibility with the latest GWT
added a condition to check if the sourceTask is a MapRedTask instance before creating the JobClient to ensure proper handling of MapRedTask instances
corrected a syntax error in the initialization of the _ readListener variable to improve code readability and maintain consistency
added a new method ` changeComponentColor ` to handle color changes in ` AppearancePanel . java ` to improve code readability and maintainability
updated the constructor parameters of TaskHelper from false to hidden in TaskHelper . java to allow for more flexible processing options in the application
make the failover test more robust by use exponentialbackoff instead of exponentialbackoff
pdfbox - 4071 : close file in copyfile ( ) to avoid resource leak
added import statement for DefaultParameterHandler in BoundSql , SqlSource , SqlSource , LanguageDriver , and LanguageDriver classes to enhance code clarity and
[ flink - 18186 ] [ runtime ] fix spill optimization in linearscan
[ iotdb - 4071 ] add micronaut ast builder for groovy compilation
refactor ` PgResultSet ` and ` PgStatement ` classes to use a dedicated method ` closeInternally ( ) ` to improve code
set the default serviceAdvisorType to PYTHON in ServiceInfo . java to ensure proper initialization of the service advisor type
[ hotfix ] [ table - common ] make resolver thread - safe .
[ java ] use arraylist instead of collection in path . getkeys ( )
refactor SendCoinShieldTest to use random byte arrays instead of new byte arrays to improve test reliability by using random byte arrays
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to provide functionality for setting personalisation based on a
removed redundant code in CodeGenerator . java to streamline code logic for better readability and maintainability
removed the ' 1 ' parameter from the scroll method in multiple classes to simplify the scrolling process by eliminating unnecessary parameters
changed the access modifier of the pointer variable from private to public and added reset methods to the FlatRecordReader class to allow external access to the pointer
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to align with the new naming convention for better clarity and consistency
replaced specific imports with a wildcard import and modified cast type handling in CastExpression . java to improve code readability and maintainability by reducing redundancy
replaced ArrayList with a boolean variable acceptsAll in AbstractResource . java to simplify the code and improve readability
added a new boolean variable ` false ` to the ` TaskView ` class to indicate that the method is no longer needed in the application
added a method to check if the column type is auto - increment to ensure proper handling of auto - increment columns in the database
set errorText to a default value of " Command failed due to Internal Server Error " to provide clearer feedback on command failure due to internal server
updated imports in DeadListenerTest . java and LocalManagementTest . java to use the new JDK environment variable to enhance compatibility with the
replaced ` add ( currentStatus ) ` with ` push ( currentStatus ) ` and ` boosterStatus ` in ` BasicEventSimulationEngine `
added AJP binding functionality to the GitBlitServer and modified the GitBlitServer to utilize it to enhance the server ' s
added type conversion logic for compound types in TransTypes . java and created a new class Intersection03 . java with assertions to ensure type safety and
rename EmbeddingTest class from EmbeddingTest to EmbeddingITest to improve clarity and consistency in naming conventions
added a native method ` startToolkitThread ` to manage the creation of a toolkit thread to improve performance by avoiding unnecessary thread creation
[ gr - 23232 ] compression of localization content in parallel .
hide surface surface when it ' s hide .
updated the temporary directory path from " RecordTransformationTest " to " getClass ( ) . getName ( ) " in AbstractRecordExtractorTest . java to
added configuration for fullNodeHttpEnable and solidityNodeHttpEnable in CommonParameter and updated service addition in FullNode , Args , and FullNode
added a new property ` service ` to ` GoogleCloudFirestoreTicketDocument ` and modified the return statement in ` GoogleCloudFirestoreTicketRegistry
refactor Generate class to improve code organization to enhance maintainability and readability of the code
updated the ` @ ScalarFunction ` annotation in ` JsonFunctions . java ` and added tests for handling null values in ` JsonFunctionsTest . java
added a new boolean flag ` DOTS _ ONLY ` and modified width calculations in ` BadgeRenderer ` , ` IconPalette ` , and
changed the access modifier of the getConfiguration method from final to non - final to allow the method to be overridden in subclasses
add a test for setting excluded package patterns in OgnlUtilTest . java to ensure proper exception handling for invalid configurations
updated deviceUdid assignment logic in AppleTest . java and added sdkName in IdbRunTestsStep . java to ensure compatibility with mac
updated DefaultHttpClientFilter to use ProduceProcessorManager instead of InvocationType and modified exception handling in TestDefaultHttpClientFilter and TestDefaultHttpClientFilter to
added null checks for mScript and mInvokeResetWAR in AllAppsView . java to prevent potential NullPointerExceptions during initialization
added a boolean flag ` TEXT _ BURN ` and modified the conditional check for ` lineCount ` to ensure that shadow layer is set correctly based
added teardown methods to ` TestColumnAccess ` , ` TestReadEntityDirect ` , and ` TestReadEntityDirect ` classes to ensure proper cleanup
updated the way the parser is retrieved in SecurityNamespaceHandler . java to ensure the correct parser is retrieved from the parsers
updated condition in BoundedLocalCache . java and added a new test in BoundedLocalCacheTest . java and BoundedLocalCacheTest .
refactor RawConnection to extend WebSocketConnection and implement flushing methods in WebSocketAsyncConnection to enhance WebSocket connection management and ensure proper flushing behavior
added softly assertions methods to the SoftAssertionsPerfTest class to enhance test coverage for assertions in the SoftAssertionsPerfTest class
added a new constant for TEST _ FAILURES _ EXIT _ CODE in PythonRunTestsStep and updated the assertExitCode method in ProjectWorkspace
updated the handling of xAdvances in GlyphLayout . java to conditionally increment xAdvances based on markup enabled to improve performance by avoiding unnecessary
refactor score assertions in TestBooleanRewrites to use Java Streams for improved readability and efficiency to enhance code readability and maintainability by
updated the method of retrieving the enclosing class from getEnclosingClass ( ) to getSuperclass ( ) in TypeHandlerRegistry . java to ensure the correct class
[ java ] remove unnecessary check for playerconnection . flush ( ) in updatemanager .
added a boolean flag ` mStarted ` to manage the state of the draw listener in ` Launcher ` and ` LauncherAnimUtils ` to
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to include wildcard imports and added a condition to check if matchStatus is NOT _ APPL
changed the media parens check from false to true in RendererConfiguration . java to enable media parensing functionality in the media parsing logic
[ aop ] add support for round _ type annotation in aop proxy writer .
added assertions to verify the existence of a warehouse directory and partition in FolderPermissionBase . java to ensure that the permissions are properly validated and validated
add duetoregistrationstate ( ) method to globalstatusserviceimpl . handleproviderregistered ( ) and handleproviderregistered ( )
updated the random number generation logic in PastelColor . java to use a variable for colorBase to improve code readability and maintainability by
refactor ScriptEngineFactory to improve code organization to enhance maintainability and readability of the code
refactor image drawing logic in HolographicViewHelper to use a dedicated method to improve code readability and maintainability by reducing redundancy
refactor request method handling in CloudClient . java to use String . fromString for better readability to improve code maintainability and reduce boilerplate
make multiwordpreprocessor # gettag ( string , string , string , string ) more robust .
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
updated class loading logic in Table . java to handle HivePassThroughOutputFormat . HIVE _ PASSTHROUGH _ OF _ CLASSNAME to
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated bounds checking in DOMBuilder . java to include length boundaries to ensure proper validation of the character ' s length
updated method calls and import statements in ClusteringCoefficient , EigenvectorCentrality , EigenvectorCentrality ,
camel - 14284 : camel - translate2 - add verification error for unsupported service in the region
added a new file ` TestClass ` that implements ` InterfaceWithStaticAndDefaultMethods ` that implements ` InterfaceWithStaticAndDefaultMethods ` to provide
camel - 16297 : camel - default - keyselector should resolve property placeholders for property placeholders
removed unnecessary type checks from catch blocks in LogResolverBean . java to improve code readability and reduce boilerplate
refactor multiple security - related classes to improve code organization and consistency to enhance maintainability and readability of the codebase
updated JGit version from " JGit 1.1 . 0 " to " JGit 1.1 . 1100 - r " and added sorting functionality to ensure
[ java ] use clientkey instead of clientid in httpclientIntroductionAdvice .
int - 119 add support for ` ` transformer ' ' and ` ` methodinvokingadapter ' '
updated the BACK _ FACTOR constant to REWIND _ TIME and modified duration validation logic in ResumeObj . java to improve clarity
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` , ` CodenameOneImplementation ` , and ` Java
updated usage string formatting in UtilityCommands . java and DocumentationPrinter . java to handle empty command usage to improve code readability and ensure proper usage
corrected a typo in the attribute name from " collection . map " to " collections . map " to ensure consistency in naming conventions
removed the ` setSeqFiles ` and ` setUnseqFiles ` methods from ` CrossSpaceCompactionResource ` and ` RewriteCrossSpaceCompaction
removed redundant @ Override annotations from Observation . java to improve code clarity and maintainability
updated the logic for updating the projet ruleset in ProjectPropertiesModelImpl . java to ensure the ruleset updates correctly based on user preferences
[ java ] remove unnecessary synchronized block in abstractsootfieldref . java
refactored elasticmeterregistry to use elasticnamingconvention instead of snakecase
added new imports and methods for handling G - code commands in IController , TinyGController , and updated BackendAPI to use IController
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to verify rendering behavior with large horizontal rules
replaced System . out . println ( ) with TTY . println ( ) in TypeSystemTest . java and PartialEscapeAnalysisPhase . java
refactor multiple Java classes for consistency and clarity to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in loginspector
updated return statements in IntFloatMap , IntIntMap , IntFloatMap , IntIntMap , IntFloatMap , IntIntMap , and
refactor image icon setting in ImageDownloadService to use a thread - safe setting method to improve code readability and maintainability by reducing duplication
added a null check for the registered variable in the HandlerRegistration class to prevent potential NullPointerExceptions when the demand is null
removed the ` hasNextSibling ( ) ` method from multiple node classes and updated the return statement in ` IeNavigator ` to streamline the code
[ hotfix ] fix npe in redis distributedmapcacheclientservice
mobfilecache : do n ' t initialize the mobfilecache when it be disable .
refactor ColConvCCMTest . java to improve test coverage to enhance reliability and maintainability of the code
refactor the initialization of ` target ` and ` source ` variables in ` Check . java ` to improve code readability and maintainability by reducing
pdfbox - 4071 : fix compile error due to type safety issue
changed the type check from ` Float . toString ( ) ` to ` String . asString ( ) ` and added a new class ` X `
added a return statement to the GenericFileConsumer class to ensure proper termination of the method execution
added a new Runnable to the EventQueue to execute the runnable on the Event Dispatch Thread to ensure that the event dispatch is called on the Event Dispatch Thread
updated the method call from ` getMaxTextMessageBufferSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` in ` CompressExtension . java
updated the calculation of steeringValue in TestAttachDriver , TestFancyCar , and TestPhysicsCar classes to correct the calculation of the steering value
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve code readability and performance by
replaced instances of ` java . sql . Date ` with ` java . time . LocalDate ` and ` java . time . LocalDateTime ` for date and
updated version from 2 to 3 and modified metadata handling logic in ParseData . java to ensure compatibility with newer versioning and improve code readability
updated FlywayAutoConfiguration and FlywayAutoConfigurationTests to use LocalContainerEntityManagerFactoryBean instead of FlywayInitializerJpaConfiguration
added a sorted ( ) method to the ClassesImpl class to ensure the classes are sorted correctly during processing
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class to improve code organization to enhance maintainability and readability of the code
updated method invocations in TestCloseScope0 . java to handle different versions of MemoryScope and ResourceScopeImpl to ensure compatibility with different JD
updated test timeout from 500 to 5000 in AdaptServerSocket . java to allow more time for tests to complete successfully
updated test cases in CaptchaChannelProcessorTests . java to improve test coverage for CaptchaChannelProcessor functionality
added a condition to update the owning collection in MetadataImport . java to ensure the correct collection is set based on the current owner ' s handle
added retry logic for registry cache file saving failures in AbstractRegistry . java to ensure that the registry cache file does not exceed the maximum allowed number of
updated the instantiation of TrackingDirectoryWrapper from mergeDirectory to directory to ensure the correct directory is used for the tracking CFS directory
[ java ] add test for unusedimports and generics bug in ruletst .
added validation for Iceberg insert overwrite query in HiveIcebergStorageHandler and created a corresponding test in TestHiveIcebergTableUtil
updated SAML configuration assertions in BootstrapTests . java to check for legacy SAML keys to ensure that legacy SAML keys are correctly retrieved and validated based on the
updated the conditions to check for non - static fields in the Excluder class to ensure that only non - static fields are processed in the exclusion
changed the method name from ` theAddressie ` to ` addressees ` in ` getAddressVector ( ) ` to clarify the purpose of the method
removed unused comments from CommentsParser . java to clean up the code and improve maintainability
added ` LockReleaseFailedException ` to the ` IndexWriter ` , ` Lock ` , and ` NativeFSLockFactory ` classes to improve error handling
updated package declaration from ` datasource ` to ` org . springframework . batch . test ` in ` DataSourceInitializer . java ` to align package structure
refactor SpelExpressionTransformer and OperatorNode classes to improve handling of unary - minus operations to enhance code robustness and maintainability by avoiding unnecessary
updated ByteBuddy initialization to use TypeValidation . DISABLED instead of a hardcoded value to improve flexibility in byte buddy initialization by allowing
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling and improve code clarity
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest . java and updated lock wait timeout in MySQL
updated the ` setSystemProperties ` method to accept a ` ConfigurableEnvironment ` parameter instead of a ` LogFile ` parameter to simplify the method
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 , http : /
added new constant SERVICE _ MAPPING , VERSION _ MAPPING , APP _ MAPPING , and APP _ MAPPING in ServiceCombConstants and Micro
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the correct
updated DB _ PATH _ REGEX to be static and modified database path validation in BaseAndroidTestCase . java and GeocodeHelperTest . java to
updated return statement in HomeFragment to retrieve unread count from the current account to ensure accurate retrieval of unread count from the HomeDataSource
updated the test method name from ` testVirtualThreadPoolPreview ` to ` testVirtualThreadPoolPreview ` and added a new test for the virtual thread pool
added a limit parameter to the ` getAllOrder ` method in ` MarketOrderIdListCapsule ` , ` Parameter ` , and ` 
updated user retrieval logic in HomePage . java to handle null user cases to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ runtime ] fix bug in localfilesystem . match ( path )
added constants for maximum width and height in ComponentBuilders . java to ensure that the instance ' s dimensions do not exceed defined limits
solr - 10226 : add connectionmanagertimeout and followredirects to solrserver . request ( )
removed unused exceptions from PrintController . java to streamline error handling and improve code clarity
replaced ` Optional . of ` with ` Map . map ` in ` CrateType . java ` and added assertions in ` RustBinaryIntegrationTest
added methods to check for numbers with separators in SpellChecker . java and a corresponding test in SpellCheckerTest . java to ensure correct handling of
updated the message string from " HelloWorld . message " to " HelloWorld . message " to correct the spelling of " HelloWorld . message
added a method to retrieve file actions from the OCFileListFragment and refactored file action handling in FileDisplayActivity to improve code organization
added daemon flag to ReplicationHandler and improved error handling in SnapPuller to ensure that the puller is daemon and handle potential exceptions during replication
corrected formatting of the update method call in StoreCachedTest . java to improve code readability and maintain consistency
updated constructor parameters in StreamerLoader to use MaterialHolder ' s materials instead of materials to improve clarity and maintainability of the constructor parameters
added " Core Library for LibGDX " and " Core Library for LibGDX " and " Controller / Gamepad API " to
set maximum recycled views based on availableHeightPx and appsPerRow in AppsContainerRecyclerView . java to optimize performance by reducing the number of
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest . java ` to verify the build process
fix the baritone control to cancel the mining block when there be no place to mine .
added imports for ParsedNode , ParsedNodeException , ResourceAccessor , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by utilizing
added null handling logic in FilterOperatorUtils and a new test for range filtering in NullHandlingEnabledQueriesTest to ensure proper handling of null values and
added validation for bootstrap method parameters in JDynamicInvokeExpr . java to ensure only valid bootstrap method parameters are processed
updated the port from " jms : in " and " jms : out " to " jms : 9000 " in JmsHttpJmsTest
removed the clear ( ) method call from runtimeOptions . getFormatters ( ) in CucumberInstrumentation . java to ensure the formatters are
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` in ` AbstractRegisteredService ` and updated
updated workspace label adjusting logic in DeviceProfile . java to conditionally adjust workspace labels based on cell size to ensure workspace labels are only displayed when
refactor assertions in ReplicationFactorTest to use assertF instead of rf and assertRf for consistency to improve code readability and maintainability by
[ gr - 16265 ] llvm context should not be initialize during pre - initialization .
removed the @ Ignore annotation from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest . java to streamline
replaced RuntimeException with JsonIOException in Gson . java to improve error handling by using JsonIOException instead of RuntimeException
replaced ` Integer . valueOf ` with ` Integer . parseInt ` for parsing integer values instead of ` Integer . valueOf ` to improve code readability and
updated error messages in Copy . java to include source and dir variables to improve clarity and accuracy of error reporting for better debugging
refactor segment name handling in HLCSegmentName and LLCName classes to use a new method ` isHighLevelConsumerSegmentName ` to improve
added methods to startActivity in ShadowFragment and corresponding test cases in FragmentTest to ensure fragment activity is properly attached to the Activity context
replaced DateTime . now ( ) with DateTime . getCurrentTime ( ) in DueDateBusinessCalendar . java to ensure accurate date representation by using the current
updated the return statement in TargetCpuType . java to include " x86 _ 64 - none - linux - android " to ensure compatibility with
added methods to delete all files in FileDataStorageManager and modified ManageAccountsActivity to execute removal tasks in ManageAccountsActivity to
updated the command - line option from " - ? " to " - h " in SchemaCrawlerCommandLine . java to correct the command - line option
added a new method ` createSuiteDescription ` to ` Description ` and modified the ` equals ` method to use ` fUniqueId ` directly to improve
replaced ` MultiFormatReader ` with ` MultiFormatReader ` in ` SnapshotThread . java ` to simplify decoding process by directly using ` decodeBarcode
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor by eliminating unnecessary dependencies
added unit tests for range handling in GWCZoomContextFinderTest . java to ensure correct functionality and behavior of the GWCZoomContext
added a new constant ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and modified the ` jrubyDependencyTracker ` to
updated the method call from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure
patch by jbellis ; review by brandonwilliams for cassandra - 1443
do n ' t paint the image if the device do n ' t have the image
updated tuner configuration handling and logging in multiple classes to improve clarity and functionality of tuner configuration management
added HasTests interface to the ` AbstractShBinaryDescriptionArg ` interface and created a new test method in ` ShBinaryRuleIntegrationTest ` to enhance
added support for the " db : hsqldb " database in TestFilter . java to ensure compatibility with HSQLDB database configuration
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
do n ' t materialize host exception if there be no stack trace
[ gr - 16225 ] export jvmcito to jvmcito for java 8 or later .
add test to verify that duplicate command can be use in the commandbus
[ flink - 20865 ] [ table - planner - blink ] add fine - grained - mode - all - blocking option
fix entityfishhook . getblockblock ( ) not work when it ' s not in the world .
camel - 15836 : camel - ftp - java microgenerator - aws - m1 - aws - m1 - aws - m1 -
updated method names from ` getCommandRunner ( ) ` to ` getStepRunner ( ) ` across multiple files to improve clarity and consistency in naming convention
renamed ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` and ` GangliaReporter ` classes to improve clarity and
added a check for empty items in AppsContainerRecyclerView . java to avoid unnecessary processing when no items are present
added a conditional annotation to the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure that the REPORTER _ BEAN
refactor XMLLayout to use StringBuilder instead of StringBuffer to improve performance and readability by using StringBuilder instead of StringBuffer
added a new constant ` OMIT _ HEADER ` and modified ` NamedList ` , ` BinaryResponseWriter ` , ` JSONResponseWriter ` ,
fix a bug where groupshape . shapename and groupshape . shapename should return the property number instead of the id .
updated the method call from ` getBuildRuleType ( key . getSimpleName ( ) ` to ` Description . getBuildRuleType ( key . getSimpleName
make sure we modify the hierarchy before remove it from the scene .
fix npe in tradedatavalidation when there be no item in the list
added hashCode ( ) methods to AbstractNamedObject and modified retrieveColumns method to include a new parameter in TableRetriever to enhance object hashing capabilities and
add confidencetype to wallet ' s confidencetype ( not _ in _ chain )
camel - 14297 : camel - http - client - add support for header .
fix handling of conditions in craftinghelper . processconditions ( )
hbase - 26464 hregion . close ( ) should log warn when open region
refactor length checks in Credential . java for improved readability to enhance code readability and maintainability by reducing redundancy
[ java ] fix checkstyle violation in clientconductor
modified the destroy method to handle InterruptedException instead of reflection to improve error handling and ensure proper process termination
added Oracle support to the condition in TestDefaults . java to ensure compatibility with Oracle databases
camel - 16297 camel - mail : fix the issue that mailconsumer do n ' t connect to a mailstore if it be connect to
[ java ] throw parsing cancellation exception if there be more token in the query that have not be consumed .
added new languages " ka " , " greek " , " gu " , and " gu " to the enum to enhance language support for
add getdatafilename ( ) method to voice . getdatafilename ( )
added emailDomain property and corresponding getter / setter methods to LdapIdentityProviderDefinition , IdentityProviderDefinition , IdentityProviderDefinition , and its corresponding test cases to
added configuration constants for read and connect timeouts in the application to enhance flexibility in request handling by allowing customizable timeout values
add a check for non - empty mydeferred concepts to savelatency
added RedisCategory annotations to RedisServiceRegistryTests . java to enable test categorization for Redis service registry functionality
fix finddeprecateduses to handle empty type pattern
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the component
removed unused imports from multiple classes to clean up the code and improve maintainability
updated LogEventTrigger to set the event signature full and added a new method ` getEventSignatureFull ` in ` ContractEventTriggerCapsule `
updated the filter condition to check if the file name ends with " _ " instead of contains to ensure that the file name does not exceed the intended
replace clearRect with fillRect and set the background color in MapView . java to improve visual consistency by using the background color instead of the clip bounds
reformatted code for improved readability and structure in PackageBuilder . java to enhance maintainability and readability of the code
removed debug print statements from multiple Java files to clean up the code and improve readability
added a null check for score before assertions in TestFieldCacheSort . java to ensure that only valid score documents are processed to avoid potential NullPointerException
changed the initialization of oldKeys from ` Set . copyOf ( ) ` to ` Set . copyOf ( ) ` in ` DeviceState . java `
added a method to check for zero - time values in ColumnSnapshotGenerator and created a test for dateDefaultValue in MySQLIntegrationTest to ensure correct handling of
replace instances of ` offererMultiSig ` with ` offererBtcPubKey ` in ` Contract . java ` to improve clarity and consistency in
updated generic type parameters in FunctionAllGroupHeadsCollector , FunctionFirstPassGroupingCollector , FunctionFirstPassGroupingCollector , FunctionFirstPass
[ drools - 4071 ] add test case for edit session model in kiecontainer .
updated the instantiation of HiveMetaStoreClient to use ' this . ' instead of ' conf ' to ensure proper reference to the current instance of the
added a conditional check for modalness in TaskView . java to prevent unnecessary processing when modalness matches modalness
added a new test method ` createFromProfileLevel ` in ` ShadowMediaCodecListTest ` and implemented global settings in ` ShadowMediaCodecList `
fix issue # 5460 : confirm button not focus when enter key ( # 5460 )
added validation for width and height in SunVolatileImage , X11SurfaceDataProxy , XRSurfaceDataProxy , and XRPMBlitLoop
updated the group number separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure correct formatting of
updated AsyncStressTest and StressTest to use AtomicInteger instead of int arrays to improve thread safety and ensure thread safety in concurrent scenarios
added functionality to hide icons in AchievementsFragment and updated menu visibility logic in LeaderboardFragment and LeaderboardFragment to improve user experience by providing
added initialization of access , name , and desc in SearchMethodVisitor . java to ensure proper access and description retrieval from the context
added sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to improve
refactor dur retrieval logic in DLNAResource . java to improve readability and maintainability of the code
[ hotfix ] remove unnecessary dependency on batchresequencerconfig and streamresequencerconfig
[ hotfix ] [ table - common ] do n ' t release open partition in case of failure .
hbase - 26186 use ssl . keymanager . algorithm instead of hardcoded string
refactor ` PrimitiveWrapperClassConstructorToValueOf ` to use ` TreeVisitor ` instead of ` JavaIsoVisitor ` to improve code maintainability
added exit ( ) method to blockmania . java to ensure proper handling of keyboard events in the Keyboard
rename access specifier . package _ private to accessspecifier . none
refactor method names and error handling in Check . java for consistency and clarity to improve code readability and maintainability by using more descriptive
updated the logic for retrieving stripes and statistics in OrcInputFormat . java to ensure correct retrieval of stripes and statistics from orcTail
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
updated URLs from HTTP to HTTPS in MyhentaicomicsRipper . java to enhance security by using secure connections
added functionality to display the current jar version in the application to provide users with information about the current version in the application
fix typo in papplet . split ( )
added keyboard support for rotation in ConsoleActivity and TerminalView classes to enhance user experience by allowing text editing functionality
updated PriorityQueue type from HitQueue to ScoreDoc in ParallelMultiSearcher . java to improve type safety and eliminate unchecked cast warnings
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerExceptions when accessing ownerConnectionAddress
camel - 14265 : camel - managed - camel - jolokia - add headermapfactory class name to managed camel context
updated closing brace in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
int - 1334 jmsoutboundgateway now implement initialization bean to allow configuration of jms queue .
updated the parameter in the expecting method from ` i + 1 ` to ` i 2 ` in the ` ArrayFunctions . java ` to correct the
refactor script engine initialization in AbstractScriptProcessor and InvokeScriptedProcessor to improve error handling and ensure thread safety during script engine initialization
updated PooledConnectionImpl and PooledConnectionImpl to include the org . postgresql . PGStatement class to ensure compatibility with PostgreSQL ' s
patch by jbellis ; review by jbellis for cassandra - 1449
changed log level from error to warn in AtomicRemainder . java to provide more granular logging for memory limit issues
[ iotdb - 4071 ] compaction : remove unnecessary sorting of candidate . mintimestamps ( ) from compactioncontroller
fixed - rblockingdeque do n ' t use unit . toseconds ( ) for short poll
removed unnecessary string concatenation from printMap calls in JobInspectCommand . java to simplify code and improve readability
refactor Engine class to improve code organization to enhance maintainability and readability of the code
updated the return statement to use ` entrySet ( ) ` instead of ` Stream . of ( ) ` for sorting children to improve code readability and
[ issue # 5071 ] fix acl client test failure ( # 5071 )
updated condition from numIndexDims to numDataDims in BKDWriter . java to correct the spelling of " numIndexDim
[ hotfix ] [ test ] use log instead of printstacktrace .
updated the parameter in the addListElement method from funN to lt in ExpressionNodeEvaluator . java to improve clarity by using a more descript
removed the ` public ` access modifier from the ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor ` to
cloudstack - 10297 : fix error message in snapshotmanagerimpl . createsnapshotpolicy ( )
removed public access modifier from write and clear methods in ItemWriter . java to restrict access to these methods for better encapsulation
update roombahandlertest to use ` ` test ' ' instead of ` ` test ' '
add tostring ( ) method to imagenamesubstitutor and add test
replaced FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a more efficient RAMDirectory implementation
added a static variable ` mLineHeight ` and modified the line height calculation logic in ` Utils . java ` to ensure line height does not exceed
refactor WalletAppKit class to improve code organization to enhance maintainability and readability of the code
remove hat _ nashorn _ js _ id from profiler / profiler / profiler / oql / profiler / profiler /
refactor ChatTransportSelectorBox to use JCheckBoxMenuItem for menu item removal to improve code readability and maintainability by reducing duplication
added resolve and replaceTokens methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes to provide functionality for resolving and replacing tokens in the
make bsqblockchainexplorer optional in preferencespayload # setblockchainexplorer
added attribute management methods to StandardSession and Session classes to enhance session attribute management functionality
added assertions to validate the ` getPlainBean ( ) ` and ` getAlong ( ) ` methods in ` TestDbJson _ List `
[ java ] use initialpagecount instead of pageSize in monotonicappendinglongbuffer .
refactor BatchCommandLineLauncher class to improve code organization to enhance maintainability and readability of the code
added support for HSQL database and transaction management in BatchMetricsApplication to enable support for HSQL database and transaction management in the application
changed the implementation of GlowrootLogHttpService from UnauthenticatedHttpService to HttpService to simplify the service implementation
updated graphics composite settings in PageDrawer . java to ensure proper rendering of graphics with non - stroke strokes
removed unnecessary notifyAll ( ) calls from DocumentsWriter and DocumentsWriterPerThread , and added synchronization in DocumentsWriterPerThread to improve thread safety and ensure
added methods to retrieve and set properties based on column order and validation constraints in UiBinding . java to enhance the functionality for managing multiple - choice properties
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for ` dexStore ` , ` dexSplitMode ` ,
added a fullSave flag to control the saving of a tree based on its state to ensure that the save tree is only updated for the save tree
refactor Affix to use a Pattern instead of a String for condition handling to improve flexibility and maintainability of the affix parsing process
updated the initialization of ` krakenMakerFees ` and ` krakenTakerFees ` in ` KrakenAdaptersTest
removed unused CharTermAttribute import from DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class implementation to improve code readability and maintainability
removed unsupported encoding checks for dataEncoding in VectorizedPrimitiveColumnReader . java to simplify error handling for unsupported encodings
added SLF4J marker handling in HttpSolrCall . java to improve logging clarity and ensure proper logging functionality
added a call to destroy the metadata service proxy in ServiceInstancesChangedListener . java to ensure proper resource management and prevent memory leaks
fix infinite recursion in defaultentityqueryrepository . getlvlfilter ( )
updated error message formatting in HubChangeExecListener . java to include physical file path if the changelog ID is null to improve clarity of error messages
add a new test case to check if a barcode can be decode .
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompileStep
[ java ] do n ' t limit the number of event in the query if it do n ' t exist
refactored validation logic in ValidatedLocalValidatorFactoryBean . java to streamline the validation logic to improve code readability and maintainability by
fix a race condition in entityawareworldprovider . remove temporaryblockentities .
[ hotfix ] [ table - common ] remove unnecessary check for exact type in array copy phase
[ hotfix ] remove unused log level from testcoyoteadapter
updated the handling of WantedAnywhereAfterFollowingInteraction in Reporter . java and removed the HasStackTrace . java file to streamline the code
added null checks for owner and key addresses in AccountPermissionUpdateActuator , AccountPermissionAddKeyActuator , and PermissionAddKeyAct
[ hotfix ] [ runtime ] do n ' t sort command in script launcher .
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.18 . 0 ( # 371
updated metadata property settings in BaseSingleTreeBuilder . java for consistency to improve code readability and maintainability
updated AsmLoader instantiation to use the class loader for class loading to ensure compatibility with the correct class loader context
pdfbox - 4071 : do n ' t try to decode a cosfloat , a suggest by valerybokov
updated the formatting of namespace declarations in Java2TypeScriptTranslator . java to conditionally export namespaces based on definition scope to ensure proper formatting of
updated the start method to use AbstractHandler instead of EmptyServerHandler and added a method to copy the input stream to ensure proper handling of HTTP requests
removed unnecessary string arrays from listener listeners in HelloInput . java to simplify code and improve readability by eliminating unnecessary array creation
[ hotfix ] [ test ] fix npe in abstractsqmpath
updated package structure for CreateFolderTest , DeleteFileTest , RenameFileTest , and TestActivity to improve organization and clarity of test files
refactor image creation logic in AwtCanvas . java to handle different BufferedImage types to improve robustness and prevent potential null pointer exceptions during rendering
add native image location qualifier to libgraal runtime to allow customization of native image location .
[ hotfix ] remove dataflowportabilityapiunsupported from pardotest
update gapic - generator - java version to 2.1 . 0 and update gax - java to 2.18 . 1
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
refactor CallStack class to improve code organization to enhance maintainability and readability of the code
log a warning if the max size of a map do not allow any data in the map
corrected the spelling of " Move whitespace " to " Move LST " across multiple Java files to ensure consistency and accuracy in the documentation
refactor calculations in ` ThreadedAcousticScorer . java ` to improve code readability and maintainability to enhance maintainability and
return null instead of throw a new AssertionError in NetHooks . java to improve error handling by returning null instead of throwing an assertion
updated method calls from ` getServerAddress ( ) ` to ` window ( ) . title ( ) ` in ` ApplicationControllerFluentLeniumTest .
added a new ` makeString ` method implementations across multiple iterable classes to standardize string creation across different iterable implementations
updated order setting in OidcServicesManagerRegisteredServiceLocator from HIGHEST _ PRECEDENCE to DEFAULT _ ORDER to improve code readability
added a new Predicate < ProposedWeakAssociationRule > to the WeakAssociationsAnalyzer constructor and updated its constructor to accept a weakAssociationRule
refactor Deflater class for improved performance to enhance performance and reduce processing time
added exception handling for IOException in Font . java to ensure proper resource management and prevent potential memory leaks
added null and length checks for the content array in VersionTypeBinding . java to ensure that a valid version is returned when no content is provided
refactor NearbyListFragment to return a Place object instead of a single Place object to simplify the code and improve readability by eliminating unnecessary
camel - 16297 : camel - mail : fix case insensitivity for camel - mail
[ bouncycastle ] make opensh private key format public .
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a ` boolean isBind ` parameter and modified the ` updateItemLocationsInDatabase
updated import statements in InheritanceCacheTest . java to use wildcard imports and added third access logging in JPA to improve code readability and
updated import statements in ConnectOAuth2RequestFactory . java and added a method to retrieve user approval requests in TofuUserApprovalHandler . java to
fix influxnamingconvention to not apply to tagvalue ( # 645 )
add dump ( string ) method to avoid use of system . out . println ( string )
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with updated cookie handling
added a static method ` classMetadataUnsupported ( ) ` to ` Platform . classMetadataUnsupported ( ) ` in ` Platform . java ` and `
added functionality to manage and manage the visibility of the clear all button in OverviewActionsView and RecentsView to enhance user experience by allowing users
added a new variable ` desiredRepoVersion ` and modified the timeout duration in ` ClusterStackVersionResourceProvider ` and ` HostStackVersionResourceProvider
deleted the MemoryLeakTest . java file to remove unused test code to streamline the codebase
updated the return statement in ServletTester . java to use InetAddress . getLocalHost ( ) . getHostAddress ( ) instead of InetAddress . getLocalHost ( ) to improve
add option to enable plotsquared - w api by default
[ hotfix ] [ test ] assert cluster size eventually in test
replaced unsupported operation exception with a singleton instance of FFIProvider to improve flexibility in loading FFI providers
tika - 132 : add test for hierarchical file list in batchprocesstest
added null checks for MongoDBPersistentEntity and updated condition checks in MongoTemplate . java , and added unit tests in MongoTemplateTests . java to ensure
updated position parameters in NodeClass . java to use NODE _ LIST instead of 0 to ensure correct positioning based on direct input and success count
added a new field ` accTradeValue ` and its getter method in ` BithumbTicker ` , and updated ` BithumbTradeServiceRaw `
updated log messages to include segmentName in RealtimeSegmentDataManager . java to improve readability and maintainability of log messages
replaced maxParallelThreads with MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to improve code readability and
replaced ArrayList with CopyOnWriteArrayList in multiple classes to ensure thread - safety for concurrent modifications in concurrent environments
refactor multiple dictionary - related classes for consistency and clarity to improve code maintainability and readability
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during execution
( chore ) camel - msv : do n ' t fail for unknown reason
updated condition from ` beginCycle = = ` to ` beginCycle > ` in ` DelegationService . java ` to ensure that ` beginCycle
updated RandomValueStringGenerator initialization from 6 to 10 in JdbcExpiringCodeStore . java and updated assertions in AutologinIT . java to
added a check for UniqueConstraint instances in StandardObjectChangeFilter . java to ensure proper matching of UniqueConstraint instances
refactor description handling in MediaDetailFragment to use a HashSet for language codes to improve code readability and maintainability by reducing redundancy
[ java ] catch arrayindexoutofboundsexception and typecastexception in findbugs2 . java
added a new ` withReferenceFilter ` method to ` ListImagesCmd ` and updated filtering logic in ` ListImagesCmdImpl ` and ` List
camel - 14284 : camel - jms - add support for bridgeerrorhandler in camel - jms
added conditions to check for " # ifndef " , " # endif " , and set allOps to true in OpExclusionUtils .
added return statements to DatabaseCommand . java to ensure proper handling of database command execution
[ java ] update honestpolitician example to use a more descriptive name
replace null check for initFile with StringUtils . isNotBlank ( initFile ) in BeanShellInterpreter . java to improve code readability and maintainability by
camel - 14263 : camel - restlet component should use port instead of hardcoded 0 .
removed unused block imports from SchematicFormat . java to streamline code and improve readability
added a system property ` hive . query . max . length ` to set the maximum query length to " 100Mb " in ` QTest
changed access modifiers from public to private in WebServer . java and refactored HttpConfiguration initialization in WebServer . java to improve encaps
[ hotfix ] [ connectors / kafka ] rename writekafka to kafkasink ( # 11486 )
updated the result logic in HiveConf . java and added appName handling in HiveSparkClientFactory . java to ensure that the application name is correctly
corrected a typo in the variable name from " white " to " included " in ManagedClassFactory . java to improve code readability and
simonstewart : add maximisewindow to the driverservlet
replaced ` getEmbeddedCellsBuckOutBaseDir ( ) ` with ` getMainCellRoot ( ) ` and added ` getMainCellB
added a check for " entity expansions " message in TestXMLEntityExpansion . java to ensure that the error message contains " entity expansions "
updated table offset and length assignments in TrueTypeFont . java to use bitwise operations to ensure correct positioning of table elements
added a customization check for the form ' s customized state in DirectMethodHandle . java to ensure that the form ' s customization is not
refactor line chart rendering logic in LineChartRenderer . java to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
refactor flavor validation logic in AndroidBinaryDescription . java to use a for - each loop instead of a single loop to improve code readability and
update glGenBuffers ( ) method call from offset to i in LwjglGL11 . java to ensure the correct buffer is used
added new classes Property extends PropertySuper , PropertySuper , TestClassResolutionFail , and TestClassResolutionFail to implement a PropertySuper class and test case to
do n ' t terminate the completely shutdown hook if it ' s disabled
updated the bean name from ` url ` to ` FilterChjainProxy ` and removed the ` url ` parameter from the ` VirtualFilterChain
[ hotfix ] [ table - common ] use array . sort ( ) instead of collections . sort ( )
added checks for schema loaded before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser classes to ensure proper loading of tables based on schema
set baseType to null in DatabaseInfoRetriever and set literalPrefix and literalSuffix to null in MutableColumnDataType to ensure proper initialization of baseType
updated link references in multiple Java files to use ` @ link ` syntax to enhance code readability and maintain consistency across the codebase
refactor EvaluatorFactory to use final static static instances instead of static instances to improve performance by avoiding unnecessary object creation
updated command - line arguments from " -- target - platform - specific " to " -- target - platform - specific " in BuildCommandIntegrationTest and Config
added a method to play sound effects in AllAppsView . java to enable dynamic playback of sound effects based on user preferences
changed the exception type of the main method from Exception to IOException in RemoveFirstPage . java to improve error handling by using IOException instead of Exception
added a line to enable granularity for the left axis in BarChartActivitySinus . java to enhance the visual appearance of the
refactor version comparison logic in GdxSetup . java to use a new method ` compareVersions ` to improve code readability and maintainability by
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS _ ALIAS _ SUPPORTED check to ensure compatibility
added a close ( ) method to multiple connection classes to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ test ] use thread - safe queue for awaitappend
[ beam - 4142 ] add check for directory in resourceid
removed unnecessary import statements from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability
removed redundant unbindHandle call in ItemServiceImpl . java to streamline code by eliminating unnecessary duplication
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the code
removed conditional checks for touch detection in OtherActivityTouchConsumer . java to simplify code logic for better readability and maintainability
refactor button color handling in NavbarButtonsViewController to use configuration for dark mode to improve code readability and maintainability by reducing redundancy
[ java ] throw exception instead of abort in polybenchlauncher .
updated the handling of ` bootstrapMethodIndex ` and ` memberIndex ` in ` ClassWriter . java ` to use ` refKind ` instead of
added a new ` BlockFormattingContext ` parameter to the ` findBox ` and ` findElementBox ` methods in ` BasicPanel . java `
replaced instances of ` LaunchedProcess ` with ` launchedProcess ` and added a ` getStdErrorOutput ` method in ` WorkerProcess ` to
added null checks and error handling in Collections and CheckedListReplaceAll classes to ensure robustness by preventing NullPointerExceptions when a null operator is passed
added a new boolean flag ` _ testFill ` and ` _ writeCallback ` to the ` SslConnectionTest ` class to manage the write
added listener registration and listener registration in DeviceFlag and FeatureFlags classes to ensure listener registration and listener registration for device configuration changes
added JUnit Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue # 1114
removed the import of MalformedURIException from StandardRequestHandler . java to clean up the code and improve readability
update instructorfeedbackeditpage to focus focus on the end date
refactor synchronization logic in KrakenStreamingTradeService . java to improve readability and maintainability of the code
updated error message formatting from ` err ` to ` out ` in ` ChangeableUrls . java ` to ensure consistent output formatting for better read
added a new boolean parameter ` randomAccessRows ` to the ` SparseRowMatrix ` constructor and updated related methods to include it to enhance flexibility in
cloudstack - 10297 : do n ' t delete usage event for volume that do n ' t exist
updated InputStream initialization and file path handling in Utilities . java to ensure compatibility with different Hive configurations
[ beam - 14265 ] fix import of guava ' s guava in udftestprovider
[ hotfix ] [ runtime ] add resetinternalstate ( ) method to memorycallgraphbuilder
[ java ] do n ' t throw npe if multiuserchatopset be null .
add a check to ensure that a file can be written to avoid illegaluseractionexception .
added a new ` FolderSyncActivity ` class and integrated it into the ` DrawerActivity ` and ` FileDisplayActivity ` classes to enhance user
[ hotfix ] [ test ] fix flaky test in sequentialchannelstatereaderimpltest
refactor Spanishtreenormalizer to use string . isnumeric ( ) instead of string . isnumeric ( )
replaced PointReader with heapPointWriter ' s getPackedValueSlice method in SimpleTextBKDWriter to simplify the code and improve performance by
added LocaleRandomizer class and its corresponding tests in InternalRandomizerRegistry and its corresponding test to enhance randomization capabilities for locale - specific randomizations
added tests for handling font printer and printer metric types in TestMimeTypes . java to ensure correct handling of font data types in the application
add 7.0 to the list of 7.0 version in the Installer . java and AutoUpgrade . java files to ensure compatibility with the
removed unnecessary whitespace in TCPTransport . java to improve code readability and maintainability
updated the read timeout logic in Http2AsyncParser . java to include a default value of 0 to ensure that the read timeout does not exceed the
updated the default value of the WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to allow
corrected a typo in the error message in SelectStatement . java to improve clarity of error messages for better debugging
added handling for " date " field in ThirdEyeJiraClient . java to enhance date formatting capabilities in the application
refactor HeadersGenerator to use a PriorityGenerator instance instead of a parentStreamId to improve code readability and maintainability by encapsulating
added a maximum size limit for scalar replacement in ClassTransformer . java to ensure that scalarReplacementOption does not exceed the maximum size of the entireClass
updated MediaProvider to include DATE _ TAKEN in projectionTest and folderSortOrder assignments to ensure accurate data representation in the MediaProvider class
updated drawImage parameters for image dimensions in TexturePacker2 . java to correct positioning of image dimensions to ensure accurate image rendering by accounting for dimensions
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use ServletContextHandler instead of FilterHolder to improve code clarity and maintainability by
added shutdown calls for validateSignService and trxHandlePool in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource
added a new ` RawJsonRequestBodyAnnotationProcessor ` and a new ` RawJsonStringMethod ` annotation in ` JaxrsSwaggerGeneratorContext `
added a new method ` newTarget ` to ` LoggerUtils ` to create a target with specified targetType and extension to enhance logging capabilities by allowing specific
replaced ` ListBeanContainer ` with ` ArrayList < > ` in ` BeanContainer ` and added a new test class ` BeanContainerTests ` to
hbase - 24286 testmetricsregionserver should use blockcachecounthitpercent instead of blockcounthitpercent and blockcachecounthitpercent
camel - 14297 : camel - caching - cleanup temporary file input stream after exchange be complete .
fix teltonika decoder to use deviceid instead of deviceid
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` in ` HybridProjectBuildFileParser . java `
added a null check for the operator in the visitAssignop method in Attr . java and created a new test class FailOver15 . java with
added a boolean flag ` enableAccountHandling ` in ` BaseActivity ` and modified onCreate method call in ` BaseActivity ` to conditionally call onCreate
use heuristicallyfindmainconnectedcomponent instead of heuristicallyfindmainconnectedcomponent in isochroneresource
added a path parameter to the DrillViewTable constructor and modified the DrillViewTable constructor to include a path parameter to enhance flexibility in view
updated constructor parameters in PooledByteBufAllocatorL . java to include additional pooled byteBufAllocator parameters to enhance functionality by allowing customizable cache
changed array types from double [ ] to short [ ] in ObjectInputStream . java and added CloneArray . java test for ObjectInputStream ' s cloning
added configuration for LLAP _ IO _ THREADPOOL _ SIZE in HiveConf . java and updated executor initialization in LlapIoImpl .
added support for JVM version 8 and 11 in SecurityServicesFeature . java to ensure compatibility with Java versions below 8 and 11
updated bounds checking in LatLonGrid . java and added a new test for growing polygons in TestLatLonGrid . java to ensure proper validation of
[ java ] add expectedconditions . invisibilityofelementwithtext ( ) method to make it easy to find element with text
added a new parameter ` isInsertOverwrite ` and modified the ` replaceFiles ` method signatures to include ` isInsertOverwrite ` to enhance functionality by
added tests for the ` SomeInnerClass ` interface and its implementation in ` ReflectorTest . java ` to ensure the correct behavior of the inner
added " auto _ generate _ android _ facet _ sources " configuration and updated the boolean value from " disable _ r _ java _ generator " to
updated message formatting in HubChangeExecListener . java for consistency to improve readability and maintainability of log messages
added properties property management and corresponding getter and setter methods in Link . java and corresponding tests in QuickLinksConfigurationModuleTest . java to enhance flexibility in
removed @ EqualsAndHashCode annotations and added a toString ( ) method to InitialConfig , YamlConfigFileDTO , and YamlConfigFileDTO classes to streamline
updated SimpleForwardingServerClientCall and SimpleForwardingClientCallConfiguration to use generics for ReqT and RespT to improve type
updated forName methods to include caller - sensitive adapter support to enhance class loading flexibility by allowing dynamic class loading based on the caller ' s class loader
updated assertion to use IsEmptyString instead of isEmptyOrNullString for consistency to improve readability and maintainability of the code
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management by using an alternative thread pool
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated the ` TimeStepdefs ` and ` TimeStepdefs ` classes to use ` Options ` instead of ` HierarchicalStreamWriter ` to
fix banners not work on macos
updated the ` createProxy ` method to use ` getUri ( ) ` instead of ` exchangeSpecification ` in multiple service classes to improve code clarity and
removed multiple calls to ` record . getElementsByTagName ( " extends " ) . getLength ( ) . getLength ( ) ` in ` RecordGenerator . java
[ hotfix ] [ kafka ] make autocommit enable by default for kafka consumer
removed lock release and output statement calls in LoggingExecutor , LoggingExecutor , and StandardLockService to streamline lock management and ensure proper handling of database
added ` @ SuppressWarnings ( " rawtypes " ) ` and ` @ SuppressWarnings ( " rawtypes " ) ` annotations to ` AbstractAuthorize
fix race condition in database . closefiles ( ) and database . closefiles ( )
camel - 14265 : camel - spring - boot - auto - configuration - maven - plugin should not use mutable property source
updated the ticker adaptation method from ` baseSymbol ` to ` counterSymbol ` in ` VirtExMarketDataService . java ` to ensure accurate ticker
camel - 14265 : camel - message - helper - test : move messagedump from support to support . dump
updated the field name from ` UUID . randomUUID ( ) . toString ( ) ` to ` System . getProperty ( " testId " ) ` to
[ hotfix ] fix concurrentmodificationexception in defaultjobparametersconverter
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the height scale setting from 256 to heightScale in FractalHeightMapGrid . java to ensure consistent height scaling across the application
removed type check for String in SecurityConfig . java and updated assertions in SecurityConfigTests . java to streamline equality checks and improve test accuracy
[ hotfix ] set default value for dump partition id to false
added TronTXOutput and TronTXOutputs tests in UTXOSetTest . java to verify the behavior of TronTXOutput
[ java ] fix unused assignment and unassigned variable name check in rule .
pdfbox - 4071 : avoid npe in pdfbox - 4071
added a new method to override previous restart parameters in JsrJobOperator . java and a corresponding test in JsrJobOperatorTests .
added a boolean field ` disallowBatchOnCascade ` to the ` DatabasePlatform ` class to provide access to the ` disallowBatchOnCascade
refactor principal initialization in JaasAuthenticationHandler to use a single variable for clarity to improve code readability and maintainability by reducing redundancy
replaced MDCLoggingContext with a custom ExecutorService for managing Solr core closure to improve thread management and ensure proper resource cleanup during core shutdown
added null check for mActionsView before setting visibility to INVISIBLE when mActionsView is null to improve code robustness by preventing potential NullPointerException
refactor the way JobParameters are instantiated in RunIdIncrementer . java to improve code readability and maintainability by reducing redundancy
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added tests for matching and matching devices plan in SchemaRegionBasicTest . java to ensure correct functionality of the matched devices plan
add tryinvoke ( runnable ) to metricseventbus . run ( )
added a conditional check for ` max ` in ` EigenvectorCentrality ` and created a new class ` Eigenvector
updated registry port handling in multiple Java files to use a random port instead of a hardcoded value to improve code readability and maintainability by
refactor geometry generation to use UnsignedBytes for setting indices , vertices , and colors to improve code readability and maintainability by reducing redundancy
set the amplifier to 0 instead of 2 to improve the responsiveness of the beacon
refactor TubeCalc class for improved calculation logic to enhance code readability and maintainability
disable http client configuration by default
updated the type of groups list from List < Class > to List < Class < ? > > and added sanity checks in DefaultValidator . java to
updated bug 8057791 . java to include a timeout value of 8163161 to address a specific bug related to the test case
allow speedment application to exit via main method completion fix # 322
removed unnecessary replacement of " [ ^ \ \ d ] " in version parsing logic to simplify the code and improve readability
added ReflectionCheckLinker . checkReflectionAccess ( type ) method call in JavaAdapterFactory . java to enhance security by ensuring proper access control
camel - 16297 camel - aws2 - mina : add ` ` lazysessioncreation = true ' ' to the test case
updated the ` initIOContext ` method to include a ` RecordReader ` parameter and modified the ` initIOContext ` method to include a new
deleted ClassLoaderHolder and LoaderManager classes to remove unused classes to streamline codebase and improve maintainability
added a new method ` configurationChanged ` to ` FileStore ` and modified the ` getJRTFileSystem ` method in ` JavaLanguageServer ` to
added a try - catch block around the registerSessionCallback and unregisterSessionCallback calls in PackageInstallerCompatVL . java to handle potential exceptions during
replaced ` src / test / org / apache / lucene / index . cfs ` with ` index . nocfs ` in ` TestBackward
added a new method ` createAndStart ` to ` AkkaRpcServiceUtils ` and modified the ` createAndStart ` method to accept a constructor
added a retry mechanism to set maximum attempts to 3 in TestExportSnapshot . java to ensure maximum attempts are set based on the retry condition
pdfbox - 4071 : remove unnecessary null check for afmstandard14 , a suggest by valerybokov
added a new test class ` SslConnectionTest ` to verify SSL connection closure to ensure proper handling of SSL connections in the Jetty client
added validation for IPv4 and IPv6 addresses in InetAddress and NetworkInterface classes to ensure proper handling of invalid address types and improve error reporting
added a new test method ` testDateSerializationInCollection ` to ` DefaultTypeAdaptersTest ` to validate date serialization in collections to ensure correct
refactor Message class to improve code organization to enhance maintainability and readability of the code
added debug logging for SQL generation and modified conditional logic in PutDatabaseRecord . java to improve debugging capabilities and ensure correct handling of the first update key
updated the loop condition in TableOutput . java to adjust the maximum width of runningWidth to ensure the loop does not exceed the specified width limits
pdfbox - 4071 : remove unnecessary null check from flatefilter and reduce code duplication
added priority handling for format strings in FormatStringChecker . java to improve the accuracy of the BugInstance instantiation for better user experience
add a property to ignore non - final loop variable in a for - each statement .
added PDF version and full compression settings in PDFExporter and updated test cases in PDFExporterTest to ensure compatibility with the latest PDF features and improve test
added unit tests for ` LdapUserDetailsMapper ` and ` LdapUserDetailsImpl ` to ensure correct mapping and mapping of role attributes to authorities and
make ldap . ldap . read . timeout configurable in milli sec
updated TestDescription , TestDescription , and TestDescription classes to improve code organization and maintainability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the variable ' shouldAvoidAllocation '
added a condition to check if the state handler is invalidated before proceeding with gesture state validation to ensure that gestures are only processed when the
updated the WORKSPACE _ ROTATION constant from 6 f to 55 f in Workspace . java to improve the WORKSPACE _ ROT
updated OciConfigConfigSource to use ConfigProviderResolver instead of ConfigProvider to improve configuration handling by using ConfigProviderResolver instead of ConfigProvider
refactor Testjsig . java for improved functionality to enhance performance and maintainability of the code
fix mana and mana mana mana mana mana mana and mana mana mana mana mana mana
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress serialization warnings for the class
updated variable name from ` tsFileNotValid ` to ` isEmptyFile ` and modified file handling logic in ` DataRegion . java ` to
added new classes Switch21 , Switch21 , and Switch19 to handle switch pattern matching and guard pattern matching to improve code readability and maintainability
corrected the error message in ComparableSubjectTest . java from " actual argument " to " rawComparableType " to improve clarity and accuracy of error
updated StreamHelper to use @ Internal annotation instead of javax . xml . transform . Source and added a new TestStreamHelper class for testing XML standalone
updated size constraints and improved error message formatting in Int2ObjectCache . java to ensure proper handling of large array sizes and enhance robustness of
removed unnecessary sorting of security filter chains in WebSecurityConfiguration . java and added unit tests in WebSecurityConfigurationTests . java to streamline security configuration
updated the method call from TimeInForce . GTC to TimeInForce . MT in BinanceTradeService . java to streamline the
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of LongRangeRandomizer to enhance flexibility and maintainability of the random number generation logic
updated KEY _ SEP character from \ 0 to \ t in RocksDBBuildInfoStore . java to ensure proper formatting of the key separator
camel - 14263 : camel - aws2 - jbang - add support for parameter json schema in camel - aws2 - jms
added error handling for NoSuchFieldError in SourceUtils . java and created a new test class TestGetBound in SourceUtilsTest . java to improve
refactor ` LeafFilterFactory ` to use a dedicated method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintain
added a condition to check if the artifact name starts with SCOPED _ TARGET _ BEAN _ PREFIX before extracting the original artifact
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 14848
refactor value handling in Config . java and add a new DnsFallback . java file for testing to improve robustness of the default boolean value retrieval
[ wip ] improve error message when fail to write tag .
changed the data type of the ` success ` field from ` success ` to ` url ` in the ` DepositAddress ` class to improve clarity and
modified the return statement in WindowsSecurity . java to include a try - finally block to ensure proper resource management and prevent memory leaks
removed the " address " parameter from the scope scope builder in CommonOAuth2Provider . java and its tests to simplify the scope configuration by eliminating unnecessary
refactor ManagedSelector to use a new Start instance instead of a lambda expression to improve code readability and maintainability by encapsulating the
added BIG _ DECIMAL _ 182 _ 04 constant and modified hue and saturation conversion logic in WLedHandler . java to support
replaced the method ` isValidCaller ` with a ` VALID _ CALLERS ` constant in ` VectorizationProvider . java ` to simplify
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to provide functionality for handling JSRInst instances
updated SubscriptionActivatingSubscriber to include TransactionManager and modified transaction handling in SubscriptionActivatingSubscriber to enhance transaction management capabilities and improve transaction handling
refactor SQL query handling in DBMSProcessor . java to improve clarity and error handling for SQL operations
removed elevation variable from ContactItemInflater . java to streamline elevation handling for devices running Lollipop and above
rename ` typeInformation ` to ` identifier ` for consistency to improve code readability and maintainability by using more descriptive variable names
refactor file reading and writing to use AccessController for privileged actions to enhance security by ensuring file operations are performed in a privileged context
refactor ` GroovyParserVisitor ` , ` GroovyPrinter ` , and ` G ` classes to use ` @ With ` and ` @ With `
updated logging message to include class name and class name to improve clarity of error messages for better debugging
updated byte handling in RecordInputStream , UnicodeString , and HSSFWorkbook classes to ensure correct handling of byte values and improve test coverage
add a test to verify the functionality of downloading a file with a specific name in the name to ensure that the file download functionality works correctly with
[ codename1 ] add cancellation exception to fingerprintscannersample and fingerprintscannersample
[ hotfix ] [ runtime ] avoid npe in timedmemberstatefactory . handlecache ( )
added a new test method for removing objects from explicit collections in MongoTemplateTests . java to ensure that the removal of objects from an explicit collection is
pdfbox - 4071 : update copyright year to 2022
updated string formatting in Coder . java for consistency to improve readability and maintainability of the error message
added methods to manage the visibility of the clear all button in RecentsView and PagedView classes to improve user experience by ensuring proper scrolling behavior
added a new constant ` COMMON _ HMS _ PROPERTIES ` and refactored related methods in ` HiveIcebergMetaHook
added a method to check if an address already in use in multiple files to improve code readability and maintainability by reducing duplication
added a new argument for the " test . class . path " system property in TestNestmateAttr . java to ensure the test class path
updated logging level from VERBOSE to verbose _ schema in Grep . java to improve clarity by using a more descriptive variable name
[ hotfix ] [ runtime ] add miss @ override annotation to class .
add support for nested nested transaction in scopetrans and transactionmanager
replaced ` fetchSize ` with ` ThreadLocal < Integer > fetchSize ` in ` QueryProcessExecutor ` and modified related logic in ` MemIntQ
replaced BackoffIdleStrategy and NoOpIdleStrategy instances with NoOpIdleStrategy instances in EmbeddedPingPong . java to simplify idle strategy
refactor to use a separate method ` handleBlockingCall ` in ` HttpClientIntroductionAdvice . java ` to improve code readability and maintain
added handling for HDP _ VERSION configuration in SliderAppsViewControllerImpl . java to ensure compatibility with the HDP version configuration
added a new ` loaderClass ` and ` loader ` fields to ` JavacProcessingEnvironment ` and modified the ` close ` method in ` Java
added DeepCloner class and modified ParameterizedRobolectricTestRunner , RobolectricTestRunner , RobolectricTestRunner , Robolec
added a binding for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to disable stack trace functionality in the application
added a check for the object type in NativeObject . java to return null if the object is an object to ensure proper handling of object types
replaced instances of ` sun . jvm . hotspot . types . OopField ` with ` OopField ` in ` SystemDictionary . java `
updated JwkKeyListView and JsonWebKeyEndpoint to use SymmetricPublicKey instead of RSAPublicKey to enhance compatibility with different key types and improve compatibility
use onlywritablebootimageheap . spawnisolates ( ) instead of spawnisolates ( )
updated MBeanServerMXBeanUnsupportedTest . java with new test cases to improve test coverage for MBeanServerMXBean functionality
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and improve maintainability
updated Actuator and related classes to replace Validator ( ) with getOwnerAddress ( ) and added getOwnerAddress ( ) methods to improve code clarity and
added main ( ) method to make it easy to run the test
do n ' t send ` ` - inf ' ' command when ` ` min ' ' be ` ` max ' '
[ hotfix ] [ wire ] do n ' t set empty index for edge .
[ java ] remove duplicate call to remove ( ) in clientconductor and drivereventsadapter
added ` saveConflict ` method calls to ` FileDataStorageManager ` , ` FileDownloader ` , and ` FileUploader ` classes to ensure
updated generic type parameters in ` ExecutionContext ` , ` AbstractTransactionalResourceItemWriter ` , and ` AbstractTransactionalResourceItemWriter ` classes
replaced ` StrUtils . splitFileNames ( ) ` with ` StringUtils . splitFileNames ( ) ` across multiple filter factory classes to simplify
added support for " oracle " and " mysql " driver in DatabaseFactory . java to ensure compatibility with Oracle and MySQL driver configurations
updated the constructor of ` MockMethodInterceptor ` to accept a ` handler ` parameter and added a serialVersionUID to ensure proper serialization and deserialization of the
replaced the usage of ` new Date ( ) . getTime ( ) ` with ` minTriggerTime ` in ` FileChangedExclusiveReadLockStrategy . java
replaced instances of ` EnvironmentInstance ` with ` wrapClassLoader ` in ` ExecutionContext ` , ` LocalExecutor ` , and ` ExecutionContext ` classes
added a runOnUiThread to handle buffer changes in TerminalView and updated buffer height calculations in TerminalTextViewOverlay to improve UI responsiveness and
updated processConfigFile method signature and added pid handling logic in ConfigDispatcher . java to improve code readability and ensure proper pid formatting
[ hotfix ] remove disabledfreezeaction and disablefreezeaction from operationregistry
add insecure config option to tlsconfig to allow to use insecure mtls
refactor package search logic in JavadocTool . java and add a new T7091528 . java file to improve code readability and
replaced case - insensitive comparisons with case - insensitive comparisons in ExporterGDF . java to improve readability and maintainability of the code
added a cascade option to the @ OneToOne annotation in DefaultUserInfo . java to allow the @ OneToOne annotation to be cascaded by default
updated the ` equals ` and ` hashCode ` methods in ` Message . java ` to use ` Arrays . equals ` and ` Arrays . hashCode `
updated UTF - 8859 - 1 encoding from " ? ? ? " to " \ u017D \ u017D \ u0
added a method ` isKeySerializerTypeVariableSized ( ) ` to the ` RocksDBSerializedCompositeKeyBuilder ` class to provide a
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and modified the creation of ` ProtectionDomain ` in ` SubjectDomainCombiner ` to
add null check for recipe and recipe to prevent null pointer exception
refactor parsing logic in mmm Parser . java and ppp Parser . java to improve readability and maintainability of the code
added a new method ` showConnectionErrorPopup ( ) ` to ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter `
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to check for unsupported media types to ensure proper
updated bitwise operations in NodeBitMap to use 1L instead of 1L to ensure correct bitwise operations for bitwise operations
refactor ImportLayoutStyle class to improve code organization to enhance maintainability and readability of the code
added constants for TERM _ PROGRAM and MINTTY in ConsoleUIService . java and updated related logic in ConsoleUIService . java
replaced Mockito with TestAccountManagerCallback in ShadowAccountManagerTest . java to improve test readability and maintainability by using a more descriptive
replace the private final variable ` enclosingType ` with ` wrapped . getEnclosingType ( ) ` in ` AnalysisType . java ` to simplify the
updated method names from ` getProperty0 ( ) ` and ` getEntries ( ) ` to ` getProperty1 ( ) ` and ` getEntries (
removed the timeout parameter from the set method call in PutAllCallable . java to simplify the code and improve readability
fix npe in mqclientinstance . registerconsumer ( ) when consumer be empty or not
[ java ] rename sourceidentity to sourceidentity in driverconductor . java
added a new file ` TopTabAction . java ` that implements the ` ToolbarPresenter ` interface to provide a user interface for displaying the toolbar
camel - 14265 : dynamicrouter should start the reactive executor if the recipient mode be all match .
updated the ` AggregateItemReaderTests ` class to use JUnit ' s ` @ Before ` and ` @ Test ` annotations instead of ` TestCase
updated the type parameter from ` valueTypeCap ` to ` valueTypeCap ` in ` AbstractObjectValueTypeMap . java ` to improve type
added wikidata edit count functionality to AchievementsActivity , NetworkingModule , and OkHttpJsonApiClient to enhance user experience by allowing users to
added a validation check for the length parameter in OfflineSorter . java to ensure that the length is within the valid range to prevent runtime errors
added a new ` BugAccumulator ` to track and report accumulated bugs based on the presence of ` Long . MIN _ VALUE ` to ensure accurate
refactor multiple dataset classes for consistency and clarity to improve code maintainability and readability
updated error message formatting in ProvisionClusterRequest and ProvisionClusterRequestTest to include acceptable values to improve clarity of exception messages for better debugging and
updated random number generation in TestVectorUtil . java to ensure consistent random number generation across the application
changed the return type of ` compareBy ` from ` int ` to ` long ` in ` DateUtil . java ` to allow for larger time
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 - add ssl property
[ java ] allow safebrowsing to be enable by default
added null checks before setting light configurations in BaseMotorMount and RecoveryDevice classes to prevent potential NullPointerExceptions when oldConfig is null
added a condition to disable transcoding in DLNAResource . java to ensure transcoding is disabled when configurationSpecificToRenderer is disabled
updated logic in DataTable . java and TableDiffer . java to handle empty list cases to improve error handling and provide clearer error messages for empty
added a new constant ` CustomIgnoreTag ` and modified ` iter . remove ( ) ` in ` RobustJavaMethodParser . java ` to
camel - 14265 : camel - jdbc : do n ' t throw runtimeexception if stale version be miss .
fix : add parent configuration property to avoid classcastexception
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity to ensure compatibility with the latest Android API changes
deleted the ClusterNodeInfo . java file to the class is no longer needed for the current implementation
corrected a syntax error in the return statement in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug print statements for the ciphersuite chosen suite in ServerHandshaker . java to improve visibility into the ciphersuite selection process
refactor templates handling in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve code readability and maintainability by consolidating
added a ` nodeLabelMap ` variable and modified logging messages in ` ImportContainerImpl ` , ` ImportContainerParameters ` , and ` ImportContainer
added a new file R2303044ListSelection . java to test the selection of a list item to demonstrate the functionality of selecting a
[ java ] remove checkkeepalivetimeout from publicationregistration and remove checkkeepalivetimeout
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions during execution
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests . java ` to verify the behavior of compound
refactor row count handling in StatsRulesProcFactory to use a single row count instead of a single list to improve code readability and maintainability
refactor path handling in SpringBootDocBuildTemplate . java for improved readability and efficiency to enhance code readability and maintainability by reducing redundancy
make the logger final so that it can be use by the user .
refactor ` DistBuildSlaveExecutor ` to use ` CachingBuildEngineDelegate ` instead of ` DistBuildCachingEngineDelegate ` to
updated RuntimeException to provide clearer error messages when parsing JSON strings to improve debugging by providing clearer feedback on parsing failures
added a conditional check for DEBUG before logging the log statement in WidgetsModel . java to ensure logging only occurs when DEBUG is enabled for debugging purposes
refactor Console , Scanner , and Scanner classes to improve code organization and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a new test for discountOverlapsBoost in TestSimilarityBase . java to
added reflection checks for the ` send ` method in ` SimpleMailMessageItemWriterTests ` and ` MimeMessageItemWriterTests ` to ensure
added exit and quit properties to Global . java and removed it from ScriptingFunctions . java to streamline exit handling and improve code organization
camel - 14284 : camel - loan - broker - demo demo : fix test failure
rename methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in naming conventions
[ vmware ] use cookiejar instead of cookiestring for vw / vmware web service request context
updated authority assertions in ResinAcegiAuthenticatorTests . java to ensure consistency in authority retrieval logic
updated byteUtil . bigIntegerToBytes method calls to include a new parameter 32 to ensure proper handling of integer values in ECKey operations
updated the property for disabledModList from " fml . disabledMods " to " fml . modStates " in Loader . java to ensure the
refactor ` ReceiveExternalFilesActivity ` to use a dedicated method ` showAccountChooserDialog ` to improve code readability and maintainability by reducing
[ hotfix ] [ runtime ] improve error message when client connect to the client
added a check for empty results in ValidatorContractController and a corresponding test in ValidatorContractControllerTest to ensure that an exception is thrown when unexpected results
updated TexturePackerFileProcessor to handle null settingsFile and added null check for the root file to improve robustness by preventing null pointer exceptions
removed unnecessary null check for data source JNDI in PooledConnection . java to streamline the code by eliminating unnecessary checks
updated TARGET _ MB and WINDOW values from 10 _ 000 to 1 _ 000 and adjusted the TARGET _ MB and
added null checks for currentConsole before writing output to avoid potential NullPointerExceptions when currentConsole is null
[ hotfix ] [ kinesis ] set kpc refresh delay to 100
replaced AlertDialog . Builder with showInfoAlert in SingleUploadFragment . java to improve code readability and maintainability by using a unified dialog display method
updated loop parameters in T4501661 . java to include a pack parameter to enhance functionality by allowing the use of a package in the test
updated Jetty version from 1.9 . 0 _ 60 to 1.9 . 0 _ 31 in multiple test files to ensure compatibility with the latest Jetty features
[ maven - plugin ] add support for opensourcebim and shared dependency in pluginbundlemanager
added a HashSet to manage multiple ZipFileInputStream instances to ensure proper resource management and prevent potential memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to improve code readability and
added methods to run active and idle states in SequenceGeneratorSource . java to ensure proper handling of key ranges during execution
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " in BlobServer . java and BlobServerGetTest .
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java ` to
added support for " ppc64le " architecture in Bits and ByteArrayAccess classes to ensure compatibility with additional architectures
updated the error message in RoboMonitoringInstrumentation . java to include a link to the GitHub for details to provide users with clearer information about the
updated waitWithDeadline method calls to use Long . MAX _ VALUE instead of MINUTES to improve flexibility and maintainability of timeout handling
replaced instances of ` new Date ( ) ` with ` java . time . Instant ` in ` DateUtilTest . java ` to improve performance and
refactor BytesRef class implementation to improve code readability and maintainability
added a Toast message to inform users that YouTube Player does not work on Lollipop yet to inform users that the player does not work on
added validation for unterminated dollar quotes in SQL parsing methods to ensure proper error handling for invalid dollar quotes in SQL statements
add null check for mibrator before accessing primary code to prevent potential NullPointerException when mVibrationDuration is not set
updated table border and cellspacing settings in DotRenderer . java and modified arrowtail assignment logic in DotRenderer . java to improve table rendering accuracy and
added a method to check if the configuration is encoded parens in HiveConf . java and updated SetProcessor . java to use it to improve configuration
pdfbox - 4071 : catch stringindexoutofboundsexception in pdfparser
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future updates
[ wavefront ] add support for uri prefix in wavefrontconfig ( # 3903 )
refactor image loading logic in TimeLineCursorAdapter and NetworkedCacheableImageView to use NetworkedCacheableImageView instead of ImageView to improve performance
removed the ' this ' parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature by eliminating unnecessary parameters
updated controllers version from " gdx : controllers - core " to " gdxControllersVersion " in BuildScriptHelper and DependencyBank classes to
refactored the LaunchedURLClassLoader class implementation to improve code readability and maintainability
added DataAccessUtils imports and modified SQL query logic in DataSourceHealthIndicator . java to ensure proper handling of column count in health indicators
add ` ` no - cache ' ' header to ` ` no - cache ' ' response
updated the warning message format in ZkController . java to use Locale . ENGLISH to ensure consistent message formatting across different locales
added a Analyzer parameter to the SolrQueryParser constructor and modified the constructor to accept a Analyzer parameter to enhance the flexibility of the SolrQuery
updated copyright year from 2014 to 2014 in multiple Java files to ensure compliance with copyright standards and enforce compliance with licensing requirements
removed an unnecessary semicolon in MainTest . java to clean up the code and improve readability
refactor TypeContributions class to improve code organization to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil . java to ensure proper handling of VoidColumnVector instances
bugfix : use req . getName ( ) instead of req . getname ( ) in statementgenerator
removed the isTypeMatch method from AbstractConfig . java to simplify the code and improve readability
[ java ] add sessiondecorator . offer ( ) method that use timestamps instead of timestamps .
rename method ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` in ` XForwardedRemoteAddressResolver ` and related tests
[ manifold ] skip bootstrap insert when there be no bootstrap annotation in manifold api
hbase - 24186 use tabledescriptorbuilder instead of tabledescriptorbuilder . getvalue ( ) in tabledescriptorchecker
updated variable names from ` maxCommits ` to ` requestedCommits ` in ` BranchGraphServlet . java ` to improve clarity and consistency in
added InvocationTargetException to main method signatures in bug6794831 . java to ensure proper handling of InvocationTargetException during execution
added a new constant ` BUILD _ ID ` and updated metadata handling in ` CachingBuildEngine ` , ` CachingBuildEngine ` ,
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed redundant call to markAsDone in HttpProtocol . java to streamline the code by eliminating unnecessary duplication
added TezConfiguration import and modified copyInto method call in TezConfigurationFactory . java to utilize the default TezConfiguration to enhance configuration management
added a null check for keyPurposes before checking for keyPurposes to prevent potential NullPointerExceptions when keyPurposes is null
removed the conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to simplify the code for better readability and maintainability
added a ` forget ` method to ` OpenALAudio ` and implemented a ` forget ` method in ` OpenALSound ` to improve sound management
add a deprecation warning to the simplebaseplayer # invalidatestate and otheroperation # invalidatestate
added DecimalFormat instances for number axis units in NumberAxis . java to improve readability and maintainability of the code
refactor ` TargetsCommand ` and ` AbstractTargetGraphAndBuildTargets ` to use ` Builder ( false ) ` instead of ` builder (
removed the IndexFileNameFilter class and updated its usage in IndexFileDeleter , IndexWriter , and TestIndexWriter classes to streamline the code
add the ability to check the collision bounding box for ladders instead of the texture stitcher .
added a compression level parameter to the ApkBuilder and SignedJarBuilder classes to allow customizable compression levels during jar creation
added a new test method ` shouldIncludeStaticFields ` to ` MirrorTest . java ` to verify that static fields are included in the class path
added support for BYTES data type in MetricFieldSpec , MetricFieldSpec , SingleValueIterator , SingleValueSet , and SingleValueSet classes
updated error message formatting from " Multiple Failures " to " EOL " across multiple test files to improve readability and consistency of error messages
replaced ` hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and ` KucoinDealOrder
added caching and caching functionality to SpringDataJPAJoinFetchPaginationTest , ForumService , and SpringDataJPAJoinFetchPaginationConfiguration classes to
update pronunciation model to use locale prefix instead of german . german . pronunciation .
updated FormBody . Builder initialization and added null post body handling in SimpleHttp . java and TestHttpPlugin . java to improve code clarity and ensure
added a Dispatcher to the ClientSideSlb class and a test for shutdownNow ( ) in ClientSideSlbTest to ensure proper shutdown of the
added conditional logic to set the V2 based on the flipY state of the texture to ensure proper rendering based on the texture ' s flipy
improve error message when there be unknown property in discovery strategy
changed the contextPath variable from ` final ` to ` NA ` and added a null check for ` contextPath ` to ensure a default value of
[ drools - 4071 ] fix a bug where the class loader can not be load from the classpath .
added a new constant B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and initialized it in SerializationHeader . java to
added precompiled header handling and validation in AppleDescriptions . java and AbstractCxxSourceRuleFactory . java to ensure proper handling of precompiled
replaced WeakReference with AccWeakReference for improved security handling in ImageWatched . java to enhance security by using privileged actions for image updates
changed access modifier of findNextIndex method from package - private to private in ObjectMap , ObjectSet , and OrderedMap classes to improve en
changed the initialization of isDirect from true to false in VertexBufferObject . java to correct the logic for determining if the buffer is direct
[ java ] do n ' t throw an exception if the effect name be not find in the map .
changed return type of localToAscendantCoordinates methods from void to Vector2 in Actor and Group classes to enable method chaining for better
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( )
added a null check before removing the close hook in VertxImpl . java to prevent potential NullPointerException when the context is not initialized
updated border spacing calculations in CellLayout and DeviceProfile classes to use folderCellLayoutBorderSpacingPx instead of folderCellLayoutBorderSpacingPx
replaced NumberFormat . parse with a new ValueNumeric class for parsing numeric values to improve code readability and maintainability by reducing redundancy
added a condition to check if the response is not deferred before adding paths to the login or error page to ensure that the login or error page is
updated command - line arguments from " -- module - ini = " to " -- add - to - startd " in StartArgs . java
added a default partition value for dynamic partition values in DynamicPartitionFileRecordWriterContainer . java to ensure a default value is used when the configuration is
[ hotfix ] [ runtime ] add null check for operatorfactory in batchexecutionutils
updated the return statement in DefaultArtifact . java to use hasClassifier ( ) instead of hasClassifier ( ) for clarity to improve code readability and
camel - 16537 : camel - kafka - add a test to verify that the consumer be subscribe twice .
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to improve user feedback for missing dependencies in the classpath
updated plugin property from GMAIL _ NOTIFICATIONS _ ENABLED to ENABLE _ GMAIL _ NOTIFICATIONS in JabberAccountRegistration
refactor CryptoKey and CryptoKeyOrBuilder classes to improve code readability and maintainability
updated the expected message count in LumberjackMultiThreadTest from 5 to 25 * concurrencyLevel and adjusted the expected message count to improve test reliability
added a condition to check if the player is not dead before proceeding with health checks to ensure proper handling of dead players in the game ' s
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
api : updateuser api : add api key and secret key to user api command
replaced switch - case statements with conditional checks for MfaProviderType . GOOGLE _ AUTHENTICATOR and GOOGLE _ 
refactor AbstractMetaDataExportMojo to improve code organization to enhance maintainability and readability of the code
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to provide clearer feedback on table drop failures related to materialized views
updated the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency in property naming conventions
added a new file RoboExecutorService . java that extends RoboExecutorService to mark the class as deprecated to indicate that the class is outdated and should
added a condition to check if the group is a root before adding groups to the menu to ensure that only the root group is added to the menu
updated method names from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` in ` BraveClientExecutionInterceptor . java ` to
updated test cases in TestDynamicNumberOfGCThreads . java to include additional arguments for dynamic garbage collection threads to ensure proper execution of the process with dynamic
changed the data type of ` getHostFlavorMap ` and ` getAllPossibleHostFlavors ` methods from ` ImmutableMap < String , ImmutableFlavor > `
updated parameter handling in CreateTable and CreateTableDeParser to use PlainSelect instead of PlainSelect for SQL creation to ensure proper formatting of SQL parameters
added alpha setting for the chat background in ChatViewerFragment to enhance the visual appearance of the chat background in the UI
test : migrate ctiteratortest to junit 5 ( # 4447 )
added clear ( ) method calls in CharTokenizer , KeywordTokenizer , KeywordTokenizer , KeywordTokenizer , KeywordTokenizer , TokenStream , and StandardTokenizer classes
add a new test class ` ASTInitializerTest ` for testing the ` ASTInitializer ` functionality to ensure that the ` ASTInitializer ` class behaves
replaced ` Enum < S extends Enum < E > ` with ` StateMachineConfigurerAdapter ` in multiple configuration classes to improve error handling and provide clear
[ java ] remove link check from seleniumseleniumtestcase
updated the StringConverter to use setMaximumFractionDigits instead of setMinimumFractionDigits and added a new test for float conversion in StringConverterTest to ensure proper handling of
[ alexeibarantsev ] remove unnecessary code in aggregatelifecycle . getcurrentscope
updated touchable insets in TaskbarDragLayerController to use TOUCHABLE _ INSETS _ REGION instead of TOUCHABLE
removed conditional check for ' ~ ' in FencedCodeBlockParser . java to simplify code logic by eliminating unnecessary checks
added support for socket timeout configuration in multiple classes to enhance flexibility in socket management by allowing configurable timeout values
added a sleep mechanism to wait for the exception to complete before proceeding with tests to ensure proper handling of interrupted exceptions during execution
updated the try - with - resources statement to use UTF - 8 encoding to ensure proper handling of character encoding in the input stream
refactor List class methods for improved performance to enhance performance and maintainability of the code
added constructors and updated context handling in AsyncFileImpl and created a new test class AsyncFileImplTest to improve code clarity and ensure proper error
added @ API annotation to CucumberEngineExecutionContext and modified CucumberTestEngine to be package - private to enhance encapsulation and
cloudstack - 10225 : fix nullpointerexception in nuagevspmanagerimpl when hostid be null
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic in ` FileUploader ` and ` FileUpload
refactor ConstantPoolTagTests to use dynamic Java version checks instead of hardcoded values to simplify code and improve readability by eliminating unnecessary methods
improve error message when recompile with - xlint
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 64815
replaced ` Vector ` with ` List < String > ` and updated related methods to use ` v ` instead of ` v ` to improve performance and
updated the DEFAULT _ GRID _ COLUMN from 4.0 f to 3f in AppPreferencesImpl . java to align the layout with the
[ hotfix ] [ table - planner - blink ] do n ' t create table if view creation be enable .
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 13939 - fix test
added a try - catch block around the method call in GraphPrinter . java to handle potential exceptions during object conversion to improve robustness by preventing runtime
updated the driver from IE to FIREFOX and modified the method used in SingleTestSuite . java to ensure compatibility with FIREFO
updated byteOffset calculation in ByteBlockPool . java and added a new test forTooManyAllocs in TestByteBlockPool . java to ensure proper
make the feature vector encoder non - static , so it do n ' t need to be static
added exception handling for the stoppedLatch in TcpTransport . java to improve robustness by ensuring the latch is released when unexpected errors occur
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serial warnings related to serialization
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` and ` OcamlDebugLauncher
add more information to the user about how to return to the main window .
added response type validation and validation in OAuth20DeviceCodeResponseTypeRequestValidator , OAuth20AccessTokenEndpointController , and NexmoSmsSender to
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to set the index to 1 to ensure proper
added input format class parameters to the ` initTableMapperJob ` method in ` TableMapReduceUtil ` to enhance flexibility by allowing different input formats
removed redundant appending of testClasspathElements in AbstractJRubyMojo . java to streamline code by eliminating unnecessary duplication
[ gr - 26464 ] throw an exception if the language be not find or access to internal language
added deprecation check for the reserve commit duration in ReplicationHandler to ensure that the master is mutually exclusive to prevent conflicts with Solr 7.0
rename ` cacheVariableName ` to ` cacheForeignKey ` and update related variable names from ` cacheVariableName ` to ` cacheForeignKey ` to improve
changed the data type of ` generateECKeyPair ` and ` generateECKeyPair ` methods from ` long [ ] ` to ` Object [ ] `
[ hotfix ] [ runtime ] add suspend ( throwable cause ) method to statewithexecutiongraph
replaced instances of ` INSTANCE . get ( context ) ` with ` new RotationTouchHelper ( context ) ` in ` RecentsAnimationDeviceState
refactor UniFiControllerCache to use lambda expressions instead of lambda expressions to improve code readability and maintainability
updated method names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in naming convention
[ hotfix ] [ table - common ] add more logging for old offer in the list
use constant instead of hardcoded ` ` tls ' '
updated MockitoMethodInvocationControl , MockitoMethodInvocationControl , SystemClassUserTest , System . nanoTime ( ) , and System . nanoTime ( ) methods to use
replaced instances of ` DatabaseObject ` with ` this ` in ` NotLoadedException ` constructors across multiple files to simplify exception handling by using the
removed import of DisplayUtils from FileDisplayActivity . java to streamline code by eliminating unnecessary imports
added exception handling for wal file management in StoreDirect and StoreWAL classes to ensure proper resource management and prevent memory leaks
added screenshot task execution in AbsSwipeUpHandler . java and modified the stopSwipePipToHome method calls in SystemUiProxy . java to
added a ` hidden ` boolean field and its getter / setter methods in ` CommandArgumentDefinition ` and its implementation in ` LiquibaseCommandLine `
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct port
[ geos - 6547 ] use parsedsld instead of parsedsld ( ) in styleinfo .
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by ignoring malicious intents
added ` getId ( ) ` and ` id ( ) ` methods to ` TideMapTile ` , ` TiledMapTile ` , and
refactor Manager class to improve code organization to enhance maintainability and readability of the code
updated JDBCExample and SessionExample to include version = V _ 0 _ 13 to ensure compatibility with new features and improvements
added a new property ` includeSchema ` and updated ` DiffOutputControl ` initialization to include schemas and modified the ` doGenerateChangeLog `
replaced ` putIfAbsent ` with ` put ` in ` JmxRegistry . java ` to ensure consistency in cache entry handling
[ hotfix ] [ benchmark ] use logger instead of logger . error in plannerbenchmarkrunner
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to allow the method to be
bugfix : remove unused property in fileselectorfragment
refactor FastCGIProxyServletTest to include new test methods for response content and content to improve test coverage and ensure proper handling of response content
added a service start for ReadInteractionsService in MarkReadService . java to enable users to access read interactions in the application
added a conditional check for lintClassfile before logging warnings in ClassReader . java to ensure warnings are only logged when the class file is present
added a configuration option to set the smtp server port to 25 if it is not set to " 25 " to ensure a default port is provided for
added retry policies for SSL factory reloading attempts in TlsUtils . java to improve stability and error handling during SSL factory reloads
updated the date format from " HH : mm : ss ' ' to " HH : mm : ss ' ' in ObjectMapperProvider . java
corrected a typo in the error message in SpyingOnRealObjectsTest . java to improve clarity of the error message for better debugging
added functionality to check if the line ends on theNL in InlineBoxing and LineBox classes to ensure proper handling of line endings based on
updated the initialization of filePathString to handle null paths more gracefully to improve robustness by avoiding potential NullPointerExceptions
removed unused import of DocCollection from TopicStream . java to clean up the code and improve maintainability
refactor NinjaServletContextTest to simplify input stream creation and add a new test for Windows 1250 parameters to improve code readability and ensure
added properties for the " management . endpoints . web . exposure . include = * " property in AbstractCasEndpointTests . java to enhance configuration flexibility
added a validation check for the current graph in StatisticsControllerImpl . java to ensure that the current graph is a dynamic graph to prevent runtime errors
add support for @ eagerinitfactory ( type = ' ' type ' , method ' ' )
add support for suppressexceptions in jsonpath expression
removed redundant call to create ( _ helixManager ) in HelixServerStarter . java to streamline the code and improve readability by
updated usage messages from CLHSDB and HSDB to clhsdb and HSDB in CLHSDB and HSDB to
refactor ` configureChunkProvider ` method implementations in ` FaultTolerantStepFactoryBean ` and ` SimpleStepFactoryBean ` to
[ beam - 10265 ] remove deprecate ` write ` class from flink - sdk
replaced instances of ` getAccessibilityManager ( ) ` with ` getAccessibilityManagerInstance ( ) ` in ` ShadowAccessibilityManagerTest . java ` to
add group usage statistics to usage statistic ( # 10225 )
removed the ` SourcePathResolver ` parameter from the ` JavaSourceJar ` and ` JavaSourceJar ` classes to simplify the code by eliminating unnecessary
refactor enum data type handling in PostgreSQLDatabaseConnector and add PostgreSQLEnumDataTypeHelper class to improve code readability and
updated the path comparison in LogFileTests from " logpath / spring . log " to " logpath / File . separatorChar " to ensure
replace instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to accurately reflect the purpose
added exception handling for unsupported index tables in HiveMetaStoreClient . java to improve error handling and provide clearer feedback on unsupported index tables
added a condition to update disabled flags when visibility is not visible in RecentsView . java to ensure proper UI behavior when visibility is not visible
added a conditional highlighter to set a specific highlighter based on the operating system to ensure proper highlighting behavior for non - Windows environments
add a new method ` addOptionalLocalVariable ` to ` BugInstance ` and update its usage in ` CrossSiteScripting ` and ` CrossSite
[ hotfix ] [ hadoop ] use string . touri ( ) instead of rawpath ( ) . touri ( ) . touri (
corrected a syntax error in the removeCaptureListener method call to improve code readability and maintain consistency
changed the default value of _ metaDataComplete from true to false in MetaData . java to disable metadata completion for improved performance
refactor ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` for thread - safe task removal to
added environment variable handling in JsBundleGenrule and corresponding tests in JsBundleGenruleTest to ensure proper handling of release flavors in
updated type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` with a test for
added unit tests for newline handling in the AddImportTest class to ensure proper formatting of newlines in the import statements
added hubMode property to AbstractLiquibaseChangeLogMojo and set it in AbstractLiquibaseMojo to enable configuration of Hub configuration for better
removed unnecessary null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify code and improve readability
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to improve robustness by
refactor setIndexerThreadPoolMethod initialization to use reflection for reflection to improve code readability and reduce boilerplate
updated the address format in GameCanvasImplementation . java from " sms : / / " to " sms : / / " to simplify the address format
refactor MapJobExecutionDao to utilize SerializationUtils for serialization and deserialization to improve code readability and maintainability by encapsulating the copy
added a new file DownloadTest . java to test SpriteBatch and SpriteBatch uploads to ensure that the SpriteBatch and Sprite
[ java ] remove unnecessary normalization of language code in track selector .
updated exception handling in GenericUDFRound . java to use UDFArgumentTypeException instead of PrimitiveObjectInspector to improve clarity and consistency in error
added null check for selectedVersion before accessing the version tag in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple matchers for various AntPathMatchers in SecurityConfig . java to enhance security by allowing more flexible request matching
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
refactored bean definition writer creation and constructor handling in BeanDefinitionInjectProcessor . java to improve robustness by avoiding potential ClassCastExceptions
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ hotfix ] [ openwebnet ] fix a bug in openwebnet energy handler and thermoregulationhandler .
[ java ] remove unnecessary check for socketstatus . open and socketstatus . timeout
deleted the SunToolkitSubclass . java file to the class is no longer needed for the current implementation
refactor translation logic in DefaultRenderableSorter and add a method to check for rotation or scaling in Matrix4 to improve code clarity and maintainability by
added a new test method ` registerWrapperHandlerBeforePrimitive ` to ` TypeHandlerRegistryTest ` and modified import statements in ` TypeHandlerRegistryTest
pdfbox - 4071 : add torgbimage2 ( ) method to make sure we do n ' t need it
updated wikimedia URLs to use BuildConfig . WIKI_ API _ HOST instead of hardcoded URLs to improve maintainability
camel - 16297 : camel - health - add health check to camel - main
added a null check for the position before accessing the block state to avoid potential NullPointerExceptions when accessing the block state
added a new test method ` testAlterTableWithViewsExtendPk ` in ` AlterTableWithViewsIT . java ` to verify the functionality
[ hotfix ] [ table - common ] fix bug in testfunctionquery . testfunctionquery ( )
removed the DrillMongoConstants . ID field from MongoRecordReader to clean up unused fields
added disconnect ( ) method implementations in YeelightHandlerBase and DeviceBase classes , and modified connection state handling in WifiConnection to improve
added auto _ increment = 3 charset support to table creation
fix a bug in sharedretrievalindexinvocatorfactory that cause the test to fail
cloudstack - 10297 : fix npe in templatemanagerimpl . savedetails ( ) when uservm be null
updated ` ShadowBitmapFactory ` to use ` RobolectricBufferedImage ` instead of ` InputStream ` and modified the ` initColorArray `
removed deprecated constants from LauncherProvider and LauncherSettings classes to clean up the code and improve maintainability
( chore ) camel - jbang - add example / rules / broker / data / org / drools / examples / broker / rules
added ` legendTop ` and ` legendBottom ` variables to ` PieChart . java ` and updated the calculation for ` mOffsetTop ` to
added a condition to return early if the world transform is not zero to prevent unnecessary processing when the world transform is zero
added a new file MaryScriptCreator . java for database selection functionality to provide functionality for generating database selection files in a specified directory
added a flowFile attribute for remote source host in ListenHTTPServlet . java to ensure proper handling of remote source host in the HTTP servlet
[ hotfix ] close the compaction log file in levelcompactiontsfilemanagement . java
componentdescription : remove ` xlink : href ` attribute from license element
camel - 15836 - camel - aws2 - s3 : use a constant for the timeout checker in the aws2s3 stream upload
hbase - 26286 addendum add log for cluster shutdown state
updated log message formatting and added null checks in Slf4jSpanLogger and DefaultTracer classes to improve code readability and prevent potential NullPointerException
added a trim ( ) method call to the addActiveOption method in Main . java to ensure that the active option is only added when necessary
added depth preference handling in DepthController . java to enable depth animation based on user preferences
updated the assertion in OverseerTest . java to check the success count of the overseer to ensure accurate tracking of success counts in the oversee
refactor kernel version handling in LinuxFileStore . java to simplify code and improve readability
refactor ExecConstants class to improve code organization to enhance maintainability and readability of the code
removed the ScreenRecordRule import and annotation from ThemeIconsTest . java to clean up the code and improve maintainability
added a method to set the scan attribute for paging in TableSnapshotResultIterator and ScanUtil to enhance functionality by allowing paging functionality within the ScanUtil
added a conditional check for ` lowRange ` in ` Request . java ` and ` RequestV2 . java ` to ensure that ` lowRange
changed access modifiers of keySizeEstimator and valueEstimator from private to protected in AbstractCachedSource . java and updated cache size calculation in AsyncWriteCache
api : fix zoneid not be set when create a host
set content - type to application _ json _ utf8 _ value instead of application / json in livy interpreter
removed conditional check for zfs in ZipFileSystemProvider . java to streamline filesystem removal process by eliminating unnecessary checks
remove tojson ( ) method from httprequestbuilder . tojson ( )
updated the polling duration from 2 seconds to 5 seconds in SoftAutoCommitTest . java to improve test accuracy by allowing more time for hard commits
[ selenide ] fix exception in selenidelogger when call listener . before / after each listener .
refactor multiple Dial classes for consistency and clarity to improve code maintainability and readability
corrected formatting of error messages in SyncQueue . java to improve code readability and maintain consistency
updated the ryuk container version from 0.1 . 0 to 0.1 . 1 in RyukContainer . java to ensure compatibility with the latest features
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook ` and added a new ` Test
[ mojang ] remove unnecessary file . exists ( ) call in fmlclientlaunchprovider
[ hotfix ] [ yarn ] remove yarnclient from yarnitcase
add statistics of no data included map to localmapstatsprovider .
deleted the AllTests . java file to the test class is no longer needed for testing purposes
added constants for UNICODECHAR constants in AbstractWordConverter . java to handle non - breaking characters to improve character handling for better user experience
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations do not star
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java ` to
added a new boolean variable ` eventHandled ` to ` UIText . java ` to enable event handling in the UIText class
deleted the Controller . java file and renamed ` Weldby . java ` to ` WeldModule . java ` and ` WeldbyModule
ruby flavor : do n ' t use ruby flavor in nfa traversal
added a protected String liquibaseProLicenseKey and removed the logging statement from the AbstractLiquibaseMojo class to streamline the code by eliminating unnecessary
[ hotfix ] [ core ] fix npe in rolapcube . getmeasureshierarchymemberreader ( )
add ` ` - g ' ' option to generate debug info value
[ hotfix ] [ runtime ] fix typo in mondrianproperties javadoc
added support for retrieving friend paths in Kotlin library and library descriptions to enhance flexibility in handling different source paths in the Kotlin library
added aliases for BATK , BATAK , BRAHMI , and MANDAIC in Character . java and modified the main method
updated comparison logic in ExecutionCommand and added a new method in StageUtils for string - to - execution commands to improve code readability and maintainability
refactor Mockito class methods for improved readability to enhance maintainability and facilitate future updates
refactor OCFile class to improve code organization to enhance maintainability and readability of the code
added a ` toString ( ) ` method to the ` SystemScope ` class to provide a string representation of the ` SystemScope ` class
refactor logic in CSSParser to improve handling of numeric and PERCENTAGE values to enhance error handling and provide clearer error messages for invalid
added a new test method ` testLocalIndexReverseScan ` to verify the behavior of local index reverse scans to ensure correct functionality of local index
updated imports and method names from InstrumentationRegistry to ApplicationProvider in BaseAndroidTestCase . java and BackupHelperTest . java to improve clarity and consistency
updated messages in ItemListActivity , LiveTvGuideActivity , MediaManager , and MediaManager to use string resources instead of string concatenations to
removed unnecessary condition checks in RendererUtilities . java and added a new test method in RendererUtilitiesTests . java to improve code readability and ensure correct
refactor KrakenStreamingAdapters to use ArrayNode instead of Iterator for askIterator and bidList to improve code readability and maintainability by
added error handling for adding same column twice in FileContentProvider . java to improve robustness by logging a known problem when upgrading from 24 -
removed the print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor and updated data size calculations in ConvertJoinMapJoin . java to improve performance and accuracy of data size computations
updated the ` buildView ` method to accept a ` Context ` parameter and modified the ` buildView ` method signature to use ` TypedArray `
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests `
vpc : do n ' t set vpcid if vpcid be null
[ flink - 10955 ] [ test ] disable flinksavepointtest due to flaky test
updated access modifiers from private to private in multiple classes to improve code readability and maintain consistency across the codebase
modified loop condition in Actor . java to use the size of actions instead of a variable to improve readability and maintainability of the code
replaced ` BaseExchange ` with ` BitmexExchange ` in the ` BitmexStreamingExchange ` class to align with the new package structure
[ ds - 4071 ] add test case for relationshipvirtualmetadata in relationshiprestrepositoryit
added null check for spatial before accessing numTris in LodControl . java to prevent potential NullPointerException when spatial is null
updated ` ConditionalTokenFilter ` and ` FixedShingleFilter ` to set lastTokenFiltered to true in ` ConditionalTokenFilter ` and ` Fixed
do n ' t use graph . unique ( ) in unsafestorenode . setstateafter ( )
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to ensure
added a assertion to verify that casEventRepository . load ( ) . findAny ( ) . findAny ( ) . findAny ( ) .
removed unused parameters from AuthenticationAttrProcessor and AuthenticationAttrProcessor classes to streamline code by eliminating unnecessary parameters
added null key validation in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that the specified key is
added a method to set the Typeface in the CodenameOneTextPaint class to ensure typeface is not set in runtime to prevent runtime errors
added ` open ` method implementations for ` AzurePinotFS ` , ` LocalPinotFS ` , ` HadoopPinotFS `
[ java ] remove deprecate ` fail ( string ) ` method from webdriverrunner
removed unnecessary check for item size in SolrRequestParsers . java to simplify the logic for better readability and maintainability
refactor DefaultResultSetHandler to use constructor mappings instead of result objects to improve code readability and maintainability by eliminating unnecessary ' final ' references
updated SQL statement format in CreateTableGeneratorTest . java to include quotes to ensure compatibility with SQL syntax requirements
added filter mode handling in VectorizationContext . java and modified return statements in VectorizationContext . java to improve handling of filter expressions based on mode
[ hotfix ] [ config ] fix type inference for moveselectorconfig
replaced the instantiation of ReorganizeTableStatement with modifyDataTypeStatement to simplify the code by eliminating unnecessary object creation
updated cluster name configuration to use constants instead of hardcoded values to improve code readability and maintainability by using constants instead of hardcoded
updated logging messages in PeerGroup and PeerGroup classes to include additional context and improved error handling to enhance debugging capabilities by providing more context about connection issues
added conditional style assignment based on the number of style strings in Nano . java to ensure correct style assignment based on the number of styles available
use adventuretconverter for fixer . fixup ( ) and fixer . fixup ( )
updated the return statement in NoToStringOnStringType . java from " Use ` String ` to " No # toString ( ) on String " to
updated memory limits from " - Xmx64m " to " - Xmx32m " in TestThreadFailure . java to ensure compatibility with
updated retry methods to use FailureContext instead of int in Invoker and TestMethodWithDataProviderMethodWorker , and added a new DataProviderRetryAnalyzer to
updated return value from ` tokens [ 0 ] ` to ` tokens [ bandwidth ] ` in ` BucketStateIEEE754 . java ` to
[ java ] add methods for selecting and deselecting pop - up to the WebDriverBackedSelenium class
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and updated the signature in ` Resources . java ` to streamline the
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added checks for dialog opacity , background color , and shape parameters in Dialog . java and Frame . java to ensure that the dialog ' s background color
changed the ` state ` variable from ` private final ` to ` private final ` in ` DefaultProjectFilesystem . java ` to enforce immutability
refactor RedisObjectFactory to utilize sentinelConfiguration for setting passwords and standalone configurations to improve configuration handling for Redis connections
add a property to track the last seen delayed message in the jabber chat room
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify code and
refactor share creation logic in FileOperationsHelper and OperationsService to use Intent for better organization to improve code readability and maintainability by centralizing
removed unnecessary dependency on ` isInjected ` in ` BeanDefinitionInjectProcessor . java ` and added dependency injection in ` FieldPropertyInject . java ` to
updated loop conditions in ClassicPlotManager . java to use a variable ` yStart ` instead of ` getMinBuildHeight ( ) ` to ensure correct
[ mack ] fix npe in smackintegrationtest
[ tiff ] add support for interop subdirectory in exifreader . readdirectory ( )
added support for the ENABLED _ LS mode in VersionedTargetGraphCache and updated the executor assignment logic in VersionedTargetGraphCache to
added a check for video format in the parserV2 condition to ensure that only valid video formats are processed
refactor AutoMlClient and AutoMlClient classes to improve code organization and maintainability
make lwjglnativesloader . load ( ) return false if jnlp . librarypath be set to false
added a new constant ` ESCAPE ` and modified ` CSVStrategy ` initialization to include ` escape ` parameter to enhance flexibility in CSV parsing by allowing
added validation for AUTHORIZATION _ CODE in ClientRegistrations . java and updated test cases in ClientRegistrationsTests . java to improve
improve error message when self - suppresion fail
added query and assertions for count ( * ) in DerivedTableIT . java and updated OrderedResultIterator instantiation in ClientAggregatePlan . java
added support for retrieving the RSquare value from regression in RegressionEvaluator and StreamExpressionTest to ensure correct handling of the RSquare value in the
added handling for request header names in ThreadContextMDCServletFilter . java to ensure proper context attributes are added when available
refactor code to remove unnecessary type casting for MapWork instances to improve code readability and maintainability by reducing unnecessary type casting
refactor image retrieval logic in PDFJndiReport and PdfSessionInformationsReport classes to improve code readability and maintainability by encap
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver to use Duration . ZERO instead of Long . MAX _ VALUE to improve performance and ensure
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test for
added a ` isMethod ` parameter to the ` Function ` constructor and updated related assertions in ` CxxMethodsTest ` and ` CxxMethods
removed redundant sleep calls in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating unnecessary delays
added a new file ` KernCrash . java ` to implement font rendering functionality to demonstrate and demonstrate the use of Kerning Crash in the
added fail ( ) method to LinkedHashTreeMapTest . java to ensure proper failure handling during testing
added a method ` getInterfaceAddresses ` to retrieve IP addresses based on network interface prefix to enhance network interface management by allowing users to specify IP addresses
[ hikari ] do n ' t cancel the housekeeper task after shutdown .
changed the method call from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to ensure
refactor assertions in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` for testing the ` Map ` functionality to ensure correct behavior of the ` newTreeMap `
changed the type of ` results ` from ` CategoryItem ` to ` String ` in ` CategorizationFragment . java ` to improve type safety
added validation for todayLeapYear in ValidatorTest . java to ensure correct validation of date validity based on the current year
added error code lookups for alarm codes in GrblController . java to improve error handling by providing more informative error messages
added a conditional check for the number of screens in the scroll format to ensure the scroll format is only displayed when no screens are available
removed the ` count ` parameter from the ` getTrades ` method in multiple classes to simplify the method signature by eliminating unnecessary parameters
updated ConsoleReader to return an empty string instead of an empty string and modified the flush ( ) logic in MemoryHistory to improve error handling and ensure
removed the " . jdk " suffix from the path construction in JavaBuild . java to simplify the path construction by removing unnecessary string concatenation
replaced ` getDescription ( ) . getBuildRuleType ( ) . getBuildRuleType ( ) . getBuildRuleType ( ) ` with `
updated JFCModel constructor to accept a Consumer < String > instead of a String to enhance logging capabilities by allowing custom logging of warnings
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is non - negative to prevent runtime errors
added methods to create and drop views in TestUtil . java and a corresponding test in DatabaseMetaDataTest . java to improve view management functionality and ensure
added support for stable float and double tests in NaNTest . java to ensure tests are only executed on unsupported platforms and improve error handling
added a new file DesktopTaskbarUIController . java to implement desktop taskbar UI controller functionality in the taskbar
add task count listener to select and apply button state to moditemadapter
refactor file handling methods in Files . java to improve code readability and maintainability
refactor AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to use Collection instead of Set to improve code readability and maintainability by
removed the @ FunctionalInterface annotation from DomainAwareServicesManager and ChainingServicesManager classes to simplify the interface structure and improve code readability
[ hotfix ] [ runtime ] add debug log for resource pack file generation
chore : update gapic - generator - java version to 2.1 . 0 ( # 33 )
added multiple grow methods to the Cell class to provide access to cell properties for improved usability
refactor bindings handling in DefaultInputHandler to use generics instead of StringTokenizer to improve code readability and reduce boilerplate
added try - catch block to handle potential exceptions in ActiveMQTestCase . java to improve robustness by handling potential exceptions during message processing
replaced long array with byte array in MetricsMemoryTester . java and added memory failure check in TestDockerMemoryMetrics . java to improve memory management and
deleted the JobParametersPrototype . java file to remove unused code to streamline the codebase
added a securityEnabled parameter to the MappingsTable class and updated related classes to include it to enhance security management during data connection operations
updated the case from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ EXPORTED _
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable the drag - to - file
updated the ` codecNeedsEosPropagationWorkaround ` method to accept ` MediaCodecInfo ` instead of ` String ` to enhance compatibility with
[ java ] use logbufferdescriptor . isConnected ( ) instead of logbufferdescriptor . isConnected ( )
added a condition to check if the output options are not null to ensure proper handling of cases where no output options are provided
[ java ] use ssl = 443 instead of ssl = false when use ssl .
added DOMOutputOptions import and modified the buildDOMSubtree method call to include additional output options to enhance the DOM building process by allowing customization of
refactor assertions in Assert . java to improve code readability and maintainability
added a new boolean parameter ` retained ` to the ` Event ` constructor and updated related methods to include a new ` topic ` parameter to enhance the
updated test cases in TestResultSummary . java and EventSerializationTest . java to include testCaseName to ensure correct handling of test cases in serialization
[ flink - 24335 ] [ table - planner - blink ] fix typo in sqlgroupedwindowfunction
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java `
refactor SSL timeout handling in AbstractSessionContext to use a locking mechanism for thread safety to improve thread safety and prevent potential race conditions during timeout
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` AppModule . java ` and refactored ` Watcher
[ calcite - 1076 ] fix sqlnodeconvertcontext to use ansisqldialect instead of calcitesqldialect
change log level from debug to trace in FirmwareUpdateService . java to improve logging granularity for better debugging
added unit tests for handling null and timestamp values in GetObjectTest . java to ensure correct functionality of SQL query handling for null values and timestamps
updated string formatting in StringSubject , Subject , and RelabeledSubjectsTest classes to improve readability and maintainability of the code
added unit tests for repository permissions and team permissions in UserModelTest . java to ensure correct permission handling for multiple teams in the team
added a new Java file ` Test7088020 . java ` that tests MethodHandles . invokeExact with a static method handle to validate method
refactor the audience restriction validation logic in Saml2ResponseValidator to use a set of audience URIs instead of a single match method to improve
refactor ` afterAppAuthChangedListener ` methods in ` AbstractDataChangedListener ` and ` HttpLongPollingDataChangedListener ` classes to improve
replaced direct calls to ` _ stderr . println ( ) ` with ` _ stderr ` and ` _ stderr ` in ` StdErrLog . java
added a new constant ` SEPARATION _ ORDER ` to the ` Warning ` class and modified the logic in ` BasicEventSimulationEngine ` to
updated the query optimization method from offlineTableConfig to realtimeTableConfig in BaseBrokerRequestHandler . java to ensure the query optimization uses the correct real
added configuration for hostMinuteAggregrateSql in PhoenixHBaseAccessor and updated UpgradeCatalog240 to disable HBase normalization based on configuration
refactor SavepointV2 and FileStateHandle classes to improve code readability and maintainability
added functionality to set and get BluetoothClass in ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of Bluetooth functionality in the
renamed the method ` contains ` to ` containsProfile ` in multiple classes to improve clarity and consistency in naming conventions
added null or empty list checks in SumFunction . java and updated error message in FEELFunctionsTest . java to improve error handling by providing
updated method call from graphModel . getGraph ( ) . readUnlockAll ( ) . readUnlockAll ( ) to graph . readUnlockAll
updated coreNodeName construction to use getCoreName ( ) instead of getCoreName ( ) to ensure the correct coreNodeName is used for
add backpressure . updatableobject to chatactivity . updatechat ( )
updated TaggerParserPosTagCompatibilityITest . java with new test cases to improve test coverage and ensure compatibility with new features
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress codecs for
updated tag validation logic in mmm Types . java and added a new class T7005671 . java with various test cases in ppp T70056
updated the calculation of superTriangle in DelaunayTriangulator and added a seed in DelaunayTriangulatorTest
refactor multiple Java classes for consistency and clarity to improve code readability and maintainability by standardizing class implementations
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability by using builder pattern
refactor state handling in StackOverflowCheckImpl . java to improve clarity and maintainability of state management logic
added ShadowSQLiteDatabase and ShadowContentValues classes to ShadowSQLiteDatabase , ShadowSQLiteDatabase , and ShadowContentValues classes , and removed
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglGraphics ` and added a new method `
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` in ` BKDWriter . java ` to improve code readability and
added default locale and category properties to the Locale class to ensure proper initialization of default locale and display locale based on the script and category properties
replace ` mIconCurrentTextAlpha ` with ` mIconLastSetTextAlpha ` in ` PredictionRowView . java ` to ensure the
corrected a typo in the warning message from " Confimap PropertySources does not match " to " ConfigMap PropertySources does not match
replaced ` LoginMockMvcTests ` with ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` in ` DefaultConfigurationTestSuite . java
trim whitespace from MIME types and excluded paths in GzipFilter . java and GzipFilterDefaultTest . java to ensure leading and trailing whitespace are
corrected a syntax error in the outputType assignment to improve code readability and maintain consistency
updated the default value of the " nashorn . regexp . impl " property from JDK to JONI to ensure compatibility with the
replaced Handler with FutureTask and updated task handling in ViewCapture . java to improve thread safety and performance by using a more efficient execution mechanism
add support for ` ` style ' ' and ` ` / styles ' ' in featureprocessors . getstyles ( )
added a check to ensure the parent directory exists before creating a GitBlit file to prevent errors when attempting to create a non - existent folder
updated the bind IP setting from " 0.0 . 0 " to " 127.0 . 1 " in Args . java to ensure compatibility with
camel - 14263 : camel - jbpm - fix typo in camel - jbpm
pdfbox - 4071 : make jpegutil constructor final
replaced instances of ` WorkModeToggleContainer ` and ` WorkModeToggleContainer ` with ` WorkFooterContainer ` and updated related classes accordingly to improve
refactor multiple Dalvik - related classes for consistency and clarity to improve code maintainability and readability across the project
refactor : use typeparameter . getsuperclass ( ) instead of getreference ( ) in defaultjavaprettyprinter . java
added a call to freeMemory ( bytes ) in OperatorContext . java to improve memory management and prevent memory leaks
updated string formatting in QueryByExamplePredicateBuilder and JpaPersistentPropertyImpl to remove unnecessary null checks in StringQuery to improve code readability and
refactor evictionCounter handling in ConcurrentLRUCache and FastLRUCache to use AtomicLong and add a add method in FastLRUCache to
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor ` and added a method to run
[ hotfix ] [ network ] do n ' t use InetAddress . getLocalHost ( ) in networkaddressmanagerserviceimpl
set the data root of the database in the mainframe to ensure the database is correctly set for the application
added a constructor to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration ` to track the status of the Solon Admin client and server
refactor TableEnvironment class to improve code organization to enhance maintainability and readability of the code
removed the ` setStatementTimeout ` method from ` MapperBuilderAssistant ` , ` MapperBuilderAssistant ` , and ` MappedStatement ` classes to
removed the ` ` hangingTscTimeout ' ' parameter from the ` setHangingTsTranspiler ` and ` TypeScript2
added GeoLocationRequest and GeoLocationResponse classes to CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocationResponse in
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` in ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to improve clarity and
tika - 132 : add test case for jxl . xls . xml and add unit test
ggb : do n ' t trigger concurrentmodificationexception in scriptable .
[ java ] add sleep for writingtopipe in tcpnioconnection
add more detailed error message for ` hasValue ` method in ` GuavaOptionalSubject ` and corresponding tests in ` GuavaOptionalSubjectTest ` to
updated RECENTS _ CLEAR _ ALL _ BUTTON to include VERTICAL _ SWIPE _ INDICATOR and modified hotseat
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions when nav is null
pdfbox - 4071 : do n ' t use temp point for classic box .
updated error handling logic in ErrorOccuredInOnExceptionRoute . java to improve error handling accuracy and maintainability
updated the scheduleAtFixedRate method to scheduleWithFixedDelay and changed log level from info to debug in AstroDiscoveryService . java to improve performance and
refactor : remove redundant code in singlepassandimagebasedlightinglogic . java
added JUnit @ Ignore annotation to JmsJdbcXALoadTest , JmsJdbcXATest , and JmsJdbcXATest
updated import statements in GuiceFactoryTest . java to use specific package imports instead of wildcard imports to improve code clarity and maintainability by
added a system feature management method to RobolectricPackageManager and corresponding test cases in RobolectricTest to enhance functionality for managing system features
refactor RCAFrameworkLoader to use a new property ` PROP _ PATH _ POSTFIX ` and add a new test class ` RCAFramework
removed logging of the cancellation watch dog in Task . java to clean up the code and reduce unnecessary log clutter
fix npe in radproperty . setenumvalues ( ) when empty
renamed ` needInline ` to ` needStartText ` and ` needEndText ` in BoxBuilder and InlineBoxing classes to improve clarity and
http : / / issues . apache . org / jira / browse / akamai / akamai / akamai
updated database type handling in UpgradeCatalog260 . java to ensure compatibility with different database configurations
updated error messages for index directory creation and resource directory creation to provide clearer guidance on permissions for directory creation failures
refactor DatasetUtilities class to improve code organization to enhance maintainability and readability of the code
added a line to append the selector ID in the key to ensure the selector ID is correctly formatted for better user experience
updated debug log format in GouraudShadingContext . java to use x - coordinate instead of x - coordinate to improve performance and readability
added TASKBAR _ HIDDEN _ WHILE _ DHILE _ DHILE _ DHILE _ DHILE
updated key exchange parameters in KeyExchange . java for consistency to improve code readability and maintainability
added a check for JdbcConnection before executing the version ( ) method in CockroachDatabase . java to ensure proper type safety and prevent potential
updated variable names and assertions in ServerMainTest . java for clarity to improve readability and maintainability of the code
added getMediaRecorderingMimeType ( ) methods to multiple classes to retrieve media recorder MIME type from the Display instance
change the visibility of the useShaders method from private to public in ShaderHelper . java and RenderTileEnchanter . java to allow external access
updated the order of the ` BindableFilter ` condition from " C = 6588 " to " C = 13500 " in ` Druid
updated the initialization of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
added new XML features and configurations for external entities in XMPMetaParser . java to enhance XML parsing capabilities and ensure proper handling of external entities
added a new interface ` ClientRegistrationIdentifierStrategy ` to provide a mechanism for retrieving client registration identifiers
changed the loop condition from ` if ` to ` while ` in ` UrlHelper . java ` to improve readability and maintainability of the code
renamed ` checkVarargsAccessDuringResolution ` to ` checkVarargsAfterResolution ` and added a new class ` VarargsAndWildcardParameter
refactor border property logic to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by reducing redundancy
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to improve logging granularity for better debugging
updated the ` register ` method to accept ` HubRegisterResponse ` as a parameter and modified its usage in ` InternalDropAllCommandStep ` to
replaced occurrences of ` & 0xff ` with ` Byte . toUnsignedInt ` in multiple classes to improve code readability and maintainability by using
camel - 14297 camel - opentracing : fix typo in opentracingtransactionproducer
updated the default value of DepFiles from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure compatibility with the latest
changed the default value of rangePannable from true to false in CategoryPlot . java to disable rangePannable functionality
refactor work mode switching logic in AllAppsContainerView . java to use AdapterHolder . MAIN to improve code readability and maintainability
updated access modifiers and variable declarations in Visualizer2TopComponent . java to improve code readability and maintain consistency
added handling for CancellationException in FunctionTest . java to improve error handling for cancellation scenarios
changed constructor visibility of JarFileResource and JarResource constructors from package - private to protected in JarFileResource , JarResource , and JarResource classes to
refactor DefaultTrackSelector class for improved performance to enhance performance and maintainability of track selection logic
added a delay for unseqmerging in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseq operations
updated the fee currency assertion from AUD to BTC in the BTCMarketsAdaptersTest . java file to ensure the test accurately reflects
updated the SQL query in Post . java and modified test cases in HibernateDTOProjectionTest . java and JPADTOProjectionTest . java to
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
added service parameter to installAutoInstance and updated installAutoInstance method to include Service parameter to enhance functionality by allowing users to configure the Hive interactive mode
removed unnecessary whitespace in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
add @ jsonpojobuilder ( withprefix = ' ' ' ) to customerkey . builder
added handling for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve error messaging for unsupported numeric values
replaced instances of ` inner ` with ` javacProcessingEnvironment ` and ` javacRoundEnvironment ` in ` TreeBackedProcessorWrapper . java
removed unused import of ` java . lang . annotation ` from ` ParameterInfo . java ` to clean up the code and improve readability
do n ' t add ac3 streaming to the video manager when ac3 be enable .
updated the return statement in LocalNode to use a HashMap to store the result of a JSON response to enhance the functionality by allowing dynamic setting of the
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement , DelegatingStatement , DiskFileItem , and DiskFileItem classes
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to verify the functionality of selecting into
refactor RTimerTree class implementation to improve code readability and maintainability
updated package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graph
jme358 - add test case for issue 358 .
updated QueuedThreadPool and ScheduledExecutorScheduler to include the name of the client pool and scheduler to enhance thread identification by specifying the hash code for better
updated visibility of ` treePane ` and ` resultPane ` variables in ` ViewResultsFullVisualizer . java ` to private and modified layout settings to
added descriptions for user ' s phone numbers in ScimUserEndpointDocs . java to provide descriptions of user ' s phone numbers and their
added private constructors to DeleteFiles , IndexFiles , IndexFiles , IndexHTML , and SearchFiles classes to enforce singleton pattern for these classes
added error logging for null responseMap in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and provide clearer logging for unexpected HTTP responses
refactor SolrRequestHandler class to improve code organization to enhance maintainability and readability of the code
added a check for ` DEFAULT _ PARALLEL ` in the ` XmlSuite ` class to ensure that ` DEFAULT _ PARALLEL
vmware : fix checkstyle violation in vmwaremo and vmwareutil
updated card initialization to include SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED _ CARD
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress sysout warnings during test execution
camel - 16225 : camel - bindy - bindy : add support for bindy data format to model .
changed default value of useOwner and useTimeStamp from TRUE to FALSE in JabRefPreferences . java to disable the useOwner and useTimeStamp
changed the parameter type of runAndCheckException from Runnable to ThrowingRunnable in Utils . java to improve clarity and consistency in exception handling
added null checks for ` via ` and ` pathFromSeed ` in ` CrawlURI . java ` to improve robustness by avoiding potential NullPointer
camel - 14284 : camel - aws - sdb component should use component configuration instead of configuration
updated version number from " 4.0 . 1 " to " 4.0 . 2 " and refactored object handling in LiquibaseXMLTransformer to improve
change default certificate validity value from 7 to 90 to allow for more time for certificate validation
added smoothDelta and lastDeltaUpdate variables and updated delta calculations in ThreadHandler . java to improve the responsiveness of the thread handling logic
added a null check for paginator in HttpBatchReader , HttpScanBatchCreator , and HttpScanBatchCreator to ensure proper handling of null paginators
added null check for the compaction client in Worker . java and created a test for it in TestWorker . java to ensure robustness by preventing
added onSaveInstanceState method to ShadowFragmentActivity and corresponding tests in FragmentActivityTest to ensure that fragment state changes are handled correctly during configuration changes
updated formatting and formatting in BatchResourceFactoryBean . java to improve code readability and maintain consistency
added a test for parsing simple Android color references in ColorResourceLoaderTest . java to ensure correct parsing of color references in Android colors
added error handling for NoResultException in AbstractJPAQuery . java and a corresponding test in AbstractStandardTest . java to improve robustness by
fix a bug in the collection . getallparents ( ) method that cause a nullpointerexception .
updated the depth preference from ` l ` to ` LawnchairApp ` in ` DepthController . java ` to utilize ` Lawn
removed unused import of ProcessTools in LocalManagementTest . java to streamline code by eliminating unnecessary dependencies
removed the timestamp parameter from the updateTotalEnergyAverageUsage method in EnergyProcessor and related classes to simplify the method signature and improve code readability by
[ java ] fix nullpointerexception in extensionstack . tostring ( ) and add unit test
[ rxjava3 ] properly dispose the inner subscriber when an error occur .
added connection manager timeout configuration to MultiGetRequest and updated connection handling in ControllerStarter , and added warning logging in ServerTableSizeReader to improve
corrected formatting of the variable declaration in AndroidPrebuiltAarDescription . java to improve code readability and maintain consistency
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to replace ` NewModelTest
updated EdgeSyncCursor and TenantResourcesEdgeEventFetcher instantiations in EdgeSyncCursor and modified the inlineImage method in BaseImageService to include a
removed conditional check in CachingBuildEngine and added a new test for output hashing in CachingBuildEngineTest to ensure that output hash is
camel - 14284 - camel - netty - add option to disable use bytebuf in the payload helper
updated the method call from ` getOldName ( ) ` to ` getQualifiedName ( tbl . getTTable ( ) ) ` in ` D
added a message to indicate that the Vertx instance must be created with the preferNativeTransport option set to true to ensure that the Vertx instance
rename enumtypehandlerserializer to correct package and add unit test
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future updates
updated query hint settings for HINT _ JAVAEE _ QUERY _ TIMEOUT and HINT _ LOCK _ TIMEOUT in SessionImpl
added a new file ` StaticLoggerBinder . java ` implementing the ` LoggerFactoryBinder ` class to provide a structured way to instantiate and utilize the
replaced instances of ` cloneFamily ( list ) ` with ` set ( list ) ` across multiple classes to ensure consistent usage of the ` cloneFamily
updated orientation comparison logic in TaskbarManager . java to include additional conditions to ensure proper handling of orientation changes
update jabber to use stringescapeutils . unescapexml ( ) instead of stringescapeutils . unescapexml ( )
updated the parameter order in the longStackPut method call in StoreDirect . java and added a new test class Issue265Test . java to
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable and mutable types in the Main class
[ jbrules - 2424 ] add a new class for test to make it easy to test the integration test
updated conditional statements in DLNAMediaInfo , FFMpegVideo , FFMpegVideo , and FFMp
added a boolean parameter ` unlimited ` to the ` NBWriteServlet ` constructor and modified the ` TestNonBlockingAPI ` constructor to accept a
fix blockchainimpl . updatetotaldifficulty ( ) and add test for invalid block total diff
[ java ] do n ' t check if the current window be seekable in defaultplaycontroller .
replaced ` Collections . synchronizedList ` with ` CopyOnWriteArrayList ` in ` NativeLibrarySupport ` and ` SecurityServicesFeature ` classes to improve thread safety
added uniform allocation calculations and adjusted position calculations in AllAppsView . java to improve performance by optimizing position calculations and ensure correct positioning
added a condition to check if the key starts with a colon in HttpURLConnection to ensure proper handling of special characters in the key
added PrincipalResolver dependency to CasSimpleMultifactorAuthenticationMetaDataPopulator to enhance authentication metadata handling by integrating PrincipalResolver for better dependency management
replaced ` ObjectMapper ` with ` ObjectBuilder ` for JSON parsing in ` DelegationTokenResponse . java ` to improve code readability and maintainability
added a method ` removeTrailingSlashes ` to ` IoUtil ` to remove trailing slashes from the StringBuilder to ensure proper handling of special characters
added methods ` matchesAny ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to enhance pattern matching functionality and ensure
hbase - 16286 addendum : fix typo in error message in loadincrementalhfiles
fix the fire not fire with vanilla potion . close # 151
removed unnecessary whitespace in beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintain consistency
updated calculations for decreasePercent and adjusted formatting in ContractStateCapsule and ReceiptCapsule classes to improve code readability and maintain consistency
fix http : / / issues . apache . org / jira / browse / amq - 4047 - add debug logging to asynccontentproducer
added a null check for weightField in DocumentDictionaryFactory . java to ensure that the weight field is not null to prevent runtime errors
added variable substitution functionality in AppleBundle . java and created a new test for info plist variable substitution in AppleTestIntegrationTest . java to ensure correct
updated the BulletType size from 90 to 140 in Turret and added a new LaserTurretEntity class to improve the accuracy of
replaced direct calls to ` adaptOrder ( ) ` with ` adaptOrder ( ) ` in ` KucoinAdapters . java ` to ensure type
added a new file ` PreParseGrammarTest . java ` to test XML grammar parsing functionality to verify XML schema parsing functionality
pdfbox - 4071 : add doclint to suppress warning in java . desktop
added FontManager import and font override functionality in ExtendedEditText . java to enhance font management capabilities within the application
added null check for currentUser in AuthorizeTag . java and a test for unauthorized requests in AuthorizeTagTests . java to ensure proper handling
camel - 14284 : camel - cxf should log a warning if the uri contain unsafe character .
added setUpData method to JDBCGeometryTestSetup to ensure proper initialization of data in the JDBC geometry test setup
removed unused import of DumpHandler from MultipartFilterTest . java to clean up the code and improve maintainability
[ hotfix ] [ table - common ] throw an exception if the task be already cancel .
add server . rmi . create property to enable registry creation by default
[ hotfix ] [ table - common ] use string . join ( ) instead of string . join ( )
updated qualifier handling in ParallelUniverse , Universe , RobolectricTest , and ResBundleTest to utilize the DisplayMetrics configuration to improve
[ java ] add memberid to serviceheartbeat . allocate ( ) and serviceheartbeat . allocate ( )
added version check for totalThreadAllocatedBytes in TestThreadMXBean . java to ensure compatibility with newer Java versions
updated the evaluation logic in CustomExpression . java to handle NaN and positive infinity values to ensure proper handling of negative and positive infinity values and improve hash
updated logging statements in AjaxListener . java to use placeholders instead of string concatenation to improve readability and maintainability of log messages
added authentication and authorization functionality to the AuthenticityController and AuthenticityController classes to enable authentication functionality in the application
added assertion to ensure that the nextNode is not alive in LoweringPhase . java and improved code readability in SnippetTemplate . java to
updated logger initialization from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for HttpClient requests
removed redundant comparison calls in DefaultTrackSelector . java to streamline comparison logic and improve code readability
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of the serialization process
add crop to the image when the cropbox be not crop
refactor UnitOfWorkFactory class to improve code organization to enhance maintainability and readability of the code
added new fields ` allAppsCellWidthPx ` and ` allAppsIconSizePx ` to ` DeviceProfile ` and updated
[ tika - 132 ] fix the issue of miss content - type name in mailcontentcontenthandler
updated URI construction in ThumbnailsCacheManager . java to use fileId instead of getRemotePath to ensure correct file ID is used for thumbnail generation
added logic to set the ` in ` markSupported ( ) ` property to ` in ` Source . java ` to ensure that the ` in `
added @ Deprecated annotation to multiple classes to indicate that these classes are outdated and should not be used in future development
added configuration property ` SERVER _ SHOW _ ERROR _ STACKS ` to control the visibility of server error stacks on the error page
cloudstack - 10297 : do n ' t fail to delete template when remove a domain
remove unnecessary null check for fremcall in sparcariallirgenerator
[ drools - 587 ] add support for legacy drools 5 . x api in decisiontableconfigurationadapter
refactor onRequestPurchaseResponse method to use a Runnable for asynchronous execution to improve responsiveness by ensuring the callback is called on the UI thread
increased the default timeout duration from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for tests to complete
updated import statements and modified style extraction logic in ShadowAssetManager . java to improve code readability and ensure correct style extraction logic
deleted files MrefStat . java and MrefStat1 . java and MrefStat1 . java to remove unused classes to streamline the
updated scope handling in DependencyInsight and DependencyInsight classes to use StringUtils . isBlank for better null checks to improve code robustness by avoiding potential NullPointerException
added constants for no trades , bad status , and improved error handling in BTCETradeServiceRaw . java to enhance code readability and maintain
[ hotfix ] [ test ] use hamcrest assertion instead of junit in camel - core
added a method to retrieve payment request URLs in BitcoinURI . java and corresponding test cases in BitcoinURITest . java to enhance functionality
[ planner - 383 ] improve error message when collection type be not support
removed redundant calls to mOrganizer . setFolderInfo ( ) in FolderPagedView . java to streamline the code by eliminating redundancy
do n ' t free the thread buffer if the lock owner can not be release .
replaced ` Stream . of ( ) . anyMatch ( ) ` with a for - each loop for null values in ` BasicAbstractTuple . java
refactor LintUtility to use InputResourceUtility for reading and writing linter configurations to improve flexibility and maintainability of the linter configuration
added a post ( Runnable ) to update backgrounds and paddings in AppsContainerView . java to ensure background updates are executed on the UI
fix an issue where the inventory . tick ( ) do n ' t work .
added a case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY event handling
[ hotfix ] [ runtime ] add @ publicevolving annotation to statettlconfig
added null check for ` x ` in ` PreparedStatement ` , ` PreparedStatement ` , and ` PreparedStatement ` classes to ensure proper handling of
enhance the description of the describe description in ArchiveTool . java to provide clearer information about the invalidated recordings in the catalog
corrected a syntax error in the append0 method call to improve code readability and maintain consistency in formatting
added a new test method ` jsonSnapshot ` to the ` SiteSnapshotVariationsTest ` class to validate the JSON snapshot functionality to ensure that the
refactor the ` removeTheTxAndBlock ` method to use a new ` removeTheTxAndBlock ` method instead of a wildcard import to
added channel state handling for open and close channels in AmcrestHandler and DahuaHandler classes to ensure proper handling of channel states based on
removed ` throws NoSuchBuildTargetException ` from method signatures in BuckConfig . java and BuildRuleFactoryParams . java to simplify method signatures by eliminating unnecessary
refactor ChangeLogIterator to accept a list of changeSetFilters instead of a single list to improve flexibility in handling different change set filters
do n ' t swallow guest exception in polyglotlauncher
updated environment variable to use getEnvOrSystemProperty ( " OPT _ OUT _ TRACKING " ) instead of getenv ( " OPT _
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor space initialization logic in SpacesVisitor . java to use dropParentUntil for better readability to improve code readability and maintainability by
# 149 - add copy ( boolean nearcache ) method to servercacheoptions . copy ( boolean nearcache )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to verify that the border is not visible on a float
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and `
changed the constant name from LIVE _ URI to PROD _ URI and updated related exception handling in KucoinExchange . java to improve clarity and
updated resource loading and search path handling in SpringResourceAccessor . java to improve clarity and consistency in resource management
added unit tests for microwatt per cubic meters and square cubic meters in SmartHomeUnitsTest and SmartHomeUnits classes to enhance test coverage and ensure
updated vertexMask assignment to use getMaskWithSizePacked ( ) instead of getMask ( ) to ensure the vertexMask reflects the size of the
deleted the Tls12SocketFactory . java file to remove unused SSLSocketFactory class to streamline the codebase
[ jabref ] use a stream instead of a stream in texbibentriesresolver .
added a method to check if the RObolectric legacy mode is enabled in ResourcesTest . java to ensure compatibility with Robolectric
added support for Firebird database type " DOUBLE PRECISION " in DoubleType . java to ensure correct data type handling for Firebird database
added null checks for dataSource and transactionManager before creating DataSourceTransactionManager instances to prevent potential NullPointerExceptions during initialization
[ gestalt ] add @ api annotation to package - info . java
updated command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1 " and modified test
[ hotfix ] [ test ] fix resource leak in ebeanserver _ savealltest
updated TermScorer to conditionally return a TermScorer based on scoreMode ' s needsScores ( ) to ensure that the TermScore
updated metricUpdates initialization to use firstNonNull for better null safety to improve robustness by avoiding potential NullPointerExceptions when retrieving metric updates
cloudstack - 10225 : add nic data center nic search to the user vm
refactor ObjectInspector retrieval to use a new method ` findTargetOi ` for better clarity and functionality to improve code readability and maintainability
added a method ` removeBuildArtifacts ` to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` to ensure that build artifacts are
added logic to set row selection interval based on the selected row in ThrustCurveMotorSelectionPanel . java to ensure that the selected row is
rename assertthrows ( arraystoreexception ) to assertraisesarraystoreexception ( arraystoreexception )
refactor PropertySource class to improve code organization to enhance maintainability and readability of the code
added environment name and user agent configuration methods to HttpClientBuilder and HttpClientConfiguration classes to enhance the flexibility of HTTP client configuration by allowing customizable user agent
refactor session management to use a dedicated method for restoring sessions to improve code readability and maintainability by reducing duplication
updated assertions in IssueTest and Reporter classes to use Object instead of String to improve type safety and clarity in test assertions
added null check for file content type before creating ByteArrayDataSource to avoid potential NullPointerExceptions when the file content type is null
add activationrequestdenied to the interaction system so that it can be send to the user .
updated calculations in GraphApplet . java for consistency and clarity to improve code readability and maintainability
added ` updateTaskViewsSnapshotRadius ( ) ` method to ` TaskView ` and updated ` updateSnapshotRadius ( ) ` method visibility in `
added logging for the generated swagger in StaticMicroserviceVersions . java to improve traceability and debugging of the microservice version generation process
changed the return type of the put method from void to int in ArrayMap . java to allow the method to return the index instead of void to
updated KafkaContainerCluster to use ` withStartupTimeout ` instead of ` Stream < Startable > ` and modified broker handling in ` KafkaContainerCluster
do n ' t send message back in case of failure to send message back .
refactor header handling logic in StaticServerHttpHeadersWriter and add a new test for header writing with different case cases to improve header management and ensure
added package access check in EventListenerList . java to ensure proper security by verifying package access before adding listeners
added support for multiple applications in the onCreateView method in ApplicationsFragment and created CustomAdapter class to enhance user experience by allowing customization of various
[ hotfix ] fix npe in keyboard quick switch task view
[ hotfix ] [ runtime ] fix resource leak in downloadtracker and downloadmanager
[ hotfix ] [ table - planner - blink ] fix a bug in basesqmtosqlastconverter
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursorProjection
added a new ` Poller ` class and modified the ` DataInputStreamWithTimeout ` class to utilize a ` Future < Boolean > ` for better
added ENABLED _ TS option to VersionTargetGraphMode and updated VersionedTargetGraphCache to utilize ToposortBasedDepsAwareExecutor
refactor UpgradeCatalog150 . java to improve code organization to enhance maintainability and readability of the code
rename networkparameters . testnet3 ( ) to networkparameters . oldtestnet ( )
danielwagnerhall : do n ' t update the selection if there be only one geo
updated OnboardingPrefs handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve robustness by
updated HdfsDirectory to extend BufferedIndexOutput and modified HdfsDirectory to use BufferedIndexOutput instead of IOUtils to improve resource management and
pdfbox - 4071 : do n ' t set clip when there be no path
removed synchronization from localAddress assignment in SocketChannelImpl . java to simplify the code and improve readability
refactor TemplateTransformer to use a new method ` addToRow ` and add a new method ` addToRow ` to improve code readability and maintain
added a method ` isWindows ( ) ` to check if the operating system is Windows to improve code readability and maintainability by encaps
updated ALPHABET and ASTERISK _ ENCODINGS constants to use a constant CHECK _ DIGIT _ STRING instead of an array
[ flink - 24186 ] [ table - planner - blink ] fix a bug in nodegenfactory . expect ( )
removed redundant checks for ` stored ( ) ` in ` IndexingChain . java ` to improve code readability and maintainability
[ calcite - 3639 ] fix timestamp _ sequence ( ) in where clause ( # 3639 )
removed redundant conditional check for postedRunnableStacktraces before adding runnables to the runnables list to simplify the code and improve readability
updated the description in AbstractGCSProcessor . java for consistency to improve readability and maintainability of the documentation
updated the waiter methods in ConnectionPoolTest . java to wait until the connection is fully initialized to ensure that the connection is properly initialized before proceeding
updated directory retrieval from null to " single " in CachingDirectoryFactoryTest , RAMDirectoryFactoryTest , and RAMDirectoryFactoryTest to
replaced ` size ( ) ` with ` filterCount ( ) ` in ` FaultTolerantChunkProcessor ` and updated related methods accordingly to
updated method signatures and improved file handling in T4994049 . java and T4994049 . java to enhance code readability and
replaced multiple return statements with assumeTrue for WindowsTerminal in ConsoleReaderTest . java to simplify the code and improve readability by reducing redundancy
remove userinfo . isadmin check from getfeedbacksessionsaction
updated column boundaries and condition checks in AllAppsView . java to ensure correct selection and positioning based on velocity and position
[ hotfix ] [ runtime ] remove unused method call in profilerserver . notifyclientonresultsavailability
added model loading and refresh functionality in DataModelManagerDialog , updated encryption logic in DbConnectionDialog , and modified file handling in ExportPanel to improve
replaced multiple instances of ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` in multiple classes to improve code readability and maintainability
refactor segment size calculation in DocumentsWriter . java and add a new test for no documents index in TestIndexWriter . java to improve code clarity
updated the validation logic for the " data " field in the ArmatureModifier class to ensure that the " dvert " field is not null before
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
added a new ` fillInStackTrace ( ) ` method to the ` ApplySpecialization ` class to avoid filling in stack traces to prevent potential
updated the method to return the average line height from a stream to a stream of lines to improve accuracy in calculating the label ' s height based on
replaced instances of ` RotationTouchHelper . INSTANCE ` with ` RotationTouchHelper ` in ` RecentsAnimationDeviceState ` and ` 
refactor the loop structure in AVA . java to improve readability and maintainability of the code
updated ` ServletHandlerInterceptor ` to use ` IdConversion . convertToLong ( s ) ` instead of ` Long . valueOf ( s , null )
added unit tests for the ServerDatagramConnector functionality to improve test coverage and ensure correct behavior of server data handling
updated the method call from ` substring ` to ` substring ` in ` TestSqlEntityProcessorDelta . java ` to correct the substring syntax to ensure
refactor Cache class for improved performance to enhance performance and maintainability of caching mechanisms
updated variable names from " e " to " ev " in ResourceSetRegistrationEndpoint . java and modified scope settings in ResourceSetRegistrationEndpoint . java
modified the ` doBefore ` method in ` TestUnifiedHighlighterTermVec . java ` to remove unnecessary exception handling and modified the initialization of `
added a new ` addDataButton ` method to the ` GcodeTable ` class and modified ` GcodeTable ` to utilize it to
replaced the hardcoded WEBAPP _ CONNECT _ TIMEOUT constant with a dynamic configuration method to improve flexibility by allowing dynamic configuration of timeout
updated type parameters and improved error logging in multiple classes to enhance type safety and maintain consistency across the codebase
refactor TestMediaService class to improve code organization to enhance maintainability and readability of the code
added a static string HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to the Messages class to provide a way to
add a new file ` MarketsPrintTool . java ` to demonstrate the functionality of the market printing tool in the application
added validation to ensure that the component does not contain alphanumeric characters in the request to ensure that only valid hostnames are processed in the request
add registersecuritykeystart and registersecuritykeycomplete to accountproxy . registersecuritykeystart / registerwebauthnstart / registersecuritykeycomplete
refactor ServerSpanThreadBinder to improve code readability to enhance maintainability and facilitate future updates
updated userPointer retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and ` BlockItemSystem .
updated the property name from " Location " to " number " in Csv2Shape . java to improve clarity and consistency in naming conventions
updated gasCost parameter from callGasWord to gasCost in VM . java and removed unused imports in Program . java to improve code clarity
refactor Parameters class to improve code readability to enhance maintainability and readability of the code
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot . java to disable null values in the plot plot
refactor bundle loading logic in ResourceBundle . java to simplify code and improve readability to enhance maintainability and reduce redundancy in bundle loading logic
updated the character ' c ' from ' _ ' to ' - ' in TaggedPdfReaderTool . java to correct the spelling of the character
make executescriptaction . isallowedduringeditable ( ) return false instead of null
added userModified flag to LoginSamlAuthenticationProvider to enable user modifications during authentication
added a new file ` TestSealedObjectNull . java ` that tests the ` SealedObjectNull ` implementation to verify that the ` Sealed
renamed the ` onOpen ` method from ` onOpen ` to ` setResponse ` in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added a static final Set for the SNOW material in BlockEventListener . java to ensure compatibility with server version 1.16 and above
added a lastTradeId parameter to the Trade objects and updated related constructors to include the last trade ID to enhance trade data retrieval by including the
added error handling for closing HMS connections in HiveStreamingConnection . java to ensure proper resource management and avoid potential memory leaks
use random . nextLong ( ) instead of system . currentcurrenttimemillis ( ) . currenttimemillis ( ) . currenttimemillis
updated the default icon size from 518 to 567 and added a device profile for the Nexus 5 device in DynamicGrid . java to ensure the
[ java ] : fix race condition in refcount reset ( ) .
replaced the use of ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added support for WHITESPACE _ AROUND _ TEXTUAL _ OP in PHP token handling to enhance text formatting capabilities and ensure correct formatting behavior
updated file existence checks in SaveTask . java and added new test cases in SaveAndLoadTaskTest . java to ensure that empty and non -
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety when accessing shared resources
[ log4j2 - 1343 ] fix the log4j2 - specific log4j2 - related issue in smtpmanager
change the PADDING constant from LengthLike to NonNegativeLengthLike in PrimitivePropertyBuilders . java to allow for non - negative lengths in
removed the ` headers ` parameter from the ` createContext ( ) ` method across multiple resource classes to simplify the context creation process by eliminating unnecessary parameters
fix issue with jimple catch in worldbuilder
updated error message formatting in JUnitRunner and AndroidPlatformTarget classes to enhance readability and maintainability of error messages
updated cache size from 16 to 8 in OmniNotes . java to optimize memory usage for better performance
updated the condition in ` InvocationStageTrace ` to include ` start ` in ` InvocationStageTrace . java ` and removed " stages " from the
added a try - catch block around the ks load method in ProvKeyManagerFactorySpi . java to handle potential NullPointerExceptions when loading the
[ hotfix ] [ test ] fix test failure in upstreamcheckutilstest
updated variable names from ` panelDim ` to ` otherParent ` in ` DockManagerW . java ` for consistency to improve code readability and
added support for OpenGL shader extensions in GLRenderer . java to ensure compatibility with OpenGL 3.0 and above
refactor PopulatorContext class to improve code organization to enhance maintainability and readability of the code
do n ' t send saveall notification if the project do n ' t have a saveall action
updated ZQLJobManager to use IOUtils for character encoding handling to ensure consistent character encoding across different operating systems
added a null check for the argument array before accessing its length in IkStepDefinition . java to prevent potential ArrayIndexOutOfBoundsException when accessing
updated ` FakeOSSOHeaderDecoder ` to use constants from ` OSSOHeaderDecoder ` instead of hardcoded strings to improve maintainability and
added @ Deprecated annotations to several methods in GenerateJavaSources and Config classes to indicate that these methods are outdated and should no longer be used
updated debug logging statements in DerbyDatabase . java to improve clarity of error messages for better debugging
[ hotfix ] [ cep ] increase timeout for cep test
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by reducing parallel processing
updated condition checks for ROLLBACK operation type and modified logging messages in HubUpdater . java to ensure correct handling of ROLLBACK operations
added constants for IBM and OpenJ9 VM version keys in Constants . java and a corresponding test in TestDDRExtensionGeneral . java to enhance
added handling for CompositeFont in FontFamily . java and created a new DebugFonts . java file with debug fonts to improve font management and
updated import statements in NegotiatingServerConnectionFactory . java and added HTTP version check in NegotiatingServerConnectionFactory . java to ensure compatibility
added a RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable the rate control
added a new file Test6741426 . java containing a JComboBox and JTextField with a Swing look and feel to implement a Swing look and feel
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest from " error " to " ex . getMessage ( ) " to improve
added null checks for dbMgdPath in HMSHandler . java to prevent potential NullPointerExceptions when dbMgdPath is not
[ s3 ] move s3copyobjectrequest into a separate package
removed accentColor parameter from multiple setup methods in SettingsActivity . java to simplify method signatures by eliminating unnecessary parameters
updated error message from " / temp1 " to " fileAtRoot " in TemporaryFolderUsageTest . java to provide clearer context for
replaced instances of ` Map _ TYPE _ INFORMATION ` with ` ClassTypeInformation . OBJECT ` in ` MappingMongoConverter . java ` to simplify
add check for non - empty address in clientnetworkconfig . getaddress ( )
added a new certificate " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate verification functionality
change the return type of the compute method from void to int in CompiledMap , CompiledMap , WorkerLoop , and WorkerLoop classes to
added a conditional check for popup behavior in ModeToggleMenu . java to ensure the menu behaves correctly based on popup state to improve user experience by
pdfbox - 4071 : avoid arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added a new test class ` FinalizerInfoTest ` for testing the ` GC . finalizer _ info ` functionality to verify that GC . final
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve
[ iotdb - 4071 ] add custom address to the burnman service if it be not present .
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
updated byte array size from 1000000 to 1000 in BatchValidateSignContractTest . java to disable tests that are not ready for execution
updated method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to improve
updated query handling in RetweetActivity . java to replace " @ " with " from : " to ensure consistent query formatting across the application
removed the conditional check for rebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary condition
added a new method ` importAccount ` to the ` YubiKeyAccountRegistryEndpoint ` class and updated ` YubiKeyAccountRegistryEndpointTests
added multiple shader programs for " post " , " ssao " , " tex " , and updated the material retrieval method in multiple classes to
added null checks for ` cnt ` in ` paintOnTopLoop ` and modified padding in ` SideMenuBar ` and ` Toolbar ` classes to
refactor AbiWriterProtocol class to improve code organization to enhance maintainability and readability of the code
added a null check for the subName before setting the caption to avoid potential NullPointerExceptions when subName is null
changed data flag from IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to ensure the data flag reflects the
added a null check for the sim object before accessing its properties in CustomExpression . java to enhance robustness by preventing potential NullPointerExceptions
removed the ` requestBlindVoteListFromNetwork ` method and added a call to ` sendRepublishRequest ( ) ` in ` VoteResult
test : add test case for postgrestest
updated substring method calls from " . " to " . " in SubtitleUtils . java and RemoteUtil . java to ensure consistency in string manipulation
replaced hardcoded LINE _ SEPARATOR with a constant LINE _ SEPARATORS _ RE in DefaultJavaPrettyPrinter . java and added
refactoring singleimplementor to use atomicupdater to improve performance
added null checks for ` rb . getQuery ( ) ` and ` rb . getFilters ( ) ` in ` SimpleFacets . java ` to
[ smarthome ] fix thinghelper . mergething ( ) to be able to merge thing from the same thing .
updated error handling in Ktab . java to use error messages instead of printHelp ( ) to improve error reporting for unknown commands
added a check for the existence of the outFile before returning it to avoid potential null pointer exceptions when the output file is not available
added support for parsing date strings in DateConverter and corresponding unit tests in DateConverterTest to enhance date parsing functionality and ensure correct parsing of date strings
added assertions and query parameters for fetching Post by slug in SpringDataJPALockTest . java and PostRepository . java to ensure that the
changed the ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for ` OfflineConnection `
added a static initialization of SimpleClientHttpRequestFactory in ClientRegistrations . java to set timeouts and set the request timeouts to 30 seconds to
updated SourceTest to check for cannonical file paths and added assertions for file existence to improve accuracy of file path validation and ensure correctness of file
move graalvm . version to system . getproperty ( ` ` graalvm . version ' ' )
added validation for access token and refresh token validity in ClientAdminBootstrap . java to ensure that the new client correctly handles the validity of the new client
update androidAPIVersion return logic to use Options . v ( ) instead of AndroidAPIVersion to ensure compatibility with different Android API versions
removed ' this . ' prefix and ' this . valueSeparator ' from method calls in PropertyPlaceholderHelper . java to simplify code and improve readability
removed the number parameter from the error message in Resources . java to simplify the description for better readability
replaced Thread . sleep with CountDownLatch and modified collection processing logic in ZkSolrClientTest . java to improve synchronization and ensure collections are processed in parallel
removed the import of BigInteger and added it to simpleTypes in MongoMappingContext . java to streamline the code by eliminating unnecessary dependencies
added a condition to check if the button text matches the button text in HomeFragment . java to ensure the toast show only occurs when the button text
added a condition to check if the MEncoder configuration is not out of sync to improve performance by avoiding unnecessary synchronization when no synchronization is available
increased the default event loop thread count from 10 to 15 in ConfigurationProperties . java and ConfigurationPropertiesTest . java to allow more time for the event
changed access modifiers of fields and methods in CountMin4 , IncrementalResetCountMin4 , and AdaptiveWindowTinyLfuPolicy to
added methods to retrieve the sort field in ExternalFileField and created a new test class ExternalFileFieldSortTest to enhance the functionality of external file
updated error message from " Invalid URL " to " Connection error " in FetcherException to improve clarity of error reporting for connection issues
updated event handling in OpenRocketSaver , DocumentConfig , and FlightDataBranchHandler to include the source ID in the event string to enhance
changed the visibility of the check method from private to protected final to allow subclass access to the check method for better encapsulation
added SynchronizeFileOperation handling in FileActivity to handle synchronization files to improve user experience by providing feedback when synchronization fails
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for better URL encoding to ensure proper handling of image data in the preview
added a null check for the property " cn1 $ infinite " in InfiniteContainer . java to prevent potential NullPointerExceptions when the property is
updated the total variable from 0 to 1 in IntHashSet . java to correct the calculation of the total value to improve the accuracy of the total value
added a lock check before updating the entry in FeedRefreshUpdater . java to improve error handling by logging an error if the entry is locked
refactor ACE handling logic in SolarisAclFileAttributeView . java and Misc . java to improve code readability and maintainability by
replaced ArrayList with Edge array for adding edges in LatLonTree . java to simplify the code and improve performance by eliminating unnecessary shuffle
added IOUtils import and improved resource management in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
update bibtexparser to replace ' \ x0a ' with ' [ x0a ] '
added strict property handling in Main . java and corresponding test cases in MainTest . java to ensure proper parsing of command - line arguments based on the
fix validation of annotation with @ constraint ( annotation ) in defaultvalidator
camel - 14263 : camel - http : use http4 instead of http : / / issues . apache . org / jira / browse
added a waitForThingsToLevelOut ( 30000 ) method to TestCloudPivotFacet . java to ensure that the test waits for things to
removed redundant checks for byte length in UBJsonWriter . java to simplify code and improve readability by eliminating unnecessary complexity
refactor ApplicationTest . java for improved test coverage to enhance reliability and maintainability of test cases
replace String with StringBuffer for string concatenation in ConnectionFactoryImpl . java to improve performance and readability of the code
replace ` Type ` with ` RoboType ` in multiple classes to align with the latest RoboType naming conventions
[ java ] : return aBORT if a recording descriptor poller be not complete .
added cache _ key and cache _ lookup attribute to entityprocessorbase . where ( ) and testcachedsqlentityprocessor . where ( )
added a new file PutfieldError . java with a main method to demonstrate error handling for IncompatibleClassChangeError to ensure proper exception handling for
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 .
[ iotdb - 4071 ] add log to memtable . isinmemory ( ) method to check if memtable do n ' t
replaced instances of ` Space . build ( ) ` with ` SINGLE _ SPACE ` across multiple files to improve code readability and maintainability
[ hotfix ] [ runtime ] remove unused method in flyweight . java
refactor TestMethodResultMapBuilder class for improved readability to enhance maintainability and facilitate future updates
add check for java . lang . integer and java . lang . int in findnullderef . java
[ hotfix ] [ runtime ] remove unused lock field from tasklocalstatestoreimpl
updated string return values in Utils . java to return an empty string instead of an empty string to ensure consistent return values across the application
updated condition checks in Utilities . java and FloatingIconView . java to handle DeepShortcutView instances to improve compatibility with DeepShortcutView ' s
changed the type of the validator field from String to Object in JwtIssuerValidator and updated the validation logic in JwtIssuerValidator to improve flexibility
rename method ` buyQuickRate ` to ` getBuyQuickRate ` and add ` getCoinmateSellQuickRate ` and ` getSell
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` to use it to improve code organization and maintainability by central
added a check to ensure the event bus is registered before registering it to avoid registration of the event bus
added handling for ASCII characters in the normalization process in NormalizerBase . java to ensure consistent normalization behavior across different operating systems
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added exception handling for SQL update failure in SpillableGroupByIT and NoOpStatsCollectorIT to ensure proper error reporting for update statistics SQL
camel - 14297 : camel - Cometd - producer : move test to junit4 instead of contexttestsupport
updated HR attributes in HtmlTag . java to include a new attribute ' OK ' in 5.0 . 01 to ensure compatibility with the latest
added a new line " < br / > " to the HTML output in HtmlCoreReport . java to enhance the output formatting for better readability
updated the calculation of ` ramBytesUsed ` to include a null check for ` scores ` before calculating ` RAMBytesUsed ` to ensure
added StringHolder class and its implementation in CustomTypeAdaptersTest . java to facilitate JSON serialization and deserialization of StringHolder objects
added a new method to set extra data from mining parameters in MergeCoordinator and a corresponding test in MergeCoordinatorTest to ensure that the MergeCoordinator uses
added a static final map to track the number of arguments in the DependencyParser class to improve flexibility and maintainability of argument handling
rename PathParamServerEndpointConfig . java to PathParamServerEndpointConfig . java to improve code clarity and maintainability
[ flink - 24186 ] [ runtime ] fix migration rule threshold to be configurable by default .
rename ` part ` to ` partOrList ` in ` RestClientRequest ` , ` RestClientRequestImpl ` , and ` RestClientRequest
[ jbrules - 2424 ] fix the web - planner to use twitterbootstrap . css instead of bootstrap . css .
removed the basicCategory method from SpanishTreebankLanguagePack . java to streamline the code by eliminating unused functionality
refactored entityloader to use uniqueentityloader instead of entityloader . loadbyuniquekey ( )
hbase - 26469 remove unnecessary clearing of futures . take ( ) call in regionserverflushtable and regionserversnapshotmanager
pdfbox - 4071 : do n ' t set the size of the super if it ' s zero
fix checkstyle violation in hikaripool
removed the assureMatchVersion ( ) method from multiple filter factory classes to streamline version assurance by eliminating unnecessary method calls
fix : add defaultmethodclient ( ) method to executablemethodwriter
add a check for the LA character in the DRLParser . java file to ensure that the match method does not throw an exception if the input
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added a check for invalid payload length in WsFrameBase . java to ensure that a valid payload is provided to prevent runtime errors
int - 119 move channelparser and channelparser to the dispatcher package instead of the config package .
changed the data type of ` executionId ` from ` String ` to ` Long ` across multiple classes to allow for more precise execution IDs for
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 648 : imageprocessor .
removed log statement from SolrConfig and added imports in SolrConfigHandler to streamline logging and improve code clarity
updated delayUntil from 60 seconds to 60 seconds in FileSyncAdapter . java to improve synchronization handling by allowing more time for synchronizations
updated the formatting of the ` afterConversionTime ` variable in ` SegmentV1V2ToV3FormatConverterTest . java ` to ensure
refactor addPathToMTree method to use Path instead of String to improve code readability and maintainability by using a more descriptive
fix defaultpackagescanclassresolver . findbyfilter ( ) to work with jar url with plus character .
[ hotfix ] [ table - planner - blink ] add timestampextractorutils . getaccessedfields ( ) method in table
added a new class SpringSecurityAuthenticationSource to handle LDAP user details to provide a standardized way to access LDAP user details in the security context
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
replaced ` Dialogs . autoSuggestDialog ` with ` SimpleFormDialog ` for showing the custom filename in ` GenericViewFragment . java ` to
added a new test method ` testNewput ` to ` TxInputUtilTest ` and updated test assertions in ` StoreAPITest ` to ensure
updated method parameter order from ` collection . getName ( ) ` to ` collectionName ` in ` MongoTemplate . java ` to improve code readability
refactor zoom calculation in MapOverviewImageMouseHandler . java for improved readability to enhance code readability and maintainability by reducing redundancy
updated KNearestNeighborClassifier to include a Similarity parameter and modified the classification checkCorrectClassification method to use it to enhance the classifier ' s similarity
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query parsing and improve code readability
replace ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor . java ` to ensure the correct reason is used for
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated MTU request methods in ShadowBluetoothGattTest and ShadowBluetoothGatt classes to ensure correct handling of MTU requests
refactor ` TestPayloadNameRequestWrapper ` to use a dedicated method ` createServletOutputStream ( ) ` to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService . java to improve error handling and logging for unsatisfied link errors
replace HashMap with ConcurrentHashMap for mProcessingChains in ChannelProcessingManager to improve thread safety and performance in concurrent scenarios
updated error messages in Resources _ ja . java for clarity and consistency to improve user understanding of grouped groups in the application
updated the size condition from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and ` JDBCTypeMappingTest `
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal operations
refactor TerminalView to utilize AccessibilityStateTester and improve accessibility state handling to enhance performance and maintainability of the application
added support forSIDE _ NAVIGATION in command behavior checks in MenuBar and SideMenuBar classes to enhance functionality by allowing the button to be
removed the Disposable dependency from the subscribe method in PoloniexManualExample . java and added debug logging in WampStreamingService . java to simplify
added validation for energy limit type in UpdateSettingForEnergyLimitContractActuator . java and updated error messages in UpdateSettingForEnergyLimitContract
updated variable names from ` url1 ` to ` javaUrl ` in ` PostmanJsonBuilder . java ` and added protocol handling in ` Url
camel - 14284 : camel - soap - jaxb - add getter and setter for namespaceprefixref in soap jaxbdataformat
added a new constant ONE _ MINUTE _ MILLIS and refactored assertions in TestRange . java to improve code readability and maintainability
added security checks for the Jetty Solr runner in BasicAuthIntegrationTest . java and updated security data retrieval in ZkStateReader . java to ensure
added priceFeed parameter to TradesChartsViewModel constructor and updated TradesChartsViewModel to include it to allow customization of the price feed
refactor configuration retrieval in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a variable for consistency to improve code readability and
updated variable names and logic in NativeString . java for clarity to improve code readability and maintainability by using a more descriptive variable name
added file downloading and saving functionality to the FileDataStorageManager to enhance file management by allowing users to download files efficiently
updated the way the RandomAccessFile is created in MappedRawLog . java to set the length of the file channel to ensure the log file is
added a method ` checkIfRegistryRunning ` to check if the registry is running and created a retry mechanism in ` FileUtils . deleteFileIfExistsWith
replaced imports of OpenRocketLoader with componentPresetDao . startLoading ( ) in EditTest . java and Quick3dMain . java
removed unused variables and added @ SuppressWarnings ( " javadoc " ) annotations across multiple Java files to improve code clarity and reduce unnecessary complexity
added null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
added support for setting isolation level to TRANSACTION _ READ _ SERIALIZABLE in SQLExceptionCode , PhoenixConnection , and PhoenixDatabaseMetaData classes to
added a new method ` getTransactionAttribute ` to ` AbstractStepFactoryBean ` and modified exception handling in ` ItemOrientedStep ` and `
replaced ` CasClient ` with ` DirectCasClient ` and updated ` CasManagementSecurityInterceptor ` to utilize ` DirectCasClient `
removed menu item visibility for adding categories in ListFragment and updated navigation drawer in NavigationDrawerFragment to streamline menu item management and improve user experience
renamed method ` cancel ` to ` cancelMatchingOperation ` and updated method names from ` observeDownloadWorkerState ` to ` observeWorkerState ` to
pdfbox - 4071 : remove redundant null check , a suggest by valerybokov
updated the ` onFontSizeChanged ` method to use ` TypedValue . COMPLEX _ UNIT _ PX ` instead of ` size ` to
add a check for the validity of the ` fact ` variable in ` ConstantAnalysis . java ` to ensure that ` fact . isValid ( ) `
refactor DistBuildTargetGraphCodec , ConvertingPipeline , and VisibilityPatternParser classes to improve code organization and maintainability
return a new ArrayList instance instead of returning a new ArrayList instance to improve performance by avoiding unnecessary object creation
removed locking mechanism from the Liquibase class to simplify the code and improve readability by eliminating unnecessary locking
added a ` setRevision ` method to ` MicroserviceVersions ` and updated ` InstanceCacheChecker ` and ` TestInstanceCacheChecker ` to set
updated key and index retrieval logic in AbstractRetriever and TableRetriever classes to use String . format for consistency to improve readability and maintainability of the
camel - 15836 - camel - aws2 - s3 : add unit test for the s3 component configuration
removed TradeHistoryParamCurrencyPair parameter from getBitstampUserTransactions method and added a new method getBitstampUserTransactions to streamline
added error handling for NoSuchComponentException in getComponentInstance method to improve robustness by handling potential NoSuchComponentException
change the return type of the push ( ) method from void to boolean in PushBuilder , ApplicationPushBuilder , Stream , and Stream processors to allow
refactor LegacyAddressTest to use BufferedReader for reading legacy addresses to improve readability and maintainability of the test code
changed the access modifier of findDropTargetAt method from package - private to public to allow access to the method from other packages
added a new ` setupPushWarning ( ) ` method to ` DrawerActivity ` and refactored push warning handling in ` NotificationsActivity
added debug logging and improved exception handling in NettyAsyncHttpProvider . java to enhance debugging capabilities and ensure proper resource management when closing the channel
updated null checks in LdapPasswordPolicyEnforcer . java to use StringUtils . isEmpty for consistency to improve code readability and reduce potential NullPointerExceptions
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to an issue with PHOENIX - 2840
nifi - 118 : add timezone support for aboutdialect .
updated assertions in Splitter . java and modified the splitOwnedRanges logic in StorageService . java to improve code readability and maintainability by
removed unnecessary try - catch blocks in BeanContextSupport . java to simplify code and improve readability by eliminating unnecessary exception handling
removed redundant synchronization in CircuitManagerImpl . java to ensure thread safety when adding active circuits
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using a more specific exception type
flume - 129 : remove unused import from pollablesinkrunner and eventdrivesourcerunner
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve error handling and provide clearer context for authentication failures
refactor ContainerOrderFocusTraversalPolicy class to improve focus traversal logic to enhance code maintainability and readability
use int instead of double for getpointlength ( ) and getpointlength ( )
reformatted the constructor signature in CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor connection handling in SchemaCrawlerMain and Executable classes to improve resource management and error handling to enhance robustness by ensuring connections are properly closed and
change default tls protocol to tlsv1.1 for jdk16 and jdk16
corrected the spelling of " labels buffer " to " metadata buffer " in the IllegalStateException message to ensure consistency and accuracy in error reporting
updated audio stop method and logic in MediaManager . java to handle cases where mCurrentAudioQueuePosition is zero to ensure proper handling of audio queue
removed unnecessary conditional checks for cancelled and connection cancellation in HttpConnection . java to streamline logging and improve code readability
added ` @ Transient ` annotation to ` JpaPersistentPropertyImpl ` and corresponding unit tests in ` JpaPersistentPropertyImplUnitTests `
updated stack version assertions in UpgradeResourceProviderTest from " HDP - 211 " to " HDP - 2.1 . 0 " to ensure
trufflevm : change eval method to return object instead of symbol .
[ hotfix ] make proxy . isbinarytype public so that it can be use .
updated the default value of TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from "
refactor ` findProblem ` method in ` JavaEditor ` and update priority handling in ` JavaProblem ` and ` ParseError ` classes to improve
updated the default value of the DEFAULT _ OFFHEAP constant from DEFAULT _ OFFHEAP to DEFAULT across multiple classes to simplify the code
updated line separator handling in TableWriterTest . java to use a configurable line separator to improve maintainability and readability of the code
refactor DebugHelper class to improve code organization to enhance maintainability and readability of the code
added a boolean flag ` ownsTexture ` to ` ParticleEffect ` and ` ParticleEffect ` classes to control the ownership of textures in
updated configuration parameters in HiveConf . java to include additional LDAP configurations to enhance configuration flexibility for LDAP connections
( chore ) camel - datacatalog : fix checkstyle violation in datacatalog
added functionality to toggle and toggle soft input in DetailActivity . java to improve user experience by ensuring soft input is properly toggled and toggled
added unit tests for data table type conversion in DataTableTypeRegistryTableConverterTest . java to ensure correct handling of different data types in the data table
updated the size of the file system size from 500 to 50 in TestFileSystem . java to ensure proper resource management and prevent memory leaks
updated error message in ContentTypeManager . java to improve clarity and accuracy of error messages related to resource management
changed the ` dropSequences ` method from abstract to abstract and added ` MigrationFailedException ` to the ` dropSequences ` method across multiple database
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
added a variable variable ` f ` to the ` createField ` method call in ` DocumentBuilder . java ` to improve code readability and maintainability
[ freeplane ] fix hierarchicalicons to work with logical style
added a test method ` findOneAfterUpsertForNonExistingObject ` to ` MongoTemplateTests ` to verify the functionality of the ` findOne ` method
replaced direct calls to ` low ` with ` low ` and ` low ` in multiple Java files to improve code readability and maintainability by using
added statistics tracking and refactored broadcast intent handling in AppsCustomizePagedView , Launcher , and Launcher classes to improve intent
added createGraphics ( ) and dispose ( ) method calls in JavaSEPort . java to improve rendering performance and eliminate unnecessary data setting
update instructorfeedbackresultspagedata to use teamwithresponses . getteammembersfromroster instead of teammembersemail .
fix inventory . getwindowid ( ) to return the id of player ' s inventory
added a conditional check for the found state before breaking the loop to ensure that the loop only runs when a valid configuration is found
added ` returnType ` and ` returnTypeAnnotations ` to multiple parser visitor classes to improve code readability and maintainability by reducing redundancy
added support for blended tiles in TileMapRenderer and updated initialization logic in TiledLoader to ensure proper initialization of blended tiles based on configuration
[ java ] remove unused sunclass annotation from probe . java
updated the ` getArea ` method to use ` Math . abs ` and added null check for ` last ` and null check for ` last `
updated the initialization of lockOnSync and throttleRate in Throttler . java to simplify the code and improve readability
added superclass handling in PipeEventBus and updated method signatures in PipeBehaviourEmzuli and PipeBehaviourEmzuli classes to ensure proper event handling and
updated the timeout duration from 1000 to TIMEOUT in ZkController initialization to allow more time for the ZkController initialization
added a new test method ` passcode _ with _ client _ parameters ` to ` TokenMvcMockTests . java ` to verify the behavior of
added LengthFilter and KeepWordFilter to brokenOffsetsConstructors for LengthFilter , LengthFilter , and CharArraySet in TestRandomChains
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to streamline the test execution by eliminating unnecessary dependencies
use integer . tounsignedlong ( ) instead of int . tounsignedlong ( ) in llvmx86 _ 64bitvastart
replaced the use of ` btCollisionObjectArray ` with ` btCollisionObject . getInstance ` across multiple files to streamline collision object creation
added a new ` BUILD _ COPYRIGHT ` property and updated the ` OPENROCKET _ URL ` in ` AboutDialog . java
add getdistributedobjects ( ) method to jettyclientinstanceimpl and add test
added print statements for component , finCount , and inertia in FinSet . java and updated test cases in MassCalculatorTest . java to
updated memory usage calculation from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep . java to improve memory management by using
updated catch block from MetadataException to Exception in StandaloneSchemaFetcher . java and changed method name from setCompressors to setCompressors in Create
change the name of the delayedpayouttx output prefix to bisq co - founder
updated JsonLoaderTest to use json ( ) and added exception handling for big _ integer _ t to improve test reliability and ensure proper exception handling during
updated the minimum capacity check from 1 to 0x40000000 in ObjectSet . java to ensure proper handling of large table sizes
updated imports in ColumnSnapshotGenerator . java and added a null check for dataScale before setting decimal digits in ColumnSnapshotGenerator . java to ensure
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the code by removing unnecessary annotations
added security exception handling for querying URIs in FileHelper and TextHelper classes to improve robustness by handling SecurityException during query execution
added a new constant ` StyleWithMultipleAttributes ` and updated test cases in ` ShadowThemeTest ` and ` ShadowThemeTest ` to support multiple
updated the method call from ` - 1 ` to ` sheets . size ( ) ` in ` HSSFWorkbook . java ` and added new
change the theme color from primaryColor to elementColor in ManageAccountsActivity . java to ensure the correct theme color is used for better visual
updated the initialization of ` wrapped ` in ` DefaultEventBus ` to handle null replyHandler and simplified path resolution in ` DefaultPlatformManager ` to improve
added ` binaryCollationName ` and ` getCollateFragment ` imports to multiple database type classes to enhance database compatibility by allowing customizable database
added a default method ` whenType ` to the ` Tree ` class to provide a default implementation of ` Optional < T extends Tree ` for type
refactor navigation repository retrieval to use a new method for obtaining user view destination to improve code readability and maintainability by encapsulating destination
replace Response . OK with Response . temporaryRedirect in FeedREST . java to provide a temporary redirect for the application settings
[ hotfix ] [ kinesis ] improve error message when create non - serializable deserializer
camel - 16297 : camel - aws2 - jbang - add miss license header to license header .
replaced Thread . sleep with a try - finally block to ensure proper resource management and prevent potential memory leaks
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to improve clarity by reflecting the
replaced direct calls to _ endPoint . fill ( ) with a new read ( ) method in ProxyHandler . java to improve code readability and
replaced ` BufferUtil . allocate ( ) ` with ` ByteBuffer . allocate ( length 11 ) ` in ` ABCase1 _ 2 . java `
modified the ` prepareStreamsToUpload ` method to return a boolean value instead of void to improve clarity and functionality of the stream preparation process
updated order comparison logic to use Integer . compare instead of Integer . MAX _ VALUE in AbstractConfigLoader . java and TestMicroserviceConfigLoader .
added a new file ` PicOfDayAppWidget . java ` to implement functionality for updating app widgets in the application widget
cloudstack - 10297 : default value of internallbvmofferingid to 0 to avoid npe
updated HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil for handling non - equality conditions to ensure compatibility with HIVE
[ hotfix ] [ table - common ] deprecate class that be deprecate .
added user and password options to the NodeToolCmd and updated the JMXConnector to utilize it to enhance security by allowing users to access remote
removed redundant initialization of scratch in Stemmer . java to streamline code and improve readability
removed the hardware Accelerated (HardwareAccelerated ( ) ) parameter from the applyFromAppWidgetProviderInfo method calls to simplify the widget
do n ' t show view for 3d thumbnail in ggbapiw .
updated rotation positioning logic in GcodeRenderer . java to ensure that rotation coordinates do not exceed 180 to improve rendering accuracy and prevent potential errors
added " workspace " option to the DAEMON option and updated its usage in TerminalClient to allow users to set the workspace directory for better management
updated the file path from " options . apt " to " options . html " in CLIManagerTest . java to ensure the test file is
updated ScimUtilsTest to use JUnit 5 ' s PollutionPreventionExtension and updated test assertions accordingly to enhance test readability and
updated method signatures and variable names in OAuthConfirmationController . java to improve clarity and consistency to enhance code readability and maintainability by using a more
refactor session retrieval logic in HibernateIT . java to use assertTrueEventually for better event handling to improve test reliability by ensuring the session
refactor EventBusHook class to improve event handling logic to enhance code readability and maintainability
updated MultiPaintEventTest . java with new test cases to improve test coverage for multi - paint events
removed the final modifier from the mNewScale assignment in WorkspaceStateTransitionAnimation . java to simplify the initialization of mNewScale
refactor SyncFactory class to improve code organization to enhance maintainability and readability of the code
added uniqueKey field handling in LukeRequestHandler to track the name of a unique key in the schema
added roundBorderColor functionality to BorderEditor and updated EditableResources to use it in EditableResources and Border classes to enhance customization of border
add @ truffleboundary annotation to binaryparserexception . neverpartofcompilation ( ) method .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl
added logging statements for pending requests in GatewayRSocket , GatewaySocketAcceptor , and updated return values in PingPongApp to improve traceability
added Toolbar . OnMenuItemClickListener to RecentChatFragment to enhance user interaction by allowing users to view recent chats under construction
renamed ` InfoDropTarget ` to ` UninstallDropTarget ` and updated related methods in ` InfoDropTarget ` and ` UninstallDropTarget
replaced instances of ` getTail ( ) ` with ` push ( ) ` in multiple classes to improve clarity and consistency in scope management
updated API and EVENTLOG _ WIKI constants from " test " to " commons " in CommonsApplication . java to ensure compatibility with the latest
refactor index handling in Stmt . java to use a new method ` updateIndex ` to improve code readability and maintainability by reducing du
replaced ` Collections . sort ( ) ` method calls with ` sort ( ) ` for consistency across multiple configuration classes to improve code readability and reduce
added DateTimePatterns to the FormatData _ hr _ HR . java file to support various date formats in the application
added a call to clear the focus of the clicked view in DetailFragment . java to improve user experience by ensuring the clicked view is properly focused
replaced ` notifyDataSetChanged ( ) ` with ` spinnerDescriptionLanguages . setSelection ( position ) ` in ` DescriptionsAdapter . java ` and
updated time zone names from " WSST " to " WSDT " across multiple languages to ensure accurate representation of time zones in the application
added native methods for registering global , weak , and access fields in FastGetField . java to enhance functionality by allowing dynamic field registration and access
added default schema handling for UNION and NULL in ReflectData . java and updated test cases in TestReflect . java to ensure default schema is set
[ java ] increase test timeout for sedablockwhenfull test .
added a null check for the RClass before remapping it in ResourceMerger . java to avoid potential NullPointerExceptions when remapping resources
added default constructor to hapifhirdialect and hapifhirsqlserverdialect
camel - 14297 : http producer should send connection close header to http endpoint .
increased the timeout duration from 60 seconds to 12 seconds in BasicDistributedZkTest . java to allow more time for distributed operations to complete
[ hotfix ] [ table - planner - blink ] fix test failure in basereservationflowtest
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter class to improve code readability and maintainability
rename NestableNode to getFirstElementChild in multiple parser classes to improve code clarity and reduce casting overhead
[ calcite - 2424 ] add a new enum to the look up strategy resolver and add a test case
updated metaPortStart and dataPortStart values in ClusterEnvBase . java and added waitingToShutDown method in ClusterNode . java to
change log level from warn to info to provide clearer information about the absence of cached beans
set the content type to " application / octet - stream " in WebdavEntry . java to ensure proper handling of octet - stream content
added ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and created unit tests for ` LazyTraceThreadPoolTaskExecutor `
[ geot - 5258 ] distanceop should skip line that do n ' t exceed min distance
rename the variable ' required ' to ' requiredLabel ' in AbstractUITag . java to clarify the purpose of the variable ' required '
removed the next ( ) method from PurgingPartitionIterator . java to simplify the code by eliminating unnecessary method implementation
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil `
added abstract methods for getHeight ( ) and getWidth ( ) in BaseMonochromeBitmapSource . java to provide a standardized way to retrieve dimensions and
added validation for localVertices and updated localVertices assignment logic in Polygon . java to ensure localVertices has at least 3 points to prevent ArrayIndexOutOfBoundsException
replaced ` ObjectMapper ` instantiation with ` ObjectMappers . newDefaultInstance ( ) ` in multiple files to improve code maintainability and leverage newer ObjectMapper
fix a bug in the implicitcurve . evaluatedouble ( ) method that cause a nullpointerexception .
updated ` ExternalNameRecord ` to use ` int ` instead of ` short ` and ` int ` for reading ASCII characters to ensure correct handling of
fix typo in the description of the JMS destination type description
added logic to exclude username and password from login prompts in LoginInfoEndpoint . java and corresponding tests in LoginInfoEndpointTests . java to ensure
replaced ` remove ( listener ) ` with ` removeIf ( l - > l = = l ` in ` AbstractController . java ` to improve
added a switch case for actionToggleSpin in PieChartActivity . java to enable smoother chart interactions in the PieChartActivity
cloudstack - 10297 : kill vdiuuid if it fail to copy vhd
hbase - 24286 skip normalizing table if namespace have quota
updated import statements in AndroidInput . java and added a resize method in AndroidInput . java to improve code readability and maintainability by reducing redundancy
added a new method ` propertyValuesOf ` in ` PropertySupport ` to return a list of properties of a specified name to improve code readability
added JUnit Ignore annotation to ClientMapNearCacheTest . java to temporarily disable tests that are always failing and blocking PRs
fix the hopperhock not be able to place item in the world in the bottom of the fanhock . close # 119
added authentication dialog functionality to SsoWebViewClient to enhance user experience by providing access to authentication credentials
refactor test methods in TestStressIndexing2 . java to improve term document management and query handling to enhance code readability and maintainability
[ flink - 22559 ] [ table - planner - blink ] ignore upsertkafkatableitcase for now
replaced direct retrieval of typeList with computeIfAbsent method for improved performance to enhance code readability and maintainability by using computeIfAbsent
added a configuration option to accept single value as an array in DefaultEntityMapper to enable proper deserialization of single - value arrays in the mapper
updated localization message in VersionChangeLogs . java to include both UK , SL , and SSL to enhance localization support for better user experience
[ hotfix ] [ config ] use resourceutils . getstring ( ` ` cl . app . categories ' ' , ` ` cl . app
renamed the method ` visitExpressionInstanceOf ` to ` visitRelExpressionInstanceOf ` and updated its usage in ` ASTBuilderVisitor ` to improve clarity and
nifi - 114 : add mime type attribute to gethttp . gethttp ( ) for content - type header
[ te ] add toprovenanceentity ( ) method to resourcehistorytable
corrected the spelling of " exit " to " done " in HelpActivity and added a searchable option in SearchBookContentsActivity to improve
refactor NatsConfiguration class to improve code organization to enhance maintainability and readability of the code
refactor the ` invalidateStalePartition ` method to accept a ` MetastoreContext ` parameter instead of a lambda expression to improve code readability and
[ bug - 66298 ] fix viewresultsfullvisualizer to use buffer instead of boundedfifobuffer
updated icon resource from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple adapter classes to improve visual consistency by using a more
replaced ` getLong ( latestCounterIndex ) ` with ` getLongVolatile ( latestCounterIndex ) ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest
updated test method names and imports in MocksCreationTest . java to improve readability and maintain consistency in naming conventions
added a new constant DATA _ SOURCE _ NAME to CSVThirdEyeDataSource and updated the generateDetectionConfig method visibility in YamlDetectionConfigTranslator
updated the timeout duration for the awaiter calls from 10 seconds to 30 seconds to allow more time for the phaser to complete before proceeding
removed the BuildSlaveFinishedStatusEvent class and its associated methods from DistBuildRunCommand , DistBuildSlaveEventBusListener , and Dist
cloudstack - 10297 : use utf - 8 instead of utf - 8 for uuid template
add a test for depositing a workspace item without a workflow item
[ hotfix ] [ runtime ] use distinct ( ) instead of distinct ( ) in classloadersupportimpl
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating an unused method
refactor argument handling in SpecificCompilerTool and add a new test for ordering of flags in TestSpecificCompilerTool to improve command - line argument
added a null check for the table before deleting the directory in HiveMetaStore . java and updated test cases in TestHiveMetaStore . java
added new asynchronous execution threads and modified exception messages to use LinkedBlockingQueue instead of ExecutorService to improve responsiveness and provide clearer error messages for asynchronous
added a try - catch block around the dismissDialog method call to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a constant for task roles instead of a hardcoded string to improve code readability and maintainability by
add a reference to the currentConfInfo document in OperationSetTelephonyConferencingSipImpl . java to track the current conference
add clearentries ( ) method to logtree and update logmodel . update ( )
added checks for socket status in ChannelEndPoint . java to ensure proper handling of input / output shutdown scenarios
refactor SetNullableGenerator class to improve code readability to enhance maintainability and facilitate future updates
camel - 14265 : added support for use servlet transport in reportincidentroutes and reportinterceptorroutes .
updated import statements and modified form handling in NettyRoutingFilter . java and FormIntegrationTests . java to improve code readability and maintainability by
added API operation annotations for " hello " and " helloWithValue " in multiple service classes to enable the API to handle " hello " and "
replaced ` update ( ) ` method with ` update ( ) ` in ` Lwjgl3Application . java ` and modified the ` update
updated the FG _ FK color from 90 to 200 in UIUtil . java to improve the visual appearance of the FG _ FK
set mp3 . required to false in soundmanager . setaudioformats . mp3 ( false )
patch by jbellis ; review by jbellis for cassandra - 1449
added functionality to display and display the " preference " version in the PMD plugin and its components to enhance user experience by providing insights into the
[ hotfix ] [ test ] fix test failure in customserializationitcase
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future updates
added a new method ` isCellEditable ` to the ` GeneralTab ` class to provide a way to determine if a cell is editable based on
added an abstract method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and updated message formatting in ` JavaBuckConfig
added a temporary count variable and adjusted the vscales in VocalTractModifier and VocalTractScalingProcessor to optimize performance by reducing
updated import statements for BaseScalarUdfTest , TestUdfRound , TestGenericUdfTest , and TestGenericUdfConcat classes to
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthentication
update jme3 - testskinningcontrolrefresh to use animcomposer instead of animname
renamed ` NodeFilter ` to ` NodeCountFilter ` in multiple methods to improve clarity and consistency in naming conventions
updated the condition to check if the sync block fetch size is greater than or equal to the expected size of the sync block to ensure that the fetch
updated ` DebugExpressionParser ` to use ` getFloatType ( 128 ) ` and ` getFloatType ( 128 ) ` instead of ` 365 `
[ hotfix ] [ runtime ] fix exclusiondependency . finddependencies ( ) to not return empty dependency .
replaced ` tmp ( ) ` with ` dst2 ( v ) ` and ` lerp ( v ) ` in ` Vector . java ` to
initialize the ` args ` array with a default value of ` { } ` to initialize the ` args ` array to avoid null pointer exceptions
updated ` getLinkerArgs ` method to use ` args . linkerFlags ` instead of ` List ` to improve flexibility in handling linker
[ java ] add support for travis , travis , and appveyor in testproperties
added support for external LLAP query names in Hive configurations and updated logging in GenericUDTFGetSplits to enhance the clarity of
removed the import of ` java . io . File ` from ` TileAtlas . java ` to clean up the code and improve readability
do n ' t throw ioexception when write a stream on a closed stream .
updated the validateQuery method to include arguments as a parameter to improve error handling by providing more context about the validation failure
updated INDEX _ VERSION from 1 to 2 and refactored getTree method in LuceneExecutor . java to improve code readability and maintainability by
[ hotfix ] [ runtime ] fix kryo serializer not change default kryo registration
added null check before adding configuration types in BlueprintConfigurationProcessor . java and updated test cases in BlueprintConfigurationProcessorTest . java to ensure that
refactor Boolean value handling in MetaStoreDirectSql . java to use BooleanUtils for better readability to improve code maintainability and reduce boiler
added a call to hideCustomizationDrawer ( ) in Launcher . java to improve user experience by ensuring the drawer is hidden when necessary
refactor term vector warning handling in TermVectorComponent to use a constant for better readability and maintainability to improve code clarity and reduce duplication
updated logging statements in Compiler . java to conditionally log optimistic types based on environment settings to improve logging clarity and ensure logging only occurs when optimistic types
refactor Expect class to improve code organization to enhance maintainability and readability of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to provide a mechanism for accessing Docker Docker connections
added @ Tag ( " flaky " ) annotations to CloseableDoSFilterTest and CloseableDoSFilterTest classes to address flaky
camel - 14265 : camel - reactive - subscriptions should not throw illegalstateexception instead of illegalstateexception
refactor vectorization methods to use TezWork instead of MrTask to improve compatibility with TezTask in the Hive QL framework
updated constructor calls in StringAppender , LogDivertAppender , and LogDivertAppender to include a new boolean parameter to ensure proper initialization of the
fix npe in jmetertreemodel if no guipackage be available
[ gr - 24186 ] fix weak function call target for function that do n ' t work
updated multiple Java files related to XShareAuto , LoadClassNegative , LoadClassNegative , LoadClassNegative , ReadFromNoaccessArea , and
add ebean - server test for defaulttransactionthreadlocal . get ( )
added validation for operation handles in HiveStatement . java to ensure that invalid operations do not exist to prevent runtime errors
updated ALTER _ TABLE _ ALTER _ COLUMN _ ALTER _ TABLE _ ALTER _ COLUMN _ ALTER _ COLUMN _ ALTER _
camel - 15836 - camel - aws - secretsmanager : add unit test for camel - aws - secretsmanager
refactor SimpleTree class to improve code organization to enhance maintainability and readability of the code
removed the exception message from the error response in UserREST . java to simplify the error message for better readability
added a boolean parameter ` subTree ` to the ` fromContent ` method and modified the ` fromContent ` method to include a ` subTree
updated column width calculation in Sheet . java and added unit tests in TestHSSFSheet . java to improve column width handling and ensure correct behavior
added configPath parameter to the command execution in Builtins . java to provide additional context about the configuration in the command execution
replaced ` Set < Table > ` with ` Collection < Collection < Table > ` in the ` DotWriter ` and ` GraphExecutable ` classes to
updated the sshd image version from " sha256 " to " 1.0 . 0 " in TestcontainersConfiguration . java to ensure compatibility with the
do n ' t check hostid if they do n ' t exist
refactor DefaultGroupKeyGenerator to use BlockSingleValIterator for handling multi - valued columns to improve code readability and maintainability by reducing redundancy
refactor testSeekNegative to testSeekingExceptions and improve error handling in TestMultiMMap . java to enhance test coverage and ensure correct
refactored code to use NBTBC instead of ImmutableSet . Builder for better readability to improve maintainability and reduce boilerplate code
renamed the method ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity and consistency in method
refactor drag exit logic in CellLayout and DragController to use a private method to improve code readability and maintainability by reducing duplication
updated the ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` in ` ModifyRequestBodyGatewayFilterFactory ` to
added a new method ` isPackageAccessible ` to both ` ConstructorFinder ` , ` FieldFinder ` , and ` FieldFinder ` classes to ensure
change log level from warn to trace in LoggingHandler . java to improve logging granularity and reduce noise in logs
fix # 348 ( # 348 ) ( # 348 )
added options menu handling for gallery images in GalleryActivity . java to enhance user experience by allowing users to view gallery images more efficiently
refactor MongoDBServiceFactory to handle null service and instance variables to improve robustness by ensuring a single instance of MongoDBService is created when it is
added tests for code formatting behavior in InlineConstantMutatorTest . java to ensure correct behavior of inline constant mutators with specific boolean values
updated the ` decode ` method to include a ` Blackhole ` parameter and added a ` blackHole ` parameter to the ` decode ` method to
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
[ java ] use map . entry instead of array . value ( ) in devicethinghandler . getallunitstrings ( )
removed the clear ( ) method call from dbManager . getWitnesses ( ) in ManagerTest . java to streamline the process of clearing witness
[ hotfix ] [ table - planner - blink ] make jdbcpagesink log a debug message .
replaced ` getScriptStackString ` with ` delete ` and modified stack handling in ` NativeError . java ` to improve code clarity and maintainability
removed the check for the path name starting with " . " in DrillPathFilter . java to simplify the logic for determining if the path name
renamed ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before further operations
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to correct the font weight for
changed the visibility of ` fThreadGroup ` from ` volatile ` to ` volatile ` in ` FailOnTimeout ` and ` Timeout ` classes to
changed the visibility of the ` getValue ` and ` setValue ` methods from final to non - final in ` ValueResultData . java ` to allow
updated hash code generation in FuzzyQuery to use superclass ' s hashCode and equals methods to ensure correct hash code generation and avoid potential null pointer exceptions
removed debug print statements from PushedResourcesTest and PushedResourcesTest to clean up the code and reduce unnecessary console output
changed the return type of the ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` to simplify the method
updated the database driver version from " 2.1 . 1 " to " 2.1 . 0 " in tests to ensure compatibility with the latest database features and improvements
updated ` PersonDirectoryPrincipalResolver ` to use ` 0 ` instead of ` new HashMap < > ( 0 ) ` and modified principal creation logic to
change log level from info to warn in openwebnetbridgehandler .
replaced instances of ` intHash ` and ` longHash ` with ` hash ` for consistency across multiple hashing classes to improve code readability and
added a constructor to ` ThumbnailGenerationTask ` and updated bitmap handling in ` FileUploader ` to ensure that the ` ThumbnailGenerationTask
updated the condition in GroupSelectionQuery to check if the number of attempts exceeds the count limit to ensure that the loop does not exceed the maximum number
added a new file ` Bug1933922 . java ` that implements a recursive compilation mechanism using a HashMap to demonstrate and validate the behavior of
removed redundant conditional statements in multiple series and tokenizer classes to improve code readability and maintainability
updated character validation check from 33 to 32 in FileResolver . java to ensure correct handling of control characters in control characters
added requestFocus ( ) method call to Display . java to ensure proper focus management for the component
instructorhomepageuitest : add test data to instructorhomepageuitest
rename ` JsonParserAsync ` to ` JsonStreamParser ` in multiple files to improve clarity and consistency in naming conventions related to JSON processing
updated Crouton cancellation logic in DetailFragment . java and modified notification handling in MainActivity . java to improve user experience by providing clearer
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT . java ` to verify
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
replaced the direct execution of the Process with a ProcessBuilder for command execution to improve code readability and maintainability by eliminating unnecessary runtime execution
updated the hostname retrieval from getLocalHost ( ) to InetAddress . getByName ( " 127.0 . 0.0 " ) in HintedHandOffTest .
refactor subsystem retrieval logic in Metrics . java for improved readability and maintainability to enhance code clarity and reduce boilerplate to enhance maintainability
added assumptions to skip tests on macOS in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
refactor : remove unnecessary check for non - null property in jvmciversioncheck
refactor Mockito class methods for improved readability to enhance maintainability and facilitate future updates
refactor TestLargePageUseForAuxMemory . java for improved performance to optimize memory usage for improved performance
updated ` BinaryParser ` and ` PlainTextParser ` to use ` getSource ( ctx ) ` instead of ` getSource ( ) ` in ` Binary
added a new enum ` MultiPartFormDataCompliance ` and its getter / setter methods in ` HttpConfiguration ` , and created a new enum ` Request
added support for JDK - 17 in GradleDistributionManager . java to ensure compatibility with JDK - 17 features
added a new method ` addType ` to ` SnapshotControl ` and refactored the type addition logic in ` SnapshotControl ` to improve code
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
added null and empty check for runWith before returning it to prevent potential NullPointerExceptions when runWith is null or empty
added unit test for xaconnection . issamerm ( ) to ensure that xaconnection . issamerm be set to false
updated multiple Java files related to AudioDeviceInfoBuilder , MediaActivityManager , MediaCodecInfoBuilder , MediaCodecInfoBuilder , MediaCodecInfoBuilder
pdfbox - 4071 : do n ' t try to rotate image with a negative pixel , a suggest by valerybokov
updated mTintAmount assignment in TaskView . java to use mTintAmount directly to improve code readability and maintainability by reducing redundancy
added a new file ` SumZeroAggr . java ` that implements the DrillAggFunc interface to provide functionality for handling zero sums in
updated SQL query parameters in FirstValueFunctionIT and NthValueFunctionIT and NthValueFunctionIT to ensure consistency in data type handling
hbase - 16286 bucketcache . getallocationfailwarningmessage ( ) return a string representation of bucket allocator exception
added a null check for the propName before adding it to the properties map to avoid potential NullPointerExceptions when propName is null
changed access modifiers of ` mTouchSlop ` and ` mCanIntercept ` from private to ` @ VisibleForTesting ` in ` StatusBarTouch
add logcontainerstream ( ) method to dockerclient to keep stream open indefinitely
add unit test for mvstore cache performance
updated the primitive type from " L " to " J " in PrimitiveType . java to align with the new naming convention for better clarity
changed the access modifier of the delegatingApplicationListener method from public to static to allow the method to be called without needing an instance of
camel - 14263 : camel - rest - allow to set the body to null in the rest binding
added two new files , FileDeletingTasklet . java , TaskletJobFunctionalTests . java , and TaskletJobFunctionalTests .
update size keep drawable when plane companion be enable
[ hotfix ] [ table - planner - blink ] fix indexoutofbounds error
updated the ` sendEventToTest ` method to accept a state ordinal parameter instead of a string event tag to improve clarity and consistency in event handling
added checks for the presence of " Lavf / " in the User - Agent header and modified start / stop logic in multiple classes to ensure
refactor error handling in ErrorCheckerService . java to improve clarity and functionality to enhance error reporting and provide clearer error messages for better debugging
added conditional logic to add buttons based on the theme settings to ensure proper layout behavior based on the user ' s theme settings
added " libskia " to the list of supported skia links to enhance functionality by allowing dynamic preloading of the " libskia "
added support for unit tests in NetworkParameters . java to ensure compatibility with Google bitcoin ' s unittest library
added error handling for invalid format arguments in QueryCommand and corresponding unit tests in QueryCommandIntegrationTest to ensure proper error reporting when no format arguments are provided
updated the initialization of ` capacity ` and ` mask ` variables in ` IntIterator . java ` to use ` length - 1 ` instead of `
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method and modified the ` shouldVisitDeps ` method to include the
add support for override module name in the patch module file manager .
[ java ] remove protocol version check from election . getcandidatetermid ( )
updated OwnCloudClientManagerFactory default policy based on SAML authentication status to ensure proper handling of OwnCloud clients based on authentication status
added null checks for mapped table resources in ReadBatch , WriteBatch , and ReadBatchTest classes to ensure that missing table resources are not null before
use utils . close ( ) instead of try - catch in onmessagesubscriber and onmessagesubscriber and onmessagesubscriber . close (
refactor AnonymousAuthenticationFilter to use deferred contexts instead of direct context creation to improve code readability and maintainability by reducing redundancy
updated the ` removeActor ` method to include a ` boolean unfocus ` parameter to ensure that the ` removeActor ` method is only called when
refactor cloudConfig handling in SolrCLI . java to use a validConfigs variable to improve code readability and maintainability by reducing redundancy
add log level to netty http server ( # 10286 )
refactor DatumAliases , AbstractParser , Formattable , and Parser classes to improve code organization and maintainability
replaced ` update ( ) ` with ` SwingUtilities . invokeLater ( this ) ` in ` CodeDependenciesPanel . java ` to improve UI responsiveness
camel - 14257 : camel - groovy expression can now instantiate a groovy expression with a cache .
[ mng - 4071 ] remove dependency on managed versionless key from plugin dependencies
changed access modifiers of several methods from static to public in CliFrontendParser , ProgramOptions , ProgramOptionsUtils , and ProgramOptionsUtils classes to allow
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added ` TestSharedPreferencesTest ` with ` TestSharedPreferencesTest `
removed the storage alias retrieval logic from HttpsMessenger . java to streamline the process of obtaining the storage key from the certificate chain
[ java ] catch ClassCastException when convert json to response
changed the access modifier of the updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the
fix block . dropresources ( blockstate , blockstate ) to not drop item .
added native methods for retrieving and retrieving spatial location calculator configurations in DataOutputQueue and depthai classes to enable dynamic retrieval of spatial location calculator configurations
refactor multiple Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
replaced ` keySet ( ) . isEmpty ( ) ` with ` isEmpty ( _ root ) ` and added a new method ` isEmpty ( ) ` to
updated foreground and background method calls in AttributedStringBuilder . java to include additional parameters to improve clarity and maintainability of background rendering logic
updated fingerprint assignment logic in PeerSync . java and added system property in PeerSyncTest . java to ensure fingerprint is disabled based on system properties
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
refactor MongoTemplate and related tests to improve event handling and ensure proper application context management
fix serialization issue in collectionitem and settransactiontest
[ tika - 132 ] close inputstream in tika CLI to prevent resource leak
updated exception handling in TestCollectionAPIs . java to catch ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling by catching
removed unnecessary whitespace in the configuration loading process to improve code readability and maintain consistency
[ hotfix ] [ test ] fix typo in test
[ hotfix ] [ runtime ] fix checkstyle violation in jobservice
remove step from hmdatapoint . getstep ( ) and hmdatapoint . getstep ( )
updated logging statements and added exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of log messages and ensure
removed redundant call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline job scheduling and improve code readability
simonstewart : fix lameness in testgettextcontent
replaced static variables ` openStack ` with ` loggerTL ` and added ` loggerTL ` to manage logger initialization to improve thread safety and ensure proper
updated FunctionInitializer and FunctionInitializerTest to use @ VisibleForTesting and replaced JMockit with spy for unit testing to improve test reliability and maintainability
added a new method ` boxedTypeOrType ` to the ` Types ` class and updated subtype checks in multiple classes to improve type handling and
updated the handling of task orientations in RecentsView and removed the call to updateChildTaskOrientations ( ) in TaskView to ensure proper
hbase - 24335 use stream instead of stream in testflushfromclient . testflushfromclient . testflushfromclient
updated the cache track handling in TransactionExecutor . java to use the original repository instead of the track to ensure that the cache track is properly managed and
updated balance calculations in ` ContractProcessorConstant ` , ` TokenIssueProcessor ` , and ` Program ` classes to use asset issue fees to improve balance
refactor RealisticRenderStrategy to use URI instead of RocketComponent , Appearance , Texture , and refactor clearCache logic to improve cache
refactor image handling in Blit . java and add a new Bug7049339 . java file for testing graphics2D rendering to improve
added boolean flags for unselected and unselected styles and updated string width calculations in multiple classes to improve style detection and ensure consistent string width calculations across
updated ArrayList instantiations to initialize mappings and action lists with an initial size of 3 to optimize performance by reducing the number of elements in the list
removed the ` flags ` parameter from the ` queryImplicitIntentServices ` and ` queryImplicitIntentContentProviders ` methods to simplify method signatures and improve
refactor PingRequestHandler class implementation to improve code readability and maintainability
add asset : / / media / media / sample _ increasing _ timestamps . mp4 / sample _ increasing _ timestamps . mp4
[ te ] remove isoldfrmware ( ) method and remove isoldfrmware ( ) method
refactor AjaxElementLocator class to improve code organization to enhance maintainability and readability of the code
updated the condition in BoxLayout . java and DefaultLayout . java to include a new display check in BoxLayout . java and DefaultLayout . java to enhance
modified the JSON decoding logic in JsonDecoder . java and added a new test for reordering fields in TestJsonDecoder . java to ensure correct handling
replace notification . getValue ( ) with blockcache . releaselocation ( blockcachelocation , blockcachelocation , blockcachelocation )
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
add miss @ test annotation to droolsmvelparsertest . java
changed member variables from non - final to final in ContextRegisterListener . java to enforce immutability and ensure immutability of fields
updated ObjectHashSet to accept a load factor parameter and modified iterator reset logic to enhance flexibility in iterator management and improve test coverage
added default batch bytes and value length checks in SparkReduceRecordHandler , ReduceRecordSource , and ReduceRecordSource classes to ensure batch size
changed MODE _ WORLD _ READABLE and MODE _ PRIVATE from MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE
updated logging messages in JdbcProxyGenerator . java to include abort ( ) and modified connection handling logic in JdbcProxyGenerator . java to improve clarity and
updated the animation transition logic to use setImportantForAccessibility based on the state of mState to improve accessibility handling for workspace transitions based on
change log level from warn to debug in ProtobufLogReader . java to reduce noise in log output
updated scope substring logic in UaaTokenServices . java and added a new test in UaaTokenServicesTests . java to ensure that the scope
updated import statements in SchemaRetrievalOptionsBuilderTest . java and added a toString method in AvailablePluginsTest . java to improve code clarity and ensure
add a new interface ` ExecutableCommand ` that extends ` Command ` to provide a mechanism for executing executable commands in the kie - api module
remove jdbctableservice from camel - idempotent - consumer - to - jms
added padding getter methods in CellLayout and modified bitmap creation in Launcher to improve padding handling for better layout management
added a conditional check for the length of the ` sb ` before collecting the cands list to ensure that the ` cands ` list
replaced instances of ` SamlMetadataUIParserAction ` with ` Action ` across multiple files to improve type safety and maintainability of the code
added a method ` checkOpenPorts ` to check for LDAP processes using a specified port in ` LdapMockMvcTests . java ` to ensure proper
[ log4j2 - 1343 ] fix the issue that log4j2 - 1 should not be shutdown by default .
updated URL handling logic in Fetcher . java and HTMLMetaProcessor . java to improve URL filtering and enhance logging clarity
updated SolrQuery initialization from " * : * " to " name : samsang " in TestSpellCheckResponse . java to ensure correct
refactor console initialization to use reflection for compatibility with older Java versions to improve code maintainability and ensure compatibility with newer Java features
updated the access modifier of ` getVerticesColors ` method from public to private and modified the initialization of ` mloopcol ` to improve encap
update htmlreportgenerator to support timestamped report report
refactor datavalidatortest to use parameterizedtest instead of junit 4
pdfbox - 4071 : remove unused method from pdfparser . addmetadata ( )
added null check for bindStatus in FieldUtils and FieldUtils classes to prevent TemplateProcessingException when expression binding fails
removed debug print statements from JoglInput . java to clean up the code and improve readability
added a boolean flag ` allowExtractingPrivateFields ` to the ` FieldSupport ` class and updated the ` readField ` method calls accordingly to
replace " { name } " with " { name } " in WebDataHandler . java to ensure proper formatting of device names in the web data
replaced direct instantiation of Lookup with a lookup method for Java 8 types to improve flexibility and maintainability of the instantiation process
renamed the ` weights ` method to ` weightsByDouble ` and added a new method ` weightsByDouble ` in ` ZParams ` to improve
added Database parameter to writeCustomHTML methods across multiple writer classes to enable database - specific functionality for HTML writing
added assertion for null values in BTreeMap . java and modified key retrieval logic in BTreeMap . java to improve code robustness and ensure
updated exception handling in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and
do n ' t write zero file in profiler . heap . heap . zerofile
replaced ` stream . println ( ) ` with ` sendMessage ( ) ` in ` ChangeSet . java ` and ` Main . java ` to simplify
updated byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and removed generic record handling in HortonworksEncodedSchemaReferenceWriter
added imports for ItemReadListener and ItemProcessListener in multiple Java files to enable the use of batch - related listeners in the batch processing framework
updated formatting and formatting in AbstractProviderModule . java for consistency to improve code readability and maintainability
updated method calls in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser to streamline code and improve readability by eliminating unnecessary
refactor Test7005594 . java for improved functionality to enhance code maintainability and readability
updated error message formatting in ResourcesValidationProcess . java to improve code readability and maintainability
refactor TopKRollupPhaseOneJob class implementation to improve code readability and maintainability
cloudstack - 10297 : do n ' t try to find ip address for a virtual guest
add mcoptionutils . notifyguisizechange ( ) to control analog size change
updated method signatures and import statements in IterableSubject . java and IterableTest . java to use Iterable < T > instead of Object . asList to improve
camel - 14263 : camel - http - default - http : do n ' t try to decode a single character in the header .
added unit tests for the ` doInJPA ` method in ` ActivityHistorySQLServerStoredProcedureTest ` to ensure correct handling of count and
replaced direct calls to ` mSeekBarY . getProgress ( ) ` with ` mChart . setValueFormatter ( ) ` in multiple files to improve
replace ' z ' with ' INNOCUOS _ CHAR ' and modify character handling logic in CommentsParser . java to improve code clarity and
added @ SuppressWarnings ( " argument . type . incompatible " ) annotation to Platform . java to suppress compiler warnings related to argument type compatibility
[ hotfix ] [ runtime ] fix typo in tracelinearscan lifetime analysis phase
added a TODO comment to the Auto - generated method stub in NullAssertionValidator . java to clarify the purpose of the Auto - generated method stub
added import for RuleKeyAppendable and modified rule key handling in DefaultRuleKeyBuilderFactory to enhance rule key generation for better rule key management
[ java ] do n ' t try to create a system profile directory if it do n ' t exist .
refactor createThreadFactory methods in TestcontainersDockerCmdExecFactory . java to simplify thread creation logic to improve code readability and maintainability
updated the way messages are retrieved in HttpChannelOverHTTP and HttpReceiverOverHTTP to use the receiver ' s getMessagesIn ( ) method to
added a new attribute ` accept ` in ` ImageFileInputDialog . java ` to set the accept attribute to " image / * " to enhance
updated ElasticIndexWriter and TestElasticIndexWriter to use transport - related classes instead of node builders to improve code readability and maintainability
added details for witness class and class in ForkController . java to improve debugging by providing more detailed information about the witness class and class
added a new test class ` NullPointerAndEmptyArrayTest ` to validate the behavior of ` NullPointerAndEmptyArrayTest ` to ensure that the `
removed unnecessary dependency on generated source paths from the IjModuleRule to streamline the codebase by eliminating unnecessary dependencies
updated the ` constructWildcards ` method to accept a ` Function < String , String > ` parameter and added a new method ` constructSimpleWildcard
refactor alias validation logic in Vectorizer . java to use a LinkedHashMap for better readability to improve code clarity and maintainability by reducing redundancy
[ hotfix ] [ test ] remove exceptionthrowinggeolocationprovider . currentgeolocation ( ) .
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging errors when setting firmware
refactor getLangs method to return a Set of String strings instead of an array to improve performance and maintainability of language retrieval logic
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java for consistency to improve code readability and maintainability
hbase - 24286 disable table lock and takesnapshothandler now use tablelockmanager . gettablelockmanager ( )
[ j2kt ] add support for ` ` null ' ' and ` ` null ' ' for ` ` null ' '
added a test method to verify the behavior of the explorer ' s HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the explorer correctly
added a volatile boolean variable ` isSuspended ` and modified thread state handling in ` Thread . java ` and ` Test _ Thread . java `
updated JavadocVisitor and ReloadableJava8JavadocVisitor to use Javadoc . Hidden , Javadoc . Hidden , and Reload
camel - 14265 : camel - spring - produce : add test to verify that camel context be not empty .
removed redundant @ Override annotations from multiple security classes to streamline code and improve readability by eliminating redundancy
added moduleImport handling in Java2TypeScriptAdapter and updated eval method in EnumTests to improve module import management and enhance test coverage
use http : / / www . w3 . org / 2001 / xmlschema instead of http : / / www . w3 . org /
added functionality to display badged app label based on badge status to enhance user experience by displaying badged app labels based on badge status
added MouseWheelListener to handle mouse wheel movement in TestMouseWheelScroll . java to enable testing of mouse wheel interactions in the user interface
pdfbox - 4071 : close document to avoid resource leak
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests . java
change the type of ` VacucuumEnvironment . Location ` from ` Object ` to ` String ` in multiple classes to improve type safety and
removed unnecessary currency assignment in BitfinexAdapters . java to simplify code and improve readability
replaced HashSet with TreeMap and updated fields handling in JsonFormat . java to improve performance and maintainability of the code
added a check for enum types in JacksonXmlFormatMapper to ensure proper handling of array types in JSON output
updated variable names and logic for PARKED and SUSPENDED in VirtualThread . java to improve code readability and maintainability
updated DirectoryTaxonomyWriter and NameIntCacheLRU classes to use a new ` catTerm ` variable for better clarity to improve code readability and
refactor VetoableChangeSupport class implementation to improve code readability and maintainability
corrected the calculation of the Y - coordinate in BrowserContentPane . java to correct the positioning of the owner ' s Y - coordinate
pdfbox - 4071 : remove ` ` invalidpasswordexception ' ' from method signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper functionality
add close button to help button , close menu , and show menu
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated sleep durations in BackendInitializerHelper , TerminalClient , and GcodeParserUtils to include additional controller state checks to improve responsiveness and
updated condition checks in SwingStartup . java to use ReleaseStatus . OLDER instead of BuildProperties . LAST _ UPDATE to improve clarity and
added support for a generated file comment in the migration xml writer to allow customization of the generated file
updated command descriptions to include a wildcard for player names to enhance flexibility and usability of command usage instructions
deleted BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused filter classes to streamline the codebase
updated method calls from " nameVariableName " to " optionName " in OptionProcessor . java to ensure consistency in naming conventions across the code
added a condition to check for parallel classes in TestNGContentHandler . java to ensure proper handling of parallel suites in XML processing
routeinfomanager : use string . isempty ( ) instead of null = = null
refactor ( ctmethodimpl ) : remove static import of reflect . path
added serialVersionUID fields to multiple exception classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the shaBase64 method to accept a CONST _ SEPARATOR parameter and added a new test method for value verification to enhance flexibility in hash
updated parameter handling in Parameters . java to check for null values before parsing to improve robustness by preventing potential NullPointerExceptions
added a new file ` Person . java ` containing a private String name field to provide a structured way to identify a person with a specific name
patch by jbellis ; review by brandonwilliams for cassandra - 1449
updated the condition to check for time strings in AbstractClient . java to ensure consistent formatting and improve code readability
added assertions for time column , timeUnit , and totalDocs in SegmentMetadataImplTest and SegmentMetadataImpl to ensure accurate representation of metadata for better
replaced java . awt . Color with net . sf . openrocket . util . Color and updated the foreground color to use DARK _ RED
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to ensure proper disconnection handling
change defaultbeancontext to use class < ? extends Annotation > instead of string
simonstewart : add a test to verify that click on a page with double overflow
added a try - catch block around the dismissDialog method call to handle potential exceptions during dialog dismissal
added support for custom JNDI location in JTATransactionManager to enhance flexibility in managing transaction synchronization registry locations
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the ` Library ` class to simplify the codebase by eliminating unused functionality
renamed ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using more descriptive variable
[ beam - 10265 ] fix timestamp identifier in bigquery api api ( # 10220 )
replaced IllegalArgumentException with requireNonNull in Identifiers . java and DatabaseConnector . java to improve code readability and reduce boilerplate error handling
rename inputmap to inputmap in valuesresolver . coercevalueforinputobject ( )
added bounds checking for row and column boundaries in FlightConfigurablePanel . java to ensure that row and column indices do not exceed the table ' s
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness during motor selection
[ java ] add check for memberselector in unnecessarylocalbeforereturnrule .
refactor AbstractScriptExecutor to use ScriptEngineManager directly instead of ScriptEngineManager to improve code readability and maintainability by reducing redundancy
updated mathematical calculations and assertions in EuclideanDistanceSimilarity and EuclideanDistanceSimilarityTest classes to improve accuracy of distance calculations and ensure
patch by jbellis ; review by jbellis for cassandra - 1449
updated the ` relativize ` method to accept a ` Path ` parameter and added checks for ` path1 ` and ` path2 `
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to improve clarity and functionality of column size and decimal digits handling
[ hotfix ] [ test ] skip current writer head file .
replace ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpcImpl
renamed ` ErrorHandlerController ` to ` Error403Controller ` and added new classes ` Error404Controller ` , ` Error404Controller ` ,
replaced ` resetTerminal ( this ) ` with ` resetIf ( this ) ` in ` UnixTerminal ` and ` WindowsTerminal ` classes to ensure
updated Tiny . java to support new array tree constraints and modified JavaFixUtilities . java to ensure compatibility with new source tree structure and improve code
refactor connection acquisition logic in ConnectionPool . java to streamline connection management to improve code readability and maintainability by reducing redundancy
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in various configuration classes to improve clarity and consistency in
pdfbox - 4071 : do n ' t create tree if there be no tree
updated error message formatting in JavassistUtils . java to improve readability and maintainability of error messages
[ hotfix ] [ test ] fix largestreamlettest failure on slow ci server
updated the logic for setting extra pages based on shared preferences to improve code readability and maintainability by reducing redundancy
added error handling for broken gaussian image retrieval in AndroidImplementation . java to improve robustness by preventing crashes due to broken Gaussian rendering
removed the suppressNode ( ) method from BaseParser . java and added a SuppressSubnodes annotation in BaseParser . java to streamline the
refactor FDFParser initialization to use try - with - resources to ensure proper resource management and prevent potential memory leaks
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added shell command execution for input key event in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to streamline the
added JSON file handling functionality to the FileDumper class to enhance the file listing process by allowing dynamic URL generation
make profilerserver . resetresultsnotifiedflag private to improve code readability and maintainability
refactor texturehelper . loadimage to use loadloadedfeatures instead of loadtexturefromimage ( )
fix checkstyle violation in springboottestcontextbootstrappertests
updated random number from " 978179775008 " to " 9781797845005 " in RandomizersTest . java
updated the notification sound setting to use a ringtone URI for the notification sound to enhance flexibility by allowing users to set a specific notification ringtone
added a method ` reportLoopCount ( int count ) ` to the ` RootNode ` class to report loop counts to ensure that loop counts are
updated version handling in FinalizeUpgradeAction . java and modified clusterEntity merging method in ClusterImpl . java to ensure correct versioning of the cluster
cloudstack - 10225 : remove rangeid from rangeid search by regionid , not rangeid
removed redundant calls to streamManager . open ( ) in ItemOrientedStep . java to streamline code by eliminating unnecessary duplication
added a new file ` CountedLoopProblem . java ` containing a class that calculates the hash code based on a random integer to demonstrate the
[ gr - 30635 ] use array instead of metaspace in compilertovm . executecompiledmethod
[ gr - 16286 ] fix the issue of jvmcierror in the pendingfailurespeculationoffset
refactor KafkaStreamsTracing to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve code readability and maintainability by using more de
[ fix ] feedbackconstantsumquestiondetails to include received and received point
removed the call to DynamicColors . applyToActivitiesIfAvailable ( this ) from BaseApplication . java to streamline the application by eliminating unnecessary code
added thread management and stack dumping functionality in CloseRace . java to improve thread management and error handling for graceful termination
updated return value from ` val ` to ` val . intValue ( ) ` in ` IntPointField . java ` and added new test cases in
updated arc size calculation in MyButton . java to use a fraction instead of a hardcoded value to allow for dynamic adjustment of the arc size
updated image sizes from 768 to 640 in AddAndScaleMultiImage . java and adjusted ratioWidth from 720 to 640 to
rename ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` in SQL configurations to improve clarity and consistency in naming conventions
replaced the ` waitForStateTransitionToEnd ` method with a ` waitForLauncherCondition ` method in ` AbstractLauncherUiTest ` and ` WorkProfile
added imports for CasCoreAuthenticationPrincipalConfiguration , CasHttpConfiguration , and CasCoreTicketsConfiguration across multiple test files to ensure
updated byte array handling in Volume . java to use DataIO . getLong for reading long values to improve accuracy in reading long data
camel - 14254 : camel - http - fix camel - http to use direct : echo instead of direct : echo
refactored the creation of ClasspathInfo in DeclarativeHintsParser to use a builder pattern to improve code readability and maintainability by
add a new module ` mediascriptscopeprovider ` that expose the ` audiomanager ` and ` voicemanager `
added methods to retrieve and set the layer manager in AnimComposer and updated AnimEvent to utilize this new method in AnimEvent to
added a null check for the queue in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java to improve code robustness and
added null checks for mapOp and mapWork in MapRecordProcessor and TezProcessor classes to ensure robust handling of null values and improve error logging
[ hotfix ] [ cylinder ] move center method to cylinderregion # setcenter ( )
refactor TestBadUseCases to use JUnit ' s ExpectedException for better error handling to improve clarity and maintainability of test code
updated the query execution logic in QueryExecutorImpl . java and added a new test case in StatementTest . java to improve query handling and ensure correct
do n ' t try to customize a security environment if it do n ' t exist .
updated the API endpoint endpoint in ReviewInterface . java to include the rctag to ensure compatibility with the newer Android version of the API
refactor test cases in Test . java to improve code readability and maintainability
updated the parameter of PBEKeySpec from blkSize * 8 to keyLength in PBES2Core . java to ensure the correct key
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to ensure proper handling of section definitions in the document
added speed calculation and accuracy checks in GpsLoggingService . java and updated accuracy checks in GpsLoggingService . java to improve accuracy of location
removed debug print statements from TableLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 244 )
refactor InsightFilter to use WeakReference for rootNameFn and sourceFilterFn to improve memory management and avoid potential memory leaks
removed unnecessary sorting and addition logic from AllAppsList . java to simplify code and improve readability
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` in ` SettingsActivity ` and removed the ` ThemedPreferenceActivity ` class to simplify
updated the name of the valueClass from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
fix typo in assertrootarcs ( )
added assertions to verify security policy existence and file existence in JstatdTest . java to ensure that the security policy is valid before proceeding
camel - 14284 : camel - olingo2 component should use superclass . getconfiguration ( ) instead of super . getconfiguration ( )
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output for better readability
add a method to publish an image by http to the xmpp client
camel - 14263 : camel - netty - do n ' t allow channellocal to be remove from the channel in the connection pool .
[ hotfix ] [ table - common ] fix malformed host name in urlspliturl
remove system . setproperty ( ` ` org . apache . jasper . compiler . disablejsr199 ' ' )
added null string handling in CSVRecordReader and related classes to ensure proper handling of null values in CSV format configurations
added LiquibaseService annotation to multiple connection classes to ensure compatibility with Liquibase service management
updated the cursor type of ` addImportedStaticFieldNames ` from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableName
[ hotfix ] [ table - planner - blink ] add topic to commandtriggerhandler and statetriggerhandler
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align with the new
updated case statements for " zkCredientialsProvider " and " zkCredientialsProvider " to " zkCredientialsProvider
fix mana mana tablet not work on mana
added a method to set the identifier collection in P25P2DecoderState . java to ensure the current call event reflects the correct identifier collection
removed the import of HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter from TestRandomChains . java to streamline the code
updated the thread pool name from " - % d " to " deriveKeyWithScrypt " in ScryptUtil . java to ensure consistency in
refactor GeneratedCode class to improve code readability to enhance maintainability and facilitate future updates
corrected a syntax error in the assertion statement to improve code readability and maintain consistency
removed the shareWithMeIcon from the view in LocalFileListAdapter . java to improve user interface by hiding the share view when the share is
updated stylesheet link from HTTP to HTTPS in multiple files to enhance security by using secure connections
updated ` RouterFilter ` , ` RouterServerListFilter ` , ` RouterDistributor ` , and ` RouterServerListFilter ` classes to
updated assertions in TestIndexWriterMergePolicy to include index and segment counts to improve debugging by providing more context in assertions
[ hotfix ] [ runtime ] deprecate multilayer perceptron and multilayerperceptron
[ valve ] fix npe in crawlersessionmanagervalve when multiple context - aware
modified the ` getJspApplicationContext ` method to include security checks before returning the JspApplicationContext to enhance security by ensuring the application context is
updated RocketComponentConfig to use minL and maxL for minL and maxL and length calculations to improve accuracy in calculating the minimum and
updated NonceService and OpenIDAuthenticationProviderModule to use Scopes . SINGLETON for binding NonceService to improve dependency management and ensure
updated child link updates in FileWrapper . java to include random and hasher links to ensure child links are updated correctly based on user context
removed unnecessary HttpMethod parameter from the doExecute method and simplified URL construction in SpringCloudPlugin . java to improve code readability and maintainability by reducing
increase test timeouts in retrievalblockingmessagestoretests
added a new boolean variable ` mShiftCodesAlwaysOverride ` and modified the logic to conditionally override the ` mShiftCodesAlways ` based on
[ iotdb - 4071 ] fix zk heartbeat monitor to check if the node be currently the leader for a cluster .
corrected a syntax error in the conditional statement to improve code readability and maintain consistency
updated the filtering condition in AbstractKerberosDescriptorContainer . java to use identity . isReference ( ) instead of identity . getName ( ) to simplify the
updated method parameters from ` AbstractCommandOptions ` to ` noop ` across multiple classes to enhance flexibility by allowing the creation of artifacts without caching
added a delay of 3000 milliseconds before catching an IOException in TestListenTCPRecord . java to ensure proper handling of InterruptedExceptions during
fix a bug in the patch extension method that cause an arrayindexoutofboundsexception .
updated RawNativeLibraries to use Set instead of Map to improve performance and simplify library management
added attribute for " apply - sequence " and " ignore - send - failures " in DefaultRouterParser and AbstractChannelNameResolvingMessageRouter
removed unused ` x509PublishUrl ` and ` x509ViewName ` fields from ` ClientKeyPublisherMapping ` and ` JwkViewResolver
refactor the initialization of the readers array in QueryComponent . java to improve code readability and maintainability
updated the ` addParser ` method to use ` Double2Parser ` instead of ` ValueSourceParser ` to improve parsing accuracy by using a more
removed conditional check for focus and pointer events in the return statement to simplify the code for better readability and maintainability
removed unused variables from Highlighter , SpanGradientFormatter , and TokenSources classes to streamline code and improve readability
cloudstack - 10297 : update cloudstack api to use uuid instead of string concatenation
added conditional annotation for " flowBuilderServices " in CasMultifactorAuthenticationWebflowConfiguration and modified CompositeProviderSelectionMultifactorWebflowConfigurer to
updated WriteJdbcPTest and WriteJdbcPTest to increase database connection limits and refactored setupClass and setupClass methods to improve performance and
removed null and empty check for the " editor . laf " pref in DefaultPlatform . java to simplify code and improve readability
replaced calls to ` getStateEntity ( ) ` with direct calls to ` getStateEntity ( ) ` in ` ServiceComponentHostImpl . java ` to
removed conditional logic for setting left and right margins in FloatingTaskView . java to simplify code and improve readability by eliminating unnecessary conditional checks
added conditional logic in RootFolder . java and updated status line setting in NavigationShareTab . java to improve user experience by providing a clearer status
[ hotfix ] [ runtime ] remove unused variable in cpucallgraphbuilder
bugfix : use deftoolbar instead of 0 for perspective . probability
updated HomekitImpl to implement NetworkAddressChangeListener and added NetworkAddressChangeListener to enhance network address handling and improve logging clarity
updated lease handling in TestHDFSEventSinkOnMiniCluster to use leaseRenewalTime instead of LeaseManager to improve accuracy of lease renewal
updated ` arg . prefixHeader ` and ` arg . linkStyle ` to use ` Optional . absent ( ) ` instead of ` Optional . absent
added null check for the exception message in ExceptionHandlerRegistryFactory to prevent potential NullPointerExceptions when handling exceptions
updated the ` nextID ` variable to be volatile and modified its usage in ` DirectoryTaxonomyWriter . java ` to ensure thread safety and improve performance
[ issue AMQ - 5071 ] fix test failure in jmsqueuecommtransportnetworkbrokertest
updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and ` SourcePath ` classes to implement ` Has
replaced StringBuffer with a direct string concatenation method in Arrays . java to simplify code and improve readability
added default index field name to facetFields in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader and TestOrdinalMappingAtomic
updated the calculation of epoch milliseconds in Instant . java and added a new test for the sampleEpochMilli method in TestInstant . java to improve accuracy
use name ( ) instead of getattribute ( ) in oglesshaderrenderer and lwjglrenderer
added block update script setting in CopyPaste . java to enhance user experience by allowing scripts to be blocked
added a new file ` TestCMoveLimitType . java ` to implement a test method for ByteBuffer manipulation to facilitate testing of character positioning in
[ java ] add a method to check if a recorder be present in the record configuration .
camel - 16297 : camel - spt parser should use scaletoken instead of scaletoken to avoid arrayindexoutofboundsexception
updated vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java and AudioSystem . java to reflect the
refactor color handling in Main . java and VersionCommand . java to improve code readability and maintainability by encapsulating console creation logic
refactor ` InputStreamBinder ` and ` NextcloudRequest ` classes to utilize a new ` EncryptionUtils ` for token validation to improve code
added error handling for EOFException in Http11InputBuffer . java to ensure proper error reporting for invalid input
added unit tests for deleting members and non - existent groups in DefaultGroupProviderTest . java to ensure proper functionality and error handling of member deletion
removed unnecessary array creation in multiple classes to improve code readability and reduce boilerplate
deleted the V2ReplicationProtocol . java file to remove unused replication protocol implementations to streamline the codebase
replaced ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` with ` ImmutableSortedSet < SourcePath > compileTimeClasspathSourcePaths `
added new classes ` ConstructorArgsDemo ` , ` FinalDemo ` , and ` StupidFinal ` , and ` StupidFinal `
refactored directtemplatefeaturecollectionfactory to use threadlocal instead of a hardcoded list
updated assertion in WriteResponseHandler to check if responseCount does not exceed the maximum replication factor to ensure that responseCount does not exceed the maximum allowed replication
added a null check for the getIndexNumber ( ) method in ItemRowAdapter . java to prevent potential NullPointerException when accessing the index number
rename methods from " showAnchestorsShown " to " showAncestorsShown " across multiple classes to improve clarity and consistency in naming convention
added a check to return early if the app ' s width is less than 12 to prevent unnecessary processing when the app is too small
updated the comparison of ` getChangeLog ( ) ` to ` equals ( changeLog ) ` in ` ChangeLogParameters . java ` and added
changed the ` loggers ` map from static to final in ` LogFactory . java ` to ensure that the ` loggers ` map cannot be accessed
updated the return statement to return the base plot instead of the original plot to ensure the correct plot is returned for the current plot
camel - 15836 - camel - rest - server : add initialcreation flag to create upload directory .
added a boolean parameter ` sendStatus200 ` to various ` ServerGenerator ` , ` ServerGenerator ` , and ` ServerFCGIConnection ` classes
added a check for the length of the comment before proceeding with multi - line comments to ensure that the comment is not empty before proceeding with
added imports and modified file type management in BuckModule . java to ensure proper handling of file types in the Buck module
replaced specific imports with a wildcard import for functionalities in ComposedUtil . java to simplify import statements and improve code readability
updated error messages in RTMGenericCommandLineOptionTest and TestUseRTMLockingOptionTest to use a constant for unsupported CPUs to improve
updated formatting and formatting in AccountsActivityTest . java to improve code readability and maintain consistency
refactor Player class to improve code organization to enhance maintainability and readability of the code
added an import statement for ChannelTypeUID in AbstractModbusOSGiTest . java to enable the use of Mockito package imports in the
do n ' t use nextElementindex instead of nextElementindex in polyglotexceptionimpl . java
added a resetter to ` RuntimeEnvironment ` and modified ` ShadowFontsContract ` to set the system context to null in ` AndroidTestEnvironment
added ` toMillis ` method to ` TimeGranularity ` , modified ` endDateTime ` , and ` PinotDataSourceMaxTime `
refactor control flow handling in ControlFlow . java to improve null safety and clarity to enhance code robustness by preventing potential NullPointerExceptions
updated assertions in Assert . java to use array length instead of array . asList and improved error message formatting to enhance code readability and maintainability by
fix wrong click type in window click logic .
corrected the index calculation in MeshBuilder . java to correct the index calculation to ensure proper handling of negative index values
nifi - 12626 : remove controllerserviceprovider from processscheduler . processcontext ( ) so that it do n ' t need to be this
added support for plugin properties in KotlincToJarStepFactory and created a test for it in KotlinLibraryIntegrationTest to enhance plugin management
updated the RESCROLL _ DELAY constant to use PagedView . PAGE _ SNAP _ DELAY instead of a hardcoded value to
added functionality to refresh shortcuts based on user permission to improve user experience by ensuring shortcuts are refreshed when necessary
added case statements for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enhance functionality for handling HISTORY _ SEARCH
added null check for cname in CoreAdminHandler . java and updated test cases in CoreAdminHandlerTest . java to ensure that null core names
added marker selection functionality to the NearbyMapFragment to manage the state of the map to improve user experience by disabling marker selection during
added exception handling for Throwable in FileSyncAdapter . java to improve error reporting for better debugging
refactor test assertions in TestMemoryAwareness . java to use a OutputAnalyzer for better error handling to improve code readability and maintainability by
updated the refill and findNextUpdatable methods in FeedQueues . java to include a Urgent load check before processing feeds to
[ java ] add thread verification for defaultdrmsession and defaultdrmsessionmanager . setplayingthread ( )
updated package type handling in AndroidBinaryDescription and added a setPackageType method in AndroidBinaryBuilder to ensure consistent formatting of package types and resource compression
use application / xml instead of text / xml in test
updated the initialization of ` confFile ` to use ` INSTANCE . confFile ` instead of ` configFile ` to improve code readability and maintain consistency
removed sleep 5 from the waitUntilReadyAndTimeout method call in HostPortWaitStrategyTest . java to simplify the test execution by eliminating unnecessary sleep
changed the data type of getGroupingIdValue from int to long in HiveExpandDistinctAggregatesRule . java to accommodate larger number of distinct groups
added headless exception handling for headless graphics in Toolkit . java to ensure proper exception management for headless environments
updated condition in ExoflameFurnaceHandler . java to check if currentRecipe matches the current recipe to ensure that the furnace
[ hotfix ] [ solver ] add movethreadcountdescription to defaultsolver and defaultsolver
fix : do n ' t select wrong resource with same sp name
added a new test class ` Issue582Test ` for testing the ` Fun . Pair ` functionality to ensure the correctness of ` Fun .
[ native ] do n ' t throw an illegalargumentexception in native
refactor LoadingCache class implementation to improve performance and maintainability of the caching mechanism
removed the " AvoidNonConstructorMethodsWithClassName " rule from NamingRulesTest . java to streamline the test by eliminating unnecessary naming rules
improve error handling for element selection in ExpectedConditions . java to improve robustness by catching StaleElementReferenceException during element selection
refactor ` ViewExistsPrecondition ` , ` DatabaseSnapshotGenerator ` , ` JdbcDatabaseSnapshotGenerator ` , and ` DatabaseSnapshotGenerator ` classes to
refactor DOMUtil class to improve code structure to enhance maintainability and readability of the code
added logging functionality for matrix transformations in TaskViewUtils . java and created a utility method in Utilities . java to improve debugging and traceability of
changed FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a walk method to ` TempFSTTermsReader ` and modified ` TempTermOutputs ` and ` TempTermOutputs ` to handle
added SolrQueryRequest parameter to several create methods across multiple augmenter factory classes to enhance functionality by incorporating request handling in Solr
added SQL statement handling and SQL state checks in SingleTableMySQLTriggerTest . java to ensure proper handling of null values in Post queries
refactor ` FieldValueHitQueue ` and ` TopFieldCollector ` to use a new method ` setComparator ` to improve code readability and
updated string literals in PhoenixQueryBuilderTest . java to use a single quote for better consistency to enhance code readability and maintainability by using a
added Spark initialization call to the init method in RequesterTest . java to ensure proper initialization of the Spark instance
added methods to save and manage the total storage pool in DynamicPropertiesStore . java to improve resource management and error handling during storage operations
updated AssetsController and AssetsControllerTest to include NinjaProperties and modified URL handling in AssetsControllerTest to improve file handling and
updated the method call from ` getPosition ( ) ` to ` getMapMarkKey ( ) ` in ` MapMarksManager . java ` to
added TokenRewriteStream parameter to multiple methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance constraint handling by incorporating token rewrite functionality
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to simplify method signatures
updated variable names and logging messages in JxBrowserManager . java and added error handling in FileUtils . java to improve code readability and handle potential
updated image file creation logic to use equals instead of equals for comparison to improve code readability and avoid potential NullPointerExceptions
updated the method call from ` getBridgeUID ( ) . getId ( ) . getId ( ) . getId ( ) ` to ` getUID (
[ hotfix ] disable flaky test on github
refactor SSL context initialization in OpenWireConnectionTimeoutTest . java to use static constants for SSL configuration to improve code readability and maintainability by
updated log level from warnThenDebugLogger to stackTraceWarnThenDebugLogger and added handling for NaN values in DynatraceExporterV2 . java
added a call to remove the session ID from the session info to ensure that the session ID is properly removed from the session information
added hostname setting for alerts in HeartBeatHandler and updated log message formatting in AlertReceivedListener to improve alert management by ensuring hostname is set
simplified the return statement in ChannelEndPoint . java to improve readability and maintainability of the code
chore : move kmodule . xsd from kie / api to kie / api / kmodule . xsd
added unit tests for the MediaPlayer ' s seekTo method in ShadowMediaPlayerTest and implemented a seekTo method in ShadowMediaPlayer to ensure proper functionality
updated method names from createTask to createThrowingTask across multiple executor classes to improve clarity and accuracy of task creation methods
added a conditional check to set the border of the tabCloseButton based on the AQUA _ LAF flag to ensure the tabCloseButton is
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 151 - jdk15on
refactor xstreamutils . createxstream ( ) to make it easy to configure the type of xstream
added validation for diamond application types in Attr . java and created a new DiamondRaw class in Neg12 . java to improve error handling and provide
refactor RelOptUtil and RelOptUtilTest classes to improve code readability and maintainability
updated condition checks for ` id ` and ` value ` in ` Http2Settings . java ` to ensure that ` id ` and ` value `
deleted the test file ` Issue664Test . java ` and removed the ` Issue664Test . java ` file to streamline the code
added error handling for session insertion in SessionsPoolTest . java to ensure proper session management and error management
[ geot - 4071 ] fix geojsonwmsbuilder to start / end root object
removed the setIndex method from PopupMenuButton . java to simplify the code and improve readability
added a method ` canCurrentlyManuallyUnstash ( ) ` to check if the state can be manually unstashed to
camel - 14263 : camel - jbang - remove unnecessary ' customid ' attribute from managed camel context
modified the ` getEventMismatchMessage ` method to accept a ` waitForExpectedCount ` parameter and modified event handling logic to include a ` waitForExpectedCount
added a new file ` HeaderFixer . java ` that implements a header file processing mechanism using ` FileProcessor ` to provide a mechanism for processing
added broadcast permission constants and updated widget binding logic in Launcher . java and LauncherProvider . java to enhance user experience by allowing users to receive
deleted the SuperJumperAndroid . java file from the project to remove unused code to streamline the project
updated return value from true to isDistributed ( ) in SystemTableScan . java and modified test cases in TestStarQueries . java and TestStar
removed multiple interfaces KeyValuesProvider , ObservationConventionAware , and Observation classes from the Observation class to streamline the codebase by eliminating
add missblock to the processidrematches ( ) method and remove it from the registry manager .
updated calculations for base values in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to accept a long type to ensure correct arithmetic operations for long values
added caching mechanism for data format strings in HSSFCellStyle . java to improve performance by reducing redundant calculation of data format strings
updated the query string in RemoteAuthenticationEndpointTests to include username and origin to ensure proper filtering of user credentials in the response
replaced ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java ` to correct the logic
updated logging format in Launcher . java to include container and workspace information to improve logging clarity and ensure proper page indexing for the launcher
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
remove deadlocktest since it be no longer need .
added null checks and improved debug logging in BugContentProvider , BugGroup , and BugGroup classes to enhance code robustness and provide clearer diagnostic
added a new menu item for reopening the JavaScript browser in JavaScriptEditor . java and updated server handling in JavaScriptServer . java to improve user
added a new error message for duplicate output specifications in the SemanticAnalyzer and updated related methods to improve error handling and provide clearer diagnostics for
added null check for the entry listener in BasicTest . java to ensure proper handling of null values in the entry listener invocation
fix coordinatearrays . reverse ( ) to return 0 when there be no coordinate .
updated the method call from ` setOpen ( ) ` to ` setOpen ( isOpen ( ) ` in ` ToolbarPanel . java ` to
added a new variable ` first ` to ` TestPayloads . java ` in ` TestPayloads . java ` to set the first value to
refactor overview mode handling in Launcher . java to use showOverviewMode ( true ) instead of enteringOverviewMode ( true ) to simplify the
[ hotfix ] [ test ] fix test failure in networkroutetest
change the return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure the correct value is
updated variable declarations in NestedArithmeticTest . java and added @ SuppressWarnings ( " unused " ) annotation in AMD64FloatConvertNode . java to
updated ` HttpClientRequestImpl ` to use ` true ` instead of ` writerIndex ( ) ` in ` HttpClientRequestImpl . java ` and modified
updated the regex pattern in GetMavenDependenciesTask . java to replace " analyzers - " with " analyzers - " to ensure correct handling of
pdfbox - 4071 : remove unnecessary type cast from getdictionary ( ) , a suggest by valerybokov
removed unnecessary print statement in ReferenceUtil . java to simplify code and improve readability
[ flink - 24186 ] [ table - planner - blink ] refactor visibilitypredicate to use visiblefieldenvironment . querytype
added support for dynamic configuration of the JSON RPC HTTP port in multiple classes to enhance flexibility by allowing dynamic port assignment based on configuration
added a check for the type of the folder before removing it from the drag controller to avoid potential ClassCastException when removing the drop target
refactor stub jar generation logic into a separate method ` createStubJar ` to improve code readability and maintainability by reducing duplication
added new Feature instances for setup wizard and workflow features in GettingStartedTab and StartPageTopComponent to enhance user understanding of the setup wizard and workflow
[ hotfix ] [ cassandra ] remove redundant call to schedulewithfixeddelay ( )
removed unnecessary casting of booleanValue ( ) in OnlineTestCase . java to simplify the code and improve readability
updated return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure consistency with user authentication requirements
refactor HttpChannelState to streamline task execution and error handling to improve code readability and maintainability by reducing redundancy
updated CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to simplify the class structure and improve performance
updated regex patterns for table header separators in TableBlockParser . java and added a new test case in TablesTest . java to ensure correct
updated the return value from 32.0 f to 31.5 f in the Camera class to reflect the latest version of the camera
added a preference to start on boot up in GpsSettingsActivity and updated return values in Utilities to ensure compatibility with the latest GpsSate
updated the client secret value from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to ensure compatibility with the latest API changes
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include a new parameter name in MySQLStoredProcedureTest and Postg
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race conditions
refactor ` getInputPinotFS ` , ` getOutputPinotFS ` , and ` getOutputPinotFS ` methods to use ` PluginManager
added locale handling in TimeLineCursorAdapter and TimelineArrayAdapter and TimeLineCursorAdapter , TimelineArrayAdapter , and TimeLineCursorAdapter
added MetalLookAndFeel import and set the Look and Feel in bug8032878 . java to enhance the visual appearance and appearance of the application
added a ` @ PreDestroy ` annotation to the ` pingAtRegularIntervals ` method and modified the ` pingAtRegularIntervals ` method
updated error message retrieval from ` getMessage ( ) ` to ` getReasonPhrase ( ) ` in ` GlobalErrorHandler . java ` to simplify error handling
updated method names from ` module ` to ` from ` across multiple classes to improve code readability and maintainability by using a more descriptive
updated exception handling in PinotAdministrator . java to catch CmdLineException instead of CmdLineException to improve error logging for better debugging
replaced ` super . equals ( o ) ` with ` equals ( o ) ` and added ` hashCode ( ) ` methods in ` Subject ` to
updated variable names from " RIGHT " to " END " in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and
updated zoom level limits from 10 to 24 in BasicMapViewer . java to adjust zoom levels for improved performance
added processUser and processUserGroups fields to the DrillRoot class to enhance user management by incorporating process user and group names
replaced instances of ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` across multiple files to simplify permission checks and
added argumentExtractors parameter to the DelegatedClientAuthenticationAction class and updated related classes to utilize it to enhance flexibility in managing command - line
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure immutability of
fix issue where tilesizechanger do n ' t need to destroy the cache
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline code by eliminating redundant operations
refactor cleanEntriesForFeeds methods to use a list of feeds instead of a single subscription to improve code readability and maintainability by
replaced ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to streamline authentication handling
nifi - 12626 : use temporaryfolder instead of system . gettempdir ( ) in test
refactor : make sure l , e1 , e2 do n ' t divide by e1 , e2 , e1 , e2
fix a syntax error in the RandomAccessReader class to improve code readability and maintainability
added @ SuppressWarnings ( " vararg " ) annotations to Fields , MockitoBeforeTestNGMethod , and MockitoBeforeTestNGMethod classes to suppress
refactor ` createFromImage ` methods to use ` imageToArray ` and ` imageToArray ` instead of ` createNSImageFromArrays ` to
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to ensure compatibility with the latest HBase API changes
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser . java ` and ` JavaClass .
replaced manual null checks with ` Objects . equals ` for version comparisons to improve code readability and reduce boilerplate code
updated method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and added ` Nullable ` annotations to enhance clarity and
added verification for configuration properties in NinjaDefaultTest . java to ensure proper handling of HTML properties during tests
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile ` to
updated padding padding and modified request position offsets in DetailFragment and ListFragment classes to improve layout responsiveness and ensure correct positioning of the
updated exception handling to use Thread . currentThread ( ) . interrupt ( ) instead of Exception in ZkStateReader . java to ensure proper interruption
added null checks for field values in HttpFields . java and created a new test for empty headers in RequestTest . java to ensure robustness of
cloudstack - 1186 : do n ' t allow staticnat service in the network when there be no static nat rule
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure
added a call to remove the extra empty screen from the workspace to ensure the extra screen is removed when necessary
added a fixedWidth flag to the BitmapFont class and modified xAdvances addition logic based on glyph ' s fixedWidth setting to improve rendering accuracy
removed the ` showTitle ` parameter from the ` createFragment ` method in ` ChangeLogFragment ` and ` ChangeLogFragment ` classes to simplify
added new methods for pre , post , and error handling in AbstractStateMachineFactory to enhance state machine integration with the state machine
refactor ConfigDescriptionProvider to improve code readability and maintainability to enhance maintainability and facilitate future updates
updated role creation in ` TestAuthorizationApiAuthorizer ` and modified Hive configuration handling in ` StorageBasedMetastoreTestBase ` and ` TestStorageBasedMeta
refactor sorting logic in FacetComponent . java and add test cases in TestDistributedSearch . java to improve readability and maintainability of the
updated the initialization of ` PropertiesExpander ` to use ` overridingProperties ` instead of ` createOverridingProperties ( ) ` to ensure consistent
added functionality to stop active replicas and improved error message formatting in DeleteInactiveReplicaTest . java to enhance test reliability by ensuring only active replicas
added a ` ARG _ FILE _ NAME ` parameter to the ` FileActionsDialogFragment ` constructor and modified the ` OCFileListFragment ` to
updated reorder direction checks to include INVALID _ DIRECTION constant to improve code readability and maintainability by avoiding hardcoded values
chore : update api to v2 and add api version to account api
add jobexecutionservice . getexecutionidforjobid ( ) and JetTestSupport . assertjobrunningeventually ( jobid )
added a new annotation ` EnableAdminClient ` to the ` org . noear . solon . admin . client ` package to enable admin client
replaced specific imports with a wildcard import and added a new visitIdentifier method in FindTypes . java to streamline import statements and enhance identifier handling
added a text color to the action text in AuthenticatorActivity . java to enhance the visual appearance of the action text
added a new ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes to enhance functionality by allowing
rename method ` addTestStepsForPickleSteps ` to ` createTestStepsForPickleStep ` for clarity to improve code readability and
corrected the spelling of " noArgMethod " to " validNoArgMethod " in multiple test files to improve code readability and maintain
added a ` cancelClient ` method to ` RpcServer ` and implemented a ` cancelClient ` method in ` RpcServerImpl ` to ensure proper
added ` getImplicitPreCoercionValue ( ) ` methods to ` SkylarkParamInfo ` , ` ParamInfo ` , and
set lastDisplayedUser to a default value of Optional . empty ( ) to ensure lastDisplayedUser is initialized to avoid potential NullPointerExceptions
added a new method ` findAll ` to ` QueryDslMongoRepository ` and a corresponding test in ` QuerydslRepositoryIntegrationTests ` to
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl instances to avoid potential NullPointerExceptions when stopping
[ hotfix ] [ benchmark ] exit the warm - up loop in case of a failure .
add xread and xread methods to MultiKeyPipelineBase , MultiKeyBinaryRedisPipeline , and MultiKeyBinaryRedisPipeline classes to enhance functionality
refactored LinkedBufferInput and StreamInput classes to remove unnecessary comments and updated method calls to improve code readability and maintainability
added a WebSecurityCustomizer bean to CasWebSecurityConfiguration and updated CasWebSecurityConfigurerAdapter to use it to enhance security configuration flexibility and
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to implement a
added an ` registerProviderInternal ` method to ` ShadowContentResolver ` and modified ` ContentProviderController ` to accept ` ProviderInfo ` as a parameter
updated the constructor of AttributeReader to use ClassFile . Version instead of Version to ensure compatibility with the latest ClassFile implementation
added keep - alive configuration to SingleConnectionManager to improve connection management by allowing keep - alive connections
[ java ] rename ` ` unicastsenderflowcontrol ' ' to ` ` unicastsenderflowcontrolsupplier ' ' (
add null check for currentpoint in gbasicstroked . getcurrentpoint ( )
added error handling for IOException and improved buffer flushing logic in multiple classes to enhance robustness and ensure proper resource management during WebSocket communication
[ java ] add selenium . take . screenshot option for selenium . take . screenshot
replaced JUnit assertions with AssertJ assertions in multiple test files to improve readability and maintainability of test code
trufflelanguage : remove deprecate getcontextreference in favor of getcontextreference ( )
updated Throwable handling in StubberImpl . java and added new test classes StubbingWithBadThrowablesTest . java and Uninstantiable
updated condition checks in Actor . java and Group . java to improve error handling for invalid ascendant scenarios
added LocationPermissionsHelper imports and modified the getCenter method in LocationPickerActivity to use a dialog for location access to enhance user experience by providing
added a new class ` CounterMDB ` that includes a ` CounterMDB ` for tracking the counter in a weblogic application to provide a
added CookieSpecs import and set it to STANDARD in GetHTTP . java to enhance security by using standard cookie specifications
refactor overlap logic in Intersector . java to use a new overlap method to improve code readability and maintainability by reducing complexity
replaced DeemphasisFilter with NonClippingGain in P25AudioModule and removed logging in AirspyTunerController to
added a monitoring URL parameter to the ScrollingPanel constructor and modified related classes to include a monitoring URL to enhance the scrolling functionality by allowing users to
added a new configuration option ` SERVICE _ CREATE _ TIMEOUT ` in ` KubernetesConfigOptions . java ` to allow the creation of
added a switch - case statement for " landmark " , " city " , and " empty _ photo " icons in NearbyListFragment to
added a null check for the package before processing to avoid potential NullPointerExceptions when the package is null
added a new file PrintInlining . java containing a main method to demonstrate the usage of the PrintInlining functionality
fix ( javadoc ) : fix nested brace in javadoc
[ java ] remove unused variable from archivetest
updated EdgeDataTableModel to use edgesAndMetaEdges instead of edges in EdgeDataTable . java to ensure edges are consistent across different edges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
updated log message format from " Invalid playback speed " to " Setting playback speed " to improve clarity of error messages for better debugging
added roomremovedevent to muc room controller when clustering start
updated the ' minimize ' value from ' replicas ' to ' cores ' in the AutoScalingHandlerTest . java file to reflect the correct
added key properties to the TextureHelper class to enhance texture management by allowing dynamic adjustment of texture properties
refactor ` PythonDslProjectBuildFileParser ` to use ` EventReportingProjectBuildFileParserDecorator ` instead of ` ProjectBuildFile
[ j2cl ] add library normalization pass to j2cl transpiler .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` across multiple factories to improve clarity by using a more descriptive method name
[ hotfix ] [ runtime ] add @ visiblefortesting for memorysegment . isfreed ( )
added Temporal annotation to ConsoleSessionVO . java to ensure proper handling of timestamp timestamps in the application
added a new file ` Hbs . java ` and ` HbsTest . java ` to implement Handlebars and handlebars functionality to provide a
refactor ChatMessageAdapter to improve readability and maintainability of the setUpMessage method to enhance code readability and maintainability by reducing duplication
updated the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv . java ` to use ` values ( )
add test to verify that confirm dialog be wait before confirm
added a check for the number of distinct column indices in ReduceSinkDeDuplication to prevent unnecessary processing when there are no distinct column indices
refactor MiscUtils to improve handling of added - to - list entries and enhance error logging to enhance code readability and maintainability while ensuring
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 (
updated Maven bundle version from " websocket - server " to " websocket - client " in TestOSGiUtil . java to ensure compatibility with the
updated the return type of ` identity . getAttributes ( ) ` to ` Collections . unmodifiableMap ( ) ` in ` SAMLAuthenticatedUser . java ` to
do n ' t repaint header if the document be equal to the saved program
replaced instances of ` new Double ( bytes ) ` with ` return ` across multiple classes to simplify code by eliminating unnecessary object creation
updated the method call from ` getDate ( ) ` to ` getTimestamp ( ) ` in ` JdbcDataSource . java ` to ensure the correct timestamp is
updated class name retrieval logic in HtmlJndiTreeReport . java to include " javax . naming . Context " to ensure compatibility with both Context
updated database options handling in StorageUtils . java and improved logging in Manager . java to enhance database configuration flexibility and provide more detailed logging information
updated edge type from " double " to " mutual " in ImporterGEXF . java to ensure compatibility with mutual edge types
added import for FLAG _ SLIPPERY and removed the constant FLAG _ SLIPPERY from StatusBarTouchController . java to
truffleconstantfieldprovider : use arraydimensions instead of arraydimensions in constantfieldprovider .
added functionality to retrieve and set the Google Drive folder path in PreferenceHelper and related classes to enhance user experience by allowing users to specify the Google Drive
add a method to shuffle suggestions in the equation web to make it easy to control the selection of the element
added @ Nullable annotations to multiple assertThat methods in Truth . java to enhance null safety and improve code clarity
updated the bitwise operations in ArrayUtil . java to correct the bitwise operations to ensure correct bitwise operations for array sizes
added a new test file ` ApiExceptionTest . java ` and modified the ` instrumentConstructor ` method call in ` ClassInstrumentor . java ` to
[ hotfix ] [ stream ] add waitforebicompaction to streamin and streamoutmanager . waitforebicompaction
added ` isKeyguardSecure ` property and its getter / setter methods in ` ShadowKeyguardManager ` and updated ` ShadowKeyguardManagerTest
added serialVersionUID fields to StringDialog . java to ensure proper serialization compatibility during serialization
updated string splitting logic to replace ' > ' with ' > ' and added a conditional check for the length of the overrideParts array to ensure proper
renamed the test method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureException
fix issue with asyncfile . close ( ) not call after close ( )
updated LIGHTS _ NUM , LIGHT _ INTESITY , and LIGHT _ INTESITY in HybridLightTest . java to
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` across multiple test files to simplify filesystem initialization and improve code clarity
changed the type of the ` loadRerunFile ` method from ` String ` to ` PathWithLines ` across multiple files to improve type safety
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed @ NotNull annotation from TEST _ DIRS array in PubRoot . java to clarify the purpose of the TEST _ DIRS array
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` ShadowParcelFile
added method reference for resetPrefixIndex in Stylesheet . java and refactored prefix index retrieval in BasisLibrary . java to improve thread safety
added logging for HTTP connection logging in TestDistributedStatsComponentCardinality . java to facilitate debugging by indicating HTTP connection status
added multiple calls to ` throwIfImmutable ( ) ` in ` IntList . java ` to ensure immutability of the IntList class
updated method signatures in GrpcServerRunner , GrpcClientBuilder , UnitTestIdleHelper , UnitTestReadHelper , and UnitTestReadHelper
refactor graal . java to use a lambda expression instead of a static method to improve code readability and reduce boilerplate
do n ' t invalidate the assumption array if it ' s invalid .
added platform - specific file handling in GenerateManifestStep . java to ensure proper formatting of manifest files across different operating systems
do n ' t invoke null check on non - null value in findnullderef .
add @ nullable annotation to configdescriptionregistry and thingresource to avoid npe
do n ' t throw cancellationexception in masterjobcontext . createcancellingexception ( )
bugfix : do n ' t load cropbox when the page be resize .
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the code
added a new debug flag ` ENABLE _ ALL _ APPS _ IN _ TASKBAR ` to ` FeatureFlags . java ` to enable
refactor FragmentTestUtil to use ActivityController for creating FragmentActivity instances to improve code readability and maintainability by utilizing Robolectric
rename ` getFileCoordinates ` to ` processFileCoordinates ` and update related method names for clarity to improve code readability and maintainability by using a
rename classes ABCASE1 _ 1 and ABCASE1 _ 2 to TestABCASE1 _ 2 across multiple files to improve clarity and consistency in
corrected the parameter name from ' num ' to ' value ' in the saveEnergyPriceHistoryDone method and added a null check for blackhole
refactor the creation of the RocketChangedEventHandler to use a variable for better readability and maintainability to improve code readability and ensure proper
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to implement a recipe for changing Maven dependency groupId and artifact IDs to enhance
replaced FileSystem with Path and added a check for segment existence in IndexingJob . java to ensure that segments are only added if the input path is
changed the condition from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor replacementPaths and pathToSourcePathMap initialization in PreprocessorDelegate . java to improve error handling to enhance code readability and maintainability by
rename JsonExamples class to Examples and update package - info . java to improve clarity and consistency in naming conventions
added debug log statements to ViewExtractor . java for better traceability to improve debugging and traceability of log messages during execution
refactor FindsByLinkText class to improve code organization to enhance maintainability and readability of the code
added a new file Main . java that implements a main method that prints the Java oop entry point to demonstrate the usage of Java oop
fix synchronization issue in sipaccregwizz and sipregistrationconnection
removed unnecessary continue statements from NativeScanner . java to clean up the code and improve readability
changed the package of RendererConfigurationTest from ` test ` to ` configuration ` in ` RendererConfigurationTest . java ` to improve organization and clarity of
refactor AndroidLibraryDescription to use memoization for dependency resolution to improve performance and maintainability of dependency resolution logic
replaced ` stream ( ) . count ( ) . count ( ) . count ( ) ` with ` size ( ) ` in ` remoteContainsResults
added charset retrieval from content type in ExtractingDocumentLoader to ensure proper handling of content encoding in the metadata
cloudstack - 10297 : fix databaseconfig . getaccountname ( ) to use boolean instead of string .
added a check for the slot in PlayerInventory . java to return early if the slot is - 1 to improve performance by avoiding unnecessary processing when the
add option to ignore remote repository introduced by transitive dependencies
removed the dependency on ` BackgroundJobManager ` in ` ContactsPreferenceActivity . java ` to streamline dependency injection for better maintainability
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android features and improvements
added null check for selection before closing it in NIOTransport . java to prevent potential NullPointerExceptions when closing the selection
added a condition to check if the current index of a string matches the string before proceeding to ensure proper handling of string lengths in the regex
updated the @ IntegrationTest annotation to include a value of " server . port = 0 " to set the server port to 0 to ensure the test
added a new ` UDFReverse ` class and modified ` FunctionRegistry ` to implement a new ` UDFReverse ` class to enable the use
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` across multiple classes to ensure consistency and correctness in
refactor Tracer class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase test that fail
updated import statements in XMLChangeLogParserTest . java to use wildcard imports to simplify import statements and improve code readability
added synchronization to the buffer in StarTreeRecordStoreCircularBufferImpl . java and created a test for clearing the buffer to ensure thread safety during split
updated forecastMinutes , forecastDays , and forecastDays values in OpenWeatherMapOneCallHandler . java to reflect changes in weather data for improved weather
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 12437 - improve test
added logging for splitTaskIds in RemoteTargetGluer and FloatingHeaderView , and implemented suggestions in FloatingHeaderView to improve debugging and
updated ` parseRerunFile ` method to ` splitAndThenFlatMap ` and ` parseRerunFile ` in ` CucumberProperties
add a new item to the creative tab so they can be add to the creative tab
updated assertions in TestRadioButtons to use the correct size assertion to ensure that the size of items and options are validated correctly
added support for handling file sizes in RCFileCat and updated related logic in RCFile to improve file size management and provide clearer
refactored cluster - related classes for consistency and clarity to improve code maintainability and readability
added checks for null pointer exceptions in JnaUtils . java to ensure robust error handling for null pointer exceptions
refactor BlobServer class to improve code readability to enhance maintainability and facilitate future updates
pmd : fix unusedprivatemethod rule to work with initializer .
updated variable names from " lexicalScope " to " lexScope " in Global . java to improve clarity and consistency in variable naming
[ sftp ] add test for auto - startup for sftp inbound channel adapter
added getter and setter methods for nodes and constructors in Quadtree , AbstractNode , and AbstractSTRtree classes to enhance encapsulation and
updated version parsing logic to handle version numbers correctly to ensure correct parsing of version data based on the specified number of characters
added a null check for the tags before persisting the item to avoid potential NullPointerExceptions and improve logging clarity
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a corresponding test in ` DateTimeFunctionsTest ` to
[ hhh - 17100 ] fix nullpointerexception in stringwrapper . disassemble ( )
refactor Log4j2ConfiguratorServlet to improve code organization to enhance maintainability and readability of the code
replaced direct assignment of HiveException and AuthorizationException with direct return of HiveException and AuthorizationException to simplify exception handling and improve code readability
updated CGoCompileStep to use String . join for the CPP command prefix and added a new test for prebuilt dependencies to ensure compatibility with
fix ( kubernetes - api ) : add @ buildable annotation to customresource . java
removed the @ Override annotation from the Only class to clean up the code and improve readability
added timeout settings for HTTP connection parameters in HttpClientFactory . java to improve connection reliability by allowing more time for connection timeouts
added " nonresolving _ raw _ target _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _ pipeline "
[ java ] add omission mapping for enable , disable , enable , disable , enableOther , enable , enableOtherMapping , enableOtherMapping ,
removed the @ Singleton annotation from ApplicationController . java to streamline the code by eliminating unnecessary dependency on the Singleton annotation
added error handling for username retrieval in ShareActivity to ensure the correct username is used based on the user ' s display name to improve robustness by
added imports for BatchStatus and a new test method in SimpleJobLauncherTests to ensure proper handling of paused instances in job launcher
added null check for cacheConfig before processing parameters in HttpSyncDataService and DataRefreshFactory to enhance robustness by preventing potential NullPointerExceptions
[ grid ] make dockersession public for localnode .
[ java ] use default package instead of java . lang .
pdfbox - 4071 : use nonsequentialpdfparser instead of nonsequentialpdfparser
[ mahout - 132 ] fix test bug in mahout / mahout / testdistributedrowmatrix . java
refactor HttpServerTestBase to improve test coverage to enhance reliability and maintainability of the server tests
refactor test cases in PortletApplicationMapTest to improve readability and maintainability to enhance code clarity and ensure correctness of test assertions
[ hotfix ] [ table - planner - blink ] add dynamodbignorenulls test for nestedbeanignorenulls
added a new ` RedissonAutoConfigurationCustomizer ` interface and integrated it into the ` RedissonAutoConfiguration ` class to enable customization of Redis
[ ta4j ] fix index out of bound exception in indicator . todouble ( )
added new method ` execInContainerWithUser ` to ` ExecInContainerPattern ` and ` ExecInContainerWithUser ` in ` ContainerState
simplified conditional checks for WebSocketByteListener and WebSocketTextListener in NettyWebSocket . java to improve readability and maintainability of the code
added unit tests for attribute handling in SemgrexTest . java to ensure correct functionality and behavior of the Semgrex algorithm
added a broadcast intent for the CLEAR _ PULL _ UNREAD activity in HomeFragment . java to enhance user experience by allowing users to
removed conditional checks for the PreGingerbread SDK version in TouchImageView . java to simplify the code and improve readability
add flush ( ) method to defaultprofilevalidationsupport ( ) so that it do n ' t throw exception
use VetoCamelContextStartException instead of a final AtomicBoolean to manage vetoed state to improve error handling by throwing runtime exceptions instead of blocking the
added FloatingActionButton and FAB menu functionality to ShareActivity to enhance user experience by allowing easy access to FAB , maps , and map
added support for inline formatting in ToDateParser to enhance date parsing capabilities and improve code readability
updated TestAnonymousClassUnloading . java with new test cases to improve test coverage for anonymous class unloading scenarios
updated error messages in ` ErrorMessages _ sv ` , ` XPATHErrorResources _ sv ` , and ` XPATHErrorResources _ sv `
added a check for the server is checked before binding the OperationsServiceConnection in AuthenticatorActivity . java to ensure that the server is checked before binding
updated Position constructor to use ` getBeginLine ( ) ` and ` getEndLine ( ) ` instead of ` getBeginColumn ( ) ` to
added waitFor ( ) method calls to CxxPreprocessAndCompileStep and ManagedThread classes to ensure thread safety during process termination
added a new boolean property ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and integrated it into ` CasPersonDirectoryConfiguration ` to
make maxsizechecker . getmaximumsizepernode ( ) public ( # 120000 )
added support for SSL protocol configuration in NettyWebServer and SocketConfiguration to enhance security by allowing configuration of SSL protocols based on configuration
replaced AtomicBoolean with AtomicReference for atomic operations in SetOnce . java to improve thread safety and simplify atomic operations
updated the return statement in QueryDslMongoRepository to handle null property values and added a new test for null path expressions to improve robustness by
updated assertion messages in RoundRectBorderTest . java for consistency to improve clarity and accuracy of border equality checks
[ java ] do n ' t throw an illegalstateexception if the bft type be empty .
( chore ) camel - selenide - integrationtests : remove duplicate test
updated CountDownLatch initialization and added validation for sign length in PrecompiledContracts . java to ensure proper handling of sign lengths and improve logging clarity
updated the condition in ProcessInformationsPanel . java to check for non - windows before proceeding to ensure proper handling of non - windows windows
refactor ` MoreCollectors ` methods to use ` greatest ` and ` greatest ` instead of ` maxN ` and ` maxN ` to
added null checks for orderbook and WebSocket client extensions in BitmexStreamingExchange , BitmexStreamingService , and BitmexManualExample
added validation checks for lat , lon , and field names in GeoPointField to ensure proper error handling for invalid geopoint fields
refactor file creation methods in OozieProxyImpersonator and WorkflowFilesService to improve clarity and consistency to enhance code readability and maintain
refactor ResponderId class implementation to improve code readability and maintainability
updated the ` getTableDocument ` method to accept a boolean parameter ` withDependents ` and modified its usage in ` CompactCatalogUtility ` to
added support for handling consecutive uploads without coordinates in UploadActivity to improve user experience by providing feedback when the number of consecutive uploads is absent
added a new POST endpoint for managing profile data in ProfileResources . java to improve performance by reducing redundant profile data retrieval
refactor JpaMetamodelEntityInformation to improve handling of identifier and nested ID attributes to enhance code readability and maintainability by consolidating
added test cases to bootstrap last DDL timestamps for tables and views in the upgrade process to ensure that the last DDL timestamps are correctly
add support for earlyeofexceptionmappers in abstractserverfactory to allow customizable exceptionmappers
added a new parameter ` false ` to the ` storeFieldAction ` method in ` EntryEditor . java ` to control the visibility of the store
updated the nativeCreateNSWindow method to include an owner pointer to enhance functionality by allowing the creation of NSWindow instances based on the owner ' s
updated the database table name from " FILE _ REMOTE _ ID " to " FILE _ TABLE _ NAME " in FileContentProvider . java to
added a new property ` STOCK ` to the ` Tile ` class and modified the ` fireTileEvent ` and ` fireTileSkin ` methods
fixed - rbuckets . get ( stringcodec , stringcodec ) return null instead of null
add findunrelatedtypesingeneric ( ) annotation to typeframemodelingvisitor to detect unrelated type
refactor back animation handling in LauncherBackAnimationController to utilize a BackProgressAnimator for improved responsiveness to improve UI responsiveness
changed the ` _ initialPageNo ` variable from ` final ` to ` _ initialPageNo ` and added a condition to update the initial page
[ hotfix ] [ network ] fix crc calculation in JedisClusterCRC16 . java
added comment handling in FormattedSqlChangeLogParser and corresponding unit tests in FormattedSqlChangeLogParserTest to enhance comment parsing capabilities and ensure
[ hotfix ] [ maven ] allow to specify the archiver in the maven maven maven maven maven maven maven maven maven plugin
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by using BuckUncheckedExecutionException instead of Human
refactor aggregation checks in TSServiceImpl . java and add multiAggregationTest method in DaemonTest . java to improve code readability and
added support for UNSIGNED _ BYTE and RGBA formats in GwtGL20 . java to ensure compatibility with RGBA formats and improve error handling
renamed test methods from ` testVarDump ` to ` testDebugInfo ` and updated method invocations in ` PrintR ` and ` PrintR
refactor exception handling in InlineBytecodeGenerator to use a volatile Throwable instead of UnmodifiableClassException to improve clarity and maintainability of exception
fix traceclassinitialization trace when class initialization be not set
updated parameter order from ` queryLevelTimeoutMs ` to ` queryTimeoutMs ` in ` BaseBrokerRequestHandler . java ` to ensure consistency in parameter
updated the TopicRouteService to use Caffeine caching instead of Google ' s caching mechanism to improve performance by utilizing Caffeine ' s
mbtilesdatastorefactory . createdatasource should not be read - only
updated regex pattern for invalid source target release in FindBuildToolFailures . java and added Fatal error compilation in FailureLogAnalyzerTest . java to
updated the location intent handling in DetailFragment . java to include a check for availability before constructing the URI string to ensure that the location intent
added a null check for ` getParameterInheritedParameterContexts ( ) ` in ` StandardParameterContextDAO . java ` to avoid potential NullPointerException
refactor ClassLoader class implementation to improve code readability and maintainability
added a method to set the origin response headers in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure that the response headers are
added a new ProfileSettingDrawerItem instance to the GpsMainActivity to enhance the user interface by providing a specific profile setting drawer item
added support for XML validation in multiple classes to enhance XML validation capabilities in the application
simonstewart : fix the firefox driver to work as expected
[ iotdb - 4071 ] do n ' t use the limit clause in a query that do n ' t support it .
refactor SqlStreamTerminator to use allActionsAreOptimizableFilters instead of isCountOptimizableFilters to improve code readability and maintain
added event handling for node and mouse events in StandardVizEventManager . java to ensure proper event dispatching for selected nodes and mouse events
refactor ManyToOneRingBuffer to use a new zeroBuffer method to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ table - common ] add access to terminalnodememory in terminalnode .
removed unnecessary methods from LCDUIImageMonochromeBitmapSource . java to streamline code by eliminating unnecessary methods
replaced direct calls to ` getRelativePath ` with ` getPathPrivateImpl ` in ` SourcePathResolver ` to improve code readability and maintainability by
[ iotdb - 4071 ] fix attribute parsing order in xmlparser . encoderesourcetostring ( )
changed the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and added encoded URL handling in ` WebsocketRoutingFilter
[ gr - 24186 ] fix path to compile / compile / libs / llvm . java
refactor ` getCxxPlatform ` method to use a new method ` getCxxPlatform ` to improve code readability and maintainability by encap
added imports for IndexReader , IndexReader , Similarity , and Similarity classes to ensure compatibility with the latest Lucene library structure
refactor ConcurrentLinkedStack to handle null values and add new test cases in ConcurrentLinkedStackTest to improve robustness of stack management and enhance test
[ hotfix ] [ test ] add miss method to binaryheapqueuetest and basequeueable
added a null check for mDirectories before initializing mDirs array to avoid potential NullPointerExceptions when mDirectories is null
updated the condition in RecentsView to check if the overview state is enabled and the first layout is not the first to ensure proper handling of the
added package - info . java files for multiple Lucene package - info . java files to provide package - level documentation for various Lucene packages
added a text setting for the visibility of the auto leveler panel in AutoLevelerTopComponent to improve user experience by providing context - specific information
added functionality to call post optimization callbacks in DirectUpdateHandler , DirectUpdateHandler2 , and UpdateHandler2 classes to enhance event listener management by allowing
updated Inflater initialization and modified input stream initialization in CompressionMode . java to enhance compression flexibility and ensure dummy byte is set to 0
removed the check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check if ` base . isLocalMetaStore ( ) ` in ` RetryingMetaStoreClient . java ` to ensure retry
updated import statements and added null check for hostStatus in HeliosSoloLogService . java to improve error handling and logging clarity
refactor Subject class to improve code organization to enhance maintainability and readability of the code
use concurrentreferencehashmap instead of concurrenthashmap in abstractserializationservice
fix color distance calculation in hssfpallet . findsimilarcolor ( ) and add unit test
refactor multiple request and response classes to improve code organization and readability to enhance maintainability and facilitate future updates
[ java ] add test for find a single element by numeric id and id in the xpath library
added a ` flags ` parameter to the ` registerReceiver ` methods in ` ShadowApplication ` , ` ShadowContextImpl ` , and ` ShadowInstrumentation
[ hotfix ] [ test ] fix flaky test in ffmpegtest
updated OggInputStream and OggInputStream to include previous input and pcmBuffer parameters to enhance input stream management and prevent memory leaks
replaced hardcoded error message with a constant RESPONSE _ WAS _ NULL to improve code readability and maintainability by using a named constant
updated condition in DetectionMigrationResource . java to check for both anomalyFailureCount and anomalyWarningCount to ensure proper handling of
refactor BaseActivity and DetailActivity to use a toast message instead of Toast . makeText method to improve code readability and maintainability by
updated the request creation method in TracingFeignClient to use requestTemplate instead of method to improve request handling by using the delegate ' s
updated LDAPCertStore to use " throw " instead of " follow - scheme " and added validation for LDAP referral information to enhance robustness by
refactor retain method to use a dedicated retain method for better readability to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test for item click functionality in ` AdapterViewTest ` to improve clarity
[ hotfix ] [ test ] remove unnecessary setup in checkpointfailuremanageritcase
deleted the GenericItemUIProvider . java file to remove unused code to streamline the codebase
add the ability to set the selected object in the selector box so that it can be use by the user .
added JUnit ' s Isolated annotation to MetaInfConfigurationTest . java to enable parallel access to FileSystemPool in tests
set the server port to HTTP _ INFO in HttpServer . java to ensure the server connects to the correct host for HTTP requests
added conditional checks for HEART mode and client credentials in DynamicClientRegistrationEndpoint . java to ensure proper handling of token validity based on configuration settings
added CloverInstrumentationFilter to TestInterfaceAudienceAnnotations . java and updated Not class instantiation in SplitLogCounters . java to ensure proper handling of
added ZHIMI _ HUMIDIFIER _ CB2 support for Smartmi Evaporative Humidifier in MiIo
use minimum duration tick to avoid break .
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added error logging for empty repositories in ClusterStackVersionResourceProvider , HostStackVersionResourceProvider , and ClusterStackVersionResourceProvider classes to improve error
modify the return condition in IntHashSet to use ` containsMissingValue ` instead of ` containsMissingValue ` to simplify the logic for better readability
added Serializable interface to RuleAdministratorImpl to enable serialization of RuleAdministrator instances
make crossoriginfilter more robust to allow wildcards
updated test files from " g3d / cubes . g3dj " to " g3d . g3d / knight
added error handling for ` updateLatestSolidifiedBlock ` in ` Manager . java ` and improved error logging in ` WitnessService . java `
hbase - 24107 fix npe in execresult when value be null
added a static method ` hasAccess ` to check if a user has access to enhance security by preventing potential NullPointerExceptions
refactor ` ClassMirror ` and ` StubJar ` classes to use ` ByteSource ` instead of ` JarEntry ` to improve code readability and
added a TextView to share the internal link text based on the file type to enhance user experience by providing clearer and more informative text when sharing
updated accuracy assertion in PredictionTest . java to use Locale . English to ensure consistent accuracy formatting across different locales
updated the condition in ModelZooTest . java to check for non - daylight daylight saving time to ensure proper handling of daylight saving time based on
updated the hideInput method in AllAppsContainerView and LauncherAllAppsContainerView to hide IME only when device search is enabled
[ eventstore ] use inmemoryeventstorageengine to configure embedded event store in test
refactor BsdFileStore and BsdNativeDispatcher to utilize a new method getmntonname and getmnton
add unit test for issue # 1599 ( # 1599 )
added a new command ` x ` and ` y ` to the ` spawn ` command in ` SpawnCommand . java ` to allow users to
replaced direct calls to ` getDesiredHeight ( ) ` with a constant ` MIN _ CONTENT _ DIMEN ` and refactored method calls
graalcompilertest : use debug . debug instead of debug . debug
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with Windows semantic
added plugin check class names to UpgradeCheckRegistry and adjusted column order in UpgradeCatalog280 . java to ensure proper validation of plugin class
refactor Environment class to improve code organization to enhance maintainability and readability of the code
added a BadApple annotation to the RecoveryAfterSoftCommitTest class to address a known issue related to SOLR - 7421
updated home construction logic in CodenameOneImplementation . java and removed debug print statement in HashtableContent . java to improve code robustness and reduce unnecessary
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AU
updated import statements in LiquibaseEntityResolver and XMLChangeLogSAXParser to use FileSystemResourceAccessor instead of ClassLoaderResourceAccessor to improve resource management
added import for Security and set the jdk . tls . disabledAlgorithms property in ComHostnameVerifier and JavaxHostnameVerifier classes to ensure compatibility with
updated the Immutable annotation in AbstractCxxDeps and modified the EMPTY constant in CxxLibraryDescription , CxxLibraryDescription , and CxxLibrary
rename ` expectedDirectory ` and ` actualDirectory ` to ` actualStubDirectory ` for consistency to improve code readability and maintainability by using a
removed unnecessary whitespace in ` Int2ObjectHashMap . java ` to improve code readability and maintain consistency
updated folder hint setting logic in Folder . java to use empty strings instead of empty strings to improve code readability and maintainability by reducing redundancy
updated client loading in UaaResetPasswordServiceTests to include the " uaa " parameter to ensure that the client is loaded with the correct client
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to these methods for better encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to include isClosed condition to ensure accurate representation of the state of the state
refactor MimetypeIconUtil class to improve code organization to enhance maintainability and readability of the code
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test method ` negatedInstanceOf ` in ` UnnecessaryParenthesesTest ` and modified the condition in ` Un
add teleport ( ) method to the location class to make it easy to teleportable .
replaced Base64 encoding with Base64Utils . encodeToUrlSafeString for base64 encoding to improve compatibility with Spring Security ' s built - in
updated import statements in TranslatorManagerHelper . java to use ProjectComponent instead of ProjectComponent to improve code clarity and maintainability by aligning with
renamed the ` ContainerAnnotation ` interface to ` ContainedBy ` in ` ContainerAnnotation . java ` to clarify the purpose of the interface in the
added a null check for the ` getId ( ) ` method in ` ObjectIdentityImpl . java ` to ensure that the ` getId ( ) `
refactor setUpRevampedTweet method to use a new isMuffled method for better error handling to improve code readability and maintainability
added a conditional check for the theme before displaying verified text based on the user ' s theme settings to enhance user experience by displaying relevant verified text based
refactor AbucoinsDigest to use a final instance variable instead of a static instance variable to improve code readability and ensure immutability of
camel - 14284 : camel - mongodb - add autowired property to camel - mongo
added a new ` sourceIndex ` parameter to the ` AttributeMapping ` class and updated related classes to include it to allow dynamic retrieval of the index
add log for corrupt partition statistics when alter table
added a call to ` UserGroupInformation . isSecurityEnabled ( ) ` in ` AuthParams . java ` to enable security features based on user
refactor ConnectivityReceiver , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
do n ' t escape contact email in home page when contact email be null
add a method to enrich reflections with subsystems to modulemanagerimpl .
updated mmfStream writing to include the number of features to ensure accurate representation of the number of features in the mmf stream
ggb - 223 add a check for the length of the command in the < math > command .
[ hotfix ] [ kafka ] avoid debug log in singlenodekafkaresumestrategy
[ java ] use PlaybackStateCompat . ACTION _ SET _ PLAYBACK _ SPEED instead of a hardcoded constant
added auto - setting functionality to motor instances and modified key generation logic in various classes to enhance functionality and ensure proper handling of launch stages and delay
tika - 132 : fix issue with ascii name length in msownerfileparser
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as non - deterministic on JDK
refactor ` lockFile ` initialization to use a dedicated method ` createLockFile ( ) ` to improve code readability and maintainability by en
updated shared preference keys from version 5 _ 3 to version 5 _ 3 _ 1 and added new configurations for timeline , mention , and activity notifications
added a check to return null if the username is the FEDERATION _ USER in AuthenticationManager . java to ensure proper handling of usernames
do n ' t use truffleobject in executemethodnode if it be not a truffleobject
replaced ` Collectors . collect ( Collectors . toList ( ) ) ` with ` Collectors . toList ( ) ` in multiple test files to simplify
add filterattachable to logbackvalve to avoid fail if filter reply do not exist
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the code
removed unused import of Version from CreateIndexTask . java to clean up the code and improve maintainability
added support for handling backing indices and schemas in MissingPrimaryKeyChangeGenerator to ensure compatibility with Oracle databases and improve handling of missing index and schema
added ` MetastoreException ` to the ` execute ` method and updated exception handling in ` MsckOperation ` and ` TestMSCKRepair
[ hotfix ] [ kafka ] improve error handling in kafkacommitter
[ rocketmq - 4071 ] remove the message receipt handle from the ddlq activity so that it can be remove from the message .
added a new method ` withServices ` to ` DockerComposeContainer ` and created a corresponding test class ` DockerComposeServiceTest ` to handle service
use collectionutil . copyset ( ) instead of collectionutil . copyset ( ) in export and struct context decorator
replaced HTML cleaning with stack trace printing in FeedParser . java to improve error handling and streamline XML processing
removed conditional check for AppsCustomizePagedView . DISABLE _ ALL _ APPS and updated method calls in Workspace . java to simplify
[ te ] use double instead of int in meterrealtimebodydataddaodatad to avoid overflow
added a new file ` bug4150029 . java ` implementing a file ` bug4150029 . java ` that extends ` JApplet
added boolean flag ` isSparkConfigUpdated ` and related getter / setter methods to ` HiveConf ` , ` SparkClient ` , and `
added a new method ` getLongPressIndicator ( ) ` to ` AppIcon ` , ` AppIconMenuItem ` , and ` Launchable ` classes
added checks for empty polygons in WKBWriter and updated test cases in WKBWriterTest to ensure correct handling of empty polygons and improve
refactor ` NativeLibraryMergeEnhancer ` and ` AbstractUnflavoredBuildTarget ` classes to use ` Interners . Builder `
added a new file ` MultiplyByMaxInt . java ` containing a class ` MultiplyByMaxInt . java ` with a method to
added logic to set drawer indicator for the current file in the OCFileListFragment to ensure the drawer indicator is enabled based on the current file
updated package structure and import statements in TestRAMDirectory . java to improve organization and clarity of the codebase
replaced FixedBitSet with BitSet in Automaton . java and Operations . java to simplify code and improve performance by using a more efficient BitSet
DMN : improve error message when no expression be define in DMN expression
replaced instances of @ ContainerFor with @ Repeatable across multiple test files to streamline the code by eliminating unnecessary dependency on @ ContainerFor
updated message formatting in AbstractController . java to include a duration variable to improve readability and maintainability of the log message
updated the method of obtaining the base class name in OpenMBeanAttributeInfoSupport . java to ensure proper package access checks and improve code clarity
patch by jbellis ; review by jbellis for cassandra - 1449
updated the calculation of freeSize in StoreDirect . java to correct the calculation of freeSize to ensure accurate free size calculation for better memory management
update touch event handling in anykeyboardview and anykeyboardviewbase
updated SslContextFactory instantiation to use SslContextFactory . Server instead of SslContextFactory . Server to ensure compatibility with the latest SSL
removed the PrivilegedSocket class from PG _ Stream . java to simplify the socket creation process by eliminating unnecessary privilege handling
refactor InputTest . java for improved readability to enhance maintainability and reduce complexity in test cases
added functionality to pause blurs on Windows in DepthController , AbsSwipeUpHandler , and TaskViewUtils classes to enhance user experience by allowing
refactor location marker handling in NearbyMapFragment to improve null safety and clarity to enhance code readability and prevent potential NullPointerExceptions
updated the ` removeSecret ` method to use ` clientDetailsService . retrieve ( clientId ) ` instead of ` client ` in ` ClientAdmin
updated SQL source builder test to use ` @ BeforeEach ` instead of ` @ BeforeAll ` and modified the setup method to use ` @ Before
[ amq - 1076 ] use backport executorservice instead of backport executorservice to avoid race condition .
added unit tests for handling unknown key exceptions in SlidingGanttCategoryDatasetTest . java to ensure robustness of the SlidingGant
updated filterConditions to return an empty list instead of null when conditionDataList is null to improve code robustness by avoiding potential NullPointerExceptions
refactor lightcontrol . controldir and lightcontrol . controldirection to be consistent with other code .
added @ SuppressWarnings ( " UnusedAssignment " ) annotations and improved loop structure in StdErrLog . java to enhance code clarity and maintainability
updated HttpSessionEventPublisher to use context . getContext ( ) instead of context . publishEvent ( ) to ensure that the context is not null to
added a semantic check for the syntax of CREATE CQ statement in ASTVisitor . java to ensure that the syntax of CREATE CQ statements have changed
[ hotfix ] [ table - common ] fix typo in flinkiotdbsink javadoc
[ hotfix ] add counter for custom simplification simplified node
updated the method call from ` null ` to ` context ` in ` ActivityListAdapter . java ` to ensure the correct context is used for icon
updated the ` readIdentifierWithSchema ( ) ` method to use the schema name instead of the schema name to ensure the correct identifier is used for
added handling for " TIMESTAMP " field in BigQueryTableRowIterator and corresponding tests in BigQueryUtilTest to enhance date formatting capabilities and ensure
added ` findViewWithTag ` method to ` ShadowView ` , ` ShadowViewGroup ` , and corresponding tests in ` ViewGroupTest ` to
replaced ` for ( String ) ` with ` Enumeration < Enumeration < Enumeration < Enumeration < Enumeration > ` in multiple Java files to improve type safety and
updated import statements in IndexTool and MetaDataClient classes to improve code clarity and maintainability
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and modified enum value retrieval logic in SpringBootDocBuildTemplate to enhance
[ gr - 24186 ] fix classpath file check in resourcefeature
updated comments in cuda . java for consistency to improve code readability and maintainability
refactor ResourceLoader class to use FileFilter for file filtering to improve code readability and maintainability by consolidating resource loading logic
use simpleattachablematerialdata instead of cast to blockstate . getattachedface ( ) .
added support for VARBINARY type in RelToStageConverter . java to enhance functionality for handling VARBINARY data types
removed unused import of DateHelper from NoteAdapter . java to clean up the code and improve maintainability
updated backup backup handling and error messaging in Backup . java to improve user feedback by providing clearer feedback on backup loading failures
ggb - 204 fix the position of the element in the simple panel
simplified the file creation logic in ShadowParcelFileDescriptor . java to simplify the file creation process and improve error handling
replace ` getStackForThread ( ) . offer ( ) ` with ` getStackForThread ( ) . removeFirst ( ) ` in ` StackBasedSecurity
changed the rule from " optimizations " to " controversial " in BooleanInversionTest . java to ensure the test accurately reflects the intended behavior of
added unit tests for ` IntegerEqualsCanonicalizerTest ` and modified ` IntegerEqualsNode ` to handle both ` forXorNeutral
removed the static final Type STRING _ ARRAY constant from TypeFactory . java to streamline the code by eliminating unnecessary constant
replaced direct calls to ` hideIme ( ) ` with a new method ` hideIme ( ) ` in multiple classes to improve code organization
make blockstatecontainer . setbits ( ) optional to force bit density to fix network issue
updated assertions in TimelineMetricCacheSizingTest . java and refactored cache management methods in TimelineMetricCacheTest . java to improve
add gl _ max _ texture _ size to get gl _ max _ texture _ size to the player usage snooper .
[ java ] move trystoplogrecording ( ) to trystoplogrecording ( ) instead of trystoplogrecording ( )
added a conditional check to reset startPosn to 0 if isInTransform is true to ensure startPosn is reset when the transformation is enabled
replaced calls to ` _ isStarTreeDisabled ( _ queryContext ) ` with ` _ queryContext . isSkipStarTree ( ) ` across
added lockNearbyView flag and modified refresh methods in NearbyActivity . java to improve responsiveness to nearby places to enhance user experience
add methods for creating ` MapTransformer ` instances with ` Map < K , V > ` and ` BiMap < K , V > ` to
updated EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added functionality to retrieve widget span information in LauncherPreviewRenderer , PreviewSurfaceRenderer , and PreviewSurfaceRenderer to enhance the functionality by allowing
replaced ` ChangeEvent ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to standardize event handling and improve code
added calls to ` callingUid ` and ` callingPid ` in ` Robolectric ` , ` ShadowBinder ` , and ` ShadowBinder
updated the ` ExpectationFailure ` class to use ` Objects . requireNonNull ` instead of ` AutoValue _ Expect _ ExpectationFailure ` to
removed a warning log statement for no support for deserializing messages in BitcoinSerializer . java to clean up the code and reduce unnecessary logging
[ fix ] imagereplacedelement . setwidth ( ) and setheight ( ) to - 1 in imagereplacedelement .
added support for &# 32 and &# 32 characters in Markdown rendering to ensure proper handling of special characters in Markdown output
refactor share password handling in SharePasswordDialogFragment to use a new method for setting password to improve code readability and maintainability by reducing duplication
refactor ` MAP _ ADDRESS ` and ` UNMAP _ BUFFER ` methods to use a new ` MappingMethods ` class to improve code
updated method visibility from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java and related classes to
added slider - principal and keytab - dir option to the LlapOptionsProcessor and LlapOptionsProcessor to allow configuration of the keytab directory
updated the ` tearOutGraphViewContainer ` method to accept a JFrame parameter and modified the ` graphViewContainer ` initialization in ` ExtractionModel
added synchronization and validation for workspace loading in LauncherModel . java to ensure that the workspace is loaded before proceeding with further operations to avoid unnecessary
[ hotfix ] [ runtime ] fix bug in nodepathscountoperator and nodepathscountoperator . isblocked ( )
updated the ` add ` methods in ` IssueInterface ` , ` ValidationReport ` , and ` ValidationReport ` classes to include a ` guid `
added a safe provider name retrieval method in RSAClientKeyExchange . java to improve robustness by providing clearer error messages when the provider name is
[ hotfix ] rename ` ` dynamic ' ' to ` ` flink ' ' in container specification
updated log level from WARNING to OFF in CCJSqlParserUtil . java to improve logging granularity for better user experience
removed a conditional check for size in AggregateLifeCycle . java to streamline output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public static in DefaultMapScaleBar . java to allow external
removed the @ Ignore annotation from the CovariantOverrideTest . java file to indicate that the test is not ready for execution
renamed the ` curly ` method to ` qtype ` for clarity and consistency to improve code readability and maintainability by using a more de
camel - 16297 : camel - model - load route definition from xml should not throw exception .
added space minimum and maximum limits for the scatter chart in ScatterChart . java to enhance the visual representation of scatter data
removed unnecessary whitespace in ExpressionStringBuilder . java to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` StateManager `
added a check to throw an exception for missing UTF8 key in CheckEncodingPropertiesFile . java to ensure that a valid UTF8 key is provided
updated TestReproduceMessage . java and LuceneTestCase . java to use seed decorators and added randomization support to improve test reliability and maintain
added a new UI event for user long - press on AllApps items in StatsLogManager and integrated it in ItemLongClickListener to enhance user
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null log
added a condition to check if ` showSectorLandInfo ` is not null in ` Control . java ` and set ` showSectorLand
updated type casting to CompositeType < ? > in multiple Java files to ensure type safety and avoid unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
refactor nearbyrandom constructor to accept a boolean parameter to improve flexibility in creating nearby random instances
remove temporarycache . removelastupdatetime ( ) and remove lastupdatetime ( ) from temporarycache
do n ' t hide the layer container when create a new layer
set the default value of Availability _ availability to Availability . UNAVAILABLE to ensure proper initialization of the Availability _ availability variable
updated methods in FetchInvDataMsgHandler , PbftDataSyncHandler , PbftDataSyncHandler , PbftCommitMessage ,
chore ( deps ) : update gapic - generator - java version to 2.1 . 0
updated the ` _ freeSpaceReclaimDisabled ` variable from ` boolean ` to ` int ` and modified the ` freeSpaceReclaimQ `
changed access modifiers of several constant values from public to private in KDCOptions . java and added a new class KdcDefaultOptions . java to
refactor JsonWriter initialization to ensure proper initialization of the writer variable to improve code readability and prevent potential null pointer exceptions
updated formatting and formatting in ProfilePager . java for consistency to improve code readability and maintainability
rename the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to clarify the purpose of the method ' s
added a method ` valueFromClassConstant ` to retrieve the value from a class constant in ` Configuration . java ` to enhance configuration flexibility by allowing
added error handling for initialization failure in KafkaService to improve robustness by logging errors during service initialization
updated the ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` set to use ` ImmutableSet ` for ` RESOURCES _ TO _ 
camel - 14263 : camel - message - bus - add ' default - output - channel ' option to the message bus
added keywords field handling in HTMLDocument . java and a test for index keywords in TestDemo . java to improve indexing functionality and ensure correctness of
updated SDK _ INT check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of the _ addresses list in MemcachedSessionDataMapFactory . java to include a conditional statement to improve code readability and maintainability
replaced instances of ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` class . class ` in ` CorrespondenceSubclassToFactory
refactor Builder class to improve code structure to enhance maintainability and readability of the code
[ isbn ] use ebook . de / isbn2bibtex instead of manas . tungare . name / isbn -
add suppressed exception to polyglotexceptionimpl and set keepalivetime to 10 second
added null check for the text before executing fireDataChanged method in TextField . java to prevent potential NullPointerExceptions when the text is null
add a new option for treebanklanguagepack and simplified model
added trimming of the line before processing in SuffixURLFilter . java to ensure consistent line processing by removing leading and trailing whitespace
added a check for inGodmode in HandlerCombatInvocationsNotify . java to return early if the player is in Godmode to
ggb - 221 : remove register and unregister popup from checkbox creation dialog and text input dialog
updated constructor parameters in LinkedHashMapCache and BoundedLinkedHashMap constructors to remove unnecessary parameters to improve code readability and maintainability
removed redundant calls to ` _ channel . close ( ) ` in ` ChannelEndPoint . java ` to streamline code and improve readability
updated KeyIndexBuilder instantiation to use default values instead of hardcoded strings to improve code readability and maintainability by reducing hard - coded
updated exception handling to use Locale . ROOT in DirectUpdateHandler2 . java to ensure consistent exception formatting across different locales
add storecheckguard to the logicnode so that it can be use by the compiler .
refactor bciblockmapping to use exceptiondispatchblock instead of bciset .
cloud . getclassificationdisagreement ( buginstance b ) : add getclassificationdisagreement ( buginstance b )
replaced ` BuildTarget . copyOf ( buildTarget . copyOf ( buildTarget ) ) ` with ` BuildTarget ` in multiple classes to simplify code and
refactor SqlRunner class to improve code organization to enhance maintainability and readability of the code
change ` date _ taken ` from ` String . toString ( ) ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorage
changed the type of ` knownApis ` from ` TreeMap ` to ` Set ` and updated its usage in ` DefaultSdkProvider ` to improve
use confidenceprogressindicator instead of progressindicator in createofferingview
updated user agent from " Cling / " to " UMS / " in RequestHandler . java and RequestHandlerV2 . java , and
add a force iterate for the blueprint builder to the blockindex , so that it do n ' t throw an exception if the iterator be not
add support for image url in stealfundingchatadapter . getitemviewtype ( )
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL . java
mondrian : fix typo in spelling of ' root ' and ' root '
updated the ` insert ` method to remove the ` canvas ` parameter and modified the ` insert ` method signatures to remove the ` canvas ` parameter to
replaced the ` getVisitors ( ) ` method with a ` apply ( Refactor ) ` method in the ` RefactorModule ` class to
added methods to retrieve child elements by name and recursive children in Xml . java to enhance functionality for retrieving child elements based on their names
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer . java and its corresponding test in BasicHttpSolrServer
updated UI state management in TaskThumbnailView and SystemUiController to use SystemUiControllerFlags instead of static imports to improve code maintainability and
removed the private ClientConfigurationService field from IntrospectingTokenService . java to allow external access to the client configuration service
updated exception message formatting in HiveRecordSet . java to include additional context to improve error reporting for better debugging and debugging
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unused variables
fix typo in config . backupsnapshotaftertakingsnapshot ( )
added score calculation to the merge method in TextFragment . java to ensure that the score does not exceed the maximum of the score
removed the private Digester field from Md4PasswordEncoder . java to allow external access to the digester variable
added validation to ensure maximumUnimprovedStepCount is non - negative to prevent IllegalArgumentException when the property maximumUnimprovedStepCount
added a check to return early if the currently opened editors are empty to avoid unnecessary processing when there are no active editors available
add verify ( ) method to bddmockito and add unit test
replaced ` Thread . currentContextClassLoader ( ) ` with ` PathScanner . class . getClassLoader ( ) ` in ` PathScanner . java ` to
[ scb - 1695 ] add remotecodefirst . sayhi2async ( ) to the codefirstpojoclient ( ) method
add log to abstractsplitbrainprotectiontest to make it easy to debug
refactor logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the logout filter to improve robustness by preventing potential
gbasis : use degree ( ) instead of degree ( ) , not degree ( )
added logging functionality for consumers in DockerComposeContainer and created a new test class DockerComposeLogConsumerTest to enhance logging capabilities and improve test coverage for
updated the parameter type in the testMapping method from ` expected ` to ` actual ` in ` StandardJavaTypeMappingTest . java ` to ensure correct
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to return an ` ThrowingSupplier < T , E > ` from a Supplier < T , E >
replaced a break statement with a return statement in ConsoleActivity . java to improve code readability and maintainability
camel - 14297 : camel - platform - http : / / text / post should return a text content - content - content - content -
added platform separators methods to ` MorePaths ` and modified path resolution in ` CopyStep ` and ` CopyStep ` to improve path handling for
added a null check for authorizationContext before processing parameters to avoid potential NullPointerExceptions when params are not initialized
updated the ` load ` method to use ` throwExceptionIfFail ( ) ` instead of ` loadLibraryOnlyIfPresent ( ) ` to improve
updated SDK version from " 4611349 " to " 4514284 " and added tests for the ` isStopped ` method in `
add a new class ` TransactionLogKey ` to encapsulate the ` TransactionLogKey ` instances to enhance the functionality of the ` QueueTransactionLog `
added a new property ` enableSqlWithoutProfile ` and its getter / setter methods in ` JdbcEnvironmentProperties ` , ` JdbcEnvironmentRepository ` ,
added a try - finally block around the write method call in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
fix Eclipse compiler generics issue ( # 12225 )
updated date formatting in DateUtils . java and removed a test in FontParsersTest . java to ensure consistency in date formatting across the application
updated the ` loadValue ( ) ` method to accept a ` STACK _ TRACE _ DEPTH ` parameter and modified the ` getThreadInfo
added a new variable ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` and ` LeaderT
updated the file path for FastAsyncWorldEdit - P2 - V6 from " . net / " to " . net / FastAsyncWorld
updated file creation logic in SegmentGeneratorConfig . java to check if the output directory exists before creating it to improve robustness by ensuring the directory exists
added a new method ` calculateNormalVector ` in ` ObjUtils ` and refactored the method in ` TriangulationHelper ` to
updated the ` find ` method to use ` identityZoneHolder . get ( ) . getId ( ) ` instead of ` principalId ` to ensure
refactor SpanCollector class to improve code organization to enhance maintainability and readability of the code
added a null check for ` SESSION _ MANAGER . getCurrSession ( ) ` before accessing ` SESSION _ MANAGER . get
refactor TransactionIsolationLevel class implementation to improve code readability and maintainability
corrected the spelling of " printLVgroups " in the method name from " printLVgroups " to " printLogicalVolumegroups " to
added thread name setting for forwarding to the remote URL in TestSession . java to improve debugging by providing context about the current thread
refactor CookieManager class to improve code organization to enhance maintainability and readability of the code
simplified the return statement in LauncherExtension . java to simplify the code and improve readability
added a new OverviewToAllAppsTouchController to the list to enhance user experience by providing a overview view for all apps
replaced the ` scaleHotseatWithWorkspace ` method with a ` getHotseatScaleAndTranslation ` method in ` LauncherState ` and updated
added a check for JUnitRule in the DefaultStackTraceCleaner to exclude the JUnitRule from stack trace cleaning to ensure proper handling of JUnit
replaced instances of ` ARRAY _ BASE _ OFFSET ` with ` isDirect ( ) ` in ` MappedResizeableBuffer . java `
do n ' t remove balance listener in depositlist . removebalancelistener ( )
updated color conversion logic in RealisticRenderer . java to handle edge modes to ensure correct color representation based on edge mode
added null check for httpClientResponse in multiple classes to prevent potential NullPointerExceptions during execution
remove unused patternutil . checkpattern ( ) from gl200protocoldecoder
updated the timing logic in FullDetailsActivity to include a last playback time and added logging for the last playback time to improve user experience by providing more
refactor SpanishXMLTreeReader to use a new method for checking elliptic nodes to improve code readability and maintainability by encaps
added a check to clear the " language " and " iso " attributes in the InstallItem class to ensure proper handling of the " iso " attribute
updated ReactiveLoadBalancerClientFilter to set the override scheme based on the secure status of the service instance to ensure proper handling of service instances based on the
corrected a syntax error in the code for better readability and maintainability
remove final modifier from fullFilePathFromClassName method in NativeImageDebugInfoProvider . java to allow subclasses to access the fullFilePathFromClassName method
refactor the Correspondence class to use a lambda expression for better readability to improve code readability and reduce boilerplate code
corrected the spelling of " US " and " NonEN " from " US " to " EN " in the JRELocaleProvider
removed unnecessary null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability
add a new file for forge client to make it easy to use the render block .
added a return statement to the TxCacheDB class to ensure proper termination of the method execution
updated import statements from ` com . sun . internal . ws . asm ` to ` jdk . internal . org . objectweb . asm
refactor FastDictionary class for improved performance to enhance performance and maintainability of the code
add session . status _ closed to make sure we do n ' t close the session .
updated FlightEvent instances for GROUND _ HIT , TUMBLE , and SIMULATION _ END in FlightEventsTest . java to
[ beam - 14265 ] fix import of google - grpc - v1p26p0
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure correct namespace declaration is added to
instructorfeedbackresultspagedata : add courseid to the profile picture link in the feedback result page
added shortRules list and modified defaultRules initialization in DefaultPasswordValidator . java and added a test for alphabetic and numeric sequence validation in DefaultPassword
[ java ] add ` ` capturescreenshottostring ' ' command to Selenium driver
removed the import of JUnit ' s Test annotation from ProxyClassSerializationTest . java to streamline test execution by eliminating unnecessary dependencies
updated the ` scale ` argument format in ` DLNAMediaInfo . java ` to include the ` format = bgr24 ` to ensure
[ gr - 26469 ] remove redundant canonicalization phase from compilation test .
added a condition to check for the AUTHENTICATION _ MANAGER bean definition in AuthenticationManagerBeanDefinitionParser to ensure that multiple authentication managers are
added handling for PortSetHostPort in ForwardedRequestCustomizer and updated test cases in ForwardedRequestCustomizerTest to ensure proper handling of forwarded servers
added a call to setLength ( 0 ) in ConsoleReader . java to reset the output stream to avoid potential memory leaks
changed access modifiers of ` allowedRoles ` , ` disallowedRoles ` , and ` disallowedRoles ` lists from private to protected to allow subclasses
updated the OpenIDE module specification version in the manifest to ensure compatibility with the latest features and improvements
hbase - 16486 add default wrap size for netty rpc server
updated CookieStore , HttpURLPermission , Inet4Address , Inet6Address , InetAddress , InetAddress , ProtocolFamily , and URI classes to improve code
refactor FixedLengthTokenizerTests to use JUnit ' s Assert class and add tests for tokenization to improve test clarity and ensure proper exception handling
updated the protocol binding logic in OpenSamlAuthenticationRequestFactory and added a test for it in OpenSamlAuthenticationRequestFactoryTests to ensure proper handling of
refactor DepthController to utilize AttachedSurfaceControl for transaction handling to improve code clarity and maintainability by centralizing transaction management
update version check from " main " to " 2.1 . x " in AsciidoctorConventions . java to ensure compatibility with the latest version
hbase - 24226 addendum fix for http : / / issues . apache . org / activemq / browse / amq - 24
updated subList method calls from ` size ( ) ` to ` subList ( 0 , maxOpenFileNumInEachUnseqCompaction ) ` in T
camel - 16297 : camel - genericfileconverter should use fileinputstream instead of fileinputstream to avoid classcastexception
added a new ` build ( boolean login ) ` method to ` DefaultShardManagerBuilder ` and modified the ` login ( ) ` method in `
removed unnecessary whitespace in the DeleteGlobalRef method call to improve code readability and maintain consistency
updated table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " in AbstractRegisteredService . java to
added a conditional check for marked completion before termination in HttpSender . java to ensure that the response is only terminated when the completion is marked
updated the condition in FeedbackResponseCommentsLogic . java to check if the student is a user student before comparing the giver to ensure
added security checks for linked profiles in BMPImageReader . java to enhance security by disabling linked profiles based on user preferences
corrected the calculation of ` setSimpleCuboid ` and ` setSimpleCuboid ` in ` ClassicPlotManager . java ` to
add wait message when pmd check the file in the package
refactor grid presenter initialization and jumplist popup settings in StdGridFragment . java to improve code readability and maintainability by encapsulating
changed return values from false to true in ContributionsListFragment . java to ensure correct behavior of the method
added a test for skip range in DistinctPrefixFilterIT and modified the condition in BaseResultIterators to include a limit check in BaseResult
pdfbox - 4071 : add unit test for acrobat checkbox group property
added a method ` getFileLastModified ` to retrieve the last modified time of a file to enhance file management capabilities by providing a way to retrieve the last
added a condition to check for the " metaTable " table in HiveIcebergStorageHandler . java to ensure that the AVRO table is
[ bitsquare ] disable default currency selection in currency deposit form
changed exception handling from IOException to Throwable in WriteFlusher . java to improve error handling by catching more specific exceptions
added a boolean variable ` mStartedEnterAnimation ` and modified the logic for handling the enter animation in ` IconRecentsView . java ` to
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to store the active key ID in the configuration
updated action descriptions from " Sends a text mail " to " @ text / sendAttachmentMessageActionDescription " in SendMailActions . java
changed the visibility of the ` isActive ` variable from ` volatile ` to ` volatile ` in ` SocketServer . java ` to ensure thread safety
updated method names from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext ` and ` BrokerRequestTo
[ geot - 5296 ] fix compilation error with java 11
added a new import for MainApp and modified the condition to check for the ownCloud app name to ensure that the app name is correctly validated and
hbase - 16286 masterfilesystem . setrootdir ( ) should check permission for kerberos and restart the master
updated method calls from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in JakartaServletWebExchange and Javax
refactor Instant class to improve code readability to enhance maintainability and facilitate future updates
changed the return type of ` getStateFormat ` from ` int ` to ` String ` in ` CollectionsHandler ` and ` AbstractFullDistribZ
updated logging statements in CentralAuthenticationServiceImpl . java for consistency and clarity to improve code readability and maintainability
[ pdfbox - 4071 ] add support for illegalargumentexception in pdiccbased
updated file path validation in AbstractFileResourceSet . java to ensure correct handling of file paths in file processing
make pluginparameterexpressionevaluator only align to base directory when need
move protobuf coderregistry to extensions . extensions . protobuf and add new protocoderregistr registrar
updated JpaQueryParsingToken instantiation to include a boolean parameter to ensure correct parsing behavior for signed numeric literals
modified the ` generateLaunchLugFromRASAeroRailGuide ` method to include the parent ' s length parameter and updated related methods accordingly to
removed the ` getNonceFactory ( ) ` method from ` BitmexStreamingExchange ` to simplify the code by eliminating unnecessary method implementation
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 421 , use placeholder
[ java ] use default timer interval in test to avoid false test failure .
changed the default value of initializeLoadedClasses from true to false in FastClasspathScanner . java to disable the initialization of loaded classes for improved performance
added a call to grabFocus ( ) in FullTextSearchPanel . java to improve user experience by ensuring the search field is properly focused
fix npe in tlsconnectionlogging . setsslenginecaptor ( ) and setsslenginecaptor ( )
removed an assertion from the getDouble method call in StatementTest . java to simplify the code and improve readability
updated assertions in TestSolrConfigHandler to use a more descriptive expected value instead of a hardcoded value to improve readability and maintain
replaced ` HttpMethod ` with ` ServerHttpRequest ` and updated mocking logic in ` CsrfWebFilterTests . java ` to utilize a
refactor density handling in FilterResourcesStep . java to use a variable fromDensity to improve readability and maintainability of the code
added a new constant ` elementPrefix ` and updated the UIID update logic to use it to improve code readability and maintainability by centralizing
removed unnecessary dependency on DisplayMetrics in RecentsAnimationDeviceState . java to simplify the condition for better readability and maintainability
added two new files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java to implement and test
added AwaitsFix annotation to ReplicationFactorTest . java to address a known issue related to SOLR - 6157
fixed - rexecutorservice . schedule ( ) throw npe if nextstartdate be null
removed the null check from the needsToUpdateCredentials logic in FileDownloader and FileUploader classes to simplify the code by eliminating unnecessary null checks
refactor scanner closing logic in Compactor . java to handle null scanners gracefully to ensure proper resource management and prevent potential NullPointerExceptions
[ java ] use getdefaultvalue ( ) instead of get ( ) in netmetrics . java
added a nonce parameter to the TokenMvcMockTests to verify the behavior of the token ' s claims for a given token
refactor multiple chart editor classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
added width and height settings to formLayeredPane in Form . java to ensure proper layout behavior for the form layer
updated import statements in BrowserContentPane . java and added a maxY method in BrowserContentPane . java to ensure correct height calculation based on owner
changed the return type of the ` openDatabase ( ) ` method from ` void ` to ` boolean ` in ` SharedDatabaseLoginDialogViewModel `
replaced hardcoded string ` DOCKER _ COMMAND ` with ` Platform . DOCKER _ COMMAND ` across multiple files to improve
added a null check for the input stream before calling the initializeParameters method in TestIsartorValidationFromClasspath . java to improve robustness by
updated the drawLeaveBehind method to accept a color parameter for the folder ' s background to enhance flexibility by allowing customization of the folder
add an error message to indicate that the flutter plugin do not work correctly with android Studio versions of Android Studio
fix npe in api responseserializer when no table be find
removed unused fields and methods from StartArgs . java to streamline the code and improve maintainability
updated argument validation in GeminiMarketDataService . java to allow greater than or equal to 1 to ensure that the argument length is greater than or equal
replaced HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure consistent iteration order for questions in the request context
add unit test to show how to send error to the realm
updated exclusion exclusions in AuthCheckFilter . java to include specific jsp files to enhance security by preventing unnecessary jsp files from processing
refactor runnable execution logic to use a queueRunnableAndSort method to improve code readability and maintainability by encapsulating runnable execution logic
updated method signatures in AbstractCommandRunner , AuditCommandRunner , CommandRunner , CommandRunner , CommandRunner , CommandRunner , and CommandRunner to use
refactor reading logic in XMLParser to use a variable ' i ' instead of a variable ' c ' to improve code readability and prevent potential
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest ` to verify that the text appears on overflow
set the pivot position of the arrow in DeepShortcutsContainer to improve the visual appearance of the shortcuts container
do n ' t print stacktraces in case of interrupted exception
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter and modified the thumbnail update logic to include a ` refreshView ` parameter
pdfbox - 4071 : use class . getName ( ) instead of org . apache . pdfbox . extractttffonts . java to
updated InternetAddress instantiation to include a boolean parameter and added error handling for invalid hostnames in EmailFormatSpecifier and HostnameFormatSpecifier to ensure proper
replaced instances of ` DrawerActivity . this ` with ` this ` across multiple activities to simplify code by removing unnecessary ' this ' references
refactor ` SizeBasedDocIdSetBlock ` , ` SizeBasedDocIdSetBlock ` , and ` FilterBlockDocIdSet ` to
refactor ` promptToOpenFile ` methods to accept a ` String ` parameter for file name handling to improve code readability and maintainability by
updated widget span and page count calculations in AppsCustomizePagedView . java and refactored page count update methods in AppsCustom
added logic to retrieve active instances and transformed coordinates from instances in FlightConfiguration . java to improve the accuracy and efficiency of the flight configuration handling
use ` ` direct : ' ' instead of ` ` seda : ' '
updated DateTimeFormatter to use Locale . ROOT for default date formatting to ensure consistent formatting across different locales
[ dspace ] add filter permission to filter metadata value by admin context .
added a new test method ` testMissingRequired ` to ` TestStarTreeConfig . java ` to ensure that the StarTree configuration correctly handles missing
camel - 14297 : camel - spring - boot : allow recipientlist to be use by spring - boot
refactor InlineLayoutBox and HoverListener to improve style handling and repaint logic to enhance code readability and maintainability while ensuring proper repaint behavior
refactor AuthenticatorActivity to replace DetectAuthenticationMethodOperation with OperationsServiceConnection and update related service handling to improve code readability and maintainability by
