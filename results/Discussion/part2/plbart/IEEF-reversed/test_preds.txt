update socketappender constructor to set remote host and port correctly.
refactor code to encapsulate prompt header retrieval logic in a separate method to improve code readability and maintainability by reducing duplication
updated msgLength assignment in ManyToOneRingBuffer. java to ensure correct retrieval of message length from the buffer
cloudstack - 2120 : don't set cpu and ram overcommit ratio if it's null
added flags handling in ShadowPaint and updated test cases in PaintTest to improve flexibility and correctness of antialiasing behavior in tests
updated the title in MassSetFieldsDialog from " Set / clear / append / rename fields " to " Set / clear / append /
added a condition to check if the bug reporter's collection is empty before reporting the bug to improve error handling and ensure that " Eclipse "
don't use scheme in digest auth when digest auth scheme be none ( netty4 async auth )
added an interface RemoteInputListener to handle connection and disconnect events to improve the handling of connection states in the RemoteInput class
refactor conditional statement formatting in OrcEncodedDataReader. java to improve code readability and maintainability
[ homeconnect ] fix home connect bridge not be able to connect ( # 14955 )
added null checks before removing and adding policies in AuthorizeAdminServlet to avoid potential NullPointerExceptions when manipulating policies
updated date format assertions in multiple test files to use ` hPM ` instead of ` PM ` to ensure consistency in date formatting across tests
added JSON serialization for DAG information in TezTask. java to enable better tracking and debugging of DAG information
bugfix : compute heap tag time base on heap dump
updated upload count retrieval from RxJava2Tasks to CommonsApplication to ensure compatibility with the latest API changes
removed unnecessary lock mode checks in MVTable. java to simplify the code logic for better readability and performance
[ issue # 5958 ] fix commitlog offset overflow ( # 5958 )
added logic to prevent marking of folder info as open and reset its opened state to improve user experience by ensuring the folder is only opened when
add a new test method ` testSortOrder ` to ` PGPropertyTest. java ` to ensure that property names are sorted in ascending order
added a constant for HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common. java to provide clearer guidance
changed the parameter type from Object to ItemInfo in the supportsDrop and getUninstallTarget methods to improve type safety by using ItemInfo instead of
updated assertion message format in RequestBuilderTest. java to improve clarity and consistency in error reporting
replaced occurrences of " RetainedFragment " with " NearbyListFragment " and updated fragment handling to improve clarity and functionality in managing near
hhh - 14748 fix npe in flatprofilecontainerfreetable constructor
[ te ] add a feature to send zero anomalies ( # 1375 )
[ hotfix ] [ kafka ] fix typo in flinkkafkaconsumerbase
added methods to retrieve user and geofences by userId and geofenceId to enhance data retrieval capabilities for better user management and geof
modified the constructor of BlockingResponseListener to accept a maxLength parameter to allow for greater flexibility in handling large request sizes
[ jm - 4684 ] remove thread name from memberadded packet ( # 4687 )
added a try - finally block to ensure resources are closed after sending snapshot fragments to improve resource management and prevent potential memory leaks
updated expected error description in LoginSAMLAuthenticationFailureHandlerTest to ensure consistency in error reporting
updated test cases in ConfigMetadataProviderTest. java to improve test coverage and ensure accuracy of configuration handling
updated import statements in ListFragment. java and SnoozeActivity. java, and modified method signature in SnoozeActivity. java to
added a private static class ` AcceptAllFilter ` and refactored code in ` WindowsDirectoryStream ` to implement a custom filtering mechanism to
updated JdbcTestDataSet. java file to improve test coverage and maintainability
make hotspotresolvedobjecttype. lookuptype usable in case of noclassdeffounderror
refactored the validation logic for Docker image names to use a new utility class ` DockerImageName ` to improve code maintainability and readability
updated dialog message strings from " login _ failed _ username " and " login _ failed _ password " to " login _ failed _ wrong _
add setautofocus ( " autofocus " ) to multiple form classes to ensure focus is always on the currently selected field
added unit test for zone properties in SamlIDPRefreshMockMvcTests to ensure correct handling of SAML properties in the zone provisioning process
added logic to handle empty or non - empty list cases in ComparableVersion. java and updated test cases in ComparableVersionTest. java to ensure
updated method calls from topLeftMode to bottomRightMode, topRightMode, and bottomRightMode, and adjusted getPreferredW and getPreferredH
moved ` ParallelUniverse ` and ` ParallelUniverseTest ` from the ` robolectric ` package to the ` internal `
[ java ] change return type of nodefactory when create a localcachedefactory.
update fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills. java to improve visual consistency by using a
add functionality to draw self - loops in the ProcessingPreview class to enhance visual representation of self - loops in the graph
rename ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 0
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in method naming
reset the translation of the drag handle indicator to ensure proper vertical alignment during transitions
remove some unneeded log message ( report by lgtm. com )
updated the description of pushing predicates down into storage handlers in HiveConf. java to improve clarity and understanding of optimization settings during query optimization
added an assumption to skip tests on the build server to address issues related to build server issues
added Maven bundles for Jetty ALPN Java client and Jetty ALPN client in TestJettyOSGiAnnotationParser. java to enable debugging capabilities
fixed lock time update in case of optimisticlockingexception
refactored transaction handling logic to improve performance and reliability of transaction operations
replaced CustomFieldBehavior annotation with ExcludeFromRuleKey in GenruleBuildable. java to exclude genrule execution from rule keys to improve
simonstewart : make the firefox custom profile launcher work on window
fix the bug that ptableimpl # putmulticolumns ( string, list < string > ) should use putifabsent ( string
[ hotfix ] [ core ] fix rawtypes warning in hadoopoutputcollector and hadooptupleunwrappingiterator
added logic to fetch and store derived columns and indexes based on the parent version in MetaDataEndpointImpl. java to ensure proper handling of table structures
update google _ client _ id on updateStudentCascade ( ) instead of getStudentForEmail ( )
updated import statements for TestCellReference in AllXSSFTests. java to ensure compatibility with the latest POI library structure
add water halness check to the obsidian block'getHardness method to ensure that only horse is processed when a horse
added a new file LongPointerPressTest3049. java with basic UI components and error handling to facilitate testing of long pointer press
truffle : do not inline truffle function if the graph be too big.
refactored null checks in multiple builders to use a ternary operator to improve code readability and reduce boilerplate
removed unnecessary type check in ListBlockParser and added a new test for deeply indentationed lists in SpecialInputTest to simplify parsing logic and
added a new abstract class ` AbstractOptionalAssert ` and removed it from ` Optional. java ` to streamline the code by consolidating related
added an import statement for JUnit's Ignore annotation and a fixed bug in WebfluxNotIncludedTests. java to temporarily disable tests that are
[ java ] remove jsinterop. annotations. jspackage. global from testcaselogger. savesmessage.
( chore ) camel - test - infra - blueprint : fix checkstyle violation
added a condition to check if the video format is video before processing web subtitles to ensure that web subtitles are only processed when a video format is
added Security. setProperty ( " jdk. tls. disabledAlgorithms " ) to ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS
server : don't try to destroy storage pool when it be in zone.
enhanced logging in Driver and QueryResultsCache to include cacheEntry details to improve log readability and provide more context for debugging
[ java ] add option to skip model update when manage dependency be miss.
added a test for sending a last intent with the request code in ShadowActivityTest. java to ensure correct handling of PendingIntent requests in the activity
updated FBO settings and graphics creation methods in RocketFigure3d. java to improve visual rendering quality by enabling and disabling FBOs
added synchronized keyword to the controllerListeners list to ensure thread safety when modifying the list concurrently
solr - 9893 : disable test that don't work with java 9
updated the year calculation method in TimestampUtils and added new DateTimeFormatter tests in SetObject310Test to improve accuracy of year handling and ensure
fix a problem where we couldn't disconnect a jabber account.
fix syntax error in TxnHandler. java to ensure proper concatenation of ws _ table and commit _ id
replaced ByteChunk with ByteBuffer and updated related methods to improve memory management and handle BufferOverflowException
added a new method ` toSync ` in ` AsyncUtils ` and created corresponding test cases in ` AsyncUtilsTest ` to improve asynchronous handling
added ActionGraphBuilder to multiple compiler factories to enhance rule management and improve code organization
simonstewart : add invisible input to upload page
removed redundant try - catch block while creating tables to streamline error handling and improve code clarity
added a check to return the super class's local Maven directory if the file does not exist to ensure the application uses the correct local Maven
ticket # 2694 : hide algebra label for hidden element
fix : fix npe in ctelementimpl # getmetadata
replace ` setFlags ` with ` addFlag ` in ` DefaultTrackOutput. java ` to improve clarity by using a more descriptive variable
don't re - enable reordering for non - sorted by instance
updated error message from " Method call not specified for verify ( mock ) " to clarify the context of the error message
added a null check for backupFolder before logging the expire date to avoid potential NullPointerExceptions during execution
added a new file ` ArrayNewInstanceOfVoid. java ` implementing a test for creating a void array using reflection to explore and handle the behavior
added @ AddToRuleKey annotation to the final modifier of toolType in ClangCompiler. java and GccCompiler. java to ensure
added a constant PINCODE _ TIMEOUT and updated the timestamp comparison logic to improve code readability and maintainability by centralizing timeout logic
make meterregistrytest and prometheusexemplarsample default to true
removed @ Ignore annotations for MongoDB server dependencies across multiple test files to enable and disable tests that require the mongodb server
fix checkstyle violation in test file
change condition from checking if mdTable is artifical to checking if it is artifical to ensure that the table is not artific
updated file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer. java and LaunchMapper. java to improve clarity
refactor session attribute handling logic in MongoSessionManager. java to improve clarity and correctness of attribute management
use setsizefromlayout ( ) instead of setfixedsize ( )
refactored the stopping handling in AbstractConnector to use a local variable to improve code readability and maintainability
removed unnecessary whitespace in HuobiStreamingService. java to improve code readability and maintain consistency
defaultmessagehistory should not use stopwatch to calculate elapsed time a it don't take a timestamp anymore.
( chore ) camel - delayedmono : fix flaky test
change assertion from assertTrue to if the error is not WebSocketHandshakeException to improve error handling by expecting a WebSocketHandshakeException
refactor ` AllAppsTransitionController ` to use a custom ` View. OnLayoutChangeListener ` interface to improve code readability and maintainability by standard
rename variable'theHandler'to'handler'for clarity to enhance code readability and maintainability by using a more descriptive variable name
added support for the " default - output - channel " attribute in XPathRouterParser to enable configuration of the default output channel in the XPath router
changed cacheSeconds from an integer to a String in MessageBundleProperties. java and updated cacheSeconds assignment in CasCoreWebConfiguration. java
bump openapi version refs to release 3.0 . 0
removed the ` append ` method call from ` ByteBufferPool. java ` to streamline the buffer handling process
added a check for the presence of " alt - rt. jar " in the boot classpath to ensure tests skip when an alt - rt jar
updated user names in JdbcScimUserProvisioningTests for consistency and clarity to improve code readability and ensure correct user names are used
updated the flight recording options in FlightRecorderProfiler. java to include a check for unsupported Java versions to enhance flexibility in flight recording options based
added a method ` isStreamEmpty ` in ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to handle null stream cases to
added a condition to ensure the buffer is not empty in HttpParser. java and implemented a test for chunked transfer encoding in ProxyServletTest.
camel - 18131 fixed the c error of atmosendpoint javadoc
added support for " printf " and " print " conditions in Java2TypeScriptAdapter. java to enhance logging functionality and improve code readability
added a new file TestCapacityUntilGCWrapAround. java to test the capacity after garbage collection on 32 - bit platforms to ensure that met
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
update the calculation of the endTime in SamplingStatCalculator. java to ensure accurate tracking of timestamps at the start of the output
added unit test base on user forum issue
tmi - jpeg : fix broken'icc _ profile'chunk number.
fix the terraform rod and the tornado rod's rod's rod, fix the terraform rod
refactor JoobyModule and SpringModule to conditionally register providers based on their type to improve bean registration logic to only register providers with specific type
remove createloaderrule from contextruleset to simplify context loading
allow nameupdater. properties to be load from meta - inf / resource.
fix miss start flag in ellipsoidregionselector.
replaced all instances of " http " with " https " in JavaSEPort. java to ensure secure access to the codebase
[ geos - 8470 ] add sortby parameter to wfs getfeature.
updated the assignment of the grantor variable to check for null instead of checking for equality to improve clarity and correctness in handling null grantor values
updated DiagramGenerationTest. java to use compatible images instead of expected dimensions to ensure the test uses the correct graphical context for image comparisons
throw a runtime exception if you can't install fml properly.
rename DataUtilities and ReTypeFeatureReader classes to improve clarity and consistency in naming conventions
fix flaky test locktest. islockedatetimeoutofboundsexception ( # 21143 )
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` class to enhance tokenization functionality for improved usability
use standard error code for 404s instead of custom status code
refactor command retrieval and indexing logic in SystemHighlighter. java to improve command handling and ensure command indexing is consistent
update version to " 1.0. 1 - SNAPSHOT " and set version date to PENDING to prepare for upcoming development
update buffer position parameter from ` idx ` to ` dimensionSize ` to ensure correct dimension size is used for buffer positioning
added functionality to manage drag and drop states in multiple classes to ensure proper handling of drag and drop requests in the system UI
disable socketappendertest. testsocketipv4address ( ) for jdk7
added " PSK - AES256 - GCM - SHA384 + TLSv1. 2 " to the TestCipher class to support additional encryption
replace ` getDescription ( ). getText ( ) ` with ` getLongDescription ( ) ` in ` NearbyMapFragment. java ` to
added JsonProperty annotation to ScimGroupMember. java to enable JSON serialization for the ScimGroupMember object
updated HqlQueryRenderer to handle reserved words and added a new test for schema scoping to improve query parsing functionality and ensure correct schema
( chore ) camel - subscription : fix typo
refactor Parser class to improve code readability and maintainability
updated the parameter name from ` index ` to ` indexStartsAtOne ` in ` offsetStreamIndex ` method to improve clarity and correctness
tika - 697 -- fix magic detection, and add test for cpio
[ hotfix ] [ table - planner - blink ] remove deprecate sqlmonotonicity method from flinksqloperatortable
added equals, hashCode, and toString methods to OneTimeTokenAccount class to enhance equality and string representation of OneTimeTokenAccount instances
added a condition to check if the assistant isLaunchedAssistant before fling to ensure that fling is only triggered when the ass
added a new file SolarisShortDSA. java that implements key pair generation and signature verification to ensure proper handling of Solaris DSA key
added a call to toggleSearchLabel with a value of false to disable the search label functionality in the ListFragment
bug 14332 : don't lock the volume when create snapshot, throw an exception.
refactor ` mConnection ` to ` DetailsServiceConnection ` and implement it within the ` FileDetailActivity ` class to improve code organization and ensure
refactored error handling in HttpClientTLSTest to use AtomicReference for SSLPeerUnverifiedException to improve error management and ensure proper handling of SSL
removed the equals method from ConjunctionScorer class to simplify the class and improve usability
added a null check for the item before colliding it to avoid potential null pointer exceptions during item binding
fix raft group leader election test ( # 18355 )
updated cache shrinking logic to use a do - while loop instead of a do - while loop to improve cache performance by reducing the maximum cache
updated API version from " / api / v2 " to " / api / v3 " and modified limit order conditions in CryptoFacilities
added empty ( ) method to freenect2 class to provide a way to check if the size of the array is zero
added handling for Optional values in AsyncPageReader and created a new test for empty dictionary pages in TestEmptyParquet to improve data handling and
updated argument validation and improved error handling in SerumStreamingService. java to enhance input validation and ensure correct market data type usage
add a config option to disable the charging animation when you're charging on top of a pool.
[ java ] don't set ischallenged to true if cluster be already connect.
log interrupted exception instead of ignore
modified the test to assume filesystem support before creating the wacky directory to improve test reliability by ensuring that filesystem operations are only performed
swapped the order of ` dialogStylesScss ( ) ` and ` openScreenStyle ( ) ` in the ` ResourcesInjectorFull ` class
changed the data type of ` changeLogFile `, ` outputFile `, and ` outputFile ` from ` String ` to ` FileResource `
fix checkstyle issue in blockworldvector. java ( # 722 )
changed the ` CacheEntry ` class to be final and added ` final ` modifier to the ` CacheEntry ` class to enforce immutability
replace string literal with a regex pattern for resource configuration to ensure proper handling of special characters in resource configuration
modify the credentials cache retrieval to allow for a variable number of credentials instead of a hardcoded value to enhance flexibility in credential management by allowing different caching
updated the database path variable from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to
fix ( sync ) : do not rely on the fastsync minimum peer count
danielwagnerhall for emmasoderberg : fix compilation error
fix ( freezev2 ) : do not expand AreEqual format expression
added a condition to clear pending rendering operations when the implementation is minimized to optimize rendering performance by reducing unnecessary operations
don't call sleepmillis ( ) if it don't pass yet.
ensure coalesced write - behind write - behind write - behind write be continuously update key
added a null icon to the JLabel to prevent potential NullPointerExceptions when saving space
updated test methods for strict match and nonstrict redirection matching to improve test clarity by differentiating between strict and nonstrict redirect matching scenarios
added closing of the serverSocket in ShutdownMonitor and refactored test methods in ShutdownMonitorTest to improve resource management and enhance test coverage
improve performance of randomaccessstore. readoverlystorelock ( )
refactor serialization handling in Json. java to improve clarity and functionality to enhance code maintainability and handle deserialization more effectively
[ hotfix ] [ runtime ] move componentclosingutils to runtime
bug 143 : destroy vm's volume when transition to error state
bugfix : fix a typo in the return value of getip6rangefromvlan
corrected the spelling of " userDetails " to " beanNames " in the InitializeAuthenticationProviderBeanManagerConfigurer and InitializeUserDetailsBeanManagerConfigurer
increased the retry timeout from 15000 ms to 30000 ms in the CollectionsAPIDistributedZkTest to allow more time for leader retrieval
removed the Exception parameter from the error handling methods in AbstractParam, BooleanParam, IntParam, LongParam, and StringParam classes to simplify
update drawImage calls to use negative offsets in URLImage. java to ensure correct rendering of images with negative offsets
updated the condition to check for the size of solrDocument1 and solrDocument2 in SolrTestCaseJ4. java to ensure that the comparison
mondrian : fix for mondrian - 1221 ( indexoutofboundsexception in setFunDef ).
[ hotfix ] [ stream ] include exception cause in streamconfig exception
refactored the processing of hashtags in Preprocess. java to improve clarity and efficiency of tag processing logic
removed unnecessary whitespace in the read method signature to improve code readability and maintain consistency
added a new annotation interface Mapper in the org. apache. ibatis. annotations package to enable custom annotation behavior in the application
don't encode empty extension list in hl7. org # fhir # r4
updated artifact parsing logic to handle external metadata with no internal name to ensure accurate artifact identification in the library management process
added alias " node _ popup _ scripting " to the entry navigator to support scripting node functionality in the script menu
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants, and refactored task visibility logic in
camel - 16400 : fix compilation error of camel - jms
[ hotfix ] fix checkstyle violation in java.
deleted deprecated classes ` AbstractDelegatedVerb ` and ` FailureContext ` to remove unused code to streamline the codebase
updated ` GzipHandlerTest ` to use ` final ` for content variables and added a new ` MicroServlet ` class to improve code clarity and
use backpressureutils. getandaddrequest in operatorendatortest to fix flaky test
added logging functionality and improved formatting in the SpeedmentImpl class to enhance debugging capabilities and maintain code readability
add hook to load oai config from dspace - config
hbase - 15421 fix nullpointerexception in storescanner when row be null
camel - jbang - enable and disable jmx on the camel - test - karaf test
replaced hardcoded'/'with a constant CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation. java and SourceCodeDisplay. java to
added YARNBIN configuration methods and refactored application information retrieval in RemoteSparkJobMonitor to enhance application management by ensuring YARN is
updated database check condition to include " maria " as a valid database name to enhance flexibility in database connection handling
hbase - 15421 fix typo in masterwalmanager and splitlogmanager ( stephen jiang )
added a new file ` ExecuteAndReturnStringTest. java ` to facilitate testing of string execution with basic UI components
added a new file InvokespecialInterface. java with interfaces and methods to demonstrate the usage of method invocations in the interface
refactor EvictingBoundedList class to improve code readability and maintainability
modified the way traversal modes are assigned in GraphHopper. java to ensure that the traversal mode is set only when needsTurnCosts
added a null check for the backgroundDisabled variable and improved selection validation in SelectBox. java to ensure that selection is valid and prevent potential errors
added a null check for the method name in RpcServer. java to ensure that unsupported operations are handled gracefully
update hotseatCellSize calculation to include borderSpacing to improve layout consistency and appearance of hotseat icons
refactor partition string concatenation logic in ExpressionTree. java to improve clarity and efficiency in handling partition column names
added versioned interface to NamedTaskDecorator and modified data handling in NamedTaskDecorator to support versioned tasks in the cluster
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler. java ` to ensure
updated the boolean variable'equal'to true for display mode verification to ensure that the test accurately verifies the intended display mode behavior
updated UnicodeToLatexFormatter to conditionally append glyphs based on the current character's code point to ensure that only valid glyphs are
added null check for value and value assignment in OAIDCCrosswalk and Item classes to ensure valid input handling and prevent potential NullPointerException
simonstewart : remember the original window handle in the back of a selenium - backed selenium session
added a clear button and a check for file extensions in the BookmarksPanel and DataBrowser components to enhance user experience by allowing users to clear
refactor port handling in ` OAuth2AuthorizationRequestRedirectFilter ` to use ` UrlUtils. buildFullRequestUrl ( ) ` to improve URL
updated assertions in SoftAssertionsTest to use parseDatetime and containsSequence methods to improve accuracy of date comparisons and enhance test reliability
updated ` adaptOrders ` method to accept a boolean parameter for reverse order handling to enhance order adaptation flexibility by allowing variations in order handling
updated PrettyPrinter to handle null vartype and position cases, and created a new Java11Var class to improve type handling and introduce a
simonstewart : fix build after the recent selenium - backed webdriver change
changed the instantiation of ` conf ` to ` Configuration ` with a ` false ` parameter and removed a debug log statement for overriding Hadoop configuration to
updated the call to ` super. draw ( batch, parentAlpha ) ` in ` WidgetGroup. java ` to ensure consistent rendering behavior
added unit test base on user forum issue
use get catalinabase ( ) instead of system. getProperty ( ` ` org. apache. catalina. Globals')
added tests for the getBestDateTimePattern method in ShadowICUTest. java and modified the getBestDateTimePattern method in ShadowICU
updated color mapping in PlotSquared. java to include additional color codes to enhance the visual appearance of the PlotSquared
added ZuulProperties parameter to TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance tracing capabilities by integ
tika - 3740 -- fix unit test for font - like conversion
added new file ` SampleApplication. java ` and ` SampleApplication. java `, and modified ` BuildInfoMojo. java ` to include
update calculation of xDist to use Math. abs ( ) for accuracy to ensure xDist is accurately computed for smoother calculations
deleted the file GUIRWTester. java to the test suite is no longer needed in the project
removed nullability annotations from constructor and method signatures in LazyMessage, StandardSubjectBuilder, and CustomFailureMessageTest to simplify code and improve
pdfbox - 4892 : fix typo, a suggest by valerybokov
rename thymeleaf - template - parser to thymeleaf - template - parser. markup and thymeleaf - templateparser. iml
xpathtest : add more test for xpathbuilder. xpath ( )
added Nullable annotations to FutureUtils. java to enhance code clarity by indicating nullable values
print a warning if invokedynamic be not resolve during call - graph construction
updated email addresses in ContextTest. java to use the correct domain for created and new email
updated HTTP response formatting in HttpConnectionTest. java and adjusted URIUtil. decodePath in URIUtil. java to enhance readability and correctness of
added getColumnDataType method implementations in AbstractResultSet, ResultTableResultSet, and ResultSet classes to provide a consistent way to retrieve column data type from an
add unsupportedoperationexception to interface method in dynamodb - client
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replaced the use of ` System. currentTimeMillis ( ) ` with ` Instant. now ( ) ` for time measurement to improve accuracy in time
added version handling to LibMediaInfoParser to ensure compatibility with newer media information formats
added methods to reflect IntelliJ dependency and create a proxy for IdeaDependency to enhance IntelliJ integration with the IDE's internal tooling library
added a new SerialHeap class and updated references in Universe. java to replace GenCollectedHeap with SerialHeap in the heap constructor
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types. java to suppress serialization warnings related to serial data usage
fix : send mouse wheel tooltip on mouse move
updated the method to handle null values in the ` addAppropriateLikeRegexTo ` method and added a new test for verifying behavior
[ hotfix ] [ table - common ] fix wrong return value in maptypeinfo.
added a method to retrieve an identity provider by issuer in XOAuthProviderConfigurator. java and corresponding tests in XOAuthProviderConfiguratorTests. java
pdfbox - 4892 : fix cmapparser with poor whitespace
refactor ContactsBackupJob to use ServiceConnection and streamline service management to improve reliability and maintainability of the code
refactored type constraints and introduced new classes T6938454a and T6938454b to improve type handling and introduce new classes
added isconfighidden ( ) method to accountid and protocolproviderfactory to check if the account hidden protocol provider.
added logging for incompatible display dimensions in DisplayController to improve error handling and debugging for display state mismatches
simplified schema removal method in PMetaDataImpl. java and added a test for schema removal in PMetaDataImplTest. java to improve code clarity
add ` ` loginpassive'' action to listen to change in passive login.
added a new file Box2DTest. java and updated references in various files to implement a new test class for Box2D functionality
replace - deleted - by - anonymous with ` < anonymous > ` and add some debug information
[ hotfix ] [ test ] increase default buffer request timeout to 5 minute
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
openoffice : add ` ` help'' button to help page
replaced `. option ( ) ` with `. childOption ( ) ` in multiple classes to enhance code readability and maintainability by using a
updated method signatures in BinanceAuthenticated, BinanceAccountServiceRaw, and BinanceTradeService classes to improve type safety and eliminate unchecked warnings
refactor class name assignment logic to use a transient transient field to improve performance by avoiding repeated class name assignments
refactoring of decodeservlet. java to reduce code duplication.
added null handling functionality to the Querydsl class and created a new QuerydslIntegrationTests class to enhance query processing capabilities and ensure proper
added a null check for the current actor in SequenceAction. java to ensure actions are only processed when the actor is not null
fix flakiness in cttypetest. cttypetest [ hz - 2197 ] ( # 2451 )
added synchronization to the flushing and closing of BucketWriter instances to ensure thread safety when accessing shared resources
added a new interface ` Issue888 _ JavaI ` and ` JJ ` with implementations ` aa ( ) ` and ` JK (
added functionality to revoke certificates in the CertificateManager to enhance certificate management by allowing revoking of certificates
added a check for no body codes in the response handling to ensure that the response does not contain a body when no body is provided
dataimporthandler should not throw exception if script be not present in java 6 or above.
added support for Hikari configuration in multiple classes to enhance database connection management and improve error handling
replaced instances of ` mDevice. pressHome ( ) ` with ` mLauncher. pressHome ( ) ` in multiple test files to ensure
added functionality to conditionally show and hide locked files in the FileMenuFilter and OCFileListFragment classes to improve user experience by allowing specific actions to
updated versioning logic in mmm Version. java and ppp Version. java to ensure compatibility with current versioning standards
clear endpoint cache when update keyspace
refactor wait logic in Locks. java to use a separate waitForState method to improve code readability and maintainability by reducing redundancy
updated ` SkylarkDescription ` and ` SkylarkDescriptionArg ` classes to use ` SkylarkRuleContextAttr ` instead of ` Map <
simonstewart : move the storage interface to a separate file to improve code organization and reduce duplication.
fix out of bound exception when create or replace view
changed the exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner. java ` to allow for broader error handling
updated query string retrieval in SpellCheckComponent. java to ensure default value is used when no query string is provided
added validation for header values to ensure illegal characters and whitespace are present to improve robustness and prevent runtime errors in header processing
replaced instanceSize with arrayBaseOffset in HybridLayout and added afterFieldsOffset getter in HostedInstanceClass and UniverseBuilder to
pmd : fix compilation error in apextreebuilder
hhh - 14501 log association with ` @ fetch ( fetchmode. join ) ` and ` lazy ` be interpret a ` FetchType.
refactored NoGetOperationsFilter and NoUserOperationsFilter classes to extend AbstractSpecFilter and overrides the isParamAllowed method to improve class
added database name and table name retrieval in TestCompactionTxnHandler and TxnHandler to ensure consistency and correctness of database and table name retrieval
camel - 15410 : timer consumer should be suspendable so you can graceful shutdown
added a conditional check before adding traces and removed the current block from worklist to ensure traces are only added when the block is processed
updated the ProviderManager class to use CollectionUtils for checking providers to improve code readability and ensure robust handling of null elements
updated version check for PostgresDatabase in InsertOrUpdateGeneratorPostgres. java to ensure compatibility with newer database versions
added tests for local index limits and refactored related code to use a constant for page size to improve test reliability and maintainability by
added a check to prevent adding a collection with the same name and a different type in the future to ensure data integrity by preventing duplicate collection names
update cursor positioning logic in VDUBuffer and vt320 classes to ensure correct cursor positioning based on screen size changes
replaced the static final String USE _ RETRIES with a static final constant in HttpShardHandlerFactory. java to standardize the use of retries
update version number formatting in JavaVersion. java to ensure correct parsing of Java versions with leading zeros
[ hotfix ] [ task ] do not execute streamtask on empty environment
( chore ) camel - test - infra - rocketmq - backport main ( # 1749 )
add null check for properties in RemoteCluster. java to avoid potential NullPointerException when accessing properties
( chore ) camel - fs - blobstrategy : don't throw original exception
updated error message formatting in RepositoryVersionResourceProvider. java to improve clarity of error messages for stack upgrade failures
txid textfield : fix concurrentmodificationexception
added a constant for G1 Perm Gen in JmxSupport. java to support G1 perm Gen functionality in the application
removed unused imports and simplified return logic in NearbyController. java to improve code clarity and reduce dependencies
pdfbox - 4892 : fix unchecked warning, a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2. java to improve accuracy in determining if a task is a home activity
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related constants and methods accordingly to clarify the purpose of the
updated method names and variable names for clarity and consistency to improve code readability and ensure proper handling of country codes
updated the method call to set the unfreeze amount in UnfreezeBalanceV2Actuator to ensure proper handling of unfreezing balances
add per match to conference scheduling description ( http : / / groups. google. com / d / msg / conferencescheduling - * )
simonstewart : replace deprecate fileutils. copy ( ) with fileutils. copydirectory ( )
rename multiple assertion classes for consistency to improve clarity and maintainability of the codebase
[ hotfix ] [ doc ] fix typo in new onbackpressurebuffer javadocs
replaced the ` keyValue ` assignment with a ` addMultiFieldOperation ` in the ` Update ` class and added tests for multiple push - all
add null check before setting the UUID in hubChangeLog to avoid potential NullPointerException when randomUUID is null
added hover event handling in InputConsumer classes to support quickstep live tiles functionality
added a condition to check if ` boostrapConf ` is set based on zk server conditions to ensure that the bootstrap configuration is only set when
camel - netty - http : fixed maxheadersize option name
hbase - 2588 [ hbasetestingclusterautofiregertest ] increase hbaseclientretry retries from 5 to 15 ( # 2
replace file path resolution with absolute path construction to ensure compatibility with different operating systems for template path resolution
avoid transient failure in encodedgraphcachetest. testinvalidationcompilation
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " CUSTOMER " and added a new
added functionality to adapt kraken assets into currencies based on their scale to ensure accurate currency metadata for asset assets
added a ` toString ` method to the ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to
refactor email handling in AlertTaskRunnerV2. java to use a variable for dimensions to improve code readability and maintainability by reducing repetitive
[ influxdb ] add precondition check for measurement in influxdb publisher
camel - core - conversion : replace dotransform ( number ) with downcast ( number ).
added filtering filters for local addresses and created a method to check if an existing local address is unique to improve address filtering accuracy and ensure unique local
quote column name in dataoutputformat to ensure that column name do not contain quote.
added methods to set and get properties in WrapSystem and StrUtils classes, and refactored method names in CompileMethodEntity and CompileMethod
added a constructor to UpdateRequest that accepts a URL to initialize the constructor with the request data
updated enum declaration formatting in ProtoTypeAdapter. java to improve code readability and consistency
added an ` addExperimentalFormatWarning ` method to ` RequestHandlerUtils ` to indicate that the response format is experimental and encourage its use
added a format method for formatting module names in JpmsUtil. java to improve readability of module names during debug logging
update table row height accord to the system default label font
[ hotfix ] fix potential npe in defaultbrokerheartbeatmanager
added variable declarations for meanPartitionSize, partitionCount, and splitCount in CqlInputFormat. java to improve code readability and maintainability by
modified conditional logic in JUnitTestsShouldIncludeAssertRule. java to simplify the condition for better readability and maintainability
[ drools - 7 ] fix ruleterminalnodelefttuple equal ( ) and hashcode ( )
added a check for StageIDs rearranger in TezCompiler. java to ensure proper handling of stage IDs during query optimization
use mbean name org. apache. cassandra. net instead of org. apache. cassandra. concurrent
updated memory allocation check in LotsOfOutput. java to improve memory management during initialization
added imports for Document. Document and refactored DEFAULT _ DIM _ CONFIG across multiple classes to improve documentation clarity and ensure consistent usage of
polish ` ` add support for anonymous read only''
refactor DatabaseMetaData class to improve code clarity and maintainability
( chore ) camel - test - echo : remove @ runwith ( junit4. class )
added ` finishMocking ` method to ` DefaultMockitoSession ` and updated tests in ` StubbingWarningsTest ` to handle ` Throwable
updated GoTestDescription. java to remove extraDeps parameter and add new test cases in GoTestIntegrationTest. java to streamline dependency management
rename buffer and handler variables in SPDYAsyncConnection. java for clarity to improve code readability and maintainability by using more descriptive names
change block from static to flowing in BlockLiquidWrapper to improve flow control for liquid generation
updated location intent data to use a local URI instead of a remote host to improve localization support for location services
fix a typo in the javadoc of aprendpoint
[ hotfix ] [ table - planner - blink ] fix type mismatch in cli frontend
change craftingmanager. getshapedrecipes to use computeIfAbsent instead of if - else
flume - 1766. add forced checkpoint to test case.
removed carriage return and line breaks from whitespace handling in TabsAndIndentsVisitor. java to simplify condition checks for spacing and improve code readability
added a pattern to match " pg _ temp _. * " in NeuteredLinesFilter. java to support temporary file naming in
doc ( regen ) : update sample code to set total timeout, add api client header test
added handling for " NCLOB " data type in DataTypeFactory and related classes to ensure proper handling of data types with NCLOB type
add meter publishing to wavefrontdistributionsummary if it's publishing histogram
updated the upstream handling in ShenyuClientRegisterSpringCloudServiceImpl and DivideUpstreamUtils to improve the responsiveness of the software
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable registration of sensor events with a specified maximum latency
added multiple test methods for ` testFullMethod `, ` testFullURI `, and ` testFullHeader ` in ` SelectChannelServer
camel - ignite : fix npe when use karaf
added conditional logic to handle empty counts and updated variable naming for clarity to improve readability and maintainability of the code
pdfbox - 4892 : don't swallow exception, return false instead
added tests for HDR capabilities retrieval and handling in ShadowDisplay to ensure proper functionality and error handling when HDR capabilities are not supported
added a finally block to reset the classLoader variable to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer for clarity and added a toString method in SemiJoinHint to improve error reporting and provide better debugging information during
added a default constructor to the Message class to ensure proper instantiation of Message objects
bug fix : priority should be LOW _ PRIORITY for non - gui serializable
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and enhanced BigDecimal creation logic to improve type safety and ensure accurate decimal type handling
updated content encoding handling in CompressionResponseStream and CompressionServletResponseWrapper classes to ensure correct content encoding when responses are already committed
updated pattern declaration and method signatures in Authenticator. java to improve clarity and consistency in parameter naming
updated name validation logic in DCD. java to ensure compatibility with additional packages
added a method to retrieve the thread group name and modified the thread name retrieval logic to improve clarity and avoid null pointer exceptions when the thread group
added logging functionality and improved access decision handling in MethodInvocationPrivilegeEvaluator. java to enhance debugging capabilities and ensure security interceptor is mandatory
changed the package of DmozParser from org. apache. nutch. crawl to org. apache. nutch. tools to organize code
updated import statements in ChainingRegisteredServiceChainOperatorTypes. java and removed unnecessary Lombok's ToString method from ChainingRegisteredServiceDeleg
bugfix : add iso path to vm migration answer for user vms
refactor signal handling logic in SigInt. java and improve test cases in SigIntTest. java to enhance clarity and ensure proper behavior of signal
replaced the static import of ArrayUtils with a utility method ArrayUtils. isEmpty to improve code readability and reduce dependency on the ArrayUtils class
updated import statements and added a new @ SpringBootTest annotation in AxonAutoConfigurationWithSpringCloudTest. java to streamline test configuration and
added multiple @ Override annotations in ColorRGBA. java to improve code clarity and ensure proper method overriding
planning : do not initialize already initialize planning entity
added build time setting to ArtifactInfo in TwoLevelArtifactCacheDecorator and ManifestRuleKeyManager classes to accurately track and utilize the build time
updated field retrieval logic in GroupByOperator. java to use getDeclaredFields ( ) and getDeclaredFields ( ) to improve accuracy in handling field types
wallet : fix npe in addblockappearance ( )
added a new currency pair CNC _ BTC and updated the ticker retrieval to support trading trading with the new currency pair
updated skewAllowance from 5 to 15 in multiple classes and refactored session expiration logic to improve flexibility in handling allowance values based on
updated song list item sorting logic in SongListActivity and Utils to ensure correct sorting behavior for song data retrieval
removed unused imports and added a method to read request body to streamline the code and improve request handling
added LegacyBaseBlockWrapper class and updated MobSpawnerBlock and SkullBlock to extend LegacyBaseBlockWrapper to improve code organization and
updated IcebergBranchExec. java to retrieve tag existence from table to improve robustness by handling cases where the tag does not exist
replace ` newArrayList ` with ` Collections. singletonList ` in ` AbstractLdapMockMvcTest ` to simplify the list initialization for external groups
photon sample now use a texture buffer instead of a texture buffer.
added validation for requirePasswwordChangeRequired property in IdentityProviderEndpoints to ensure proper handling of password change requirements for identity providers
added a call to ` notInitializedInConstructors. removeAll ( assumeReflective ) ` in ` UnreadFields. java ` to ensure that
added a check for the connection's closed state before throwing the DatabaseException to ensure proper URL assignment when the connection is closed
added a new test method ` testRequiredBody ` to verify user data retrieval and service name retrieval to ensure proper functionality and validation of user data
updated user and password patterns in CredentialInjector. java and its corresponding test in CredentialInjectorTest. java to improve pattern matching accuracy and ensure correct
added a new menu item " Item4 " and a key binding for the'ENTER'key to enhance functionality by allowing enter key binding
updated debug print statements and assertion logic in TestCoreParser. java to improve clarity of debug output and ensure correct assertion behavior
replaced ` Arrays. equals ( children, other. children ) ` with ` id! = other. id ` to ensure proper equality check for
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encapsulation
replaced ` int ` with ` long ` for retrieving the number of documents and added a test for small sample from corpus to improve accuracy in
reformatted code for triggering quest events in QuestManager. java to improve code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest a static class
added'upperBound'to the EXPIRY query in MongoSessionDataStore. java to ensure that the EXPIRY value is appended to the
fix compilerdirectivessubstitutions. getlong ( receiver, offset, boolean condition, object locationidentity ).
updated time zone name from ARAST to EET in multiple language files to ensure accurate time zone representation for Asia / Amman
change id from 90000010 to 90000011 to ensure compatibility with new naming conventions
hhh - 14618 sessionimpl # setRollbackOnly ( true ) should convert sqlexception to lockoptions
remove some system. out. printlns from downloadexternalfile. download ( )
disable menu bar in macos by default
[ giac ] add piecewise integration test for piecewise integral
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods in ` BaseSwipe
added a test case for modifying the Hive metastore URI pattern in TestJdbcWithSQLAuthorization. java to ensure that the configuration in the authorization
added entry name and value to invalidClasses to ensure proper handling of entry names and their invalid values
mobileinput : use player team instead of sharded to find closest
updated domain from " comp1 " to " getHostName ( ) " in Cookie initialization to ensure the correct domain is used for cookie handling
added nullable validation logic to ` MissingColumnChangeGenerator `, ` MissingTableChangeGenerator `, and ` ColumnSnapshotGenerator ` classes to ensure
chore ( regen ) : update license year for generated file
added document addition and query execution in CustomCollectionTest and changed separator and bitsSeparator to static final in CompositeIdRouter to improve code clarity and enforce
added snapshot scratch data handling in ` ExecutablePreparedStatementBase ` and refactored related tests in ` PostgreSQLIntTest ` to
updated conditional checks and formatting in DefaultServlet. java to improve code readability and maintain consistency
fix ` ` no bib file find find'' exception during tab drag - and - drop
replaced ` createDescription ` method with ` createTestDescription ` in ` ExecutionUnitRunner ` and updated assertions in tests to improve description creation consistency and
replaced ` myVersion ` and ` buildTimeString ` checks with ` StringUtils. isNotEmpty ( myVersion, buildTimeString ) ` checks to
removed the ` public ` access modifier from several static methods in ` TimeUtils ` and updated imports in ` TimeUtilsTest ` to streamline
added a method to determine if the SecurityFrame is expected or injected invokers based on version checks to enhance security frame handling and support for specific
updated file extension extension check in PreviewImageFragment. java to ensure correct file extension validation for image processing
changed method return type from formatted string to Java name for HostedMethod to ensure correct type handling for hosted methods
added ` getIcon ( ) ` method to retrieve icons from a ` datalaboratory ` resource to enhance functionality by allowing icons to be
added a check for the last character in the request name after retrieving it to avoid potential errors when the last character is not present in the request
updated regex replacement logic in FindAndReplace. java and added a test for dollarsigns tolerance in FindAndReplaceTest. java
smack packet debugger will now set correct port for xmppconnection.
updated SchemaExtractionProcessor. java file to improve schema extraction functionality
added a method to copy a file to a specified directory to enhance file management by allowing dynamic copying of source and destination directories
added error handling for unknown datum classes in JacksonUtils. java to improve robustness by throwing an exception for unknown data types
refactor library ABI handling in DefaultJavaLibraryBuilder to improve clarity and accuracy of ABI jar retrieval
simplify height calculation in SelectBox. java to improve readability and maintainability of the code
normalize database and table names in ObjectStore. java to ensure consistent identifier handling for database and table configurations
updated the handling of database types in DbSqlSession. java to include a schema parameter to ensure compatibility with Oracle's database type requirements
removed the call to Logout on an empty response in HomeFragment. java to ensure that we finish the activity regardless of whether the API is
updated the number of parameters in MockStreamingRuntimeContext across multiple test files to correct the expected number of context values for testing purposes
refactor FastImportAction to handle null candidates before obtaining the priviledged list to improve robustness by avoiding potential NullPointerExceptions
updated managed state checking logic in ContainerLifeCycle. java and modified assertions in ContainerLifeCycleTest. java to improve clarity and accuracy of lifecycle
rename iexecutionattributessdialect to iexecutionattributialect in dialectsetconfiguration.
added a call to ` metadata. clearUnsafe ( ) ` in ` AlterTest. java ` to ensure thread safety during metadata operations
fix ` ` nullpointerexception'' in ` gettime `
added null measurement check in TabletInsertionDataContainer and refactored DisruptorQueue's setRingBufferSize method to streamline code
deleted the Session2Token. java file to the class is no longer needed in the project
cloudstack - 5595 : delete volume when volume creation fails
added a new ` Install ` class to ` PopupDataProvider ` and integrated it into ` SystemShortcut ` to enhance functionality for installing and launching instant
added a constructor to LdapAuthenticationProvider that accepts an LdapAuthenticator and provides a placeholder for handling null authorities to enhance the authentication provider's ability
updated retrolambda jar path retrieval logic in Executor. java and CN1BuildMojo. java to ensure retrolambda is only set when
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera. java ` to simplify the build process and improve code
replaced FixedBitSet with Bits and refactored the sortLiveDocs method to improve memory management and enhance clarity in handling live documents
added handling for null results in JMESPathExtractor to ensure robustness by avoiding null pointer exceptions
update authorizer to return an empty list if there be no tag
updated assertions in test files to remove unnecessary equality checks to improve code clarity and correctness in logout URL handling
cloudstack - 2120 : improve error message for unsupported vgu enabled vm snapshot
refactor config handling to use ` classClassConfig ` and ` testClassConfig ` instead of ` classConfig ` and ` classConfig ` to improve
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner. java ` to ensure compatibility with the latest Jetty API
updated partition key comparison logic in HiveAlterHandler. java and added a test case in TestHiveHiveMetaStore. java to ensure correct behavior of
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags. java to allow customization of the icon displayed in the
formatted the conditional statement for clarity to improve code readability and maintainability
replaced usage of SharedBlockingCallback with Callback in StandardDeployer, StandardUndeployer, and ContextHandlerCollection classes to improve efficiency and consistency
added workspace listener to PreviewControllerImpl for handling workspace events to enable dynamic updates of the preview graph based on project state
updated conditional checks in ReflectionFactory, ReflectUtil, RepetitiveLambdaSerialization, and ManyNewInstanceAnonTest to ensure accurate inflation
updated import statements in TransportHelper. java to improve code clarity and maintainability
updated file path format from " file : / / " to " file : " in CatalinaAcegiUserRealm. java to
updated log messages to include " Initializing ActionManager " in AmbariServer. java to enhance clarity of log messages for better debugging
updated JSONWriter. java to include null checks for getInit ( ), modify ( ), and comma ( ) methods to enhance robustness by
refactor Hadoop configurations handling in SliderAppsViewControllerImpl. java to improve code clarity and ensure correct user context is used
added a check to ensure backgroundManager is attached before setting the window to avoid potential null reference exceptions when the background is detached
added functionality to set the current tab and adjust child width in multiple classes to improve user experience by ensuring proper tab display during layout adjustments
added validation for null URL in BaseDataSource and a new test case for retrieving a PostgreSQL URL to ensure robust error handling for invalid URLs and validate
added conditional checks for Java version in PebbleTemplateEngine instantiation to ensure compatibility and functionality only occurs on supported Java versions
added functionality to create and dismiss a new name dialog in FileDisplayActivity to improve user experience by ensuring the name dialog is properly managed
added functionality to toggle bar borders in multiple chart activities to enhance user interaction by allowing toggling of bar borders in charts
updated the SSL URI from " https : / / www. okcoin. com / api " to " https : / www. okex
fix fail testpickmove * scoreimproving
refactor file reading logic to use a SeekableByteChannel instead of FileChannel to improve performance and ensure consistency in data handling
updated the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter and made various variable declarations final to enhance code
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
refactor conditional checks for serialization configuration objects in SerializationConfigurationParser. java to improve readability and maintainability of the code
added heap watch heap limit configuration in QuickstepProcessInitializer to optimize resource usage for debug devices
updated variable assignment in Collectors. sumWithCompensation to store the result of sumWithCompensation as a double variable to improve clarity
[ log4j2 - 3892 ] fix broken test due to incorrect assertion order
[ hotfix ] [ test ] remove unnecessary try / catch block in precompactedrow
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes, and added a new test class for invalid render intent scenarios to improve
allow metrics auto - configuration to supply and close the registry on shutdown
[ 3.0 ] change log level from warn to info ( # 10099 )
added error handling for certificate generation in CertificateFactoryTest to ensure that CertificateException is thrown when invalid certificates are encountered
camel - 13557 : fixed simple predicate parser to handle ambiguous binary operator.
removed redundant variable assignments and added focus handling in IDEEditor to improve code clarity and ensure windows are dismissed when the tab is unselected
fix user name in accesslogvalve. openfail log message
updated file names and adjusted scaling factor in SkeletonModelGpuSkinningTest, added null check in OgreXmlLoader, and increased
removed InterruptedException from the createOrThrow method signature to simplify method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse. java to indicate that these classes are outdated and should not be used in new code
added functionality to generate TypeScript files in the TypeScript transpiler to standardize the declaration generation process for JavaScript files
[ flink - 26011 ] [ connector / kinesis ] fix fetch timeout in streamconfig
update timestamp extension from. html to. html in StreamingDataflowWorker. java to ensure correct file type is used for dataflow processing
increase METASTORESERVERMAXTHREADS default value from 100000 to 1000 to improve thread management for the metastore server
changed the return type of onTaskSnapshotChanged from void to boolean to enable the method to indicate success or failure in snapshot processing
update shadow radius assignment from mMaxShadowRadius to shadowRadius to simplify shadow radius assignment logic
int - 190 add unit test to chain parser
updated loop condition from'limit'to'end'in MarketSellAssetActuatorTest. java to ensure the loop does not exceed
use isinteractive ( ) instead of isinternal ( ) to check if the source be active.
updated the conditional check from `! = null && ` to ` | |! | ` in ` CreateKeytabFilesServerAction. java
added DisplayController import to LauncherPreviewRenderer. java to enable display management functionality in the launcher
updated tooltip text formatting for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent display of root directories in the user interface
replace getToolkit ( ) with Toolkit. getDefaultToolkit ( ) for retrieving the screen size to ensure compatibility with the updated toolkit API
changed return type of recognise method from List <? extends RecognisedObject > to List < CaptionObject > in TensorflowRESTCaption
added unit tests for fetching results with a factory expression in JPASQLBase. java to improve test coverage and ensure correct fetching of results with
added drag index logic for point removal in FreeformFinSetConfig. java to ensure proper drag behavior during drag operations
updated moeVersion from " 1.3. 2 " to " 1.3. 0 " to reflect the latest release version
updated error message for constant canot setting call value and added spendAllGas call to improve clarity of error reporting and ensure all gas is
updated error messages to include newline characters in multiple files to enhance readability of error messages for better debugging
added @ Deprecated annotation to Weights. java to indicate that the class is outdated and should not be used in new development
graph builder plugins should be register for platform - specific unsafe.
added @ Hint ( isDep = false ) annotation to several classes and implemented a blacklisted module test in AndroidBinaryModularIntegrationTest to
changed mCenterPagesVertically variable from true to false to update the behavior of the page centering
doprocessing ( ) must be call before call migrationinfo. doneprocessing ( ) to ensure proper handling of migration processing
changed variable names from " host " to " baseUrl " and updated related references to improve clarity and consistency in variable naming
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy
updated test table creation and query execution in TestJdbcWithMiniLlap. java and added database existence check in LlapBaseInputFormat. java
added a test case for handling brackets in SQL parsing to ensure correct parsing and deparsing of SQL constructs
added support for MotionEventCompat and refactored startCopyMode method to improve touch event handling and maintain copy mode functionality
refactor ` writeXmlOutput ` method to use ` Writer ` instead of ` Writer ` to improve XML output handling and streamline file writing process
camel - 5068 : fixed npe in listaggregationstrategy when exchange be null.
( chore ) camel - exchangecommonitorexception : add stack trace to exception cause
move basicconfigurationfactory from classic to classic
fix a bug in type qualifier dataflow analysis ( pHI _ NODE )
added import statement for SharedStringSource in TestXSSFRichTextString. java to utilize functionality provided by Apache POI's SharedString
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to enable method invocation for ` IObject ` objects
renamed multiple classes related to box and whisker calculations and histograms to improve clarity and maintainability of the code
[ hotfix ] migrate ReadableWritableConfigurationTest to junit 5
changed the ` NormUpdate ` class to ` static ` and updated equality checks for field comparisons to improve code readability and ensure proper equality checks
changed the visibility of the IndexFileNameFilter constructor from public to private to restrict access to the constructor and improve encapsulation
refactor if statement test to use plugin definition to improve clarity and consistency in plugin definition usage
corrected the method name from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` to ensure consistency and accuracy in naming conventions
removed the static method ` nullSafe ` in ` TypeAdapter ` and simplified the ` create ` method in ` StreamingTypeAdaptersTest `
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
add a new class EXIFReader to read EXIF metadata from a file to enhance the functionality of EXIF metadata handling in the upload process
change cloudwatchmeterregistry. batch. tostandardunit to return none instead of unknown to sdk version
[ jbpmml ] fix applypmmlmodelcommand to use parameterinfo
fluentprotocol : improve message when re - sends countercurrencytradestartedmessage at startup
added a check to return early if bubble bar is visible to improve performance by avoiding unnecessary processing
clear conservative label range when compile aarch64 code.
added try - finally block around the initializationJDKLogManager method in JDKXRLogger. java to ensure thread safety during initialization
added a find method to TicketCatalog and implemented it in DefaultTicketCatalog to filter ticket definitions based on their implementations
updated variable declarations and assertions in TestSSL. java for clarity and consistency to improve code readability and maintainability by standardizing variable declarations
[ flink - 25941 ] [ runtime ] fix sort - shuffle result partition memory leak
( chore ) camel - jms : fixed jmsio. read ( byte [ ] byte ) to byte [ ] byte [ ]
updated PluginHandleController and PluginHandleDTO to support a plugin type parameter to enhance functionality by allowing a plugin type to be retrieved
added start ( ) method to span creation in DefaultSpanCreator and SleuthAdvisorConfig to improve span creation reliability by allowing starting spans
added configuration options for color format, depth format, and multisample in IOSGraphics and IOSApplicationConfiguration to enhance flexibility and allow customization of
refactored user login test to use a new attemptLogin method to improve code readability and reusability
fix ( pytorch ) : unsupportedoperationexception in jniutils # torchviewasreal
removed thread interruption check from SynchronizationStatistics. java to simplify the lock name retrieval process
updated Implements and ShadowPicker classes to improve code clarity and maintainability
refactored the creation of ` HttpClientOptionshttp2 ` into a separate method ` createHttp2ClientOptions ( ) ` to improve code
added support for DynamicStruct and DynamicArray classes, and improved type name handling in SolidityFunctionWrapper to enhance type validation and provide clearer
updated property retrieval to include a boolean parameter to enhance flexibility in property handling
added constructors to ` CopyStep ` that accept ` Path ` as a parameter, allowing recursive copying to enhance flexibility in handling file paths during copying
fixed - rSemaphore. addpermits ( ) method don't set the permits after rSemaphore. addpermits ( )
( chore ) camel - jbang : fix test failure
added FlavorParser and its corresponding test to facilitate parsing flavor strings to facilitate automated testing and validation of flavor parsing functionality
updated the data types of ` witnessesAddressList ` from ` List < String > ` to ` List < ByteString > ` to improve
added a conditional check to output only if resultsMeta is not empty to improve output clarity by avoiding printing empty results
modified ConcurrentLinkedQueue to improve removal logic and added a new RemoveLeak class for testing to enhance the queue's ability to remove elements
added an additional parameter ` addSpecialTokens ` to the encode methods in ` HuggingFaceTokenizer. java ` to enhance encoding flexibility by
[ hotfix ] use collections. nCopies for generate slot resource profile
loadSingletsfilenode : fix the issue that chunkdata. addvaluechunk don't set the data size
added a new constant for session storage context and enhanced view state management in DuoSecurityMultifactorWebflowConfigurer to improve clarity and
added a test method for schema validation in TestJspDocumentParser. java to ensure proper handling of SAXParseException during XML document parsing
added a default constructor to TypeAdapter and modified annotations in Java17RecordTest and ReflectionAccessTest to improve usability and address deprecation warnings in
refactor event dispatching and improve kill handling in Debugger. java and SuspendedEvent. java to enhance event processing and ensure proper termination of access
refactor AntPathRequestMatcher class for improved readability to enhance maintainability and clarity of the codebase
added empty parameters to createResourcePolicy calls in multiple classes to improve resource creation flexibility and maintain consistency in the authorization process
added null check before releasing and resetting the deflaterEntry in GzipHttpOutputInterceptor. java ; modified assertions in BlockingTest. java to
added JUnit's AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup of resources after each test
updated the MD5 checksum computation to normalize Unicode characters and remove normalization to ensure consistent character handling and maintain compatibility with Unicode standards
refactor command handling and improve null safety in the Example. java file to enhance code reliability by ensuring commands are validated before usage
changed the visibility of the keyListener variable to be final in BasicProfilerState. java and added multiple @ Override annotations in BaseAppState.
updated MongoTemplate to store DBObject objects in a string instead of a generic type to improve type handling and ensure correct saving of JSON strings
added functionality to handle multiple remote addresses in RequestUtils to improve the accuracy of remote address retrieval in the application
changed job argument types from String to ObjectBuilder in JsLibrary. java to allow for more flexible data handling in JSON processing
updated CookieManagerTest. java to use dynamic host address retrieval and modified HTTP connection handling to improve reliability and maintainability of the test code
adjusted calculations and memory management in GlyphLayout. java and added a new test in BitmapFontTest. java to improve performance and ensure proper
added ` pauseOrResumeSplits ` method implementation in ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReaderBase `
added configuration for HIVESCRIPTIDENVVAR in HiveConf and utilized it in ScriptOperator to enable dynamic configuration of operator ID for
refactor ` getListedTermCounts ` method to use streams for sorting terms to improve code readability and reduce redundancy in term counting logic
added a new action class ` UseSeparateStepSizeAction ` to manage localization settings for jog steps to enhance user experience by allowing
updated FileMenuFilter to use final variables and added userId retrieval to enhance immutability and ensure proper user context retrieval
hbase - 15410 roundrobintabletinputformat should use getmethodname ( ) instead of getname ( )
update header values from " false " to " 0 " and " true " to " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest
pdfbox - 4892 : use ioutils to close a non - existent subdoc
updated methods in GwtGraphics and GwtApplication to support fullscreen functionality and screen resizing to enhance user experience by ensuring proper handling of fullscreen mode and screen
updated ` WebfingerIssuerService ` to use ` URI ` instead of ` String ` and refactored resource normalization to improve URI handling
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of the Dubbo application
replaced ` Gdx. files. internal ( fileName ) ` with ` resolve ( fileName ). pathWithoutExtension ( ) ` in ` Skin
change log level from warn to info for several log messages in OidcDefaultJsonWebKeystoreCacheLoader. java to improve logging clarity
changed PMS. REALTIME _ LOCK. lock ( ) to PMS. REALTIME _ LOCK. lockInterruptibly ( ) in multiple
changed package declaration from ` java. lang ` to ` java. lang ` to improve organization and clarity of the code
fix for false positive on jsr redundant branch
replaced ` ContentId ` with ` MediaPresentationDescription ` and updated ` DefaultHttpDataSource ` in ` DashRendererBuilder. java ` to
added a configuration property to control the number of prepared statements per database connection in the execution scheduler to allow dynamic configuration of prepared statements per connection for
changed return type of the set method from WritableConfig to Configuration in multiple configuration classes to improve clarity and consistency in the return type of the set
added error handling in AutoScalingHandler to ensure proper processing of command operations with bad error information
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future development
replace ` buf ` with ` b ` in the loop condition for reading data to improve efficiency by directly using the byte array instead of a raw
added methods to remove cryptography restrictions and integrate them with JceSecurity and CryptoAllPermission to streamline cryptography restriction management and enhance security
fix entity teleportation after cancel
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest. java ` to ensure that page margins
added a null check for vContext in Vectorizer. java to avoid potential NullPointerException when accessing vectorizationContexts
wialon : fix playback speed ( fix # 468 )
hbase - 25801 disable metric user enable by default in hbase - balancer ( siddharth seth )
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
replaced instances of ` mUserPresent ` and ` mVisible ` with ` mAttached ` to ensure proper unregistering of the receiver only when
updated multiple Java files related to HTTP requests and responses to improve code clarity and maintainability
added params parameter to the zadd method call to enhance data processing by incorporating additional parameters
updated test cases to verify a non - empty metadata count and fixed a typo in several files to improve test reliability and clarity by ensuring
renamed the test class from TestAsyncMessages to TestAsyncMessagesPerformance to improve clarity and specificity of the test's purpose
added a method to retrieve an Optional < TargetNode <?,? > > and refactored the target retrieval logic in VersionedTargetGraph
updated time zone constants for better accuracy to improve accuracy in timezone calculations
updated the calculation in EscherBlipRecord. java and added a new test class TestOLE2Embeding. java to correct
updated initialization of row and column variables in JSONParser. java to ensure correct indexing of JSON data
replaced ` JavaType. FullyQualified ` with ` Pattern ` and updated typeMatches method to use ` Pattern. compile ( ) ` to
updated DETAIL _ THUMB _ HEIGHT and added support for PLAY _ TRAILER action in BaseItemDetailsFragment to enhance trailer display and
added a method to remove glyph information from the cache in CStrike. java to improve memory management by ensuring glyph information is properly managed
add log for terminateallbehaviour ( ) and terminateallbehaviour ( )
camel - 4687 : typenamestrategy should not use xml. bind. localname a we don't want to have to
updated the URL in the isValidEndPoint method from " http : / / www. apereo. org / scottb. html "
reset default value to prevent user from lose their preference.
hbase - 25836 : make access to thrift servlet ( # 3552 )
[ danfossairunit ] remove the channel that be deprecate ( # 14955 )
use hamcrest assertion instead of junit in integrations / cdi / common - backport main ( # 1749 ) ( # 60
removed duplicate calls to ` expansionHelper. stop ( ) ` in ` TweetActivity. java ` to streamline code by eliminating redund
added equals and hashCode methods to PartImpl class to ensure proper comparison and hashing for instances of PartImpl
server : fix root disk size parameter in uservmmanagerimpl.
updated visibility logic based on user preferences to enhance user experience by showing suggested apps when preferences are enabled
[ geos - 8470 ] make sure the bbox pass a valid cr to the feature service
added validation for input values in LibrustzcashParam. java and updated the value parameters in LibrustzcashTest
deprecate ithrowableentity. move it to cpw. mods. fml. common. registry
added random value assignment for x and y in NodeDataImpl. java to ensure random values are generated correctly during data generation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _
refactor the construction of ` firstOrderStdout ` and ` returnedStderr ` to use try - with - resources to ensure proper resource management and
updated the VERSION string from " 0.9. 1 " to " 0.9. 2 " to release version 0.9. 2
added a condition to check if itemType is DEEP _ SHORTCUT in LoaderCursor. java to ensure proper handling of deep shortcuts in the
added hashCode method to TimeGranularitySpec class to ensure proper hash code generation for instances of TimeGranularitySpec
changed access modifiers of classes from private to protected and initialized weights in DisjunctionMaxQuery to allow subclasses to access these classes for better extensibility
added a boolean flag ` useProxyResponseCode ` to manage NTLM proxy usage to ensure proper handling of NTLM proxy when response code is
aarch64 : fix a bug in aarch64move. ldr.
bug 14332 : don't calculate cpu usage for domr, if domr be empty, use reserve capacity instead.
added a null check for maxScore in JSONResponseWriter. java and utilized a new query in TestDistributedSearch. java to ensure that
updated audio encoding from 22050 to 44100 in AudioRecorderTest. java to improve audio quality during testing
update calculation for newOriginX in RocketFigure. java to ensure newOriginX is correctly calculated based on subjectBounds _ m's
updated the null and empty check for the Druid data source in DruidQueryBasedInputFormat. java to ensure that the Druid data source
added new properties " Original ID ", " Original Type ", and updated regex pattern to include " name " and " type " to enhance
added a static method ` create ( Table parent, Map data ) ` to create an instance of ` IndexImpl ` to facilitate the
simplify the return statement for period validation to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility. java and added corresponding tests in TestSchemaCompatibility. java to ensure correct schema compatibility checks and improve test
added handling for ` PersistentAttributeType ` and improved entity path validation in ` QueryUtils ` to enhance query processing by ensuring correct attribute types
added synchronization to the spans list methods in TestSpanHandler. java to ensure thread safety when accessing shared spans
change the parameter type in getText methods from List < Object > to List <? > across multiple classes to enhance type flexibility and improve method us
changed exception handling in ViewContextImpl from Error to InvocationTargetException and added logging for default realm and auth to local rules to improve error logging and provide
refactor OAuth2AccessTokenEntity to improve code structure to enhance maintainability and readability of the code
updated error messages in SCBEngine, TestInvocationFactory, TestInvokerUtils, and HighwayServerInvoke to provide clearer context for the request
added new project files for iOS data and resources in GdxSetup. java to enhance project setup for iOS development
updated imports and modified the merge scheduler configuration in TestSearcherManager. java to improve performance and scalability of the indexing process
added null and empty list handling in QTestUtil, GenericUDTFInline, and LazyBinaryArray classes to improve robustness of session state
updated MapIterable, FJIterate, and ParallelIterate classes to improve code consistency and maintainability
ticket list : make the spreadsheet key box respect the browser's default preventDefault behavior
[ osgi ] properly dispose of service in osgi test
fix issue with elapsed time calculation in hikariconfigmxbean ( regression )
remove the createcomponentfile method and add a non - packaged resource dir
updated file name handling in Compat and FileOpener classes to ensure correct file path formatting and improve file existence checks
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to allow the method to
ensure that there be a port already in use before attempt to start the graphql http port
added null mask handling in WebSocketClient and updated WebSocketConnectionD12 initialization to allow for flexible masking generation based on null values
refactor the return type of ` genUDTFPlan ` from ` RelNode ` to ` Pair < RelNode, RowResolver > `
added functionality to track the number of bucketed and non - preferred node selected counts in NodeSelectionStats and related classes to improve performance monitoring and
added a new class ` Person ` with a name attribute and its getter / setter methods to facilitate the renaming of the ` Person `
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to ensure proper handling of the owner pointer state
added functionality to display a clock in the PlaybackOverlayFragment to enhance user experience by providing visual feedback during playback
fix some minor glitch in the world.
changed the IMPL variable from static final to static and added a SecurityException for loading SegmentReader to improve flexibility in loading SegmentReader classes and
replace direct casting of cell to Cell with SwingUtilities. invokeLater to ensure thread safety for updating the cell
replaced instances of ` DefaultInetAddressAdapter ` with a new factory method in ` MiniGson ` to improve code clarity and maintainability by
added null and value validation methods to the Series class to ensure proper handling of null values and validate data integrity
changed audio - time - stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
lucene - 9752 : fix lat > max lat in georangetermetricutils # testgeopointquery
cloudstack - 2120 : fix npe in virtualmachinemanagerimpl # getdiskofferingid
re - enable hazelcasttest. cleanup after each test.
add test for nosuchalgorithmexception in blockcachetest.
added addFilter for " going to print operations logs " to improve logging clarity for operations logs
fix : fix generation of type argument in bean definition
set currentconnectionaddress to proxyaddress if it be null to avoid npe.
replaced manual addition of demand with MathUtils's cappedAdd method to simplify demand calculation and improve code readability
refactor image output stream handling to use try - with - resources for better resource management to improve error handling and ensure proper cleanup of temporary files
refactor search handling by replacing direct search calls with Intent calls across multiple classes to improve code maintainability and streamline search functionality
updated the initialization of SchemaCrawlerOptions in SchemaCrawlerCommandLine and modified the toString method in GrepOptions to improve code clarity and ensure
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 61616
added the PersonRepository import and autowired it in RepositoryIndexCreationIntegrationTests. java to enable repository management functionality within the integration tests
updated method signature from Exception to InterruptedException in UIServer. java and modified log message format in TestVertxUIManual. java to improve
fixed switch / cases indentation in blockcactus. createstaticblock
refactor mouse handling in ThemeSelector to use a MouseMotionListener to improve user interaction by allowing mouse events to respond to mouse events
[ java ] : introduce abstractminmulticastflowcontrolrhspadding to reduce allocation.
added a vertical alignment parameter to the editStringAt method to enhance user interaction by allowing block - copy - paste functionality
don't throw illegalargumentexception if tokenizationmodel be not specify
added a check for distinct queries in ClusterIntegrationTestUtils and refactored group column generation logic in QueryGenerator to ensure correct handling of distinct queries
JNI : add string similarity option to quickly find the closest native linkage
bug 60719 - filelistpanel, filelistpanel, syntaxtextarea now display the current list of language
added null check for children in PartitionPruner. java to avoid potential NullPointerException during execution
added token and current position variables to MessagePackParser and updated tests accordingly to enhance functionality and ensure correct context handling during JSON parsing
added locale management after tests in AbstractSolrMorphlineTestBase to ensure consistent locale handling during tests
removed conditional check for ` isLauncher ( ) ` in ` LauncherFragment. java ` to simplify the size calculation logic for better readability
add unit tests for the MetricsReporter class to ensure proper registration and handling of metrics
camel - mock - bundle : remove unused import
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for the rectangle object
update test to use a random sink list name instead of a hard - coded value
updated DSAParameterGenerator to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and ensure consistent use of BigInteger type
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and refactored host retrieval methods to integrate FQDN
fix clientoutofmemoryhandlertest # shutdownclientonoutofmemoryhandlertest race condition
add a new method ` getCmoObjectId ` in multiple shape classes and update ` setObjectId ` calls to use this new method to ensure consistent
added a test for the distinct query in DistinctTest. java to ensure that the distinct query results in the correct number of posts fetched
updated imports and class names in Driver, SearchTravRetLoadFieldSelectorTask, and SearchTravRetTask to improve code clarity and
added bind and unbind methods to ManagedKubernetesClient to enable binding and unbinding of ExtensionAdapters in the client
updated DetailsDescriptionPresenter to use a new utility method for extracting subtitle information to improve code readability and maintainability by centralizing subtitle retrieval logic
updated JUnit imports and annotations from Before and After to BeforeEach and AfterEach in TestAuthHandlerBoot, TestRSAProviderTokenManager, and
fall back to xml if we fail to generate the summary.
replaced multiple instances of ` false ` with explicit calls to ` intPool. reset ( ) ` and ` bytePool. reset ( ) `
added multiple @ Override annotations in FilterInputStream. java to ensure proper method overriding and improve code readability
added a new class ` WindowSessionDelegateU ` and modified ` ShadowWindowManagerGlobal ` to handle window session management based on API level to
ww - 3917 : forcefully add scheme with non - standard port
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQL database interactions
hbase - 15421 fix checkstyle violation in hbase - store
fix the emzuli pipe so it don't crash when try to extract item.
simonstewart : allow the htmlunit test to run in debug mode and not in debug mode.
[ hotfix ] [ test ] fix checkstyle violation in hive - lookup
add lock to listener set to ensure that listener get register on the wrong thread.
updated the SCHEMANAME string construction in SequenceSnapshotGenerator. java to ensure correct schema name is used for snapshot generation
added color assignment for v _ color in SpriteBatch, SpriteCache, and refactored alpha test setup in LwjglDebugStarter to
fixed - redissonconnection. getbatchpromise ( ). join ( ) method cause batch promise to be miss. # 1151
bugfix : do not add base core to statisticYearCores
updated methods in TaskActionController and TaskAdapter to improve task launching functionality to enhance code robustness by ensuring non - null TaskHolder parameters
updated import statements and modified constructor parameters in MorfologikFilter to improve code clarity and ensure proper resource loading
swapped the order of sorting options for 4 and 5 in GridFragment. java to correct the order of sorting options for better user experience
added imports and visibility logic for ListRow in CustomListRowPresenter to improve user interface responsiveness by hiding specific item headers
refactored switch - case structure in StressAction. java to include try - finally blocks for exception handling to ensure proper resource management and
refactor HttpClient class to improve code readability and maintainability
changed method calls from ` isCaseSensitive ( ) ` to ` instanceof ` for DB2Database instances to ensure proper type checking for DB2
add jackson databind module support for java. time module ( thymeleaf - 4071 )
replaced the import of Log4j. MDC from org. apache. log4j to org. slf4j. MDC to
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver. java ` to ensure type safety by explicitly casting to `
updated import statements and formatting in CoinbaseTransaction. java to improve code readability and maintain consistency
added a method to retrieve build targets from BuckConfig and refactored the ProjectCommand to use this method to improve the handling of forced
replaced the initialization of the IdleStrategy in Ping. java to ensure consistent idle strategy management during garbage collection
replaced ` ContentProvider cp _ ` with ` ContentResolver cp _ ` in ` OCFile ` and ` FileDisplayActivity ` classes to improve
removed unnecessary state checks before iterating to streamline code for better readability and performance
[ hotfix ] [ test ] add precondition check to testinglogicalslot
add a new class ` RemoveCallsToSystemGc ` to invoke garbage collection to ensure that all calls to ` System. gc ( ) `
removed redundant calls to super ( ) constructors in multiple exception classes to streamline code and improve clarity in exception handling
added a setUIID method to the ScaleImageLabel class to ensure proper UIID management for image labels
rename variable ` foundEntry ` to ` update ` for clarity to improve code readability and maintainability by using a more descriptive variable name
added support for the " - cp " argument in the Main. java file to allow for additional classpath argument handling in the application
updated compiler option from " nodeprecated " to " nodeprecated " in avutil. java to ensure compatibility with recent compiler changes
set'initialized'to true in StorageService. java to ensure consistent initialization state across the application
updated test cases in Test7196045. java to improve test coverage and ensure accuracy of test cases
update default values for density and decay in ShaderParametersLightShaft. java to improve the effect's effectiveness and adhere to
added withState and stateData properties to OidcConfiguration and updated OidcRedirectActionBuilder to use these new properties to enhance functionality
# 1306 - enforcement of unique constraint with non - null column
added federated share support in the UsersAndGroupsSearchProvider and EditShareFragment classes to enhance file sharing functionality to support federated users
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy. java ` to ensure that document values are
updated various classes to improve error messages and introduced new package structure to enhance clarity and maintainability of the code
added ` intForEach ` method to ` Int2ObjectHashMap ` for processing values to improve handling of null values in the hash map
fix world save data associate early with the worldscoreboard
change return type of count methods from Long to long in QueryDslMongoRepository, QueryDslPredicateExecutor, and SimpleMongoRepository classes
updated logging conditions for creating mtree snapshot based on the current timestamp to ensure that the MTree snapshot is only created when the timestamp changes
refactor dot product calculation in VectorUtil and TestVectorUtil classes to improve accuracy of dot product calculations
added a confirmation threshold constant and methods to manage the latest confirmation block number to enable dynamic management of the latest confirmation status based on the confirmation threshold
updated Locale handling in GpsMainActivity and MainPreferenceActivity to use Systems for setting locale to improve locale management by centralizing locale setting logic
added a new method to track if a new database created in LauncherClings. java and updated LauncherProvider. java to utilize this method to
refactor collection iterator handling in BasicAclEntryAfterInvocationCollectionFilteringProvider. java to improve code readability and maintainability
refactored the initialization of the is64Bit variable for clarity to improve readability and maintainability of the code
added a thread check to prevent further processing in TestIndexWriterDelete to improve performance by avoiding unnecessary processing on the current thread
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method
updated imports and references from ` apiclient. model. dto ` to ` sdk. model. api ` in ` FullDetailsActivity. java `
added handling for SVG attributes in BatikSVGDrawer. java to ensure proper attribute assignment for the SVG document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys. java to improve error handling when parsing user configuration
added handling for " WaitForResult " in AndroidImplementation and CodenameOneActivity to ensure proper behavior when there is a " WaitForResult "
refactor ` HitQueue `, ` SpanPositionQueue `, and ` PriorityQueue ` to accept a ` Supplier < T > ` for sentinel objects
refactor WidgetCell to use instance variables and add description loading logic to improve code clarity and handle widget display more effectively
added a maximum attribute count limit check in Attribute. java to prevent attempts to register an alias that exceeds the allowed number of attributes
move predicatestest to own package to make it compatible with built - in predicates
camel - 7999 : camel - core - optimize headerfilterstrategy to be case insensitive.
updated inline boundary logic and adjusted substring handling in InlineLayout and Breaker classes to improve boundary handling and ensure correct substring extraction
added nullability annotations and improved null handling in the getView method to enhance code robustness and prevent potential NullPointerExceptions
refactor Setup class to include parent exclusion logic to improve test coverage for Android SDKs
added a condition to return the last column count if there is an association before source to ensure the correct number of columns is returned for insert operations
fix : add / sys / fs / cgroup / memory / memory. limit _ in _ bytes
replaced ` @ Value. Immutable ( builder = false, singleton = true ) ` with ` @ Value. Immutable ( builder = false, singleton
added a null check for the rule in JavaTestRule. java to throw a HumanReadableException when the specification source under test is not among
don't load proxy for mc version > = 1.19. 2, fix # 418
removed conditional check for index value to ensure atIndex is non - negative to prevent potential errors
increased timeout duration from 100 milliseconds to 500 milliseconds in TimeoutTest. java to allow more time for tests to complete successfully
added AssistContentRequester to TaskOverlayFactoryGo constructors to enable content request functionality for assist content
replace ` getVoteAddress ( ) ` with ` encode58Check ( witnessAddress ) ` in ` VoteWitnessProcessor. java
rename DefaultMethodRegressionTests. java files to improve clarity and organization of test cases
updated WorkloadManagerMxBean. java file to improve functionality and maintainability of the code
int - 382 fix deprecation warning in kafka test
added call to closeLoader in DesktopGeneratorController to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and implemented unit tests for FaultTolerantException classes to ensure proper handling of exceptions
updated error message format in ConfigBuilder. java to include details about the application runners to enhance clarity in error messages for better debugging
added an extraProperties parameter to the applyTunerConfigs method across multiple classes to allow additional properties to be passed during the tuner configuration
added logic to prevent duplicate in - progress segments in PinotRealtimeSegmentsManager to enhance performance by avoiding redundant segment additions for in - progress
added a condition to return null if the table is not touchable and its associated touchable is disabled to ensure proper handling of touchable interactions
added a test method to build using a precompiled header in other cells to ensure compatibility and functionality of precompiled headers in the project
throw a retryable exception if cache config for cache have not be create yet
refactor JSweetTranspiler to use a utility method for checking node package installation status to improve code readability and maintainability by encapsulating logic
added @ ManagedObject annotation and managed operation annotations to MBeanContainer and Destroyable classes to enhance monitoring and management of component lifecycle events
changed the conditional statement from " if ( settings. inAppBrowser ) " to " if ( false ) " in LongClickableSpan. java
replaced `. equals ( " 0 " ) ` with `. equals ( remoteGroupID ) ` in multiple files to improve code readability and
updated type handling in ` Types. java ` and added new classes ` T6558559a ` and ` T6558559b `
updated player print statements to include block position and current point to improve clarity of player output and ensure accurate position representation
( chore ) camel - kafkaconsumer : shutdown executor properly
remove the ` examples ( ) ` method from the Schema class to simplify the interface and improve usability
modified thread interruption logic and adjusted conditional checks in AgentRunner. java to ensure proper termination of threads and improve code clarity
remove time column from the data set in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure consistency by removing time columns from the data set
replaced ` & sreq. shards ` with ` && sreq. shards ` to simplify the condition for shard validation
replaced the linker reference from ` linker ` to ` CxxPlatforms ` in ` RustBinaryDescription. java ` and ` RustLibrary
added a'name'property with getter and setter methods in multiple properties classes to enhance property management by allowing the name of the property
dump the igv output to the igv if the printer can not connect
updated scan threshold logic in BaseQueryPlan. java and introduced small scan threshold in QueryServices. java to enhance query performance by optimizing scan
updated the toString method in RetryGatewayFilterFactory to include ` routeId ` and ` traceName ` to enhance traceability of retry configuration details
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` and removed an unnecessary write operation
replaced direct calls to ` showForOverviewShown ` with a call to ` DiscoveryBounce. showForOverviewIfNeeded ` to streamline the
refactor null checks for min and max packedValue in CheckIndex. java and add a test for deleting all point documents in TestPointValues.
replaced the ` true ` argument with ` updateLastState ` in the ` publish ` method call to update the last state instead of a fixed
updated SQL query format for SKEWED _ STRING _ LIST _ VALUES to ensure proper parsing of string list values
added a null element to the exp array in SpliteratorCollisions. java to ensure proper handling of null values in the spliterator calculations
chore ( condition ) : add method to get text case - insensitively
replaced'do'with'while'in ManyToManyConcurrentArrayQueue. java to simplify the loop structure for better readability
# 1796 - enh : add ` ` forward - fetch - size'' to ormqueryengine
camel - 20297 camel - http - dsl. ignore closedchannelexception a already catch.
pdfbox - 4892 : optimize to avoid unnecessary allocation
updated window radius initialization to use rounded corners support to enhance compatibility with devices that support window rounding
refactor DesktopTaskView to use View instead of ShapeDrawable for background handling to improve layout flexibility and maintain consistent UI appearance
added initialization of upstreamCheckService in UpstreamCheckServiceTest. java to ensure proper initialization of the upstream check service
` ` ` ` ` ` ` ` ` ` `'''''''''''''''' '
replaced error logging with returning locks from ZooKeeperHiveLockManager to streamline the process of obtaining ZooKeeper children
[ hotfix ] [ javadocs ] fix some typo in javadoc.
added a check for custom data inclusion in the mipmap generation logic to ensure mipmaps are generated only when custom data is present
camel - 17684 : fix checkstyle violation in camel - core
added a selectable boolean and related getter / setter methods to the List class to allow selection behavior when a non - selectable item is selected
added a condition to check if the first field vector value count is zero to ensure that the LlapArrowBatchRecordReader does not attempt to process
added file separator support to PolicyContext to enhance file path handling and improve debugging information
change collections from HashSet to ArrayList in FieldQuery. java to improve performance and flexibility in handling multiple queries
pdfbox - 4071 : fix typo find by codespell on fossies. org
kafkamanager : fix npe when kafkamanager. close ( timeout, timeUnit ) be call
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance the method's flexibility by allowing specific node
added a lock file deletion mechanism in RocksdbMavenPomCache. java to ensure that temporary files are removed when the workspace changes
nifi - 4892 : fix bug in minizookeepercluster that require the client port to be specify in the configuration
added a new method ` getResponse ` in ` RestClient. java ` to retrieve the response and log the web service URL to improve connection handling
replaced ` segmentTarURIs. toString ( ) ` with ` segmentTarURIStrs. toArray ( new String [ 0 ]
updated the password used in the loginStudent method from the incorrect account to the correct one to ensure the test uses the correct password for student accounts
added a null check for mCurrentItem in EnhancedBrowseFragment. java and StdBrowseFragment. java to ensure proper handling of the last deleted
reduce the number of strings in TestSpecialOperations from 500 to 100 to improve test reliability by reducing the number of string inputs
chore ( wkb ) : remove bytearrayinstream ( ), migrate to bytearray ( )
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity by using a more descriptive method name
added a method to check for direct substates in AbstractStateMachine to improve state validation logic for direct substates
added type checks for ListMultimap and SetMultimap in MultimapSubject. java and implemented corresponding unit tests in MultimapTest. java to ensure correct order
added JoinOperation to the PostJoinOperation class to enhance the functionality of the PostJoinOperation class
added a new test method in AdditionalPostgreSQLTest. java to verify PostgreSQL test execution and content verification
http : / / issues. apache. org / jira / browse / amq - 5035 - fix intermittent test failure
refactored AvaticaDatabaseMetaData to improve database metadata handling to enhance performance and maintainability of the code
replaced integer values for lifeTime and idleTime with String values in MongoDbConnectionPoolProperties. java and updated method calls in MongoDbConnectionFactory
replace null with SipActivator. getMediaService ( ). getMediaFactory ( ). createAudioMediaFormat ( ) to ensure compatibility with the Sip
refactor handleFilter and handleBlockJoin methods to return a boolean indicating whether filters were applied
added support for an enabled timeout handler in ShuffleHandler to improve timeout management based on user preferences
replaced the use of a hardcoded value for quick step starting rotation with a constant to improve code readability and maintainability by using a named constant
camel - xpath : deprecate placeholder in favor of plain string
change some comment and fix some javadoc warning
add test case to reproduce edge case tokenizer
added validation for the " atlas " property in AtlasTmxMapLoader. java to ensure the map is missing the'atlas'property
camel - 13709 : remove property placeholder support a it be not support anymore in camel - core
added database closure in BlockchainTest and removed unnecessary receive listener for BLOCK and TRANSACTION messages in KafkaTest to improve database resource management and simplify message
refactor CoreMarkdownNodeRenderer to use a dedicated method for retrieving line numbers to improve code readability and maintainability by reducing redundancy
int - 1389 removed an unused import from WebServiceInboundGatewayParserTests. java
replaced ` ImmutableList. builder ( ) ` with ` List < Object > ` for enhanced flexibility in SQLBindings and AbstractSQLClause classes to improve
added support for OpenJDK VM in VirtualMachine. java to enhance compatibility with OpenJDK environments
added a keep - alive setting to the baseUrl method in ReactorClient. java to ensure that the request is processed without premature termination
updated attributes from " a _ Position " to " a _ TEXCOORDS _ ATTRIBUTE " in MD5Renderer. java and Obj
camel - 7999 : fix the issue of not be able to find property component on classpath.
updated null check logic for accountCapsule in UnfreezeBalanceActuator. java to improve robustness by handling potential null values
update version number and prepare for the 3.7. 0 release.
updated return statements to use ` t. unannotatedType ( ) ` instead of ` t ` to ensure proper handling of unannotated
updated assertions and adjusted sequence ts file size configuration in StorageGroupProcessorTest. java to ensure correctness of tests and maintain consistency in sequence ts file
added environment management functionality and updated class references to ensure compatibility with the Jetty ee10 environment
added a parameter ` params. waitbeforestart ` of ` 2500 ` in ` FFMpegVideo. java ` to ensure that the
removed the ` _ skipCorrupt ` boolean parameter from the ` OrcEncodedDataConsumer ` constructor and its usage in the ` GenericColumnVector
add a unit test for accessors. listindex ( )
add method in graalcompiler to compile method with a PhasePlan parameter, and expose framemap in lirgenerator
updated test imports and annotations to use @ ConditionalIgnore or @ RunningContinuousIntegrationCondition to improve test conditional behavior based on test conditions
modified item boat height calculation to account for water target type to ensure proper placement of items in the boat's place
updated the ` toString ( ) ` method in ` Directory `, ` RAMDirectory `, and added ` getLockID ( ) ` method in
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the conditional check for experimental options
added new methods for asserting Path assertions in BDDAssertions. java to enhance testing capabilities for file paths and assertions
renamed variable ` hp ` to ` hostField ` for clarity to improve code readability by using a more descriptive variable name
changed debug log level from debug to warn for multiple Kubernetes config files to provide clearer guidance on how to export kubeconfig from Unix systems or environment
added file upload management functionality in UploadListActivity to improve user experience by managing file uploads effectively
added a new ` ProviderLoader ` class and updated ` TerminalManager ` and ` TerminalManager ` to implement it to provide a listener for provider
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and its tests to align with the latest tracing framework
updated SelectFromDatabaseChangeLogStatement to use ColumnConfig for setting the name to improve flexibility and maintainability of the change log statement's
hhh - 147482 fix compile error in postgresql dialect class
ignore partition per member if data size be zero
updated execution scheduler start logic to handle unavailable schedules to improve robustness by ensuring a fallback state is used when starting the execution scheduler
removed unnecessary ` toString ( ) ` method call from InlineBox instantiation to simplify the code and improve readability
fix checkstyle warning in statisticmap
increase staged rectangle slide end from 383 to 500 to improve the responsiveness of the application
updated button and command table items to use a localized bundle to improve internationalization and maintainability of the code
modified conditional logic in BukkitMain to include plotArea check to ensure that the plot area is properly referenced for cancelling items
added a test to verify that setting touch exploration state listener invokes callbacks in the accessibility manager to ensure that touch exploration state
pdfbox - 5328 : fix indexoutofboundsexception when read unicode file
use testelement. getname ( ) instead of property. getpropertyasstring ( )
replace the constructor of NPOIFSFileSystem with the factory method POIFSFileSystem. create to simplify the filesystem creation process and improve code readability
updated the plot area check in the Move. java file to improve robustness by handling null plot cases
updated regex pattern in TestWebHCatE2e. java to ensure accurate version matching
updated the range check for ` count ` from ` > pickleEvents. size ( ) ` to ` > 1 ` to ensure valid range for
add clientid property to kafkaconsumerprocessor if number of consumer thread be less than 1
replaced the import of ` util. IsolatedClassLoader ` with ` util. IsolatedClassLoader ` and added a check for ` ok
mow - 169 make sure that when select an item in a list do not repaint the view
camel - spring : fix indentation see camel - 14540
added an ` isAnimationFinished ` method to check if the animation has finished to provide a way to determine if the animation is finished based on
added a test for custom favicon with line breaks in LoginMockMvcTests. java to ensure correct rendering of custom favicon links with line breaks
added null check for otherUrl in TimeLineCursorAdapter. java and modified the refreshing text string in HomeFragment. java to enhance robustness
ticket # 4810 : make sure ` ` space'' be escape in eqstring
refactor ObjectHashSet class to improve performance to enhance efficiency and maintainability of the hash set implementation
refactor null checks in DataUtilities. java to use Arrays. equals for array comparison to improve code readability and efficiency by eliminating redundant checks
allow deletion of enchanted books, fix mc - 12770
test ( microprofile ) : add more test for async resource
rename ` flat _ header _ map _ suffix ` to ` user _ header _ map _ suffix ` in ` ProjectGenerator. java ` to
added error handling for sending email with valid addresses and improved logging for sent addresses to enhance reliability of email sending and provide clearer debugging information
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce ` EMPTY _ LABEL ` to improve clarity of the method '
added tests for partition retrieval with multiple size batches in TestHiveMetaStoreClientApiArgumentsChecker. java to ensure the correctness of partition retrieval by handling
added a closing brace to the FileListListAdapter class to improve code structure and readability
changed the data type of ` @ Getter ` and ` @ Setter ` from ` ArrayList ` to ` List ` in ` OCFile
adjusted the child count from 1 to 2 in the removeViewInLayout method to correct the layout removal logic for better child management
removed " org. eclipse. jetty. websocket. util. server. internal " from imports in JavaxWebSocketConfiguration and JettyWebSocketConfiguration to
removed the'true'parameter from the S3Request constructor to simplify the constructor signature and avoid unnecessary parameters
fix jfxradiobuttonskin delay when timeline be null
updated the condition for splitting length in DeweyNumber. java and added a test case in DeweyNumberTest. java to ensure
added a protected static variable ` categorySetString ` and modified the return statement to replace specific category strings with a space - separated string to improve
removed the " Invalid close control status code 1111 " from the assertions in WebSocketClientTest. java to ensure the test accurately verifies the
added a null check in WebappLoader and updated assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure robust handling
removed duplicate line of code in PersistentAttributeTransformer. java to improve code clarity and maintainability
pdfbox - 4892 : avoid classcastexception, a suggest by valerybokov
added a new test class TestPorterStemFilter to validate the PorterStemFilter functionality to ensure the PorterStemFilter
updated the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and added a success parameter to improve batch
rename ` org. springframework. batch. core. exlore. support ` to ` org. springframework. batch. core. explore
fix concurrentmodificationexception in chatwindowmanager. close ( ).
removed redundant calls to Sys. touch ( ) across multiple classes to streamline the code by eliminating redundant calls
updated Hg command to use " - mardu " instead of " - unknown " and implemented untrackedFiles methods in HgCmdLineInterface
camel - 6555 : fixed thread safety issue with timer in producer
added'final'modifier to vector declarations in DirectionalLight, PointLight, and SpotLight classes to enforce immutability and clarify
added width and height calculations using Math. max in X11GraphicsConfig. java and WGLGraphicsConfig. java to ensure minimum dimensions are
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable `, ` DelegatingSecurityContextRunnable `, and corresponding unit tests
added an annotation filtering mechanism to the ClassFinder class to improve performance by limiting the number of annotation classes processed
hive - 15429 : bytescolumnvector. write ( ) shouldn't throw if the length be negative ( sergey sh
fix flaky testwritebehindmapstorewithevictionstest. testcountstorewithentryswithentryswithentryswithentryswithentryswith
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and XTextArea
[ web ] add isEqual ( ) method to geofunction to compare polynomial function
added null check before retrieving column class in SynthTableUI to avoid potential NullPointerException when table is not initialized
added a try - catch block to handle ClassCastException in CustomChangeWrapper. java to improve robustness by avoiding ClassCastException during instantiation
added whitelisting functionality to DistBuildConfig and updated related classes to enhance config management and maintainability
show a warning if double entry be enable in export dialog
added JUnit @ Ignore annotation to BasicDistributedZkTest. java to mark the test as ignored due to issue tracking
modify doJoin method to return a boolean indicating success to improve control over the join operation execution
removed the getAutodeps ( ) method from JavaLibraryDescription. java to streamline the code by eliminating unused methods
updated intent flags in LauncherTimelineCursorAdapter. java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure that activity launches in a task
added a method ` checkPagingOrderBy ( ) ` to ` SpiQuery. java ` to enhance query processing by ensuring that order
fix test failure with maven - 1. x
add a new affiliate task that can be execute from any xmpp node. jm - 1022
improve error reporting when uri be invalid.
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other
added array handling and improved ` doUpdate ` method in ` CacheKey ` class to enhance data integrity during caching operations
updated file type detector implementations across multiple files to improve file type determination across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
refactor ` getParams ` and ` getVirtualSensorCallback ` methods in ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to improve
sec - 1875 : fix sessionsecuritycontextrepository to not remove the securitycontext if the default context be not set
renamed variable ` lch ` to ` loopback ` and updated logic for determining if the address is a loopback address to improve clarity and correctness in
updated buffer sizes and added checks for deflated data to improve code clarity and prevent errors during compression
updated KeyInfoReferenceResolver and related classes to include secure validation for referent retrieval methods to enhance security by ensuring referent information is validated
added a boolean field ` iconChangeListenerInstalled ` and modified the icon action listener behavior to ensure the icon action listener is only added when the application
added support for the Russian language in the Language class to enhance language compatibility for Russian users
hhh - 14748 fix sqm to sql ast conversion for second duration
disable frame state verification for manually generate graph
added system property management and teardown methods in RobolectricTestRunnerTest and TestUtil classes to ensure proper cleanup of system properties during test execution
added a system class " org. slf4j. " to the web application context to enable loading of the SLF4J LoggerFactory class
added a default case for ` packaging ` in ` ChangePackaging ` and implemented a ` toString ` method in ` Xml ` class to ensure
( chore ) camel - fileloadtest : use file. download ( ) instead of file. download ( )
fix ( demo ) : fix nk _ buffer _ clear ( )
rename methods and variables related to units from ` defaultUnits ` to ` setPreferredUnits ` to improve clarity and consistency in naming conventions
fix test to account for timezone difference
corrected return statement formatting in Terminator. java to improve code readability and maintainability
updated IOException messages and improved error handling for file URIs in FileSystem, LocalFileSystem, and DistributedFileSystem classes to provide clearer feedback to users regarding
refactored timer in jabrefframe to use java. util. timer instead of java. util. concurrent. scheduledexecutor
updated FtpReconnectAttemptServerStoppedIT. java to use Awaitility for timeouts and refactored session management in FtpReconnectAttempt
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in the ` KeyedProperties ` class to improve concurrency handling by using a more
added an ` ignore ` method to various log - related classes to allow users to ignore logs for enhanced logging capabilities
added a null check for runningTaskView in LauncherActivityControllerHelper. java to prevent potential null pointer exceptions during task view processing
removed unnecessary casting of'byte'to'byte'in getDamage calls to simplify the code and improve readability
removed the use of GraphicsUtil. cleanImage to streamline image processing and improve performance
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to provide a custom directory factory for unmapping data to enhance the system's ability
fix npe in pdfcleanupprocessor when ic be null
updated the variable name from " field1 " to " field1 _ s " in the assertQueryEquals method to ensure consistency with naming conventions
updated ExtendedOperatingSystemMXBeanImpl. java file to improve performance monitoring capabilities
added leftCommands handling and updated the installLeftCommands method to properly manage left and right commands in the SideMenuBar
added a boolean flag to advance windowing in AppSettings and updated TweetActivity and UserProfileActivity to conditionally call setUpWindow ( ) based on
added support for SybaseDatabase in the DropPrimaryKeyGenerator to enhance compatibility with additional database types
refactor Client class to improve code structure to enhance maintainability and readability of the code
[ java ] notify leader readiness when prepare for election.
replaced invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) and implemented shouldDelayChildPressedState ( ) method in CellLayout and Cell
added a return statement to the NearCachedClientMapProxy class to prevent further processing during execution
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
added a shutdownHttpServer method and wrapped server startup in a try - catch block to handle potential exceptions when shutting down the HTTP server
camel - aws2s3 : fix import, remove unused import
[ hotfix ] [ webmonitor ] remove the hard cod parameter ` ` tmid''
bug 10737 : don't drop key that exist in 2. 7 version of the db
hive - 23709 : thrift cli should not log password in log ( krisztian kasa, review by jesus
added a maxEnergyLimit variable and updated energy limit assignment logic to ensure energy limits are accurately set for constant calls
added a maxInMemorySize property and corresponding getter and setter methods to HttpClientProperties, and updated the webClientPlugin method to accept HttpClientProperties,
updated caching mechanism in Cache. java to improve performance and efficiency of data retrieval
added multiple Cucumber test classes such as RunCucumberTest, StepDefinitions to establish a foundation for running Cucumber tests with the specified
add error handling for parsing double values in TypeJsonUtils. java and add corresponding tests in TestArrayOperators. java to improve robustness of
removed duplicate byte array declarations from Utf8StringBuilderTest. java to streamline test code by eliminating redundancy
added checks for parameter sets before appending them to ensure only valid parameters are appended to the parameter list
camel - 15410 : added option to not configure output on individual load balancing.
updated the maximum buffered document count in the TestIndexWriterExceptions class to ensure the test accurately reflects the maximum number of buffered documents used
replaced String methods with Sha1HashCode methods across multiple files to improve hash consistency and ensure consistent hashing behavior
added methods to retrieve enum values and their values as integers / longs in AsmRuntime. java to enhance functionality by providing access to enum types
added tag for mANGROVE _ SWAMP, IS _ WET _ OVERWORLD, IS _ UNDERGROUND, IS _
make async image load thread configurable
changed access modifiers of fields and methods from private to protected in BaseTableUpsertMetadataManager. java to allow subclasses to access these fields
replace occurrences of " \ u0646 \ u0631 " with " \ u0623 \ u064a \ u0631
replace `. getImage ( ). equals ( ) ` with `. hasImage ( ) ` for image equality checks to improve code clarity and
camel - 19836 : camel - jbang - add -- repos option to run command
added handling for NaN scores in CrawlDbReader. java to improve robustness by avoiding NullPointerExceptions during score collection
added cleanup method for file management in OnStartupTriggeringPolicyTest to ensure cleanup of temporary files after tests
fix focus problem in filter condition editor
[ hotfix ] [ checkpointing ] make checkpointcleaner thread - safe
added a new file ` XPathWhiteSpaceTest. java ` that tests XML schema validation to validate XML schema validation against specified input files
fix bonsai not override the trie layer when the wal layer be empty
updated the FilledNewArrayInstruction class to improve performance and maintainability of the code
simonetworktest should have a timeout so it don't hang.
updated the method to check if the parentPath ends with a slash to simplify the path validation logic for better readability
added a print statement to indicate failure loading of the skin file to improve debugging by providing feedback on file loading failures
fix ( griffin ) : fix griffin. skip ( 1 ) for griffin. skip ( 1 )
replaced the instantiation of ` Result ` with a static final constant ` UNDEFINED ` in both ` Result. java ` and ` TestStep. java
changed assertions from PersistenceException to NullPointerException in TestTransactionCallback. java to ensure proper handling of null values during callback registration
refactor UploadJobMultiPartOperation to implement IdentifiedDataSerializable and update its implementation to improve handling of job multi - part uploads
[ hotfix ] do not recover journal if the journal file don't exist
fix : view level in vertical node should be ignore ( not fold child )
updated ` DataOutput2 ` to use a size mask instead of a fixed byte array to improve memory management and avoid potential out - of - bounds
added @ Ignore annotation to ChaosMonkeySafeLeaderTest. java and RecoveryZkTest. java files to temporarily skip tests that
simplified assignment of targets and messages in StorageProxy. java to improve code clarity and ensure correct number of targets and messages are processed
changed the order of parameters in the FileManager class to improve clarity and consistency in variable declaration
updated the TransformFunctionType mappings for addition, subtraction, and power in TransformFunctionType. java and TransformFunctionFactory. java to improve function
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement. java to enhance clarity and functionality of the VariableElement class
updated RFC reference from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compliance with RFC standards and improve
update version from 2.17. 3 to 2.17. 4 and change cval type to Character in SearchAnnotationVisitor. java to reflect the latest
replaced the use of an iterator for selecting items with a for - each loop in ListActivity and NoteAdapter to improve code readability and maintainability
refactor conditional statements in DirectUpdateHandler2. java to improve code readability and maintainability
replace string concatenation with ResourceUtils. FILE _ URL _ PREFIX in ConfigFileApplicationListener. java to improve URL handling for resource paths
initialized ` mPositionHelper ` with a ` mContext ` in ` TaskViewSimulator. java ` and modified ` TaskThumbnailView. java
[ java ] only publish new leadershipterm if it's the same log leadershiptermid
- use standarderrorstreamlog instead of log message
refactor ByteArrayInputStream's skip logic and introduce a new Skip class to improve code clarity and facilitate testing of skipped bytes
removed unnecessary whitespace in UpdaterTask. java to improve code readability and maintain consistency
changed the access modifier of MAX _ HEADERS from static to public static final and added a conditional check for block headers in Peer. java to
added rt. jar to the STANDARD _ LIBRARIES list to enable rt. jar for rt.
don't send framed hello if local node be not ready
updated method signatures and variable assignments to use a utility method to improve code readability and maintainability by using a centralized utility class
added a check for committed response before setting ERROR _ EXCEPTION in HttpChannel. java to ensure that error handling is only sent when the response is
updated conditional checks to use'hold'instead of'pendingElements'and'connectionQueue. size ( ) > ='to improve clarity
updated fade out fake task view behavior and added feature flag handling in gesture navigation tutorial controllers to improve visual feedback during gesture navigation transitions and enhance user
change log level to warn when a prefab contain unknown component
refactor ScimGroupExternalMembershipManager initialization and update external group names to include " internal. superuser " to ensure proper organization and access control for
updated thirtyDays declaration in FreezeBalanceActuator. java and added validation in TransferActuator. java to ensure thirty
replace'/'with File. separator in FileResolverTestBase. java to ensure consistent path normalization across different operating systems
ggb - 2118 fix : show command error if input help be not available
updated GpsMainActivity to use session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command annotations to improve user experience
danielwagnerhall : fix fail test on non - visual regression
* deprecate bufferallocatorjme in org. jme3. util package and add bufferallocatorjme a native library.
added handling for flag names starting with "! " and modified flag validation logic in PrimaryItem and Util classes to improve flag processing robustness and
added comment to indicate no PMD comment about the executeQuery method being executed
modified the condition to check for ITEM _ USE _ GRANT _ SELECT _ REWARD in BattlePassManager. java to ensure correct comparison
include highpriority and version in test tostring ( ) of priorityelement
server - side : fix flaky unit test
added null command check and enhanced argument validation in Main. java to improve command handling and provide help when the main command is null
reduce the size of the LightOutputStream in PropertyTypes, ByteIterableBase, and LongBinding classes to optimize memory usage and improve performance
changed the access modifier of the Scanned class from static to public to allow access to the Scanned class from other packages
modified the conditional check in ClassWriter. java to include a blank line option and added a new test class T8032819. java to
removed an assertion check for length in the Person class to streamline the code by eliminating unnecessary length checks
updated extension validation logic in VirtualFile. java to handle null file extensions to improve robustness by preventing potential NullPointerExceptions
replace ` return ` with ` continue ` in the ContactRightButtonMenu. java file to improve control flow in the contact right button menu
[ hotfix ] fix checkstyle violation in slotsharinggroupassignment
simplified the loop structure in InstallShortcutReceiver. java to improve code readability and maintainability
refactor binding and closing logic in PlainSocketImpl. java to improve code clarity and ensure proper resource management
added functionality to manage and clear removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience by ensuring removed items are
corrected a typo in the log message regarding the in - view center point to improve clarity and accuracy of log messages
added a new file ` bug4865918. java ` implementing a scrollbar test with a specified value to address bug 4865918
replaced the initialization of VelocityEngine with direct initialization in ADKerberosOperationHandler. java to simplify the initialization process and improve code clarity
replaced specific imports with a wildcard import and added a new case for " grouptriggers " in QuestCommand. java to simplify import statements
add a file chooser to select gnuCash account if no file be find
added ` @ ToString ( callSuper = true ) ` annotation to ` PartitionChangeEvent ` and ` TbApplicationEvent ` classes to ensure proper
updated the CloudService configuration URI to use a constant instead of a hardcoded value to improve maintainability and reduce hardcoding of the configuration URI
setViewportComponent and setJScrollPane in BrowserPanel. java to improve viewport handling and enhance scrolling functionality
added support for the forward and back key event handling in LwjglInput, ParticleEditor, Layout, and TWL classes to improve
added a configuration option to conditionally retrieve MIME type parts in MoreIndexingFilter to allow dynamic handling of MIME type parts based on configuration settings
added author extraction from comment text in JSDoc. java to ensure authority is correctly identified and processed
replaced occurrences of DELTA _ TOTAL _ DETA _ TOTAL _ DATABASES and DELTA _ TOTAL _ TABLES with CREATE _ TOTAL _
updated HiveDatabaseSchema to use DrillHiveMetaStoreClient and SchemaConfig for table retrieval to improve integration with Drill's HiveMetaStoreClient and enhance
updated oauth2LoginLinks method to accept a MultiValueMap < String, String > parameter and added error handling to enhance OAuth2 login process by
updated Hijrah calendar name and modified DateTimeFormatter locale specification to improve clarity and consistency in calendar representation
added a condition to exclude Firefox in WebAudioWrapper. java to ensure compatibility with Firefox when not supported
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the private constructor in ` InterceptorConstants ` to enable server inter
updated the CREATE TABLE statements in TestCompatibility. java to include the default charset parameter to ensure compatibility with the InnoDb engine's default
removed unnecessary whitespace in WriterRecordBatch and StreamingAggTemplate to improve code readability and maintain consistency
[ hotfix ] fix checkstyle violation in executiongraph
added a hasFrom property to the Delete class and modified DeleteDeParser to include a check for table presence to enhance the SQL parser's
updated method names and logic for handling multi - status responses in SynchronizeFolderOperation. java to improve clarity and functionality of the synchronization process
refactor test matching logic into a separate method named applicableListTests to improve code readability and maintainability by reducing duplication
updated the regex pattern in LogAnalyser. java from ` \ - \ d \ d : \ \ d : + \ s + \
( chore ) camel - google - cloud : skip integrationtest when credential be not provide
fixed - rsearch. value ( ) method accept ` ` inclusive'' and ` ` exclusive'' instead of ` ` exclusive''
updated license handling logic in CCLicenseStep. java to improve clarity and maintainability of license processing logic
added a null check before accessing globalId in IfcModel. java to avoid potential NullPointerException when globalId is not initialized
updated comparison logic in OptionalAssert. java to improve comparison accuracy based on object comparison strategy
[ hotfix ] [ cs ] optimize last margin for large font
added a new file TestArrayCopyToFromObject. java to test array copying functionality to ensure correct handling of ArrayStoreException when copying objects
updated the construction of sys. path. insert ( 0, " \ " ) to escapeAsPythonString ( MorePaths. pathWithUnix
don't use isasync ( ) in ajp / ajp / ajp / ajp - server / ajp / a
updated the ` findFiles ` method to include a default unfound root parameter to improve file finding functionality by providing a default unfound root option
added JUnit @ Ignore annotation to TestLlapSignerImpl. java to temporarily disable the test case due to unstable behavior
added null check for client. doRequest ( ) in TestInternalInputBuffer. java to ensure robustness by handling potential null pointer exceptions
refactor autoloadCall method to accept a lower name parameter and manage lock management to improve thread safety and maintainability of the autoloading logic
updated the ` getServerVersionEqualOrGreater ` method to compare server versions with the corresponding session and server version to enhance server version comparison functionality and
updated KDC and OneKDC classes to use canonical host name instead of localhost to ensure proper resolution of localhost for security purposes
updated Jsr250Voter to conditionally return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of a specific security
updated import statements in MP4Parser. java to include specific classes instead of wildcard imports to improve code readability and maintainability by organizing imports
added a new constant for HS2 proxy user and modified session parameter handling to improve session management by incorporating proxy credentials
( chore ) camel - hdfs : add snappy codec to the hdfs component
added a 1 - second sleep in HttpClientTest. java to introduce a delay for better synchronization during tests
bug 58785 : avoid xssfcell. setcellvalue ( string ) and xssfsheet. setcell ( int ) to
updated glyph positioning and text formatting in GlyphLayout. java and modified test text in BitmapFontTest. java to improve text positioning and address
refactor istiopilot image loading and command execution in Fabric8IstioIT. java to improve reliability and clarity of isti
replaced ` ReportPlaybackStartAsync ` with ` ReportPlaybackStart ` and ` ReportPlaybackProgress ` in both PlaybackController. java and Utils
simplify simpleauthority. accessproperties load to avoid disk hit on every invocation
fix putfromloadall to not hit eviction policy on initial load
change LENGTH _ BIT from bitwise NOT _ BIT to bitwise OR in ResponseFlag. java to ensure both LENGTH _ BIT and ERROR _ BIT values
add policy to fix default policy ( patch by stu hood )
added caching for CompositeFont instances using SoftReference to improve memory management and prevent premature garbage collection
adjusted the calculation of prefHeight by removing the getHeight ( ) call to simplify the height adjustment logic for better readability
drools - 1775 : improve dmnevaluatorcompiler error message ( # 2957 )
removed unused import statements from multiple Java files to improve code clarity and maintainability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and modified its invocation in ` NavHandleLongPressInputConsumer
added null checks for node IDs and edge types in ElementFactoryImpl, ImportContainerImpl, and ImporterGDF to ensure robust error handling and
[ beam - 8470 ] avoid npe in fnapachefnagerequest. get ( ) when error be change ( #
nifi - 4923 : fix bin create large than bin limit
make closestenemycore find the actual closest core ( # 6676 )
added a check to skip the content - length header in RestTemplateCopyHeaderFilter to optimize request handling by avoiding unnecessary content length requests
updated handling of string literals in Java2TypeScriptTranslator and refactored test assertions in SyntaxTests to improve test coverage and ensure correctness of
updated sample sizes and scaling factors in multiple classes to improve layout consistency and accommodate larger data sets
hbase - 27253 canary should not run canary task if - allregions option be specify
remove dependency on node. environment from testcassandocassandocassandocassandocassandrasource ( #
http : / / code. google. com / p / mybatis / issues / detail? id = 473 : reset cursor position
added minimum size adjustments in CallDialog and OneToOneCallPanel classes to ensure frames do not exceed available minimum sizes
fix loss of state information during world gen
refactor tests in TestHTTPSamplersAgainstHttpMirrorServer to use JUnit 4 annotations and improve test structure to enhance readability and maintainability of
added injection for KerberosPrincipalHostDAO and refactored removal logic in KerberosPrincipalDAO to improve entity management and ensure proper removal of Kerberos principal
removed the third parameter'true'from the getTableSnapshot method call to simplify the method signature and improve usability
make timeout more robust to avoid transient failure
updated the error message to include the Base64 - encoded RSA public key format in AndroidGradleBuilder. java to provide clearer guidance on how
updated the method to retrieve the display name instead of the full name in FileTranscodeVirtualFolder to ensure the correct display name is used for
[ drools - 7 ] support spring boot root resource in kiebuilder
added an assumption to skip tests based on the runtime version to ensure tests are only executed on version 19
removed the context parameter from the assignTargetsForSplitScreen method in AbsSwipeUpHandler and RemoteTargetGluer classes to simplify the method
refactor LeaderLatch class to improve code structure to enhance maintainability and readability of the code
added functionality to initialize zk - SNARK parameters in SolidityNodeHttpApiService to enable dynamic initialization of zk SNARK parameters for improved
add a listener to get the transaction's depth future
added a method to create media recording and renamed ` longtitude ` to ` longitude ` in the ` Location ` class to improve media recording
initialized the platformName variable to " ios " to ensure the correct platform name is used for iOS development
pdfbox - 4071 : fix typo find by codespell on fossies. org
added a semicolon to conditional statements in Graphics2D. java to ensure proper evaluation of browser - specific dashes
pdfbox - 4071 : fix typo find by codespell on fossies. org
added error handling for outgoing frame processing to ensure graceful failure in write operations
replaced direct caller retrieval with a privileged action in ContextHandler. java to enhance security by ensuring the caller is a privileged action
added functionality to delete all child categories associated with a feed category to ensure that only relevant categories are retained in the feed
added title initialization for contributions in ContributionManagerDialog to improve user experience by providing specific title based on the contribution type
added a ` vwap ` field and associated getter and setter methods to the ` Ticker ` class to track the average volume of ticker
added functionality to display a " no widgets " view and updated bottom inset handling in the Search and Recommendations feature to improve user experience by
feat ( rendergraph ) : add an api to render dag. gsoc
added a color setting to the NCFirebaseMessagingService to enhance the visual appearance of the notification component
updated ShadowUsbManagerTest. java file to improve test coverage and ensure functionality aligns with recent changes
add log to track the number of user preference evaluation
added an update operation to the selectedConfiguration in Rocket. java to ensure the selected configuration is properly updated
added a Math. max ( 1, ( int ) calls to bounds2. width ( ) and bounds2. height ( ) to ensure
use linkedhashmap instead of hashmap in symbolizer
replaced ` ClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory. java ` to utilize a ` ClosurePool ` for closure management
( chore ) camel - kameletests : migrate the camel - main test to junit5
added WebsocketIngressIntegratedBootstrap and WebsocketPluginTest classes to establish a basic WebSocket communication framework
[ ds - 3952 ] remove unused test case and fix checkstyle violation
refactor authentication equality check in AbstractCasWebflowEventResolver to improve clarity and maintainability of the authentication comparison logic
added a condition to return false if the " jnr. ffi. compile. x86asm " system property is set to " true "
replaced calls to ` callNode. getType ( ) ` with ` callNodeType ` throughout the CodeGenerator class to improve code clarity by using a
added a new Insecure interface named ` @ Insecure ` and refactored methods in ` MessageBuffer ` to enhance security by ensuring
added new configuration variables to HiveConf. java to enhance Hive configuration options for improved performance and flexibility
initialized scopes and policies as new HashSet instances in ResourceSet. java and added a null check in DefaultResourceSetService. java to ensure proper
changed the ` decrefOnClose ` variable to be ` final ` and modified the instantiation of ` MultiReader ` to ensure immutability
renamed multiple classes including SecureDirectoryStream, UnixAsynchronousSocketChannelImpl, WindowsAsynchronousSocketChannelImpl, and TestFrameSize to improve
danielwagnerhall : fix a bug in selenium where clear do not work
updated ` getFirstTypeArgument ` method to use ` final ` and improved type declarations in multiple classes to enhance code clarity and enforce immutability
changed return types of keySet and values methods from Set < Integer > to KeySet and Values in Int2IntHashMap to improve method usability
added duration parameter to FlipTransition and updated motion creation parameters to allow dynamic adjustment of the background color and duration during transitions
removed a trace log statement when subsAreValidForStreaming is not set to prevent unnecessary logging during subsAreValidForStreaming
bump version for new forge release
replaced ` System. err. println ` with ` LowLevelLogUtil. log ` for warning messages based on Java version to improve logging clarity
updated ` ParserConfiguration. java ` to use ` java16 ` instead of ` java14 ` and ` java15 ` to ensure compatibility with
refactor padding logic in ExpansionViewHelper. java to improve layout responsiveness by ensuring correct padding based on replies size
update AbstractPartitionPrimaryReplicaAntiEntropyTask to check for a callback instead of a boolean to improve handling of empty versionMap and ensure
added metadata handling to SeedUrl and SeedResource classes to allow tracking and management of seed metadata in the application
added a null check for the declaration before creating a pattern instance to ensure that the pattern is only cloned when the declaration is not null
hbase - 15490 addendum : fix typo in testcoprocessorwhitelistmasterobserver javadoc
ww - 4441 add ` ` package'' to action name if require
updated test cases to include an additional null parameter and improved type safety to enhance test reliability by explicitly handling null values in the iterable
added stream implementations to ` MapIterable `, ` PrimitiveObjectMap `, and ` MapIterableTest ` classes to enhance stream processing capabilities for
clone the notifInfo array before returning it to prevent potential null pointer exceptions when modifying the notifInfo array
getcommandconstants ( ) return null if key = = null. this cause nullpointerexception in getcommandconstants ( ).
refactor AEADBlockCipher class to improve code readability and maintainability
added isVariableLocal method and updated variableNames in WebVariablesMap and ILocalVariableAwareVariablesMap classes to improve variable local checks and optimize
added logic to handle null resource name case and changed the default resources mode from best to legacy to improve resource retrieval accuracy and support for legacy mode
added a check for ` ulSize ` and ` ulPos ` before retrieving tables in TrueTypeFont. java to ensure proper handling of font
updated the SignPlugin constructor to accept a list of HttpMessageReader objects instead of a static list to allow dynamic assignment of message readers based on
updated Int2ObjectCache. java file to improve performance and maintainability of the caching mechanism
remove validation for MavenDeployer class in StandardMavenAuthenticationProvider. java to simplify the code by eliminating unnecessary checks for remote repository deployment
refactor AudioNode class to improve code structure to enhance maintainability and readability of the code
add SSL context initialization and handle NoSuchAlgorithmException and KeyManagementException in LinkyHandlerFactory. java to ensure proper SSL configuration and improve error handling
added imports for OracleSqlOperatorTable, OracleSqlOperatorTable, and SqlStdOperatorTable, and refactored the register method to improve
resolve intermittent failure in jmxsupport test
modify the parameter name in ` getBuildTargetForAlias ` to include a possibly - flavored alias to improve the handling of ambiguous build target
camel - olingo2 fixed the indexoutofboundsexception of olingo2 consumer
added a constant for EQUIVALENT _ VERSIONS and modified the version retrieval logic to ensure compatibility with EQUIVALENT versions
server : don't call advanceexpunge when expunge a vm
added @ Deprecated annotations to multiple methods in AbstractDateAssert. java to mark these classes for future development
replaced ` parseTitleAndContent ( ) [ 0 ] ` with ` getNoteTitle ( ) ` in ` ONDashClockExtension.
updated GoogleAuthUserConfigTableTest to use'nvarchar / varchar'instead of'int'and improved error message formatting to enhance code
replaced ` commit ( ) ` with ` apply ( ) ` in multiple Java files to ensure changes are applied to shared preferences consistently
replaced the ` TestIdListener ` with a new ` TestIdleListener ` in the ` StandardSession ` initialization to implement an idle listener for
make bigqueryioit. testbigquerytable use string. format ( )
set the background resource for the icon in HotseatPredictionController and nullify the background in BubbleTextView to improve visual appearance and
mondrian : fix typo in property name
add abstracttestnativeworker test for system native query runner
[ hotfix ] [ examples ] fix lme explanation return label for all output
added a new command - line argument ` -- ` to ` AppleSimulatorController ` and updated ` InstallCommand ` to accept a list of
replaced direct calls to ` getArea ( ) ` with a generic styled area in ` LineSelection. java ` to improve code clarity and ensure
update lifecycle check to ensure that manager is also an instance of Lifecycle to ensure that the manager is aware of its lifecycle status
added clipping to outline in QsbWidgetHostView to improve visual presentation of the widget background
added functionality to track and log flag conversion progress in SQLManager and BlockTypeListFlag to improve performance and tracking of flag conversion processes
updated FloatingTextRenderer to conditionally enable GL depth and function based on whether floating text is excluded to improve rendering behavior based on whether floating text is
truffle _ nfi _ backend _ libffi _ nfi _ backend _ linux : remove unnecessary whitespace and improve code readability
http : / / code. google. com / p / mybatis / issues / detail? id = 667 : jdbcaggregation
LayerValidation. java : use only L1Regularization and L2Regularization instances to improve the efficiency of layer configuration
added exception handling for read / write operations in AbstractChecker. java to improve robustness by ensuring exceptions are properly logged and handled
changed the access modifier of the colorStack variable from static to instance to allow for instance - specific access to the colorStack variable
changed the return value of ` getMappedStatement ` and ` hasStatement ` methods from false to true to align method logic with intended behavior in
convert the tradable identifier and currency to lowercase in BTCEPollingMarketDataService. java to ensure consistent casing for depth retrieval
updated pub channel state values in ChannelStateTests. java to ensure correct values are asserted for publish command properties
engine : remove ` ` versionedhashes'' a deprecate in v2 api
reset the trigger price field and call onTriggerPriceTextFieldChanged to ensure the trigger price input reflects the user's input
studentfeedbacksubmissioneditsaveactioneditsave should return a redirect to home page if it's an error
remove debug print statement from i18npagecontroller
hbase - 25790 fix regression in hbasestoretestbase. testrecoveredmultibatch ( )
# 281 - fix : when set dirty bean property, only load property be update
added a new boolean field ` _ alwaysSaveUri ` and corresponding getter and setter methods in ` FormAuthenticator. java ` to enable control over
added methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide implementations for setting
replaced specific imports with a wildcard import and added methods to manage the visibility of the popup menu to streamline import statements and ensure the popup menu
removed duplicate initialization of the insert map in StressProfile. java to streamline code by eliminating redundancy
replace usage of scala. collection. javaconversions. asscalaiterable with scala. collection. javaconversions. collectionasscala
fix npe in mockserver when no websocket connection be establish
log warn if property file can not be read
wrapped the while loop in a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a check for multicast support and NIC status in the SetOutgoingIf class to ensure outgoing connections are only established on valid and capable network
updated String constructor to use an offset of 0, len to improve memory allocation for command processing
updated ` UnDelegateResourceActuator `, ` BandwidthProcessor `, ` EnergyProcessor `, and ` UnDelegateResourceActuator
added a method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to improve session management by allowing custom invalid session strategies
include the label information when fail to serialize the token.
add a new test class MapAssert _ containsKeys to validate the functionality of the MapAssert class
updated JdbcProxyGenerator to use NewProxyAnyStatementGenerator and added a new JDBC4TemporaryPreparedStatementMethods interface to enhance the proxy generation process
added a ensure method to the ServerWebSocketContainer class and updated the start method in DirectUpgradeTest to enhance WebSocket container management and improve testing reli
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags. java ` to enhance immutability and performance of the code
pdfbox - 4892 : don't use point2d. float for replicate initial point, a suggest by martin
added a static final empty array EMPTY in MethodHook and refactored hooks initialization in Method. java to ensure a default empty array is used
added a ` grantAccess ` parameter to ` MockAuthenticationManager ` and modified the return logic to include an exception when access is denied to enhance
updated job lifecycle method signatures to accept JobExecution parameter to enable job execution handling in the JobListener functionality
updated file write permission check in SharedLibraryLoader. java to ensure only writable files are processed
update time series query api to v3.15. 3 ( # 3581 )
bug fix : save sample event instead of result
added new constants for battery level, annotation, timing offset, and PROFILE _ NAME in BundleConstants and stored these values in CustomUrlManager to
change searchexpression. applyrule to accept a map instead of a hashtable
ggb - 2118 fix : move ` ` absolute screen'' position permanently
updated the resize listener method in JoglGraphics and modified texture initialization in ProjectiveTextureTest to improve texture handling and enable custom formats for
refactor the ` setResourceToDelegate ` method to return a ` File ` instance instead of void to improve resource handling by ensuring the output file
camel - 4687 : fix property endpoint can not intercept from route.
updated time comparison condition in ActionScheduler. java and adjusted test case in TestActionScheduler. java to ensure correct timing logic for task execution
updated debug zip path from " / tmp / ums _ dbg. zip " to " / tmp / ums _ dbg. zip "
fix : add hud _ hidden property to renderingdebugconfig
add a pipe. resetgate ( ) method that will reset the gate whenever a block be activate.
refactor TestSupplementary to ensure locale is reset after execution to ensure consistent locale handling during test execution
updated the randomness of the Team instantiation from 0.8 f to 0.4 f to improve the randomness of the team generation process
changed the type of ` activeMatchedStates ` from ` Set ` to ` Collection ` and added a loop for removing states to improve performance and
changed the logical OR operator from OR to AND in the condition to OR in the condition to simplify the condition for checking expected exceptions
updated error handling in StorageResources. java and added error logging in StoragePluginRegistryImpl. java to improve clarity of error messages and enhance error
rename calltreeprinter to calltreeprinter. tossclob ( which be rename to csvfile )
added null checks for note and noteTmp in DetailFragment. java to improve robustness by preventing potential NullPointerExceptions
added peakTasks tracking and modified task loading logic in AssetManager. java to track the peak number of tasks and ensure accurate resource loading metrics
simonstewart : set the default native event to true on window
added constants for nutch score and fetch interval in Injector. java to enhance configurability and improve URL handling
updated import statement for ListUtils and HashedMap from org. apache. commons. collections to org. apache. commons. collections4 to
updated the condition for zkController in CoreContainer. java and added a method to check shareSchema in TestCoreContainer. java to improve code
updated method calls to use ` true ` for size calculations to ensure accurate representation of segment size across multiple classes
replaced ` gson. fromJson ` with ` assertNull ` in ` VersioningTest. java ` to ensure that the fromJson method returns an expected value
updated SQL queries in Field. java and AbstractJdbc2DatabaseMetaData. java, and added tests in DatabaseMetaDataTest. java to enhance domain
[ java ] appendleadershiptermevent should not return the result of appendleadershiptermevent.
added a method to build the media type in the WebClientPlugin class to ensure the correct content type is returned for HTTP requests
replace ` fillUsingLengthPrefix ` with ` fillSlice ` across multiple files to improve method naming consistency and clarity
refactored conditional logic in AcidUtils. java and added a cleanup test in TestCleaner. java to improve code clarity and ensure
update immutableStorageScheme assignment to handle null storageScheme and qualifierEncodingScheme to ensure proper handling of null storageScheme and qualifierEncodingScheme
added new classes ` PojoProducersCustomized `, ` RestProducersCutomized `, and created ` PojoProducers'and
updated cache key mappings in ArtifactCacheBuckConfig. java to use CACHE _ SECTION _ NAME instead of CACHE _ SECTION _ NAME to
move register ( ) to aesgcmsivprotoserialization since it be only register once.
fix oredictionary replacement for wooden slab. close # 2893
updated session - related factory and factory classes for consistency to improve maintainability and readability of session management code
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` parameter from the ` UndefinedSymbolsLinkerScript
prepare next release 3.3 : update doc tree and overview ( rc1 )
hhh - 14615 fix test failure on sybase
update spriteBatch draw position calculation to correct positioning to ensure proper rendering of texture elements in the sprite batch
updated plot index handling in PlayerFunctions, PlotId, and ProtectedCuboidRegion messages to ensure proper representation of plot positions and improve
added a deprecated static final version constant for Lucene 8.5. 0 to signal that this version should no longer be used
updated string concatenation in the closeSocket method message to improve readability of the debug output
added a test for casting a signed integer to a signed integer in SelectTest. java to ensure that the SQL parser can handle signed integer values
change the output to use the semanticgraph core annotation instead of a string
refactor ` NoSuchBuildTargetException ` and ` ParseContext ` usage to streamline error handling to improve code clarity and maintainability by reducing redundancy
replaced the method from ` testFromMain ( ) ` with ` test ( ) ` in ` TestOutOfMemory. java ` to streamline
increase the size of configBlocks from Block. blocksList. length to 256 - 1 to optimize memory usage and improve performance
replaced log messages with System. out. println statements in BukkitMain. java to improve output clarity and ensure users are aware of unsupported features
updated regex handling for PostgreSQL questionmark operators in AbstractSQLChange and AbstractSQLChangeTest to ensure correct SQL generation for escaped PostgreSQL questionmark operators
add ofall ( iterable < t > ) and withall ( iterable < t > ) method to mutablebags
pdfbox - 3017 : remove html escape code from file name
updated MqttBrokerConnection instantiation to include a new boolean parameter to enhance connection control by allowing additional configuration options
replaced direct call to getChangeLog ( ) with a null check for changeLog to improve robustness by ensuring changeLog is initialized before use
removed unnecessary instantiation of MethodResult in StaticMethodInterceptor, RocketMQGlobalPluginHandler, and PrometheusPluginBootService to simplify code and
added database drop functionality in HiveMetaStoreClient and enhanced logging in TestObjectStore to improve database management and enhance debugging capabilities
added a currency parameter to the Bithumb API request in BithumbAuthenticated. java and updated BithumbAccountServiceRaw. java
deleted the SSEFluxWebConfig. java file to remove unused configuration code
updated method return checks to use ` isVoid ( ) ` instead of ` getFullyQualifiedName ( ) ` and adjusted JSON body formatting to improve
[ te ] - add support for listyamls ( # 3804 )
removed the ` public ` access modifier from the methods equals and hashCode in the ` Marker ` class to allow access to these methods from outside the
refactor the ` newThread ` method to use a lambda expression and add a new ` awaitTermination ` method for asynchronous channel groups to improve code
added unit tests for adding lists with simple converter and mapping converters in MongoTemplateTests. java and created a new PersonWithAList class to
g2p : use correct coordinate space width and height when sync applet panel size
replaced direct toolbar visibility setting with a delayed execution to improve UI responsiveness by delaying visibility updates
refactored the ` unpackFirstPageReader ` method into a separate ` unpackFirstPageReader ` method to improve code readability and maintainability
bug fix : don't save vm password on vr restart
set character encoding to false in Response. java to ensure proper handling of character encoding during processing
added a warning mechanism for assignment side effects to enhance user experience by preventing unnecessary warning warnings
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated icon width and height validation in FileUploadApiController. java to ensure proper positioning of icons within defined dimensions
updated import statements and modified method signatures in multiple files to enhance functionality and ensure compatibility with Bouncy Castle library
tika - 3764 -- improve mime magic detection for non - windows platform
added JZlibDecoder and JZlibEncoder to the channelHandlerContext's pipeline to implement compression support for the Netty connection
added a method ` doesClassLoaderDescendFrom ` in ` Util. java ` and updated its usage in ` MethodHandles. java ` to
removed dependency check for " io / netty / handler / proxy " from the connect method in ChannelProvider. java to simplify the connection process by
added a test for handling an empty final column in CSV header to ensure correct CSV output for empty final columns
added compassGravity and compassMargins in NearbyMapFragment. java to improve layout alignment for better user interface
added a test method to validate the interpolation of linear expressions in GeoPathTest. java to ensure accurate computation of linear expressions in the GeoPath
added HiveException handling in getLeafFilterBuilderByType method and improved error messaging in ParquetFilterPredicateConverter to enhance error handling and provide clearer
added logic to set the language for current audio track based on stream type to ensure correct audio track language is used when the stream type is Video
added a warning log for schemas compatibility issues in MicroserviceRegisterTask. java to ensure users are aware that schemas in newer versions may cause compatibility
replaced System. arraycopy calls with addAll method in multiple array classes to streamline code and improve performance by leveraging functional programming features
ignore exception when close a datasource.
added a method to create a map of clients and modified the InMemoryClientRegistrationRepository to accept a list of clients to improve client registration handling and
added a method to reset the UI state in SchemaUpgradeHelper. java to ensure that UI state is properly cleared during schema upgrades
added a failedStep flag and updated JUnitReporter logic to handle pending and non - pending exceptions to improve test reporting behavior when encountering errors with strict
add a new playerselector class to allow playerevent. isplayeralive ( ) and playerevent. isplayeralive ( ).
added ` implements Closeable ` to the ` Selector ` class to ensure proper resource management and support for closing operations
updated MaxConcurrentStreamsTest. java to use a MultiplexConnectionPool with pre - create connections to improve connection management and reduce the number of concurrent
added multiple calls to stringType ( ) in CoreOptions. java to enhance type safety and improve code clarity
updated HqlQueryRenderer to handle character and parameter cases in HqlQueryRenderer. java and renamed test class in EclipseLinkUserRepositoryFinder
updated status codes in HttpGenerator, HttpChannel, Response, and StatisticsHandler to ensure correct handling of HTTP status codes and improve code clarity
pdfbox - 4892 : simplify code, a suggest by valerybokov
don't use jdbc : h2 : mem : in unit test ( # 1373 )
updated file selection logic and metadata handling in ParquetFormatPlugin and ParquetGroupScan classes to improve file existence checks and maintain consistency in metadata
updated success variable initialization and introduced error handling for ABI compilation to improve error reporting during Java compilation process
added a new ` BaseTableModelListener ` class and modified ` baseRenderer ` to be ` null ` to enable the listener to listen to table
increase the range for the number in ServerConfig from 49152 to 65535 to ensure that the number does not exceed a maximum limit
added document provider authority handling in AuthenticatorActivity, AccountRemovalJob, and DocumentsStorageProvider to ensure proper handling of document provider changes across different
added a call to start logging with the current application context to improve logging functionality for better user experience
updated exception handling in FilterChainProxy to properly analyze and handle wrapped RequestRejectedExceptions to improve error handling robustness and ensure proper handling of
updated string array copy logic to use'this. length'for clarity to improve code readability and maintainability by using the current object's
added validation for empty filterList in Filter. java and created a test for handling empty filterLists in TestFilters. java to ensure that an
added a new file TbStopWatch. java to implement a stopwatch functionality to enable monitoring and management of stop times in the application
set initialized = true to true in PListStore. java to ensure that the list is initialized before further operations
added deprecation warnings for deprecated classes to encourage users to use Servlet 3.0 and improve code maintainability
[ hotfix ] fix class loader for remote interpreter server
fix potential npe in forgehooks. onplay ( commandsourcestack source )
update minSdk from VERSION _ CODES. P to VERSION _ CODES. O _ MR1 in ShadowRttCallTest and Shadow
corrected the casing of the variable name from " indexInTickArray " to " tickArrayIndex " to improve code readability and maintain consistency
no effective change - add tostring ( ) method to beandescriptorelement and beanpropertyassocmany element
changed JavaScript and CSS links from " wro / all. js " and " wro / all. css " to " static / all
added a test method to show the latest timeseries in IoTDBMetadataFetchIT. java to ensure that the latest timeseries data is
rename ` appContextLocation ` to ` contextConfigLocation ` in multiple files to improve clarity by accurately reflecting the context configuration
ocsp checker should treat all exception a ` ` unable to send ocsp request''
benchmark : add option to disable the write solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class Issue _ 815 to verify the slice size functionality to address Issue # 815 by verifying the correct size of
added a shapeless recipe for waterproof and slime ball to the game's inventory to enhance the craft system's capability
mahout - 4896 : fix regression in sequentialaccessSparsevector iterator
added handling for ` Shulker ` and ` Shulker ` entities in ` BukkitMain ` and ` EntitySpawnListener ` classes
added the getDebugLogger method to DIHWriter and SolrWriter classes to provide access to the debug logger for external use
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 6476 & max _ file _
replaced the direct instantiation of ` UpToTagChangeSetFilter ` with a variable declaration and added a method to check if the tag matches to
[ beam - 8470 ] fix checkstyle warning in beam - util
refactor BrokerRoutingManager to improve code structure to enhance maintainability and readability of the code
change volume and up colors from gray to GREEN in CandlestickRenderer. java to improve visual distinction of theandlestick
modified margin calculation in InsettableFrameLayout to account for insets to ensure proper layout adjustments based on user insets
added ` duration ` parameter to ` BuildTargetDurationListener ` and updated corresponding tests to accommodate the new ` duration ` parameter to enhance the
replaced the use of the @ Profile annotation with a direct call to assumeTrue in multiple test classes to improve clarity and consistency in configuration checks
added a null check for the user object before processing claims to avoid potential null pointer exceptions when processing claims
added unit test base on user forum issue
use nonblockinghashset instead of concurrentskiplistset in cassandraconnection
bugfix : listpublicipaddresses - add source network id to api call
added unit test and implementation for isIgnoringBatteryOptimizations in ShadowPowerManager to ensure accurate behavior of battery optimization settings in the
updated the version retrieval method to use a new property definition for " 9.4. z - SNAPSHOT " to improve code maintainability by centralizing
added unit tests for verification in NumberOfInvocationsInOrderVerifierTest. java to ensure correct handling of invocations in the verifier
refactor conditional logic in TRegexExecNode. java to streamline force evaluation logic to improve code readability and maintainability by reducing redundancy
added " - foreground " option to the startProfile method call to specify a foreground mode for the process
replaced ` TimeUnit ` with ` IOUtils. closeQuietly ` for executor shutdown methods to improve resource management and ensure proper closing of resources
changed the type of parseFieldnames from a Map to a String array to improve handling of multiple parsed field names
updated logging method to use the filename instead of the file name and improved view removal logic in EditorTextActionWindow to enhance clarity of log output
enhanced logging of skipped entries in ClassFileReader. java and fixed a warning message in JdepsTask. java to improve error reporting and provide clearer
added LinkStorage support to the Fetcher and FetcherMain classes to enhance indexing capabilities and improve data handling
updated the ` populateBubble ` method to include an additional parameter for existing bubble handling to improve functionality by allowing existing bubble entries to be handled
camel - 4900 : fixed scheduledroutepolicy to throw illegalargumentexception if schedulejob fails.
removed array conversion from methods in MotanServiceBeanPostProcessor and TarsServiceBeanPostProcessor to simplify method signatures and improve code readability
[ java ] : added optimisticmulticastdelaygenerator to mediadriver. nak _ multicast _ delay _ generator.
updated Gson initialization in ClientInformationResponseView. java to include client ID, client secret, issued at, and registration access token to enhance data
added a conditional check before setting the average price in limitOrders to ensure that orders are only processed when the average price is non - zero
refactored rawExecutionReports method to streamline execution report handling to improve code readability and maintainability
added a fail method to handle exceptions and modified timeout condition in the LdapTimeoutTest to improve error handling and provide clearer output during test failures
don't try to read the user dictionary if it don't exist
updated password handling logic in AmbariServerConfigurationHandler. java and adjusted test cases in RootServiceComponentConfigurationResourceProviderTest. java to ensure
added parsing logic in SegmentChecker and implemented isParsed method in ParseSegment to ensure segment processing is skipped when already parsed
[ flink - 33222 ] [ yarn ] add a configuration option to control application attempt failure validity interval
added handling for ClassNotFoundException when the H2 driver is not included to improve logging clarity for debugging when the H2 driver is not included
hbase - 25819 use hbase. tablesnapshotinputformat. scanner. readtype to update stream for snapshot - based inputformat ( #
added fixed height and width parameters to the LoginInstanceRequest class to allow dynamic configuration of the login instance's dimensions
added a ` cornerRadius ` parameter to multiple ` update ` methods across multiple classes to enable the update of the corner radius during swipe actions
added filters for SQL commands in QFile. java to enhance filtering capabilities for cross product data retrieval
added retry logic for connection retrieval from the connection pool to work around a bug in the BONECP connection pooling
change backup reserve prepare operation name to check
added a public final char [ ] [ ] field to the FirstOfStringsMatcher class to allow dynamic modification of the strings array
updated DELETE statements to use " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS " and added a new test class for explain statements
don't retryable sockettimeoutexception when message be insufficient
added rapidInstallTypes parameter to AdbHelper and related classes to enable the passing of rapid install types for better integration with the Android device
updated the regex pattern for the SeedPattern in SortTest. java to allow optional specification of the seed format
refactor MultimapSubject to use a factory for creating Iterable values and update string representations accordingly to improve readability and maintainability of the code
update return statement from ` waitForLauncherObject ( " hotseat " ). top ` to ` return - 1 ` to simplify the logic
do not transcode video if there be more than one media item
added localization to the Picker class to ensure the value is localized for better user experience
camel - 12319 fixed the unit test error of cxfrsconsumertest
hhh - 14891dialect should handle 40p01 and 55p03 exception with pessimisticlockexception
added null check for queryId in TestJdbcDriver2. java and improved exception handling in HiveStatement. java to ensure that queryId is
exclude usesunboundedpcollections from validatortest category in beam - sdk - tests
updated HTML tags to use the formatted file name instead of the Gps logger folder to improve readability and consistency in the user interface
[ java ] remove unused ` leadershiptermid ` parameter from joinlogasfollower method.
refactor HttpSender to use a single instance variable for the exchange to improve code clarity and maintainability
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
updated method names from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity
added null check for the tree before retrieving markers and improved equality handling in the Markers class to enhance robustness and prevent potential NullPointerExceptions
fixed npe in xwpf characterrun font size calculation
change email parsing to return a array instead of a single string to allow for multiple email values to be processed
added logic to manage exclusions in RawMavenResolver to ensure proper artifact exclusions are associated with missing dependencies
updated DSXAdapters, DSXPairInfo, DSXBaseService, and DSXAdaptersService classes to improve initialization and support
updated multiple test files for improved functionality to enhance test reliability and performance
[ drools - 90 ] fix invalid pom in incremental compilation test
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj. has ( k ) ` to
camel - jackson : fix checkstyle violation in jackson data format
replace findstaticgetter / findsetter with direct field access in hostfielddesc.
added a new method parameter annotation for " completableFuture " in the DefaultNullnessAnnotations class to enhance nullness handling capabilities for concurrent operations
update the calculation for mFreezeCheckPoint in PlaybackController. java to ensure that the mFreezeCheckPoint duration does not exceed
added imports for ` Whitebox ` and ` Annotation ` in ` AbstractCommonPowerMockRunner ` and removed it from ` PowerMockRunner ` to
updated the parameter passed to ` TCUtility. unmarshalIn ` from ` typeCode ` to ` realType ( ) ` to ensure the correct
updated TabsAndIndentsVisitor to handle method invocation blocks more accurately to improve indentation handling for method elements in the code
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to ensure compatibility with JUnit's testing framework
replace ` newColumn ` with a ` wrappedText ` in the ` write ` method to improve text formatting for better display
resolved - issue batch - 1481 : steprepository throw npe if latest executioncontext be null
added a conditional check to only add a new media folder if the configuration is hiding new media folders to improve flexibility in adding media folders based on
replace unsupported operation exception with a null check for actor equality in SplitPane # setWidget ( null ) to improve robustness by ensuring correct
add support for handling JavaType. Parameterized in RemoveUnusedImports. java to ensure proper handling of parameterized Java types
added null and empty checks for modFileInfo and getModInfos in UniqueModListBuilder. java to improve robustness by handling potential null or empty
changed the logger field from instance to static final in TicketGrantingTicketImpl. java to improve logging efficiency by using a single instance of Ticket
updated the RLE value in the SQL string from " SNAPPY. RLE " to " SNAPPY. 81 + 12 "
added a method ` isValue ( String value ) ` to ` AttrData ` and updated ` Converter ` to check for value presence to improve
added support for character modifier keys inUSInternationalPC in CPlatformResponder. java and corresponding methods in LWCToolkit. java
[ java ] add extra connection timeout environment variable to testmediadriver
added a check for specific request URI formats in GTVGFilter. java to ensure that only valid request URIs are processed
modified test result handling in TestUtil. java to include an assertion for successful APK installation to improve test reliability by ensuring that the expected APK
no effective change - remove oracle ANSI SQL row limiter
added a mock for MultiMap in TestSimpleBodyHandler and updated expected values in TestVertxTLSBuilder to ensure proper handling of secure transport
updated JavaLib1. java file path in DiffRuleKeysScriptIntegrationTest. java to ensure compatibility with the latest library version
added a flag to manage dismiss haptic running state in TaskViewTouchController to improve user experience by ensuring haptic state is
fix issue with projectile explosion cause not be set properly.
removed unused import and modified getItemId method in SymbolInputAdapter. java to streamline code and improve item retrieval functionality
removed the limit _ bids and limit _ asks parameter from the ` getBook ` method in ` BitfinexPollingMarketDataService ` to
added a check to replace single quotes with quotes in the result to ensure proper handling of special characters in the result
[ hotfix ] [ k8s ] tostring in kubernetesleaderelectiondriver and zookeeperleaderelectiondriver
rename SqlSessionFactoryBean to improve clarity to enhance code readability and maintainability
[ 3.0 ] fix npe when call a non - generic method ( # 9884 )
replaced an error throwing for reading errors in PolygonRegionLoader to improve error handling by throwing a specific runtime exception
added a method to check if the threadlocal Deadline is initialized and registered it first to improve error handling by throwing an exception when the thread
log the cause of closedchannelexception instead of throw an ioexception
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ flink - 21163 ] [ runtime ] checkpointcoordinator should call reset when restore late checkpoint
feat ( prefab ) : add mappedcontainercomponent to facilitate testing
hbase - 15421 fix npe in walnode when memtable be pinned
removed unnecessary whitespace in ` Endpoint. java ` and added a new test case in ` HttpTest. java ` to improve code readability and ensure
fix checkstyle warning in package - info. java
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL server escape character behavior to ensure correct handling of special characters in query queries
added null safety annotations to constructors in CamelModule to enhance code robustness by ensuring non - null parameters are handled correctly
replaced conditional check with utility - based wait in JavaFXSEPort. java to improve code readability and maintainability by using a standard utility method
rename ParameterFlags from ` com. kenai. jaffl ` to ` com. kenai. jaffl. provider
refactor crop behavior handling to support both RegionDecoderCropBehaviour and Bitmap in CropperUtils. java to improve flexibility and error handling for
removed the appName parameter from the configure methods in InputRC. java to simplify the configuration by removing the appName parameter
fix ` ` ignore dependency of dependent component'' install test
simonstewart : use ` -- headless = chrome ` instead of ` setheadless ( true ) `.
replaced value assignment with value. intern ( ) to improve memory efficiency by avoiding string interning
added " MOVE " status check to the recv _ status validation to allow additional status checks for insert or delete operations
updated the formatting pattern in ISO8601 _ PERIOD _ MICROS to ensure consistent date formatting across the application
replaced the import of ` org. apache. curator. shaded ` with ` com. google. common. collect ` in multiple test
[ hotfix ] [ runtime ] fix checkstyle violation in hsbbuffercontext
plots. admin. visit. untrusted visit should not require permission.
fix issue with jabber account not be register.
updated the condition in BasicURLNormalizer to include curly brace detection to ensure accurate URL normalization by recognizing curly brace codes
changed access modifiers from protected to private for several methods in QuickstepTransitionManager to restrict access and improve encapsulation
[ hz - 2197 ] compare block rates in enc1 and enc2 to ensure that the correct block rate is used for processing
added a method to retrieve the project path and modified the return type of generateProjects to return an ImmutableSet of generated projects to enhance project generation functionality
added validation for the calendar ID before setting the zero digit and simplified the calculation of nativeCalType to ensure that the zero digit is set only
added a new class MSwingUtilities to provide utility functions for displaying errors to enhance error handling and improve image rendering quality
camel - 4619 : fix mail producer to call done ( true ) on the same exchange a process ( ) method.
added @ RefreshScope annotation to CasCoreWebConfiguration. java and PasswordlessAuthenticationConfiguration. java to ensure that authentication scopes are refreshed for
added unit test base on user forum issue
added Main and ScriptRenderer classes to implement JavaScript rendering functionality to enable the rendering of templates using Groovy scripts
added a check for ` _ inputState = __ NONE ` in the ` REQUEST ` class and created a new test for the ` read `
updated descent calculation and added isDescendant method in Group and SelectBox classes to ensure proper focus behavior and prevent potential focus issues
replaced calls to ` reportFailure ` with ` context. runCloseHooks ` in ` DeploymentManager. java ` and added a new test
add a stacktostring to the lexiconrecipemappings to allow for the wider range of recipe.
increase timeout after interrupt in constanttimertimebackofftest
replaced specific StringUtils imports with a wildcard import and updated the condition to check for non - blank shortName to simplify import statements and improve code readability
use the class loader to load the holiday xml, instead of the core class loader
added a new ` FieldUtils ` class to facilitate field retrieval based on class and name to improve code modularity and facilitate
removed speculative type check in DeferredAttr. java and added a new DoubleStaticImport. java file with a static method for lock management to
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding to ` customContent ` to improve
added a method to update settings with a save last account in XabberAccountManager to ensure proper handling of invalid tokens during xmpp account loading
added a new method ` setvar ` to provide users with options for setting variable arguments to enhance usability by providing clear command - line help
fire animaltameevent # 70877 _ b ( # 70877 _ a )
fix error when use unsigned range with window frame
pdfbox - 4892 : verify that there be a font with the correct name, a suggest by valerybokov
added functionality to set the application's mode to ensure the application operates in the correct mode
added support for configuring Docker file paths and build arguments in ImageFromDockerfile to enhance the flexibility and usability of Docker file handling in
added a null check before initializing threadInfos and threadNames to avoid potential NullPointerExceptions when accessing threadInfos
updated the comparison for sweepAngleOuter from a fixed value to a utility constant to improve code readability and maintainability by using a defined constant
[ hotfix ] [ checkpointing ] add log for checkpointing and exception handling
added new table types to the Schema. java file to support additional data types in the system
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors to allow customizable similarity factor for queries
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView. java ` to clarify
add warn log when set immediateflush ( ) in encoders
added additional auto - configuration names to ZipkinAutoConfiguration to enhance auto - configuration flexibility for RabbitMQ and Kafka auto - configurations
update JLayer. java to handle null components correctly and add a new test class bug6875716. java to ensure proper handling of null
updated import statements from avro. shaded to com. google. common. base in multiple Java files to ensure compatibility with the latest Google library
bugfix : bugfix for bciblockmapping. getblocks ( ), getblocks ( ), getblock ( ) and getblock
added null and getter / setter methods for legacyRenderer in Label. java to ensure proper handling of null icons and improve code clarity
replace intToFourBytes method with Ints. toByteArray method in AbstractJweDecrypter to improve code consistency and leverage Guava's
added null check for mObserver in NavigationModeFeatureFlag. java to prevent potential NullPointerException when mObserver is null
modified the ` thenComparing ` method signature in the ` Comparator ` interface and added a new ` Department ` class with associated methods to enhance
refactor methods in DocIdSet. java to improve code readability and maintainability
updated the end time setting in UserRuleAnomalyFunction to accurately reflect the current bucket milliseconds for anomaly results
added error handling for parsing integers in VisualScoreTagTest. java to ensure that NumberFormatException is never thrown during value parsing
added a class loader setting in MockFactory to ensure proper initialization of the mock enhancer
camel - 7999 : fixed issue in converterwithenumformat where enum value be not parse correctly.
replaced hardcoded " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils. java to improve maintainability
rename JAWTRenderer class to improve clarity and consistency in naming conventions
camel - 14850 - camel - aws2 - * : enable autowire on the lambda client, regen test
server : fix npe when try to generate a mac address for a guest network ( # 49 )
added a condition to check if the header name equals " Authorization " to ensure proper handling of authorization headers in the application
change method from submit to execute in TraceableExecutorService to improve asynchronous execution handling
added a ` getDetails ( ) ` method to multiple authentication classes to provide access to the details of authentication objects for better data management
change the initialization of ` randUsePoints ` from ` nextBoolean ( ) ` to ` 0! = random ( ). nextInt ( 5
replace ` appendDot ( ) ` with ` endSentence ( ) ` in multiple builders to improve clarity and consistency in string termination
updated formatForConsole method to accept a Locale parameter to ensure consistent formatting across different locales
updated imports and added logic to handle named arguments in GroovyParserVisitor. java to improve argument parsing and ensure correct order of arguments
added calculations for inset dimensions in Border. java to ensure proper inset calculations for layout flexibility
refactored the initialization of ` mGestureState ` to a constant variable and introduced a new method ` createGestureState ( ) ` to
replaced ` DateTime ` with ` Instant ` and ` DateTimeFormatter ` in ` LlapServiceDriver. java ` to improve date formatting consistency and
updated openblas and openblas _ nolapack files to improve functionality and maintainability of the library
remove use of ioutil. close ( ) from torrent storage
added synchronized keyword to initTxnMgr method to ensure thread safety during initialization
increased timeout duration from 15 seconds to 4 seconds in AbstractFullDistribZkTestBase and AbstractDistribZkTestBase to improve
add a new class ` SearchResults ` to handle search results to facilitate the management and counting of search results
move refresh mechanism from threadscustom refresher to processor
initialize the body of the primitives array if it be null to ensure that the primitives array is properly initialized before use
added new versions " 8.10. 0 - cfs " and " 8.10. 0 - nocfs " to TestBackwardsCompatibility. java
changed feature flag from DISABLED to TEAMFOOD in FeatureFlags. java and modified app icon check in AppIcon. java to improve app
added a new API endpoint to retrieve instance pool information to provide users with information on tenant pools for the current instance
updated the ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods to include a null check
added support for ` isToString ( ) ` in InlineBytecodeGenerator and enhanced test cases in InlineByteBuddyMockMakerTest to improve
added logging statements to ` CxxCompileStep ` and ` CxxPreprocessStep ` classes to improve error handling and debugging for compilation and preprocessing processes
add stringutil. removeredcharacter ( string, char ) to remove non - existent char from string.
fix : metadata service protocol should be export to application ( # 9684 )
kie - issue : add datatransformer interface ( # 223 )
changed the type of the values array from Collection <? > to Number [ ] [ ] in DistributionGraph. java to improve type safety and
removed the ` interesting ` flag and adjusted the ` visit ` call in ` FormatStringChecker. java ` to streamline the code by elim
set core to null in ElectionContext. java to ensure core is initialized properly before use
updated test cases in ITestDbTxnManager. java to improve test coverage and ensure accuracy of transaction management functionality
refactor connection handling to use try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a new method ` testMapModel ` to ` CodeFirstPojoClient ` and implemented the corresponding test in ` CodeFirstPojoIntf `
pdfbox - 4892 : simplify code, a suggest by valerybokov
updated selection option handling in ScaleDialog. java to improve null safety and simplify selection state management
replaced ` updatePlayerStepStatus ` with ` tickBelt ` and added null checks for ` reachDist ` and ` stepHeight ` to
replaced IOException with a warning log message and added logging for appearance stream creation to improve error handling and provide better visibility into appearance stream creation
replace ` SortedSet ` with ` LinkedHashSet ` for the ` keys ` variable to maintain insertion order for keys
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 in CancelEventTimer. java to allow for
updated preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " to support new features and improvements
added conditional check before setting all constructors to public in MainMockTransformer and created new test classes for static methods with private constructors to ensure proper behavior
pdfbox - 4892 : don't decrypt cosstring / cosarray if it's an instance of cosstring or cos
add ability to set ` ` java. awt. appname'' to applet
modify depth calculation based on pixel size for better transparency handling to ensure correct depth value is assigned when the pixel size is 32
added errorResponseBody to InvalidResponseCodeException when reading the response body to improve error handling by throwing an appropriate HttpDataSourceException for unsuccessful response
added a static method ` exit ` to ` TopLogging ` and updated its usage in ` TopThreadGroup ` to improve error handling by capturing
updated the calculation of the start index for regex matching to ensure correct starting index is used for regex matching
planner - 468 skip test until planner - 468 be resolve
[ hotfix ] fix typo in defaultallocator
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to improve data management by allowing entries to be deleted without feeds
changed the return type of the ` appendToLabel ` method from void to AtomicCounter to allow method chaining for better usability
[ java ] add a noop idle strategy to make the medium driver more reliable.
added handling for not modified response statuses in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure appropriate response status management when headers are
refactor ` InstrumentationPartialEvaluationTest ` to use ` ToolEvalNodeFactory ` instead of ` SpliceInstrumentListener ` to improve clarity and
removed the ` paintTabArea ` method from ` SynthTabbedPaneUI. java ` to streamline the rendering process by eliminating unnecessary dimensions
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an optional'count'parameter to enhance flexibility
( chore ) camel - ftp : added getfileseparator ( ) and isabsolute ( ) method to file component
added a new method ` build ` to the ` JavaProvenance ` class and refactored the ` JavaProvenanceParser `
added trace logging for registered Hive functions and non - deterministic UDFs in HiveFunctionRegistry. java to improve visibility into UDF registrations for debugging
reduce the loop iteration from 100 to 200 in CloudStateUpdateTest. java to improve test coverage for cloud state updates
fix delivery of hint for deleted sstables. patch by jbellis ; review by brandonwilliams for cassandra - 1488
added a check for writable output files before executing the executeCmd method to avoid errors when the output file is writable due to root access
added package availability check in LauncherModel. java to ensure that application info is not enabled when the requested package is not found
server : fix db upgrade failure ( # 4104 )
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a test case in FaultTolerantChunkOrient
updated regionMatches method in LineReaderImpl. java to use regionMatches ( ) method to improve readability and maintainability of the code
added imports for SourcesFileErrors, SourcesResults, and SourcesFileResults, and refactored data table handling to improve data
added overview dismissal functionality in TaplTestsTaskbar. java to ensure that all tasks are dismissed when the overview is active
add dbupgradesystemvmtemplate interface to upgrade system vm templates
removed unnecessary null checks and improved code readability in LdapClient. java to simplify connection handling logic and enhance code clarity
refactor index handling in SequenceAction. java to improve readability to enhance code clarity and maintainability by reducing redundancy
add keyspace support to cassandraserver. patch by brandonwilliams, review by jbellis for cassandra - 1415
added a check to skip synthetic fields in ReflectUtils. java to improve handling of fields that are not synthetic
added LoggerProvider class and integrated it into ApplicationController to enable logging functionality through application - specific configuration
changed the data type of ` builder ` and ` values ` from ` ImmutableMap < String, String > ` to ` ImmutableMap < String, Object
added a deprecated warning log for multiple glue class that configures the spring context to inform users to avoid issues related to deprecated spring context configuration
[ hotfix ] [ table - common ] add deepstart ( ) to startables
added a deprecated method ` reservePrimitiveExtensionArray ( ) ` to the ` Shape ` class and its implementation in the ` ShapeImpl ` class
make blocklasertable implement ilasertargetblock so it won't crash.
refactor object name validation logic in AbstractJdbcDatabase. java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2. java to streamline the code and improve readability
http : / / issues. apache. org / jira / browse / amq - 4798 - fix unit test failure
removed null checks and improved null handling in RequestHandlers. java to enhance code robustness and prevent potential NullPointerExceptions
replace'-'with '.'in log file name to ensure consistent formatting of log file names
added a PYTHONPATH environment variable and updated imports in ProjectBuildFileParser. java to improve the handling of Python module search paths
updated audio frame size validation and improved error handling in DirectAudioDevice and Toolkit classes to ensure that audio data is valid and provide clearer error reporting
added null check for enums in ElasticSearchStringLookupService to handle potential null values gracefully
improve log message when unexpected end of segment
added initialization of WebSocketPolicy to ensure the correct policy is used for WebSocket connections
updated static field initialization logic in Java2TypeScriptTranslator. java to simplify the logic for determining static fields in the scope
added a webroot argument to the StaticHandler initialization to allow dynamic configuration of the web root for the server context
( chore ) migrate unit test to junit 5 ( # 4892 )
[ netbeans - 4892 ] fix profiler not be able to find hotspot hotspot instance
replaced the ` printHeaderObject ` method with ` createHeader ` in multiple formatter classes to improve method naming consistency and clarity
consolidated import statements for trade - related classes and added a method to place stop orders to streamline import statements and prepare for future implementation of
reset the buffer in ReduceRecordProcessor. java to ensure data consistency during processing
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground is null
updated comparison condition in FloatingDecimal. java and added a new class ToString. java to improve logic correctness and demonstrate double string comparisons
updated property type check in PropertyDescriptor. java and added a new test class Test7189112. java to improve property type validation and
removed the maxVersionEncountered ( ) parameter from the getVersions method call to simplify version retrieval by eliminating unnecessary configuration
use https : / / and http : / / for origin header in nettyrequestfactory.
refactor task visibility and animation logic in RecentsView, TaskView, and TaskView classes to improve visual feedback during task overlays and enhance
added a field parameter to the checkState checks for multi - value, key - value, and value fields in ORCRecordReader. java to improve
added new MIME type headers for video formats in DemoUtil. java to enhance compatibility with new media formats in the demo
removed unnecessary import statements from PersistenceProvider. java to streamline the code and improve readability
hbase - 26011 log name for rpc invoker and rpc engine instead of rpc invoker and rpc engine ( # 3615 )
added diagnostic logging functionality to the TestSpecificCompiler class to track and log warnings based on specific Java file types
added a return statement to the session creation logging in WebSocketEndpoint. java and implemented a test for session closure in WebSocketIT. java to ensure
increase probability of dao state re - processing
updated references from " xwork - 2.1. 3 / EN " to " xwork - 2.1. dtd " in XmlConfigurationProvider. java
modified the stream stop logic in WebCamInputPanel. java to ensure proper handling of video playback states
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
updated import statements and refactored geotools import statements in GMLExamples. java to streamline dependencies and improve geotools
replace substream ( ) with skip ( ) in TargetType58. java to improve functionality by allowing skipping instead of substream
hhh - 10956 : add support for null part of a composite identifier.
renamed ` FindFullTextAction ` to ` DownloadFullTextAction ` and updated corresponding references to improve clarity and specificity regarding the functionality of
refactor URI registration logic to use a separate list for URI registration to improve code readability and maintainability by reducing duplication
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code clarity and maintainability
added a check for the OSDB hash before retrieving parameters and changed List to ArrayList < String > to enhance robustness by handling blank OSDB
added token transfer logic in RuntimeImpl and MUtil classes to ensure that only valid token IDs are transmitted to the contract
camel - ftp : fix camel - ftp to use current directory when delete file in stepwise mode
updated the method call to use getSearchBindPassword instead of getSearchBindDN to ensure correct mapping of search bind information
updated MapJoinOperator. java and HybridHashTableContainer. java to enhance join result validation and improve hybrid hash join performance
updated HTTPSPDYAsyncEndPoint constructor to include an AsyncEndPoint parameter to enhance endpoint functionality by providing relevant endpoint information
added the'id'extra to the intent across multiple adapters and fragments to ensure that the'id'is properly passed along with the intent
refactor disconnection logic in HttpURLConnection to use a new disconnectWeb method to improve code clarity and maintainability by encapsulating disconnection logic
replaced the integer ` _ numChildren ` with ` AtomicInteger ` for thread - safe incrementing to ensure that the number of children is thread - safe
updated import statements and variable declarations across multiple files to improve code clarity and maintain consistency in import statements
disable a test for a specific priority in ValueTypeTests to temporarily disable the test due to potential null pointer exceptions
resolve split - packages : move everything from kie - api under kie - api
entity should use not _ in predicate instead of! set. contains (... )
updated exception handling to use Exception instead of AccountNotFoundException and refactored account setting titles to improve error handling clarity and ensure proper display formatting
added null check for witnessService before validation to prevent potential NullPointerException when witnessService is not initialized
updated the way ` taggedCol ` is constructed in ` JoinDesc. java ` to use ` getExprString ( ) ` to improve clarity
added a check to ensure the Javadoc is not present before setting the JavaDoc to prevent potential NullPointerExceptions when the Javadoc is not present
renamed ` holderMethod ` to ` holderMetadata ` and updated related methods in ` CompiledICHolder. java ` to improve clarity and consistency
fix issue with animation in tab
[ hotfix ] [ table - common ] return an unregisteredmetricsgroup instead of unsupportedoperationexception
updated the calculation of the y variable in Polygon. java to ensure correct positioning by using the old x variable
fix test failure due to incompatible cache configuration
fix for bug # 2974855 : stringindexoutofboundsexception in inheritanceunsafegetresource
refactor ShadowCookieManager to improve code readability to enhance maintainability and facilitate future development
added configuration for dropping external tables in HiveConf. java and implemented authorization tests in TestStorageBasedMetastoreAuthorizationProviderWithACL. java to
added a semicolon to the conditional statement in Stage. java and corrected a calculation in ProgressBar. java to ensure proper syntax and prevent potential runtime errors
cache the byte order of the platform capability to improve performance by caching the byte order
updated PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider. timeout " to " testcontainers. windowsprovider. timeout
updated initWebViewLogin method to accept a base URL parameter and added conditional check for web login support to improve the initialization process for the login webview
corrected the spelling of " Parameter " in the exception message to ensure clarity and accuracy in error reporting
removed the ` @ RequestParam ( required = false ) ` annotation from ` AuditEventsMvcEndpoint ` and updated date format in ` AuditEventsMvc
change class name from ExponentialTimer to PreciseThroughputTimer across multiple files to clarify the purpose of the timer implementation
added soft body removal and deleting functionality in SoftBodyTest to ensure proper memory management and prevent memory leaks
changed interfaces to public visibility to allow access to these interfaces from outside the package
[ zeppelin - 451 ] fix log message in zeppelinhub web socket
add test to ensure that there be no redundundant namespace in jingle element.
added null check for redplasma in bcstatcollector, fix a crash when try to add a redplasma item
added HTTP / 2 header prefix handling in BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
replace usage of plot. getTrusted ( ) with plot. getTrusted ( ) and plot. getMembers ( ) with plot. getDenied
updated line width calculations in SimpleReport. java to ensure correct formatting of report strings for accurate reporting accuracy
removed the option to ignore symbol files in the JavapTask and added a new file T6863746. java to streamline
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and modified the visibility of the ` start ` method to clarify the purpose of the
added null checks for contract and contract address in ContractValidateException to ensure valid contract data is processed and improve error handling
make sure input3d be create only in applet, not applet
added @ Ignore annotation to KinesisIntegrationTests. java to temporarily disable tests during development
don't throw parserexception when parse scriptdata
added the ` @ Override ` annotation to the ` getRepositoryFactoryBeanClassName ` method to ensure proper implementation of the ` getRepositoryFactoryClassName ` method
changed return types of ` getExecutableCommand ` and ` getExecutableCommand ` methods from ` String ` to ` ImmutableList < String > ` across
removed redundant'this'assignments in IOSGLES20. java to streamline code for better readability and maintainability
deleted the UploadPathActivity. java file and refactored UploadPathActivity. java to streamline the file handling process by removing unused activity
updated return statements to check index options before calculating total and sum term frequency to ensure accurate term frequency calculation based on document frequency options
fix : implicit constructor be not set correctly in modelutils. getexplicitly ( ).
added a ` Database ` parameter to the ` populateValidateNullableIfNeeded ` and ` populateValidatePrimaryKeyIfNeeded ` methods to ensure method handles OracleDatabase
refactor Database class to improve code readability to enhance maintainability and reduce complexity
updated the SpringApplicationBuilder class to improve functionality to enhance application performance and maintainability
removed unnecessary whitespace in DefaultIndexingChain. java and PointInSetQuery. java to improve code readability and maintain consistency
removed substring operation for rawName in SchematicHandler. java to streamline code by eliminating unnecessary substring operations
[ java ] : correct the behaviour of collections. unmodifiablecollection in abstractcollectionassert.
changed the visibility of the Option enum from static to public to allow access to the Option enum from other classes
refactor dialog handling in Compose. java and ComposeActivity. java to improve user experience by allowing users to click on a twitlong
replaced the toggleKeepInSync ( ) method with a direct call to getFileOperationsHelper ( ) to streamline file synchronization logic by centralizing
replaced DatatypeConverter with Base64's getMimeDecoder in ImageUtil. java and added unit tests in ImageUtilTest. java to improve
added new files ` ControllerCounter. java ` and ` DBCallback. java ` to implement a counter for document analytics functionalities
added a final modifier to the parameter in the deleteTicket method to enforce immutability and improve code clarity
added a new file FlywayMigrationRunner. java that defines a main method for flyway migration to enable dynamic configuration of flyway data
replaced ` isEmpty ( ) ` calls with ` size = 0 ` in ` HashMap. java ` and created a new test class ` NotEmpty
update version number from 0.5. 0 to 0.4. 0 to reflect the new release
added nullability annotations to ` modify ` methods in ` CompressionCodec ` and ` ZlibCodec ` classes to enhance code robustness by
modified the main class return logic in LauncherHelper. java to handle null main values and added a new test case in TestHelper. java to
rename test classes for consistency to improve clarity and maintainability of test class names
fix issue with hotspot profilerruntime. getcompiledirsize ( ) return size instead of graph size.
[ bug - 66257 ] cellcopypolicy clone need to take into account the new clone contract
added a method to reset the icon load result and updated its usage in FloatingIconView to improve the functionality of resetting the icon load result
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager. java ` to
added orientation check and updated layout dimensions in IconRecentsView. java to ensure correct item decoration when in landscape orientation
deleted the AddAdapter. java file to remove unused or redundant code
added a check for empty constructorCodeList before proceeding to avoid potential NullPointerExceptions during execution
modified the formatting and structure of the code in OpTraitsRulesProcFactory. java to enhance code readability and maintainability
modified the TestLogWatcher class to improve message registration validation to ensure messages are only registered when a new watcher finally gets registered
added a print statement to Java2TypeScriptTranslator. java to enhance output formatting for TypeScript translation
updated SDK version from " 4799589 " to " 4913185 " to reflect the latest version release
added a check to set SPRING _ AOP _ PROXY _ TARGET _ CLASS to true in TraceEnvironmentPostProcessor. java to ensure that the proxy
removed the singletonLock variable and added classLoader check to the TypeCachingBytecodeGenerator to simplify the code by eliminating unnecessary configuration handling
update documentation for forward / response callback
added an ` appendToFile ` method to the ` writeFile ` method and modified related methods to include an optional ` append ` parameter to enhance file
updated Maven settings comparison and simplified repository retrieval logic to enhance clarity and efficiency in Maven repository handling
added a name parameter to the constructors of BuildRuleSourcePath and PathSourcePath classes and updated the PathSourcePath constructor to include a name parameter
updated OAuth20CallbackAuthorizeEndpointController to use the correct redirect URI comparison to improve accuracy in verifying client requests with the same redirect URI
replaced the use of ` values ( ). toArray ( EMPTY _ ANNOTATION _ ARRAY ) ` with ` AnnotationParser. toArray ( ) `
updated UserManagerCompatVL to replace getBadgedDrawableForUser and getBadgedLabelForUser with getBadgedIconForUser and getBad
updated the default value for line separator from " OS default " to " Line separator ( LF or CRLF ) for output. Defaults to OS default
changed implementation of configurationmanagerutils. isderivedclass to be more conservative.
sanitize input in base controller method ( thymeleaf - server - api. xml )
chore : update java and python dependency ( # 8 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include an ` IOException ` and utilize a ` Pair < ProjectWorkspace,
updated javadocs in CountersReader. java to improve code clarity and maintainability
updated the ` getContainerType ` method to return a specific container type and modified the ` logOpen ` method to accept a ` icon ` parameter
hbase - 15429 : add deprecation warn to byteBuffallocator
[ native ] add support for window function in native query
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types to improve the accuracy of obtaining parameter types in the executable
pdfbox - 4071 : fix typo find by codespell on fossies. org
latexrenderer : fix label positioning for label.
hbase - 25836 createtostoweredregionsplitpolicy should not set flushsize and maxsplitsize to 0
updated model loading logic in LauncherClings. java to ensure proper state management during model loading process
replaced instances of ` keys ` and ` updatesAt ` with ` keys ` and ` updates ` to standardize the management of key and updates
added a set of excludedDatasources in SpringDataSourceBeanPostProcessor to allow configuration of datasource exclusion behavior
added undo info storage in TableValuesView and simplified column deletion in TableValuesPanel to improve user experience by saving undo information during column transitions
[ hotfix ] [ kinesis ] fix error message in kinesourceproxy
refactor channel triggering logic in VelbusSensorHandler to use a loop for channel identification to improve responsiveness and maintainability of the code
disable unfavorable benchmarks by modifying the delayable logic in LocalCacheSelectorCode. java and related tests in BoundedLocalCacheTest
added a test for illegal database path in IoTDBSessionSimpleIT. java and implemented database creation and deletion logic in PartialPath. java
bugfix : resetnewfiles ( ) be call in GarbageCollector. java when a new file be create in the garbage collector
rename ` desiredWorkspaceLeftRightOriginalPx ` to ` desiredWorkspaceHorizontalMarginPx ` and update associated calculations accordingly to clarify the purpose of the
reorder variable declarations and improve readability in CharTokenizer. java to enhance code clarity and maintainability
chore : update gapic - generator - java version to 2.1. 0 ( # 60 )
cloudstack - 2120 : fix typo in xenserver _ network _ label constant
updated libgdx version from " 2.5. 5 " to " 2.5. 6 - SNAPSHOT " and " 2.5. 7 - SNAPSHOT " to ensure
removed the private Set < String > metricNames and its getter method from SolrCore to streamline the code by eliminating unused metrics management
replaced URI creation with Fs conversion in MavenManifestFactory. java to improve compatibility with file system operations
replaced the direct check for " mac " with a static final boolean variable " IS _ MAC " to improve code readability and maintainability by avoiding
rename JdbcAggregationRepository. java to improve clarity and consistency in naming conventions
added functionality to manage and copy slot lists in the Frame class to ensure that duplicate slot lists are not included in the slot list
initialize m _ predCount to - 1 in PredicatedNodeTest. java to reset the predicate count for testing purposes
added properties merging functionality in ConfigurationSpringInitializer to enable dynamic property merging based on configuration properties
updated the ` setupLogging ` method to accept an ` org. slf4j. Logger ` parameter and modified its logic to handle Liqu
replace HashMap with LinkedHashMap in multiple files to ensure insertion order for alias - to - work
added logic to retrieve the JDBC handler map if it exists to ensure proper handling of class types in type handling
added debug logging for item writing in Hibernate, JpaItemWriter, FlatFileItemWriter, and JmsItemWriter to improve transparency and traceability
refactor language range parsing to handle the last semicolon separately to improve handling of semicolon in language range parsing
updated Http2ServerResponseImpl and VertxHttp2Handler to execute code from an IO context to improve resource management and ensure proper context handling
fix xssfevaluationworkbook # gettable to cache the table
updated schema text detail check and simplified column identifier assignment in BaseSchemaTextFormatter. java to ensure correct representation of schema text details and improve code
replaced instances of " replicaSetMongo " with " MongoClient " in MongoNamespaceReplicaSetTests. java to ensure compatibility with the latest MongoDB driver
replaced HashSet with LinkedHashSet in SparkWork. java to maintain insertion order for the roots and leaves
replaced the declaration of ` tableScanCloneOpsForJoin ` and added a check for its cloned state to ensure the operator tree is properly cloned
added a null check for the client ID before setting headers in DynamicRegistrationClientConfigurationService. java and adjusted import statements in JsonFileRegisteredClient
clear the achievement list on destruction ( # 47981 )
initialized userName, productName, and connectionUrl to an empty string in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure default values are set
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in the QuickSharingPermissions
added functionality to read long buffers into ByteBuffersDataInput for better data handling to ensure proper reading of long buffers and handle potential buffer underflow
renamed variables st _ atime, st _ mtime, and st _ ctime to st _ atime _ sec, and st _ c
added a new file TestNoEagerReclaimOfHumongousRegions. java to test garbage collection behavior when humongous regions
added search visibility handling to the AllAppsContainerView based on user preferences to improve user experience by hiding the search bar when enabled
use routes ( ) instead of router ( ) in EnvRouterFeature. java to improve clarity and consistency in routing mechanism
added null checks in LineChartRenderer. java to prevent potential NullPointerExceptions during rendering
added a ReloadPageAction to manage the reloading of a page to enhance user interaction by allowing reloading of the displayed page
changed log level from info to warn in SQLManager. java to provide more granular logging for missing entries
updated the minimum Spring version from 3.2. 7. RELEASE to 3.2. 8. RELEASE to ensure compatibility with the latest security features and fixes
added a null check for currentClusterConfigForService in UpgradeHelper. java to ensure proper error handling when configuration type does not have a version
replaced Iterator with ServiceLoader for loading SPI extensions to simplify the code and improve service loading efficiency
added finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and its implementations in ` HiveViewImpl ` and ` JdbcConnector `
updated feature settings and hints initialization in DocumentFactory, XMLSAXHandler, and other handler classes to enhance security by disabling external DTD declarations and non
updated exit command handling in JdbStopThreadidTest. java to improve clarity and ensure correct output verification during application exit
added a getType method to ShadowContentResolver to return the type of a ContentProvider to ensure that the getType method defaults to null when the URI
fix classcastexception in expressionthreadpoolexecutor # removefuture
updated the default HTTP port property from " port " to " vertx. httpPort " to align the configuration with the new Vert. x
replaced ` addCaptureListener ` with ` addListener ` in ` buttonTable ` to streamline listener registration process
reduced the default batch size from 10 to 3 in NewSessionQueueOptions. java to optimize memory usage based on available processors
[ hotfix ] [ taskexecutor ] do not fail resourcemanagerconnection if connection fail in taskexecutor
fix compilation error in lambda rewriter
updated error message format in ProgressBar. java to include min and max parameters to improve clarity of error messages for better debugging
updated message handling to include the owner parameter in multiple classes to enhance state management by associating messages with the owner context
added new interface ` Cursor ` and ` Database `, along with abstract methods in the ` com. codename1. db ` package to establish
refactored multiple assertion classes in the codebase to improve code readability and maintainability
# 281 - enh : add setbeanid ( ) and getbeanid ( ) to ebeanserver
updated the transform method to use getAddToSiteDescriptorXsl ( ) instead of tools / xslt / add - menu - to - site
replaced the direct instantiation of ` requestMatchers ` with a list of ` matchers ` to enhance flexibility by allowing multiple ` RequestMatcher ` instances
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing functionality for instances of ContactResource
move getrequest ( ) to abstractactivereprocessor and move it to abstractactivereprocessor interface
updated log messages in FileManager. java for better clarity to improve error logging and provide more informative logging during saving operations
reset mockControl in TestJdbcDataSource and add tearDown method in TestIndexSearcher to ensure proper resource management and optimize operations after tests
updated test cases in SyntaxTests. java for cleaner syntax syntax to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes to improve code clarity and maintainability
tika - 1648 -- remove temporaryresources and replace with fallbackparser
don't try to load the minecraft. server. dedicated. server class if it's not available
removed unused parameters from AccountUtils and IndexedForest classes to improve code clarity and maintainability
changed the method parameter from " swap " to " rename " in TestCoreAdminApis. java and updated CoreApiMapping. RENAME
added a test case for handling jsx comments in JsLexerJsxTest. java and updated the lexer logic in the Parser. java to
added ScreenRecordRule import and annotation to AddWidgetTest. java to enable screen recording during test cases for better debugging
added a new test method to verify behavior when Buck configuration is missing to improve error reporting when Buck configuration is missing
added imports and implemented physical memory checks in TestStringBufferAndBuilderGrowth. java to ensure tests run with valid physical memory and validate resource
deprecate maptolocaldateconverter in favor of conversionservice
added a success flag initialized to true in HiveMetaStoreClient. java to ensure successful execution of the HiveMetaStoreClient
fix ( stu2 ) : fix inclusion in test
updated conditions to include " amp. twimg. com / v / " in tweet text checks to enhance compatibility with vine. co /
added @ Deprecated annotation to AreaReference. java to indicate that AreaReference is no longer recommended for use
updated ElementType and Target classes to improve code clarity and maintainability
updated assertions and refKind handling in MemberName. java to improve clarity and functionality of method reference operations
changed the default value of __ submitKeyUpdates from " false " to " true " and added synchronization to the runChange method to ensure key
modified mouse event check logic in EditNodeTextField. java to improve handling of mouse events in the user interface
camel : fix for http : / / code. google. com / p / mybatis / issues / detail? id = 436
updated multiple Java files for consistency and clarity to improve code maintainability and readability
refactor error handling in AgentRunnerTest. java for clarity to improve readability and maintainability of the code
added ` getDescription ( ) ` methods for various classes to provide descriptions about dependencies and Maven project properties to enhance clarity and consistency in the user interface
refactor face addition logic in ObjLoader. java to improve clarity and maintainability to enhance the logic for adding faces based on specific conditions
refactor ProcessEngine class to improve code readability to enhance maintainability and reduce complexity
rename variable'reentrantLock'to'lock'for consistency to improve code readability and maintainability
updated method signatures to include mavenPackaging parameter in PrintMavenAsCycloneDxBom. java to enhance functionality by allowing the specification
replace direct call to back ( ) with evt. getComponent ( ) to ensure the correct component is returned when navigating back
refactored certificate verification logic in SASLAuthentication. java to improve code readability and maintainability
updated method signatures in ObjectArraySubject, StandardSubjectBuilder, Truth, and ObjectArraySubject to change method signatures to extend @ Nullable Object
updated references to ` NutchConf ` in Fetcher, Generator, and Injector classes to use ` getConf ( ) ` instead of `
bug fix : when sheet be open, only the last sheet will be select
simonstewart : expose the sessionid on remotewebdriver. getsessionid for further use.
added null checks before setting time intervals in node and edge classes to avoid potential NullPointerExceptions when manipulating time intervals
updated log level command from INFO to non - INFO in MockServerContainer. java to eliminate logging verbosity for the server port
updated error logging to include the exception message to improve error reporting for better debugging
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` and updated related methods to improve clarity and consistency in handling crawl metadata
added JUnit @ Ignore annotation to ITSystemTest. java to temporarily disable tests during development
camel - 1648 : fix camel - scan - resource - resolver test on window
added an alternative method to retrieve an input stream from a specified path in ExpectNewDemo. java to enhance functionality by allowing users to specify an
logentryparsetester should call getfirstfilter ( ) instead of getfirstfilter ( ) to ensure all filter be initialize
added protection domain parameter to the BufferAlignmentAgent constructor to enhance security by incorporating protection domain in the constructor
added dispose ( ) method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable certain optimizations and operations on external tables to ensure that important optimizations are not applied to external tables
updated the description of the Authorization header in TokenKeyEndpointDocs. java to clarify that authorization requirement is required for public keys
removed the FLAG _ SHOW _ WALLPAPER flag from the Launcher class and changed the wallpaper offset from - 30 to 0 to
changed return value from false to true in SybaseASADatabase. java and added SQL query for sequence creation in SequenceSnapshotGenerator. java
nifi - 3589 : fixed putsql to not commit / rollback if autocommit = false
added file creation logic in SnapPuller and created slave XSL directories in TestReplicationHandler to ensure proper error handling when attempting to create
updated AppTarget initialization to use " launcher : launcher " instead of " id : launcher " to ensure correct identification of the launcher app
pas the output to framer. frame ( ), not the framer. frame ( ) method.
removed the clientRegistrationRepository parameter from several constructors in OAuth2 classes to simplify constructor signatures and improve code clarity
added an extended description for delimiter parameter in GenericUDFStringToMap. java to enhance clarity and usability of delimiter handling in the code
updated PlainFormatter to truncate instant strings and modified the formatInstance method to improve clarity and consistency in date formatting
increased the retry close timeout from 1000 ms to 3000 ms and refactored the close method to include a retry mechanism to improve resource management and
refactor ClassLoadingStrategyHelper to use private lookup directly instead of reflection to simplify code and improve error handling during class loading
updated Mockito library version to ensure compatibility with recent features and bug fixes
updated debug log message from " Closing proto event file " to " New proto event file " to improve clarity of log messages regarding event file support
added JUnit @ Ignore annotation to SamplingNamingTest. java to mark the test as ignored due to unintended behavior
updated error message to specify that rows and columns must be greater than zero to improve clarity and accuracy of error reporting
update wagon car to use getfeaturedefinition method to get the feature definition
added functionality to order BoundSheetRecords in XLS2CSVmra and BoundSheetRecord classes to enable sorting of BoundSheetRecords based on
updated calculations for average impulse and start thrust calculations to improve accuracy of impulse calculations by incorporating start and end thrust values
updated the constructor of InputSystemJme to include an inputManager parameter to enhance flexibility by allowing custom input management
added an assertion to ensure the offset is greater than zero before setting hashCode field offset to prevent potential division by zero errors during hashcode field assignment
block : remove deprecate method getmesh ( )
[ hotfix ] [ yarn ] fix typo in yarnapplicationmasterrunner and yarntaskmanagerrunner
added option to EMPTY _ WORD _ OPTIONS in Example. java and modified matchers based on it in LineReaderImpl. java to ensure that empty
don't send view _ replica _ update if write _ commit _ log be set to true
added functionality to retrieve and set the default button ID in CaptureActivity and PreferencesActivity to enhance user experience by allowing the button to open the web
added a test for batching in JoinedTableTest. java to verify the correct behavior of persistence with batch operations
updated error logging to differentiate between entityExistsException and EntityExistsException to improve error reporting when persisting items with duplicate timestamps
deprecated the ` -- format ` option in ` CucumberOptions ` and updated the corresponding plugin name in ` RuntimeOptionsFactory ` to encourage
removed the save ( ) method call from PMS. java to streamline the code by eliminating unnecessary functionality
simplified the condition for handling the back key event in ExtendedEditText. java to improve code readability and maintainability
modified the calculation of ` newCapacity ` in ` AbstractStringBuilder. java ` and added a new class ` Capacity. java ` with a test
replace goHome ( ) with onNoteSaved ( noteTmp ) to implement note saving functionality
added functionality to retrieve and store XWPFFootnotes in the XWPFDocument and related classes to enhance the handling of footnotes in
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent publication and updated getCredentialsWithSameUsernameAndPassword ( ) method to include null to
added a test method in BridjOGRDataStoreTest to verify the version of the GDAL library
added new file ` Lifecycle. java ` to handle and log network errors to facilitate the management and handling of network errors in the UI
add workaround for 404s in deviantart ripper
removed unused imports and added debug print statements in RocketFigure. java to clean up the code and improve logging clarity
update jogl. setsurfacescaled ( ) so that new window won't be scale down
hide the create option dialog when there's a pub server available
replaced the usage of PackedInts. FormatAndBits with BlockPackedWriter in DiskDocValuesConsumer. java to optimize data writing performance and reduce
( chore ) camel - core : use a comparator to sort the set of route by status
removed unused imports and streamlined data processing in GoAwayTest. java to streamline code and improve performance by reducing redundant operations
added PropertyUtilsBean and FluentPropertyBeanIntrospector, and implemented setter logic for maps in ReflectionUtils, along with creating a new FluentBean
updated BlockingHttpEndpoint and HttpEndpoint to use HttpResponse instead of ByteStreams and added a new HttpResponse class to improve handling of HTTP responses and encapsulate
( chore ) camel - core : fix unit test failure
updated print statement to use lastAppearedTaskTargetId instead of lastAppearedTaskTarget to improve clarity and accuracy of log output
add'writeimagescalinginformation'and'imagepdfconformance'setting to rtfdocumentsettings
modified the handling of paths to include a function name based on the executor parameter to improve clarity and functionality when processing aggregate functions
updated test classes to extend WithNestedTests instead of LuceneTestCase and added cleanup method to improve test structure and ensure proper cleanup after tests
update ` ` xcap enable'' field in presence page
ww - 3917 allows to specify if exception should be throw from servlet
added stopEditing methods to CodenameOneImplementation, TextArea, and AndroidImplementation classes to enable text editing functionality to run on the main form
nifi - 4968 : fix controlrate group attribute name be null. this close nifi - 4968
updated ` showDialog ` method to use a boolean parameter and added functionality to select presets based on user preferences to ensure that presets are always
add OnError handling in ChatAnnotation. java to log errors and ensure thread safety when sending messages
added a check to verify that the test is only run on Microsoft Windows to ensure compatibility with Microsoft Windows environments
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the SERIALIZABLE clause in TransactionIsolationLevel. java to support snapshot handling in
replaced the direct insertion of a newRecid with a loop that waits for closeInProgress and threadFailedException to ensure graceful handling of recids
use java. util. zip. zipfile instead of jrecompat
added null check for command class in RegisteredServiceSimpleFormController. java to ensure robust handling of null command classes
use ` ` ignore'' instead of ` ` best _ effort'' in disk failure policy
remove the ` public ` access modifier from rip and update methods in ` RipperInterface ` and ` RipStatusHandler ` to
filter logic for IP address validation to ensure only valid IP addresses are processed
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner. java ` to streamline code by eliminating unused methods
updated the ` computePartitionAssignment ` method to include a new ` ClusterDataCache ` parameter to ensure that the method operates with a fresh data
remove remnant of container that don't exist
simonstewart : make the defaultselenesecommand work on multi - line input
add retry to createglossarytests to increase test resilience
update references from ` allOfOfRef ` and ` oneOfRef ` to ` Components. COMPONENTS _ SCHEMAS _ REF `
updated the handling of EntityDeletedEvent to use JsonUtils for JSON serialization to improve data type consistency and enhance audit event data handling
added support line matching for GOP in FormatConfiguration. java and updated imports in DLNAMediaInfo. java and LibMediaInfoParser.
added a new file TestProfileReturnTypePrinting. java with performance testing methods to evaluate the return type printing performance of class members
add locking to prevent concurrent access to current _ version _ info
updated the MinMaxValueBasedSelectionOrderByCombineOperator to utilize the AcquireReleaseColumnsSegmentOperator for block processing to enhance the operator '
simonstewart : unignoring a couple of test that need to figure out why files be not show up
added return statements to the HasAndroidDeviceDetails class to enhance functionality by providing additional information on device density, bounds, and system bars
remove redundant call to projectstats. addbug ( bug )
use disabled shadow and foreground color in import panel text to improve visual consistency and visibility of text in the application
removed multiple duplicate @ Override annotations in CacheControlImpl. java to improve code clarity and maintainability
added a check for empty schedule dates and implemented a test for weekly actions without a week day to ensure that the scheduled action's schedule date
replaced manual button interaction with a menu item for single upload functionality to improve user experience by allowing single upload instead of a separate button
refactor multiple classes to improve code structure to enhance maintainability and readability of the codebase
added an import statement for InputStream and implemented loadMetaData method in MeXBTExchange and RippleExchange classes to enable loading of metadata from
added a custom serializer for Hadoop Writable types in CrawlDbReader to enable proper serialization of Writable objects for JSON output
removed unused imports and simplified the test class declaration to improve code clarity and reduce unnecessary dependencies
[ mdns ] add mdns discovery service to discovery. mdns
fix crash when click on a chat message in chat viewer
updated ForkJoinPool initialization in BPIndexReorderer. java to use a separate thread for thread creation to improve thread management and randomness
updated assertions in RoleCommandOrderTest to check for non - DATANODE and non - NAMENODE dependencies to ensure that the dependencies contain block
added methods ` restoreLocalInfoFromTableInfo ( ) ` and ` dedupWithTableInfo ( ) ` to ensure that local information is
standardize spacing in multiple files to improve code readability and maintain consistency
added transformations for logo rendering in BitmapFontTest. java to ensure proper rendering of the logo relative to the graphics's dimensions
[ hotfix ] [ table - planner - blink ] fix flaky test in stream physicalgroupwindowaggregaterule
remove pending echo check from endpointstate. broadcast broadcast event. patch by brandonwilliams, review by jbellis for cassandra -
fix host check for unreachable endpoint. patch by brandonwilliams, review by jbellis for cassandra - 1499
[ ca ] fix integral [ f ( x ^ 2 ), y ^ 2 ] in coordmultiplyreplacer
added content type setting logic in FormAuthenticator and SavedRequest classes to ensure correct content type is used when saving requests
changed static variables to final in XToolkit. java for better immutability to enhance code clarity and prevent potential null pointer exceptions
update javadoc in recommenderjob and abstractjob to be more accurate.
use read / write lock instead of synchronize block.
added a test for reading the identity provider in a different identity zone to ensure that the identity provider behaves correctly in different zones
updated job creation in ObjectTypeNode and added null check for timestamp in PointInTimeTrigger to enhance job scheduling accuracy and prevent potential NullPointerExceptions
removed unused import of Service in SendTicketGrantingTicketActionTests. java to clean up the code and improve readability
[ issue # 5898 ] rebalancer push : send heartbeat to all broker with lock ( # 5998 )
introduce a detached _ mmap _ dir _ mode property and implement it in PropServerConfiguration, CairoConfigurationWrapper, and DefaultCai
[ java ] re - enable the clustertest. shouldremainstabilitywhenthere be a slow follower.
fix default label for auth instead of authors3
updated dependencies in DBinaryDescription and DLibraryDescription to include ImplicitDepsInferringDescription to enhance dependency resolution for DLibraryDescriptionArg
close the oAuth client when the service be release, and add dispose method to clear the voices when the service be release
camel - 4900 : fixed file consume error when use dynamic done file
added a boolean parameter ` reopenReaders ` to ` SolrConfig ` and modified the conditional check in ` SolrCore ` to enable automatic reopen
include dialect in the map writer's dialect attribute
added currentDate and currentTimestamp methods to the Update class and updated tests for these methods to ensure correct retrieval of the current date and timestamp for
added a new method ` dup ` in ` Attr. java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactored Condition implementation in multiple test files to improve code clarity and reduce redundancy in Condition implementation
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector. java to improve query performance and accuracy
removed several unused imports related to Java's invoke package from ConcurrentClassLoadingTest. java to clean up the code and improve maintainability
updated the ` providesDirectNearbyUploadPreferences ` method to use the application's shared preferences instead of a context parameter to improve flexibility and
added support for sys dummy1 mode in the compatibility parser to enable compatibility checks for DB2 and PostgreSQL modes
refactor logging formatting and add conditional bean for sampler functionality to improve code readability and ensure sampler functionality is enabled based on configuration
added logic to track the last process ID in POIXMLProperties. java and updated tests in TestPOIXMLProperties. java to improve property
changed the check from NaN to isFinite in GeoTiffReader. java and added a test case for float negative infinity in GeoTiff
updated ` CliDriver. java ` to replace ` AbstractArgumentDelimiter ` with ` ArgumentCompletor ` and refactored process and file
change mockrestadapter to use schedulers instead of executor
refactor selectByRuleIdSet method to use a partitioning list to improve data handling and readability of the method
added a method to add exit descriptions for Throwable objects in ExitStatus to improve clarity and consistency in handling exceptions
added check for entity player in multiblock event handling to ensure proper identification of the player during multiblock actions
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` class to improve clarity by using a more descriptive name
updated the calculation of the range length in PlotConfiguration. java to ensure consistent range length calculation across the application
ios : use presentviewcontroller instead of show in defaultiosinput
replace params with nativeLinkable in PythonUtil. java to ensure the correct build target is used for linking functionality
rename parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in naming
added assertion to verify that the item's message is not null to ensure that the service's message is not null before proceeding
replaced potentiallyEscapeMapKey with potentiallyEscapeMapKey in MappingMongoConverter. java to ensure proper escaping of keys during data conversion
reformatted the Timber string concatenation in NearbyMapFragment. java to improve readability of the log output
( chore ) camel - base - engine : fix typo
updated ` FuzzyLikeThisQuery ` to use a ` Terms ` instance instead of ` MultiFields ` to improve query performance by avoiding repeated
refactor the ` writeApplicationsLinks ` method to accept a ` tabularList ` parameter to improve handling of tabular applications in the report
[ ds - 3892 ] change createnissingidentifiers to use identifierservicefactory rather than utils
updated the method call to use ` bw. getLength ( ) ` instead of ` bytes. length ` in ` VectorColumnAssignFactory. java
changed the method signature of getDisplayScript from abstract to non - abstract to provide a default implementation for the method
simonstewart : use a sequence for the key - to - press and key - to - release in the remote webdriver instead of
pdfbox - 4892 : set individual initial arraylist size, a suggest by valerybokov
added synchronization and a null check for the DBD connection in NetworkManagerListenerImpl. java to ensure proper handling of empty active interfaces and prevent
refactor the process of retrieving embed objects in HSSFWorkbook to improve code readability and maintainability by encapsulating related functionality
added import statement for Shdr class in ShaderNodeLoaderDelegate. java to utilize Shdr functionality in the shader node loading process
replaced the declaration of ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl. java ` to ensure consistency in handling
added a condition to check if the base font starts with " Symbol " to ensure correct handling of font symbols in the processing logic
replaced GlStateManager. popAttrib ( ) with GL11. glPopAttrib ( ) to ensure compatibility with newer OpenGL standards
updated LiveTvGuideActivity and ProgramListAdapter to use a new variable for the start date and adjusted related date handling to improve code clarity and
replaced ` getDeclaredMethod ` with ` Whitebox. getMethod ` in ` MockGateway. java ` and added new classes ` CommonParentTest `
added dlopen calls for " libfreetype. so " and " libfontmanager. so " libraries in JREUtils. java to properly
bug fix : use dummy argument for split command when exponent be - 1
loop optimization : addUnsigned range guard to count loop information
fix : check if a reference be an instance of type object before check if it's an instance of type object.
added a new class ` LocalizedString ` and refactored ` Attr ` and ` Resolve ` classes to utilize it to improve string representation and
add serverconfig. isdisableclasssearch ( ) to control or disable classpath search
changed AudioFormat arrays to final and improved memory handling in DataLine. java to enhance immutability and performance of audio formats
updated the default value of ` retries ` from 0 to 2 in ` Reference. java ` and corresponding tests in ` AnnotationPropertyValuesAdapterTest
added JSON parsing and initialization in TexturePacker to enable dynamic assignment of settings during texture packing
added view binding for uploaded images and updated upload progress text format to improve user experience by displaying images used directly in the UI
added mock and logger setups in TranslatingJavacPhaseTracerTest. java to enhance testing capabilities for annotation processing and execution
updated the ` CategoryInterface ` to include a new ` categoryinfo ` class and introduced a new ` CategoryInfo ` class to enhance the API
updated error messages for empty username and password in AuthzAuthenticationRequest. java to clarify that username and password cannot be empty for better user experience
updated accessibility timeout settings in TaskbarStashController. java to improve accessibility by adjusting the time window's visibility based on
added handling for the'^'symbol in the GenericSignatureParser to ensure that the correct symbol format is used in signature processing
updated access flag handling in ClassVisitorDriverFromElement and added tests for generic interface and enum stubs in StubJarTest to ensure proper functionality of
replaced direct assignment of'in'with'Objects. requireNonNull'and added null check for'i'in LowpassIntervalsSource.
added two test methods in MapInterfaceTest to verify entry iterator last hash and last next to ensure correct behavior of iterator methods in map interface
added a serialVersionUID field to the TreeMap class to ensure proper serialization and deserialization of TreeMap objects
updated createdAt from epoch milliseconds to epoch second in ImageData to ensure the image's createdAt accurately reflects the latest timestamp
grobcov : use f2m locus instead of grobcovx
delete private and public keys using encryptionUtils in AccountRemovalJob to ensure account data integrity by removing sensitive keys
replace hardcoded keep - alive with configurable keep - alive header value
fix postjoinmapoperation when map have no interceptor and lite member
danielwagnerhall for dialect that don't support javascript and css.
remove support for spill to disk when operator fusion codegen be not available
refactor environment variable retrieval to use Optional for better handling of environment variables to improve code robustness and maintainability by avoiding potential null pointer exceptions
ww - 4077 add a ConfigurationManager to the defaultactionmapper so it can be override by configurationmanager
added SerializableMode import to Mockito class to enable serialization support in Mockito tests
resolve npe in abstractbeandefinition # setfieldvalue when the field be declared non - nullable
updated SQL isolation clause handling in the parser and added test compatibility checks to improve query performance and support for different database modes
updated HiveConnection. java to use constants for transport and HTTP paths to improve code readability and maintainability by reducing repetitive configuration access
added isCacheable method to GlobalOrdinalsWithScoreQuery class to ensure that caching is disabled for LeafReaderContext
added a new file TestStrangeControl. java to implement a threading test for StrangeControl functionality
updated file extension from ". json " to ". jsfile " and ". jslib " in JsFile and JsLibrary classes to
added selection start and end variables to ShadowEditText. java to enable selection functionality for the EditText
[ grpc - generator ] close grpc server in order to support grpc v2
updated the ` use ` method in ` Jooby `, ` Router `, and ` JoobyTest ` classes to support a
added a null check for the fst variable in FreeTextSuggester. java to ensure that a valid fst is provided to prevent runtime errors
updated newline handling and improved error logging in T4975569 and T6729471 classes to enhance cross - platform compatibility and provide better
added abi writer class loading functionality in JavacInMemoryStep. java to enhance functionality to support custom ABI writer processing
suppress warning about boolean method be always inverted
add warn log if pullmessageserviceservice have be stop
updated the EnergyEndpointer class to improve functionality to enhance performance and maintainability of the code
refactor presets retrieval and column key handling in ComponentPresetChooserDialog. java to improve code clarity and ensure correct handling of displayed columns
remove unnecessary import of bufferedinputstream from BazaarRepository and CVSRepository to clean up the code and improve readability
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadataFactory
deleted the file Constants. java and DistanceUtils. java to the files are no longer needed for the project
refactor key splitting logic in RandomPartitioner to improve clarity and efficiency to enhance code readability and maintainability by using substring operations
fallback linker $ builder $ builder $ builder $ builder when building native - image.
added unit test for creating RoleBinding in RoleBindingTest. java and refactored the create method in RoleBindingOperationsImpl. java to
added logging statements to UaaSessionCookieConfig for better traceability to improve debugging and monitoring of session cookie configuration processes
update FILE _ NAME _ PREFIX calculation to use Calendar. DAY _ OF _ YEAR to ensure accurate comparison of file names based on the current date
fix typo :'o'should'v '
added error handling for invalid options in JavapTask and created a new class T8033711 to improve robustness of option processing and
replaced ` Collectors. toList ( ) ` calls with direct usage of ` toList ( ) ` across multiple files to simplify code and improve readability by
[ hotfix ] [ runtime ] change log level from error to warn in taskdriver
[ hotfix ] [ network ] add enableTieredStorage parameter to inputgatespecutils
remove SUCCESS _ CODE constant and replace it with a method isNotSuccessStatus to improve code readability and maintainability
added GL20 configuration to CubocDesktop and modified LwjglApplication initialization to enable GL20 support in the application
remove unnecessary check for void method return type in jimplebody. java
updated imports and refactored output macro expansion logic in OutputMacroExpander. java to improve code clarity and enhance rule handling functionality
rename ` assertNoJobsLeftEventually ` to ` assertNoLightJobsLeftEventually ` across multiple test files to clarify the purpose of the test
added a quote to the path condition in the duplicateWordsListTask condition to ensure proper handling of path separators in file paths
[ # 7701 ] instructorfeedbackresultspageuitest : improve performance ( # 7701 )
removed unnecessary whitespace in the code block to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke. java with a class and methods for testing object equality to demonstrate the effect of object equality in Java
replaced ` stream. skip ( ) ` with ` IOUtils. skip ( ) ` and added a conditional check for ` start ` to improve code
added support for informing the interceptor before starting the connection pool to improve connection management and error handling during the pool startup process
change catch block from Exception to Throwable in CoreContainer. java to handle a broader range of exceptions
updated the ` remove ` method in ` LruBlockCache ` to include return values and added test cases for current cache size to improve cache
removed unnecessary check for zero taskCount in RecentsView. java to simplify task count validation logic
added a instance configuration change listener in HelixBrokerStarter. java and increased the sleep duration in HelixServerStarter. java to improve broker
added new interface ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw `, and created ` CoinmateMetadataServiceRaw
guacamole - 147 : fix violation in defaultmodelvalidator. validate ( )
pdfbox - 4892 : don't overwrite exist object key, a suggest by valerybokov
[ beam - 8470 ] add ability to set display data in ptransform
replace the usage of Truth. THROW _ ASSERTION _ ERROR with assertThat for null checks to improve test readability and ensure assertions are correctly
disable RSA algorithm in the ClientJSSEServerJSSE class to ensure compatibility with modern security standards
updated check conditions for option data validation to ensure that the error message accurately reflects the expected number of choices for option types
update module - info. java files for mmm and ppp modules to ensure proper module dependencies and improve clarity
added error handling in the ensureConnection method to throw IOException to ensure proper error reporting and handle potential IO exceptions
corrected formatting in LauncherInstrumentation. java and LogEventChecker. java to improve code readability and maintain consistency
refactor exception handling and improve resource management in FileSinkOperator. java to enhance error logging and ensure proper resource closure
added diagnostic output to the task call in SchemaGenerator. java to enhance debugging capabilities by capturing detailed diagnostics
replace RuntimeException with OptiqSemanticException in SemanticAnalyzer. java to improve error handling by using a more optimized semantic exception
updated test cases in DataSourceMonitorTests. java to improve test coverage and ensure accuracy of datasource monitoring functionality
added a HashSet to track loaded resource paths before scanning methods to optimize performance by avoiding redundant scans for resource paths
replace ` o ` with ` orElse ( null ) ` in ` TestServiceUtil. java ` to ensure ` testInstance ` is set to
add handling for null object in RoutingInBoundHandler to improve robustness by ensuring a null response is returned when the object is null
add an optional natIp field to EkeyConfiguration and updated the warning message to include the IP address of the packet received
updated imports and replaced BaseAllocator with Netty allocator in multiple files to enhance memory management and improve code clarity
fix commitlog archiver error and fix commitlog archiver error
modify HttpParser state handling in HttpConnection. java and add a new test case in RFC2616BaseTest. java to ensure proper parsing
( chore ) camel - test - infra - multitimeout. java : fix concurrentmodificationexception in multitimeout
make leveledmanifest more robust against starved sstables
added a test annotation to the TestOrcTimezone1 class to enable unit testing for the OrcTimezone1 class
fix debug. parsemetricandtimersystemproperties ( string, set < string >, set < string > ).
added error handling for retrieving segment mapping in PinotSegmentRestletResource. java and simplified return statements in TraceContext. java to improve robust
modified the JTable default renderer logic to handle Object. class cases to ensure proper renderer retrieval for Object. class types
added a check for the existence of the shell file before adding it to the args to ensure that the command line argument is correctly passed to the
change subscription delete timeout from 10 to 1 second to allow more time for subscriptions to be deleted
updated test instance collection from List to Set in MockitoExtension. java to ensure predictable iteration order for test instances
refactor FieldMonitor class to improve code clarity to enhance maintainability and readability of the code
replace deleteFilesAfterClose ( ) with transactionDisable ( ) and fileMmapEnableIfSupported ( ) in BTreeMapTest. java to
modified the iterator initialization logic in SortedIntList. java and added a test for iterator allocation in SortedIntListTest. java to improve iterator
added unregistering of the object name in DefaultRemoteProxy and modified exception handling in JMXHelper to improve JMX management by properly unregistering the object
[ hotfix ] [ rocksdb ] set rocksdb default writebuffer size to 64mb
simplified the constructor call by removing unnecessary parameters to improve code readability and maintainability
replaced ` addArgument ( " message " ) ` with ` addArgumentNoEncoding ( " message " ) ` in ` FacebookShare. java
added JSON graph configuration in SamzaRunner. java to enable the running of the JSON graph in a portable pipeline
fixed issue with getposition ( ) and setpositional ( ) on audio gun.
updated LoopRotateBadNodeBudget. java file to improve performance and maintainability of the code
added a parameter ` TypeInformation <? > ` to the ` convertToMongoType ` method across multiple classes to enhance type safety and prevent potential
[ web ] fix imaginary unit display for complex link geos
simonstewart : fix / clarify the return value of sendkeytoactiveelement.
added scaling functionality for BufferedImage objects in AddAndScaleMultiImage. java to ensure valid BufferedImage dimensions and improve rendering performance
modified the extendWrapStore method to return the Engine instance to enhance functionality by ensuring the engine is properly wrapped
bugfix : shift state should be update when soft keyboard be open
removed the deprecated " DETECTED _ ACTIVITY " from multiple classes to maintain backward compatibility by removing unnecessary activity detection
updated the import statement for ExtensionConfig from org. eclipse. jetty. websocket. extensions to org. eclipse. jetty. websocket. protocol.
removed the import of Buildable from AaptPackageResources. java to streamline the code by eliminating unnecessary dependencies
added comments and unused information in multiple Java files to enhance code readability and prepare for future development
improve error message for invalid upgrade protocol status in WebSocketUpgradeHandler to provide clearer context on the status of the upgrade protocol
updated the assignment syntax for blockMode in P11Cipher. java to improve code readability and maintain consistency
updated Mockito library version to ensure compatibility with recent features and bug fixes
removed duplicate permission check for owner UUID assignment in Merge. java to streamline permission handling and improve code clarity
implemented the ` getConversationID ( ) ` method in ` HttpContentResponse `, ` HttpResponse `, and ` Request ` classes to mark
updated import statements and modified phoneset initialization in DummyFreeTTSVoice. java to use de. dfki. lt. mary.
replaced ` throws SemanticException ` with ` PlanUtils. stripQuotes ` in ` BaseSemanticAnalyzer `, ` PartitionSpec `, and `
refactor rendering handling in DLNAResource and Request classes to improve clarity and consistency in rendering updates
added new repositories to the DefaultPluginManager to ensure all resolution and remote artifacts are included in the plugin manager
camel - 7999 : fix the test error of cxfrsproducerfactoryacachetest
update doc for new PhysicsClient class
added JUnit Ignore annotation to SessionTest. java to temporarily disable tests that are frequent failures
added a new File object instantiation in the ZipFile class to enhance functionality by allowing file handling in the ZipFile
added a deprecated method ` handleAll ` to the ` TryType ` class to indicate that the method should no longer be used
smarthome - core : make uid non - final and avoid npe if uid be not initialize by default
added StackTraceUtils class and integrated it into GenericDAOImpl and ForumServiceImpl to enhance stack trace logging and improve testing capabilities
removed the @ Test annotation from FormLoginIntegrationTests. java to streamline test setup for better clarity and maintainability
mondrian : fix for mondrian - 1152, ` ` + fun +'' should be ` ` fun''
updated SQL query and variable names for clarity and consistency to improve readability and maintainability of the code
add ` ` jdk. internal. misc. innocuousthread'' to suppress warning
updated JsonTreeReader to handle additional JsonToken cases in JsonTreeReader. java and added a corresponding test in JsonElementReaderTest. java to
added support for extra arguments in TestCommand and integrated it into ExternalTestRunnerIntegrationTest to enhance command line argument handling for internal runner integration
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enhance functionality by allowing users to deduplicate Solr URLs and indexing
[ flink - 20748 ] [ table - planner ] fix ` ` streamsqlexample -- planner'' error
added a call to clearDatabase ( ) in MssqlIntegrationTest. java to ensure the database is reset before tests are executed
fixed progress bar not show when it should.
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added methods to write documents with both OutputStream and File output to ensure proper resource management and prevent potential memory leaks
added carriage return and carriage return characters to print statements in JavaBuild. java to ensure consistent formatting of output outputs
changed the type of the ` _ root ` field from ` Box ` to ` BlockBox ` and added getter methods for ` _ dotsPer
modified the ` apply ` method in ` CustomQueryFilterFactory ` to include a final modifier for the ` user ` parameter and added custom user search
camel - 6555 : fixed port issue with camel - netty and camel - netty4
added initialization check for ThingHandlerHelper in SnmpTargetHandler. java and refactored test methods in AbstractSnmpTargetHandlerTest and Snmp
add restriction to allow submit session in instructors that have submit privileges
added @ Incubating annotation to AvailableSettings. java to indicate that the class is outdated and should not be used
refactor path parsing logic in FileResolverImpl. java and add unit test for WarFileResolverTest. java to improve path handling and ensure
updated log message format for newFlushedSize to include docstores to enhance clarity of logged information for debugging purposes
make examplemod print the correct name of the dirt chunk, not only the block.
change the whitespace striping condition from stripWhitespaceX to stripWhitespaceY to ensure consistent whitespace handling across the image processing logic
increase the number of locks in FeedRefreshUpdater from threads to threads * 1000 to improve concurrency handling for better resource management
updated method parameters from ` false ` to ` exactSearch ` in ` TsFileSequenceReader. java ` and added a test for the
( chore ) camel - core - csv : remove unnecessary parameter dateformat
added preferred size adjustments for the FList pane in NavigationShareTab. java to improve user interface responsiveness by accommodating different list
replaced ` OffsetAttribute ` with ` State ` in the ` BeiderMorseFilter ` class and introduced a new test for custom attributes to
updated multiple classes related to Upnp audio handling and server functionality to improve audio processing reliability and maintainability
fix a ghost block when sponge be off
test : add static test for json. tojson ( )
updated MutableContextDataSupplier. java to improve data handling functionalities
changed the catch block from throwing a ` Exception ` to catching a ` Throwable ` and added a warning log for errors to improve error handling by
updated KubernetesMockServer to use HTTPS instead of a static true parameter to enhance security by allowing secure access to the Kubernetes instance
use the stamp of the unary intrinsics to compute the stamp of a call.
updated HTTP response status codes from METHOD _ NOT _ ALLOWED to OK _ 200 and modified response headers to include POST, OPTIONS, and BODY to
tika - 4071 -- fix locale - dependent format in tiff
replace throw statements with rsp. setException ( ) in ShowFileRequestHandler. java to improve error handling by returning early if the response is not found
added handling for InvocationTargetException in ReflectorClassWriter to improve error management by ensuring proper exception handling
added clamp method to Vector and Vector2 classes to enable dynamic clamping of values based on specified parameters
added OAuth2 - related imports and modified token handling logic in ChainedTokenGranter. java to enhance token processing by incorporating
updated the instanceof method in BC _ instanceof. java to improve type checking functionality
replaced the setSaveFlags method with a static final Logger instance to improve logging consistency and maintainability
updated UaaUrlUtilsTest class to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and ensure compatibility with JUnit
hhh - 147483 make nativequery return type a basic domain type
added caching mechanism for font anti - aliasing information using WeakHashMap to improve performance by avoiding redundant calculations for font anti - aliasing
fix : use intarraylist instead of intbigarray in typedset
simonstewart : fix a couple of unstable test in the ie driver
[ hotfix ] fix checkstyle violation in brokerrequestutils
refactor instance management in InjectorBuilderImpl to use a map for better ordering to improve efficiency and maintainability of the code
updated method calls to use ` buildTarget. getBasePath ( ) ` instead of ` cell. getBuckConfigView ( ParserConfig ).
added a null check for the input before parsing the result to avoid potential NullPointerExceptions when the input is null
fix jabber account keep - alive issue.
updated DEFAULT _ LOAD _ FACTOR from float to double to improve memory efficiency in IntHashSet
added ` getAllDataTypePhysicalVariations ` method to ` VectorizationContext ` and refactored batch type information handling in ` Vectorizer `
updated package names from ` com. google. zxing ` to ` com. google. zxing. client. j2se
modified the conditional logic for determining the vertical bar layout in OverviewState. java to ensure correct behavior when the overview action is enabled
added @ Entity annotation to BaseActivityEventEntity. java to specify that the entity is intended for persistence
added tracing sections to NavBarSwipeInteractionHandler, TouchInteractionService, and modified the SYSTEM _ TRACE constant in TraceHelper to enhance debugging capabilities
added a new file ` InvalidOptions. java ` to handle invalid options and verify the usage of javap commands to ensure that the javap
added logging for incompatible display dimensions in DisplayController to improve error handling and debugging for display state mismatches
refactor the code to encapsulate client ID and client secret retrieval within the OAuth20Utils class to improve code organization and maintainability by centralizing client
updated the ` _ unwrapServletException ` value from false to true in multiple classes to ensure proper handling of servlet exceptions in the error handler
set default status to ShortcutInfo. DEFAULT in PackageUpdatedTask to ensure proper handling of shortcut information during updates
camel - 4900 : fixed an issue where an unbounded size would be send to a seda endpoint with an empty queue.
fix for ticket : 174
added HttpClient configuration to ThirdEyeApplication. java to enhance the application's configuration options for HTTP client management
added a sort parameter to the JobInstanceFetchRequest class and updated JpaJobPersistenceImpl to use it to enable dynamic sorting of job instances based
updated the ` CryptoFacilitiesTradeService ` to allow dynamic currency pair handling when canceling orders to improve the flexibility of the order cancellation process by using the existing open orders to determine the appropriate currency pair
ggb - 2118 hide keyboard when click on algebra view
make memmove ( ) function non - static and use it in llvmheap
format adjustments in BindLdapAuthenticationHandler. java and ResolverTestConfig. java to improve code readability and maintain consistency in formatting
quick fix : tooltip ` ` block tool'' should not be show in toolbar
updated DefaultDateTypeAdapters and GsonBuilder to support a specific time style parameter to enhance flexibility in date formatting across different locales
updated playerSet format to include parentheses to improve clarity and consistency in player data representation
added a check for empty collections in the List class to ensure proper handling of empty collections
added error handling for CommandException in ParametricCallable. java to improve robustness by converting InvocationTargetException to WrappedCommandException
modified the ` getLikeExpression ` method to include a ` isLike ` parameter to support regular expression matching in the vectorization context
added start and stop methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to enhance lifecycle management for stream suppliers
added locale management in the ` runChild ` method of ` LuceneTestCase ` to ensure the correct default locale is used when running tests
fix license header in pgjdbc module
refactor context handler initialization logic into a separate method to improve code readability and ensure proper context handling
camel - 9341 fixed the issue that camel - 9341 don't start camel when it be already start
nifi - 2693 : fix unit test to use contains instead of substring
simplified the ` returnTypeSubstitutable ` and ` resultSubtypeSubstitutable ` methods by removing the ` warner ` parameter to streamline the method
( engine ) : add throttle type to the testexecutor ( # 1184 )
simplified pixel assignment in ColorBleedEffect. java and added equality check in SpriteBatch. java to improve code clarity and ensure correct color
refactor annotations in Annotation. java and AnnotatedElement. java to improve code clarity and maintainability
added a new interface ` Model ` in the ` Sheet ` class and updated ` Sheet ` and ` Workbook ` classes to implement it to
camel - 4206 : camel - core - optimize the filter pattern to reduce noise in the filter pattern
added a ` clearEntityManager ` flag to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to allow the entity manager to be
added null checks for ` info ` and ` intent ` in multiple classes to prevent potential null pointer exceptions during shortcut addition
set default value to true for coremapnodepatterntrigger
updated exchange specifications from " BTC - e " to " Wex " and changed the exchange name from " BTC - e " to
added null checks in OrcEncodedDataConsumer and improved null safety in EncodedTreeReaderFactory to enhance robustness by preventing NullPointerExceptions during
added null check for files in the SegmentInfos class and implemented a test case for opening the IndexReader after deleting to ensure robust error handling and
updated date pattern in HSearchSortHelperImpl. java and refactored FhirResourceDaoR4SearchWithElasticSearchIT
modify the calculation of the percent value in DeviceHandler. java to ensure that percentage values are either positive or greater than zero to improve accuracy of
change limit checks from " limit < 1 " to " limit < = 0 " in RangeInputStream and RangeReader classes to ensure that the method
camel - 16400 : camel - core - routes - configurer can speed up load route.
update lifecycling in preparation for move hl chunk to a live stream.
updated test classes to use LuceneTestCase instead of TestCase to improve test organization and consistency across the codebase
added a new StatefulMapper2 class and updated the test for it to verify the correct behavior of stateful mappers with partitioned streams
remove unneccesary null check in area. getfill ( ) and line. setbitmapshadershift ( )
removed dbExists ( ) method from Blockchain class and added dbExists ( ) test in BlockchainTest to simplify the blockchain initialization process
trim whitespace from the group in SQLPlusSupport. java to ensure consistent parsing of input without leading or trailing spaces
fix com. sun. net. http11ap regression test failure on osx.
ticket # 4810 : remove incorrect divider location calculation
add meter for controller health check ( # 5958 )
hide shared avatars in local file list to improve user experience
mebis : move scss resource to mebis - web bundle instead of mebis bundle
[ java ] use ` < = args. length ` instead of ` > = args. length `.
http : / / code. google. com / p / mybatis / issues / detail? id = 436 : loginterceptor
replaced CountDownLatch usage with assertWaitUntil in EventBusTracingTestBase. java to improve test reliability by ensuring finished spans are asserted correctly
replaced the static parse method with a getter method for locale in QueryParser to simplify locale handling and improve code clarity
fix duplicate entry in entrycustomizationdialog ( # 4185 )
allow betanodeconstraint to be add to ruleset ( # 1375 )
added a new class ` OcspUnauthorized ` and modified ` OCSPResponse ` to handle unauthorized cases to improve the handling of
added serverState variable to manage server state transitions to ensure proper failure handling during server state transitions
added a new constant for open connection count and implemented related methods in SourceCounter, SourceCounterMBean, and AvroSource classes to track and manage
make executionstrategy. fields ( list < field > ) public and add a builder method for building field definitions.
refactored the ` createDefaultJavaPackageFinder ` method to return a combined set of sourceRoots to improve code clarity and maintainability by encaps
replaced the Writer instantiation with PrintWriter in ScriptExecutable. java to improve performance and flexibility in writing to the output
[ hotfix ] [ test ] fix uuid mismatch in filesourcetextlinesitcase
added import for DataTable and implemented logic to convert DataTable to JRubyArgs to ensure compatibility with Cucumber's table structure
changed author visibility from GONE to VISIBLE and refactored image retrieval logic in ApacheHttpClientMediaWikiApi to improve UI responsiveness by ensuring
fix a todo in readsentimentdataset. tostring ( )
updated the return statement in FormulaParser to include a specific error message to improve error reporting for parsing errors
added methods for getting and setting the bind address in WebSocketClient. java to enhance WebSocket connection configuration and improve connection handling
[ java ] : don't delete archive and clustered medium driver on shutdown.
refactor WidgetGroup. java to simplify setting dimensions based on stage dimensions to improve code readability and maintainability by reducing redundancy
changed sessionFixationAttribute check from equals to Boolean. valueOf to ensure proper type conversion for sessionFixationAttribute validation
[ lab ] add digitalchannel. mode parameter to start one channel ( # 1751 )
danielwagnerhall for selenium - backed chrome
added HttpMethod and HTTPRoute attributes to ClientResponseWrapper and updated relevant classes accordingly to enhance tracing capabilities by allowing different HTTP method and route configurations
patch by jbellis ; review by jbellis for cassandra - 154
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes, and added a new test class for invalid render intent scenarios to improve
[ # 7701 ] feedback contribution question : show ` ` on'' instead of ` ` false''
added multiple calls to ` PublicMethed. waitProduceNextBlock ( blockingStubFull ) ` in ContractInternalTransaction003. java
remove java. io. serializable from kafka record
added PGConnection import and modified connection handling in PooledConnectionImpl. java ; added a test for PGConnection in BaseDataSourceTest. java
updated PropertyTable and CloseIgnoringInputStream files to improve code clarity and maintainability
updated logging messages to provide clearer information about the token encryption secret presence to improve logging clarity and provide more informative feedback on configuration issues
removed the @ Deprecated annotation from Hazelcast. java to indicate that the class is outdated and should no longer be used
added error handling and improved command reporting for topology updates to enhance stability and ensure proper command reporting during Kerberos operations
replaced deprecated ` writeStr ( name ) ` with ` writeExternString ( name ) ` and introduced a new ` readIterator ( Fast
fix : when assigncompletelylostpartitions fails, it should not throw exception.
added schema inclusion rule to ApiExample to enhance schema crawling by allowing public schema inclusion
updated the expected value in the assertion from 3. 0 to 7. 0 in StreamExpressionTest. java to ensure the test reflects the
fix and test for geometry with closed ring and single point
added methods to retrieve the base name and dimension count in ConstantPool to improve functionality for obtaining base name and dimension count
added setDebugEvaluationOutputForNextEval method to FormulaEvaluator, SheetUtil, XSSFFormulaEvaluator, and XSSFEvaluator classes to provide
test ( refactor ) : disable test only for java 8
removed unnecessary whitespace in LegacyMediaManager. java and modified condition in PlaybackController. java to improve code readability and ensure proper handling of live
added a return statement to the DynamicStyleBar class to prevent further processing in the dynamic style bar
added SLF4J logging for REPL DUMP settings in mmm Utils. java and ppp Utils. java to enhance debugging capabilities by
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future feature additions
updated conditional check to include boolean type in MethodEmitter. java to ensure correct promotement of strings to objects based on boolean type
rename llvmstackframenuller to stackframenuller.
updated multiple Java files with no functional changes to improve code clarity and maintainability
add a new test class for CaffeineCacheConfiguration to ensure proper initialization and transaction management of cache configurations
added a new method ` calculateBoundingBox ` to the ` Mesh ` class to calculate bounding boxes based on vertex attributes to improve the functionality of bounding
added a new TargetHashFunction enum and updated the hashing mechanism to support murmurhash3 functionality to provide a default option for computing target hashes
refactor DefaultConfigurationProperties to improve configuration handling to enhance maintainability and readability of the code
added high light color and alpha settings to ListViewMultiChartActivity and enhanced arrow drawing in BarChart to improve visual feedback and visual effects of the
added a key - value pair for tmpPg with its value in pgSgPathPlanMap to store the path plan associated with the
( chore ) camel - infinispan : fix intermittent test failure
added file existence check in MavenArtifactFetcher and refactored artifact fetching logic in MavenDependencyResolver to ensure artifact files are only removed when the
updated fragmentShader to include conditional GL _ ES versioning to ensure compatibility with newer OpenGL specifications
hbase - 15419 group api should use set instead of list ( addendum ) ( jesus camacho rodrig
added error handling for loading web XML configuration class and changed logging level from warn to debug to improve robustness of the processing logic and reduce log
updated the CustomAnalyzer and TestCustomAnalyzer classes to handle version - aware token filters to ensure compatibility with the latest Lucene versions and improve test coverage
added a test to verify that ` getPackageArchiveInfo ` reads values from the ` setPackageArchiveInfo ` method to ensure that the package archive
replaced direct method invocation with MethodUtil method calls and added package access checks to enhance method access safety and ensure proper package access validation
added new operation types and updated progress listener in GradleBuildService and Main classes to enhance task and project configuration handling
douniaberrada : remove unnecessary sync in androidwebdriver. java
make initializationfailtimeout > = 0 configurable in hikariprovider.
removed the ` timeOut ` parameter from the ` getResult ` method and added an ` error ` method to simplify method signature and provide a clearer
changed the visibility of the ` isNative ` field to transient and modified the ` addEntry ` method to set it to ` false ` to
format error message in CEntryPointCallStubMethod. java to improve clarity and consistency of error message formatting
rename ruleenablehandler to ruleenablementactionhandler ( # 4073 )
changed access modifiers of certain fields in multiple classes to enhance encapsulation and maintain coding standards
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager classes to improve clarity of logged messages during authentication processes
renamed variables and updated method calls in KafkaDynamicTableFactoryTest and UpsertKafkaDynamicTableFactoryTest to improve clarity by reflecting the
refactor repository ownership check logic in UsersPanel. java to improve error handling for invalid registrant repositories
added support for parsing font names with both ". TTC " and ". OTF " formats in SunFontManager. java to enhance
refactor variable naming and improve type comparison logic in AnnotationMatcher. java to enhance code readability and maintainability by standardizing variable naming
replace " OFF " with " SEVERE " in Grep. java to improve error reporting by providing a more specific exception type
added a check for debug log level before string concatenation in FaultTolerantChunkProcessor. java to improve logging performance by avoiding unnecessary string concatenation
fix arrayindexoutofboundsexception when search for test.
added methods to manage home intent behavior to improve user experience by allowing navigation to the default screen when the home intent is triggered
change the maximum bitrate from 110 to 30 to improve user experience by allowing more bitrates to be set
removed the ` getOptions ( ) ` method from ` CommandLineParser. java ` and simplified the iterating through options to streamline the code and improve
trim whitespace from the description return value to ensure consistent formatting of description
updated the output filename format in XOMParserTest. java to simplify the output path for better readability
remove process. pid ( ) from error logging to simplify error logging for better readability
added protected method getLoadedMusic ( ) and getLoadedSound ( ) to MusicLoader and SoundLoader classes to provide access to loaded music and
removed unused imports and simplified type assignment in OnBeanCondition. java to improve code clarity and maintainability
added ScreenRecordRule import and annotations in RequestPinItemTest. java to enable screen recording during test cases for debugging purposes
disable lr pause button selection in CPUFeature and MemoryFeature classes to improve user experience by preventing unintended pauses
replaced instances of ` accountsPrefCategory ` with a single ` mAccountsPrefCategory ` variable and refactored related preference creation to improve code
smack - 289 remove redundant'available'presence from output stream
updated StringBuilder initialization in ObjectInputStream to use a calculated initial capacity based on utflen to improve memory efficiency by pre - allocating StringBuilder when utf
disable statsd export by default in integration test
updated the InterruptedException class to improve interruption handling to enhance reliability and performance of interrupted operations
refactor ServiceTicket class to improve code structure to enhance maintainability and readability of the codebase
updated SSL connection handling in ConnectionCheckOperation. java to improve success detection for HTTPS connections
add miss type check for string in argumentarraymessagemapper. convert ( string, map )
ds - 1481 : fix ds - 1482 - incorrect location. parent in xml workflow
replaced ` sExemptOfPasscodeActivites. add ( AuthenticatorActivity ) ` with ` intent. setFlags ( FLAG _ ACT
refactor : remove @ Deprecated annotation in PatternParameterConfigurator. java to improve code clarity and maintainability
changed the return type of ` beginDraggingWidget ` method from void to boolean and added a null check for the drawable to improve the functionality
lucene - 4488 : fix javadoc warning ( # 4488 )
added null check for the root variable and collect all components to ensure robustness by preventing null pointer exceptions
write confusion matrix in testnenttagger when write it
bug 607193 - bug 60719 - bug 60719 - thread group should not continue continue to group if no result be
added unit tests for ` getConnectedDevices ` and ` removeDevice ` methods in ` ShadowBluetoothHeadsetTest ` to ensure correct behavior of
rename testAutowire to testAutowired in PropertyBindingSupportTest. java to clarify the purpose of the test method
updated the ` objectMethods ` set to include both " clone " and " finalize " methods and introduced a new constant for the finalize method to
add null check for the Counters object in IntegrationTestBigLinkedList. java to prevent null pointer exceptions during configuration verification
send ` ` not _ implementation'' error code when objectreference can not be find.
updated the service filter condition to use ` matches ` with ` serviceId ` to ensure that the registered service matches the provided service ID
added a null check for the activity before executing code to avoid potential NullPointerExceptions when accessing getActivity ( )
rename LOGGER to logger in multiple Java files to improve consistency and clarity in logging naming
added methods to set and get the string type in DatabaseAdaptor and JDBCSessionDataStore to enhance flexibility in handling string types and improve data type management
solr - 2387 : fix uima update test to use suggested category
refactor thread name handling in multiple classes to improve clarity and maintainability of thread name updates
refactor TaskletAdapter class to improve code readability and maintainability
drools - 22200 fix dmn evaluation of'will be null if negative '
updated texture map properties and added gl flush call in TextureMap. java to ensure proper rendering before texture map creation
added tooltip to the checkbox in ShowCGCP to enhance user experience by providing context - sensitive help
replaced ` getTypes ( ). add ( e ) ` with ` addType ( i ) ` in EnumFactory and InterfaceFactory, and added
add a mnemonic to the retarget action's text ( # 1589 )
ggb - 2118 don't use ` ` simple'' in spreadsheet command
changed the calculation method for BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) to improve accuracy of the calculation
bugfix : add ` ` context'' and ` ` date'' attribute to history entry
added a boolean parameter ` isAdmin ` to the ` createUser ` method and implemented the ` listUsers ` method to provide functionality for verifying
added null check for indexedWriteMethod and improved type checks in Introspector and PropertyDescriptor to ensure proper handling of method return types and prevent potential
updated logging format in DynatraceExporterV2. java and tests in DynatraceExporterV2Test. java to improve logging performance
renamed parameters in ` execute ` and ` run ` methods from ` runnable ` to ` task ` to improve clarity and consistency in naming conventions
add miss method setcapabilitiesfromspongebuilder in mixinitem to allow for deserialization of capability data.
[ hotfix ] fix parameter order in lifecycleutilstest
added contract creation validation for smart contracts and refactored contract creation logic to ensure proper contract creation and improve error handling for smart contracts
added package - info. java files for several packages under the ibm. dtfj library to improve package documentation and clarify module - level dependencies
refactor the add method in DocumentsWriterDeleteQueue to use a loop for atomic operations to improve performance by avoiding unnecessary synchronization when adding nodes
added duplicate handling for JavaFileObjects in JavadocTool. java and modified test method parameters in T7091528. java to improve robustness
changed the default value of STRIP _ IPV6 from " true " to " false " and updated related logic accordingly to ensure consistent behavior
added parameter support for adding user parameters in the LoginServerTokenEndpointFilter to enhance flexibility in user authentication by allowing multiple user parameters
added support for a language key " c " in the LanguageFactory to ensure compatibility with existing language standards
replaced usage of ` LinkedBlockingQueue ` and ` ThreadPoolExecutor ` with a new ` MoreExecutors ` class to improve code organization and separation of concerns
updated cache headers in FormAuthenticator and added assertions in ConstraintTest to improve response handling and ensure proper caching behavior
added exception message to the error log when an error occurs
updated HSSFTests to use TestAreaReference, TestCellReference, and TestSheetReferences instead of AllHSSFUtilTests and AllH
refactor FetchHTTP2Test, FetchHTTPTest, and FetchHTTPTestBase classes to improve code organization and maintainability
updated classDirectory assignment to handle null output to improve robustness by avoiding null pointer exceptions
added launch priority settings for resource accessors in Java2DRenderer to enhance resource management control during execution
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage. java to ensure the build does not fail on certain JDK versions due to ArrayIndexOutOfBounds
changed the visibility of the HotspotThreadMBean variable to final and refactored CPU time testing logic to improve thread safety and ensure CPU time
added a check for empty comments in the TabsAndIndentsVisitor class to ensure that comments are not included in the space processing
updated assertions in TestTriggerIntegration to validate rate expectations to ensure accuracy of rate comparisons and improve test reliability
case - insensitively compare change set paths to ensure consistent comparison by case insensitively
added a ` getString ` method to ` ShadowBundle ` class to provide a default value retrieval from the map
added locale - based formatting for date and time display in TweetActivity to ensure consistent date formatting based on user - defined locale settings
added a check for empty connections in the StandardProcessSession class to ensure that an empty list is returned when there are no active connections
refactored focus request logic into a separate method to improve code readability and maintainability
make sure classpath be not escape in file : / /
synchronize solve ( double [ ] [ ], coordinate matrix ) to avoid lock
added import statement for org. springframework. integration. Message in GenericMessage. java to utilize Message functionalities in the integration tests
refactored SQL query construction in PostgresConnector, TaskAttempt, and MapReduceJobHistoryUpdater classes to use a join method to improve code readability and
updated filtering logic in AquaFileChooserUI to ensure the file filter is selected if it does not already exist to improve user experience by preventing
refactored the synchronized block structure and improved exception handling in P2PTransportManager. java to enhance thread safety and provide clearer error logging
fix arrayptg. toformulastring to return true for boolean instead of false ( # 45380 )
test : migrate pgtokenizertest to junit 5 ( # 4519 )
updated Java2TypeScriptTranslator to handle nested variable types more effectively to improve type handling and ensure correct processing of final variables
modify SQL statement generation in AddAutoIncrementChange. java to ensure proper handling of sequence creation and default values
updated byte reading logic to handle negative values correctly to ensure proper byte handling and prevent potential data loss
updated assertions in ImageParserTest to check for the correct physical dimensions of metadata
updated method call from ` getParent ( ) ` to ` getParent ( ) ` to ensure proper retrieval of the parent component
reformatted import statements in multiple Java files for consistency to improve code readability and maintainability
replace engine _ finish ( ) with engine _ free ( ) and add call to engine _ init ( )
added iteration methods to multiple controllers and refactored event firing logic to improve event handling for iteration events
fix memory leak in streamingfileupload and FormDatacontentprocessor
added deleteLogs ( ) method to TestRecovery. java to ensure proper cleanup of log files during recovery
modified URL handling in BrowserActivity to launch a new activity if the URL contains " twitter : / / " to improve user experience by providing direct
[ hotfix ] [ test ] do not wait for host status update in deploymentgrouptest
changed the logResult parameter from false to true in VisibilityController. java to allow the log to reflect the current state of listing labels
increase the maximum number of auto - retries from 0 to 25 to improve reliability of RestTemplate retry handling
removed debug print statement from TranslatorSupportTest. java and added multiple @ Override annotations in StandardTypeMapperComponent. java to clean up test
added support for parsing fraction resources in the ResourceLoader and Converter classes to enhance data handling and support for fractions in the application
added a check to confirm the write operation in BasicFrame. java to ensure the file is not overwritten during write operations
added null assertions for tagGroupId and tagArtifactId in findNewerDependencyVersion method to ensure valid data is used to avoid potential NullPointerExceptions
hbase - 26167 ( addendum ) fix incorrect error message in namespace auditor
from default in doc ( # 1372 )
updated test cases in TestFuzzPreLoop. java to improve test reliability and performance
added a check to ensure f0 is non - negative to prevent negative f0 values in HTSVocoder
removed unnecessary error handling for retrieving catalog names in SchemaRetriever. java and added null check for fkColumn in TableRetriever. java to
remove clearencoders from inputbuffer and make it thread - safe
added functionality to check if an empty screen is allowed in the LawnchairPreferences to improve user experience by preventing unnecessary screen refreshes
added a warning log message indicating deprecation of cucumber - needle to inform users about the use of deprecated features
refactor theme handling in multiple classes to utilize the new theme approach to improve consistency and maintainability of the code
updated import statements and string concatenation in VerifyFast. java to improve readability and consistency of test failure messages
no effective change - remove db migration
modified property handling for PROTO and SETPROTOCHECK functions in ScriptObject. java to improve extensibility and maintainability of the code
updated the shuffle method to include a random ( ) parameter to enhance randomness in the shuffle functionality
added a condition to determine the display name based on the userName to improve user experience by displaying relevant information based on the provided userName
updated the path format in CookieRetrievingCookieGenerator to use a default if blank to improve robustness of cookie retrieval path handling
updated closing brace formatting in multiple Java files to improve code readability and maintain consistency
fix incorrect variable assignment in abstractcacheprovider
pdfbox - 4892 : fix regression, a suggest by valerybokov
added a condition to check for the focused widget in the UIDropdown class to ensure that the focused widget is properly validated before proceeding
fix typo in soundutil. playsoundatlocationExcept and soundpitchrange method
replaced the ` appleCxxPlatformFlavorDomain ` variable with a ` getAppleCxxPlatformFlavorDomain ( ) ` method in ` Apple
make ` ` show ololo FORMAT TabSeparatedWithNamesAndTypes'' a valid sql
rename method ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to clarify
EnglishPTBTreebankCorrector. java : remove obsolete comment to improve code clarity and maintainability
added a new file TestGetLoggerNPE. java to test logging behavior to ensure that logger functions correctly without NullPointerExceptions
added a data map and a method to retrieve it in PathSharingContext. java, and replaced the sharedMap declaration in ScriptedDec
move to truffle. espresso. runtime. espresso. interpreter. monitorenter ( ) and espresso. runtime.
added support for " NEXT VALUE FOR " pattern in NextValExpression to enhance the flexibility and usability of the next value expression
add more information in error message for unsupported feature in localizationsupport. java
refactored data removal logic in BoundedLocalCache and added a new test for clearing pending writes in BoundedLocalCacheTest to improve cache performance
added order direction parameter to QuoineExchange and updated QuoineNewMarginOrderRequest to support directional functionality for new margin order requests
added initialization method in PropertyDescriptor and created Test7192955 class for testing to ensure proper binding of properties in bean definitions and facil
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface to enhance display mode management by allowing
added null check for buttonsAwatingRelease in the parent form to ensure proper assignment of button values when parent form is null
set line cell's wrap to double. max _ value when there be no wrap.
fixed a typo in the XSLTErrorResources. java file to improve clarity and consistency in the error message
changed the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper
use String. format ( ) instead of getName ( ) + "'" + expectedText + "'" + actualText + " '
replaced the retrieval of the namespace context from XMLStreamReader to simplify the namespace retrieval process
added support for nested joins in multiple test classes to enable nested joins functionality based on configuration settings
don't allow domain admin to be create by regular user when create by regular user
added caching for JavacFileManager and updated the CompletionTaskProcesor constructor to include the cursor parameter to ensure compliance with Java's
added Hive configuration variables for METASTOREURIS, HIVE _ AUTHORIZATION _ MANAGER, and SQLStdHiveAuthorizerFactory
replaced the static import of ` Assert ` with the static import of ` MatcherAssert. assertThat ` in ` KuduIOIT. java
add nullability annotations to Handler parameters in MetadataRenderer, TextRenderer, and Util classes to improve code clarity and ensure consistent handling of output
fix ( ilp ) : fix ilp symbol file mapping ( # 1465839 )
removed print statements for termFilter and otherTermFilter to clean up the test output and improve readability
removed the Reflection class and simplified the TypeConverters import to streamline the codebase by eliminating unused components
refactored ` ThreadlessExecutor ` to use a single ` isFinished ` method instead of a ` sharedExecutor ` reference to improve clarity and
removed unnecessary try - catch block in DateTimeFormatter. java and added tests for null return in TestDateTimeParsing. java to improve error handling and
pdfbox - 4892 : rename compressionparameters. chunk _ length to chunk _ length _ kb
added a new case WILDCARD in Types. java and created a new class T7034495. java with generic methods to
replaced'do'with'while'in LotsOfEvents. java to improve code readability and maintainability
bug fix in transclusiondeciderule, see hop. hop. navlink
remove ` versionutils. getmicronautversion ( ) ` from ` micronaut - config. xml ` ( # 2
added imports and assertions for the Print _ Area functionality in TestBugs. java to verify the correct functionality of the Print _ Area functionality in
update MindIcon return logic to handle leading slashes correctly to ensure that the icon displays correctly when the name starts with a slash
updated onHomeIntent method to accept a boolean parameter to enable handling of the home intent based on its state
refactor dependency handling in CxxBuckConfig to use a boolean variable to improve code readability and maintainability by reducing repeated method calls
implemented the ` showDetails ` method across multiple activities and refactored the instantiation of ` FileDetailFragment ` to include an active tab parameter
changed function name from " $ apply " to " applyStatic " across multiple files to standardize function naming conventions for consistency
added capacity calculation and a method to randomize the state in MinimalEncoder. java to enhance randomnessness and correctness of tests in the encoder
updated newline characters and formatting in SourceBuilder. java to enhance clarity and consistency in output formatting
added call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter updates correctly after changes
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline the code by eliminating unused functionality
updated type checking logic in RemoveJavaDependenciesAdapter. java and added new test cases in Collections. java to ensure correct handling of method types and
( chore ) camel - aws2 - s3 : remove unused method in defaults3crtasyncclient
updated error message in doDudPasswordTest for bounds length mismatch to clarify the reason for corrupted stream errors
include the content in the assertion message when verifying the size of the collection
bugfix : do not generateoto if the graph have a null condition
ggb - 2118 fix for antialiasing, but don't do anything
refactor SQLXML class to improve code structure to enhance maintainability and readability of the code
added a limit parameter to the getOrderBook method in YoBit classes to allow users to specify a limit on the order book retrieval
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in ` StressHierarchyBaseClass. java ` and updated the
added StreamReadConstraints configuration to StandardDataFlow. java to ensure maximum string length for JSON serialization
updated retrieval of the enabled engines from a configuration to a default value to ensure consistent retrieval of the enabled engines and improve thread safety
renamed ` FullIterator ` to ` WheelIterator ` and updated formatting for consistency to improve code readability and maintainability
add error message when bug pattern can't be find
increase wait _ chunk _ is _ read _ in _ seconds for localchunkprovidertest
change the visibility of the menu item from true to false to disable the uncomplete checklists option for improved user experience
refactor DefaultResultSetHandler to resolve discriminated result maps and add a new Contract class to improve handling of result maps and facilitate the
added null check for defaultHome and updated receiver unregistration logic to improve robustness by handling potential null pointer exceptions
removed the import and annotation for VertxGen in PumpImpl. java to streamline the code by eliminating unused imports
removed unnecessary casting of ` ( ( FileDisplayActivity ) mContainerActivity ) ` before calling ` openFile ` and ` sendDownloadedFile `
trim whitespace from tokens in ConfigAttributeEditor and add a test for stripping trailing and leading spaces in ConfigAttributeEditorTests to ensure consistent attribute
updated ClassUsingAnotherAuxiliary and SelfClassWithAuxiliary files to improve class functionality and maintainability
svm : add substitution for lazy final reference to target _ java _ lang _ module
modify the case handling for'relKind'in DatabaseMetaData. java to set relKind to " SYSTEM TABLE " based on the string value
deprecate enterprised _ plan _ value in favor of leaveprised _ value in the agent api
updated the formatting of the RQST _ FIELD _ DESC declaration and exception declaration in ThriftHiveMetastore. java to improve code readability and
added a new module - info. java file for the core module to define module exports and requirements for better modularization
added logic to manage flushing and interested state in SslConnection. java to improve connection handling during encrypted output operations
updated Log4j2LogDelegateFactory to implement LogDelegateFactory and modified LoggerFactory's createDelegate method to enhance delegation handling and improve error
updated ExecutionEnvironment to conditionally check for client VM and improved error handling for server VMs to enhance test reliability and maintainability by ensuring
renamed ExecutableFindOperation, MongoOperations, ReactiveFindOperation, and ReactiveMongoOperations to improve clarity and consistency in naming conventions
replaced ` null ` with ` org. postgresql. ssl. LibPQFactory ` in ` PGProperty. java ` to ensure compatibility with the
disable the currently failing test until the test can be address
added sorting functionality for resource names using Collections. sort to improve resource ordering and maintain case insensitivity
added a new file ` OSvTerminal. java ` and modified ` TerminalFactory. java ` to register the OSV flavor to enhance terminal
added support for additional type suffixes in the ClassType class to ensure compatibility with additional type requirements
replace HashMap with TreeMap for combinedVectors and actualSuperVectors to ensure predictable iteration order for vector operations
added a condition to the loop condition in XPathEntityProcessor. java to ensure all elements of the list are processed
refactor WebSocketPolicy class to improve code readability and maintainability
changed access and access state permission flags from static to instance variables in ShadowTelephonyManager and ShadowWifiManager classes to improve flexibility and maintainability
allow specification of whether to perform template - based resolution or default - based resolution based on the context
fix classcastexception in asmutil # newinstance ( )
added a new ` LoggingAuditService ` class to log user authentication and authentication events to facilitate auditing and debugging of user authentication processes
[ tado ] fix npe in airconditioningzonesettingsbuilder if the temperature be null
don't include public method in bean definition inject processor for abstract class
camel - 7041 : allow to configure http proxy via system property.
updated the maximum encoding version from 1.1 to 1.2 to ensure compatibility with the latest features and bug fixes
added jdkSerialFilter method to System class to enhance performance monitoring capabilities
camel - 7999 : improve log message when camel pool size be set.
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in ` StaggeredWorkspaceAnim. java `, `
updated the ensureRealtimeClusterIsSetUp method to accept a TableConfig variable to ensure that the real - time cluster is correctly applied with environment
added error reporting functionality to ValidationReport and DisallowValidator classes to enhance error reporting and improve overall validation process
replaced inlineQsb assignment from displayOption with closestProfile'and introduced new constants for orientation changes to improve clarity and maintainability of the code
updated method signatures to include exception handling and URL decoding to improve robustness of URL handling and ensure proper charset handling
updated the @ Given annotation in TransformSteps. java to include parentheses around the'pass'string to improve the clarity of the annotation's
added null check for ` prop ` in ` retinaProp ` and modified fillRect method logic in ` PGraphicsJava2D ` to ensure
updated waitUntil calls to use a timeout variable instead of hardcoded values to improve flexibility and maintainability of timeout handling
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
add url back to environment for backward
[ test ] add system. gc ( ) call back to knowledgeagenttest. testbasics
updated javadocs in AdditionalAnswers, AnswerFunctionalInterfaces, and InvocationOnMock files to improve code clarity and maintainability
replaced ` createHardLink ` method with ` copyFile ` to improve file copying functionality to enhance error handling and facilitate the copying process of
renamed methods ` appendToDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in the description generation process
add more device check to pyfndmanager to ensure all input be in one device
added a type check for ` xml ` before visiting them in ` Autodetect. java ` to ensure that only XML documents are processed
updated test classes to use JUnit 4 annotations instead of inheritance from InstrumentationTestCase to improve compatibility with newer JUnit features and enhance test reliability
added new rules for GasLimitRule and ParentGasLimitRule in CommonConfig. java to enhance rule management by including depth and parent
changed the access modifier of the setupData method from public to private and added a static block in BaseAssumptionsRunnerTest. java to
renamed the ` autocommit ` variable to ` runInTransaction ` in multiple files to clarify the purpose of the variable under which transaction mode is executing
[ 3.0 - triple ] fix npe in triermestream. close ( ) ( # 3605 )
[ hotfix ] fix break link in restart strategy example
added a new test method ` testIssue154 ` to ` SelectTest. java ` to verify parsing and deparsing of SQL queries involving
refactor Common class to improve code organization to enhance maintainability and readability of the code
refactor app launching process to use a context layer for better resource management to improve reliability and maintainability of the app launch process
[ hotfix ] [ test ] fix typo in streamexecdeduplicate
added a warning log level when sending kafka messages to a specific topic to improve error handling and provide better debugging information
dataes - elasticsearch : add immutability to simpleelasticsearchpersistentproperty.
changed the return type of the ` setCoord ` method in ` GeoCoordSys1D ` and ` GeoSegment3D ` classes to
added gesture scrolling functionality and log messages in AskGestureEventsListener. java to enhance user experience by tracking scroll positions and interactions
mahout - 1041 - fix compareto in nsgramestimator. compareto ( key, value )
updated import statements to use the io. cucumber. core. runtime package to ensure compatibility with the latest Cucumber library structure
updated method calls in StatsLogCompatManager to retrieve folder icon properties to enhance accuracy of folder icon representation
updated null check for getServerSlogan ( ) to getServerName ( ) in ThemeUtils. java to ensure proper handling of server name instead
8250418 : ir : : ternary : ternary : : ternary : : ternary : : ternary : : ternary : : ternary, ib
add handler to selection highlighter so that it won't interfere with other type of view
added a new StringResultConverter class to handle string conversion from native pointers to facilitate conversion between Pointer and Charset for better string handling
replace ` @ DisabledIfSystemProperty ` with ` @ Disabled ` in multiple test files to clarify the reason for disabling tests due to
removed a condition from the WaitForSingleObject condition in JansiWinSysTerminal. java to simplify the condition for waiting on the console
updated the ` setInBuffer ` method to use ` FloatBuffer ` and added null checks for ` buffer ` to ensure proper buffer management and prevent
updated the assertion to compare string with File. separator in TestSolrDiscoveryProperties. java to ensure compatibility with different operating systems in path handling
updated OS detection logic in AutoUpdaterServerProperties. java to support macOS environments to ensure compatibility with macOS users
changed the lockFile parameter from ` lockFile ` to ` lockName ` in ` Lock ` class to allow more descriptive identification of
updated variable name from " android. widget. TextView " to " apps _ view " and adjusted visibility bounds accordingly to improve clarity and consistency in
updated invocation type references from Invocable to ClientDatagramEndPoint across multiple files to improve clarity and consistency in invocation handling
updated the SQL order clause in the GET _ STEP _ EXECUTIONS string to improve the order of retrieved steps
updated button handling logic in LwjglInput. java to ignore unknown buttons to improve button responsiveness by ignoring unknown buttons
added authentication flow for the claimed tasks workflow in TaskRestRepositoriesIT. java to ensure proper handling of approved tasks and rejectptions in the
replaced transient Logger import with a static final logger in multiple classes to enhance logging consistency and improve code readability
updated expiration time calculation and modified test method visibility in SsoAccessTokenProvider and SsoAccessTokenProviderTest to simplify expiration logic and enhance test coverage
[ geos - 8470 ] macos build must not run test on window
feat ( freezev2 ) : upgrade gapic - generator - java to 2.7. 0 and update gmt version to 2.16.
rearranged conditional checks for default close operation in JFrame. java to improve code readability and maintainability
updated LibraryScanner. java to include a null check for the connection before executing the ANALYZE SAMPLE _ SIZE query to enhance stability by
replaced the overridden ` getSolrMetricsContext ( ) ` method with a call to ` super. initializeMetrics ( parentContext, scope )
refactor output formatting for file and folder counts in OCFileListFragment. java to improve readability and maintainability of the code
return an iterable < keypair > instead of an array in keypairprovider. loadkeys ( )
[ java ] fix typo in sourceversion. java
added a new test class ` ThreadFactoryTest ` to validate thread creation and error handling to ensure proper functionality and reliability of thread creation and
updated getLockPeriod method to include dynamic store support for lock period calculations to ensure proper lock period handling based on dynamic properties configuration
added initialization of the ticket model in EditTicketPage. java to ensure the ticket model is properly initialized before use
changed the default value of " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature flag for dimiss apps
updated constructors in multiple assertion classes to include Class < S > for type safety to ensure proper type casting for various assertion types
added a quote menu item and updated menu visibility logic in TweetActivity. java to enhance user experience by allowing quote actions to open the Com
remove extra line of commented - out code
renamed the ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and updated related method names and logic accordingly to improve clarity and
added a conditional check for ` result ` before offering and closing failure in ` ServerHTTP2StreamEndPoint. java ` to ensure failure is only
updated German XSLT error message from " Stiller Modus " to " Silent - Modus " and French error message from "
added @ ThreadSafe annotation to CheckpointsCleaner. java to ensure thread safety for method execution
switch to observable. onsubscribe instead of observable. onsubscribe ( rx. x )
added a try - catch block around the creation of the components. yml file to ensure proper exception handling during file creation
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration to enable unique column name usage in Hive resultset
ary : fix problem with incorrect input text selection in mary gui
added session validity check to throw an exception if the session is not valid to improve error handling by ensuring the session is not valid
deleted the ExceptionHelper. java file to remove unused code to streamline the codebase
reduce key pair generation size to allow for a wider range of entropy
added a codec setting in TestBlockPostingsFormat3. java to ensure compatibility with Lucene41 postings format
[ hotfix ] [ checkpointing ] log empty checkpointrange header
added RSA / ECB / OAEPPadding algorithm parameter handling in OperatorHelper. java to ensure compatibility with RSA / ECB / O
replace ` DARWIN _ AARCH64 ` with ` MACOS _ AARCH64 ` across multiple files to ensure compatibility with
updated exception handling in DebugSourcesResolver. java to include SecurityException during source resolution to improve error logging for security issues during source construction
simplified the return statement in AbstractTest. java to improve code readability and maintainability
updated file upload error handling to include exception details and modified file deletion logic to enhance error reporting and improve file management reliability
bugfix : use bufferutils. newunsafebuffer ( ) instead of bufferutils. newunsafebuffer ( )
changed the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable pipeline downloader functionality in the FastSyncChainDownloader
updated DST _ OFFSET setting in SimpleDateFormat and added a new test class Bug7130335 to ensure accurate timezone handling and validate date formatting
replaced references to ` mRollo. mState ` with a local variable ` iconCount ` in ` AllAppsView. java ` to improve
bug 13975 : return router instead of error code when vm be not find
updated StringBuffer implementation to improve performance and efficiency of string manipulation
[ bugfix ] fix rule uid not be set in ruleresource.
added null check before unsubscribing in registryprotocol. unsubscribe ( subscribeurl, listener )
added a pretty print property to the JoltTransformJSON class to enable formatting of JSON output for the Jolt transform
initialize access table field to be public in instrumentation.
update error messages to include " No resources were found " in DataSourceInitializer and DataSourceInitializerInvokerTests to improve clarity in error reporting when resources are
move dorun ( ) to it's own method to allow override method.
updated multiple Java files to reflect changes in method implementations to improve code clarity and maintainability
updated method signatures to include ` effectiveClusterVersion ` and ` isUpgradeSuspended ` to enhance functionality by allowing the caller to know if the
simonstewart : after a code grant, the code be copyright the sfc and the selenium committers. start to update the
removed the declaration of the final List of fields from the writer to streamline the code by eliminating unused variable
added a constructor to OAuthProperties that initializes encryption and signing keys to enhance encryption and signing capabilities in the OAuthProperties class
replaced calls to ` getColumnFamilies ( ). length ` with ` getColumnFamilyCount ( ) ` across multiple files to improve clarity and consistency
replaced the ` AllowedResourceAliasChecker ` instantiation with a method call to ` handler. addAliasCheck ` to simplify alias checking logic for
updated multiple Java files related to ObjectInputStream, ObjectOutputStream, and Serializable to improve code clarity and maintainability
added a reset method to the Cluster interface and implemented it in ClusteredServiceAgent to enable resetting of the idle strategy for better resource management
updated the currentChunkID variable assignment in ChunkedWriter. java to ensure proper tracking of the current chunk ID during writing
added a new abstract class AbstractJobExecutor for job execution handling to provide a base class for job execution management
update replay variable assignment and break logic in RecoveryStrategy. java to improve flow control during replay operations
changed variable and method names from'hugeStaticBase'to'staticBase'in HugeResourceTest. java to improve code clarity and
added service ID retrieval logic in AbstractConsulClient to ensure proper handling of service IDs based on discovery settings
replaced the use of ` Math. random ( ) ` with ` SecureRandom ( ). nextInt ( ) ` in hashSalt calls to improve
print trace to stdout if permanentbailouts be detect during parser
removed duplicate calculations for currentStart and baselineStart to streamline the process by eliminating redundancy
added behavior for abstract methods in CallsRealMethods and created stubbing tests in CreatingMocksWithConstructorTest to ensure correct behavior of abstract methods
refactor checkPackageAccess method to include security manager for class names to enhance security by ensuring only valid classes are accessible
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added setup and teardown methods to improve test structure and ensure proper
updated variable names and improved font handling in ContributionListPanel. java to enhance code clarity and ensure proper font rendering for contributions
added a new request constant REQUEST _ HAS _ TIS and updated related handlers to use this constant to improve code clarity and maintainability by central
added a call to ` Mutex. EVENT. writeAccess ( Mutex. Action < Void > ) ` in ` ConnectAction. java
replaced ` ImmutableMap < String, ShowOptions > ` with ` ImmutableMap < BuildTarget, ShowOptions > ` in ` TargetsCommand. java `
added final class declarations and methods in various Java files to enforce immutability and clarify class immutability
added handling for home and end operations in the Less class to improve navigation between home and end modes for better user experience
removed synchronization block when retrieving connected plots to simplify the loop structure for cleaner code
replaced conditional check for " com. estrongs. android. pop " and added intent creation for " com. metago. astro
remove the public modifier from the constructor of the Roster class to enforce encapsulation within the Roster class
added basic constraints to the certificate generation to enhance security by enabling basic authentication
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest. java ` to address a bug related to incorrect transform
remove redundant calls to field. multiValued ( ) in TrieDateField. java and TrieField. java to streamline code by
added TaskbarStateHandler to BaseQuickstepLauncher and removed TaskbarStateHandler class to simplify the codebase by eliminating unused components
added a new file ArrayLength. java to test the behavior of reflection methods on array types to ensure that the methods on array types correctly throw
wait for process # destroyforcibly ( ) to finish test
change to use @ postconstruct instead of @ singleton
fix assertion in safepoint to allow 1 instead of 0
replaced " [ C ] " with " Ljava / lang / String ; " and changed the type of threadNameField from charArray to string
update DEFAULT _ RAND _ SEED from System. currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder. java and
fix for stroke from pgraphicsjava2d on android
refactor ` expandDynamicStar ` method to ` expandDynamicStar ` in ` SqlValidatorImpl. java ` to improve code clarity and maintainability
added a method to find interesting child elements in the Comment2000 class to improve the handling of nested Comment2000 data
added import statement for PMS and set the status code to a warning icon to enhance user experience by providing a more informative status message
refactor modifier retrieval to use ` getModifiersEx ( ) ` and ` getModifiersEx ( ) ` for improved accuracy to enhance code clarity and maintainability
amd64countLeadingZerosNode. java and amd64countTrailingZerosNode. java : change cycle count from 6 to 3
camel - aws2 - asm : fix npe when disposition notification be not set
refactor Locale class to improve code readability to enhance maintainability and reduce technical debt
added a button to clear log messages and implemented this method in ErrorConsoleViewModel and LogMessages to improve user experience by allowing users to clear log
set mRecentsAnimationController to null in RecentsView. java to ensure proper initialization of animation controller
updated method signatures and variable types in multiple classes to improve consistency and functionality to enhance code readability and maintainability by using a specific locale holder
updated test classes to implement connection pooling and increase execution count to improve test reliability and resource management
simonstewart : add opera driver to defaultdriversessions for opera
add error dialog when file can not be download
added new Lifx product models " LIFX ", " LIFX Beam ", " LIFX Color ", and " LI
added asynchronous handling for shard creation in the OverseerCollectionProcessor and CollectionsHandler classes to enhance asynchronous operations and improve test coverage
updated primary key name generation logic in PostgresDatabase and PostgresDatabaseTest to ensure primary name consistency and correctness across different database implementations
updated LogPage and SummaryPage to use a default repository reference when no refid is specified to ensure that the log panel displays the correct repository head
skeleton inter bone wire : fix typo in skeletoninterbonewire.
added a ` browserDestroy ` method to the ` AndroidImplementation ` class to properly destroy the browser component to ensure proper resource management and prevent memory
added a waitForActiveCollection call in AutoScalingHandlerTest. java to ensure the test environment is active before proceeding with tests
updated loop structure and color attribute handling in ScreenTerminal. java and added imports in Tuxmuxuxmuxer. java to improve
updated the conditional check for the current controller state in SoftResetAction. java to include additional state conditions for better state management
disable on - disc stream cache by default for texture pack reloading.
added logic to retrieve DNA resources based on the object ID in Request. java and RequestV2. java to ensure proper handling of media
cs - 15475 : fix npe in networkofferingvo. ispersistent ( ) method
replaced the temporary file deletion method with a custom close method to ensure proper resource cleanup and avoid potential memory leaks
added error handling for handling 403 responses in StandardGitHubRepository to improve robustness by logging detailed HTTP status codes for debugging purposes
added a method to retrieve the original MessageFactory in MessageFactory2Adapter and updated tests accordingly to ensure correct handling of MessageFactory2Adapters
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest. java, DurationTest. java, and SizeTest.
updated regex pattern from " [ 0 - 9 ] { 1, 2 } " to " [ 0 - 9 ] { 1, 3 }
added delay settings for tooltips in ExtractionModelFrame. java to improve user experience by providing real - time tooltips
refactor ProjectCommand to include passedInTargetsSet in method signatures to improve code clarity and maintainability by reducing redundancy
added timezone setting and assertion in TimeTest. java to ensure correct formatting of time values
updated MediaSessionConnector. java file to improve functionality and maintainability of the code
use endpoint handler. getSslimplementation ( ). getsslsupport ( ) in http11nioprocessor.
updated the displayed altitude display string in GpsLoggingService. java to ensure accurate information is displayed for better user experience
added support for enabling futures in BinanceExchange and BinanceAccountService classes to ensure that future functionalities are only enabled when futures are enabled
admin : accountmanagement * change to use accounttable instead of individual list
added a queue acceptance setting for worker threads in ThriftHttpCLIService to optimize resource usage by allowing more worker threads
replaced the use of getClass ( ) with a constant PROPERTY _ DISABLE _ WATCHER in PathWatcherService. java to improve code readability
added a check for " ssl " scheme in JmsFactory to ensure proper handling of SSL connections
replace parseError with validationError in DrillSqlWorker. java and update tests in TestWindowFunctions. java to improve error handling by accurately
changed assertion to allow duration calculation in GCInspector. java to ensure that duration may be zero for fast collection operations
fix npe when retrieve javadoc on method with line comment.
added a method to check for macOS and modified memory reading behavior based on the operating system to ensure compatibility and correct handling of memory access on macOS to avoid
added calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner. java ` to ensure proper handling of
changed access modifier of procId from private to protected and improved string concatenation syntax in HBaseAdmin. java to enhance visibility of the procId variable
[ cxf ] use reflectionutil. invoke ( ) to invoke cxf service factory method
updated YamlChangeLogSerializer to serialize a list of change sets using a map to improve the structure and organization of change set data in the output
replaced ` println ( ) ` with ` print ('\ n') ` and changed ` out. println ( ) ` to ` out
added functionality for regenerating roads in DebugRoadRegen. java and refactored schematic handling in SchematicHandler
replaced ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragment. java ` to ensure proper context usage for UI components
replaced @ GeneratedValue ( strategy = GenerationType. AUTO ) with @ GenericGenerator ( name = " native ", generator = " native " )
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature by eliminating unnecessary country parameter
updated the write method in BZip2Codec and modified ByteBuffer initialization in TestBZip2Codec to improve data handling and ensure proper allocation of
move logger initialization to appw, so that it can be reuse
added a constant VALUE _ TYPE _ EMPTY and modified the create method in Value. java to improve code clarity and maintainability by centralizing type
replace'= ='with '. equals ( )'in groupmanager. java
refactor methods in Liquibase and LiquibaseDropAll classes to improve code clarity and maintainability
refactored the SimplexNoise class to improve code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating ` TargetGraph ` instances to facilitate the creation of
move getminrowcompactedsize ( ) and getmaxrowcompactedsize ( ) into nodecmd
added ArtifactVersionAdapterFactory to MetadataCollection and updated Gson initialization to support serialization and deserialization of ArtifactVersion objects
updated NativeArray. java to manage the state of a linked list to improve handling of current and previous entries in the array
update file parent ID assignment logic in FileUploader. java to ensure correct file parent is maintained during uploads
added a new test class UTF8ReaderBug to validate UTF - 8 character encoding to ensure proper handling of supplementary Unicode characters in XML
add unit test base on user forum issue
updated expected depth values from " depth " to " depth20 " in BinanceIntegration. java and BinanceUsIntegration. java to ensure
added resetAllocation method to Wrapper class and invoked it to reset initial and maximum allocation states in SimpleParallelizer and Wrapper classes
removed import of AssertTree from AmbariManagementControllerTest. java to streamline test code by eliminating unused imports
replace direct access to system properties with synchronized access in mmm Agent. java and add a new AgentCMETest. java file to ensure
[ hotfix ] fix checkstyle violation in modelutils
updated methods in AbstractDoubleArrayAssert. java to improve functionality and maintainability of the code
updated width and height calculations in Legend. java to account for a single label index to ensure proper rendering of labels with only one entry space
added test methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf `, ` Test
updated data retrieval from a string to a array in MoreLikeThis. java to improve data handling and ensure compatibility with array types
replaced the use of ruleResolver with BuildTargetSourcePath in Omnibus. java to improve code clarity and maintainability by using a more des
send ` ` botania. versioning. disabled'' chat message if versioning be disabled.
replaced ` Collection ` with ` List ` for filePaths and introduced ` numberOfFiles ` variable to improve type specificity and facilitate file
added a new command - line argument " - b " in AidlStep. java and updated formatting in GenAidlTest. java to
fix : delete ligation on edge ( # 979 )
added a TODO comment to the FakeHttpLayer class to improve code clarity and prepare for future development
[ hotfix ] [ runtime ] revoke leadership when handle error in embeddedleaderservice
compositerdiscoveryclient. getinstances ( ) should return a single instead of a Flowable
replace ` getSystemConfiguration ` with ` new Configuration ( ) ` in ` ParallelUniverse. java ` and ` BootstrapTest. java `
[ hotfix ] [ config ] add description for'job _ recovers'option
updated method names and logic in WidgetsFullSheet. java for better clarity and functionality to improve code readability and ensure correct display based on search
fix for woodstox - core when woodstox be not in classpath
refactor test setup method in AuditAliasCommandIntegrationTest to improve code readability and maintainability
removed logging statements for zero header view height in WidgetsFullSheet. java and adjusted widget section max height logging in WidgetsRecommendation
( chore ) camel - cxf : disable test that be not applicable in this scenario
added error handling around the update ( ) method to ensure graceful failure during periodical refresh
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` classes to use ` @ RequiredArgsConstructor ` and ref
added a check for default background fills and refactored foreground and background handling in HSSFCellStyle and HSSFFont classes to
updated ZonedDateTimeFormatterBenchmark. java file to improve test coverage for ZonedDateTimeFormatter functionality
refactor the update processing logic in ` DistributedUpdateProcessor. java ` and add a new test class ` DistributedUpdateProcessorTest. java ` to
added a null check for the rocket stage when the motor is null to ensure that the stage is valid before proceeding with further operations
update / editscript to use ` ` toreplaceid'' instead of ` ` allallowed'' to improve clarity and functionality of item
extendedMasterSecretExtension to improve clarity and maintainability of the code
changed the input processor variable from non - final to final to ensure that the processor cannot be reassigned after initialization
added listener for onWriteFailed in WritableKeyProcessor to notify listeners when the stream is reached during write operations
added " CUBE " to MySQLDatabase. java to enhance database connectivity capabilities
added a try - catch block around the rm call in TestReplicationHandler. java to handle potential IOException during directory removal
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce new test runner functionality to enhance support for
refactor DefaultOkHttpClientFactoryTest to use reflection for field retrieval to improve code readability and maintainability by reducing repetitive reflection calls
refactor exception handling in BatchUpdateException, PreparedStatement, and Statement classes to improve code clarity and maintainability
added a null check for the output parameter in RawMessageContentRedirectInterceptor. java to prevent potential NullPointerExceptions when processing output
ggb - 2118 fix : display of object in both portrait and landscape orientation
updated jailerMain method to include an additional boolean parameter and modified its implementation to allow users to specify either a data model or an extraction
refactor methods in HttpRequest class to improve code readability and maintainability
added preference for unread pull status in TalonPullNotificationService to enable users to manage pull notifications effectively
add kind check for object before processing in IsNullNode. java to ensure correct handling of null values based on object type
updated memory measurement and loop iterations in Box2DTest. java, and refactored camera initialization in PongographicCamera. java to
refactor RecyclerView initialization to handle null cases for tablets and orientation to improve code robustness and maintainability by avoiding potential null pointer exceptions
changed log level from trace to warn in CLIService. java to improve logging detail for background operations
add a debug statement to show if a method instance have a abstract flag and fix a bug in the interface check
ggb - 2118 allow run pointer up on ie10 +
added deviceid parameter to notification user retrieval to allow filtering of notification users based on their device information
update srtm link to point to csi. cgiar. org instead of v4. 1 / 6 _ 5x5 _ t
replaced ` getFileChooser ( ). removeAll ( ) ` with ` c. removePropertyChangeListener ( filterComboBoxModel ) `, ` approveButton
change the return type of the handle method from void to boolean to allow for more flexibility in handling different UI components
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods to improve handling of unresolved rules and enhance error messaging for non - resolvable
hide transport spinner when makingShortcut is true to improve user experience by providing immediate actions
added null check for attributes _ field and created two new classes with annotations to ensure proper handling of null values and demonstrate annotations with default values
modified backPressed methods to return a boolean indicating success to improve handling of back presses based on media details state
added support for enabling long view index in the query services to enable or disable the long view index based on configuration settings
changed the capitalization of " V " to " v " in the SDRTrunk class to ensure consistent casing for string representation
replaced ` withMessageContaining ` with ` StringUtils. cleanPath ` in ` PrivateKeyParserTests. java ` to ensure that the path is clean
removed columnPosition parameter from diffDropColumn method signature to simplify the method signature and improve usability
updated IndexWriterConfig initialization to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest version of Lucene
hbase - 26183 add - d flag to disable column family check ( jesus camacho rodriguez, review
[ java ] : use ` subscriptionid ` instead of ` recordingchannel ` when stop the recording.
replaced calls to startActivity with startActivitySafely and added voice button proxy visibility settings to improve user experience by ensuring the activity is launched safely
added a check to skip processing if the last element of the JSON node is a single element to optimize performance by avoiding unnecessary processing for a single
refactored procedure functionalities in Procedure. java to improve code readability and maintainability
updated resource bundle retrieval to include Locale. getDefault ( ) and ClassLoader. getSystemClassLoader ( ) to ensure consistent localization across different platforms
[ j2kt ] implement normalizeskotlin pas to create immutable array.
updated conditional logic for term counting in PerSegmentSingleValuedFaceting. java to ensure correct counting behavior and handle cases where there is no count
fix npe in modmetadata. getfieldmetadata ( # 8241 )
added a new test class OSGiTest for verifying the dependencies of " com. google. gson. annotations " to ensure proper functionality and validation
refactor service enabling logic to use a separate method for clarity to improve code readability and maintainability
hbase - 15419 use writeflusht ( ) instead of waitforallresults ( ) in htable constructor
fix : ctelement. getThenStatement ( ) and. getElseStatement ( ) should cast to ctelement. getThenStatement
implement the ` hasUserData ( ) ` method in ` SimpleFeatureImpl ` and its corresponding test in ` SimpleFeatureImplTest ` to ensure
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` classes to simplify method signatures and
refactor RelyingPartyRegistration class to improve code structure to enhance maintainability and readability of the codebase
removed the ` enableLogging ` method from ` JavaCompiler. java ` to streamline the logging configuration by eliminating unused functionality
added a new class ` InJavaSourceSet ` to filter and manage Java source sets to facilitate the inclusion and inclusion of Java source
added logic to check for the " gdalinfo " command in TestGDALParser. java to ensure the test resource is correctly located for the
added a static method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of a getter for objects based on
removed the useExternalStorage preference check in DirectUpload. java to simplify the conditional logic for SDK version checks
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated its usage in ` IndexingJob
bug 7903 : allow disk offering id and snapshotid to be pass during createvolumecommand.
updated content assignment in ToHtml. java and improved assertion message in BaseTestCellComment. java to enhance code clarity and ensure proper handling of
added null checks for amountToAdd and amountToSubtract in LocalDate, LocalDateTime, and ZonedDateTime classes to ensure proper handling of Period instances during date
added a new file ` Issue382. java ` with test cases for handling error responses to ensure proper error handling and handling for specific error
replaced the static import of RuntimeException with a static import of Integer. signum and simplified the return statement in the PositionUtils class to improve code
set visibility of holder. text to GONE in AttachmentAdapter to improve user interface by hiding text when certain conditions are met
fix : avoid npe in ctimport # getimportkind
updated method reference from ` caps ` to ` getProfile ` in ` XpiDriverService. java ` to improve clarity and ensure correct retrieval of
add a bucketpickup to the liquidblock, and make some field private.
no - jira yet - fix unit test failure
updated time zone from PST to America / Los _ Angeles in LocaleProviders. java to ensure correct time zone is used for
[ java ] remove unneeded array usage in distincterrorlog
updated TEST _ NIGHTLY, TEST _ WEEKLY, TEST _ AFAITSFIX, and TEST _ BADAPPLES to use
rename sqlexecutionloggerimpl to sqlexecutionloggerimpl and add changelog entry
deny access to reflect method, field, and proxy in graalcontext. initialize ( ).
refactor image processing to use WritableRaster for pixel data updates to improve efficiency and error handling when updating pixel data
updated the method call to include a partition parameter in HiveUtilities. verifyAndAddTransactionalProperties to ensure transactional properties are correctly associated with the partition
added a new variable ` mLastOverlaySroll ` and modified the logic for determining overlay roll behavior to improve the handling of overlays and ensure
hhh - 147373 : make unmodifiablebatchbuilderimpl extend batchbuilder
improve error message for shouldnotreachhere ( )
added a new test method to verify mocking behavior in PartialMockingRetainsStateTest. java and created a new MockWithStaticStateDemo
added a new test method to validate SQL parsing with brackets and order by to ensure proper handling of SQL syntax with brackets and order by
added a null check for ugi before executing the action to enhance robustness by handling potential null pointer exceptions
added error handling to the allocation error check in OpenALMusic. java to improve error reporting by including error code when AL _ NO _ ERROR
camel - 13709 : make endpointhelper. reslovestringparameter a public api
modified the handling of DECIMAL types in RexNodeConverter. java to include precision and scale to ensure accurate representation of DECIMAL types in the query
refactor code to use Optional for vendor and device properties retrieval to improve null safety and clarity in handling optional values
updated the assertion to use ` Long. toString ( now ). getBytes ( ) ` instead of a hardcoded string to improve test reliability by
replaced the use of AxialStage with RocketComponent in multiple files to improve type safety and maintainability of the code
added longRunningTime parameter with getter and setter methods to Args. java to allow configuration of the long running time for improved task management
updated comparison logic in ` FindRefComparison. java ` and added a new class ` Ideas _ 2012 _ 05 _ 21. java `
updated import statements and modified ServiceLoader usage in multiple Java files to improve code clarity and ensure proper service loading functionality
geos - 5975 : fixed encode problem with gml3 encode
removed unnecessary Expectations declaration from test assertions to streamline test code for improved readability and maintainability
updated the existing check in MissingUniqueConstraintChangeGenerator to include a reference database condition to ensure that the comparison logic applies to both the primary and
refactor Android property handling in IjProjectTemplateDataPreparer. java to improve clarity and efficiency of asset management logic
use awaitility instead of assertEquals in test
added user parameters to the builder in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance the build information by including user - specific arguments
stitute getbundle ( string, object,... ) to prevent memory leak
updated log message format from " match limit " to " match order " to improve clarity of log messages for better debugging
added a new file TheRockMetaDataDemo. java to demonstrate retrieving exchange metadata to enable users to access and print exchange metadata for TheR
renamed FloatingDecimal and FormattedFloatingDecimal to strictfp and added a new test for strictness in ParseDouble to improve clarity and functionality of
removed the unparseIdentifier parameter from columnNamesBuilder to simplify the column name construction process
added a test method to replace fields in JavaTemplateContextFreeTest. java and updated variable declarations in BlockStatementTemplateGenerator. java to improve
added a check for non - synthetic methods in ` InstantiateStaticClass ` and created a new class ` Property3 ` with a private
removed the method call to projectFilesystem. getPathForRelativePath in WorkspaceAndProjectGenerator. java to simplify the code by eliminating unnecessary method calls
added rescue handling logic and improved message sending in IkStepDefinition. java to enhance the system's ability to manage rescue actions and ensure
changed the ` equals ` and ` hashCode ` methods from ` final ` to non - final in multiple type classes to ensure immutability and
added a method to retrieve the default SyncLevel from an initialization parameter to provide a mechanism for retrieving the default sync level based on configuration
test : fix flakiness in controlcommandstest
added a condition to check if the slice state is neither CONSTRUCTION nor RECOVERY to ensure proper handling of recovery states in the
fix typo in opencv _ core. create ( image, CV _ MAKETYPE, numChannels ) ( pull # 121 )
added SDKPath field and modified makeProcessExecutorParams method to include ExecutionContext to enhance process executor parameter handling by incorporating the SDK path
[ flink - 2594 ] [ runtime ] remove unused variable and use a functional style
network : fix typo in log message
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code maintainability and readability
added conversion for sort and union rows in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type handling
fix typo in betterblockpos javadoc
updated proxy retrieval to use the class loader instead of the original servlet context to ensure correct loading of the servlet context based on the class's
updated version string concatenation and checkbox functionality in multiple classes to improve clarity and consistency in version handling
core - 1022 oracle database tool : fix problem with log statement that contain trailing whitespace.
add findbugs property findbugs. nullderef. assumensp
( chore ) camel - jbang - use a dynamic port number for the test
updated BLOB _ SIZE and PLAY _ MARGIN, and SLIDER _ MARGIN, and refactored duration handling in DrawAudio.
added ` addMultifactorAuthenticationProviderBypass ( ) ` method call to ` DuoSecurityMultifactorProviderBypassConfiguration
bugfix : maxrectspacker. findpositionfornewnodebestareafit and maxrectspacker. findpositionfornew
[ drools - 7 ] fix checkstyle violation in drools - core module
added methods to set and get the help page in PMS. java and refactored the updateContents method in HelpTab. java to
added GeocodeProviderFactory and Constants interface files to enhance geocoding functionality and maintain consistent naming conventions
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer classes to ensure compatibility with the latest Lucene library structure
test : replace expect exception with fail ( instead of expect )
[ py4j ] make sure that the object id be a valid jvm object id for memory management
updated conditional checks and refactored collection creation in SegmentsInfoRequestHandler. java and CollectionsAPISolrJTest. java to improve code
update calculation for numPredictiveAppCols based on phone type to ensure correct number of predicted app columns based on device type
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` for scalar subqueries to streamline the logic for scalar subqueries
added abstract blockbuildcraft to make it easy to remove an item from the inventory.
updated gravity settings and layout parameters in DeviceProfile. java to ensure proper layout positioning for the drag target bar
no logical change - code cleanup. no logical change
initialized ` ms ` to null in ` HiveMetaStoreClient. java ` and initialized ` metaStoreClient ` in ` HiveMetaStoreClient. java `
update display script retrieval to use the DISPLAY category to ensure correct display script is used for different locales
removed static import of BASE _ URL _ PROP and CORE _ NAME _ PROP in Replica. java to streamline code by eliminating unnecessary
replaced ThreadLocalRandom with Random in StoreDirectTest. java to improve performance and reduce dependency on ThreadLocalRandom
added a check to ensure the launcher is ready before backup operations to improve backup reliability and prevent errors when the launcher is not ready
updated error messages for clarity in Cell. java to improve readability and provide context for the error condition
camel - 174j : added unit test for resiliencepooledroutetest
replace ` getBodyspace ` with ` setbarspace ` in multiple chart classes to improve clarity and consistency in terminology
refactor ShadowProcess class to improve code readability and maintainability
use hamcrest assertion instead of junit in examples / activemq / filemessagatest. java
added logging configuration for various logger types in Grasscutter. java to reduce log verbosity and improve performance during development
changed the visibility of ` highlightCnstScrRngQuery ` from private to static and updated related method signatures to improve memory efficiency and
updated workspace state check to include NORMAL state to ensure proper handling of workspace state in overview mode
updated multiple assertion classes for consistency and clarity to enhance maintainability and readability of the codebase
snippettemplate cache should only be cacheable when cacheable = true
added support for " solrcore " scope in data import processes to enhance data management by integrating solrcore session management
added primary key constraint to the CREATE TABLE statement in DatabaseMetaDataTest. java to ensure the table has a primary key for testing primary key integrity
rename -- permissions - config - path to -- permissions - config - file.
refactor session creation logic in HttpSessionContextIntegrationFilter. java to improve clarity and correctness of session management logging
added a new file TestIfWithDeadRegion. java that includes a supplier for string retrieval to facilitate testing of string retrieval with a
corrected the spelling of " english _ UD " to " english _ USD. gz " in DependencyParserITest. java and DependencyParser
replaced ` testConcurrentAccess ( ) ` with ` HighResolutionTimer. disable ( ) ` in ` SnowflakeIdGeneratorTest `
added a static UI setting and modified toast bar behavior based on user settings to allow dynamic updates to the toast bar based on user - defined settings
replaced the implementation of the ` drop ` method with a lambda expression and added a try - finally block to improve code readability and ensure proper resource
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` classes to improve code
updated error dialog messages to use localized messages instead of hardcoded strings to improve internationalization and maintainability of the user interface
tika - 5764 -- add mime magic for openxmlformats - officedocument. spreadsheetml. sheet
added logging statements and refactored glue loading in multiple classes to enhance debugging capabilities and improve code clarity
camel - 13663 : camel - eip - enricher should not use system. lineseparator ( ) and remove system. lines
add - dcassandra. skip _ schema _ check = true to signal when endpoint be remove.
added debug logging for audio notification and playback devices in DeviceConfiguration. java to improve debugging visibility and ensure correct handling of audio capture devices
added a WebsocketConfig class and related getter / setter methods in ShenyuConfig. java, and updated WebSocketClient constructor to utilize
fix ` ` beforeinvocation'' and ` ` cleanup'' flag in cacheconfigvalidationlistener
updated content length handling in MoreIndexingFilter. java to ensure that the content length is not empty before adding it to the document
solvermanager. solveterminated ( ) be call twice in defaultsolverjob. solve ( ) to solveTerminated ( ) twice.
added a new method ` internalCreateTimeseries ` to handle path already existent timeseries to improve error handling when concurrent inserting timeseries data
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check if a boolean result
changed access modifiers from public to protected for several methods in Shadow classes to enhance encapsulation and restrict access to these methods
server : fix listnetworks api to work with reserve ip
modified the handling of the ` _ valueString ` in ` HttpParser ` and updated the test method name in ` HttpParserTest ` to
refactored thread initialization logic in J9VMInternals. java and Thread. java to improve code organization and ensure proper context class loading
added ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and created ` EnvironmentTest ` to ensure proper handling of external storage states
[ jbrules - 3514 ] add test case for mvel type coercion
updated import statements and formatting in LoggingConfig. java for consistency to improve code readability and maintainability
added exception message to the logging of exceptions during the construct operation to improve error reporting by including the exception's message
remove tel : from to number if it start with a tel :
updated visibility logic for sharedWithMeIconV in FileListListAdapter. java to ensure sharedWithMeIconV is displayed correctly based on file
removed the deprecated HIVEOPTSORTDYNAMICPARTITION configuration from HiveConf. java and updated TestTxnCommands3. java to utilize it
refactor ExecuteStatementOperation and Operation classes to streamline configuration management to improve code clarity and maintainability by reducing redundancy
replaced usage of Google Sets and HashSet with Java's Arrays and HashSet in BTCMarketsStreamingAdapters and BTCMarketsStreaming
fix OGRDataStoreTest to use getTypeName ( ) instead of getName ( ) to ensure type name consistency
removed the ` onErrorInStep ` method from ` StepListenerSupport. java ` to simplify the interface by eliminating unused functionality
refactor Wallet class to improve code readability to enhance maintainability and ease of understanding
camel - 7999 fixed the charset issue of camel - netty - http
use log instead of system. out. println in testnonblockingapi
added a check to return false if the row index exceeds the size of the connection list to ensure proper handling of user input without exceeding the
add bugfix for methodwithsamenameasenclosingclass false positive
added support for extended platform - managed object in ` ManagementFactory ` and created a new ` ExtendedPlatformComponent ` class to enhance management capabilities and
added SQL string replacement for double quotes in BasicQueryTest. java to ensure proper SQL syntax handling for escaped quotes
updated response path in BleutradeDtoTest, BleutradeBalanceReturn, and BleutradeCancelOrder
updated TextEscapeUtils. java file to improve text escaping functionality
added a filter parameter to the AbstractSpatialFieldType and updated the FilteredQuery instantiation to enhance query flexibility by allowing conditional filtering based on configuration
added progress display for auto - sending in GpsLoggingService and invoked updateResultsEmailSent in AutoEmailHelper to improve user experience by providing
replaced ArrayList with HashSet for inlinks storage to improve performance and reduce memory usage
added stopScan method to TradfriDiscoveryService and modified removeOlderResults call to ensure the scan stops and maintains the current timestamp
updated testFilterForPartition method to accept a boolean parameter indicating whether to fail with blocking mode at the server side to enhance test reliability by
added'Abandoned'status to TicketModel and updated workflows in TicketBasePage and TicketsPage to accurately reflect the
removed the ` columnAliasPrefix ` initialization from multiple platform classes to streamline code by eliminating unnecessary field assignments
updated ` LlapRowRecordReader ` to use ` BytesWritable ` instead of ` Text ` for improved data handling to enhance performance and compatibility with
feat : add a mechanism to determine if the jvm be not native enough to run on a 32 - bit system
updated logic in PdfCopy. java to handle both PARENT and B keys correctly to ensure proper copying of object properties in the output
added a DAEMON option to the RESET _ ALARM command and implemented daemon mode functionality to enhance user experience by providing a web p
added a new FlushIndexTask class to perform performance flushing of index data to facilitate performance testing by implementing the flushing of index
fix memtable. getflushpath ( ) to take the estimated size of the data file
added a ` SEASONS ` to the expectedOutput condition in the ` MediaLibraryFolder. java ` file to ensure that the expected output
added a new file LocalSocketAddress. java to test IPv6 connectivity on a DatagramSocket to ensure that the local address is correctly set for network
updated grid size points in GridSizeMigrationTask. java to correct grid size migration logic
updated method calls and variable names in SerializerPojo. java for consistency to improve code readability and maintainability
added READ _ ONLY option handling to the Context class to ensure proper context mutability in read - only scenarios
updated LookAndFeelCommand. java file to improve look and feel functionality
updated logic for determining the lastRunEnd in BlockBoxing. java to improve accuracy in determining the last runEnd
added imports for EOFException and EofException, and modified the assertion to check for additional exception types to enhance test reliability by ensuring that
replaced the use of ReentrantLock with direct lock usage in multiple files to simplify concurrency management and improve code readability
updated method signatures in NetworkParameters. java to improve code clarity and maintainability
updated account asset optimization setting logic in DynamicPropertiesStore. java to ensure proper management of account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to introduce j9 garbage collection policy to
added error handling for invalid contract protobuf processing in TransactionCapsule. java to improve robustness by throwing a P2pException for invalid contract
remove exceptiontypechecking, now it don't work
updated resource path and added localization warning message in HelpContent. java to ensure correct resource loading and improve error messaging for missing resources
added a new file ProcessorInfo. java to determine and read CPU procs to provide a mechanism for retrieving available processors based on the system '
add - html option to output to default. xsl ( default. xsl )
set ` logbackxmllocation ` to be final and deprecate ` logger. config ` property
replaced ` HostLevelParamsUpdateEvent ` with ` HostLevelParamsUpdateEvent ` and added a new ` onServiceComponentRecoveryChanged ` method
allow ` @ ConditionalOnProperty ` for ` SleuthTagPropagationAutoConfiguration ` to conditionally create ` TagPropagationFinishedSpanHandler ` based
refactor depType determination to use a switch statement to improve readability and maintainability of the code
updated oauth2LoginLinks method to accept a MultiValueMap < String, String > parameter and added error handling to enhance OAuth2 login process by
hbase - 25836 improve halfstorefilereader to seek to the first key instead of the splitkey
fix : deprecate ` ` value ( )'' on generationtime. always
nd4j : add test case for nan in layer norm
refactor showShareFile method calls to use getFileOperationsHelper ( ) across multiple activities to improve code organization and maintainability by centralizing file sharing
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of Liquibase update plugins with relative clob files
convert the " proxyType " value to uppercase to ensure consistency in proxy type handling
add a new mod _ MinecraftForge. java file that implements versioning and loading functionality to facilitate the initialization of Minecraft forge
refactor JdbcDatabaseSnapshot to introduce tablesOfColumnsFetched and improve column fetching logic to enhance accuracy of fetched column data and maintain case sensitivity
added a container with border images and labels in the CSSBorderTest class to enhance the visual appearance of the border in the UI
make retryloadbalancerinterceptor conditional on miss bean
change superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout. java to align the parent layout behavior with new specifications
updated the initialization of ` parentTaskName ` to use ` System. currentTimeMillis ( ) ` instead of ` System. nanoTime ( ) `
added error handling for valid AddServiceRequest in ServiceResourceProvider. java to improve robustness by catching potential parsing errors during service requests
inverted the return logic for unversioned files only in IndexDatabase. java to ensure the method correctly handles unversioned files
caution : fix for round ( x [ 1, 2 ] ) in ca
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
deprecate in order to use camel - spring, camel - spring - rabbit and camel - spring - rabbit
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
increase wait time in evictiontest. testentryaddedatleastseconds ( # 1860 )
renamed the method ` encodeInternal ` to ` encodePassword ` and updated the variable name from ` pass2 ` to ` saltedPass `
updated the usage of ViewTreeObserver in IconRecentsView. java to ensure consistent usage of mTaskRecyclerView. getViewTreeObserver ( )
refactor Response class to improve code clarity to enhance maintainability and readability of the response handling logic
change the default value of maxTimestamp from Long. MIN _ VALUE to Long. MAX _ VALUE in SSTableMetadata. java to ensure compatibility with
set preferred size of callparticipant and callparticipant in callparticipant.
added null checks for replies in TweetActivity, TimeLineCursorAdapter, and TweetView to ensure that replies are not empty before processing
updated ` HitbtcBalance ` class to use ` Objects ` and improved ` toString ` and ` hashCode ` methods to enhance object comparison and
updated SqlCodeGenerator and related test files to include a where clause handling to enhance functionality to support order by clauses in SQL queries
updated return statement to use addrs. toString ( ) to improve clarity of returned addresses
replaced the closeOpenFile ( ) method with the openOpenCookie ( ) method in EditGcodeFile. java to utilize OpenCookie for
updated HTTP client libraries from version 5 to 5 in JsonToGrpcApplicationTests. java and JsonToGrpcApplication5. java to
swapped the calculation of energyToRemove and energyUsable in PipePowerWood. java to ensure energy removal does not exceed the battery's
added a check to delete the temporary file if it exists to ensure that the temporary file is removed before further operations
updated constructor parameters in BitstampWebSocketTransaction and added new test cases in BitstampStreamingMarketDataServiceTest to improve trade data handling and ensure reli
ReplayProcessor and ReplaySubject to return null when time exceeds maxAge to avoid potential overflow issues during processing
update citationstylegeneratortest. java to fix checkstyle violation.
added new columns and refactored SQL query preparation in MediaTableFiles. java to improve code clarity and maintainability by eliminating redund
g3d - black ax for exam ( if value be not equation, show only definition from user )
fix a nullpointerexception in sxipcommtextfieldui.
hbase - 25836 startrow can't be set to null when startrow be null, addendum
updated the initialization script from " q _ test _ init. sql " to " q _ test _ init _ for _ minimr. sql
updated Math. java and StrictMath. java files to improve code clarity and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags. java to facilitate enabling of transient taskbar functionality
[ hotfix ] fix javadoc error in executionvertex
added a condition to set the density to 3 if the scale is equal to 3 to ensure consistent scaling behavior in the IOSGraphics class
rename variable ` optional ` to ` vararg ` in ` Parameter. java ` to improve clarity and consistency in variable naming
hbase - 15410 add exception to the info log in regionstatestore # getsplits ( )
fix flakiness in testclusterupgradefrom
updated log messages and renamed ` AsyncContextTest ` to ` LocalAsyncContextTest ` while adding a new ` SelectChannelTest ` class to
added a boolean parameter to the SearchUiManager constructor to provide an option to show an arrow in the search functionality
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 477, row
test : skip linux / amd64 only test
[ hotfix ] fix classcastexception in scalars # getvalues
updated primary key validation logic in CreateTableStatement. java to ensure only one primary key is specified to improve error handling for ambiguous primary key requirements
added conditional logic to set drawable resources based on LMP state in multiple classes to enhance UI elements with appropriate drawable resources for devices running LMP
fix an exception in vmservicemanager when there be no isolate to query the flutter views
added new headers configuration methods for contentTypeOptions, xssProtection, and HTTPStrictTransportSecurity in HeadersConfigurer. java to enhance the flexibility and
rename ObjectEnumerableAssert to ObjectEnumerableAssert to improve clarity and consistency in naming conventions
[ grid ] rename devtoolsprovider to distributedcdptest
added type attribute to the AggregateRoot annotation to specify the type of the aggregate to improve test clarity by specifying the aggregation type
added support for prebuilt libraries in the Python binary to enhance flexibility in managing prebuilt Python rules and libraries
added handling for ` clientAuth ` in ` NetServerOptionsConverter ` and updated deprecate methods in ` HttpServerOptions ` to improve client authentication
hive. repl. rootdir and hive. repl. cmrootdir should use ` $ { system : user. name } ` instead of `
refactor task view removal logic in RecentsView. java to improve clarity and correctness in task view ID handling
attempt to fix intermittent failure on slow ci server
removed the clearAll ( ) method from DataTableTopComponent. java to streamline data management by eliminating unnecessary operations
bugfix : rename controller to flowcontroller in processable interface
updated the exchange number handling in the OperatorTreeGenerator and added a new test case in PipelineBuilderTest to ensure correct exchange number processing and validate
added uses of ClassLoaderHandler to the module - info. java files to enable the use of ClassLoaderHandler in the module configuration
move solution business method to solution business method to solve ( )
added JsonIgnore annotation to ApplicationSettings. java to prevent serialization of sensitive fields
inverted the null check condition for throwable in PlotListener. java to ensure that throwable is not null before proceeding
changed variable name from'queryId'to'queryInfo'for clarity to improve code readability and maintainability
fix auto work not work when there's nothing to fill
fix hdop handle in gl200text ( fix # 4481 )
renamed ` timeColumnName ` to ` incomingTimeColumnName ` and updated related assignments in ` AvroRecordToPinotRowGenerator. java ` to
removed duplicate calls to ` HttpMethed. waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc
added support for the Initializable interface in the ContainerBuilder class to enable custom initialization of objects in the container
add meter and error tag creation to timerObservationHandler. java ( # 8951 )
changed the data type of SYNC _ DELTA _ RATE from float to double and updated time calculations accordingly to improve accuracy in handling fetch
thymeleaf : add ` ` ~ { }'' to fragment expression that will be remove in future version of thymeleaf
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread safety when deserializing attributes
fix for http : / / issues. apache. org / activemq / browse / amq - 647
added new color constants and improved extractInto method to handle fallback color extraction to enhance color processing logic and support for dark text hints
added accessibility check for the data folder in SketchBuilder. java to ensure only accessible data folders are processed
updated OmniNotes to return false for debug build type and modified NotesHelper to include a title parameter to improve handling of titles in notes
removed initialization of SessionRegistryImpl in ConcurrentSessionControllerImpl. java to simplify sessionRegistry management by removing unnecessary instantiation
added logging for connection reconnection completion and error handling in NettyStreamingService to improve connection reliability and provide better insights during reconnection attempts
replace occurrences of ` Factory ` with ` Proxy ` in multiple test files to ensure compatibility with the updated Javassist proxy implementation
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool. java ` to ensure compatibility with the Jetty framework's
updated socket exception handling to include the address in the exception message to improve error reporting by including the host details in the exception message
added a method to check if the view path is under the repository to improve error handling for view paths under the specified repository
remove ` ` tabheaderarea'' and ` ` bibfiles'' element from the tabbed pane
add - xx : + usecompressedoops flag to runtime / class / loadclass test
removed error logging for update log in ACTIVE or REPLAY state to simplify error handling during update logging
deleted the ConnectionHook. java file to remove unused code to streamline the codebase
updated waitForReplicasInSync method to return a boolean indicating success or failure to ensure proper synchronization of replicas with a leader in tests
( chore ) camel - swagger : fix parameterassert. assertequals ( ) ( # 4104 )
update apex version number and add support for namespace guard access
updated multiple Java files for consistency to improve code maintainability and readability
refactor AggregateEngine to use a single instance of IoTDBThreadPoolFactory and improve thread management to enhance thread safety and maintainability by centralizing
replaced StandardByteBufferPool with ByteBufferPool in WebSocketAsyncConnection and WebSocketServerFactory to improve memory management and resource efficiency during WebSocket connections
added scrolling functionality to scroll to specific indices in UploadActivity to improve user experience by providing quick access to specific thumbnail indices
chore ( sql ) : fix codegen fail when other column alias be override by timestamp
refactored animation handling in LauncherAnimUtils and added state transition animation in LauncherStateTransitionAnimation to improve animation performance and manage state during transitions
added a check to disable the default user agent in HttpClientBuilder to ensure that the default user agent is used when not explicitly configured
added pubsubhubbub property and service dependency to handle pubsubhubbub event to enable dynamic handling of pubsubhubbub status
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method
updated method to check for non - synthetic classes instead of anonymous classes to ensure correct handling of synthetic classes in stub processing
dspace - utils : add web application that can be run from rest api
added null check for leftTableAlias in CalcitePlanner and implemented getTableAliasContainingColumn method in RowResolver to ensure proper handling of missing columns
[ hotfix ] fix mislead error message in jobgenerator
updated logger levels from info to warn for transactions and created a new TransactionCapsule to improve logging clarity and enhance error handling
use non - deprecated version of test data in basicmap.
renamed ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` to ` rcfileWriterEnabled ` and ` rcfileWriterValidate
added a new enum ` TlsClientCertPolicy ` and updated related methods in ` GitBlitServer ` to support configurable client certificate requirements
removed a retry mechanism for subscribing to authenticated feeds in KrakenFuturesStreamingService. java to streamline the subscription process by elim
updated WebsocketRoutingFilter to support optional HTTP headers and subprotocols to enhance flexibility in handling WebSocket protocols based on request headers
added a debug log statement for fetchReq in HiveQueryResultSet. java to facilitate debugging by providing detailed fetch request information
formatted string in HolidayEventFormatter. java to improve readability and consistency of string representation
refactor ` innerClassFieldMadeFinal ` to ` ignoreInnerClass ` and update its logic in ` FinalizePrivateFieldsTest ` to improve
updated exception handling in UnexpectedJobExecutionException. java to improve error reporting and maintainability of the code
deleted the file ` module - info. java ` and simplified the ` AquaLookAndFeel ` and ` AquaUtils ` classes to
changed the data type of ` maxFreq ` and ` maxCost ` from ` int ` to ` long ` in ` DrillSideways
added a new class ` GeoDegeneratePath ` to the ` StandardObjects ` class to support the generation of ` GeoDegeneratePath `
removed the preFill parameter from multiple pool constructors to simplify constructor signatures for better usability
added taskbar state update logic in TaskbarLauncherStateController and modified flag values in TaskbarStashController to ensure taskbar state is
added null check before comparing style values in CascadeDeleteVisitor. java to avoid potential NullPointerException when retrieving default styles
refactor GuiUtil and StatusTab classes to use setter methods for setting maximum and preferred sizes, and improve usability of the MarqueeLabel constructor
refactor icon retrieval logic in FileTreeViewHolder. java to improve readability and maintainability of the code
changed assertions from isEqualTo ( ) to contains ( ) in ParallelUniverseTest. java to improve clarity and accuracy of test assertions
added synchronize when iterate over synchronizedmap a per java
add test nativeworker test for native _ probability function
added ShutdownThread. deregister ( this ) in ClientContainer. java to ensure proper resource management and prevent memory leaks
hhh - 14675 : add sybaseASE15dialect. droptTemporarytableafteruse ( ) method to drop temporary table after
simonstewart : fix htmlunit not be able to parse color value
updated import statements across multiple Java files to improve code clarity and maintainability
updated LinksIndexingFilter. java file to improve indexing efficiency and maintainability
updated hex string format for reserved memory addresses in VirtualAllocCommitUncommitRecommit. java to improve readability of memory allocation logs for better
ensure ad playback state be not miss when load ad data.
added a check for UndefinedEquals in MultimapSubject. java to ensure proper equality comparison between Multimap. equals and Multimap. equals.
updated the FREQUENCY value from ` deg _ text ` to ` unit _ hz ` in the ` fetchPropertyValue ` method to
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
replaced ` all. putAll ( includedLabelSets ) ` with a direct instantiation of ` TreeMap ` to streamline the code by eliminating unnecessary
add normal element to the vertex format instead of create a new one each time
added tracing tags to message sending and receiving interceptor classes to enhance traceability and visibility of grpc messages
updated time zone handling in ScheduledTrigger. java and removed a test annotation in ScheduledTriggerTest. java to improve accuracy in time zone conversion and
added new classes ` AsyncBucket `, ` Bucket `, ` Bucket4j `, ` ConfigurationBuilder `, and ` InMemoryExtension `
updated the class directory argument handling in resexhausted003. java to allow dynamic retrieval of the classes directory based on the provided system properties
reformatted code for consistency and improved formatting to enhance code readability and maintainability
refactor OngoingStubbing class to improve code readability and maintainability
added conditional logic to re - use the web server based on configuration to improve flexibility in web server management during application startup
replaced ` productConstructor ` with ` constructor ` and added import for ` SolrHttpClient ` in ` SolrTestCaseJ4 ` to improve clarity and
ww - 3833 clear threadallowlist if it be not empty
replaced setOutputSource with setItemWriter in TransformerWriterItemProcessorTests to ensure the processor uses the setItemWriter method for enhanced functionality
added a condition to check the HitPolicy before applying findGaps and findOverlaps in DMNDTAnalyser. java to ensure that
[ beam - 8470 ] add a test for slimming windows combine
added a conditional check for ` allAppsDirty ` before binding all apps and improved logging messages for app icon binding to ensure apps are only bound
camel - 15836 : fix the test failure of managedfilewatcherreloadstrategytest
Removed the System. out. println statement from the Solution class to clean up the code and improve readability
updated AquaMenuBarUI to utilize AccessController and LWCToolkit for deprecated use of the screen menu bar to ensure compatibility with embedded environments
fix fall distance calculation in entity. setrawlocation ( )
refactor SimpleJpaRepository to use a CriteriaQuery for filtering example results to improve query accuracy and ensure correct results are retrieved
added timestamp, parent hash, getNonce, Difficulty, and number to the block's configuration to ensure accurate block metadata for genesis
rename safepointinsertionphase to safepointinsertionphase and remove dead code.
hbase - 15448 addendum fix npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs ( liu sh
change visibility of several methods in ArtifactResolver from package - private to public to allow access to these methods from outside the package
added thread stop calls and disposal methods for defaultCollisionConfiguration, entityTriggers, entityRigidBodies, and ghostPairCallback to ensure proper
added validation to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions during indexing
added state management for login in LoginActivity to ensure proper handling of login state during instance state changes
added null checks in Pump. java and implemented a test for UUID sorting in PumpTest. java to improve error handling and ensure correct
changed access modifiers of ` loadbalancer ` and ` parameter ` methods in ` HttpShardHandlerFactory ` and ` LBHttpSolrServer `
change the order value from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in ` BaseAuthenticationServiceSelectionStrategy `
added server handler functionality to the TestJNDI. java file to enable dynamic server connection handling
added assertions and improved code formatting in SortedDynPartitionOptimizer. java to enhance code reliability and maintainability
modified the condition from checking if the event loop is an instance of NioEventLoop to always return true to ensure that the event loop is successful before
updated the logic for setting ` newNumNulls ` based on the number of rows to ensure that the new number of nulls does not exceed the
camel - jbang export : export all camel - kamelets except camel - kamelet
added authorization checks and updated token handling in OSMJob to enhance user experience by ensuring proper authorization before task execution
clean up to remove system. out. printlns
added client authentication configuration to IoTDBRestServiceConfig to enable client authentication functionality based on configuration settings
simplified the initialization of mocksToBeInjected in PropertyAndSetterInjection. java and added unit tests for ChildWithSameParentFieldInjectionTest.
updated BloomUriUniqFilter to use BloomFilter64bit and refactored expected and hash counts to improve functionality and maintain consistency in
updated the cursor adapter from false to true in HomeFragment. java and added a preference for refreshing in TweetPager. java to enable refreshing
update the intermediate header height ratio from 1 f to 75 f to improve the responsiveness of the scrolling process
replaced ` RuntimeEvent < > ` with a new ` RecompilationEvent ` class and added a new class for handling reilation events to
added support for the system prepped host configuration in multiple classes to enhance the system's ability to manage system resources effectively
added a parameter ` logEveryFileFormat ` to the ` include ` method in ` DatabaseChangeLog. java ` and created a corresponding test
added a loop to delete the last slash character from the location to ensure that the last slash character is preserved in the location
added support for entities and scores in the StaticPipeline class to enable processing of entities and scores based on specified properties
updated filename handling and added configuration for Whoops in multiple classes to improve filename processing accuracy and enable conditional inclusion of Whoops in the
[ geos - 10892 ] catalog should not be look up in the workspace if it can't be find
refactor assertion methods in Assert. java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new test class ` MultiLineJaggedTextTests `
try to fix the unit test error of the unit test
replace instances of ` writeMeasurementScheams ` with ` measurementSchemas ` in multiple files to improve code clarity and consistency in handling measurement schemas
test promotion from survivor to tenured after minor gc fix.
updated the file path from ` slf4j - log4j12 -. * ` to ` slf4j - reload4j -
replaced a direct assertion with a waitFor assertion in HueBridgeHandlerOSGiTest to improve reliability of the test by ensuring the assertion
renamed ` AboutActivity ` and ` PreferencesActivity ` to ` PreferencesActivity ` and ` TerminalActivity `, and updated package imports accordingly to better
[ drools - 1276 ] ignore kiecontainersolverfactorytest until fix
added a constructor to PullRequestMergedEventsStream that accepts a schema file and a personal token, and a GitHubAPICaller to enhance data processing
refactor AbstractExpressionPart class for improved readability to enhance maintainability and clarity of the code
[ hotfix ] [ runtime ] fix checkstyle violation in taskslot
replaced occurrences of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in WebSocket listeners to ensure proper handling of WebSocket close events
added error handling for lock release in MoveTask. java to improve robustness by handling potential LockException during lock management
updated JRubyBackend to use ResourceBundle for property loading and improved gem path retrieval to enhance flexibility and maintainability of the JRuby integration
remove static final byte array ZERO _ ADDRESS and replace ZERO _ ADDRESS with ByteUtil. EMPTY _ BYTE _ ARRAY to simplify address handling and improve
refactor conditional check for class info retrieval in ClassGraphClassLoader. java to improve readability and maintainability of the code
add test for blob storage directory on jobmanagerstartuptest
chore : [ clouddatastream ] add datastream : v1a and lpha1b to the list of datastreams ( #
added a new Bundle extras to the FileDisplayActivity builder to allow customization of the displayed options
replaced break statement with continue in ParticleEmitter. java to improve flow control during particle processing
updated cluster name expectations from 4 to 3 in AmbariManagementControllerImplTest. java to accommodate new cluster naming conventions
removed the nullable attribute from the service column in TransientSessionTicketImpl. java and added a debug log statement in JpaTicketRegistry. java
updated Bug4823811. java file to improve test coverage and fix existing issues
updated the way the pattern is referenced in the argument list by using a function to ensure the correct path relativization is applied to the project filesystem
updated requestFullState method to accept a boolean parameter indicating an initial request to enable periodic polling of the initial request state
refactor ShibbolethCompatiblePersistentIdGenerator to improve attribute handling to enhance code clarity and ensure proper serialization of attributes
updated the @ Inject annotation in RequestValidationService. java to improve dependency injection clarity
added functionality to hide the keyboard log based on the STATS _ LOGGER _ KEY data to improve user experience by conditionally hiding the keyboard based on
corrected formatting in ` FileNodeProcessor. java ` and refactored tests in ` MManagerBasicTest. java ` and ` MTree
refactor NavigableMap and NavigableSet classes to improve code readability and maintainability
move testslurpfile ( ) to itest, since not quite a true unit test
updated GrpcChannelProperties declaration to be private and added @ FunctionalInterface annotation to enhance encapsulation and annotation for better code clarity
refactor span naming logic into a separate method ` spanWithName ` to improve code readability and reduce redundancy
added support for DateWritable in ETypeConverter and related classes to enable date handling functionality in data conversion processes
updated string splitting logic in StyleConverter. java to use Patterns. COMMA _ SEPARATOR to improve string parsing reliability and maintainability
make sure step number don't need to be parse at least once
refactor SemanticAnalyzer to improve column count validation to ensure accurate mapping of input columns to prevent null pointer exceptions during semantic analysis
updated assertions and logic in WANDScorer. java to improve error handling and correctness of score updates
updated Correspondence class to improve classification handling to enhance reliability and maintainability of the code
updated import statements in PaintSetEnabledDeadlock. java to streamline dependencies and improve code readability
initialized ` curPixVal ` to ` 0xFF000000 ` and created a new test class ` WhiteTextColorTest ` to ensure consistent pixel value
replace collection with collection to check for supertypes in BiomeDictionary. java to improve performance and clarity in type checking
rename ` withinTolerance ` to ` exceedsTolerance ` and update related logic to clarify the purpose of the tolerance variable
added new test stability rules to TaplTestsLauncher3. java to enhance test stability management during development
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
add trimming to log file suffix check to ensure that only valid log file names are processed
refactor PythonBuckConfig to improve code structure to enhance maintainability and readability of the configuration logic
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct handling of system shared library names in the package manager
fix meiligao protocol decoder ( fix # 388 )
added a null check for the tile before retrieving the battery value to avoid potential NullPointerException when accessing the power data
added a cache trimming process in the PrefFragment class to enhance cache management by allowing users to remove or re - adding cached data
feat ( freezev2 ) : fix checkstyle violation in terasology - engine
replaced return false with throwing NotAuthorizedException in multiple classes to improve error handling by indicating a non - authorized operation
[ scheduler ] add scheduler. scheduleperiodically ( ) method to the scheduler interface
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( getStorageManager ( ). getFileByPath ( operation. getRemotePath (
added a check for multiple files in the StreamUtil class to ensure that InputStreams are closed appropriately based on the number of files in the specified
refactor create _ table method to accept CreateTableRequest instead of EnvironmentContext to streamline table creation process by utilizing a request object
added a volatile boolean ` aborted ` and synchronized methods to manage the state of the ` start ` and ` abort ` methods to ensure thread safety
updated block parsing logic to include a check for indentation limits to ensure blocks only start with a specific indentation value
add autoplay option to postfragment and autoplay option to postfragment and infinityforreddit.
removed redundant check for fin = true in framegenerator.
added visibility setting for collapse handle in WidgetsBottomSheet to improve user interface by ensuring handle is fully visible
added new files for handling HTML and JavaScript text in the Jooby framework to address issue 475 and ensure proper handling of special characters in
added a check to return early if unitsToScroll is zero to improve performance by avoiding unnecessary processing when there are no units to scroll
changed the condition from ` size ( ) > 1 ` to ` size ( )! = 1 ` in the contract list check to ensure that
added methods to add and put enums in JsonArray, JsonObject, and JsonObjectTest classes to ensure proper handling of null values and improve test coverage for
added hashCode method to IPPPrintService and created TestRaceCond class for validation to ensure consistent hash code generation for print services
replace instances of ` getIVersion ( ) ` with ` getVersion ( ) ` in ` DB2iDialect ` and ` DB2zDialect
don't offer payment when payment can't be connect
refactor exception handling in BatchUpdateException, PreparedStatement, and Statement classes to improve code clarity and maintainability
fix playback stick when encryption be enable.
remove the ` public ` access modifier from several antn and command binding classes to enforce package - private visibility for better usability
added Retrofit import in mmm Part. java and ppp PartMap. java to integrate Retrofit library for enhanced functionality
refactor logic in JsonBuildHelper and ParamsBuildHelper to streamline parameter handling to improve code clarity and maintainability by consolidating logic
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of taskbar types to support overlaying functionality in the application
fix : update gapic - generator - java with mock service generation fix ( # 317 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on task states
removed an additional parameter from the createRenderScript method call to simplify the method signature for better usability
modified PMD. java file to improve functionality and maintainability
updated PluginListCellRenderer and PluginManagerActivator classes to improve system bundle property checks to enhance code clarity and maintainability by centralizing system bundle property
removed duplicate import statements and simplified method signatures in IntegrationTestSparkBulkLoad. java to improve code clarity and reduce redundancy
replace hard - coded value for bloom filter with a named constant to improve clarity and maintainability of the test code
refactor configuration retrieval and selection logic in Overview. java to improve code clarity and ensure proper selection of selected configuration
cloudstack - 2120 : fix npe in agentmanagerimpl. updatetagerequest ( ).
add null check for values in DefaultRecordStore to avoid NullPointerExceptions when processing data
kvm fail to deploy vm, if the discoverer fails, return null instead of return null
ww - 3833 add name and value to < param > element description
updated the constructor of BaseStubbing and ConsecutiveStubbing to accept an Object mock instead of an InvocationContainerImpl instance to enhance flexibility by
added a method to strip method parameters from the method line to improve the accuracy of method name extraction by removing unnecessary parameters
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the latest version and ensure versioning accuracy
pdfbox - 4892 : use set instead of list, a suggest by valerybokov
[ geos - 8470 ] fix typo in symbolmayer class
make sure popup don't center if there be overlap feature.
update error message to be consistent with standard name
added a private final StartingWindowListener instance and refactored the creation of it to a private inner class to improve modularity and encapsulation of
added a doc comment inherited from MBeanServerConnection to improve code clarity and maintainability
updated exception messages in CheckPackageAccess. java to reflect PackageAccess and PackageDefinition security exceptions to improve clarity and accuracy in error reporting for security
increase executor service termination time from 30 seconds to 90 seconds to allow for graceful termination of the executor service
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check before setting it in ` XRL
added @ JsonIgnore ( true ) annotations to Schema. java to prevent serialization of schema data
increased timeout duration from 5000ms to 10000ms in the TestNonTxIndexBuilder test to allow more time for tests to complete
update simple naivebayesclassifier so that it don't depend on the count of doc
renamed CheckHelperModule to CheckHelperControllerModule and added AuditLoggerModule to improve clarity and specificity of the module's purpose
refactor Prototype class to improve code structure to enhance maintainability and readability of the code
added a null check for tableIsTransactional in SemanticAnalyzer. java to ensure that tableIsTransactional is retrieved from the configuration
[ java ] remove unused recordingwriter. writefragment ( ) method.
clarify cue time unit when decode cue
kairos : fix metric query bug ( alias ben't take into account )
update VaultOfSatoshiBaseService to use " USD " instead of " BTC / LTC / pPC / BTC
hhh - 14611 fix resource leak in test
updated the import statements for KafkaSender from ` kafka11 ` to ` kafka ` to ensure compatibility with the latest package structure
added two new test files GwtBinaryIntegrationTest. java and A. java to implement and test GWT binary build functionality
updated loading cause and metadata result set handling in BrowserContentPane and SQLConsole classes to improve user interaction and ensure proper visibility management
updated random value retrieval logic in EnhancedRandomImpl. java and EnhancedRandomImplTest. java to enhance randomness accuracy and reliability
added XMLSecurityPropertyManager as a static final variable in DTDConfiguration, NonValidatingConfiguration, and SAXParser classes to ensure XMLSecurityProperty
added default methods to interfaces and implemented them in subclasses to demonstrate the behavior when default methods are used in interfaces
updated regex patterns from LIKE and GLOB to support both LIKE and GLOB patterns
drools - 6475 : make dmnassemblerservice # getdmnprofiles ( ) protect instead of private
fixed - rscript. readall ( ) and rscript. readallasync ( ) method don't return any value. #
simplify staticobject. setwordfieldvatile ( field, int ) and make it static.
updated debug log statements from verbose to verbose in multiple files to improve log verbosity for debugging purposes
retain the payload packet before send the proxy and release it to ensure proper resource management and prevent potential memory leaks
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants. java and updated thread pool configuration in WebServer
replaced ` idsToShortcuts ` with ` removedShortcutInfos ` and added a check for empty shortcuts to improve shortcut management by ensuring removed
don't convert a string to a string in defaulthttpbinderregistry. convert ( string,... )
removed home case handling from DetailFragment to streamline navigation process
added a condition to check if Android market is present before including play services to ensure that play services are only included when supported by the Android market
refactored TableBlockParser to improve handling of leading and trailing spaces in cell parsing to enhance robustness by ensuring proper parsing of rows
added bridging header support to the NewNativeTargetProjectMutator and related classes to enhance the project generation process by allowing dynamic brid
improve # PotentiallydeadCode. java to include methods from the source file to enhance clarity and maintainability of the code
added diamond finder functionality and new classes to handle type parameters to enhance type inference capabilities and introduce warnings for redundant types
replaced invocation. startSend ( ) with invocation. onStartSendRequest ( ) in HighwayClientFilter, RestClientSender, and RestClient
removed unnecessary import of Utils and added debug log statement for cachemetrics registration to streamline code and improve clarity of cache metrics registration process
added exception handling to propagate AuthenticationException to improve error management and prevent application crashes
updated the condition checking logic in Test6796786. java to improve the accuracy of the floating - point comparison
added a local file for " logback. dev. xml " in JoobyMojo. java and updated file paths in Main. java to
added a new class JaasEventCheck to handle application events to facilitate event processing for authentication failures
refactor QuickstepTransitionManager to use a list of views to animate all visible pages instead of just the current page to improve animation performance and maintain
updated string distance comparison in ConjunctionSolrSpellChecker. java and added a new test class ConjunctionSolrSpellCheckerTest. java to ensure
replaced ` HashMap ` with ` Map ` in ` ShadowSystemServiceRegistry. java ` to utilize a more efficient data structure for fetchers
[ hotfix ] [ core ] remove unused constant in defaultleaderelectionservice
removed the public modifier from the setAuthentication method to restrict access to the method for better encapsulation
bug fix : add'ready. command. wait'and'agent. script. timeout'config property
http : / / code. google. com / p / mybatis / issues / detail? id = 553 : add jdbc schema
corrected the spelling of " SQL " in multiple files to ensure consistency and accuracy in SQL update syntax
refactor schemaTypeCache initialization to use a synchronized map to improve concurrency handling and simplify schema type cache management
updated header management logic in StaticServerHttpHeadersWriter to avoid adding headers with different case names to ensure that duplicate headers are not added, impro
added JUnit @ Ignore annotation to LatticeDemo. java to ignore the test due to dependency issues from CMU
added a method to create a storage directory in TestCollector. java to ensure that the storage directory is available for testing purposes
added chunked streaming mode to StarTreeJobUtils to improve data transfer efficiency
kitchen - jsonschema - syntax : add basic and multiple syntax checker test
hbase - 26183 update protoc to match late change in protoc
added a new ` Node ` class and a test method to validate its properties to ensure that the populator correctly raises a stack overflow exception when
added IOException to the getRemoteName method signature to ensure proper error handling during remote name retrieval
added an exception for IllegalArgumentException in UserAccountManagerImpl and implemented the createPlainClient method in ClientFactory and ConnectivityServiceImpl to enhance error handling and
updated WebSocketConnection and ExplicitDemandTest classes to improve connection handling and enhance test reliability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to ensure compliance with aspectJ annotations and improve security handling
updated import statements and added hostname verification logic in mmm Connection. java and ppp Connection. java to enhance security by allowing dynamic hostname verification
added a remove method to the OHLCSeries class and implemented a corresponding test in OHLCSeriesTests to enable removal of items from
updated method name from ` invoke ` to ` invokeUrgent ` in ` ClientSchemaService. java ` and modified assertions in ` Comp
replaced the original removal of a JointEdge with a call to the world's destroyJoint method to improve clarity and ensure proper cleanup of
fix nullpointerexception in searchfilter. issearchingphonenumber ( )
[ hotfix ] [ test ] fix sourcereadertestbase and licensing issue
document storage should not throw filenotfoundexception if the document don't exist
added interfaces and classes for defining hooks in the cucumber. runtime package to provide a structured way to execute Java hooks programmatically
refactored flushIfDeadlockRisk method to streamline synchronization logic to enhance code readability and maintainability by reducing duplication
modified the ` setExoOptions ` method to accept a boolean parameter for allowing TVs to enable support for live TV playback in addition to
hive - 15429 : remove user from dmrdecoderstate's getIdentifiercollection ( ) ( jesus camacho rodr
added a static Color instance and modified the ` toString ` method in ` Color. java `, modified imports in ` RailButtonShapes.
updated the logic for enabling null handling in CountAggregationFunction and added a new test for query options in NullHandlingIntegrationTest to enhance null handling
set ` deep ` to - 1 in ` InternalTransaction ` constructor to ensure proper initialization of the ` deep ` variable
bugfix : xml name be not escape in streaminitiation. tostring ( )
updated file creation logic to use a configurable work directory to enhance flexibility by allowing users to specify a custom work directory
added deprecated attribute handling in RuleSetFactory to ensure proper management of deprecated rules in the rule set
fix a bug in amd64directcallop. bind ( bytebuffer, boolean ).
updated the ` minStamp ` and ` maxStamp ` variables to be static final and added new test cases for the ` TimeRange ` class
refactor methods in BitDocIdSet. java to improve code readability and maintainability
refactor connection handling to include SSL connection for JSON emission to enhance security by ensuring sensitive data is not exposed in HTTP connections
refactor conditions in DetailFragment. java and GalleryActivity. java for improved clarity and functionality to enhance code readability and maintainability while ensuring correct
added a check for remote world before filling fluids in BlockTank. java to ensure tanks are only filled when a player is
updated CsharpLibrary. java to handle RuleAnalysisLegacyBuildRuleView to ensure proper handling of DotnetLibraryProviderInfo during rule analysis
of - 1809 : iqpephandler should process the pep service when the packet type be get
add null check for runtime intrinsicGraph to ensure robustness by preventing null pointer exceptions
[ hotfix ] fix checkstyle violation in metrictrackingwindmillserver
pdfbox - 4892 : don't search for objectid / genid when last eof marker be outside of range
added constructors and listeners to the LwjglApplet class to initialize the canvas and notify listeners for the LwjglApplet application
refactor stringRepresentation method to simplify return values for DockerClientConfig to improve readability and maintainability of the code
refactor post processing logic in LdapAuthenticationHandler to streamline password policy application process to improve code clarity and maintainability
updated Int2ObjectCache. java file to improve performance and maintainability of the caching mechanism
added a new private variable ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize this variable to
refactor Readable class to improve code structure to enhance maintainability and readability of the code
danielwagnerhall : fix flaky test that fail on slow machine
updated the icon resource for the share menu item in CaptureActivity. java to ensure the share menu is displayed with the correct icon resource
updated JVM specification version handling in Constants. java to improve compatibility checks based on the Java version
update getNetworkTimeout ( ) logic to correctly handle AbstractMethodError and NoSuchMethodError in non - JDBC 41 compliant driver to improve robustness by ensuring
refactor GenericContainer class to improve code readability and maintainability
replaced Set with List in Enclosed. java to improve performance and reduce memory usage
added multiple @ Override annotations in CentralAuthenticationServiceImpl, ImmutableAuthentication, AbstractCasProtocolValidationSpecification, and AbstractCasView classes to ensure
removed unnecessary whitespace in ChartProvider. java to improve code readability and maintain consistency
fix : use current working directory instead of current file
simplified the return statement in JavacParser. java and added a new class ExtraSemiTest. java to improve code clarity and facilitate
added support for querying users by createdat along with after and before keywords in the User repository to enable users to query users based on their created
updated Test15FloatJNIArgs. java file to improve test coverage and fix existing issues
updated version link in plugins to point to the correct PlotSquared version
nifi - 259 : fix arrayindexoutofboundsexception when decrypt with mockprocesscontext
[ java ] add capability to archive to not be call after callback.
added a null check before merging dependencies in OpProcFactory. java to avoid potential NullPointerException when inp _ dep is null
added a timeout of 10 seconds to the @ Test annotations in SslBytesServerTest. java to improve test stability by allowing the test to
refactor Peer class to improve readability to enhance maintainability and facilitate future development
updated method names and added start and setOffset parameters in RealtimeIndexingCoordinator, StreamProviderConfig, and StreamProviderConfig classes to improve
refactor FailureWatcher to check if exportedData is null before calling writeTo to improve null safety and prevent potential NullPointerException
refactor scrollbar calculations and popup positioning in RecyclerViewFastScroller. java to improve code clarity and ensure correct positioning based on popup visibility
updated command sequence in BuckWSServerPortUtils. java and added a method to check if the tool window is instantiated to ensure compatibility with
added a conditional check for Windows before adding elements to the layout to ensure that the UI elements are only displayed on Windows systems
updated import statements from ` javax. servlet ` to ` jakarta. servlet ` to ensure compatibility with the latest Jakarta
added support for starting and ending crop sizes in QuickstepAppTransitionManagerImpl to enhance user experience by allowing dynamic window scaling based on device profile
added full - screen exclusive mode state management to XWindow and XWindowPeer classes to improve user experience by ensuring correct display behavior based on
added substring handling for played duration strings in StringUtil. java and created a new test class UMSUtilsTest. java to enhance functionality and ensure
added methods to manage DAG credentials in DagUtils. java to enhance functionality for adding credentials for different types of DAGs
( chore ) camel - base - engine : use entryset iterator instead of keyset iterator
trim whitespace from the names array when setting the thread name to ensure the thread name is consistent and avoids leading or trailing spaces
updated the description displayed to " Adding description " in GpsMainActivity to clarify that the description is only added to a file
[ hotfix ] fix checkstyle violation in job. java
added an ` testUnusedType ( ) ` class with abstract fields and a corresponding method in the ` Main ` class to provide a mechanism for
ambari - 15421. add ambari master host info to component nodetool status ( smohanty )
deleted ` EventReaderDeserializer ` and ` EventWriterSerializer ` interface files to remove unused components to streamline the codebase
updated performJoin method to return a list of output records instead of a single record to improve handling of multiple output records during join operations
updated the logic for managing the maximum delegate lock period in the ProposalUtil and DynamicPropertiesStore classes to ensure that the maximum delegation lock period
bugfix : don't allow negative network rate, return null instead
updated CmcExchange constructor to initialize services and apply exchange specification to ensure proper initialization and configuration of exchange services
updated configuration handling and address extraction logic in GossipLocalNode. java and Constant. java to improve reliability of IP address retrieval and
change default value of ` enabled ` to ` false ` in ` clientTpcConfig ` and add unit test for it
update swagger - ui version from 2.1. 10 - 1 to 2.1. 18 in multiple web application classes to ensure compatibility with the latest version of
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular invers to improve clarity and functionality of big integer operations
refactor NamedObjectList to assign a default key when the name is blank to improve clarity and maintainability of the code
updated cleanupEmptyDir method calls to use tmpTableName instead of tmpTableName to improve code clarity and consistency in handling temporary table cleanup
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with kryo in SerializationUtilities. java to enable proper serialization handling for RCFile input formats
added methods to retrieve Java type and category in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host headers in Request. java and improved error reporting for invalid host headers in RequestTest. java to enhance robustness
updated import statements and refactored test method in ShadowTimeZoneFinderTest. java to improve code clarity and maintainability by using ReflectionHelpers for
implemented the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in the ` StandardOp ` class to ensure proper handling of outgoing values
refactor ` SegmentCoreReaders ` and ` SegmentReader ` to use ` si. name ` instead of ` segment ` to improve code clarity
add ability to check if a main thread profile exists during transaction rollup
added error handling for annotation definitions in non - required rules to ensure that only required annotations are processed in valid ABI rules
updated lowercase names in GreekLowerCaseFilterFactory, IrishLowerCaseFilterFactory, UAX29URLEmailTokenizerFactory, and TURk
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
[ ds - 4892 ] deprecate legacy legacy legacy search servlets ( ds - 4893 )
added a list of time zone identifiers in BasicDateTime. java to ensure correct handling of time zones in date - time calculations
updated SurfaceSyncGroup instantiation to include a custom name to improve clarity and maintainability of the synchronization group configuration
refactor GridFsTemplate and GridFsTemplateIntegrationTests to improve file deletion and retrieval logic to enhance code clarity and ensure proper handling of UUIDs
added tests for COLUMN _ TITLE, COLUMN _ TOTAL _ SIZE _ BYTES, and bytes _ downloaded _ so _ far in ShadowDownloadManagerTest
modified character insertion logic in TextField. java to handle both ENTER _ DESKTOP and ENTER _ ANDROID cases to improve text insertion behavior for
fix npe in groupnodeviewviewview # editgroup ( )
refactored afterSetStatements method in BlockLexicalContext and BlockLexicalContext classes to improve code clarity and maintainability by reducing duplication
added hashCode and equals methods to ` IntervalXYDelegate ` and ` XYSeriesCollection ` classes to ensure proper hash code generation and equality checking of
fix clientqueuedisruptiontest. testclientqueuesafail ( )
corrected formatting of method parameters in CloudWatchAppender. java and added a new test class for verifying scripted attribute filtering to improve code readability
changed method name from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` to clarify the purpose of the
added calls to ` HttpMethed. waitProduceOneBlock ( httpnode ) ` and ` PublicMethed. waitProdu
updated language tag canonicalization and added tests for language tags to improve language tag handling and ensure correctness through testing
kvm : ssh - to - agent setting to enable / disable ssh into agent
removed public access modifier from method declarations in SchedulerWhen. java to enhance encapsulation by restricting access to method visibility
updated import statement for PagerSlidingTabStrip in EmojiKeyboard. java to streamline dependencies and improve code clarity
added a condition to check if the filter string does not contain the " - " character to ensure proper handling of special characters in the filter string
updated sort columns label text to use " Natural column order " instead of " natural order " to improve clarity and consistency in UI settings
updated array size from 6 to 6 in Utils. java to optimize memory usage for improved performance
replace ` write ( remoteAddr ) ` with ` htmlEncodeButNotSpace ( remoteAddr ) ` to ensure proper encoding of remote addresses in
change itemstatetriggerhandler subscribe to use smarthome / items / getTopic ( string ) instead of ` ` /''
removed unnecessary synchronized block around formatCache update to simplify the code and improve performance by reducing unnecessary synchronization
refactor file moving logic to use a separate executor service to improve thread management and error handling during file moving
added two methods ` trigger ` and ` period ` to ` WrapTimer ` class to enable periodic task execution based on a specified period
[ flink - 21171 ] [ table - common ] fix type stringutils. writetypeinfo for various table type
added a verbose option to the error setting in AbstractStatusReporter to allow conditional logging of messages based on configuration options
added functionality to toggle the menu conditionally based on app state to improve user experience by ensuring the menu is only active when appropriate
vpn : don't allow vpn connection to be esitablish between same account and customer gateway
fixed error handling in CursorReadingTask to ensure that IllegalStateException is thrown only once to improve error management and maintain error handling consistency
pdfboxThumbnail and PDFFilter classes must check if the PDF is encrypted before creating or extracting thumbnails and text to enhance security and prevent operations on
[ 3.0 ] fix the issue that can't get a child from the zk if the client be remove from the list of child (
updated AnomalyDetectionResource and AnomalyDetectionResourceTest files to enhance anomaly detection functionality and improve test coverage
updated the method for deleting items in HostsList. java to improve code clarity and ensure proper deletion of items
updated Java6Assertions and Conditions classes to improve functionality and maintainability of the code
updated the ` replaceOrderBulk ` method to return a ` List < BitmexPrivateOrder > ` instead of a ` Collection < Replace
renamed the method ` enterDefault ` to ` enterIdentNode ` and added a new method ` enterFunctionNode ` to improve method clarity and
added a new ` J9ConstantHelper ` class and updated ` ObjectHash ` to use it for constant value retrieval to improve code clarity and
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to validate concurrent modification exceptions during testing to ensure robustness against concurrent
[ gate ] added functionality to send offline roster item to a transport session.
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator. java ` and added a method in `
updated method call formatting in FunctionObjectCreator. java to improve code readability and maintain consistency
added null check before initializing ExtensionTypeCustomDesers in MessagePackFactory to avoid potential NullPointerExceptions during deserialization
remove the system property " mockserver. logLevel " and set it to " WARN " to disable log level for improved debugging
removed the @ Test annotation from AbstractRegistryFactoryTest. java to streamline test cases for better clarity and maintainability
removed unused imports and implemented the createJetty method in AbstractSolrMorphlineZkTestBase. java to streamline the codebase and
updated scoreMap to use a termScoreMap and renamed related variables for clarity to improve code readability and maintainability by using a more descriptive
updated data comparison logic from bitwise NOT to bitwise NOT to allow for negative data values in U64. java to improve data integrity by ensuring
update the headless style in MainViewModel. java to improve the visual appearance and consistency of the UI
added a check for ` didSupportDarkText ` in the notifyChange method to ensure proper handling of dark mode notifications
[ hotfix ] [ runtime ] fix non - force enqueuing of checkpointrequestdecider
updated import statements, modified maximum pool size, and increased timeout duration for idle threads to improve thread management and allow more time for idle threads
changed filtering method from ` filter ` to ` anyMatch ` in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver. java ` to improve
added test requirements for Windows ServerCore container in OpenCVImageFactoryTest to ensure tests do not fail on Windows ServerCore container
http : / / issues. apache. org / jira / browse / amq - 4798 - fix for http : / / issues.
modify the getReturnValue method to handle Throwable in its return message to improve exception handling by converting the return message to a Throwable object
added a Repeatable annotation for the Issues class to enhance the functionality of the Issue class by allowing it to be annotated with @ Repe
updated user mapping from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor. java and its test
fix : connect to socks proxy if system property ` ` socksproxyhost'' be set
[ hotfix ] [ runtime ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from the ReflectionUtils class to streamline the code by eliminating unnecessary dependencies
replace HashSet with LinkedHashSet in SslContextFactory. java to ensure consistent ordering of protocols and includeCipherSuites
added logic to retrieve the system resource if the resource matches the system resource location to ensure that system resources are properly initialized before use
increase plaintext segment size from 16 to 16 in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel classes to
added a test for invalid fallback routing in ServerMvcIntegrationTests to ensure proper exception handling for invalid fallback scenarios
use a default sslcontextfactory in httpclientbuilder. build ( ) to allow all hostname verification
removed the resetBytesReadCounter ( ) method and added a setSizeLimit of 0x7FFFFFFF to optimize memory management by setting a size
move isPreferAES ( ) and setPreferAES ( ) to ProtectionPolicy. java to ensure proper initialization of AES settings
( chore ) camel - opentelemetry : do not use system. out. println
added a new test method ` testLoadBalancerInstanceOperations ` in ` ElbIntegrationTest. java ` to verify the functionality of loading balancer instances
changed method name from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver. java ` to clarify the purpose of the method
added error handling for file creation in DiacriticTest. java to ensure graceful failure when file creation fails due to configuration issues
hhh - 146183 followonlockingtest failure on oracle 11 when upgrade to hibernate 5.2. 1
updated file handling logic in TextureUnpacker. java to improve error handling for missing atlas images and file handles
added locking mechanism around service changes in AmbariManagementControllerImpl. java to ensure proper thread safety when modifying service states
refactored methods in FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource to improve code clarity and maintainability
added unit tests for closing statements in TestJdbcDriver2. java and refactored resource management in HiveQueryResultSet. java and HiveStatement
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4762 and relate
refactor database response handling in ClusterSchemaManager to ensure pre - deleted databases are removed to improve data integrity by preventing data loss during schema retrieval
added a check for " chunkedWriter " before writing to the pipeline in Http1xUpgradeToH2CHandler. java to ensure proper
added a delete item confirmation dialog in EnhancedBrowseFragment and FullDetailsFragment to ensure users confirm deletion of items before data refreshing
refactor RuleFinder to implement RuleBank and update related classes to improve rule management and encapsulation in the CSS parsing process
add a try - catch block around the doFinal method call in JcaTlsCrypto. java to handle potential exceptions and improve error handling
added two new Java files, TestMonomorphicObjectCall. java and Object. java, to facilitate testing of monomorphic
replaced the ` removeMetaDataSource ( session ) ` method calls with a ` toFront ( ) ` method in ` DataBrowser. java `
hbase - 15490 fix nullpointerexception in defaultmemstore when seek ( ted yu )
[ hotfix ] fix checkstyle violation in taskmanagerservicesconfiguration
modify alter timeseries statement to set'alter view'to true
fix ` ` matchtext'' condition, add unit test
added error handling when retrieving routingTableBuilder configuration to improve stability by preventing application crashes during routing table retrieval
add miss null check to the body in order to avoid nullpointerexception
camel - test - infra - jms : use char [ ] instead of string
bug cs - fix for apiserver. invalidate ( ) call in apiservice.
removed sorting and equality checks from the Counters class to simplify the code and improve performance by eliminating unnecessary complexity
modified the ` initialize ` method in ` BasicTumbleStepper ` to accept a ` original ` SimulationStatus ` and set warning
truffle : fix race between getcurrenttimemillis ( ) and gettimestamp ( ).
updated PrettyPrinter. java to include a JCTree variable before printing expressions to improve code clarity and maintainability by reducing redundancy
lucene - 9752 : fix nullpointer bug in lrudictionary.
replaced the explicit filtering logic with a dedicated checkFiltering method to improve code clarity and maintainability by encapsulating filtering logic
test : migrate dns to junit 5 ( # 4519 )
added a new class NutchServerInfo with start date, configuration, jobs, and running jobs to encapsulate and manage server information related to
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter ` to enhance token filtering
added timestamp handling in CqlInserter and ThriftInserter, and updated SettingsColumn to include a timestamp option to improve timestamp management and ensure
updated DSAParameterGenerator to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and ensure consistent use of BigInteger type
refactor NumberUtils and Numbers classes to use double and long bits instead of static variables to improve code readability and maintainability by reducing hardcoded values
updated masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for new IP address
added SQL state check for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to ensure correct handling of SQL exceptions related to data integrity violations
remove setsetzeroiffound ( false ) from removeresourcetopic method signature ( # 1187 )
added methods to add tabs and insert tabs in Tabs. java to enhance tab management by allowing dynamic tab creation
replace array size specification with zero - length arrays in multiple Java files to improve performance and reduce memory usage during array creation
[ hotfix ] [ test ] make mockenvironmentbuilder expose taskmanagerruntimeinfo
refactor conditional checks in MavenVisitor. java for clarity to improve readability and maintainability of the code
updated mock name constants from " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE " and added mock selector data and rule data refresh
added a new test class FormatCheckingTest for verifying class format errors to ensure that the application correctly identifies and reports illegal class names
updated line number assignment logic in CodeGenerator. java to improve accuracy of line number assignment
added exception handling for service property retrieval to improve robustness by catching potential exceptions during configuration retrieval
added methods to create radiobuttons with commands and images to enhance the functionality of the RadioButton class to support toggle commands effectively
updated the cache initialization in LRUCache and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to optimize cache size
changed the access modifier of DEFAULT _ CAPACITY from private to public and updated its usage in ChannelParser and MessageBusParser to allow external access
fix npe when use jmx in camel - osgi bundle
load mode resource from a file, fixes # 275
[ hotfix ] [ test ] add log to iomanager when shutdown hook be already in progress
refactor RobolectricTestRunner to replace projectRoot with androidManifestPath to improve clarity and functionality in handling Android manifest paths
[ flink - 3394 ] [ runtime ] fix npe in abstractmessageproducinghandler when not propagate header
refactor CompareMode class to improve readability to enhance maintainability and facilitate future feature additions
added ` HasTests ` interface to ` Arg ` class and implemented ` tests ` method in ` RustBinaryDescription ` and ` Rust
updated drawable resource references in FileMessageVH. java to improve clarity and consistency in drawable resource naming
updated OnExitTest. java file to improve test reliability and maintainability
added a method to recreate the taskbar when user preference changes to ensure that the taskbar is refreshed when user preference changes
refactor HeapDump. java to include conditional logic for loading the heap to enhance performance by avoiding unnecessary method calls for unsupported VMs
camel - mybatis : ensure session be close even if commit fails.
simonstewart : implement ability to switch to the window and quit the current ie driver
updated annotations and variable declarations in IteratorToFor. java to improve type safety and clarity in the code
set the application's state to unavailable to improve application stability during state transitions
updated position and limit calculations in ByteBuffer and StringCharBuffer classes to improve accuracy of position and limit calculations
removed the ` toUri ( ) ` method call from the split method in ` ConditionalResolverMergeFiles. java ` to simplify the split logic by
added setEmpty methods to various array data classes and adjusted setEmpty method implementations to improve array handling and ensure consistent behavior across different array types
changed enum visibility from package - private to public in VirtualAuthenticatorOptions. java to allow access to these enum from other packages
fix indexoutofboundsexception in testmultPhrasequery
fix : ticket with offline payment method should not be assign to payment
added a new thread variable and refactored exception handling in HttpChannelState. java to improve error management and ensure proper handling of onTimeout
replaced printStackTrace ( ) with logger. warn ( ) in SslBytesTest, SocketChannelEndPointTest, and TrackingSocketTest, and added Queued
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
update read method to use ` consistencyForPaxos ` when ` consistencyForPaxos ` is ` LOCAL _ SERIAL ` to
added support for the " Home " model in the HeosDiscoveryParticipant class and incorporated a serial number in the HeosPlayerHandler
added a wait attribute and related getter / setter methods to PlainSelect, and created a new Wait class to encapsulate wait functionality within the SQL parser
refactor Neo4j node and edge data handling to use AttributeController for better attribute management to improve code clarity and maintainability by centralizing attribute
added null check for from. getDomain ( ) in SessionManager. java to ensure proper handling of null serverName
nifi - 4985 : move rocksdb class to controller package instead of metronome
updated the method call to retrieve the result string for clarity to improve code readability and maintainability by using a more descriptive data source
danielwagnerhall : move the javascript context to the end of the page, not the end of the page.
( chore ) camel - cxf : fix test failure on mac o x
added a check for a new HColumnDescriptor before modifying the column in LoadTestTool. java to ensure correct handling of column modifications based on
modified the Texture class to implement Disposable interface to enable disposal of texture objects that are not disposed
added null checks for ` tldBundleLocation ` and updated imports from ` WebappRegistrationHelper ` to ` WebBundleDeployerHelper `
ensure that -- genesis - file be specify if goquorum privacy be enable by mainnet
replace IOException with Throwable in HttpInput. java to improve error handling by suppserving the original error state
added country check for JP in LocaleTest. java to address issues caused by country changes in the JVM
replaced ` Wrapper. Wrapper ` with ` HostResponseWrapperWrapper. Wrapper ` in multiple service classes to ensure compatibility with the updated API structure
updated query equality and hash calculation logic in FilteredQuery. java to include boost to ensure correct handling of query equality and hash calculation based on boost
reformatted the constructor signature for better readability to improve code clarity and maintainability
make it possible to show the symbol table in the text edit advanced panel
added a new file TestCMSClassUnloadingDisabledHWM. java to test CMS class unloading behavior to ensure that CMS class un
added a check for non - empty entities before creating the ItemTossEvent to ensure that the ItemTossEvent is only created when there
rename ` KeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and update method parameters accordingly to improve naming consistency and align
fix compile error in compactionstest. patch by jbellis
updated resource type handling in MiniAapt. java and added a test case for invalid item resources to improve error handling and ensure proper parsing of
added support for the SPEL operator in the OperatorEnum and created a new SpelJudge class to enhance the expression judge functionality for
updated the validation check for ordinalityType to use equality instead of equality to ensure correct type validation for BIGINT type
bugfix # 209188, use lookup from o. a. awt. eventqueue to get the default profile
updated import statements in ConscryptTest. java to ensure proper usage of assertions in tests
updated attribute resolution logic in AttributeResolution9. java to improve error handling and resource name resolution
updated source and target options in SetupHid. java to ensure compatibility with new configurations
changed access modifier of ` extractMetadataColumns ` method from private to public and refactored project handling in ` PushProjectIntoTableSourceScan
updated the way localized names are retrieved in the AboutActivity class to ensure consistent order and improve readability of the displayed names
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a conditional check to refresh based on live streaming settings to ensure refresh behavior is only enabled when live streaming is enabled
added the exception object to the MappingException when creating the AuditStrategy to provide more detailed error context for debugging purposes
( chore ) camel - ftp : use awaitility in test
replaced raw types with parameterized types in CompositeType and DynamicCompositeType to enhance type safety and eliminate unchecked warnings
added transport support methods to GitClientApplication and updated repository URL handling in RepositoryUrlPanel to enhance transport support functionality and improve code clarity
added delegation names and updated the getDelegatorName method in multiple input consumer classes to improve logging clarity and ensure unique identifiers for various input consumers
added null check for mavenMetadata before retrieving available versions and refined version upgrade logic to improve robustness and prevent potential NullPointerExceptions during version
added check for " Large Page Support " in TestLargePageUseForHeap. java and updated log message format in TestLargePageUseFor
skip event migration when cloud _ usage db don't exist
( chore ) camel - broker : fix test on window
added a new test class for ObjectStreamClass functionality to ensure proper serialization and deserialization of ObjectStreamClass objects
removed unnecessary check for'myself. getDataCenterInfo ( )'before proceeding to simplify the conditional logic for better readability and maintainability
changed error log level from LOG. error to LOG. warn in OpenTracingTracer. java to provide a warning level for tracing data capture
added a ` toString ( ) ` method to the ` Generator ` class to provide a readable string representation of the generator instances
refactor URI handling to simplify variable declarations and improve quote logic to enhance code readability and ensure correct parsing of URIs
added a check for the existence of resources in ClusterControllerImpl. java and created a corresponding test case in ClusterControllerImplTest. java to
refactor AccepttoApiUtils to improve error handling and logging for API responses to enhance robustness and clarity in API response processing
updated VertexBufferObject. java to handle Android version compatibility to ensure compatibility with devices running Android versions that requireDirect rendering
updated SybaseASADatabase. java file to improve functionality and maintainability of the code
introduce a ` forceProjection ` flag in the ` HashJoinInfo ` class to enable backward compatibility with projections during hash join operations
added a getter method for StringDistance in SpellChecker. java to provide access to the sd variable for string distance calculations
added FLAG _ IMMUTABLE and FLAG _ CANCEL _ CURRENT flags to PendingIntent methods in AndroidImplementation. java to enhance permission management for PendingIntent operations
added methods to append read column IDs to configuration settings to improve flexibility and maintainability of column ID configuration handling
updated upnp address retrieval from ` getUPNPAddress ( ) ` to ` getIPv4MulticastAddress ( ) ` to ensure compatibility with
added multiple instances of DisplayTemporaryToast ( ) in SavedExperiments. java to ensure a toast is displayed to the user
[ scb - 2197 ] fix moduleinfo. getversion ( ) return null when version be not specify
add a new test class RawSerializationTest for Gson serialization tests to ensure proper JSON serialization of complex object types in tests
simonstewart : implement sslcertificategenerator for remote control test
replaced the direct iteration over the replies list with a for - loop and added padding for the status view to improve code readability and ensure proper layout
increase timeout in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for tests to complete successfully
added a test method to verify payload handling in NGramFilters to ensure that the PayloadAttribute payloads are correctly processed during token processing
updated AclImpl. java file to improve Acl functionality and maintainability
added tests to verify array sizes for different and fixed seed scenarios in EasyRandomTest. java to ensure that different array sizes are correctly generated and
cloudstack - 2120 : fix findbugs warning in citrixresourcebase
added a thread - local variable ` __ tryWriteAgain ` and modified its handling in ` SslConnection. java ` to improve thread safety and
refactor actor retrieval logic to use the actor's parent directly to improve accuracy in determining actor visibility
added a log statement to indicate when a rolling - update step fails on deployment - group name to improve error handling and provide debugging information for deployment
[ hotfix ] [ table - common ] fix javadoc error in sinkprovider and datastreamscanprovider
added handling for AuthenticationFailureUsernameNotFoundEvent and updated user retrieval logic to improve error handling and provide user feedback during authentication failures
modified AtMostXVerificationTest. java file to enhance verification testing accuracy
updated defType assignment from " lucene " to " LuceneQParserPlugin. NAME " across multiple files to align with updated naming conventions and improve
updated SimpleDateFormat instances to use Locale. US for locale - specific strings to ensure consistent date formatting across different locales
added isInitialized ( ) method to ILanguageServer and implemented it in JavaLanguageServer while creating a new LocalsCompletionTest _ template. java
updated test parameters and variable names in ClientAPITokenIntegrationTest. java to improve clarity and consistency in test logic
added beginTransaction ( ) and endTransaction ( ) methods to DatabaseAdapter and modified transaction handling in GncXmlHandler to improve transaction management and
replaced byte array reading with ByteArrayOutputStream for byte array handling to improve performance and memory efficiency when handling file data
fix exception message in messagingtemplate if client don't receive
add a method to check if a source file is a compilation unit to ensure that only valid sourcefiles are accepted for automatic formatting
added maximum buffered documents and a RAM buffer size in TestIndexWriterMergePolicy. java to optimize indexing performance by reducing memory usage
clear the wits list in Manager and add unit tests for updating witnesses to ensure witness capsule data is properly updated and verify
added error handling for iterator access in CopyOnWriteMap to ensure safe iteration and handle NoSuchElementException gracefully
[ log4j2 - 4892 ] change log level to info ( not info ).
updated authentication metrics in BasicAuthIntegrationTest. java and refined shutdown handling in DaemonStream. java to improve test reliability by ensuring
replaced HashMap with LinkedHashMap in DependencyUtil. java to maintain insertion order of nodes
add an internalerrormapper interface to jerseysupport to allow internal error to be log.
refactor header validation logic in Http2TestBase. java to improve readability and maintainability of the code
added conditional logic to map system properties based on Java version to enhance system property management by distinguishing cache, class path, and direct memory sizes
updated method signatures from ` String ` to ` CharSequence ` in ` StringSubject. java ` and added corresponding tests in ` StringTest. java
add jvm. countertime ( ) and. getClassId ( ) to the list of known object types in CheckGraalIntrinsics
renamed IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory variable from ` ds ` to ` ds2 ` in ` PersistenceManagerProvider. java ` to ensure the correct datasource is
updated DeploymentOptions. java to enhance deployment options flexibility
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` instead of a ` ConstantState ` to simplify the drawable parameter
updated resource handling in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve resource management and simplify string reading
added support for coalesce operations in the RexNodeConverter class to enable the coalesce operator to correctly handle null values in expressions
camel - 8818 : fixed unit test error in camel - hl7
updated proxy factory to use current thread's context class loader to ensure proper context loading for the proxy factory
updated DefaultDateTypeAdapter constructor to include the'final'keyword and made the'format'parameter final to enhance code clarity and ensure thread
updated formatting of parameters in DocumentUtil. java to enhance code readability and maintain consistency
replaced direct assignment of ` uri ` with a method call to ` setURI ` and updated query parsing logic to streamline query handling and ensure
removed the filterOldEntries ( ) method from FeedRefreshUpdater. java to streamline the feed entry filtering process
change log level from fatal to warn in fshlog. append ( )
modified NodeMap class to implement Iterable < T > and refactored iterator and iterator methods to improve type safety and enhance iterator functionality
updated import statements and variable names from PredicateDefinition to subPredicate in DiscoveryClientRouteDefinitionLocator. java to improve clarity and consistency in predicate handling
added a check for non - empty fields before adding aggregate operations in MongoRecordReader. java and improved return logic in RexToMongoTranslator. java
of - 1809 : defaultadminprovider should add admins to the list of active admins.
replaced usage of MultiFields with SolrIndexSearcher in multiple files to improve compatibility with SolrIndexSearcher for term retrieval
camel - 13663 : optimize constantbeanholder to not use tostring ( ) method.
updated the logic for determining the primitive type in GroovyParserVisitor. java to ensure correct identification of primitive types and improve code clarity
remove hashcode ( ) and equal ( ) from frameinfoqueryresult
camel - seda : fix test failure on slow ci server
added a new package - info. java file in the org. apache. lucene. core. testresources package to provide package - level documentation
update read length calculation logic in MessageUnpacker. java to ensure correct handling of buffer position during unpacking
updated the import statement for Nullable from common to core to ensure compatibility with the latest Micrometer library structure
updated SQL query to filter results based on user serial to ensure icon retrieval only for valid user data
( chore ) fix typo in defaultmqproducerimpl
fix whitelisting of module - info. class resource ( # 1188 )
cloudstack - 410to420 : baremetal foreign key fix and test case
removed IJava2DRenderer interface and refactored Java2DRenderer class structure to simplify the class structure and improve code maintainability
added onTearDown method to DefaultAudioSink to handle onOffloadBufferEmptying to ensure offload buffering is triggered when the listener is
refactor upstream task scheduling to use a ScheduledThreadPoolExecutor to improve efficiency and maintainability of the code
refactor StreamType class to improve code readability to enhance maintainability and reduce complexity
updated assertion message in Recording. java to include the expected output to provide clearer context for the assertion failure
updated user authentication handling in FilestorePage and RootPage classes to ensure secure access to view pages and improve user navigation
camel - elasticsearch : ignore test that fail on slow ci server
refactored the ` accept ` method to include the declaring class check for ` Lifecycle ` to ensure only valid ` Lifecycle ` classes are processed
update button texts in OfferBookChartView to use buy / sell prefixes instead of leftButtonAltcoin and rightButtonFiat to improve clarity
camel - 2618 : camel - restlet should not allow method base on consumer. thanks to daniel dai for the patch.
refactor block height parameter types in createNextBlock methods to improve clarity and consistency in time calculations
remove serializable from btreenodemapjava and concurrentskiplistmaptest
fix npe in logger. error (.. )
reformatted conditional check for command mode check in Main. java to improve code readability and maintainability
changed the method call from ` mFilesAll. indexOf ( file ) ` to ` mFiles. indexOf ( file ) ` to correct the
deleted the PlainVerifier. java file to remove unused code to streamline the project
added a condition to close system windows when triggered from an AltTab to improve user experience by closing obsolete system windows when triggered from an Alt -
updated dialog behavior in DialogFragmentIT and OCFileListBottomSheetDialog to enhance user experience by ensuring proper fragment behavior during dialog display
updated MimeUtil method to parse charset with UTF - 8 encoding to ensure proper handling of character encoding in email parsing
added a call to the superclass's deinitialize method to ensure proper initialization during text fields
replaced custom serialization test method with TestUtilities's serialised method to simplify serialization process and improve code maintainability
updated preRange parsing from " previousClause " to " previousUntilLastClause " and modified the instantiation in GroupByFillDataSet to ensure accurate
updated array size validation logic and added handling for negative lengths in JAXWSExceptionBase. java to ensure proper exception throwing for negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4517 )
updated thread join duration from 10 seconds to 60 seconds to allow more time for thread execution before proceeding
[ hotfix ] [ test ] fix default scheduler configs for legacy mode
added ` @ Implementation ( i18nSafe = false ) ` and ` setTitle ` methods to ` ShadowActivity `, ` AlertDialog `
updated imports and changed the logger variable from Log to POILogger to align with the latest logging framework and improve logging consistency
modify alarm handling in InstarHandler to include channel state and format alarm data to improve alarm processing accuracy and clarity in alarm data processing
update realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime realtime
updated enum declaration formatting in Option. java and Response. java to improve code readability and maintainability
updated the method for finding Java Java files to use a new location variable to improve code robustness by ensuring the correct location is used for
add -- project - name option to the create - additional - settings
added a new test class DeprecatedStubbingTest for stubbing testing to ensure correct behavior and behavior of stubbing methods in Mockito
updated import statements for DispatcherType in ITBraveServletFilter. java to ensure compatibility with the latest servlet API changes
add support for nml + vs. nml + vs. np during treebank
add system property to allow rsa key exchange in fips mode
removed the use of the variable ` output _ reader ` in multiple files to ensure proper resource management and avoid potential memory leaks
[ pubsub ] fix sdma not delete the access token when the thing be delete
replaced ` AGGRESSIVE _ EASE ` with ` EMPHASIZED ` in ` TaskbarEduView. java `
added handling for UpdateRegionLocation in ConfigPhysicalPlan. java and improved logging in ProcedureManager. java and DataNodeInternalRPCServiceImpl. java to
added a new file ` FileDialogLeakTest. java ` to test the finalization of ` FileDialog ` to ensure proper resource management
refactor package structure and import statements in TestOpenTableInCoprocessor. java to improve organization and clarity of the code
svm annotate uninterruptible method with @ uninterruptible in trufflefeature.
[ flink - 26011 ] [ table - common ] clean up unused split method in pbcodegenrow
corrected a typo in the conditional statement from " if ( numDims > 1 && dims [ 1 ]. disi = = null "
fix flaky test on behalf of exoplayer
use jvm _ spec _ version to determine java 9 ea support
( chore ) camel - test - infra - filerepertest : fix fail test
updated end - to - end encryption key existence check from isFalse ( ) to isTrue ( ) to ensure end - to - end encryption key is
added support for action bar navigation in DirectMessageConversation to enhance user experience by allowing navigation to the main activity
added GET _ USER functionality and updated PROTOCOL _ VERSION to 6 to support user - related requests
added a system property check for the AMD64 architecture in TestJdbcPluginWithMSSQL. java to ensure compatibility with 64 - bit systems
update strategy's notFound method to use originalStartClass to ensure consistency with the original start class handling
improve error message and add local for parameter register number in try - with - resources.
no need to call getresponse ( ) twice in testasynccontextimpl
jbrules - 2250 : fix nimbus l & f's look and feel
updated regex in AppPage. java to remove trailing whitespace to improve code readability and consistency
refactored the handling of UI reset animations to use final variables to improve code readability and maintainability by reducing redundancy
dumpedprivatekey : improve error message
update todo to reflect new offer data
updated milestoneParameters initialization to use newOpenTicketsParameter or newRepositoryParameter based on the milestone'status
pipeitemswood : change the default battery value from 640x0 to 80x80
added a new parameter ` blueprintName ` to the ` getClusterKey ` method and updated the corresponding method to include the blueprint name and revision to
initialized ` downgradeAllowed ` to true in ` UpgradePack. java ` and added a test for it in ` UpgradePackTest. java `
update fEntityScanner method calls to use " ELEMENTSTART " and " ATTRIBUTENAME " instead of " ATTRIBUTE " to ensure correct handling of character
[ lwjgl ] emulateystemloadlibrary to allow the library to be load from the class loader.
replaced the use of a comparator with a direct call to getAppNameComparator ( ) in AppsCustomizePagedView. java and LauncherModel
ensure output stream be always close and create parent directory if not already create
updated the doTest method signature and assertion message in TestSecretKeyCredentialHandler. java to enhance clarity of test cases and improve assertion formatting
tidy up and simplify the RouteBuilderfinder class to improve code clarity and reduce dependency on the Spring framework
[ prometheus ] correct the description of metric option
hbase - 15421 fix intermittent failure in testfulllogrestruction
added ` reuseAddress ` and setTrafficClass ` methods to ` DatagramSocketOptions ` to enhance flexibility in configuring socket options
fix server shutdown message not work
douniaberrada : remove deprecate Locatable interface in the internal package
updated error message to clarify that the field must be either indexed or docValues and retrievable to improve clarity and accuracy of error messages regarding
replaced equalityPredicateColumns with predicateColumns and refactored predicate evaluation logic to improve clarity and efficiency in predicate handling
removed redundant line breaks in ` HelloMessage. java ` and ` HandshakeHandler. java ` to improve code readability and maintainability
fixed formatting of closing brace in Navigator. java to improve code readability and maintain consistency
changed access modifier of static fields from private to package - private in RecordReaderFactory. java and added a new test class RecordReaderTest.
added support for " GREATER _ THAN _ EQUAL " and " LESS _ THAN _ EQUAL " queries in MongoQueryCreator to
refactor group by clause validation logic in CalciteSqlParser. java to improve clarity and correctness of group by clause handling
refactored MappedByteBuffer and FileChannelLinesSpliterator to use AtomicInteger for memory management to improve resource management and prevent memory leaks
refactor code to use a local variable for validator in LdapUtils. java to improve code readability and reduce redundancy
added schedule ( ) method to CircuitBreakerImpl and modified testCircuitBreaker to include ExecutionException and TimeoutException to improve circuit breaker wait mechanism
removed the ` FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS ` condition from the intent flags to simplify the intent configuration by
use ` ` progressbar'' a configuration property in submission
updated the @ DisplayName annotation from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to clarify the purpose
added synchronized keyword to the addExportedCount and getExportedCount methods to ensure thread safety during concurrent access
updated import from IntRangeUtil1 to IntRangeUtil. requireNonNegative to align imports with new package structure
updated character validation and string appending logic in HttpParser. java and added a new test for encoded headers in HttpParserTest. java to improve
changed the layout resource from trends _ activity to configuration _ activity to align the application with the new configuration screen layout
update print statement in SLWTTextListing. java to include the position of the element to improve output clarity by including the exact position in the
refactor the ForceLeaderTest class to introduce a new ForceLeaderWithTlogReplicasTest class to improve test reliability by allowing more time for
updated thread management logic to improve performance and reliability of thread operations
added enumerator for template suffix and force template mode to improve flexibility and control over template file naming
camel - cxf : use equal ( ) to check for xmlconstants. xmlns _ ATTRIBUTE
reformatted the constructor and removed unnecessary whitespace in YamlRepresenter. java to improve code readability and maintain consistency
updated date formatting in ToChar. java and added a new test for the TO _ CHAR function in TestFunctions. java to improve formatting of
added support for valid transaction and write ID configurations in GenericUDTFGetSplits. java to ensure proper handling of transactions based on configuration settings
replaced ` ArrayList < String > ` with ` Collections. emptyList ( ) ` in ` JsonSerDe. java ` to improve code readability and
add extra method to check if a book exist before load data
modified the formatting of the ` SSTDeserializer ` and added a new test for string table creation to improve code readability and ensure proper handling of
refactor grid column retrieval to use a constant value from AppPreferencesImpl to improve code maintainability by centralizing default grid column preferences
updated error message from " empty - differences in line breaks? " to " match line contents match, but line - break characters differ " to
ensure that clingmediasource do not consume key until endof _ source
updated the API path from " / api / margin / v3 / accounts " to " / margin / v3 / accounts / { instrument
corrected comparison formula in LineUtilitiesTests. java to ensure accurate detection of line boundaries within epsilon
added error logging for varargs and old array syntax classes to improve debugging and support for varargs and old array syntax
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
added methods and improved variable context handling in the VariableContext class to enhance functionality to support method invocation in varied variable contexts
add test for invalid compilation and profile string JSON format in the experiment parser
updated position handling in Piece. java and SharingPeer. java to improve code clarity and maintain consistency in position management
added response timeout functionality to NettyRoutingFilter and HttpClientProperties to improve handling of HTTP requests with a specified timeout duration
refactor ` getNativeLinkTargetMode ` method calls to use ` getTargetForPlatform ` instead of ` cxxPlatform ` to improve consistency and clarity in
( chore ) camel - main : add unit test for mainrestconfiguration
added ` visitFieldAccess ` method to ` ASTConverter ` and updated ` RexNodeConverter ` to handle ` ExprNodeFieldDesc ` to improve
replaced the direct reference to ` QueryLogEntry. values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES `
fix relative uri construction when no proxy
updated certificate handling logic in PKCS12KeyStore. java and StoreSecretKeyTest. java to improve clarity and correctness in managing trusted certificates
added reflection access checks in Bootstrap and ReflectionCheckLinker classes to enhance security by verifying access permissions for reflection classes
changed the access modifier of constructors in CollisionMap from public to package - private to allow access to these constructors from other packages
deprecated getRawInputFromTransactionInput method and added null check to improve code clarity and ensure input is not null
refactor logging level parsing to use a switch statement to improve code readability and maintainability
remove the region _ id variable and replace it with the default value in the account creation table.
added support for handling EncryptedDocumentException in OldExcelExtractor to ensure compatibility with old Excel files by throwing an appropriate exception
svm : add -- add - exports = org. graalvm. nativeimage. builder / com. oracle. svm. core. jdk
updated visibility setting for the image holder in TimeLineCursorAdapter to improve user interface by ensuring the image is displayed appropriately
increase sleep duration in BatchingStateChangeUploadSchedulerTest from 10 to 1 second to allow more time for tests to complete successfully
modified file handling in ShadowContext and added methods to delete temporary files in ContextTest to improve directory management and ensure proper cleanup of temporary files
refactor exception factory initialization to conditionally use Class. forName ( " org. opentest4j. AssertionFailedError " ) to improve flexibility
increased WAIT _ TIME _ MS from 10000 to 60000 to allow more time for waiting tasks
replaced the ` CLAIMS ` import with a wildcard import and added support for AUD extension in ` ConnectOAuth2RequestFactory `
camel - 17441 : camel - kafka - remove default value a it break on first error by default.
added a new static final integer selectableItemBackground to the R class to define a selectable item background for user interaction
replaced individual imports for trade - related classes with a wildcard import and added a method to place stop orders to streamline import statements and prepare for
updated event type assignment logic in TxnSetOperation. java to ensure correct event type handling when the record is null
added a new class ResumableRandomAccessFileListener for handling resumable random access files to improve file handling mechanism in resumable
change class name from ` AccessLogValve $ 3 " to ` AbstractAccessLogValve $ 3 " to clarify the purpose of the class
added support for handling multiple HSSF formats in HSSFDataFormat. java to ensure proper data handling and formatting in the workbook
deprecate flinkkafkaproducer in flinkkafkaprocers
updated the calculation of compressedChunkLength in CompressedInputStream. java to ensure compliance with the maximum compressed length requirement
camel - redis : add an idempotent repository to do string operation atomicity
fix containerrepair use metadata here instead of damage.
[ mng - 4481 ] fix regression in legacylocalrepositorymanager when layout be not local
add system. exit ( ) if taskmanager be not start.
added prompts for " mvn deploy " command in AbstractArtifactResolutionException. java to enhance usability by providing detailed artifact information during deployment
updated the method for obtaining the temporary path in UploadFileOperation. java and added a new getInternalTemporalPath method in FileStorageUtils. java
updated import statements and added a method to find FeedEntryStatus by entries to improve code organization and enhance functionality for fetching feed entry status
added thread execution management in ContextImpl. java and refactored variable usage in BlockedThreadCheckerTest. java to improve thread safety and
updated the ` instantiate ` and ` convert ` methods to accept a ` String ` parameter and improved null handling in the ` FormatterConverter ` class
added SDK version check before parsing vCards to ensure compatibility with devices running Android O and above
refactor to assign remote address and hostname to the'this'variable to improve code clarity and encapsulation
added a null check for the realClass in Robolectric. java to ensure that a valid shadow class is present to avoid runtime errors
enable mutual authentication by default in netty and example netty ssl context
updated character encoding from ISO _ 8859 _ 1 to ISO _ 8859 _ 1 and added a test for requesting a plain HTTP endpoint that throws SSL
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility of these methods for subclasses
refactored code formatting in FrameRenderer and PageChangeListener to improve readability and maintainability of the code
updated warning message from " no address / subject / text " to " no from / text " in CommunicationsManager. java to clarify
# 3952 - optimize query for bean with draftable
added error handling for IOException during file transfer to improve robustness by retrying on unavailable resources
fix squid : s1155 - redundant array initializations in executablefactory. java and zipfolder. java
fix javadoc warning in camel - core
fix ` ` unable to attach a file'' error when use a custom working directory
updated LoadOptionsBuilder to include schema info level and load options to enhance flexibility in schema crawling options
changed package and method name from org. openj9. test. loadLibrary to org. testng. test. loadLibrary and added
modify TestReader to return null instead of throwing an exception to simplify error handling by returning a placeholder instead of throwing an exception
added name, enabled, and expanded properties to the ProjectProperty class to ensure the project property's name and enabled state based on the provided
encapsulate ConnectionInfo instantiation in a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
[ hotfix ] fix typo in datastreamjob javadoc
refactor error handling in TestContentProvider to use try - with - resources for better resource management to improve error handling by avoiding potential resource leaks
camel - 1256 added apache snapshot repository and fixed the build error in my box ( window jdk1.5 . 0 _ 13 )
disable h2 - 14 cipher by default when use http / 2
updated method and parameter symbol handling in LambdaToMethod and ClassFileVisitor to improve clarity and correctness in synthetic parameter processing
loosen the pattern in coordinationtransformer when look at the value of WHNP ( WP )
increased the timeout duration of the copyURLToFile method from 5000 to 60000 to allow more time for file copying operations
added a setSlop method to mpq to allow dynamic parsing of phrase sloes
increase sleep duration in LongPressMouseListenerTest from 10 milliseconds to 100 milliseconds to improve test reliability by allowing more time for mouse interactions
updated the default port from 8188 to 6188 in FlumeTimelineMetricsSink. java and HadoopTimelineMetricsSink. java to ensure consistent
feat ( screengrabber, gamescheduler ) : add parallel task to the game scheduler
updated the visibility condition for compound views based on edit options availability to ensure correct visibility based on available edit options
added a progress calculation to ensure progress does not exceed a minimum value
remove the packetreceived ( ) method from the session interface. smack - 301
added debug logging for authentication failures and refactored auto - redirect handling in the DelegatedAuthenticationGenerateClientsAction class to improve error reporting and
added null checks for the service before retrieving its presence in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUI
[ cli ] add ` hidden = true ` to account _ level _ permissions command message
added doNotInstrumentClass method for CoroutinesRoom $ Companion in AndroidConfigurer. java to ensure that the class is not instrument
removed unnecessary ClassLoader check in ` isSupported ` method of ` NegotiateAuthentication ` to simplify the code and improve performance by eliminating unnecessary
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating unused functionality
camel - 15429 : camel - jms - add maxconcurrentconsumers to reply manager so we can configure the thread name of the reply
refactor AuthenticationProvider and TargetObject classes to improve code clarity and maintainability
fix to pdfdocument. writeovmblock ( ) when tagged
log4j2 - 1010 added patternselector test
simonstewart : don't run the selenium rc test in hta mode
added ` MwThankPostResponse ` class and integrated it into the ` thank ` method of ` MwThankPostResponse `
replaced ` ChannelEndPoint ` with ` SocketBased ` and added a new interface ` SocketBased ` to enhance socket management capabilities in the application
refactored revokingStore management to disable and enable to improve the efficiency of the revoking store operations
added new test cases for HQL queries involving implicit joins to ensure correct functionality of the implicit join syntax in the database
replace carriage return and newline characters with line separators in the NonVisualRegressionTest to ensure consistent line endings across different operating systems
replaced references to pendingCommit with filesToCommit in IndexWriter. java and added assertNoUnreferencedFilesOnClose method in MockDirectoryWrapper.
added @ Final annotation to method parameters in BaseError. java to enforce immutability of method parameters
added validation for user resource percentage input in ConsumeUserResourcePercentActuator to ensure percentage values are within valid range for contract validation
updated conditional check to include a boolean resource for showing legacy login to ensure legacy login behavior is displayed based on configuration
rename test to match the name of the benchmark
updated setResponsePage logic in EditTeamPage. java to redirect to UsersPage instead of EditTeamPage.
updated debug log message to include exception details to improve error reporting for better debugging
added a try - finally block around the stop and shutdown process to ensure proper resource management and prevent potential resource leaks
refactor methods in Rocket class to improve code readability and maintainability
added a method to create aynPartSpec for Dyn partitions in the BaseSemanticAnalyzer to enhance semantic analysis by allowing dynamic partition specification creation
make sure round _ half _ up _ factor be always 1 ( use scientific notation )
added ` visitDirectory ` method to ` JarDirectoryStep `, ` DirectoryTraversal `, and corresponding tests to enhance directory traversal functionality and ensure
added a new JWKSetEditor class to handle setting JWKSet values to enable users to set JWK values programmatically
lucene 2.0 : don't write min / max term if there be too many pending term
truffle : add miss boundary in method resolution to espresso node.
change default value of fetcher. threads. per. host. by. ip from true to false to ensure fetcher threads are per - host by
simplify the conditional check for setting timeToLiveOfQuery to ensure correct behavior when transactionTimeout is less than queryTimeout
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher, and included target configuration hash check in HaskellGhciRuleIntegration
updated method signatures in ReplicaPosition. java to improve code clarity and maintainability
bug 11814 : don't schedule network usage statistic update immediately
updated animation interpolators to use a FINAL _ FRAME constant to improve code readability and maintainability by centralizing the animation logic
adjusted swipe length calculation in Background. java to ensure consistent swipe behavior across different display density
added a new module - info. java file for the jetty HTTP3 module to define module exports and requirements for better modularization
fix npe in jsontype # gettextvalue when value be null
simplified context initialization in ResourceResolverBean. java to improve code readability and maintainability
[ hotfix ] [ doc ] remove optional default value for checkpoint failure number
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 477, which
updated command line format in TimestampCheck. java to improve readability of command string construction
replaced FluentIterable with Java Streams in ChromeTraceBuildListenerTest. java to improve code readability and performance by utilizing modern Java features
dubbo export : enable register dubbo service by default ( # 8954 )
added support to disable otr mode in settingsmanager. close all session if otr mode be disabled
added properties for node label outline size and transparency in NodeLabelRenderer to enhance rendering flexibility by allowing customization of label appearance
updated ProxySelector, URL, and URLStreamHandler classes to improve code clarity and maintainability
modified the boolean parameter from false to true in Win32FontManager. java to enable support for additional font rendering options
added null check for the TreeVisitor before visiting the tree node to ensure cursor is set before visiting the tree node
added error handling policy to the JDTBatchCompiler class to ensure proper handling of compiler errors based on environment configuration
added properties and methods to set and get the text anchor in LabelBlock to enhance label rendering by allowing customizable text alignment
rename mmm and ppp classes for clarity to improve code readability and maintainability
refactor IndexReader class to improve code readability and maintainability
updated isLoopback variable type from boolean to Boolean and added null check for networkInterface to improve robustness by handling potential null pointer exceptions
updated date parsing methods to include locale parameter to ensure consistent date formatting across different locales
fix flaky test : ` ` download miss file''
nifi - 3952 : add property to configure el - rest - output - no - hits
bug 14291 : fix bug in quota update script ( base on user forum )
[ java ] move switch / cases to try - catch block.
remove unwrapping of watcher in streamfilesp. close ( ) ( # 18955 )
refactor widget event handling in PageChangeListener. java to improve clarity and functionality of widget skipping logic
fix for bug # 4536, see bugzilla 44536, and add unit test
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration
refactor CategorizationFragment to improve code readability to enhance maintainability and facilitate future development
updated status message from " Bridge reports light as reachable = false " to " Bridge reports light as not reachable " to clarify that the bridge is
added a loading flag and a method to check if the client is loading, and created a new GameSettings patch to allow for the client to
updated return statements to use ` Core. bundle. getOrNull ( " unit. millions " ) ` and ` getOrNull ( " unit.
replaced Preconditions. checkArgument with a switch statement for handling different data types in MessagePackParser to improve type validation and provide clearer error handling for invalid
added parameterized tests for queries with reserved words as identifiers in HqlQueryTransformerTests. java to enhance test coverage for query processing with reserved words
added tests for serialization and deserialization of nested Maps in MapTest. java to ensure correct handling of nested Maps during JSON processing
added offset assignments for x2 and y2 in GeometryUtils. java to ensure correct positioning of coordinates relative to specified offsets
replaced instances of ` SORT _ ORDER _ DIALOG _ TAG ` with a constant reference ` SortingOrderDialogFragment ` to improve code readability and
bugfix : do not try to get the testplan if there be no testplan
updated method references from ` dbmsType ` to ` getDbmsName ` and refactored asynchronous query handling to use ` LazyReference `
updated argIdent assignment logic to handle both strict and non - strict identifications to ensure argIdent is set correctly when the type is IDENT or
updated the default protocol setting from " SSL - HTTP / 1.0 " to " scf. getProtocol ( ) " to ensure the correct protocol is
cloudstack - 2120 : default to ` ` displayvolume'' to true.
refactor version method to accept a boolean parameter and update related method calls to improve clarity and maintainability of version retrieval logic
updated logic in ChangeLogParameters. java to handle global change log parameters to improve functionality to support global change log parameters
change log level to debug for can't find transaction
skip setoperationtest due to bug in basicformatterimpl cause exception
move startHandshake ( ) and setSoTimeout ( socketTimeout ) to maintain socket timeout setting before establishing SSL connection
updated the size calculation in multiple fragments to exclude the MainActivity. isPopup check to ensure the correct height is calculated based on whether the popup is
change class visibility to final to allow for subclassing
http : / / issues. apache. org / jira / browse / amq - 4798 - fix for http : / / issues.
replaced imports and refactored test methods in JodaTimeRangeRandomizersTest. java to streamline imports and improve test coverage for date -
updated URL handling for Jakartaee 9 and Jakartaee 5 schemas in WebDescriptor. java to ensure compatibility with the
fix : readiness. isready ( ) now also check for node.
use handler. endpoints instead of liveEndpoints in StorageProxy. java to improve clarity and maintainability of the code
added a null or empty check for creationStatements in IdTableHelper. java to prevent potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig. java and UserRpcConfig. java to reflect the correct RPC versioning
added a null check for System. getSecurityManager ( ) before checking package access in ObjectStreamClass and ObjectStreamField to enhance security by ens
refactored time calculation methods in Utils. java and made UGSCommandCount private in XLCDCommunicator. java to improve code
[ 3.0 ] fix npe in defaultmetricswagprovider. geturltemplate ( )
added MockBrowserTest to the suite to enhance test coverage for the MockBrowser functionality
changed default option from Level. OFF to Level. ERROR in mmm Launcher. java and ppp Launcher. java to provide a clearer error
changed instance variables to be final in IconNormalizer. java to ensure immutability and improve performance
added support for a flag to control the first call preparation do in the PrepareInterceptor class to allow differentiation of the first call preparation
refactor workspace show / exit overview mode logic to improve focus handling to enhance user experience by ensuring the workspace is displayed only when focus is active
added @ Singleton annotation to AuthWithStoreFeature. java and refactored binding methods in Auth. java to improve dependency injection and simplify binding
modified the ` incomingAssociations ` method to accept a boolean parameter for ignoring inherited associations to enhance flexibility in handling associations based on their visibility
bug 14551 : remove private ip private ip private ip private ip capacity only after pod be expunge
updated usage instructions for the Profiler Home Page in ProfileServlet. java to clarify usage instructions for the async profiling process
add a new model ` ` requiredreffield'' to the oas model, and fix a bug with the ` $ ref'flag
corrected a typo in class names from " CasCoreConfigurationWatchConfiguration " to " CasCoreStandaloneBootstrapConfiguration " to ensure consistency
updated feature management logic in FeatureFlags. java to improve performance and maintainability of feature handling
[ hueemulation ] fix wrong id format in itemhuetohexmapping ( # 6682 )
added a check to ensure a drawable is only set when a picture is present in TimeLineCursorAdapter and TimelineArrayAdapter to optimize image handling
updated configuration message for major compaction and minor compaction in HiveConf. java to clarify that compaction behavior applies only to insert - only tables
added a null check for the storage path in the FileDisplayActivity to ensure that the file path is valid before proceeding with the download process
updated resize threshold checks to use a new method ` checkResize ( ) ` to improve code clarity and maintainability by centralizing resize logic
updated LDAP connection handling logic to improve reliability and performance of LDAP connections
camel - 4687 : deprecate aggregateattribute a required = true to avoid use namespaces.
added debug tracing logs in TouchInteractionService, RecentsAnimationDeviceState, and TestProtocol to enhance traceability of touch interactions and navigation mode
added a condition to check if the class name starts with " com. intellij. rt. junit. " to ensure compatibility with IntelliJ IDEA build
updated assertions to check for the length of hits2 instead of hits to correct the test to reflect the correct number of hits
added a new file LucenePackage. java to establish a foundation for the Lucene package construction
inverted the calculation of sizeInBytes in RAMDirectory. java to correct the calculation of size in bytes
updated calculations and added an estimate method in GenericUDAFBloomFilter, GenericUDAFEvaluator, and BloomKFilter classes to improve
added a null check for the drawer toggle before processing animation to avoid potential null pointer exceptions when accessing shared resources
added @ SuppressWarnings annotation to the convertToAuthentication method signature to silence compiler warnings about unused subject parameter
added conditional logic to enable system class loader instances based on ` scanSpec. enableSystemJarsAndModules ` to ensure that system class loaders are
fix export file with corporate locale id ( # 1371 )
added a method to cancel core recovery before shutting down the corecontainer instance to improve core management and ensure proper cancellation of core recoveries
updated time difference calculations in bug5070081. java to improve accuracy of time measurement
remove debug output and simplify return logic in RepoEditView. java to improve code clarity and ensure correct click behavior
updated startup message to clarify connection parameter guidance to enhance clarity and understanding of database connection parameters
added authentication trust resolver, role hierarchy, and default role prefix to the SecurityEvaluationContextExtension to ensure proper configuration and retrieval of security expressions
added a check to set the exponentSize to primeSize - 1 if it is zero to ensure a valid exponent size is used for processing
replaced instances of ` ocLocalFolder. getUsableSpace ( ) ` with ` FileStorageUtils. getUsableSpace ( ) `
modify the combine method to accumulate values in DistinctSqlAggregation and add a test for combining in DistinctSqlAggregationTest to improve aggregation efficiency
added a test to verify that post - login activities are executed on successful authentication to ensure that the login process behaves correctly under successful authentication scenarios
add a constructor to extractorspanishstrippedverb to allow pass a path to the stem
refactor CharArraySet to simplify code initialization and improve type handling to enhance code readability and maintainability by reducing redundancy
updated the checkState method to check for track types instead of audio and video to improve error handling for unsupported track formats
updated JsBundleGenrule to return AndroidPackageable instead of JsBundleAndroid and adjusted related tests to ensure proper handling of genrule output and
added UTF - 8 character encoding and improved string handling in StringDictionary to ensure proper handling of UTF - 8 character encoding and prevent potential issues with
renamed the analyzer case from " Logical Analyzer " to " Logic Analyzer " and updated resource references accordingly to improve clarity and maintainability of the analyzer
added instance class name and instance class initialization logic in AbstractVector. java to ensure correct instantiation of vector instances based on class type
removed syncMetaLeader ( ) method from CMManager. java to streamline code by eliminating unused functionality
[ # 7529 ] instructor : submit feedback : show ` ` missing response'' instead of ` ` claimed to instructor''
added TestLoggingExtension import and annotation to DiagramRendererTest to enable logging functionality during testing
camel - case : use underscore to camelcase for property name lookup.
added VIOMI _ WATERHEATER _ E1 device definition to MiIoDevices. java to support additional waterheater models
replace calls to ` SSLSessionData ( ). getCerts ( ) ` and ` SSLSessionData ( ). getKeySize ( ) `
added a new file CreateNewSpreadsheet. java to create a spreadsheet from multiple sheets to enhance functionality by providing a basic example of creating new
replaced the ` getTtl ` and ` setTtl ` methods with ` getTimeToLive ` and ` setTtl ` methods in ` CacheProperties
updated content URIs from CONTENT _ URI to CONTENT _ URI _ NO _ NOTIFICATION for favorites to ensure that notifications are not sent to the
updated the version of the wiremock dependency from 2.1. 0 to 2.1. 2 to ensure compatibility with the latest version of the dependency
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` to improve thread safety for concurrent access
added a condition to check if the character is between'<'and'>'to ensure proper handling of special characters in DocClassUtil
simplified string formatting in the return statement to improve code readability and maintainability
added import for liquibase. Scope and updated UI message sending for no validation errors to enhance error handling by informing users about missing validation errors
fix integrationtestcontextnotfoundexception when test use integration test
updated scroll handling logic in Component, Container, and JavaSEPort classes to improve responsiveness and maintainability of component interactions
updated conditional statement formatting in RamlType. java to improve code readability and maintainability
change data type of ` getClientByClientId ` from ` Long ` to ` String ` across multiple classes to improve data accuracy by using a more
update string replacement logic in CellContentConverter. java to ensure correct formatting of null values
simonstewart : fix flaky test case printout
mondrian : fix typo in property description
8047117 : sun / management / jmxremote / bootstrap / customlaunchertest. java should be update for jdk8 removal of sol
remove the testEmbeddedImage method from TumblrRipperTest. java to simplify the test by removing unnecessary functionality
added a condition to check if the store type has a slot before converting it to the method to ensure that conversion only occurs when the store type
fix extractorwrapper initialization when there be no next load position
updated BaseLockFactoryTestCase to use PrintStreamInfoStream for output formatting to improve readability of the test output by utilizing UTF - 8 encoding for
tikaconfig : add'dynamic'option to the serviceloader to allow custom error handle for service - loader
updated import statements and refined variable declarations in DocLint. java and DocLintTester. java to improve code clarity and ensure compatibility with package
added an additional command check for the " import " command in DataImportHandler and DataImporter classes to allow for additional command handling during data import
added a test to verify that modifying inner classes when ` ignoreDefinition ` is true to ensure that the ChangeType recipe does not modify inner classes
removed import of android. util. Log from JettyService. java to eliminate unused dependencies and streamline the code
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method to allow filtering of workspace screen entries during item placement
kristianrosenvold : implement / quitquit to kill jvm
[ sparc ] fix npe in llrealtimegmentdatamanager when multiple row be present ( # 12955 )
added a check for Windows OS in the Tests. java file to skip Teredo instances that are not compatible with Teredo
add contact dialog show error if the contact be not connect and the protocol provider be not register.
replaced the registration method for the USER _ DETAILS _ SERVICE _ FACTORY bean to ensure that the USER _ DETAILS _ SERVICE
changed the parameters of the drawBitmap method from'left'and'r. top'to'null'to simplify the drawing process by
add date ( yymmdd ) to meitrack and totem protocol protocols to ensure correct parsing of timestamps.
changed method access modifiers from public to protected for getFontPath in SunFontManager and X11FontManager to enhance encapsulation and improve font path retrieval
use policy to deprecate method in EnhancedRandom class
fix test - reachedmaxsize - should catch executionexception
allow to keep empty document that don't have any empty sentence
mavenartifactfetcher should throw an exception if the local and staging repository directory don't exist
refactored ` ReusableCompiler ` and ` JavaLanguageServer ` to replace ` null ` with ` JavaCompilerService. NO _ MODULE
[ directagent ] fix npe in directagentattache
tidy up, don't swallow exception
fix a couple of npe in the obsidian pipeitemsobsidian pipe.
updated date parsing method to accept a locale parameter across multiple classes to ensure consistent handling of locale in date parsing operations
added functionality to control inclusion of Decals in Storage options to allow users to choose whether to include Decals during storage operations
updated the generateDocumentation method to accept a null parameter and added a suppression annotation in the getImplementedDatabases method to improve documentation generation reli
added queue configuration and modified performance tracking in HiveProtoLoggingHook. java to ensure accurate tracking of log durations in the logging process
removed the ` SolrIndexConfig. checkIntegrityAtMerge ` option from the warning log message in ` SolrIndexConfig. java ` to
updated class file version check from 58. 65535 to " MAJOR _ VERSION " to reflect the current runtime version being used
added a new test class LdapPasswordAuthenticationTest for LDAP password authentication to ensure proper authentication and setup of LDAP users
replaced OrcInputFormat with BasicStatsNoJobTask in TaskCompiler. java to improve stats handling for transactional tables
fix a npe when save all with hot reload ( # 4896 )
refactored methods in VisibleAdvance. java to improve performance and readability of the code
fix : reflector don't call start ( ) when reconnecting
added support for dynamic numeric columns in EdgeDataTable and NodeDataTable to ensure proper handling of dynamic numeric columns in data processing
updated ` ResolvedGroupArtifactVersion ` constructor to include null checks for getGroupId ( ), artifactId, and version to ensure required fields are not null
update API assignment logic to ensure fallback to the existing API when apiInfo is null
updated HeadersConfigurer and CacheControlHeadersWriter files to improve header configuration and performance
added lighting and texture disposal methods in PhotoPanel and FlameRenderer classes to enhance rendering performance by optimizing texture management
increased the scene size from 460 to 520 and refactored the InsnListEditor to use a context menu to improve performance and
updated character validation logic in CSSParser. java to ensure valid indexing and prevent potential ArrayIndexOutOfBoundsException
added functionality to manage the visibility of the JFrame and JDialog based on the " isLookAndFeelDecorated " property to improve user interface responsiveness by
removed redundant'this'keyword from the SQL query in HostRoleCommandDAO. java to simplify the query and improve code readability
updated message constants from F5 _ UNKNOWN and F6 _ UNKNOWN to F5 _ TRANSPONDER _ TEST and F6 _ TRANSPON
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and functionality to enhance swipe detection logic for better user experience
replaced HostDatabase with ColorStorage in ColorsActivity. java to utilize ColorStorage for improved color management functionality
refactor methods in String class to improve code readability and maintainability
updated logger initialization in multiple Java files to ensure consistent logging behavior across the application
added a method to retrieve global entries from the map to enhance functionality by providing access to global entries
added multiple assertions to verify the integrity of the sendcoin method in MultiSign34. java to ensure the PublicMethed feature works correctly
[ CUFilterTest ] migrate CUFilterTest to JUnit 5 to ensure compatibility with the latest JUnit 5 features and improvements
updated path separator handling in JavadocReport. java to ensure consistent path formatting across different operating systems
change abstractservicevalidatecontroller. augmentsuccesViewModelobjects ( ) to be static to allow method to access instance variable
hhh - 15071 : fix testutil. getfield to actually check for existence of field in metamodel
removed the getConf ( ) parameter from Outlink constructor across multiple files to simplify the link creation process by eliminating unnecessary configuration parameters
removed the ` LexicalContext ` parameter from multiple methods to simplify method signatures and improve code readability
added imports and modified return statement in UseLambdaForFunctionalInterface. java, and excluded lambda expressions in TypesInUse. java to improve code
replaced ` appendClassSelector ` with ` createFileSet ( ref ) ` in ` TestNGAntTask. java ` to streamline file handling by
added a check to return the root input as a Aggregate in HiveCardinalityPreservingJoinOptimization. java to ensure that root input is
fixed npe in forgeregistry. getregisteredentries ( ) when registry be active.
swapped the assignments of x3 and y3 in the Intersector class to correct the order of coordinates in geometric relationships
add default method sbedecodedlength ( ) and sbelimit ( ) to messagedecoderflyweight
refactored ElasticsearchContainerTest to use a constant for the Elasticsearch version to improve maintainability and readability of the test code
use bytebuffer instead of bytebuffer in peermessagerequest.
refactor ClusterDefinition to use constants for cluster name and version identification to improve maintainability and clarity of cluster definition handling
camel - ftp : remove unused setconfiguration method a it be not need.
[ zeppelin - 4970 ] fix error message when dependency be not load
updated variable assignment logic in Gen. java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest. java to
added support for basic constraints in ForwardBuilder and created a new file BuildEEBasicConstraints. java for testing certificate constraints to enhance security by
added database initialization logic in JdbcPostgresqlDAO to ensure values with the same time will be upserted ( Pg > = 95
set maximum message size in SimpleEchoClient and override setInputBufferSize method in AbstractWebSocketConnection to ensure WebSocket does not exceed the minimum buffer size and
lucene - 975 : fix double write bug in segmentreader. undeleteall
updated null checks and added new test cases for handling null scopes in ClientRegistration and ClientRegistrationTests to improve robustness and clarity of error handling
added null check for orderBy before adding it to the expression parameters to avoid potential NullPointerExceptions when orderBy is not initialized
replaced the import of JUnit's assertThat with Hamcrest's MatcherAssert in ClusterEntrypointTest. java to improve consistency
cloudstack - 2120 : don't remove snapshot state. backlog for kvm vms
replace direct initialization of LogUtils with a variable assignment to improve code readability and maintainability
added a check for non - empty tasks before accessing the first element in AssetManager to prevent potential errors when there are no tasks available
openpgpubsubutil. deletenode now return a boolean instead of void.
add miss ` ` id'' to the search page for all relation
don't throw an exception if no barcode be find on code 128 / 39
replaced TreeSet with LinkedHashSet in SSLContextImpl. java to maintain insertion order for CipherSuites
updated the control character validation logic in Escaper. java and modified the internationalization test in InternationalizationTest. java to improve
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 567. it
updated import statements and improved null handling for aliasChildren in InternalMNode. java to enhance code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView. java and updated scrollDelta calculation in Workspace. java to
renamed variable ` synthetic ` to ` pruned ` and modified the way ` printed ` is processed in ` JavaTemplate. java `
added method. setAccessible ( true ) to WidgetInterceptor. java to ensure that the method is accessible for instantiation
added a check for " database. server. id " before setting the private and literal initializer in ConnectorConfigGenerator. java to ensure that the
remove reference to ` ` rv : 36'' for htmlunitdriver
added a web interface item to the BasicSystemUtils class to allow users to browse a web URL from the PMS server
add an'actualvalue'variable to the HandleGetter class and update related logic to improve clarity and maintainability of value handling
added error handling for Record construction in EncryptedSlideShow. java to improve robustness by catching potential ArrayIndexOutOfBoundsException during record processing
[ hotfix ] fix checkstyle violation in checkpointio
removed redundant call to loadBattlePassManager ( ) in Player. java to avoid potential null pointer exceptions during avatar postLoad execution
updated Docker image version and enhanced command formatting in PortForwardingContainer. java to ensure compatibility with the latest Docker version and improve command readability
added a bigObject array and forced garbage collection in ThresholdTest. java to ensure proper garbage collection during initial testing
updated conditional checks and logger initialization in StdErrLog. java and StdErrLogTest. java to ensure correct logging behavior and improve test coverage
feature - remote service invocation shouldn't have name. ( regression since 3.13. 1 )
added methods ` isSelected ( ) ` and ` setSelected ( boolean b ) ` to ` MultiButton ` and updated list selection logic to enhance functionality
updated the import statement for NextUpActivity and changed the intent from UpNextActivity to NextUpActivity to align with the new NextUpActivity
fix checkstyle issue in brokercontroller
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection management to improve connection handling and ensure proper closing of Redis connections
updated the method for retrieving background colors to use a new utility method to improve code clarity and maintainability by centralizing theme color retrieval
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture
added multiple instances of the creator registration for type adapters in ToolingApiLauncher to enhance type adapter functionality for better integration with the ToolingApi
fix checkstyle issue in test / testpayloadcheckquery. java
refactor ConsoleReader to simplify printing logic and improve buffer handling to enhance readability and maintainability of the code
added handling for cancellation in BaseCommand. java to improve user feedback during command execution
move modulesupport from org. graalvm. compiler. test to org. graalvm. compiler. api. test
[ hotfix ] [ test ] remove unused constructor in slotsharinggroup
[ one. util. streamex. emulatejava8 ] do not try to access stream. dropwhile method.
updated texture names from " wheel. png " to " sys. png " and adjusted song duration in MusicTest and SimpleDecalTest to
modified IntentFilter and receiver registration in Launcher. java to ensure proper unregistration of the close system dialogs receiver
removed an unused import statement from HostsRemovedEvent. java to clean up the code and improve readability
updated ` reuseRefreshToken ` to true and added ` allowIntrospection ` property to ` ClientDetailsEntity `, implemented ` allowIntrospection
added HTML encoding in HtmlSessionInformationsReport. java to ensure proper handling of special characters in user data
added PhraseQuery, PhrasePrefixQuery, and SpanQuery links to the Query class to enhance the documentation for query processing
updated condition checks from size ( ) = = 0 to isEmpty ( ) in CommentsInserter and CommentsParser classes to improve code clarity and correctness
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods to improve code clarity and ensure proper type checking for
updated method signatures in AbstractAssert, Assert, and DateAssert classes to use Object type instead of generic types to improve type flexibility and consistency in
updated the package structure and generic type in the ThrowingFunction interface to improve type safety and enhance functionality
change uploader behaviour to behaviour in preferencemanager instead of preferencemanager
fix : fix nullpointerexception in javaprettyprinter # isinitiffinalfield ( # 2451 )
updated BitmapDrawable instantiation to use Robolectric for improved testing to ensure compatibility with Robolectric testing framework
corrected the spelling of the method name from ` isValidSEnding ` to ` isValidEnEnding ` to improve code clarity and correctness
updated PageMarkerResources to use a different drawable resource for the current page indicator to improve visual clarity and aesthetics of the page
add a reinvocations variable and increment it in BasicInvocation. java to track the reinvocations number for backup completion logging
update topPadding calculation in DefaultLookAndFeel. java to correctly account for the inner height of the ta component
added a break statement in Recognize. java to ensure control flow terminates under a specific condition
added Haptic feedback functionality for home screen lock and folder name input handling to enhance user experience by providing haptic feedback when the home
refactored Excel formula handling in ExcelBatchReader. java and added a new test for text formula in TestExcelFormat. java to improve
fixed bug 1312727 - immutablefield no longer flags assignment in anonymous inner class method
added a private String field to CommaFeedConfiguration and modified user agent assignment logic in HttpGetter to allow dynamic retrieval of user agent based on
avro : make all field mandatory in dataformat to avoid npe
changed log level from info to debug for missing file messages to reduce log verbosity for better debugging
rename queuetest to queuedpipetest to avoid confusion
updated version check logic in BukkitMain. java to use a new method for retrieving the unique ID to improve compatibility with old server versions and
camel - 13792 : defaultcamelcontextcollector should not try to discover route builder if includepattern be false.
pshape3d now support fill, tint etc.
updated method parameter names and logic for filtering columns in SchemaDotFormatter. java and added new test cases in DiagramRendererTest. java to
replaced the use of Shadow. extract with matrix. getValues in ShadowMotionEvent. java to streamline code by eliminating unnecessary dependency on Shadow
changed the package of MetaRules from the ` com. facebook. buck. parser. api ` to the ` com. facebook. buck.
groovy repl : remove ` ` class'' and ` ` null'' from global scope
fix ( filter ) : fix brandingservlet initialization / destruction
removed duplicate print statement in NativeCodeGenerator. java to streamline output for cleaner output
replaced calls to updateMotors and activeInstances with fireChangeEvent in FlightConfiguration. java to improve event handling during flight configuration updates
added tests for ExpectedException in ThrowableAssert _ hasCause _ Test. java to improve error reporting for expected exceptions
removed flatten name and package retrieval from AutomaticDependencies. java to streamline the code by eliminating redundancy
rename ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint. java ` to improve clarity by accurately reflecting the
marionette : add marionette test for firefox profile and capability.
camel - 4900 : added api to get and set route description.
updated method implementations in JavacTreeMaker. java to improve performance and maintainability of the code
added a line to set the weight of the edge in ImporterCSV. java to ensure the edge has the correct weight applied
bug 10602 : fix tariff cost calculation for current month ( # 4894 )
updated SQL query to include adsrc column and modified tuple assignment for column default value to enhance data retrieval accuracy and ensure correct column default behavior
added null check for binarized sentences in SentimentAnnotator. java to ensure that Binarized sentences are not built by the parser
replaced the username return statement with a StringBuffer to improve performance and readability of the user object representation
updated MessageHelper to check for null body before processing to improve error handling and provide clearer feedback on null received messages
[ hotfix ] fix typo in task deployment descriptor factory
fixed roster group visibility check for user without a group. jm - 993
added a reference to " maven. test. classpath " in AbstractJRubyMojo. java and removed unchecked suppression in CucumberMojo
updated type comparison logic in MethodHandleImpl and added a new test method in MethodHandlesTest to ensure consistency in method handling and improve test coverage for
added imports for StopFilterFactory, NamedSPILoader, and HTMLStripCharFilterFactory to enhance analysis capabilities and improve code documentation
change condition checks from " > " to "! = " for width and height in URLImage. java to ensure that images
added a check to ensure that the name does not start with " META - INF / " and does not start with " META - INF /
updated createImageToFileSystem and createImageToStorage methods to include an edt check for thread safety to ensure proper handling of file creation in non -
updated assertions and logging messages in StackWalkerTest. java to ensure correct number of values and improve logging clarity
changed the access modifier of the addViewportJob method from protected to public to allow access to the method from other classes
[ hotfix ] [ test ] remove unused partition parameter in simplewordcount
updated server restart behavior and check running status in TestDatabase. java to improve server reliability during application shutdown
added null and empty checks in NodePathsConvertOperator and refactored child retrieval logic in SchemaQueryMergeOperator to improve robustness by handling
added functionality to retrieve and display the total harvesting time in CallInfoFrame, IceUdpTransportManager, and TransportManager classes to
updated font size for rendering frames and counts in ParticleEditor. java to improve visual clarity and usability of rendering elements
added configuration properties for " hadoop - env " in UpgradeCatalog240. java and corresponding tests in UpgradeCatalog240Test. java to ensure proper
fix regression in svgviewerfactory due to a transparent background
removed the minSdk parameter from the @ Implementation annotation in ShadowKeyguardManagerTest. java and ShadowKeyguardManager. java to simplify the
updated containsExactly method to accept varargs as a list to improve flexibility in checking the contents of an array
updated Bucket4jFilterFunctions to include capacity and refillGreedy while adding a refillGreedy check to enhance functionality by ensuring
add the wordlistloader and the wordlistloader interface to make the wordlistloader thread safe.
updated transformations to use postExecHooks instead of preExecHooks to enable lineage evaluation for materialized views
added error handling for NoClassDefFoundError in REngine. java to ensure fallback to Boolean. FALSE when a NoClassDefFoundError is encountered
refactor ` TraceWebFilter ` to use ` SpanAndScope ` for better span management to improve resource management and ensure proper span scoping
added a null check for the getCause ( ) method in AbstractUpdateCommandStep to avoid potential NullPointerException when getCause ( ) is null
updated exception handling to include base URL in SolrServerException to improve error reporting by associating the caught exception with the base URL
inverted the spacing logic in the HSSFPrintSetup class to ensure proper formatting of print setup records
modify return statement to handle null object case to ensure safe retrieval of NullWritable
added a check for illegal argument names in ArgDesc. java to ensure that invalid arguments are handled gracefully
added background location listener functionality in AndroidLocationPlayServiceManager to enable background location requests for improved user experience
modified the conditional check for primitiveType from `! = GL10. GL _ POINTS ` to ` = = GL10. GL _
trufflestring : do not attempt to write a 2 byte array with length = 1.
added a command list setting method to ComboBox to enhance command handling functionality
nifi - 6921 : fix clientdndfile path escape issue.
updated command execution from ` zkcli. sh - cmd ` to ` zkcli. sh - zkhost ` to streamline command execution and
[ wip ] fixed nullpointerexception in firmwareupdateprogressinfo and bindinghandler ( # 11573 )
added a conditional check for remoteGrpcStatus before posting the severe message to ensure that the severe message is only sent when remoteGrpcStatus
refactor method signatures and improve parameter formatting in various classes to enhance code readability and maintainability
added entity ID to the tick entity in the ForgeChunkManager class to ensure that entities are properly added to the tick's entity '
fix for [ EGL10, EGL11, EGL10, EGL10, EGL BAD _ ALL ].
added methods to sort and retrieve supported locales in FeatureRegistry to enhance locale management and improve error handling for unsupported locales
updated server URI formatting in RFC2616BaseTest. java to ensure correct host information is used for location validation
added functionality to addToHelperList ( ce ) to improve functionality and maintainability of the code
added a condition to skip the first occurrence of " [ [ [ [ " escape sequence in GlyphLayout. java to improve robustness by
added security permissions and refactored context class loader setting in mmm Transport. java and mmm TCPTransport. java to enhance security by
updated the method to populate directory list and added null checks for fileByPath and folder to improve robustness by ensuring that null paths are handled
added null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
removed a debug log statement in BarrowmanCalculator. java and corrected a typo in TubeCalc. java to streamline log output and
added a type check for Node before retrieving columns in the TimelineControllerImpl class to ensure correct column assignment based on the type of the object
added a method to register extra components for the broker admin application to enable dynamic configuration of extra components for the broker admin application
added a test case for bug4658 in MultiCfQueryExecIT. java to verify the correct behavior of query execution with dynamic column
use a linkedlist instead of an arraylist to improve performance.
allow for the builder to be create with a lot of garbage.
added retry attempts for Ratis configuration in NodeManager, RatisClient, and RatisNodeConfig to enhance reliability by managing retry attempts
updated import statements in multiple Java files to improve code clarity and maintainability
added a conditional check to unregister JMXHelper based on class annotation to ensure JMXHelper is only registered when the service is managed
tika - 4951 -- ensure that non - ascii entry name be pass to the parser
8213709 : c2 : c2 : : splitthru : : mod ( - x % 2 ) fail with ` `
added methods to lookup generic types and superclass lookup in TemplateRegistry to improve handling of generic types and ensure proper type resolution
increased the buffer size from 512 to 1028 in ByteArrayOutputStream to optimize memory usage during data transmission
added TODO comments to the available languages excluded from the PlayerSettingsScreen to clarify error messages when symbols are not yet available
increase the byte array size from 8192 to 8192 and adjust fireOnBytesSent accordingly to improve data transfer efficiency by reducing the number of bytes sent
remove the ` windowlostfocus ` and ` windowdeactivated ` method from ` SIPCommPopupMenu ` and ` SelectAvatarMenu `
added null check for source node before throwing SemanticException to improve error handling for invalid table aliases
skeletonrenderer : create the skeleton's center extent when render aabb
added ` getSolrHome ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide access to the
added @ ComponentScan annotation to SpringWebConfig. java to enable component scanning for enhanced functionality
added a method to convert the user to platform account to ensure compatibility with platform user accounts
added unit tests for package installation in ShadowPackageManagerTest and modified processName assignment in ShadowPackageManager to ensure correct behavior of package management and
updated AvailableSettings. java file to improve settings management functionality
added constructors and methods for TransactionTrace and ReceiptCapsule to enhance initialization and finalization of the TransactionTrace class
add a shuffle _ member _ list property to control the shuffle mode of the client.
replace ` Text ` with ` CrawlDatum ` in ` SegmentReader. java ` to improve type handling for crawling data
refactor JsonDeserializer to improve code readability to enhance maintainability and facilitate future development
updated CONFIG _ NAME and CONFIG _ DEFAULT _ PATH in TsfileDBConfig. java and changed fetchSize in OverflowQueryEngine. java
updated error message from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument to " trunc ( ) only takes STRING /
removed unused import of ExecutionContext in TaskletStep. java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure a default value is used for the title variable
added body handling for empty responses in AsyncHttpClientCall to ensure correct response body is used when no body is provided
deprecate embedserverinstance and move to io. micronaut
refactor MacAdapter instantiation to use reflection for method registration to improve cross - platform compatibility and maintainability of the code
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` to clarify the purpose of the test class
changed the return statement from Enum. class to Enum. class in HandlerLibrary. java to ensure proper handling of Enum types
changed the visibility of hideUnprivilegedObjects from private to private final to ensure immutability of the hideUnprivilegedObjects variable
change log level from info to fine in threadedacousticscorer # threadedacousticscorer # threaded
added a check for Android Q to save Giphy Android 11 video URL to ensure compatibility with Android Q features
act - 1197 : fix nullpointerexception when setVariable be call in a service task
updated multiple classes related to EhCacheTicketRegistry, LdapPasswordPolicyEnforcer, GoogleAccountsService, SamlService, and S
simplify logger creation leverage map .
hbase - 17490 remove dataoutputstreamoutputstream because it's not use
updated test data for transaction ID from 536936448 to 536936448 in TestAcidOnTez. java to
changed log level from info to debug for enhanced class logging to reduce log verbosity and improve performance during development
added a method to retrieve the default provider name and updated provider name logic to support both " Conscrypt " and " Conscrypt "
added imports and processed instance fields using CaptorAnnotationProcessor in MockitoBeforeTestNGMethod. java to enhance field processing capabilities by processing captured annotations
added error handling for missing class and method names in TestSuiteBuilder to ensure robustness by informing users when no test cases are available
updated imports and refined logic in GroovyAutoComplete. java, GroovyLanguage. java, and GroovyAutoCompleteTest. java to improve code
use osm instead of deprecated graphhopper. init ( )
francoisreynaud : fix client configuration for handlesession
changed the visibility of the mHideSysUiScrim variable from final to non - final and added preference retrieval for showing top shadow to allow
renamed the ` enqueue ` method to ` enqueue ` and introduced a ` canceled ` flag in ` OkHttpCall ` to improve method clarity and
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and functionality to enhance swipe detection logic for better user experience
updated the RequestMatcher interface to extend from org. springframework. security. web. util. matcher. RequestMatcher to ensure compatibility with the
added an'IF'clause to the DeferredAttr enumeration and created a new abstract class ` ImplicitLambdaConsideredForApplicability
add test for boxing constructor and use testboxingconstructor ( ) and testboxingvalueof ( )
add unit tests to verify display metrics initialization to ensure correct handling of display dimensions and configurations
replace IOException with RuntimeException in ExternalViewReaderTest. java and simplify timestamp initialization in PinotDataTypeTest. java to improve error handling and
updated icon resource from ` logo ` to ` mipmap. ic _ launcher ` to enhance the visual appearance of the launcher icon
added content text setting in errorBuilder to enhance user experience by providing clearer error messages
refactor ConcurrentHashMap class to improve concurrency handling to enhance performance and reliability of concurrent operations
added methods to adapt user trades and retrieve user trades from Abucoins API to facilitate data adaptation for user tr
updated plot claim logic and added new cases in multiple files to improve plot management functionality and enhance error handling
simonstewart : allow the htmlunit driver to connect to the correct browser
added support for VARBINARY data type in BlobType to enable support for VARBINARY data type in the database schema
update cookie versioning logic in SetCookieSupport. java to ensure compatibility with various cookie formats
synchronize language. simpletypemap in libfficontext to avoid concurrentmodificationexception
replaced ` Context ` with ` ContextInternal ` and added a thread check in the ` InboundBuffer ` class to ensure compatibility with the Vert
updated timeout settings and refactored test methods for dead server connections to improve test reliability by ensuring timeout values match expected behaviors
updated usage message from " UniocdeData. txt " to " UnicodeData. txt " in CharacterName. java to clarify usage
camel - 7999 fixed the unit test error of cxfmessageheadersrelaytest
updated multiple UI classes for consistency and clarity to improve maintainability and readability of the codebase
added support for ` BoosterSet ` in ` ComponentAssemblySaver ` and corrected a return value in ` BoosterSet. java `
implement password authentication for proxy requests in JabRef. java to enhance security by enabling proxy authentication
replaced occurrences of ` __ FORK _ COUNT ` with ` BLOCKCHAIN _ FORK _ COUNT ` in multiple files to standardize terminology
changed the InternalError exception thrown in CompileStub method to return false to indicate support for JEP 359 support, see https : / / github
updated import statements in TestIPCUtil. java to use LogFactory and Log4j for logging to improve logging consistency and reduce dependency on
removed the transfer encoding check from the HTTP request to simplify the request handling by eliminating unnecessary chunked transfer logic
added a call to clearAttributes ( ) in PatternTokenizer. java to ensure that new attributes are cleared before processing new patterns
updated VerificationAfterDelayImpl constructor to include a polling period parameter and improved error handling during verification to enhance error management and provide clearer error handling during
added compaction handling to SessionState and related classes to manage compaction state during query processing
[ zeppelin - 2594 ] fix the issue that docker report file do not exist in zeppelin - 2594
refactored the ` getTableRegions ` method in ` HBaseAdmin. java ` for consistency to improve code readability and maintainability
added an @ Ignore annotation to PartialEscapeAnalysisTest. java to temporarily disable the test due to instability
updated the ` calcXBounds ` method to include a ` xAxisModulus ` parameter across multiple chart renderers to enhance the calculation of X
add try - finally to make sure xmlreader be release after parse
release the header buffer in HttpSenderOverHTTP. java to ensure proper resource management and avoid potential memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated the ` Java17TypeSignatureBuilderTest ` to include
added null and closed result set check before closing the result set to improve resource management and prevent potential memory leaks
update driverVersionMajor and driverVersionMinor from - 1 to 6 to reflect the new versioning requirements
fixed bug in usestringbufferlength which occur when there be no literal.
removed logging of exception details in RemoteSparkJobMonitor. java to streamline error handling and improve code clarity
refactor createDb method to return the Connection object and close the connection to improve resource management and ensure proper closure of the database connection
updated imports and class names for CreateCustomMetric and ListResources to improve code clarity and maintainability
hbase - 25883 add configuration option hbase. hbasereplication. max. compaction. max. size. offpeak
modified BitstampDepositAddress. java to handle optional " address " cases and created a new DepositAddressJSONTest. java file
replace IllegalStateException with response. abort ( IllegalArgumentException ) in BufferingResponseListener. java to improve error handling by using the response's
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` to ensure the correct absolute path is used for deleting
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and renamed ` operationType ` to ` invocationType ` to improve clarity and consistency
[ java ] fix intermittent failure in optionstest. java
removed duplicate check for validCheckSums in ChangeSet. java to streamline code by eliminating redundancy
added clone ( ) method to BufferedChecksumIndexInput class to provide a way to clone the IndexInput instance
updated return statements in Circle. java to use ` < = ` and ` < = ` to ensure proper radius validation
updated frequency band assignment logic in P25Channel. java and added override annotations in P25ExplicitChannel. java to improve frequency band management and
renamed ` tapSquareSize ` to ` tapRectangleWidth ` and ` tapRectangleHeight ` in the ` GestureDetector ` class to improve
change the default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false to disable replication on writes
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and implemented a new format method in CryptoFacilitiesTradeServiceRaw to allow
added ` getDelegate ( ) ` method to ` TraceCallable `, ` TraceRunnable `, and corresponding tests in ` TraceCallableTests ` and
updated FileActivity and FileDisplayActivity to handle success and error responses more accurately to improve error handling and enhance user feedback during folder synchronization
added error handling for stream writable operations in multiple classes to ensure proper error reporting when writing to a stream in the Quiche connection
updated method call to include a boolean parameter to enhance functionality by allowing conditional execution of certain conditions
removed padding from the row and column headers in BaseTextFormattingHelper. java to simplify the table cell initialization by removing unnecessary padding
added new file ` TracingAutoConfiguration. java ` to implement tracing features in the application
submission detail page should be add after submission, not after submission
fix the bug in serverqueryexecutorv1impl # getsegmentreaders ( ) that return an empty list instead of search segment ( #
updated test cases in VertxBufferTest. java to improve test coverage and reliability
bug fix in messagesubmissionchunk, check if the datepartbegin be great than the end of the string.
changed the access modifier of mContext from private to protected to allow subclasses to access and override the mContext variable
removed unused imports for SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation to improve code clarity and reduce unnecessary dependencies
added a new class MongoDataIntegrityViolationException for handling database integrity violations to improve error handling by differentiating between data integrity violations and action
changed the return type of jobCompletionFuture ( ) to JobCoordinationService. java to ensure that the method returns the job completion future instead
replace ` bitsToHumanReadable ` with ` bytesToHumanReadable ` and introduce a new ` mimeType2HUmanReadable ` HashMap to improve
updated merge policy instantiation logic in TestUpgradeIndexMergePolicy. java and added a testNoPathologicalMerges method in TestMergeOnFlushMerge
added a check to return early if mOverviewStateEnabled is false to optimize performance by avoiding unnecessary processing
# step - 11 - check - cpu - support - for - hardware - extensions - avx - etc update doc
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter to enable loading of settings models from external resources
added null checks for input parameters in FilterLeafReader to ensure robust error handling and prevent NullPointerExceptions
added support for custom secret key size in jcecrmfencryptorbuilder.
updated IOException to include the exception message and removed redundant constructors in SoftEndOfStreamException to improve error handling by providing more context in exception messages
remove javax. inject. inject. inject usage ( # 159 )
updated BundledDistributionTest to expect 10 entries and added new tests for retrieving database users to improve test coverage and ensure correct data retrieval from
add user - defined job name option for print and logging in streamexecutionenvironment
refactor scaling calculation to differentiate between two - panel and two - panel layouts to improve layout responsiveness based on device profile characteristics
updated IcePlainsBiome class to extend SnowyBiome and added a PopulatorTree for SPRUCE to enhance the
removed timezone parameter from ` getMinTime ` and ` getMaxTime ` methods in ` StorageUtils. java ` to simplify date comparison logic and improve
make the ` thisreference ` a non - qualified field in the compilation unit.
updated regex pattern in XhamsterRipper. java to allow URLs with w characters instead of wmde characters to enhance security by
fix entity iteration in world. getall ( glowentity. class )
hhh - 14748 fix oracle dialect to handle null schema
fix a syntax error in the FlutterConsoleFilter class to improve code readability and maintainability
added a variable to track the number of all files in the FileMenuFilter class and updated related methods accordingly to improve the functionality of file selection
[ java ] : fix off - by - one error in termoffset calculation.
fix typo in guildupdelownleleleevent. java ( # 760 )
update inpawnTicks logic to account for creative and non - creative player tickers
added compression functionality to display items in the ClusterMonitorTileSkin to enhance the visual appearance of chart elements by allowing compressed data display
updated multiple codec template classes for consistency to improve maintainability and readability of the codebase
change variable types from int to long for length calculations in Base64. java to ensure correct handling of long values for binary data length
removed null check for the header in RendererConfiguration. java to simplify the condition for better readability
server : skip disk offering change when scale vm with custom service offering
updated import statements and modified the order builder instantiation in HitbtcAdapters. java to improve code clarity and maintainability by using specific classes
corrected the spelling of " consecutiveIdleCount " in LLRealtimeSegmentDataManager. java to ensure accurate tracking of consecutive idle counts
updated the label from " automation : jruby " to " automation : jrubyscripting " in the JRubyScriptEngineFactory
updated displayName variable assignment and modified write method to use it to improve clarity by using a more descriptive variable name
updated the conditional check to include a check for ` preciseExchangeAmount ` to ensure that exchanges do not allow negative values
modify the loop iteration logic in FeedUtils. java to ensure proper termination based on a fixed number of iterations
added a test method ` testHDF4 ` to ` HDFParserTest. java ` to verify the functionality of the ` HDFParser `
[ flink - 6092 ] [ table - planner - blink ] fix invalid TIME value in calcite _ 6092
removed unnecessary whitespace in IDEEditor. java to improve code readability and maintain consistency
added methods to quietly close all AutoCloseable types in CloseHelper. java to improve resource management and prevent potential memory leaks
replaced hardcoded button name with a constant string resource to simplify code and improve maintainability by avoiding hardcoded strings
added conditional checks before drawing images in Pixmap. java to ensure images with valid dimensions are processed
replaced ReflectionHelpers with Unsafe and refactored the definition of the class method to improve flexibility and maintainability of the code
updated regular expression for fqdnRegexPattern in GUIUtil. java to improve hostname validation accuracy
replace boolean conflict variable with a long variable conflictsCounter to improve code readability and maintainability by reducing redundancy
cache flutter sdk version instead of hardcoding it to flutter _ sdk _ version
added equality check for the REFERENCE case in ReferenceMemory. java to ensure that the reference value is only assigned to the current instance
added file injection logic for seed URLs in Injector. java to ensure proper handling of missing seed files and improve error logging
added a condition to hide the original view in the FloatingIconView class to ensure the original view remains hidden when hidden
defaultloopPolicies : fix edge case when maxnodes be negative.
added a check for texture coordinate support before creating texture data in CombinedTexture. java to ensure only supported texture coordinates are processed
add some sanity check to avoid crash in some apps
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality for seeking and resource management
updated SQL query to use ` substring ( : oldPrefixLength + 1 ) ` instead of ` locate ( ) + 1 ` to ensure correct
removed the addition of elements to the convertedValsList list in JSONSerializer. java to streamline the list initialization process and improve performance
added a deprecated constructor to AbstractTimer that accepts a Clock parameter to indicate that the constructor should no longer be used in favor of an alternative implementation
added a nightly warning dialog in the MainWindow class to inform users about issues during the nightly build
[ # 7730 ] instructor : list response by team ( # 7731 )
update return statement to include " Remove unnecessary ` throws ` declarations to improve clarity of exception handling logic
deleted CacheApplication. java and replaced CacheController with CommonsApplication in ShareActivity. java to streamline the code by consolidating caching functionality
replaced calls to ` realObject. getApplicationContext ( ) ` with ` RuntimeEnvironment. application ` in ` ShadowContextImpl. java ` to improve
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future development
updated configuration handling in RuntimeEnvironment. java to ensure compatibility with devices running KITKAT and above
added a constant for the repository update link exists in VersionDefinitionResourceProvider. java and implemented corresponding tests in StackManagerTest. java to ensure
refactored multiple classes including ApplicationImpl, NodeImpl, and Witness to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData. java to skip processing when oldIndexName is null
added import statements for " com. sun. org. apache. xml. internal. resolver. helpers. " and " com. sun.
rename method ` persistExecutionContext ` to ` add ` in multiple classes to improve clarity and consistency in method naming
fix : loopexitnode should replace the loopbegin input with null
replaced RecyclerView with a WidgetsRecyclerView in SearchAndRecommendationsScrollController. java to enhance UI responsiveness by utilizing widgets instead of
added a check for terminal support in ConsoleReader. java to ensure compatibility with terminal features
changed variable types from long to int for timeAllowed and added timed checking logic in LBHttpSolrClient to improve data handling and prevent potential
added validation check for session validity in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure sessions are valid and to flush on response
added null check for columnNames before setting fields in the index change generator to avoid potential NullPointerExceptions when columnNames are null
replaced Vector with ArrayList for buttons and refactored related methods to improve performance and maintainability of the ButtonGroup class
updated UserManagerCompat classes to support compatibility with NYC MR1 and ATLEAST _ MARSHMALLOW to enhance user management capabilities
added getDatabaseMajorVersion ( ) and getDatabaseMinorVersion ( ) methods to various database classes to retrieve the major and minor version of the database metadata
refactor ActionGraphCache to improve mismatching information and add a constant for maximum mismatchries to enhance clarity and maintainability of the code
added LockDatabaseDesc and UnlockDatabaseDesc classes to provide detailed information about the database locking process
updated RankingTopComponent, RankingUIModel, RankingUIModel, and RankingToolbar classes to improve user experience by ensuring
updated disconnect message handling in HandshakeHandler. java and NodeImpl. java to improve clarity of disconnect messages and ensure compatibility with incompatible protocols
added a test method for setting storage group deletion in IoTDBAuthorizationIT. java to ensure proper handling of privilege deletions in user storage
fix ( v1beta1 | v1beta2 ) : remove v1beta2 from documen ( v1beta2 )
added variable type checks and enhanced type validation for variable declarations to improve error handling and ensure proper validation of variable types
added two methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to facilitate test execution
[ java ] : make countersmanager constructor accept a charset for record offset.
updated the ` toString ` methods in ` MultiSteps `, ` SendEmail `, and ` MultiSteps ` classes to use parameterized logging to
added initialization and cloning of joinKeys in JoinDesc. java to ensure joinKeys are properly populated and avoid potential null pointer exceptions
added PrincipalResolver to WebAuthnConfiguration for principal resolution to enhance authentication handling by allowing customizable principal resolvers
added a search path parameter to the ` addSettingsFromFile ` method and updated related tests to support additional search paths in configuration parsing
changed members of ` binarizedTrees `, ` parentMaps `, and ` leafLists ` to be ` final ` to ensure im
[ flink - 33948 ] [ doc ] do not advertise the option until rescaling of unaligned checkpoint
feat ( sql ) : add unsupportedoperationvisitor to allow order by clause to be supported
added println methods to CompileTheWorld and updated related log messages to enhance logging functionality and improve code readability
remove a redundant check that throws an exception if the value is an instance of LocalVariable
added support for MySQLDatabase handling in CreateTableGenerator to ensure proper handling of NULL values in MySQL databases
updated class loader management in EnvConfiguration. java to ensure proper class loading and prevent potential memory leaks
added a condition to set ejection delay if stageNr is zero in SimulationListHandler. java to enable specific delay configuration for motor
renamed method ` runFunctionalCommandLineRunnersAndApplicationRunners ` to ` runCommandLineRunnersAndApplicationRunnersUsingOrderOnBean
refactored TransactionUtil2 for improved transaction handling to enhance performance and reliability of transaction processing
updated ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter to enhance issuer claim validation by incorporating
updated string concatenation and added null check for collection to improve readability and handle potential null values gracefully
replaced ` getStyle ( ). setAlignment ( align ) ` with ` getAllStyles ( ). setAlignment ( align ) ` to retrieve all
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance functionality by allowing specification of foreign database and schema names
[ java ] use timeoutexception to indicate when a leader be detect.
replaced the static import of ` shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice `
added validation for the root path and improved handling of null or empty paths to enhance robustness and prevent runtime exceptions during path selection
restore iforgeitem. oninventorytick, deprecate since 1.12. 1
don't truncate exist war file when export to a war file
added a null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment. java to avoid potential NullPointerException when getSherlockActivity ( )
refactor widget binding logic to handle options more effectively to improve error handling for widget binding
[ ecobee ] add capability for air quality ( # 14975 )
reformatted code for consistency and readability to improve code maintainability and adhere to coding standards
added environment variable " AAPT " and " AAPT2 " to the Genrule class to support AAPT and AAP
only dump the access table if the truffle compiler option be enable.
added null check before disposing of the message object to prevent potential NullPointerException when message is null
fix ( checkpoint v1 recover success )
updated warning log messages in CoreContainer. java to clarify that logging functionality is not yet implemented for Log4j
replaced print statements with fail calls in CategoryPlotTests. java to improve error handling during plot clone failures
replaced ByteArrayOutputStream with SmallByteArrayOutputStream and added null check for n to improve data handling and prevent potential NullPointerExceptions
shader should use integer instead of hashmap to store attribute
changed the connection parameter from " territory = en _ US " to " shutdown = true " in the AbstractDIHJdbcTestCase class to
bugfix : log4j2 - 1342, log4j2 - 1343, log4j2 - 1343, log
8197518 : java / util / zip / useoption / testhtmltag. java fails due to default locale
updated condition to check if the result is incomplete ( ) before accessing its items to improve completion behavior by ensuring only non - completion items
updated command - line argument syntax and refactored time column name handling in HybridClusterIntegrationTestCommandLineRunner. java to improve clarity and
updated output format handling to support both htmlx and svg. html formats to enhance flexibility in output formats based on user - defined extension
inverted the condition for checking QSB enable status to correct the logic for enabling QSBs in the hotseat
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey ` and ` GltfModel
added a timestamp buffer field and related methods in the AbstractGenerator, HttpGenerator, and Response classes to store the timestamp buffer in the response headers
replaced Adler32 with CRC32 in Store. java to improve data integrity by using a more reliable CRC function
bug 10730 : set'xen. heartbeat. interval'default to'any # of seconds '
added a new constant ` ZERO _ AREA _ FIN ` in ` Warning. java ` and updated ` FinSetCalc. java ` to
[ beam - 8470 ] use custom serializers for documentmetadata in elasticsearchio
hhh - 17764 : add support for ` ` trunc (... )'' in h2
added a memory pool error handling condition in MetricUtils. java and updated test assertions in MetricUtilsTest. java to improve error reporting for memory
make sure we don't crash the user if we don't have javascript
validation task : fix illegalargumentexception when use @ runtimetype
change the BACKFILL path from " / generateAnomaliesInRange " to " / replay " to align with new design specifications
updated return statements in PrecompiledContracts. java to include a new initial value and retrieve the latest proposal number to improve data handling and ensure
updated item handling in AllAppsContainerView. java to improve badge application logic based on child views
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
updated start ( ) method calls in ResourceHandlerTest. java to ensure correct behavior after ContextHandlerCollection is started
added a condition to return false if mDrawIdentifier equals WORKSPACE _ CUSTOM to handle custom workspaces effectively
truffle : remove assertion that ben't need
renamed the test method from ` shadowInvocationWhenChildIsInstrmentButUnshadowed ` to ` shadowInvocationWhenChildIsInstrumented
updated import statements for ItBit exchange classes in ItBit demo files to ensure compatibility with the latest version of the ItBit library
ww - 3953 add miss check for isDefined ( ) method in parameter
changed Utils, ApplicationUtils, AsyncSocketFactory, and Whois classes to be final and private to enhance encapsulation and prevent subclassing
cloudstack - 8692 : resource leak find by the internal coverity instance at citrix fix
8197518 : fix for test / java / util / util / utility / util. java
added tableNameWithType parameter to the warning log message in RetentionManager. java to provide more context in log messages related to table retention
added trimming to fragmentList validation in QueryExecutorImpl. java to ensure proper validation of empty fragment lists
update file path handling in ResourcePackFileNotFoundException to ensure the exception uses the modFile's file path instead of the mod's file
updated selection management for node and edge transformer builders to improve user experience by ensuring only relevant transformer builders are processed
updated conditional logic in RecentsView. java to include checks for task view focus and visibility to improve task visibility handling during grid display operations
updated the ` Calculator `, ` CalculatorRestEndpoint `, ` CalculatorService `, and ` CalculatorServiceImpl ` classes to replace ` Map <
replaced Comparator. comparing with Entry. thenComparing in QueryCommand. java to simplify the code and improve readability
fix issue with entity not be able to place block on hold floor
updated environment variable handling to support multiple environment variables to enhance flexibility and support for different Java command line configurations
added support for plugin property specification in OptionsParser to create and include plugin property values when specified
update condition to check if hashTable is not empty instead of null to ensure proper handling of empty hashTable cases
updated timestamp formatting and test method names in Timestamp and TimestampTest classes to enhance correctness and clarity of timestamp string assertions
[ java ] clone archive context before use it in cluster service agent.
added a condition to check if the method is compiled before processing COMPILE _ THRESHOLD to ensure COMPILE _ THRESHOLD is not
add test case for imagemosaic2 ( relate to # 217 )
refactor TogglableFlag class to improve default value handling and add a change listener to enhance the functionality of the TogglableFlag class by
updated logging statements in DockerClientFactory to include placeholder syntax to improve logging clarity and reduce verbosity
added a check to return early if the current platform is ANDROID to optimize performance by avoiding unnecessary operations on ANDROID platforms
updated test assertions in RoutesTest. java to use containsString instead of assertEquals to improve test readability by leveraging Hamcrest matchers
added new functional interfaces for various primitive types including Byte, Float, Short, and ShortToLongFunction to enhance functional programming capabilities by providing functional interfaces
changed subtitle color type from int to String across multiple classes to allow more flexibility in subtitle color representation
don't register future on invocation. complete if invocation can not be complete
replaced the instantiation of ControlFrameBytes with a direct call to output ( null, nop, close. asFrame ( ) ) to simplify the
updated intent handling in LoginActivity and added a redirect flag in SignupActivity to ensure the welcome intent is only started when the " redirected "
added a new ShadowCheckedTextView class to manage the checked state of the CheckedTextView to enable testing of the CheckedTextView functionality in the Robo
made the ParserState class serializable and added a serialVersionUID to prevent serialization of the ParserState class
added " identrustdstx3 [ jdk ] " to VerifyCACerts. java to enhance certificate verification capabilities
removed duplicate setting of TEMPDIR _ CONFIGURED in WebInfConfiguration. java to streamline code by eliminating redundancy
fix muc occupant nick parse issue
removed the'context'parameter from the QuicSession constructor and made it final in QuicConnection and QuicSession classes to enhance encapsulation
replaced direct calls to ` writer. setMergeScheduler ( ) ` with calls ` writer. getConfig ( ) ` in CreateIndexTask. java
updated variable names and method signatures to use ` value ` instead of ` pageWidth ` and ` endX ` to improve code clarity and ensure
added ` ComputedNumericValue ` and ` ComputedDateValue ` imports in ` AddDefaultValueChange ` and ` AbstractDatabase ` classes to
fix checkstyle issue in net. scoreboard. io. nbtscoreboardioservice
updated service provider metadata handling to check for writable resources before mapping to a writable resource to improve robustness and prevent runtime exceptions when the metadata resource
changed the visibility of the printer variable and refactored the creation of the graph printer to protected to allow subclasses to access the printer variable and
[ huobi ] fixing order to use bigdecimal instead of null
updated field handling in ` ProjectionOperation ` and ` TypeBasedAggregationOperationContext ` to use ` Fields. field ( ) ` instead of
modify the logic for adding players to the player list in the FakePlayer class to ensure players are only added to the currently displayed view list
added constant state management in FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve memory handling and support for drawable state changes
updated connection handling in SPDYClient to use a controller and streamline SSL / TLS connection setup to improve reliability and maintainability of the
[ dubbo - common - serialize ] fix npe in protostuffobjectoutput. serialize ( null ) ( # 1152 )
pdfbox - 4892 : fix typo, a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability and maintainability
ggb - 2118 show ax even if there be only one ax
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap methods to improve efficiency by using a more efficient API for setting unsafe
[ ds - 3952 ] fix checkstyle violation in xmlworkflowserviceimpl.
added SSL context and hostname verification for HTTP connections in CustomUrlJob. java to enhance security by ensuring proper SSL configuration for HTTP connections
update the method to return the real used clock rate string instead of the current one to ensure accurate representation of the used clock rate in the media
modified TextureAtlas. java file to improve texture rendering performance
replaced ` getProductNameForBuildTargetNode ( node ) ` with ` getModuleName ( node ) ` in ` ProjectGenerator. java ` and
[ hotfix ] [ test ] fix race condition in testslot
fix : sqltreebuilder. findids ( ) throw classcastexception in case of findidswithinheritance
updated WebSocketServletRFCTest to use a ByteBuffer for reading from the stream instead of printing debug information to improve readability and maintainability of the
[ wasm ] make sure that referencemultidefunction. pushreference ( ) always return null.
ClickHouseLogCollectClient to allow specify a time - to - live ( ttl ) for table creation to enhance logging flexibility by allowing users to
changed the serialization type from NESTED _ OBJECT to NAMED _ FIELD and implemented related methods in CustomPreconditionWrapper and XMLChangeLog
replaced the use of a queued thread pool with a direct server handler in DeploymentExceptionTest to simplify the setup process and improve resource management
added error handling for Fresco initialization and improved error logging in NearbyController to enhance robustness of Fresco initialization and provide better error
added a null and empty check for the objectName return statement in PostgresDatabase. java to ensure proper handling of null or empty object names
updated error message from " could not find file " to " could not open file " in Command. java and TestPrint. java to improve
[ flink - 20955 ] [ table - planner - blink ] use different planner and executor factory
updated variable names for clarity and added null handling for X500Name to improve code readability and prevent potential NullPointerExceptions
added a deprecation annotation to RuntimeOptions to indicate that the feature will be removed in version 23.0
replaced manual byte encoding with string. getBytes ( utf8Charset ) to simplify code and improve readability by using a dedicated method for string conversion
added a new interface PermissionEvaluator in the org. springframework. security. expression package to provide a mechanism for permission evaluation in Spring Security
added ERASE _ LINE _ ON _ FINISH option and cleanup logic in LineReader and LineReaderImpl classes to handle line on finish
hbase - 26183 master should check for server that don't exist in the list of online server
replace ` CALC _ MERKLE _ ROOT _ FAILED ` with ` BLOCK _ MERKLE _ ERROR ` in exception handling to
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4361 to avoid
improve error reporting when clientresponserror occurs
changed the container's center method from BorderLayout to centerAbsolute to ensure the spinner is positioned absolute
[ hotfix ] [ runtime ] fix intermittent failure of networkbufferpool # requestmemorysegments
refactor MBeanServer initialization and release mechanism in TestJmxIntegration. java to improve code clarity and ensure proper resource management
updated imports and annotations in AbstractIT. java to use RetryTestRule instead of RunWith to improve test reliability by integrating retry functionality
refactored auto - commit logic to improve transaction management to ensure accurate auto - commit checks based on the session's required transaction ID
updated import statements in CsvFieldType, CsvTable, CsvTableScan, and CsvTest files to ensure consistency with the updated package structure
added support for " javax. microedition. khronos. opengles. GL " in the InstrumentationConfiguration to enhance
[ hotfix ] [ test ] remove unnecessary implementation of processingtimeservice # onprocessingtime
refactor request handling in Request. java and add a test case in RequestTest. java to improve robustness of URI retrieval and ensure correct behavior
updated storage point retrieval to use getLegacyAvailableStoragePoints method across multiple classes to improve compatibility with newer Android versions and enhance data storage point
added methods ` sessionAvailable ` and ` sessionUnavailable ` to handle session priority changes to improve session management functionality
added the method addPackageToScan ( " liquibase. pro " ) to the ServiceLocator class to enable package scanning for Liquibase
replaced the ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider. java ` and updated its
updated the ` loadWithNewGlobal ` method to accept a variable number of arguments to enhance functionality by allowing additional parameters during the loading process
updated regionMatches method to use ` startIdx ` instead of ` startIdx ` for URI matching to ensure correct indexing of URIs in the
updated ` weigher ` method calls to use ` getRetainedSize ( ) ` instead of ` length ( ) ` to ensure accurate
corrected spelling from " isExceedRandomizationDepth " to " hasAlreadyRandomizedType " across multiple files to ensure consistency and accuracy in terminology
added support for the " LEAD " and " LAG " function in UnsupportedOperatorsVisitor. java and a corresponding test in TestWindowFrame
added a line to clear the headers in the proxy request to ensure the original headers are cleared before processing new requests
added a check to skip tests if SA attach is expected to work to ensure the test skips execution if SA attach is expected to work
added null check for bgColor before checking its alpha value in GraphicsDevice. java and created TranslucentWindow. java to ensure robustness
added null checks for user details and improved error handling in UserInfoActivity. java to ensure users are only displayed when available and provide appropriate error messages
added serialization support for PrecompiledHeaderData and updated PreprocessorDelegate to check serialization and deserialization to ensure that precompiled headers are not serialized on
[ flink - 18536 ] [ connectors / kafka ] validate ` update - mode ` property in ` kafkatablesource
added integration tests for named output groups in a new file ` MultipleOutputsIntegrationTest. java ` to ensure named output functionality works correctly within the
updated regex pattern in FileSettings. java and added logic to append newline characters to the original content to ensure that the original content is preserved and
nifi - 992 : fix npe in stateless controller service initialization and validation context
replace usage of ` new Object [ ] { } ` with ` ArrayUtils. EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests.
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep. java to enable persistent taskbar mode functionality in the test
added two new DeviceStatus entries for leaving dock and energy saving mode to enhance device status management for the application
add blockstateexception to the error message when load a model
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest. java to temporarily disable the test due to known issues
added a conditional check for 2D graphics before returning the current pixel scale to ensure correct scaling behavior for non - 2D graphics
refactor RussianLowerCaseFilter class to improve code readability and maintainability
replaced ` Map < String, String > ` with ` Map < String, String > ` in ` CsvBulkLoadToolIT ` and updated
replace the file separator character with underscores in displayName to ensure consistent file path formatting across different operating systems
- added resettableinputstream to make wavedata load faster
added a ` repeatFirstLineIndent ` flag and updated indentation logic in ` ColumnText ` to support multi - line indentation in column text processing
cast the ` oid ` object to ` Object ` before comparison to ensure proper type handling and prevent potential runtime errors
remove unneeded call to getmetricstrackerfactory ( ) and getmetricschecker ( ) in hikariconportrait
rename loopex. controlflowanchornode to controlflowanchored.
disable focus painting of the button in the WindowsPlacesBar to improve user experience by ensuring that the button remains editable
updated condition to include UniqueConstraint and ForeignKey in DatabaseSnapshot. java to ensure compatibility with different object types in the database schema
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and introduced a new API endpoint in
[ ds - 3892 ] post community admin group creation shouldn't contain dc. title.
don't try to extract the utterance if there's no word
added unit test base on user forum issue
updated thread selection from getBackgroundThreads to getDatabaseUpdateThreads in FeedRefreshUpdater. java and added getter and setter methods in ApplicationSettings. java to
increased FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 to improve performance and responsiveness of the scrolling feature
replace usage of system. class. getName ( ) with java. lang. system in hotspotresolvedjavafield. java
hhh - 13644 - fix npe in procedurecallimpl. getresultstream ( )
added a null check for getApiProperties ( ) in RestSwaggerSupport. java to avoid potential NullPointerException when accessing API properties
added new WebSocket frame generator classes for Binary, Text, and Text frames to enhance the WebSocket API to support binary and text frame payloads
danielwagnerhall : replace `. findelement ( by. id ( " peas " ) ) ` with `
refactor randomGeo3dShapeGenerator to use random ( ). nextBoolean ( ) for lat, lon, and radius to improve randomness
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader
change return value from false to true to ensure successful operation execution
take only the ` ` java / util / concurrent /'' concurrent sig, not only the ` ` take'' signature.
added MkdirStep imports and corresponding commands in AndroidAar, AppleBundle, ApplePackage, and FatBinary classes to ensure correct
updated coordinate coordinate validation and error handling in MeshLeveler. java to improve error reporting and ensure proper validation of coordinates
[ drools - 7 ] prevent applypmml - pmml - based command execution if jpmml be not available
corrected the spelling of " locationMode " to " thermalStatus " to ensure accurate validation of the thermal status
replaced the hardcoded temporary directory path with a dynamic path based on the operating system to enhance compatibility and flexibility in temporary directory handling across different operating systems
prj file reader and catalog manager to detect memory map bug on window
added a null check for the organization in the PluginManager to ensure that a plugin is required for organization management
added a contributor license notice to the SepPostingsWriterImpl. java file to ensure compliance with licensing requirements and improve user understanding
deleted the ` TerminateWebSessionListener. java ` file to remove unused code that is no longer needed
updated the return statement to use the system property ` java. class. path ` instead of a hardcoded empty string to improve flexibility by allowing the
replaced ` ArrayUtils. EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` in ` KM200Device. java ` to
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest. java ` to ensure that Javadoc is not changed during
change the LAUNCHER3 _ PHYSICS feature from false to true to enable highlighting functionality in the user interface
added a div class ` noPrint ` to the ` HtmlThreadInformationsReport ` class to enhance the display of thread information in the
updated the main version from LUCENE _ 31 to LUCENE _ 40 and changed the version from LUCENE _
added private fields for symbolicator and task handling in BsdDebuggerLocal. java and extended OS detection in PlatformInfo. java to improve handling
allow the nethandlerplayclient to be garbage - free to prevent memory leaks.
don't log connection reset by peer in networkdispatcher
[ java ] : fix npe in aeron client conductor initialization.
added a break statement in the TouchImageView class to improve control flow and prevent fall - through cases
chore ( regen ) : update advanced setting proto to v3 ( # 137 )
remove the flushOnSSLHandshakeComplete method and replace it with flush ( ) in FeedableBodyGenerator. java to simplify SSL handshake process by
added handling for specific Java type assignments in TypeUtils. java to improve type inference logic for complex type scenarios
replace nonblockinghashset with concurrentsksset for memtablespendingflush
added null check for ` tree. errs ` before invoking ` memberEnter ` and modified error handling logic to include ` unrecoverableError
changed browser background from NO _ BACKGROUND to NONE to improve user experience by preventing unintended backgrounds
updated the negative button from ` finish ( ) ` to ` dialog. cancel ( ) ` in ` AboutActivity. java ` to ensure the
add unit test for integerstamp. divide ( int, long )
added a method to read an InputStream and updated the method to use it to improve code readability and streamline image loading process
added variable declarations and undefinitions to the SwitchCompiler and related classes to enhance the functionality of variable handling in switch statements
refactored the needFailover logic in RSAClientKeyExchange. java to improve error handling during cipher initialization to enhance reliability and debugging capabilities
updated the method call to include " psapi. lib " in addition to " kernel32. lib " and " gdi32. lib
updated SQL comment formatting to include line breaks to ensure consistency in SQL comment formatting across different operating systems
updated HTML escaping and compatibility settings in TemplateEngineFreemarker, ApplicationControllerTest, and ApplicationControllerTest to enhance security by ensuring
replaced ByteArrayInputStream with a direct string reading in CRDGeneratorTest. java to improve memory handling and provide a clearer output during XML unmarshalling
remove static modifier from samplerenderfactory. sampleresender. sampleresender
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to ensure the EmailableReporter is
added a boolean flag ` quoted ` in the ` CommandLineBuilder ` class and improved assertions in ` CommandLineBuilderTest ` to ensure proper handling of
removed the public access modifier from interfaces and classes in various files to enforce package - private visibility for better encapsulation
added a line to set the number of reduce tasks in FreeGenerator. java to improve job configuration for reduce tasks
[ type : field ] - use field definition from objectvalue instead of default value
updated FILEVERSION from " 505365 " to " 532077 " to reflect the new file version
added GL _ ARB _ texture _ float and modified extension check in FloatTextureData. java to ensure compatibility with desktops and clarify
add method to write / close a file in the fileserver to allow the file to be re - written
added a null check for outputDirectory and jarStream before setting it to avoid potential NullPointerExceptions when jarStream is null
added performance measurement to the return statement in ShadowSQLiteConnection. java to enhance performance tracking by measuring execution time
updated jmapToolPath from getCurrentJDKTool to getTestJDKTool in JMapHProfLargeHeapTest. java and JDKToolLauncher.
[ geoserver ] add enum for resourceerrorhandling, and skip misconfigUREdlayers
lucene - 975 : fix indexinput. read ( file,... ) to throw eofexception
provide more information in error message when jsps be not find
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for permission testing to enhance thread
updated CHECK _ EVERY _ N constant and modified memory free check logic to improve memory management and enhance logging capabilities
hbase - 25819 fix flakiness in testsplittransaction # testsplittransaction
added null check for currentSelectionArea in CompatibilityEngine. java to prevent potential NullPointerException during selection enabling
( chore ) camel - jetty - demos : add module to jetty - home - test - jaas
added spanX and spanY conditions to CellLayout. java to ensure proper placement of views during folder creation
refactor CacheOffHeap class to improve performance to optimize data processing efficiency
check for table depend on another table before re - open the database to prevent re - open the database.
added conditional check for row index and added warning log in TiledLoader. java to improve error handling and provide clearer feedback on extra XML gid
tilecache : synchronize setworkingset ( ) to avoid concurrentmodificationexception
added a new Java class named Solution that reads input parameters and computes final steps based on the starting stone to implement functionality to calculate and
add address checker to protect against bad torrent ip
fixed incorrect rendertypes in the ForgeHooksClient and MultiLayerModel classes
added tagless tag removal functionality to the configuration entry dialog to allow users to remove any unwanted tags from the dialog
changed thingTypeVersion from an integer to a string in multiple classes to allow for more flexible representation of the thingTypeVersion
added null check for recieptents before sending messages to avoid potential NullPointerExceptions when recieptents are not initialized
encapsulate issing ( RouteMatch <? > finalRoute, Class <? > bodyClass ) logic in a separate method to improve code readability
improve logging and retry mechanism in DockerClientFactory and RemoteDockerImage classes to enhance debugging capabilities and ensure reliable image pull operations
added resourcesMode parameter to AndroidMetadata constructor and updated perfStatsCollector to include resource mode information to enhance metadata handling by incorporating resource management
remove dependency on commons - lang DateUtils and replace with calendar to improve code readability and maintainability
replaced ` gradleImporter. importProject ( projectFile ) ` with ` gradleImporter. importProjectCore ( projectFile ) ` to update the
added handling for CommandFailedException in LiquibaseCommandLine to improve user feedback during command execution
refactor TreeMap implementation to improve performance and maintainability of the code
added methods to enable and disable async stack traces in the Display class to improve user experience by allowing async stack traces to be enabled
added a method to set the glow color in BubbleTextView and updated Folder class to use this color to enhance the visual appearance of the
set the style class of link and description to " file - row - text " instead of " file - row - text " to ensure consistent
modified AbstractJdbc2ResultSetMetaData to return " java. lang. Short " instead of " java. lang. Short " and added a new
lucene - 3661 : remove duplciate delete - file -
added null check before determining the upgrading status in HttpConnection. java to avoid potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that accepts a provider string to enable initialization of the provider variable
updated maxRAM calculation to include a limit of 2048 bits to ensure that the maximum RAM is constrained within acceptable limits for optimal performance
do not store statistic for non - data - included map in localmapstatsprovider
log file presence and activation if file be missing
replace noname1234 with invalid _ name in pdfwriter to improve clarity of error message
change guild # getroles method to return a set of role, not a list
updated array size check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter. java to ensure the array
added unit tests for the delete method in DashboardUserMapperTest to ensure that the delete method behaves as expected and maintains the expected behavior
update page data to use primaryparticipant instead of recipientidentifier
always _ derefef _ handle can be use to store pointer.
added a method to retrieve the buffer size to provide access to the buffer size for external use
add usage help auto - width feature to terasology's launcher
updated DrawerActivity. java to include a check for old interactions before setting titles and swiping notifications to enhance user experience by enabling swip
updated test cases in CommandLineParserTest. java to improve test coverage and ensure robustness of command line parsing
added configuration for animation threshold limits in the QuickstepAtomicAnimationFactory and PortraitStatesTouchController classes to improve animation responsiveness by allowing
updated method call to use javaNameFromExternal instead of Character : : toUpperCase to improve clarity and consistency in naming conventions
added native methods for setting and releasing a Rectangle2D in CWrapper. java to enhance frame management capabilities in the CWrapper class
added constant value validation in mmm Checker. java and created a new ValueTest. java file to ensure compliance with Java's
8151529 : [ testbug ] compiler / intrinsics / squaretolen / testsquaretolen. java fails due to
removed null check for constructors length in PojoUtils. java to simplify the code and improve readability
refactor JiraConfiguration class to improve code clarity to enhance maintainability and readability of the configuration logic
updated error messages to include parentheses for coverageFailed to improve clarity and consistency in error reporting
updated bounds settings in DeviceProfile. java to include search bar offset to improve layout accuracy by accounting for search bar offset
pulseaudio client : do not schedule next disconnect if idletimeout = 0.
refactor activity launch logic to run on the UI thread to ensure proper UI behavior on the main thread for improved user experience
removed the ` getSourceGroupOptional ( ) ` method and its usage from ` AppleSource. java ` to streamline the code by eliminating
increased await timeout from 22 seconds to 32 seconds in TestSimTriggerIntegration. java to allow more time for trigger firing processes
bugfix : FloatSelectiveStreamReader now use positionCount instead of outputPositionCount for block creation
fix : do not return an empty path if the distance be below the minimum distance
added a condition to skip processing for component types " com. codename1. ui. Form " and " com. codename1. ui.
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView. java ` and ` FloatingIconView. java ` to ensure
added a null check for commitPoint and initialized it with the latest commit from the core to ensure that the latest commit is obtained when the primary
added unit tests for ` getImei ` and ` getMeid ` methods in ` ShadowTelephonyManager ` to ensure correct functionality of
refactor debug methods in SimpleHostRoutingFilter to streamline request processing to improve code clarity and reduce redundancy in debug logging
added ` destory ( ) ` method and ` close ( ) ` method to ` IndexSegment `, ` BitmapInvertedIndex `
[ hotfix ] [ test ] add test case for normalmessagesendandrecvit
replace Charset with StandardCharsets for UTF - 8 encoding to improve code clarity and maintainability by using predefined character sets
hbase - 25892 use donotretryioexception in hregion # checkbulkloadfiles
added a commission parameter to the DefaultWithdrawFundsParams class and updated its usage in RippleWithdrawFundsParams to
removed an unused import of StreamTerminator in AutoClosingReferenceStream. java to streamline code by eliminating unnecessary dependencies
consolidated multiple catch blocks into a single catch block for IOException to improve code readability and reduce duplication in exception handling
added validation for abstract overloaded methods in Java2TypeScriptTranslator to ensure correct handling of method signatures and prevent misuse of abstract methods
added StacklessLogging import and wrapped the sweepDisk ( ) method call in a try - with - resources statement to improve logging capabilities and ensure
updated the ` SqlDataType ` class to implement ` Serializable ` and refactored entity maps in ` Entities ` class to improve data serialization
modified test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added null check for claimRequestString before parsing to avoid potential NullPointerException when claimRequestString is null
replaced ` FilterFactory ` with ` RelBuilderFactory ` and introduced a singleton instance for ` HiveFilterSetOpTransposeRule ` to enhance flexibility
updated the ` processTypeHintForNestedDocuments ` method to handle null source cases and added unit tests for handling null values to improve robustness
updated CoreStatus handling in CollectionsAPIDistributedZkTest and CoreAdminRequest classes to improve accuracy in obtaining core status based on index
make moddirtransformerdiscoverer. transformers and moddirtransformer. locators list non - static
fix typo in abstractquerydslprocessor # illegalinits
pegraphdecoder : provide pemethodscope. getcallstack ( ) to access method information.
( chore ) camel - resttemplate : replace deprecate setof (... ) with copiedsetof (... )
( chore ) camel - mail : remove unnecessary null check
http : / / issues. apache. org / jira / browse / amq - 4613 - fix nullpointerexception in camel - core
updated getIdentifierName ( ) method to include setIsPropertyName ( ) to ensure proper handling of property names during identifier retrieval
added new ` WaveGeneratorActivity ` and modified ` InstrumentsFragment ` to start it to improve navigation to the ` WaveGeneratorActivity
added logging for sheet names in KeyedProperties. java and improved sheet retrieval in SheetOverlaysManager. java to enhance error handling and logging clarity
add log ( ) and exec ( ) method to podit. log ( )
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to verify behavior when no documents are found to improve test reliability by
[ fix ] make sure we call super. dispatchmethodkernelokra ( range, args ).
updated DefaultMxRecord to implement Comparable and added sorting functionality to improve type safety and ensure ordering of MxRecord objects
refactor thread creation to use a privileged action for improved security to enhance thread management by ensuring only valid privileged actions are executed
added validation in SelectBox. java and set the value of " Linux6 " in UITest. java to ensure the dropdown reflects the
replaced ` IllegalStateException ` with ` Collector. printStackTrace ` in ` JobGlobalListener. java ` to improve error handling by providing stack trace information
added a parentSplit parameter to the createState method and modified state building logic to enhance state management by associating SplitState with parentSplits
changed connectionState variable to be volatile to ensure thread safety when accessing connection state
int default _ polling _ period to 1000 and add endpointid to the pollablebridge configuration
replace ByteBuffer encoding with MemoryUtil encoding methods in MemoryStack and MemoryUtil classes to improve memory handling and maintain consistency in encoding process
added exception handling for IOException and DocletAbortException in HtmlDoclet, AbstractDoclet, and AbstractBuilder classes to improve error handling by
fixed false positive with false positive in unusedmodifier
refactored code to use method references instead of lambda expressions to improve code readability and maintainability
parameterized test for ssl = { 0 } to improve test coverage for ssl attribute
improve logging and exception handling in transformationshelper. java to enhance error reporting and clarify transformation failure scenarios
fix permission retrieval for active connection rest service
replaced direct equality checks with EqualsBuilder to improve equality comparison logic
updated FileProcessor to handle null outputRoot safely to improve robustness by preventing potential null pointer exceptions
pdfbox - 2576 : add annotationfilter interface to allow custom annotation.
updated StackTraceCleaner class to improve stack trace handling to enhance performance and accuracy of stack trace processing
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 43600
hhh - 14611 : skip testliteralinselectexpressiontest on sybase dialect
updated the upgrade method to use slotSize instead of slot and improved null and length checks to enhance code clarity and prevent potential NullPointerExceptions during
added getStats ( ) method to AbstractDataImportHandlerTest and implemented getStatsSnapshot ( ) in Context and ContextImpl classes to provide access to statistics
updated the executor service to use a customizable thread pool to improve thread management and allow for long polling behavior
added scroll functionality to PagedView and BaseOverview classes to improve user experience by ensuring proper scrolling behavior
added functionality to display unlocks in the unlock dialog to enhance user experience by allowing users to manage unlocks easily
clear the paused duration list in PlayerEventListener to ensure the paused state is reset before processing new player events
added a new constant DEFAULT _ PARAM in StreamResult. java to define a default parameter for stream operations
changed the method signature of ` testNormalizeOrder ` from ` MalformedURLException ` to ` IOException ` to ensure proper handling of ` IOException ` in
updated println statement formatting and adjusted buffer handling in TsFileSketchTool. java and LocalTsFileInput. java to improve output clarity
added a new set to exclude Swift headers in UmbrellaHeader. java and refactored assertions in ProjectGeneratorTest. java to
reformatted the ` onHttpError ` method declaration for better readability to improve code clarity and maintainability
added encode ( ) method to RequestPlugin. java to enable proper handling of special characters in requests
mondrian : fix mondrian - 1265, and make rolapnativeloader and rolapnativeload
added validation for LDAP user passwords in LdapAuthenticationProviderImpl. java and created a corresponding test class TestLdapAuthenticationProviderImpl. java to ensure
pdfbox - 4892 : simplify code, a suggest by valerybokov
added a line to clear the complex writers collection in ProjectRecordBatch to ensure proper resource management and avoid potential memory leaks
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress serialization warnings and improve code clarity
added null check for classInfo in ClassGraphClassLoader to improve robustness by handling potential null pointer exceptions
added logic to handle " _ errors " in the ErrorResponseException class to ensure proper parsing and formatting of schema errors
added a constructor to the EventSourcingRepository class to enable initialization of the EventSourcingRepository with a specified repository provider
refactor symbol handling logic in mmm Attr. java to improve clarity and maintainability of symbol definition and scope handling
updated the SearchedPeopleCursorAdapter to handle multiple text formats to ensure correct text display when multiple mentions are present
updated command handling in NuvoConnector and NuvoHandler to use a stand - by mode instead of nullability to improve command
tiff : use ` ` tiffBaseline'' instead of ` ` tiff''
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 436 : add
add utils class to make it easy to manipulate and manipulate raw average.
added two new Java files, SigInt. java and SigIntBarrier. java to implement a concurrent signal handling mechanism within the Agrona
refactor ExporterGEXF to handle hierarchical graph edges correctly to ensure accurate edge counts based on graph structure
hive - 17515 : improve the performance of ctlseparatedprotocol ( jesus camacho rodriguez,
fix index out of bound exception in response detail
updated condition check from DB2Database to CatalogAndSchema. CatalogAndSchemaCase to ensure correct comparison between schema and catalog case
simonstewart : re - enable the test for browsermobproxytest
[ ds - 3952 ] bugfix : display line and column name correctly
reset mTextWatcher in InPlaceEditView. java to ensure consistent text input handling
updated InternalByteArray and TruffleString classes to improve code clarity and maintainability
[ flink - 3402 ] [ euphoria - flink ] fix edge with tuples2
updated multiple assertion classes for consistency to enhance compatibility and maintainability of the assertion framework
deleted the file ` Class Á. java ` and created a new ` DiacriticTest. java ` file to implement a test
[ java ] use awaitility in clusternodetest to avoid timeout.
[ mng - 4481 ] if a componentlookupexception occurs, set the workspacereader to the reactor
updated SSL scheme comparison logic in ServiceRegistryConfig. java and enhanced test assertions in TestServiceRegistryConfig. java to improve SSL handling and ensure
updated Mockito library version to ensure compatibility with recent features and bug fixes
removed unnecessary whitespace in the constructor signature to improve code readability and maintain consistency
added a ensureInstance method to ServletHolder to ensure proper initialization and instantiation of servlets
added logging functionality and modified ` deltaServerTime ` handling in ` BinanceExchange ` and ` BinanceBaseService ` classes to enhance ob
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8. 5 " to enhance functionality and compatibility
replace direct invocation of deregisterAnimated with a null check for the current form to ensure safe resource management by avoiding potential null pointer exceptions
added BitmapFactory. options parameter and implemented related methods in ShadowBitmapFactory and ShadowCanvas to enhance bitmap decoding functionality and improve code clarity
[ java ] don't execute executor. execute ( ) in examplesubscriber and ratesubscriber.
added functionality to prevent the next click on the holder in TimelineArrayAdapter to improve user interaction by preventing the next click on the holder
added " text " to the unmodifiableDataTypes in PostgresDatabase and improved handling of numeric data types in NumberType to ensure proper data type representation
make entryprocessorbouncingnodestest final ( # 3683 )
updated method checks for state management in AmbariManagementControllerImpl. java and AmbariManagementControllerTest. java to improve clarity and accuracy in
added a null check for ` bridgeUid ` before adding it to the inbox in ` CreateBridgeServlet ` to prevent potential null pointer exceptions during
refactor methods in PreconditionEnforcer and CrawlServer for improved clarity and consistency to enhance code readability and maintainability by standardizing method
updated display name retrieval to include null checks for " Teredo " in multiple classes to enhance robustness by preventing potential NullPointerExceptions when
updated SpriteBatch constructor to accept a default shader program parameter to improve flexibility in shader initialization based on available OpenGL 2.0
added options property to TestUtil. java to enable synchronous commit option for improved data handling
added TypeCoercer to handle duplicate elements in SortedSetTypeCoercer and created a test for it to improve element coercion reliability
updated Confirmation message IDs based on file presence and favorite status in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve user feedback regarding favorites
added a condition to check if the character is less than 256 before evaluating the safe [ c ] to ensure safe [ c ] is only evaluated
updated the fragment storage registration logic to use a dynamic port instead of a hardcoded one to improve flexibility and maintainability of fragment storage registration
removed andReturn call for empty clusters in HostResourceProviderTest to simplify test by eliminating unnecessary mock call
removed the logger parameter from the loadConfiguration method across multiple files to simplify configuration loading by eliminating unnecessary logging
bug fix : bordersize should not be set to empty
removed the ShadowHtml class and updated tests for text retrieval to streamline the code and ensure accurate text span handling in tests
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl. java ` implementing ` StarTreeRecordStoreFactory ` to provide a
updated logger configuration from " org. eclipse. jetty " to " org. eclipse. jetty. http3 " and " org. eclipse.
changed the visibility of the addListeners method from private to public to allow access to the addListeners method from other classes
[ hotfix ] fix typo in statesethandlestore javadoc
updated import statements for security constraint from org. eclipse. jetty. util. security to org. eclipse. jetty. http. security in multiple
update error message when instructor try to put in 2 different section
replace file and stream with try - with - resources to ensure proper resource management and avoid potential memory leaks
( chore ) camel - 1145 : fix test failure on non - existing port
updated methods to replace ` buildTarget ` with ` BuildTarget ` and introduced ` getAbiJarParameters ` to improve clarity and functionality in handling library
don't use ` ` #'a a a link in the phrase
bug 10719 : remove obsolete getpagesizeval method in listcapacity
added a case for CLOSED state in IteratingCallback. java to ensure proper handling of closed states
added an ` isAuthorized ` boolean and modified method signatures in ` AccessControlContext `, ` AccessController `, and ` ProtectionDomain `
added binding processing before deployment events in OSGiDeployer. java to ensure proper handling of application deployment events
added support for handling " tiff " codec and container type in DLNAMediaInfo. java to ensure correct mime type is used for media
bugfix : profileargumenttypesassumption be set to null if argument be null.
added a new file ` CubocDesktop. java ` and modified loops in ` Map. java ` and ` MapRenderer. java `
updated the file path for PolicyMonitor instances from " monitor - test - 1 " to " test - classes / monitor - test - 1 "
clear all file lists in TrashbinActivity to improve user experience by eliminating unnecessary deletions
changed the package of allConnectors ( ) from eclipse to com to ensure compatibility with the latest jdi library structure
[ gr - 17490 ] truffle : fix invalid guard for write global variable.
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted related logic to enhance event handling by incorporating intent
[ burning ] make max burn target lower fee configurable
replaced specific imports with a wildcard import and refactored the creation of UniqueConstraintSnapshotGeneratorSnowflake to streamline the import statements
updated SQL item assignment logic in DMLTransformer. java to improve clarity and correctness of the insert statement generation
updated import statements and method names in ServiceValidateControllerTests. java to simplify test imports and improve method clarity
added a parameter ` isStatement ` to ` getDefaultValidFunctionName ` and introduced a method to hide the default function name to improve function name
refactor methods in JarLauncher class to improve code readability and maintainability
updated generics in several classes and methods for better type safety to enhance type safety and avoid unchecked warnings
make sure we don't send hole - punch packet for a call peer that don't exist.
added a test for updating PGobjects in ResultSetTest. java to ensure correct handling of date values in PostgreSQL updates
modified the PasswordResetEndpoints to handle empty results and return UNPROCESSABLE _ ENTITY for non - UAA origin to improve error handling and ensure
replace getChildNodes ( ). item ( 1 ) with getDocumentElement ( ) to obtain the current document element to ensure compatibility with the latest XML structure
updated caching mechanism in Cache. java to improve performance and efficiency of data retrieval
rename timeinsec to timemillis for clarity
allow light relay to be bind even if it be invalid bind.
added a new ` Chainer ` class and updated the ` contains ` method in ` CollectionSubject ` to use it to enhance the functionality of
refactor Model class to improve code structure to enhance maintainability and readability of the code
update recordedTime to a constant value of 619315200000L to ensure recordedTime reflects the correct time range
added a condition to resize the status buffer for Windows terminal types to ensure proper handling of terminal display on Windows systems
added a state check for host versions in UpdateDesiredStackAction. java and updated the value in RepositoryVersionState. java to ensure host version
move javatests and jsinterop restriction checker test to correct location
switch to linkedhashmap instead of hashset to ensure predictable iteration order
removed try - catch block around the toObject method call to streamline code by eliminating unnecessary exception handling
rearranged the order of parameters in the resolvePropertyConfigurer method call to improve code readability and maintainability
fix typo in commitlog archiver thread pool name
added tests for CloudSolrClient's upload functionality in TestCloudSolrClientConnections to ensure proper handling and validation of Solr client configurations
added synchronized blocks to ensure thread safety when modifying shared allBindings and DebuggerSession instances
added functionality to clear temporary files and cache directories in ShadowContext to improve file management and ensure proper cleanup during tests
xml dsl : add whitespace style to xml dsl's xml dsl
[ drools - 561 ] avoid to write kiemodule to kiebuilder when kiemodule be not present
updated block data check for Farmland interactions in BlockEventListener. java to improve logic flow and ensure correct behavior based on new farml
added a default implementation of the getLocalIp method to ensure that the method returns null instead of throwing an exception
updated serialization method in JdbcStepExecutionDao and added a test for storing Integer in AbstractStepExecutionDaoTests to ensure correct data handling and validate
update to dictionary to show chinese character ( strip the first chinese character )
added " python37 " to the list of supported Python libraries in ` python. java ` and modified resource loading conditions in ` tensorflow. java
added a refresh button to the PluginTab class to allow users to refresh the plugin list effectively
change log level from info to warn for reloading, saving, and trimming history files to improve user experience by providing a warning level for important
bugfix : don't try to find the vm's volume in the hyper - host data center if the vm do n '
( chore ) camel - sftp : fix flaky test
updated ExperimentalMockitoJUnitRunner. java file to enhance test coverage and improve code reliability
refactor code to use a centralized method for retrieving build serial to improve code readability and maintainability by centralizing serial retrieval logic
rename SwapGBuffers class files for consistency to improve clarity and maintainability of the codebase
added null check for skeletonControl in AnimControl. java to ensure proper cleanup when spatial is null
added methods ` setSmartReplies ` and ` setSmartReplies ` to the ` RankingReflector `
[ java ] only add segment file to archive if they don't already exist.
updated the retrieval of ` carrot2ResourcesDir ` from ` resourceLoader. getConfigDir ( ) ` to ` initParams. get (
added null check for testRect in WindowsTreeUI. java and created a new class bug8004298. java for testing JTree functionality to
updated ASM _ API _ VERSION from ASM7 to ASM9 in CompilationConfig. java to reflect the latest version and ensure compatibility
mahout - 992 : improve error message if vector file could not be load
added client information to SurrogateAuthenticationEventListenerTests to enhance test data by associating client information with the event
set isUserView to false in CardPresenter. java to disable user view functionality in the card presenter
updated import statements and refactored diagram generation logic to use static imports to enhance code clarity and maintainability by reducing redundancy
added ` syncLogTimePerRequestHistogram ` to the ` getOrCreateHistogram ` method in ` LogDispatcherThreadMetrics. java ` to enhance clarity
added a new module - info. java file for the SQLite connector module to define module exports and requirements for better modularization
added a 1 - second delay in StreamResetTest. java to improve test reliability by allowing more time for stream resets
removed condition for checking web type " new " in permissionsManager initialization to simplify permissions management by directly using the data manager
updated DateParser and TestDateParser classes to improve date parsing functionality and maintainability
added a method to get the depth in SpringLoadedState to provide dynamic control over the depth of the application based on context
replace System. arraycopy with Arrays. copyOfRange for copying data to improve code readability and maintainability by using predefined constants
[ hotfix ] fix checkstyle violation in executiongraph
removed the SwipeLayout dependency and simplified view binding in NotificationRenderer to streamline the notification handling process and improve code readability
updated exception handling logic to handle null invocation safely to improve error reporting by providing a default value when invocation is unavailable
add nullability annotation and change lock field default to empty string
replaced MethodHandle usage with java. lang. reflect for finding the setter method to improve reflection - based access to the setter method
changed the type casting of value1, value2, and value3 from int to Integer to ensure correct data type handling for bit operations
[ te ] email ] fix email format for metrics and datasets
added functionality to manage the visibility and layout of a JPanel to improve user experience by ensuring that the provided panel displays appropriately based on the current
added a null check for location in ServerCallable. java to ensure robustness by preventing potential NullPointerExceptions
refactor BuilderFactory, Pipeline, and PipeliningTest classes to improve code readability and maintainability
added a check for null key parameters in BasicChecker. java to ensure valid key derivation and improve error handling
refactor media type ignoring logic in MediaTypeRequestMatcher to improve clarity and maintainability of media type matching tests
updated task number logging format in LlapBaseInputFormat. java to improve clarity of log messages by including task attempt number and task ID
added Spring property to the SpringBootTest configuration to allow bean definition overriding to ensure compatibility with Spring's configuration in the test
added null check before closing indexReader to prevent potential NullPointerException during indexReader closure
moved the ` BTCMarketsStreamingMarketDataService ` and ` BTCMarketsStreamingMarketDataService ` classes from the ` service ` package
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest ` to ensure that the ` issue151 ` rendering
added a new file ` CompatibilityTest. java ` that tests internal DTD and properties to verify compliance with external DTDs and ensure
added new utility classes for push notification and security handling to enhance the application's capability to manage push notifications and improve security measures
hbase - 25836 fix the bug that tablerebalancer # getnextsegmentassignment may return multiple instance ( # 451 )
bump version to 2.7. 0 for exoplayer
log4j2 - 1010 fixed line separator issue in unit test
improve handling of timeout in ajpaprocessor. readtimeout.
initialize friction, restitution, and density to 0.0, and set isSensor to false to ensure default values are set to zero for
updated method signatures to include anomalyFunctionSpecMap and adjusted fetchSaclingFactors to fetchScalingFactors across multiple classes to enhance anomaly
added a shell command to wait for broadcast idle in LauncherInstrumentation. java to improve error handling during broadcast idle wait
added unit tests for font and link tags in ResourcesTest. java and adjusted the calculation in ResStringPool _ span in ResStringPool.
move guistatscomponent. java back to ---.. / src _ base / common / net / minecraft / src
added permission handling for phone calls in Launcher. java to ensure proper access to phone - related functionalities
updated return values in SimulationPanel, PlotDialog, and BasicEventSimulationEngine classes, and improved warning handling in Startup class to enhance functionality
updated GeoPointDistanceQuery, GeoPointInBBoxQuery, GeoPointInPolygonQuery, and GeoEncodingUtils classes to enhance functionality to support larger data
added method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to check if the Docker is available before proceeding to enhance functionality by
added a new constant VPX in CodecTypes. java to define codec type for VPX support
added a coordinatorAddress parameter to the DistBuildFactory and updated its usage in DistBuildRunCommand to allow for dynamic configuration of the coordinator '
added a method to match a path in FsUtils and refactored timer usage in WrapTimer to improve file path matching functionality and enhance timer
added a conditional check before adding labels and updating totValue in TestTaxonomyFacetSumValueSource. java to ensure labels are only added when
make sure getboolean ( ) return ` ` true'', not ` ` false''
simonstewart : remove @ test annotation from testperfbenchmarkdriver. java
added materialization time setting in ObjectStore and implemented a test for update creation metadata in TestObjectStore to ensure proper handling of creation metadata updates
added error handling for UnsatisfiedLinkError in VoskSTTService. java to improve stability by notifying users when a native
remove jmssampler. is _ one _ wAY property and update log format
update break weight logic in GlyphView. java to improve accuracy of break weight evaluation
refactor data reading logic in RCFile. java to improve readability and efficiency to enhance the efficiency of data reading and ensure accurate seeking based on
added @ AwaitsFix annotation to AutoAddReplicasPlanActionTest. java to indicate a pending fix for SOLR - 13028
replaced direct calls to ` steps ` and ` processors ` with a ` LinkedList < Entry <?, Long > > ` to improve data structure
removed the ` flavorsForFormats ` parameter from the ` setToSortedDataFlavorArray ` method and simplified the sorting logic in the ` DataTransfer
hbase - 25836 thrift : addendum add - infoport to thrift test
added a condition to return false if at the end of the file in RegExpScanner. java to handle end - of - file scenarios gracefully
added functionality to track enabled metrics and timers based on system properties to improve performance by avoiding redundant boolean retrieval for metrics and timers
fix nullpointerexception in chatroomjabberimpl. getroom nickname ( ).
improve error message if filename be miss or inaccessible
refactored the creation of the refresh token into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig. java to improve clarity of error messages
[ flink - 3394 ] [ yarn ] remove unnecessary lock in yarnflinkapplicationmasterrunner
added a new method ` nativeGetHardwareBuffer ` to the ` ShadowNativeImageReaderSurfaceImage ` class to provide a mechanism for retrieving hardware
updated SSL URI for BTCChinaMarketDataService initialization to ensure proper access to the BTCChina data service
CPDTask. java : fix path problem with absolute path on window
added new files for OauthController and Oauth2PluginTest to implement a basic authentication flow using the ShenyuSpringMvcClient
updated the SemgrexPattern class for improved functionality to enhance performance and accuracy of semgrex pattern matching
added new ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and removed them from ` EntryStream ` to streamline
updated error logging message format in RestCodec. java and added error handling in ExceptionToProducerResponseConverters. java to improve error reporting and provide
updated the ` shouldComeFromThisClassLoader ` condition in ` RobolectricClassLoader. java ` to include ` org. specs2 `
changed the conditional check from " contains ( sdp ) " to " contains (! transmittableAudioEncodings. contains ( sdp )
changed the type of defaultValue from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator. java to ensure correct handling of default values in the
added test for station3gml31 and station3gml32 in NormalizedMultiValuesTest. java to ensure correctness of geograph
replaced the static validity field with a volatile boolean flag and updated the handling of HTTP responses to improve clarity and maintainability of the tests
added a check to ensure the processor is configured before expanding regex mapping to prevent potential errors when the processor is not configured
updated the ` splitIntoThirtyParts ` method to ` splitIntoThirtySecondsParts ` and refactored the method to
added ` XLCDCommunicator ` and ` XLCDController ` classes and updated ` FirmwareUtils ` to use these classes to
[ drools - 5652 ] drools - 5652 : fix kmodule marshalling to work with jaxp v2 jaxp v
added retryTimes and updated assertions to check for emptiness to ensure retry occurs while processing triggers and enhance test reliability
added a timeout for thread joining in WorkerProcessPoolTest to improve test reliability by ensuring threads are properly terminated after a timeout
updated hashCode ( ) and equals ( ) methods in DelegatingMethod. java and added a new test class DelegatingMethodTest. java to
updated FREEZE _ V2 and UNFREEZE _ V2 values from 20000 to 10000 to increase values for freezing and un
modified the ` command ` method to include ` throws ConfigurationException ` and removed duplicate calls to improve error handling and streamline configuration saving
deleted ` SpringTransactionHooks. java ` and changed the target class type from ` SpringTransactionHooks ` to ` AbstractSpringTransactionHook
refactor AbstractClassAssert for improved code clarity to enhance maintainability and readability of the assertion logic
add test to verify that getuninitializedstringvalue ( ) return an empty string.
added support for provided dependencies in AndroidLibraryDescription and associated tests to enhance dependency management and improve test coverage for Android library functionality
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags. java to enable synchronization of the keyboard open and
added a static flag ` sSavedBugreport ` and modified bug reporting saving logic to ensure that bug reports are saved only when necessary
added a constant for " cinepack " format in FormatConfiguration. java and utilized it in LibMediaInfoParser. java to support
added camera bobbing feature and modified hand movement animation logic to enhance player experience by allowing or disabling bobbing in hand movement animations
updated the method to use ` digest. toString ( ) ` instead of ` data. describe ( ) ` in ` GrpcCasBlob
deleted the HSQLDBServerFilesFilter. java file and refactored file listing logic in TestUtility. java to streamline the codebase
walletappkit : fix a couple of npes in restorefromseed ( )
updated variable assignment from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` and added a trace log statement to
added a new method ` visitMethodInvocation ` to check for existing method invocations to ensure that only valid method invocations are processed
replaced hardcoded array size 6 * 3 with a constant NUM _ VALUES in AmbientCubemap. java to improve code maintainability and reduce
display info about method and class mode selection during profiling
added handling for zero - length values in GenericUDFMask and GenericUDFMaskFirstN, GenericUDFMaskLastN, and
move derby block store test to a temp folder to speed up test
add method to itemstack to check if a itemstack can be damage.
fix mc - 167447 by allow line _ width to be override by RenderSystem. lineWidth
set ` browser. startup. page ` to ` 0'' in firefoxdrivertest
updated HTTP method condition in Http1xClientConnection. java to handle CONNECT and GET requests appropriately to ensure proper response handling for specific HTTP methods
change task accept from " compile " to " process - classes " to clarify the task's purpose in processing classes
replaced ` shutdown ( ) ` with ` closeIdleConnections ( 1L, TimeUnit. MICROSECONDS ) ` in ` HTTPHC
added a check for ` PropertyHelper. hasAggregateFunctionSuffix ` before processing metrics to ensure that metrics are only added when the function suffix is
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use mCurrentFullscreenParams to improve flexibility in managing fullscreen parameters for
added a new Java class named Counting to count occurrences of a given input to provide a mechanism for counting occurrences of a given input
fixed nullpointerexception in clusteredagentmanagerimpl. java
updated test cases in MutisignOperationerGodicTest. java to improve test coverage and ensure accuracy of operation handling
added error handling for ` readToStartFragment ( ) ` and ` readToEndFragment ( ) ` in ` StaxEventItemReader
replaced specific imports with a wildcard import and refactored return statements in ShadowTextView. java ; added null check in TestAttributeSet. java to
updated JSON import statements from ` com. nimbusds. jose. shaded ` to ` net. minidev. json `
updated OS family detection from " Linux " to " AIX " and added support for " Linux - s390x - 64 " to ensure
cloudstack - 2120 : fix vr control ip update when vr start
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate invocation without blocking with result synchronization
deleted the PresenceMessageComboTests. java file to remove obsolete test that is no longer relevant to the current codebase
update calculations in PortraitPagedViewHandler to use Math. round for width and height calculations to ensure accurate rounding of task percents
corrected the casing of " clusters - 0 " in the KMeansDriver. run method calls to ensure consistency and correctness in path handling
hbase - 15421 ( addendum ) fix keyvalue # hashcode ( ) and # equal ( )
camel3 - fix npe when add service to type converter.
added handling for ConditionalTask in SparkCrossProductCheck. java to improve task processing logic based on conditional tasks
updated action mappings for managed profile actions in Launcher - related classes to improve consistency in action handling during profile management
updated conditional logic in ` LoginInfoEndpoint ` to include ` jsonResponse ` check and added two test cases in ` LoginInfoEndpointTests `
hbase - 17514 add more information to log ( jesus camacho rodrigue )
[ huobi ] add'result'field to accountinfo
add reserve word " PERIOD " in MariaDBDatabase and add a test for it in AddColumnGeneratorTest to ensure proper SQL generation
[ beam - 8470 ] [ beam - 8470 ] add beam sdk version and default value to portablepipelineoptions [ beam - 8470
added instructions for updating dictionary loading mechanism in VersionChangeLogs. java to inform users about changes to the dictionary loading mechanism
changed the accessibility of ` NUM _ MILLIS _ IN _ DAY ` from private to public in ` IndexExpressionIT. java ` to
removed debug print statement from ImageResourceLoader. java to clean up the code and reduce unnecessary console output
[ java ] : only invoke aeron client if it own aeron client.
updated the validation logic for implicit lambda parameters and introduced a new class for warning handling to improve type validation validation for lambda parameters and introduce a new
refactor hideMenuItem method to showMenuItem for better encapsulation to improve code readability and maintainability by reducing redundancy
added reserved fields to BTCETransHistoryResult to support new transaction types
replaced List with Set for series and exceptions in RetryFilterFunctions. java to improve performance by preventing duplicate entries
mark PluginLoader as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
updated timestamp comparison logic in LastQueryExecutor. java and added a new test case in IoTDBLastIT. java to improve logic correctness
removed carriage return and line breaks from requestStr to ensure consistency in response formatting
( chore ) camel - build - maven - plugin : do not log wire protocol error
added safe area setting for titleBar in Sheet. java to enhance user experience by ensuring title bar is accessible
modify the loop iteration order in OverflowSeriesImpl. java to reverse the order of TimeSeriesChunkMetaDataList to ensure correct processing of series metadata
added SQL syntax for renaming a column in AlterTest. java to ensure proper SQL syntax for renaming operations
change visibility of the copyState method from package - private to public to allow access to the method from other class
fixed - rexecutorservice. executecallable ( ). tocompletablefuture ( ) method throw classcastexception.
the file system should use a. part file suffix instead of a hardcoded one.
[ flink - 26011 ] [ orc ] fix license issue
removed unnecessary null check before setting valueArg and nameArg in CompareFunctionsProcessor. java to simplify argument handling logic and improve code readability
don't try to reduce scope when there's insufficient disk space
implemented ` toString ( IndexReader ir ) ` methods in ` SegmentTermVector `, ` TermFreqVector `, and ` QueryTermVector
added state check in AbsSwipeUpHandler and unregister task stack listener in TaskAnimationManager to ensure proper handling of handler state and prevent memory leaks
updated getLockTimestamp method to return a long and setLockTimestamp to return a long value instead of a static context to improve flexibility in managing lock
replaced direct retrieval of the artist with a helper method to retrieve it to improve code readability and maintainability by encapsulating artist retrieval logic
added null check for remoteMessage before accessing its data to prevent potential NullPointerExceptions during execution
npe fix in splittext when there be no header marker match
added support for retrieving and loading the keystore type in HttpsConnectorFactory to ensure compatibility with Windows key store types and handle potential exceptions gracefully
update DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest. java and WebClientSenderTests. java to improve test
updated conditional logic in FileSyncAdapter. java to check for FILE _ NOT _ FOUND result to ensure remote folder is ignored when the result code
added animation capabilities to the Slider class to allow interpolation of visual values during animations
align expected line endings with actual line endings to ensure consistency in test expectations
increased maxWidth and maxHeight from 512 to 1024 in TexturePacker. java to optimize texture packing for improved performance
added a test for negated ternary operators in UnnecessaryParenthesesTest. java and modified the condition in UnwrapParentheses.
camel - 1994 : fixed hazelcast queue consumer to not set poll timeout if body be null.
added TextFeedbackTest class to the AllTests suite to facilitate testing of text feedback functionality in the AllTests suite
replace Math. round with Float. compare for score comparison to improve accuracy in score comparison
updated case statements for DENSITY _ 560, DENSITY _ 2HD, DENSITY _ 4K, and changed resource
bugfix : arraycopysnippets now use object _ array _ klass _ element _ location for read klass pointer.
don't display stage _ total stage if it's zero
add - r on / off support for remote scm
[ mielecontrol ] fix mielecontrollability set to false
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager. java ` to implement event logging functionality for
change variable name from ` log ` to ` LOG ` for better clarity to improve code readability and maintainability by using a more descriptive variable
add test for projectgenerationevent'finished'and'started'event
new function ` ` PREVIEW _ POINTS'' and add ` ` PREVIEW _ POINTS'' to the selection tool
refactor methods in JavaCompiler class to improve code readability and maintainability
integrationtesttimedboundedrequestswithregionreplicas : throw an exception if no time remains to execute random read
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added " -- gc - sections " and " -- nocopyreloc " options to the ldflags in NdkCxxPlatform. java to
updated the fallback URI handling in ` SpringCloudCircuitBreakerFilterFactory ` to include path and full fallback URI formatting to enhance the robustness of URI
simonstewart : fix javadoc warning from the java. desktop test suite
added null checks for URI and localName in ReadOnlySharedStringsTable. java to enhance robustness by preventing potential NullPointerExceptions
added a method to retrieve the account network using a byte array query address to enhance the HTTP request handling and improve connection management
added a check for negative availTextWidth in SwingUtilities2. java and improved error handling in Test6635110. java to ensure proper text
refactor FlatteningIterator and FlatteningIteratorTest classes to improve handling of blank states to enhance code clarity and ensure correct behavior when blank
replace special characters in title and body with HTML tags in NotificationUtils. java to ensure proper HTML formatting by removing invalid tags
doc : generate sample code in the java microgenerator ( # 3 )
add a before method to reload and delete any existing question
updated return values from - 1 to 0 in HSSFSheet. java and added new assertions in BaseTestSheet. java to ensure correct row
added permission checks for launcher activities and refactored pending add info handling to enhance security and ensure proper handling of potentially malicious intents
[ java ] send session state update event with time of last activityMs.
implemented hashCode ( ) and equals ( ) methods in AbstractParquetMapInspector to ensure proper hash code generation for object equality
added a check to flush the QuicSession in the HTTP3StreamConnection when remotelyClosed to ensure that the buffer is released when remotely closed
[ hotfix ] [ core ] make splitreader autocloseable
removed the deepCopy ( ) method from GsonBuilder to streamline the object cloning process
make llsourcebuilder cache return ` ` not find'' instead of ` ` null''
refactor file opening and closing logic in RestClientRequestImpl. java to improve code clarity and streamline file handling process
removed unnecessary whitespace in GrblController. java to improve code readability and maintain consistency
replaced ` MockFactory. class. getClassLoader ( ) ` with ` SearchingClassLoader. combineLoadersOf ( ) ` in ` MockFactory.
add test case to reproduce bug in jme3test
added LEFT _ SEMI _ JOIN to the condition check in ConstantPropagateProcFactory. java to support additional join types in the processing logic
replaced the variable ` completed ` with `! completed ` in ` HttpReceiver. java ` and ` HttpSender. java ` to improve clarity
replace arraylengthoffset with arrayoopdesclengthoffset.
http : / / issues. apache. org / jira / browse / amq - 4798 - fix and test failure
updated multiple Java files for consistency and functionality to enhance maintainability and readability of the codebase
added a check to ensure the application context is not running before attempting to stop it to prevent potential errors when the application context is not running
changed the return type of drawItem method from BitmapFont to GlyphLayout to allow for more flexible rendering of the item
updated metrics handling in SpringmvcClient to use a MetricsPublisher to improve metrics collection and enhance error handling for JSON processing
removed the SAFE _ ACCOUNT _ AGE _ DATE constant and simplified the return statement in AccountAgeWitnessService. java to streamline
updated structure and reader classes for consistency and clarity to improve code readability and maintainability
added ResourceUrlProviderExposingInterceptor support to CasWebflowContextConfiguration to enable the handling of resource URLs in the webflow execution
added a new class ` DexReturnInliner ` and modified ` DexBody ` to use it to improve the handling of return statements inlined
[ smarthome ] EnrichedRuleDTO to include configuration property to enhance EnrichedRuleDTO functionality
removed the LinkOption. NOFOLLOW _ LINKS parameter from the isDirectory method in PathResource. java and added two new Arguments in Alias
[ flink - 17501 ] [ table - planner - blink ] remove dialect from executionentry
replace ` rDotJavaPackages ` with ` rDotJavaPackagesSupplier ` and introduce a ` hasRDotJavaPackages ` boolean to improve
add a test case for the new package - info rule
set the minimum cross - compaction unseq file level in IoTDBDescriptor to allow configuration of the minimum cross - compaction unseq file level
[ hotfix ] correct the package name of activeresourcemanager
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the test
updated URI handling in ZipResource. java and added unit tests in ZipResourceTest. java to improve robustness in URI parsing and ensure functionality
updated the formatting and added thumbnail fetching logic in ExpandableUploadListAdapter. java to improve code readability and enhance thumbnail handling during uploads
refactor Robolectric test class hierarchy handling for config merging to improve clarity and ensure correct configuration merging based on class and method annotations
replaced the use of Predicate for blockRegistry and itemRegistry with Iterables. filter for filtering lists to improve efficiency in obtaining registry names based on input
changed method visibility from abstract to concrete in AbstractDataChangedListener. java and updated WebsocketCollector. java and WebsocketDataChangedListener. java to
updated JSONPojoConvertor to handle enum types and added methods for color management to enhance functionality to support enum types and improve test coverage for color
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper. java ` to encourage the use of the
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and introduced ` TransportFormat. pump ` for
updated GyroControl class to implement OrientationEventListener and added orientation correction functionality to improve device orientation handling during sensor swap operations
update BIOME _ LIST _ SIZE from 256 to BiomeGenBase. getBiomeGenArray ( ). length to ensure the
updated eval function calls to use ` print ` instead of ` println ` to improve clarity and consistency in function evaluation
fix compilation error due to miss filecompilerconfig. getenvironment ( )
added a new interface ByteToLongCollector in the package com. speedment. common. function. collector to provide a mechanism for collecting long values
added a preload option to MMapDirectoryFactory to allow dynamic preloading of the map directory based on user parameters
added custom metrics for enabled components in BukkitPlatform to provide detailed metrics on component usage
refactor QuickConnectREST to improve code structure to enhance maintainability and readability of the code
added aspect ratio and drawable resource for the default card image to enhance visual appearance and improve user interface consistency
[ ds - 3892 ] fix login redirect and implicit auth bug
updated VectorHashKeyWrapper to handle empty array cases for long, decimal, and byte values appropriately to improve robustness and prevent potential NullPointerException
added support for the system nanotime JIT test in TimeChangeTest. java to enhance testing capabilities for the system nanotime during JIT
added null checks for line input in MultiPartFilter and print parameter in MultipartFilterTest to ensure valid input handling and improve debugging information
fire livingexperiencedropevent, close # 7897
updated status messages for API key and refresh parameters in OpenUVBridgeHandler and OpenUVReportHandler to provide clearer error descriptions and improve API status
[ beam - 10670 ] remove unsupportedoperatorsvisitor from beam - dsls - sql
added RdepsFunction support and improved input handling in GraphEnhancementQueryEnvironment to enhance functionality and ensure proper dependency resolution for sublib
refactor Character class to improve code structure to enhance maintainability and readability of the code
added logic to scale the entire rocket in the selection option to ensure that only one rocket is selected, improving user interaction
replaced instances of ` Arrays. toString ( bytes ) ` with ` bytes ` in assertions to improve test clarity by directly comparing byte values
added time boundary handling for hybrid tables in BaseBrokerRequestHandler. java to ensure proper processing of time boundary information for realtime data sources
fix regression cause by race condition in connector. getconnection ( ).
updated EightmusesRipper to ripping images from a large collection of free Porn comics to improve album title handling and
replaced instances of ` mDevice. wait ( ) ` with ` TestHelpers. wait ( ) ` across multiple test files to improve code consistency
added phone profile checks in QuickstepLauncher. java to ensure proper layout behavior for phone devices in landscape orientation
updated assertions to unwrap QueryImpl instead of property in PartTreeJpaQueryIntegrationTests. java to improve compatibility with QueryImpl and ensure correct retrieval
replaced the method ` readMatchingLines ` with ` readMatchingLines ` and added a new ` readMatchingLines ` method to enhance security by
added dynamic check for jpa's getResultStream method invocation in JpaQueryExecution. java to ensure correct method invocation based on the query's
fixed nullpointerexception in physicprocess if entity be null
clear _ map _ when _ value _ attributes _ are _ indexed in entryprocessor
add a request listener to the jitsi - conference - room to notify the jitsiemeet - tools if it's join
updated color formatting in mmm Utils. java and ppp UtilsTest. java to include bold and background colors in the HTML message to improve
added subscription for disable text properties in DefaultMenu and EditorMenus classes to enable dynamic control of hidden names in the user interface
added RmStep to the scratch path in Aapt2Link. java to facilitate the creation of link tree in the build process
replaced instances of ` new Capture < > ( ) ` with ` Capture. newInstance ( ) ` in ` ExternalJavacTest. java `
ggb - 2118 fix selection after click on algebra view
tck : fix for tck failure when parse cql expression
added isCanceled ( ) method implementations in BehaviorCall, Calls, and OkHttpCall classes to ensure consistent behavior of the isCanceled (
replaced the default implementation of ` isAnnotationPresent ` in multiple classes to provide a default implementation for annotation presence checks
replaced the default method ` removeAllWidgets ( ) ` with a default implementation that throws an ` UnsupportedOperationException ` to provide a default implementation for
[ hotfix ] [ yarn ] fix yarn test case failure
opensslcipher : use math. max to get output size for update
added conditional logic to handle high - res transcoding in PlaybackController. java to ensure proper transcoding behavior for Fire TV Stick and
[ beam - 8470 ] add mockdatasourcereader to spark - structuredstreaming module
replaced specific imports with a wildcard import and modified listener management logic to enhance code clarity and ensure consistent handling of listener states
changed the parameter type of ` putString ` from ` boolean [ ] fullwidths ` to ` byte [ ] fullwidths ` and initialized
added import for BaseItemDragListener and modified drag source handling in FolderIcon. java to support drag - and - drop functionality in the launcher
added createEmptyArtifact method and modified artifact creation logic in AbstractRepositoryConnector and FileSystemConnector classes to improve artifact handling and ensure proper type casting for better
updated configuration keys for EXCHANGE _ SERVER, EXCHANGE _ TYPE, HOST, PORT, and VIRTUAL _ HOST in RabbitMQPublisherImpl.
removed unnecessary calendar checks in VideoViewerActivity. java to simplify the condition for checking videoFragment loaded links
camel - sftp should compact path to avoid error on window due to file system on window
( chore ) camel - weather : use assertMockEndpointsSatisfied with a timeout of 20 seconds
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` in ` QueryComponent. java ` to clarify the variable's purpose
allow ` ` lARGE _ fern'' to be able to place liquant into liquant
changed the focusable property of the tree from setFocusable to setRequestFocusEnabled to improve user experience by allowing request focus behavior
don't swallow interrupted exception
updated license handling in DB2TestSystem and modified conditions in DockerDatabaseWrapper and TableIsEmptyGenerator to improve license management and streamline database
bugfix : doublemodel can now be save to the target unit of the optimization goal
added a new static final CurrencyPair called BTC _ ZMW to the CurrencyPair class to support trading functionality for the new currency
added logic to set the number of samples in the TestPBRLighting class to ensure that the number of samples is correctly configured for processing
updated test tasklet names in StepWithSimpleTaskJobParserTests. java to improve clarity and consistency in test case names
changed variable declarations from'cred'to'final'in CentralAuthenticationServiceImplTests. java to enforce immutability and improve code clarity
ggbabs ( ) should not use single quote for eg ( t ( t ( t ( t ) ) )
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer. java ` to ensure proper handling of service output
fix parsing of biginteger type in executable model
added " org. eclipse. jdt. " to WebAppContext to hide the jdt used by jetty
removed the call to super. useAuthCache ( ) in the NegotiateAuthentication class to simplify the cache logic by returning false instead
pagetitle : capitalize namespace segment
move directconsumernotavailableexception to camel - core a it be backwards compatible.
added a null check for zooKeeper before setting its state to avoid potential NullPointerExceptions when zooKeeper is not initialized
fix a typo in the progress bar message
replaced direct calls to mVibrator and cancel with a call to runOnUiHelperThread to ensure UI - helper threads are executed on the
added updateLastRemoteStreamId method to HTTP2Session. java to ensure last remote stream ID is updated correctly during session processing
set text antialiasing to on in the graphic to improve text quality in the application
[ java ] : use currentwindowsize instead of termsize when calculate the flow control over run position.
refactor : remove static import of enums in ctannotationimpl. java ( # 2858 )
refactored ExoPlayer. java file to improve code readability and maintainability
replaced the native method ` getRGBPixelImpl ` with a rectangle parameter to improve pixel retrieval by utilizing a specific rectangle for better rendering
added a new method ` newPrintStream ` to create a custom PrintStream with specified encoding to enhance flexibility in encoding for output streams
increase touchable vibration duration from 1 to 25 milliseconds to improve user experience during movement
re - organise import to fix checkstyle issue
removed null parameters from constructors in WebSocketClient to simplify constructor parameters and improve readability
simonstewart : move the i18n test to a different directory
improve error reporting for load constant exception
added call to restore the authentication system state to ensure proper state management during test execution
added a lowercase comparator using a comparator in CoNLLUFeatures. java to ensure consistent ordering of features regardless of case
bugfix : avoid duplicate source file when parse Javadoc.
simonstewart : ignore a test that should not throw an exception if the option ben't toggle.
added a check to validate the length of keys in HighestKvno. java to ensure that the count of keys is within the expected
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by logging warnings when only Huge objects BTrees with 1 record
[ beam - 1197 ] remove pdone from batchloadbigquery, batchloadbigquery, and streamwithdeddup
updated the XMLRootElement name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added API implicit parameters in ProcessGroupResource
added a new file TestMultiANewArray. java to test array creation and bytecode generation of a class file to ensure proper handling of array
allow management of secondary storage ( advanced ) on management server
updated logic for adding block IDs based on the head number to improve accuracy in fetching block IDs based on the current number
added a call to set the theme of the preview tab content to ensure the correct theme is applied to the preview viewer
added null check and closing logic for the reader in VectorizedParquetRecordReader. java to ensure proper resource management and prevent potential memory leaks
added a test for idle timeout in ConnectorTimeoutTest. java to ensure proper handling of HTTP idle times
add a dictionary property to the dictionary parser, and use it in the dictionary parser
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to
updated parameter values in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to simplify parameter handling and improve clarity in error message
changed log level from warn to debug for found child node to reduce log verbosity and provide more granular logging
updated ColorExtractionService to use getHotseatPallete ( ) for palette updates and hotseat palette retrieval to improve color extraction
added methods for setting default table entry and cell transformer in TypeRegistry to enhance data processing capabilities by integrating new table type transformations
removed assertion check for newAvailableShared in AtomicRemainder. java to streamline code by eliminating unnecessary assertion
doc ( regen ) : regenerate with update license year
added a new boolean variable ` projectGenerated ` and modified its access method in ` ProjectGenerator ` and ` WorkspaceAndProjectGenerator ` to ensure
[ java ] : remove redundant contains check in driverutils. getuser ( ).
added contact form functionality to the application and created Contact class for handling contact data to enhance the application's ability to post contact data and improve
guac - 587 : rename simpleuser. getpermissions ( ) to be consistent with guacamole - guacamole -
updated RELEASE _ VERSION from 20 to 21 in IconCache. java to reflect the release of version 21
[ drools - 7 ] fix checkstyle violation in traitfactory
updated method names from " findWhereNameLikeAndActive " to " findWhereNameOrAliasLikeAndActive " across multiple files to improve
replaced the direct closing of PerDocConsumer with IOUtils. closeSafely to ensure proper resource management and avoid potential memory leaks
updated AbstractDataChangedListener, HttpLongPollingDataChangedListener, and RuleServiceImpl files to improve data change handling and enhance functionality
added a click listener to the overflow button to the menu to enable the menu to show when the overflow button is clicked
updated error messages related to null and non - null references in various classes to improve clarity and accuracy in error reporting for null subject references
ggb - 2118 fix : after heuristic change, the line height of the help button should be update
move test from protobufferutilstest to core
fix split pane divider position and width calculation
fix aux problem where crossref entry would not be apply to aux file
make geoserverfeaturesource serializable ( fixes regression )
changed the variable name from extractTypes to dataTables to clarify the purpose of the variable
fix update of metacontactldatestate when metacontact have be update.
updated import statements for Command in ShellCommand and ShellFactoryImpl classes to ensure correct usage of Command in the SSHD server implementation
added a test method to clean up the audit log table parameters based on their positions to ensure that the audit log table behaves correctly with post parameters
fix raw type warning in inject ( )
added regex patterns for parsing comments and invalid comment lines in ACLFileParser. java to improve parsing reliability by avoiding dependency on ` commentLine
updated ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` to use ` DrillTable ` instead of ` FormatSelection `
added ancestorDimensionValues to StarTreeImpl and StarTreeNodeImpl classes to enhance dimension handling by incorporating ancestor ancestor values
added user unlock check before dumping data in TouchInteractionService and implemented closeOpenViews method in BaseQuickstepLauncher and Launcher to ensure data
change check from widthStr to positionStr in Photo. java to ensure correct validation of position data
refactor PKIXValidator logic to improve clarity and structure to enhance maintainability and readability of the validation process
[ flink - 26011 ] [ hadoop - common ] [ test ] add archunit test for the test code
updated package names from ` org. apache. shenyu. integratedtest. dubbo ` to ` org. apache. shen
cloudstack - 2120 : fixed listnetworks api to return listnetworks api response only for non - root network
replaced ` remove ( typeFieldName ) ` with ` get ( typeFieldName ) ` in ` RuntimeTypeAdapterFactoryFunctionalTest. java ` to
make sure undo info be store for every time set, not every time set
replaced direct retrieval of the " sun. java2d. xrgradcache " system property with a privileged action to enhance security by ens
[ hotfix ] [ test ] use awaitility in streamclosetest
removed the ` doAfterFlush ` method from multiple classes and added null checks for ` perFields ` in ` TermVectorsConsumer ` to improve
filter out deprecated warnings and add nestedconfigurationproperty annotation to AbstractJpaProperties to improve data handling and categorization of deprecated properties
changed variable declarations from private to final for capacity and mask in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and refactored file name handling in Hive to improve file
don't swallow unhandled exception in case of connection failure
added a null check for the context before creating a new SchemeAndroidIDE instance to prevent potential NullPointerException when the context is null
[ gr - 17490 ] fix noclassdeffounderror in nativeimagegeneratortunner.
modified the modifyGrantedAuthorities method signature to return a List instead of void to enable modification of granted authorities for improved user authority management
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and created new ` RawJaxrsIntegrationTest `
add method setquerytimeout ( ) to allow user to specify a non - jdbc4 driver.
added DataProviders for general and supplementary character tests in XslSubstringTest. java to enhance test coverage for XSL substring functions
replaced ` eventWriter ` with ` delegateEventWriter ` and implemented the ` close ` method in ` NoStartEndDocumentStreamWriter ` to
added support for MariaDB sequences and updated sequence handling in the CreateSequenceGenerator and MariaDBDatabase classes to enhance compatibility with Maria
corrected spacing in string concatenation across multiple files to improve code readability and maintain consistency
added setServerMetrics ( new ServerMetrics ( new MetricsRegistry ( ) ) ) in multiple test files to ensure consistent server metrics across test cases
updated the SSL extension configuration to include support for MFLNExtension to enhance flexibility in enabling MFL extension functionality
updated the iterator type from'T'to'ObjectHashSetIterator'and added tests for string representation in ObjectHashSetIntegerTest to improve type
updated character count from 22 to 23 in Compose. java and TweetFragment. java to ensure the character count accurately reflects the
add a datapoint ttl attribute to the data point write buffer to enable customizable ttl for cassandra datastores
modified the ` checkForAndKillXcodeIfRunning ` method to accept a boolean parameter for prompt control to enhance flexibility in prompting when Xcode is
added method to get terraing at a cell coordinate in terraingrid.
added default value handling in expression printing and created a new Java file for compiling annotations to ensure default values are printed and facilitate the compilation
added error handling for missing quest keys file to improve robustness by logging an error when the key file is not found
inverted the isPush ( ) condition in the getHttpTransport ( ) method to ensure proper handling of push support status
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
added a method call to sign block capsule in BlockUtil. java to enhance the functionality of block capsule generation
modify return statement in FileSystemView. java to handle empty roots and improve security checks in Win32ShellFolder2. java to enhance robustness
updated row height retrieval and conditions in ColumnText. java, and renamed the ` copyContent ` method in ` PdfPRow. java `
updated ListFragment to use a SparseArray for storing undo notes to improve efficiency and memory management during note removal
[ # 7701 ] fix uploadbackupdata bug ( # 7701 )
added null check for data in bug8024061. java to ensure data is not null before proceeding with operations
no effective change - remove file
replaced custom Padding class with Rect for widget padding calculations to simplify padding retrieval and improve compatibility with widgetHostView
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code readability and conditionally handle consString input
updated ClassGraph and ScanResult files to improve code clarity and maintainability
rename variable ` latch ` to ` goAwayLatch ` for clarity to improve code readability and accurately reflect the state of idleTimeout
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest. java ` to improve clarity and
replaced ` set ( ) ` with ` set ( null ) ` in ` Workbook. currentBook ` across multiple files to simplify code and
added support check in the vote method to validate the object type to ensure that the object type is valid before proceeding with the vote method
removed unused imports from DataLoader. java to improve code clarity and reduce unnecessary dependencies
added functionality to track the number of affected rows in the ` postUpdateLog ` method to improve data handling and provide feedback on the number of
ticket # 4810 : remove unused import and fix margin in applet
set foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration to set default values for better rendering performance
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure data integrity by tracking object releases before proceeding
replaced DefaultWebSocketFrame with ChannelFutureListener in DefaultHttpServer to ensure proper handling of WebSocket frame closure
added OnStateMachineError handling to TestApplicationEventListener classes and updated relevant listener methods to ensure proper error handling during state machine events
replaced finish ( ) with setListBackground ( ) and added a method to set the background color for the list to improve code readability and ensure the
updated import statement from commons. lang3 to openhab. core. util. StringUtils to ensure compatibility with OpenHAB's StringUtils
added an accumulate method to the JavaUserDefinedAggFunctions class to enable accumulation of weights based on user - defined metrics
hbase - 15421 fix checkstyle violation in put. java and replicationsink. java
replaced VALID _ CACHE _ SET with REGEXP _ CACHE and introduced a caching mechanism for compiled regex patterns to improve efficiency and maintainability of regex
added a static method ` reset ` to the ` GameThread ` class to provide a way to reset the game thread state
added a null check for the login method in DigestAuthenticator to ensure that the login service name is not equal to the expected realm
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency to enhance code readability and maintainability while ensuring proper parameter merging functionality
fixed typo in log message
remove unnecessary waitpoint. countdown ( ) in commitlog and ha service
added a condition to exclude Android O in PhotoViewerActivity. java and implemented Android O detection in Utils. java to ensure compatibility with Android O
replace ` SchemaInfoLevel. minimum ( ) ` with ` SchemaInfoLevel. basic ( ) ` in ` SchemaCrawlerTest. java
replaced ` zipOut ` with ` bufferedOutputStream ` in ` SaveTask. java ` and removed call to ` writeEndElement ( ) ` in
replaced byte array conversion methods and updated charset handling in TestPayloads. java to improve code clarity and ensure consistent character encoding handling
fix entity can not be null in certain case ( mc - 103516 )
added " psiprobe. Tomcat10ContainerAdapter " and " psiprobe. Tomcat101ContainerAdapter " to the list to
[ drools - 557 ] marshalling of accumulate in executable model ( # 557 )
fix switch / cases indentation see camel - 14540
pdfbox - 4071 : make class public again
added HTTP method handling and headers to RemoteEndpointServiceAccessStrategy. java to enhance service access flexibility by allowing custom HTTP headers
added a new method ` newResponseBuilder ` to create a ` ResponseBuilder ` with a list of ` SearchComponent ` to streamline response
added notification for command start in AsyncBackgroundTaskManagerTest to ensure that command start notifications are properly sent to the manager
added a recomputePreviewDrawingParams method in FolderIcon. java and modified its implementation in PreviewItemManager. java to improve preview drawing parameters
refactor tokenizer and filters initialization in LukeRequestHandler. java to improve code readability and maintainability by reducing redundancy
replaced null checks for'plot ','generator ', and'hotspot'arguments with ParamChecks. nullNotPermitted to improve
added verbosity support to the createSubContext method in JavacStep. java to allow customizable verbosity during context initialization
added schema conversion for Oracle database type to ensure compatibility with Oracle's default schema format
log4j2 - 1349 fix test failure : log4j2 - 1349
added a new file TestShrinkToOneRegion. java containing a main method that calls System. gc ( ) to facilitate garbage collection
replaced string split method with Splitter's on method call to improve code readability and maintainability
removed unnecessary conversion of utf8ToString ( ) to byte arrays in AnalyzingInfixSuggester. java and its test in AnalyzingIn
added handling for local attachments in PushsaferMessageBuilder. java to ensure proper content type is used for HTTP attachments
remove the usage of the ` showLabelStats ` command from both ` ModelExplorer ` and ` SequenceModelExplorer ` to streamline the output
pdfbox - 4071 : remove unneeded nullcheck, a suggest by valerybokov
updated FORMATTER string concatenation in multiple test classes to ensure consistency and clarity in generated generated code
updated UDFRound's evaluate method to include an additional parameter for number input to enhance functionality to support additional input types in the evaluation process
refactor code to use ConfigParser for configuration values to improve code readability and maintainability by using a standardized way to retrieve configuration values
changed class visibility from package - private to public in Test1. java and Test2. java to allow access to these classes from other packages
replaced instances of ` String. valueOf ( permission. no _ permission _ event ) ` with ` String. valueOf ( plot. toString ( )
mondrian : fix bug in conditionandor and conditioninconstantset.
replaced ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` BaseNormsFormatTestCase
added dynamic box and circle creation and reset frictions in Box2DCharacterControllerTest. java to enhance rendering capabilities by resetting f
added tests for recycling options in TestBadOptionValues. java and updated test cases in TestMemoryOptions. java to ensure correct handling
updated error message checks in ObjectAlignment. java and Options. java to ensure compliance with updated requirements for output validation
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` and integrated it into ` AndroidInstrumentationTest ` to
refactor methods in DocHelper class to improve code readability and maintainability
updated the initialization of acceptableThrowawayItems to use an ArrayList to improve flexibility in handling multiple items in the acceptableThrowawayItems setting
replaced the use of ` mh1. < boolean > ` and ` mh2. < char > ` and ` mh1. invokeExact
change messagehandler thread priority to prevent starving when a lot of fetcher thread be use
updated the Inflection class to improve performance and accuracy of the algorithm
added locale getter and setter methods to EvaluationContext to enable locale management for the el context
added import statement for Plugin class in SummaryPrinter. java to utilize Cucumber's plugin functionality in the summary printing process
added a break statement in DrawerActivity. java to improve control flow and prevent fall - through behavior
replaced the ` where ` import with a wildcard import and modified the debug log message to use ` query. getQueryObject ( ) ` instead of
ww - 4441 add system property xwork. loggerfactory to facilitate configuration of loggerfactory
fix adminaddpeerwithp2pdisabled acceptance test
polish ` ` add name to bean name ` ` livenessstatehealthindicator / readinessstatehealthindicator''
introduced a concurrent map for PStore configurations in LocalPStoreProvider to improve concurrency handling during write operations
changed the access modifier of the deleteFiles method from package - private to private to restrict access to the method for better encapsulation
[ api - 1 ] rename provider to serviceprovider to be more descriptive
fix : fall back to javainteropreflect. setField ( ) if field do not exist
added toolchain creation checks in AbstractCell and DefaultToolchainProvider classes, along with corresponding tests in DaemonLifecycleManagerTest to ensure proper handling of
add context to the engine only if it be not add to the engine
fix typo : ` ` fails'' should be ` ` fails''
added exported linker flags to the PrebuiltCxxLibraryDescription and related tests to ensure correct linking for shared libraries
replaced the ` onConfigurationChangedInternal ( ) ` method with a ` updateRecentsRotation ( ) ` method in ` RecentsView.
updated listener type parameters in multiple listener classes to use wildcards to enhance type safety and prevent potential runtime errors
include the hash of the new block in the object array to ensure the correct block hash is used for processing
http : / / issues. apache. org / jira / browse / amq - 3682 - fix defaultmessagestore # get
removed unnecessary try - with - resources for JvmGcMetrics to ensure proper resource management and avoid potential memory leaks
hbase - 25875 add get messageentiretime in compactionlog ( liu shaohui )
hhomever deprecate method in favor of @ deprecate
added a method to check for the system UI package and execute shell command for keyguard status view to ensure proper handling of system UI objects in
changed the logger variable from protected static to protected final and made principals and sessionIds variables final to improve accessibility and ensure immutability
added checks for empty cookieJar in InMemoryCookieStore and implemented behavior in NullUriCookieTest to ensure proper handling of empty cookies and maintain test
add debug log for bonsai archive and updater
changed the parameter type of getText from String to CharSequence in ITextRepository, LimitedSizeCacheTextRepository, and NoCacheTextRepository classes
[ java ] unignoring a test that pass in firefox nightly
added error handling in the SocketConnector to ensure proper connection closure to enhance reliability and prevent potential resource leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` across multiple files to clarify the purpose of
added synchronization to the heartbeatExecutorService initialization in DbTxnManager. java to ensure thread safety when accessing shared resources
replaced ` transformBuildResultAsyncIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and introduced ` wrapWithTracingAndCancellation `
added ` updateFirstLineShowing ( ) ` method to ` TextArea. java ` to ensure the text area is properly updated during drag operations
added paths for various Hadoop configurations in TestInformationSchemaWithPrivilege. java to enhance configuration flexibility for mapreduce operations
refactor graphics configuration retrieval logic in Component. java to improve clarity and efficiency in obtaining the graphics configuration
tika - 3952 -- add oom support to tika - server integration test
camel - core : doprocess should not duplicate the doprocess method a it be already do in the pipeline
added argument handling and improved parser output in PrintTagList. java to enhance functionality by allowing users to specify a model file for printing tags
updated ` InsertDeParser ` to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` and added a new test for
http : / / issues. apache. org / jira / browse / amq - 4798 - improve test reliability
[ java ] fix startfromtruncatedrecordinglogtest failure when cluster be ready.
update arc calculation and outer round rectangle calculation in LineBorder. java to improve rounded rectangle precision for better rendering accuracy
updated null and empty check for galleryImages in PostGalleryTypeImageRecyclerViewAdapter. java to enhance robustness by preventing potential NullPointerExceptions
updated deployment ID handling in ` StandardChangeLogHistoryService. java ` and modified column definition in ` CreateDatabaseChangeLogTableGenerator. java
pdfbox - 4071 : fix typo in usage message
removed the'false'parameter from the ` getIndex ` and ` canUseIndex ` methods to simplify method signatures and improve code readability
added provisional engines management in QuickfixjComponent and corresponding tests in QuickfixjComponentTest to enhance engine management by allowing provisional engines
added ` displayZoomControls ` property and modified ` setMixedContentMode ` and ` getDisplayZoomControls ` methods to enhance configuration options for display
added corporea block properties and slabs to the corporea, corporeaSpark, and corpore
refactor ConnectionFactory to improve connection handling to enhance performance and maintainability of the code
added ` EnableDisableMenuItems ( ) ` method to ` GpsMainActivity ` to enable menu items to disable specific menu items based on user
updated the message resource string for empty lists in ExtendedListFragment. java to clarify the purpose of the list being displayed
hhh - 14611 fix broken unit test due to service registry change
set auto - resize mode for table in MotorMountConfigurationPanel and changed the instance of MotorMountConfigurationPanel to the subpanel to
replace ` System. lineSeparator ( ) ` with ` System. getProperty ( " line. separator " ) ` in StringJoiner. java
added getter and setter methods for creator and subject properties in POIXMLProperties. java and updated test cases in TestPOIXMLProperties. java
corrected the casing of the method call to super. doStop ( ) to ensure proper functioning of the doStop method
[ java ] don't check if the cnc file be empty in aeron client.
rename ` NonMarkedFoo ` and ` Marker ` interfaces to ` FooCommand ` and ` FooCommand ` respectively to clarify the purpose of the
added support for detecting JMD5 jmod files in ClassFileSourceImpl. java to enable proper handling of JMD5 jmod files
updated TreeBackedElement and related classes to allow nullable canonicalizers and improve null safety to enhance code robustness by preventing potential NullPointerExceptions
replaced ` setClientId ` with ` PublicTokenRequest ` in ` Saml2TokenGranterTest ` and ` UserTokenGran
updated the method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor. java ` to ensure correct
added sync calls to ZKAssign and ZooKeeperWatcher classes to ensure data consistency during ZK operations
add check for egl _ no _ context to glutil. getcurrentcontext ( ) to avoid npe when egl _ no _ context be
[ drools - 58 ] avoid to delete a ruleflow group when it be active
added a return statement to the HystrixDashboardConfiguration class to ensure proper flow control and avoid potential null pointer exceptions
removed exception handling for PipeNotExistException in DropPipeProcedure. java and added a try - catch block in IoTDBPipeIT. java
fix clientqueuedisruptiontest. testclientqueuesafail ( )
refactor : replace signatureprinter with defaultjavaprettyprinter in ctreferenceimpl
changed the access modifier of the validateInstance method from public to protected to allow subclasses to access and override the validateInstance method
lucene - 6930 : clarify that GeoPointInPolygonQuery decouples GeoPointField from NumericType by default
added a new class ` FakeBuildable ` that extends ` AbstractBuildable ` to provide a mock implementation for FakeBuildable objects
replaced null checks with isEmpty ( ) checks in GuiIngameForge and UniversalBucket classes to improve code readability and avoid potential NullPointerExceptions
corrected the spelling of " rule path " to " rule timeseries " in TSParser. java and SQLParserTest. java to ensure accurate
added a condition to return 0 if the velocity is less than the EPSILON threshold to improve calculation accuracy by avoiding unnecessary calculations
replaced calls to ` getBucket ( gcsUri ) ` with ` _ storage ` in ` GcsPinotFS. java ` to improve
removed redundant call to blockCloseVertxByName in TestHighwayTransport. java to streamline code by eliminating redundancy
# 2866 - postgres compatibility : recreate history view with alter table ddl ( postgres specific )
updated test parameter from 2 to 3 in CarrotClusteringEngineTest to increase test coverage for clustering engine functionality
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest. java to mark the test as ignored due to test rewrite needs
added a new class ` ParserStateObjectInputStream ` and modified ` ParserCacheCommandIntegrationTest ` to include it to enable deserialization of ` Remote
initialize objectQuotingStrategy in ChangeSet and update DatabaseChangeLog to use it if changeLog is not null to ensure proper quoting strategy initialization
updated MetainfoParser to use XML parsing in SliderAppsViewControllerImpl. java to improve parsing efficiency by utilizing XML streams
deleted the CsrfControllerAdvice. java file to the functionality was deemed unnecessary or redundant
updated endorsedArg handling to use a quotePathList method to ensure proper handling of path lists containing spaces
added a scrim animation to the background components in the launcher to improve visual feedback during the resume from action screen off state
updated Long parsing logic and added new parameters in TypeInferenceUtils and TypeInferenceUtilsTest to improve precision in numeric parsing and enhance test coverage
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added validation for path types in WindowsPathParser and PathOps classes to ensure correct handling of paths with relative and UNC formats
updated multicast socket initialization to use local port instead of fixed address to improve resource management and avoid potential socket leaks
updated closing syntax in TestWildcard. java to improve code readability and consistency
return nBits. clone ( ) instead of nBits. clone ( ) to ensure the original nBits array is not modified externally
changed the access modifier of ` deriveCollectorName ` method from private to protected and added assertions in ` TestProfilerCollector ` to allow subclass access
datamongo - 2043 - avoid type hint on simple type conversion
added performance measurement to the ProxyMaker class to enhance performance tracking during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine. java to suppress unchecked warnings and improve code clarity
updated exception handling in TCPConnection. java to include the exception as a parameter to improve error reporting and provide more context for connection issues
refactor reinflateWidgetsIfNecessary ( ) method to improve widget management to enhance code clarity and maintainability by encapsulating widget inflation logic
added a new file ` DeleteInsideFileDialogTest. java ` to simulate a file deletion in a dialog to facilitate testing of file deletion
don't auto - flush display messages if there be renderable
[ 2704 ] instructorstudentlistpageuitest fails due to file not find error
added functionality to filter tests based on the " onlyrun " and " method " system properties to ensure tests are skipped due to environment variable issues
removed the'pointer'parameter from the fling method signature to simplify the method signature for better usability
updated QueryDslJpaRepository to handle null pageable case to ensure proper handling of null pageable scenarios
[ hotfix ] [ runtime ] add memorymanager # computememorysize ( double fraction )
jms - publisher : increase test timeout for slow machine
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future development
change the previous index handling in StreamingAggTemplate. java from ` currentIndex ` to ` - 1 ` to ensure proper indexing behavior and avoid potential
improve error message when plugin need to null
added a default method ` stream ( TableIdentifier tableId ) ` to the ` StreamSupplierComponent ` class to provide a default implementation for stream operations
updated log messages to indicate whether the watched file has been fully played instead of just being watched to improve logging clarity and provide more informative feedback
changed the accessibility of constructors in InjectorProxy, StandardInjectorProxy, and InjectorTest classes from private to public to allow instantiation methods to be
[ hotfix ] [ stream ] remove out. close ( ) from flinkstreamingcreatefunction
added test cases for various SQL statement formats in respective test classes to ensure correct parsing and deparsing of various SQL statements
replace returning null with returning ImmutableList. of ( ) to improve immutability and prevent unintended modifications
updated the test data format from Deliberate error to Quality Distribution Inc. to improve accuracy of test results
added a new flag for websocketReconnect and modified WebSocket connection handling to improve websocket connection logic and manage connection states more effectively
replaced ` setAttribute ` with ` removeAttribute ` for authentication and target URL keys in ` AbstractProcessingFilter ` to simplify session management by removing unnecessary authentication
hbase - 27166 ( flakey test ) addendum to fix flaky testregionreplicreplicationendpoint
added PMS configuration to FormatRecognitionTest. java to disable sound format recognition during tests
cloudstack - 7092 : fix ovddisk templates not be create when upload to disk ( # 8951 )
updated JUnit4 imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests. java to improve test configuration and ensure compatibility with JUnit4 testing framework
added @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
updated metric table and view definitions in AppendOnlySchemaIT. java to ensure correct indexing and retrieval of metric data
added a check to ensure deleted documents count does not match the expected count in SegmentReader. java to improve error handling by preventing mismatched document
add more detail to the sip communicator jain sip logger to aid debugging.
updated version from 0.19 to 0.19 for staves w / no starting barline to ensure correct length handling for staves
removed the default value of handleFileUploads from VertxPlatformHttpServerConfiguration to ensure proper handling of file uploads in the HTTP server
added a test case to verify the behavior of the CsrfFilter when the method is case - sensitive to ensure that the CRF filter correctly
replace hotspotobjectconstimpl. fields with hotspotobjectconstimpl. field to improve code readability
corrected a typo in the method name from ` add ` to ` addFrequency ` across multiple classes to improve code clarity and ensure accurate frequency handling
fix fileio timestamps. withWatermark ( ) to ensure that the timestamps accurately reflect the current timestamp.
fix ( sql ) : fix npe inqmctestatement. copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest. java to utilize ResultSetMetaData functionality in test cases
updated the library command from " -- out % s " to " -- root % s " in JsLibrary. java to ensure the correct root
updated the angle parameter in the BasicSlider instantiation from ( - 180, 180 ) to ( - Math. PI, Math. PI ) to
fix encloser not close on mouse click
added expressionLanguageSupported ( true ) to KerberosProperties. java to enable support for expression language in Kerberos properties
removed conditional check for remoteMountPointComponent before applying transformations to simplify the transformation logic for remote player mount points
updated the ` setupViews ` method to accept a ` ScrimView ` parameter and adjusted related animations to improve the responsiveness of the
[ flink - 33222 ] [ state - backend - changelog ] add the ability to enable periodic materialization
added value attribute to protocolparameter to allow external storage of protocol parameter value
added a test method for chunking requests with a head URL in TestHttpServlet. java to ensure that ChunkingServlet correctly handles HTTP head requests
fix : add'bumped : yes'to the checkrouterAnswer detail
added a Content - Type header to the RequestDispatcher in SwitchToPostInterceptor. java and updated tests in SearchRequestUnitTest. java to ensure
updated the EmbeddedClientConnector class to improve connection handling to enhance performance and reliability of client connections
replaced SQLFeatureNotSupportedException with a warning log message in PhoenixResultSet. java to provide clearer logging feedback for ignoring setFetchSize
added multiple instances of AndroidNet to the AndroidDaydream class to initialize the network object with null values
[ sparc ] fix wrong variable name in log message
removed the'false'parameter from the depositAddresses function calls to simplify the method calls and improve code readability
hbase - 15836 fix javadoc warning in tablemapreduceutil
added inflation failure handling in DesignerActivity and made the root variable final in XMLLayoutInflater to improve user experience by preventing accidental inflation of
updated PushbackInputStream. java file to improve stream handling efficiency
make loweringtoolbase abstract and use schedulephase to process schedule.
updated message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " in ErrorMessageAdapter. java
make makefile ( makefiles ) compatible with newline
updated getDeletedDocs method to use MultiFields and added null check for delDocs to improve code reliability and prevent potential NullPointerException
updated refresh flags in SimpleBatchNode to include RF _ TRANSFORM to ensure proper handling of refresh state during batch processing
do not insert safepoints if cfunction be uninterruptible.
added a callback for window window size updates in LwjglWindow. java to ensure that window sizes are properly updated upon window size change
updated translation calculations and playback parameters in LauncherAppTransitionManagerImpl. java to improve animation performance and ensure proper scaling during animations
updated the ` LiteralNode ` class to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and modified their instantiation methods accordingly to enhance
added methods to set the length of files and directories in CompoundFileWriter, FSDirectory, and IndexOutput classes to enhance file handling and ensure consistent
updated AndroidNdkScriptGenerator to append " memcpy _ wrap. c " to include name in Ant script generation to ensure proper handling
camel - aws2 - s3 : use sourcebucket ( ) instead of sourcekey ( ) in camel - aws2s3
added wildcard role handling in RuleBasedAuthorizationPlugin and updated test cases to include the " freeforall " role to enhance authorization checks and ensure
updated ZookeeperClientServerRegisterRepository to handle null or empty data cases and introduced EventType enum to improve robustness in registering paths and enhance event
renamed methods and classes in ReturnsDeepStubs. java for clarity and consistency to improve code readability and maintainability by using more descriptive names
update getCallValue ( ) method to return a zero byte if the size of the call is zero to ensure that a zero byte is always returned
bibentry. parsedate now use placeholder instead of string. get ( )
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and changed the algorithm name from ` PBEWithH
rename variable ` length ` to ` inputLength ` and update related conditions in ` TIFFReader. java ` to improve code clarity and ensure
added validation for job parameters and improved error message formatting in CommandLineJobRunner to ensure parameters are valid and provide clearer error guidance for users
remove carriage return and carriage return characters from assertions in SmtpTests and MailTests to simplify test cases by removing carriage return and
updated case statements in ExtendedConnectionDataSourceProxy to use diamond operator to improve code readability and maintainability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for tracking last sequence ID to improve concurrency handling and ensure unique sequence IDs across concurrent access
added a new file ` Test. java ` containing a static method ` sum ( ) ` to provide a utility for calculating the sum of a
updated the minSdk and maxSdk configurations in ShadowWifiManagerTest. java and modified access modifiers in WifiUsabilityStatsEntryBuilder. java
added a new Java class named Solution to analyze and print queries in a specified order to implement functionality for searching and sorting queries based on specified parameters
patch by jbellis ; review by jbellis for cassandra - 154
refactor taskbar recreation logic to use a boolean flag for orientation changes to improve clarity and maintainability of the taskbar management logic
updated SyncFutureCache. java file to improve performance and maintainability of the caching mechanism
updated DUBBO _ PROTOCOL _ VERSION from " 2.0. 1 " to " 2.0. 2 " and LOWEST _ VERSION _ FOR _
pmd : fix # 1186 false positive with uselessstringvalueof
added a new test method ` testEllipseNoseconeDrag ` to the ` SymmetricComponentCalcTest ` class to verify the
add a targetmaxtypeshardsize default value to hollowproducer
added new test cases for version " 5.5. 2 - cfs " and " 5.5. 2 - nocfs " to ensure compatibility with
[ hotfix ] [ doc ] fix typo in compilationtask javadoc
added comments to indicate that location is not shown in test mode and simplified parameter setting logic in DDLTask to improve test reliability and clarity
added a call to execute ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to ensure proper clearing of database change log table statements
added version handling in the RestClient and CallPath classes to allow users to specify and retrieve call version information
updated error messages and refactored the close method in PhoenixDriver. java to improve clarity of error handling and ensure proper resource management
* fix a few issue report by findbugs
added unit test for file deletion in ConflictsResolveActivityIT and extended FolderPickerActivityIT to improve test coverage and ensure file deletion functionality works
[ gr - 17539 ] do not generate phase in compile queue when devmode be not explicitly set.
added a check to return a s if the length of the copy is less than 2 and implemented a test for removing leading and ending quotes in
refactor type handling in JpaQueryCreator and add a new test for not containing method in UserRepositoryFinderTests to improve code clarity and ensure correct
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 43697. do
add dispatch ( new p25message ( mMessage. copy ( ), duid, mAliasList ) ) to the message processing process
added null checks for handler in WebSocketImpl. java and implemented a test for clearing client handlers on the end event in WebsocketTest. java
[ ds - 3892 ] add test and ignore test
update widget padding calculations in AppWidgetResizeFrame and Launcher classes to ensure consistent widget padding across the application
added methods to hide all apps in TaskbarUIController and implemented hide functionality in TaskbarAllAppsController to improve user interface responsiveness by
removed the synchronized modifier from the launch method and replaced Thread. sleep ( ) with launcher. join ( ) to simplify the method's launch
update calculation for point coordinates in JavaSEPort. java to ensure correct positioning based on canvas coordinates
modified notification handling to use ` startForeground ( ) ` and added a conditional check for upload status to ensure that notifications are only sent when the
fixed bug in excessivepubliccount ; each rule must have a minimum value
hbase - 19748 addendum fix intermittent failure in testthrifthbasetablehandler
( chore ) camel - core : change log level from info to debug
added error handling for FileNotFoundException in ResourceUtils. java and changed debug log level from debug to trace in AbstractCipherExecutor. java to improve
added a new ` BittrexTickersResponse ` class and integrated it into ` BittrexMarketDataServiceRaw ` and ` Bitt
fix findbugs warning in entityentry. java
refactor session registration and unregistration methods to use Object type instead of Class to improve type safety and reduce coupling in session management
updated the character representation in FileUtils. java to enhance the readability and usability of character sets
added stylesheet handling to ResourceService and updated related methods to improve resource management and ensure correct stylesheet retrieval
added a call to clearIndex ( ) in TestFiltering. java to ensure the index is cleared before further operations
changed method name from " getAddress " to " PointerParameterStrategy. class " in X86MethodGenerator. java to improve clarity by using a
updated check for MariaDB and CockroachDatabase in CreateSequenceGenerator. java to ensure compatibility with the latest database structure
modified the condition for checking the name of the object stream class to simplify the logic for identifying string types
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library. java ` and added a new ` SymbolNotFoundError ` class to
updated field selection logic in BinaryResponseWriter. java to conditionally use SolrDocument to improve flexibility in field selection based on user preferences
added WebSocket state handling for PING and PONG in WebSocketImplBase. java and implemented a test for pausing WebSockets in WebSocketTest.
added a semicolon to the NON _ IDENT _ ESCAPES string in RegExpScanner. java to ensure proper handling of special characters in regular expressions
add cache to the DnsResolverProvider class and update related tests to enhance cache management and improve test coverage
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to ensure MessagingTracing is only enabled when MessagingTracing is present
mondrian : fix test failure due to db2 change
updated import statements in multiple Java files to ensure proper usage of the new package structure
fixed handling of / in XMLLightweightParser to ensure correct VERIFY _ CLOSE _ TAG status
removed setVisibility ( GONE ) from TouchCharInput. java to streamline input handling by removing unnecessary visibility logic
added a null check for the current user before comparing its ID to prevent potential NullPointerException when accessing the current user ID
refactor JSObjectLinker to handle object retrieval and member setting more efficiently to improve code clarity and ensure correct retrieval of objects based on the specified key
updated ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to initialize ` randomStringGenerator ` with default values
added a @ Deprecated annotation to SecurityConfig. java to indicate that the class is outdated and should not be used in new development
added @ Deprecated annotations to multiple Java files to indicate that these elements are outdated and should not be used in future development
deleted the JoglDebugAdaptor. java file and replaced it with GuiceJoglDebugAdaptor. java to streamline the codebase by
enhanced ` toString ` methods in ` ExtraFieldPropagation ` and added corresponding tests in ` ExtraFieldPropagationTest ` and ` AWSPropagation ` to
added PendingIntent import for PendingIntent in FileDownloader and FileUploader classes to utilize PendingIntent for pending operations
added a ` set ( ) ` method to ` Lucene80DocValuesProducer ` to improve the handling of ordinals in the ` nextOrd `
refactor DateTimeFormatter class to improve code readability and maintainability
removed try - catch block around desktopProperties assignment to simplify code and improve readability by handling potential ClassNotFoundException
KerberosOperationHandler : add null principal and password validation in setAdministratorCredentials method to ensure proper error handling for null or empty principal inputs
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and updated width calculation for tablets and two panel layouts to
update rendering methods in PSurfaceJOGL to ensure correct window color rendering during rendering
refactor Hashing class implementation to improve performance and maintainability of the hashing algorithm
modified the accept method to accept a file based on folderPath instead of a fileToSend string to improve file validation by ensuring the correct file
updated UserInfoActivity to include resource strings instead of drawable resources to improve internationalization and localization support for user information
added a null check for the type variable in the J class to ensure robustness by avoiding null pointer exceptions
increased ACTIVITY _ START _ DELAY from 500 to 800 to improve activity transition responsiveness
added a constant WEBAPP _ HOME in SolrJettyTestBase. java and updated its usage in JettyWebappTest. java to ensure
reset the diameter variable and clear selection in the ThrustCurveMotorSelectionPanel class to improve code clarity and ensure proper clearing of selection
added BufferUtil import and called clearToFill method to ByteBufferPool to optimize buffer management and improve performance
fix npe when create notification rule via rest api
change authorization to authentication in configuration. java to align with the new authentication framework
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4617
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
updated connection handling in PingService and ServerInfoService to improve error handling for connection failures
refactor CompositeHandlerAdapter class to improve code readability and maintainability
refactor Quartz2Adapter class to improve code structure to enhance maintainability and readability of the code
sulong : do not crash if an illegalstateexception be throw during lookup.
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with Spring Security 6.3 features
updated ` newNameResolver ` method to accept a ` Args ` parameter and modified related logic in ` DiscoveryClientNameResolver ` to accept a synchronization
added a check for non - empty newAnnotations and introduced a method to determine earlier position to improve handling of non - empty annotations and ensure correct
added " com. sun. naming. internal. " to CheckPackageAccess. java to enhance package access control for internal classes
changed the default value of strict from false to true in StaxEventItemReader. java to enable strict mode for event processing
OfflineSorter and TestOfflineSorter classes to handle exhausted line counts to improve code robustness by ensuring only exhausted lines are read
refactor ActionResetingPool class to improve code readability and maintainability
updated the method to check if the light state is in XY mode to improve clarity and correctness of the code logic
refactor CellLayout to use targetCell arrays for folder creation and visibility radius calculations to improve code clarity and functionality by encapsulating folder creation logic in
added import for FileDisplayActivity and removed the showLoadingDialog ( ) method from FileDetailFragment and OCFileListFragment to streamline loading dialog
added a null check for the uigestureFile before loading logs to avoid potential NullPointerExceptions when the uigestureFile does not exist
fix fieldnamingpertest due to default locale
added listener to the result object to ensure the listener is properly initialized for test results
added a new method ` loadWithNewGlobal ` to the ` Global ` class and updated existing method implementations accordingly to enhance functionality by allowing a
added JSON string conversion methods to ` StarTreeIndexSpec ` and updated tests accordingly to enhance JSON serialization and validation of ` StarTreeIndexSpec
updated imports and class imports in HttpSecurity, HeadersConfigurer, OAuth2LoginConfigurer, OAuth2ResourceServerLogoutConfigurer, and ServerHttpSecurity
replace double quotes with single quotes in AndroidFileHandle, GwtFileHandle, and FileHandle classes to ensure consistent character casing across the file
[ drools - 557 ] fix npe in in operator ( # 557 )
added import for FieldCache and commit functionality to ensure there's more than one segment to avoid FC insanity during testing
act - 1187 : fix message boundary message event on subprocess and subprocess
updated method parameters from ` method ` to ` target ` in ` ProgramManager `, ` PointerAnalysisImpl `, and ` JimpleProgram
http : / / issues. apache. org / jira / browse / amq - 4613 - add messagegrouphashbucketcount to policy
added constants for slot IDs and updated method parameter naming for slot assignment to improve code readability and maintainability by using named constants
added alignment support to the add method in Layout. java and modified the startRenderering method in GdxRenderer. java to improve layout flexibility and
[ hotfix ] [ test ] disable unalignedcheckpointitcase. testunalignedcheckpoint ( )
added import statements and a conditional check for class types in JDK13Services. java to ensure that only relevant classes are processed
added a check to see if the keyword is already in the keywordToReference map before adding it to the map to ensure that the map only
added a check to ensure pairs are of type Collection before processing to improve type safety and prevent potential ClassCastExceptions
added getStartCount method to SegGraph, SegToken, and SegToken classes, and modified isExist method in WordDictionary to
escape character in statsdline ( fixes # 644 )
add'udp'and'udp'port to member package.
rename the class ` OperatorMulticast ` to ` OperationMulticast ` to improve clarity and consistency in naming
increased the send timeout from 1 to 100ms in EventBusTracerTestBase. java to allow more time for address delivery failure
added exception handling around node startup in VertxTestBase. java to ensure proper resource management and prevent potential memory leaks
hhh - 14611 fix memory leak in sessionfactoryserviceregistryimpl
simonstewart : fix flaky unit test
add miss unit test ( # 260 )
added a TaskStackChangeListener to clear the visible flag when the pinned stack animation starts to ensure the visible flag is retained during task stack animations
pdfbox - 2576 : don't skip date pattern if it's miss. add unit test
camel - 14263 : camel - cxf should use source code generate configurer to avoid reflection configuration.
refactored pending animation handling into a separate method to improve code readability and maintainability by reducing duplication
add log to debug playtime crash and band aid fix for release build.
add a conditional check for Bailouts on exception handling in C1XCompilation. java to improve error handling by throwing a RuntimeException when
initialized signup and passwd variables to null in Links. java and updated assertions in IdentityZoneConfigurationBootstrapTests. java to ensure default values are set
[ hotfix ] rename slotprofile. previousexecutiongraphallocations to getreservedallocations
change timeconverter. onlyformat to be a string, not a simpledateformat.
added NoDataContainer to GeoTiffReader and GeoTiffReaderTest to enable garbage collection of the GeoTiff feature
sulong : return ` ` < unknow >'' instead of ` ` null'' when source section be miss.
replaced ` out. toString ( ) ` with ` new String ( out. toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and `
added a CountDownLatch to wait for connection state changes in TestPathChildrenCache to ensure that the client correctly waits for connected connections
added null check for array parameter in ArrayTypeHandler to avoid potential NullPointerExceptions when processing JSON data
replaced the use of ` RegexpTunnel ` with direct access to ` REProgram ` for prefix retrieval to improve flexibility in configuring regex patterns
updated the application pick method to use the Application class instead of null to ensure compatibility with the new application selection mechanism
[ drools - 7 ] avoid npe on mutablelisten global in executable model
updated asset name and description validation methods in AssetIssueActuator and TransactionUtil classes to improve asset validation and ensure valid asset names and descriptions
don't insert element if copypaste don't work
updated annotations and status messages in LGWebOS classes to include descriptions and improve clarity of status messages
updated node configuration methods to include seeds, active, and trust nodes to improve node management by ensuring all relevant nodes are included
added error handling and improved thread management in BaseTokenStreamTestCase to enhance test clarity and ensure proper thread error reporting during analysis
refactored the increment method to include a modulus to improve clarity and maintainability of the code
refactor ` performItemClick ` and ` findItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to improve code
pdfbox - 4892 : avoid infinite loop, a suggest by valerybokov
dump at debug level in pegraphdecoder if debugging be enable.
refactor HttpSessionDestroyedEvent to use session attributes for attribute retrieval to improve code clarity and ensure consistency in attribute handling
added a test to verify the service name change in Zipkin using a manually provided name to ensure that the correct service name is used in tracing
added logging for excluded classes in JavaInMemoryFileManager and refactored Spool mode handling in JavacToJarStepFactory to improve debugging capabilities
rename SeparatedProjectGenerator to SeparatedProjectsGenerator across multiple files to improve clarity and consistency in naming
increase timeout in clientmultimaplocktest. testmultimaplock ( )
added a constant for the default cache capacity in the ConfluentSchemaRegistryDeserializerProvider to improve cache management and provide clearer configuration options
replaced a JCheckBox for " Remind me later " with a new " CheckAtStartup " checkbox to improve user interface by providing a more des
added methods for strength checks and refactored the NodeGenerator to use MethodSpec to improve code clarity and maintainability by centralizing value checks
hhh - 14744 cascadingactions # getAssociatedentityname ( ) should check for transientity
added constants for PROTO and SETPROTOCHECK in ScriptObject. java to improve code maintainability by centralizing prototype property handling
changed the default read mode from " heap " to " mmap " in CommonConstants. java and added logging in ImmutableSegmentLoader. java to
added import statement for ByteArrayTemplate and implemented a method to return the instance if the class type is byte
added a Hipchat property to the SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class to enable
replaced ` List < URL > commandRegistryUrls ` with a ` Set < URL > commandRegistryUrls ` and added multiple entries to the command
updated warning log message to include the current context and added debug logging to improve clarity of warning messages and enhance debugging capabilities
camel - 7999 : fixed c. thanks to michael klink for the patch.
camel - 7999 : fix issue with activemq configuration when use lazy - create
cs - 154j2 - fix checkstyle violation in vmwareresource. java
updated Timers class to improve performance and maintainability of logging functionality
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter. java ` to
removed multiple deprecated constant declarations from the UAX29URLEmailTokenizer class to streamline the code and encourage the use of updated alternatives
removed the Map interface from the ScriptObject class and replaced it with ScriptObject to simplify the class structure and improve type safety
updated EventBusMetrics class to improve event handling performance
[ ds - 3952 ] fix eperson support in i18nutil
refactored JaversTransactionalDecorator to implement InitializingBean and refactored ensureSchema method to improve dependency management and ensure proper schema initialization
removed null check before adding pgTypeName to the _ pgNameToSQLType map to simplify the code by eliminating unnecessary null check
added multiple server handler calls in ScopedHandlerTest. java to ensure proper server initialization for test scenarios
calltimeoutexception should not be retry for a call when the invocation timeout be set to retryable
[ rest - login ] fix npe in restloginprocessingfilter when username or password be empty
updated permission check from ` Objects. equals ` to ` * ` in ` CommandMap. java ` to ensure proper handling of permission nodes with
rename variable ` encoding ` to ` sourceCharset ` and update method signatures accordingly to improve clarity and consistency in variable naming
changed the data type of postLogin from byte [ ] to String in HostBean and TerminalBridge classes to improve performance by using String instead of
added final modifiers and improved simulation modification error handling in GeneralOptimizationDialog. java to enhance code clarity and ensure immutability of simulation variables
camel - 13663 : camel - jbang - add reloadstrategy option to control reload performance.
updated log level settings for the console in CommonTestUtils. java to improve clarity and consistency in log output
updated PrologSizeSanityCheck. java file to improve performance and maintainability of the code
renamed NearbyListFragment . java to refactor the nearby list handling to enhance code clarity and
added a check for markSupported ( ) before invoking the reset method in RequestBody. java to ensure proper handling of non - mark - supported input
only log ` ` beansOfTypeList'' if embedded be enabled, and minor formatting improvements to enhance readability and maintainability of the code
fix : add ` ` prefab : player'' to the debug command
updated random method to include a half length total weight parameter to improve randomness logic based on the total weight
updated GsonParser to simplify cache string usage and refactored timestamp validation logic to improve code clarity and ensure valid timestamps for multi - metric data
updated the parameters for the " gcmsort " and " gcmdir " parameters in ApacheHttpClientMediaWikiApi. java to improve sorting
replaced checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) in AbstractSharedSessionContract. java and SessionImpl. java to replace
[ iotdb - 4501 ] pipe : change the lock of pipetaskcoordinator from Reentrantlock to non - Reentrantlock
added a conditional check for the " robolectric. usePreinstrumentedJars " system property before retrieving the Android version to allow dynamic control
modified the conditional check from " if (! isSilent ) " to " if ( isSilent ) " to simplify the logic for
added validation for default and required fields in IndexSchema. java to ensure that a dynamic field cannot be instantiated and improve error handling for unsupported attributes
don't randomlyread repair on digest mismatch. patch by brandonwilliams, review by jbellis for cassandra - 14
replaced ImmutableSortedSet with Iterables for including directories in PrebuiltCxxLibrary to improve handling of relative paths in the system includeRoots
initialized ` startDate ` and ` endDate ` to ` null ` and added flags for sensitivity in ` AdaptableX509CertSelector ` to
[ log4j2 - 1342 ] use abstractappender to parse the buffer size.
marked the GuiScreenEvent class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added methods to manage category additions and removal in CategoryEditSearchRecyclerViewAdapter to improve category management functionality in the application
# 1306 - enh : add type parameter to cachefactory # getcache ( string, class )
refactor mass, CG, and CDOverriddenBy assignments in RocketComponent to use enhanced for - each loop to improve code readability and maintain
nbjavac should not use synchronizedtask # docompile if compilation cancellation
refactor ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < V > ` for task initialization to improve code reusability and reduce
added a mutex to the WanReplicationServiceImpl class and modified its executor instantiation to ensure thread safety when shutting down the executor
added null checks for ` tPartition ` and ` getTTable ( ) ` in ` Partition. java ` and ` DDLSemanticAnalyzer
refactor to use lambda expressions for improved readability to enhance code clarity and maintainability
added unit tests for file deletion in a new test class to ensure proper functionality of file deletion methods
removed try - catch blocks around socket closing in ServerSocketAdaptor and SocketAdaptor to simplify exception handling and improve code clarity
updated class name validation from " java. lang. System " to " Logger. class. getName ( ) " to ensure accurate class identification
replaced usage of ` this. currentWorkingDirectoryList. clear ( ) ` with ` addWorkingDir ( f. toString ( ) ) ` to
added a null check for the variable'cn'in ItemInfo. java and adjusted insets in Workspace. java to ensure proper handling of null
changed the visibility of the ` final static String ` variable from public to private to restrict access to the string variable for better encapsulation
updated Java URL format from " http : / / localhost : 8983 / solr / update / csv - Dtype = text / csv
apps - 2184 fix ` ` min ( x ) = max ( f, 0, 10 )''
refactor client container startup handling in JavaxWebSocketClientContainerProvider to improve error handling and ensure proper shutdown registration
updated conditional check from ` && ` to ` | | ` to ` | | ` in ` Linux. java ` to improve logical logical OR
ensure the web application context be clean - up after each test to prevent memory leaks
added search functionality and improved variable handling in RemoteBrowseHandler. java to enhance user experience by allowing dynamic search parameters
set the visibility of the neutral button to GONE to improve user interface by hiding the neutral button
add count ( distinct ) for collection in archive and withdrawn
updated SQL syntax in createTab _ stmt and columnDesc assignments to use square brackets to ensure compatibility with SQL standards for single quotes
added exception handling capabilities to CheckTokenEndpoint to improve error reporting for OAuth2 exceptions
updated method documentation in various classes to improve code clarity and maintainability
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use parameterized type references and modified data retrieval methods to improve test reliability and
updated tooltip delays from 20 seconds to 10000 in ExtractionModelFrame. java and DataBrowser. java, and enhanced SQLConsole. java to
disable run single test method with junit 5 ( ju5 )
changed exception handling from a HumanReadableException to a RuntimeException in WorkerShellStep. java to improve error handling by using a more general IOException
[ hotfix ] [ core ] add experimental annotation for datastreamutils and socketstreamiterator
[ hotfix ] [ doc ] fix typo in streamcepstrumsource
added a check to prevent index exceeding the size of items in the List class to improve performance by avoiding unnecessary calculations when the index exceeds the
updated assertions to expect ` Parenthesis ` instead of ` OrExpression ` in ` CloneHelperTest. java ` to ensure the test correctly ident
added confirmation type to the DebugPaste command to enhance permission management for debugging commands
replace ` get ( ) ` with ` orElseThrow ( ) ` in ` WebFluxEndpointManagementContextConfiguration ` and ` WebMvcEndpoint
ticket # 4810 : make sure mathquill ggb don't focus the text area
updated GoBinaryDescription. java to replace Arg class with AbstractGoBinaryDescriptionArg and refactored related methods to improve code clarity and maintain
updated environment variable retrieval logic in Jooby. java to ensure proper handling of application environment configuration
updated SimpleRetryExceptionHandler and related classes to implement RetryListener instead of RetryListenerSupport to simplify the class hierarchy and improve integration with the RetryListener
fix write counter with decimal ( # 498 )
added final fields for email and author in the Contribution class to improve code clarity and ensure consistent assignment of email and author
modified the loop structure in JUnitFormatter to use a do - while loop instead of a for - loop to improve code readability and maintainability by
replace direct assignment of elements with a conditional assignment based on the class type of tmp to improve clarity and prevent potential ClassCastException when manipulating elements
improve error messages in StaxEventItemReader to include the URL of the input resource to enhance clarity and debugging by providing more context in exception
* testmultidecontentarget now use a pointlight array instead of individual geometry
updated the handling of null currentProfile in DelegatedAuthenticationClientLogoutAction. java to avoid potential NullPointerException when currentProfile is null
replace target. addNamespaceDeclaration with newElement. addNamespaceDeclaration to ensure the namespace declaration is added to the new element
added BigInteger calculations using DSAParameterSpec in KeyStoreManager. java to enhance security by integrating additional cryptographic parameters
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape. java `
added activiti 5 engine version to process definition ( act - 5 )
updated property keys from " runtime. references " to " resource. loader " in SpecificCompiler. java to improve clarity and consistency in property naming
updated thread verification logic in CEntryPointSnippets. java and VMThreads. java to improve thread verification accuracy and functionality
added null check for maps in GenericUDFMapValues. java and created a corresponding test class TestGenericUDFMapValues. java to
replace " interceptors " with " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests to align test with updated naming conventions
added properties for oil well generation rate and enable oil spouts in BCEnergyConfig to improve configurability and control over oil
added functionality to create a clean - me directory if it does not exist to enhance file management by ensuring it is eligible for cleaning
provide good error message when memoryrealm can't be read
updated import statements in CRLDistributionPointRevocationCheckerTests. java to streamline dependencies and improve code clarity
added import statement for ZipConstants64 in ZipEntry. java to streamline code for better readability and maintainability
refactor ` newFileSystem ` methods to include file validation using ` Files. readAttributes ` to improve file handling and ensure compatibility with regular files
replace JLabel with GLue in the conditionPanel to improve layout consistency and readability
updated method call syntax in FailoverUpdateURIsTest. java to improve code readability and maintain consistency with coding standards
added Gson annotations for baseUrl, mirrorsList, and repoId in ServiceOsSpecific. java to enable proper serialization and deserialization of JSON objects for
add a method to delete a database entry only if the file deletion succeed
fix some typo and warning in the java. base module
correct the calculation of the buffer length in the response message
of - 2321 : don't start / stop admin server at startup.
replaced the unregisterHandlers ( ) method with a new instance variable assignments for binaryConsumer and textConsumer to improve clarity and maintainability of the WebSocket
added configuration properties for device ID transformation method, enable ID table, and log file to enable or disable ID table functionality based on configuration settings
increased the number of documents per type from 2000 to 100 and refined test parameters for clarity to improve test coverage and increase test timeout for better
updated the condition for mockTsp to check for the validity of the timestamp domain to ensure that the timestamp domain is correctly validated as valid
updated script creation logic to use a variable for program encoding to improve code readability and maintainability by reducing redundancy
updated the expression in IndexSchema to include fieldType to enhance the schema to support additional field type handling
updated Completers. java to ensure valueCompleter is not null and added a new OptionCompleterTest. java file to enhance completer
[ hotfix ] fix checkstyle violation in s3utils
changed the data type of sourcePeerId from String to int across multiple classes to accommodate larger data sets and improve performance
refactored file upload logic by introducing a separate ` zipFile ` variable and refactored the file upload process to improve code clarity and
removed unused imports and set the reply button alpha to 0.5 to improve code clarity and ensure proper visibility of the reply button
make test use mock in accesslogsupporttest more robust
updated file path for maryCacheFile from " testfiles - deleteme " to " tmp / testfiles - deleteme " to ensure
remove null assignment of subscribers and simplify the logic for property change handling
added a null check for the marshaller in AbstractSamlObjectBuilder and removed the static block in AbstractSaml10ResponseView to improve error
replaced ` printStackTrace ( ) ` with ` LogUtil. warn ( t ) ` in ` DataBrowser. java ` to enhance logging capabilities by
add conditional check for file existence in development mode and implement static path handling in tests to ensure proper handling of non - existent static files in development
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend. db. put
changed the format of the DEFAULT _ FORMAT constant from " value - tag - index " to " value - index " to standardize the format
updated hint setting method in GraphHopper to include a request object to improve user experience by providing hints on the required input
change the wait time from 30 seconds to 60 seconds in BesuNodeRunner. java and change the default value of ` useNative `
rename sandboxtest to sandboxtest to avoid confusion
( chore ) camel - cxf : do not log cxf exception
make sentimentcostandgradient # forwardpropagatetree public
added a semicolon to the SQL query in JDBCExample. java to ensure proper syntax and avoid potential runtime errors
[ v30 ] improve error message when interpolate file location for profile activation
refactor Style class to improve code readability to enhance maintainability and reduce complexity
added zoom functionality with back button handling in ShareActivity to enhance user experience by allowing users to zoom out the activity
added a conditional check to skip processing for deprecated fields to improve performance by avoiding unnecessary processing when deprecated annotations are present
added animation functionality to the LauncherFragment to enhance user experience by providing smoother transitions during layout display
[ hotfix ] fix checkstyle violation in yarn utils
added Progressable parameter to multiple files in Utilities. java and PTFRowContainer. java to enhance functionality by allowing progress tracking during file operations
[ hotfix ] fix typo in sourcecoordinatorprovider log message
remove an contribution from the panelByContribution list and update color updates accordingly to ensure the panel displays the correct color based on the contribution
refactored HyervisorTemplateAdapter to use HypervisorTemplateAdapter instead of HyervisorTemplateAdapter to improve clarity and consistency in naming
added a check to set dPath to the user's default directory if it is empty to ensure that dPath is always set to the
defaultaudiosink # getmaxsupportedchannelcountforprivssthroughv29 : do not set samplerate if format. no _ value
remove unnecessary dependency on mapmessage. getdata ( ) in mapfilter. matches ( mapmessage )
updated VerificationInOrderWithCallsTest. java file to improve test reliability and maintainability
swapped the order of parameters in setFromAxis method call to correct the order of parameters for proper functionality
updated the constant name for COLLECTION _ DELIM from " colelction. delim " to " collection. delim " to improve clarity
add test to ensure that the listener keep track of connection state.
fix documentation for union section ( # 5355 )
refactor logic to use a boolean variable for one - handed mode support to improve code readability and maintainability by reducing redundancy
added onDetachedFromWindow method to AppsCustomizePagedView to manage task execution to ensure that all running tasks are properly detached from the
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter constructors to allow users to specify a dictionary
replaced multiple instances of ` count ` with ` thrown = false ` in ` ResultSetTest. java ` to ensure that exceptions are correctly propagated
removed " debug " prefix from the initialization message in GradleBuildService. java to streamline the message initialization process by removing unnecessary debug information
( chore ) camel - phenomena : use atomicboolean instead of atomicboolean in abstractphenomenatest
refactor tooltip text handling in ComponentTree and ComponentTreeRenderer classes to improve code clarity and maintainability by reducing complexity in tooltip logic
increased timeout duration from 5 seconds to 10 seconds in the await condition to allow more time for the zipkin server to initialize
add ` ` agegate _ state'' to the deviantart gate
replaced an array of Google - related fingerprint keys with a single string constant for GOOGLE _ PLATFORM _ KEY to streamline the signing process and
replaced ` commonApp. solutionBusiness ` with ` commonApp. createSolutionBusiness ( ) ` in ` ImportDirSolveAllTurtle
added a method to notify window state changes in WWindowPeer. java to improve event handling for window state changes
[ te ] add email description to testentitygroupkeyemailcontentformat. test _ description
replace ` remove ( sel ) ` with ` data. remove ( sel ) ` in UserData. java to improve code clarity by using a
updated the ` getISO3Language ( ) ` method to handle a language with a length check and improved error handling for locale retrieval to ensure
refactor Liquibase to use ChangeLogParser for parsing and execution to improve code clarity and maintainability by encapsulating parsing logic
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when screen pinning is active
added functionality to display " No chart data available " and its description to enhance user experience by providing clear indication of unavailable chart data
added synchronized block to checkHeadWritten ( ) method in Http1xServerResponse. java and Http2ServerResponseImpl. java to ensure
refactor NettyResponse. java to replace ChunkedWriteHandler with chunkHandler for handling chunked requests to improve code clarity and ensure proper handling of HTTP
update header handling in Http2TestBase and related tests to ensure compatibility with the latest HTTP standards and improve test reliability
fixed - rlocalcachedmap. keySet ( ) and rlocalcachedmap. values ( ) and rlocalcachedmap. entryset (
camel - jpa : fix potential npe in jpa component
bulletCharacter : fix jump speed not be set correctly
added a null check for reparsedFunction in the syntax extensions condition to ensure proper handling when reparsedFunction is null
updated log format for consistency and clarity in BitstampPusherService. java to enhance readability and maintainability of the code
added two deprecated methods to retrieve old upload segment HTTP and HTTPS URIs to enhance code clarity and maintainability by deprecating outdated URI methods
updated the filter parameter in the findOne ( ) method call from'findOne ( )'to'filter'to ensure the correct tracking object is
camel - 7999 : fixed the unit test error of the predicate eip
added bounds to the alpha variable in RecentsView. java to ensure the alpha value remains within valid range for rendering
updated the string replacement syntax for the " Import - Package " attribute in the ManifestReversion. java file to ensure consistency in versioning format
[ hotfix ] fix checkstyle violation in datasyncconfiguration
added import for JavaSnippetRepository and initialized JavaSnippetRepository to ensure the Java snippet functionality is properly initialized
added a loop for updating sums in StarTreeRecordStoreCircularBufferImpl. java to ensure sums are updated correctly based on the number of
danielwagnerhall : update link to chromedriver. storage. googleapis. com
camel - 5432 : fix pgjdbc integration test failure
move synd - related import to rome package to support future release
added handling for Content - Length header in TransferCompletionHandler. java and updated NettyAsyncHttpProvider. java to use a list of headers to
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
removed the constructor from EnhancedRuntimeException that accepts a String parameter to simplify the exception handling by eliminating unnecessary constructor parameters
log4j2 - 1349 fix intermittent failure in socketappendertest
( chore ) camel - aws2 - kvm : remove unused import
updated method signatures and exception handling in ByteArray. java to improve error handling and ensure compatibility with JDK8
added a method to disable input proxy and log warnings for invalid touch events in RecentsAnimationWrapper. java to improve touch event handling and ensure
camel - 6770 removed the @ Ignore annotation from the RestletDomainServiceTest class to clean up the test.
removed parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method signature to simplify method signature and improve usability
move modulepath test to sub - package com. hazelcast. test. modulepath
updated error message formatting in JavaLanguageServer. java and JavaServerConfiguration. java to improve clarity and consistency in error reporting
replaced MENU _ OPEN _ WEB menu item with menu _ mute _ hashtags in TweetPager. java to simplify menu handling for mute hasht
changed test method names from " nodeIsAncestorOfItself " to " nodeIsNotAncestorOfItself " and modified assertions accordingly to improve
fix for incorrect y - coordinate calculation in worldeditplayer.
added a new exception ` PathNotExistException ` to the ` selfCheckDataTypes ` method to improve error handling when a measurement schema does not
removed extraneous single quotes from the end of a code block to correct syntax and prevent potential compilation errors
[ hotfix ] [ table - common ] refactors mailboxexecutor getter / setter in streamoperatortefactory
hbase - 262193 masterrpcservices should not throw unauthorized action when settablestateinmeta
replace lambda expressions with method references in GatewayMetricFilterTests. java to improve code readability and maintainability
update theories class to use the correct javaclass for blockJUnit4ClassRunner initialization to ensure proper initialization of the test class
[ drools - 3762 ] change the parameter name of the delete handler from ` remoteItems ` to ` lastTimeData ` ( #
increase the spacing between allAppsCellWidthPx and allAppsCellPaddingPx to improve layout consistency for better UI presentation
[ hotfix ] [ core ] add a configurable parent log level to core option
update booleanscorer2 to use the current instance instead of the current one.
added a call to writer. forceMerge ( 1 ) in TestMultiPhraseEnum. java to optimize data writing operations
changed the return type of the ` close ` methods in the ` Session ` interface and its implementations to return void to allow for more flexible method
updated GetLocations class to improve location retrieval functionality
removed unnecessary printstacks and improved exception handling in SchemaValidatorTask. java to streamline error logging and enhance code readability
replaced throw new UncheckedIOException ( e ) with a direct catch block to improve error handling by ignoring unnecessary IOExceptions
updated GeneratePubkeyActivity to use AppCompatActivity instead of Activity to ensure compatibility with modern Android features
ruby flavor : use stringbuilder instead of switch
changed log level from warning to debug in DerbyDatabase. java and added null checks for username and password in BaseLiquibaseTask.
( chore ) camel - nio2 : remove the'usescachemanager'param from the start method.
updated the ` CasGeoLocationConfiguration ` to use ` Resource ` instead of ` MaxmindProperties ` and refactored the database reading
[ fix ] instructorfeedbackresultspageuitest. html should be different from the standard session result page
updated the ` useEncodedQualifierListOptimization ` method to include a ` PTable ` parameter to ensure correct handling of query optimization based on
change visibility of several methods in ApprovalStore and ApprovalControllerService from public to package - private to enhance encapsulation by restricting access to
added a flag to track if the download has started to prevent unintended downloads to improve user experience by preventing accidental downloads
replace ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and introduce new methods in ` AbstractFloatingView
updated project version from 1.0. 11 to 1.0. 13 and corrected copyright year in JFreeChartResources. java to ensure compatibility with the latest
replaced ` yield ( ) ` calls with ` Thread. yield ( ) ` in ` SyncThread. java ` to ensure consistent yield behavior across
updated GsonBuilder. java file to improve functionality and maintainability of the code
added null check for centerGeo before adding it to circleCenters to avoid potential NullPointerExceptions when centerGeo is null
use -- java. espressohome instead of -- java. espressohome
doc ( doc ) : fix some javadoc error ( # 2674 )
changed the DeleteSessionAction class to be final and modified access levels for timeToDieInSeconds to enhance immutability and improve session management
corrected the capitalization of the class name from ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to
modified ` JoinQParserPlugin `, ` SolrIndexSearcher `, ` SolrIndexSearcher `, and ` TestJoin ` classes to handle
added the file parameter to the triggerMediaScan method call to enable media scanning functionality for a specific file
removed conditional printing of test results and streamlined result processing to simplify test result processing and improve code readability
added multiple custom G - code settings to the MainWindow to update the custom G - code settings dynamically
updated import statements and changed Writer initialization in AdditionalJaxbMappingProducerImpl. java to improve code clarity and ensure proper character encoding
refactor JsonElement class to improve code structure to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and resetExceptionIgnores in TestBadConfig. java to enhance test reliability by ignoring specific exceptions during
added a method to remove multiple fragments and hide the action bar to improve user experience by ensuring the action bar is removed when needed
added a NEWLINE _ TOKEN to the spanishTokens list in TokenizerAnnotatorITest. java to ensure proper handling of trailing whitespace in token
replaced ` Range. asByteRange ( ) ` with ` Range. Byte ` in multiple handler classes to improve handling of zero - length range
updated gcode file and added new bounds information in VisualizerCanvas. java and GcodeViewParse. java to improve clarity of generated G
updated TestBackwardsCompatibility. java to include new versions " 8.4. 0 - cfs " and " 8.4. 0 - nocfs
fix flaky test Assertions _ sync _ with _ InstanceOfAssertFactories _ Test. java
added a condition to check if the query execution is done and the output stage is not null to ensure proper data handling when the query execution is
change hardcoded ` ` file _ field'' to be dynamic in integritycheck. integritycheck ( )
added import statement for SolrClient and a private Map < String, List < SolrClient > > to ChaosMonkey. java to
fix npe in configurationactivator when useatabaseconfig be not available
fixed checkstyle issue in util / nestedrepositorytreepanel. java
add argument validation to the ExtensionTypeHeader constructor to ensure the extension type is within - 128 to 127
pdfbox - 4892 : don't swallow exception, a suggest by valerybokov
updated PrometheusProperties to replace pushOnShutdown with pushOnShutdown and added getter / setter methods to improve clarity and functionality of configuration options
added handling for trigger errors in ReactiveStateMachineExecutor to improve event processing and error logging
added a test for multiple Python executable configurations in BuckConfigTest to ensure that the correct execution path is used for Python interpreter configuration
added a default button to the root pane in InitialAccountRegistrationFrame. java to enhance user interface by providing a signin option
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN to HiveConf
update error log message to include exception when email verification fails
move fieldaccessibilitycallback and methodaccessibilitycallback from reflectionutils to core
added a listableCollector method to ` OidcIdTokenClaimCollector ` and created test class ` OidcIdTokenClaimCollector
changed the visibility of the ` center ` and ` center ` variables from private to default in Circle, Ellipse, and Rectangle classes to improve
[ 3.0 ] registerandprocessbundledbundledbundledbundledbundledbundledbundledb
refactor SslContextFactory to improve SSL configuration handling to enhance security and reliability of SSL connections
fix a unit test which fail because the default expectation be 5000
change return value from " access _ confirmation " to " access _ confirmation _ error " to provide a clearer error message for access confirmation errors
[ 3.0 ] fix classnotfoundexception when class loader be not set ( # 9441 )
added a new parameter ` copyRowHeight ` to the ` shiftRows ` method and updated related logic to enable dynamic row height adjustment based on
changed the method from ` setRolloverIcon ` to ` setRolloverPressedIcon ` in ` FontImage. java ` to correctly set the pressed
updated grid translation logic in TaskViewUtils, TaskViewSimulator, and TaskView to improve user experience by ensuring correct translation positions based
refactored assertions in Assertions. java to improve code readability and maintainability
added a check for ` currentDateTimeFunction ` in multiple database - related classes to ensure that the currentDateTimeFunction is consistently used across different database
added anonymousPath method and updated Log4jUtils to use it to improve path handling and enhance logging for better debugging
updated DigitalWellBeingToast to include remaining time parameter and added a method to retrieve the content description for tasks to enhance functionality by allowing dynamic content
hbase - 15421 addendum. wait a timeout when get meta location
updated LineNumberTagAggregator and TestDominance classes to improve code clarity and maintainability
fix : use stateconverterutil. defaultconversion ( state, typeclass )
updated BidirectionalOneToOneNPlusOneTest. java to include ClassImportIntegrator and implement additional properties handling to enhance the integration of Hibernate
removeExtraEmptyScreen ( ) method call and adjust startSearchPageIndex initialization logic to improve handling of empty workspace screens when starting the search page
update hashmap to include size of derived references and remove unnecessary addAll ( ) method calls to improve efficiency by preserving the size of derived references and
updated setValue method calls in GoogleLineChart and GooglePieChart to use double quotes to ensure consistency in value formatting across chart implementations
adjusted waitForBatches handling in SendingAccountor. java to ensure proper decrement of waitForBatches and improve logging clarity
hbase - 26310 add ( and improve ) to walprettyprinter to debug
change port number from 1 to 0 in NettyTransceiverWhenFailsToConnect. java to ensure the transceiver operates on a non
refactor event generation in SimpleReport to sort events before generating a report to ensure events are processed in a consistent order for report generation
added a new test method to verify CSV line retrieval with double quotes to ensure correct representation of CSV lines containing escaped quotes
add additional coref. doscore and coref. data for chinese benchmark.
don't send iqs to remote jids if they're not remote. jm - 1052
removed the @ JniImpl annotation from VM. java to streamline code by eliminating unnecessary annotations
updated the logic for setting configurations in Fetcher2. java to use Protocol. CHECK _ BLOCKING and CHECK _ ROBOTS instead
added a condition to check if the video HDR format for the renderer is not null and modified print statements in MediaInfoParser to enhance video
corrected a typo in the array name from " other _ package " to " other _ package2 " to ensure the test correctly references the correct
fix worldborder. setiameter ( ) when percentage be great than 99.
hbase - 15410 addendum : hmaster # getwalgroupsreplicationstatus should only return online status
make sure we remove the caller when the login event get successful
updated the ` markDataResourceOnline ` methods to use a new ` generateInstanceConfigs ` method for instance configurations to improve code maintainability and
changed the accessibility of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
add test to prove that a project contain a reference to a file that should not have be remove
removed unnecessary null checks for proto and protoGetSwitches in PropertyMap. java to simplify the logic for handling proto changes
updated DoorbirdInfo and ControllerConfiguration classes to use a single configId parameter instead of separate controllerId and configId to improve clarity and
replaced sessionFactory. close ( ) with session. close ( ) to ensure proper resource management and avoid potential memory leaks
removed the check for ` service. isGenerateRefreshToken ( ) ` in the ` OidcConsentApprovalViewResolver ` logic to simplify
removed debug print statement from Http2SolrClient. java to clean up the code and reduce unnecessary console output during closure
replaced the propagation extractor implementation with a NoopGetter enum to implement a getter for Boolean values to simplify the extractor logic and provide a clearer abstraction
refactor ConditionalOnEnabledResourceChain class to improve code readability and maintainability
updated condition to include child count check for the treeRoot to ensure that the treeRoot has a valid number of children
migrate from filtered stream to unfiltered stream in JBIG2Filter. java to ensure compatibility with the latest filters / streams
updated log messages and added intent result listener functionality in FacebookImpl. java to improve clarity and ensure proper handling of login failures
replace hardcoded return value " h : mm a " with a skeleton variable in ShadowICU. java to improve code clarity and maintain consistency in
removed the dependency on KeyguardManager in TouchInteractionService. java to simplify the condition check for device lock status
server : fix npe in listvolumes api when disk offering be null
updated UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel to improve handling of asynchronous file operations
refactor ` SigInt ` and ` SigIntTest ` classes by removing unnecessary imports and formatting to improve code readability and maintainability
replace updatebylabelwidth ( ) with preparelabelwidth ( ).
change return value from - 1 to 0 in Asset. java to correct the return value to ensure proper functionality
update computermarkest. java to use a mapping function instead of lambda
added an onRefreshListener to UploadListFragment to notify the adapter when the refresh is successful
BibDatabaseContext to use Path instead of File for file handling to improve type safety and avoid potential null pointer exceptions
refactor the emitters access pattern in ParticleEffect . java to use the get method instead of accessing items directly and add a dispose method for proper resource management to simplify code for better readability and ensure proper disposal of particle
fix for tomcat. getservices ( ) and getservices ( ) throw indexoutofboundsexception
corrected the casing of " desired file " in multiple files to improve code readability and maintain consistency
added a check to return early if playback state is not PLAYING to prevent further processing when the playback state is not PLAYING
replaced the use of ` injector. getInstance ( ServiceComponentDesiredStateEntityPK ) ` with ` findById ( 0L ) ` to retrieve the
added a new class ` InnerClassFieldClash ` and modified ` Java2TypeScriptTranslator ` to handle it to improve the handling of
added logging filter and follow redirect filter functionality to DockerClientFactory, DockerClientProfile, and DockerClientProfile classes to enable flexible handling of Docker log
replaced direct call to displayChanged with awtUnlock and awtLock for better resource management to ensure thread safety during display changes
updated test imports and annotations in NationalizedScalarQueryTest. java to align with the new SQLServer2008 dialect requirement
added a try - finally block around the verifyZipHeader method call in OPCPackage. java to ensure input is closed properly to prevent resource
changed the visibility of the storeClassFile method from private to public to allow access to the method from other classes
removed an assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to allow
updated error messages in CGIHandler. java and added JavaVMCallbackHandler in JavaVM. java to improve clarity of error messages and enhance Java
updated newline character checks in LineReaderImpl. java to include additional newline formats to enhance compatibility with different line endings
change collections from List to Set in multiple classes to improve performance and predictability of hash code fetching
added a check to return early if the vertex count is zero to improve performance by avoiding unnecessary processing when no vertex is available
added verification error handling for method calls in IncorectBindingPuzzleFixedTest and Descriptive messagesOnVerificationErrorsTest to improve error
replace ` createData ` with ` createFolder ` in ` MacroService. java ` to improve folder creation consistency
fix checkstyle warning ( unused import )
refactor JsonObject class to improve code readability and maintainability
updated the condition for idle timing in SelectChannelEndPoint. java and adjusted idle time handling in HttpConnection. java to ensure proper resource management and
fix farmlandblock. cansustainplant cansustainblock patch incorrectly
added primary key verification for SALTEDTABLE123 in QueryDatabaseMetaDataIT and refactored related code in UpgradeUtil and ConnectionQueryServices
updated ` SimpleDateFormat ` instantiation to use ` Locale. US ` in ` HttpCookie. java ` and added a new class ` B6
removed multiple redundant calls to db. close ( ) in DbHelper. java to improve resource management and avoid potential memory leaks
increase timeout to 5 second in messagelistenercontainerintegrationtests
[ fix ] ellipsis ] add tracer for lir test.
fix save button not work in source tab
updated ObjectMapper initialization to include line separator to ensure consistent line endings across different operating systems
fix nativeenvironmentrepository to work with window path.
removed the Application dependency from multiple test classes to streamline test setup and resource management
[ java ] remove validation of record archive before recovery.
chore ( integration test ) : update java and python dependency
testfuzzoptimizations : remove unused code
introduced a private boolean variable ` reverseImage ` and removed its initialization from ` SharedPreferences ` to streamline the code by eliminating unnecessary shared
polish ` ` add license header to module - info. class''
[ ds - 3940 ] add a way to filter field by predicate in terserutil ( # 3897 )
updated JUnit imports and annotations in AuthenticationSuccessListenerTests. java to migrate tests to JUnit 5 features and improve test structure
improve the performance of settypes. gettypes ( )
refactor TypeUtil class for improved type handling to enhance code maintainability and readability
updated triggerTime setting to use LocalDateTime for better date handling to ensure correct time zone identification during alert execution
added method handle logic to handle abstract method errors to ensure proper error handling for non - static method parameters
( chore ) camel - catalog : fix issue with invalid expression
remove redundant check for empty toExplore collection to improve code efficiency
camel - 8913 : camel - jclouds should use ioutils to copy input stream to output stream.
camel - consul : remove the osgi bundle from the camel - consul test
added a check for ` Flags. DEFAULT ` in the ` CheckACC _ STRICTFlagOnDefaultMethodTest ` class and created
[ java ] increase timeout for channel validation test.
added a new file ` FileExtensions. java ` with various file extensions to facilitate the handling of file extensions across the project
replaced custom ThreadLocalDateFormat with a static final instance with a cloned DateFormat to improve flexibility and maintainability of date formatting handling
8151348 : [ testbug ] remove - xx : + usecgroupmemorylimitforheap from vmdeparseroptions
added a displayName field and modified related classes to manage client display names to improve user experience by allowing customizable display names for client configurations
added EarlyTerminationException handling to multiple operator classes to improve error management during early termination of operations
removed unnecessary whitespace in TraceFunctionAroundWrapper. java to improve code readability and maintain consistency
updated connection handling in HttpBindServlet and HttpConnection classes to improve connection management and response handling
fix npe in forgeeventfactory. getcapabilities ( ). size ( )
wallettool : don't catch blockstoreexception in wallettool. run ( ).
[ java ] deprecate submitorderedcompletionservice in favor of abstractcompletionservice
modify the length calculation in HyphenationTree. java to preserve the original length before returning the hyphenation string
added a sleep delay of 200ms in IQRegisterHandler. java to ensure proper timing during registration process
move simpleaccreg resource to the simpleaccreg package to be part of the simpleaccreg namespace
corrected the spelling of " @ Param " in the PARAMETER _ NEEDS _ TO _ BE _ NAMED string to ensure consistency in parameter naming
set providersChanged to false in ConfigurationManager. java to ensure that providers are only updated when the configuration changes
added a method to quote identifier tokens in SemanticAnalyzer to ensure proper handling of identifier types in query parsing
pdfbox - 4892 : ignore'miss'name'entry for postscript
replaced raw type casting with type casting in SolrResourceLoader. java to improve type safety and eliminate unchecked cast warnings
updated the condition in Window. java to include a loop to traverse the parent of the hit to improve traversal by ensuring the current hit is
added null check for appManifest before retrieving targetSdkVersion to avoid potential NullPointerExceptions when appManifest is not initialized
refactor ConfigurationMetadataGenerator to streamline configuration and improve JSON processing to enhance code readability and maintainability while ensuring consistency in JSON processing
added userName property and its getter / setter methods to Driver and HiveSemanticAnalyzerHookContextImpl classes to allow dynamic user identification in the user management
added setter methods for file, URL, and input stream in XsltBuilder to enhance flexibility in configuring transformer configurations
added HadoopShim support to ContainerRunner classes and TaskRunnerCallable to enable integration with the Tez Hadoop shim for improved task execution
updated expectedFileSize in ShadowAssetManagerTest, expectedContentObserverTest, and ShadowDownloadManagerTest, and simplified variable declarations in ShadowDownloadManager
add null - check to coyoteadapter to prevent npe
camel - 17442 : throughputlogger now log the current duration and message with the total receivedcount.
added a new class VMOptionWarning and modified VM version checks in CompilerConfigFileWarning. java and ConfigFileWarning. java to ensure that
refactor ` MeterStatisticsManager. statisticsOperationMap ` and ` MeterStatisticsManager. statisticsModelMap ` to use a map for storing meter detail
updated logback configuration file resolution in FrameworkLauncherExtended. java to improve flexibility in managing logback configuration
updated various classes to enforce non - null constraints on parameter annotations to improve code robustness by ensuring null values are not processed
updated references from " BASH _ ESCAPER " to " SHELL _ ESCAPER " across multiple files to ensure proper
replaced inline try - with - resources statements with try - with - resources blocks in multiple test files to ensure proper resource management and avoid potential memory
changed the class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to clarify the purpose of the test class
updated formatting in RelativeDateFormatTests. java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to enable retrieval of shield addresses from the wallet
changed return type of readConsoleInput ( ) from byte [ ] to String in JansiWinSysTerminal and JnaWinSysTerminal
updated regex patterns for platform compatibility in TestStabilityRule. java to improve the accuracy of test stability detection
updated DefaultSolrHighlighter to limit fragments for multi - valued fields to ensure correct highlighting behavior by limitsing fragment values for multi - valued
renamed the method ` tryToLogin ` to ` tryToLogin ` and added a new parameter ` username ` and ` password ` to improve
added null checks and broadcasting for entities in the HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp classes to improve entity handling
( chore ) camel - jms : fix checkstyle violation
removed the wrapCollection call from the update method in DefaultSqlSession to simplify the method signature and improve performance
added logging for illegal currency exceptions in BTCEAdapters. java to improve error handling and debugging for invalid currency inputs
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 46177
pdfbox - 4071 : update default value for averagechartolerance and spacingtolerance
updated startController method to accept a boolean parameter for tenant isolation control to improve flexibility in tenant management during testing
simplified the return statement in HasSettings. java to streamline the code and improve readability
added a condition to check if the size of the attrs is greater than or equal to 4096 to ensure that the size of the attrs array is
added methods to retrieve project JDK name, type, and language level in AbstractIjProjectConfig and IjProjectWriter to improve project configuration
updated the description of " Experimenal : Enable optimization to avoid shuffle when bucket count is compatible but not the same " to enhance clarity
updated test method names and added new test cases for the GrantedAuthorityEffectiveAclsResolver to enhance test coverage for scenarios with user details and
javaparsertypedeclarationadapter should not use reflectionclassdeclaration to solve method in type
added button count management logic in XToolkit. java to limit the number of buttons supported for pointer mapping
replace ` jdk. testlibrary. asserts. assertEquals ` with ` com. oracle. java. testlibrary. asserts. assertEquals `
added a new ` MessagePackFactory ` class with multiple constructors for creating ` MessagePacker ` instances to enhance flexibility and maintainability of the
added miss tag for is _ desert, is _ cave and is _ derv, and replace them with their corresponding tag. close #
rename ` present ( deltaTime ) ` to ` draw ( deltaTime ) ` across multiple screen classes to improve clarity and consistency in method naming
added conditional checks for horizontal state in ComponentGroup. java to update UIIDs based on the component's orientation
use matcher. matches ( ) instead of DOI _ URL _ PATTERN. matcher ( identifier ). matches ( ) to improve code readability and
replace ` AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` AndroidLocklessInput ` classes to
[ java ] make sure to close the commit counter on termination.
add a new ` UserSite ` model with fields for userId, site ID, note, version to facilitate tracking and management of user
improve error message if the address be not in a proper format of : port or a standard url
bug 13975 : listcapacity api should return Capacity. CAPACITY _ TYPE _ STORAGE _LOCATED or Capacity. CAPACITY _ TYPE _
replace ` openInput ` with ` fileLength ` in ` NRTCachingDirectory. java ` to improve file length handling for the directory
refactor JavascriptCompiler and related classes to improve code structure and clarity to enhance maintainability and readability of the code
removed synchronization from the store method in UISettings class to ensure thread safety when accessing shared resources
added a check for native text input support and changed the access level of fireDataChanged method from private to public to improve text input handling and
spannerio : add extra error message when retry on emulator
use diamond operator ( use diamond operator )
changed the type of array types from double [ ] to short [ ] in ObjectInputStream. java and added a new CloneArray class with serialization
change nonce retrieval from ` getClaim ` to ` getStringClaim ` and adjust logging level from error to warn to improve clarity and consistency in nonce
added a condition to return true for the relationship field in DCInputSet. java to ensure proper handling of relationship fields in the input set
added a server logan to the capabilities table and updated related database operations to enhance user tracking and improve database functionality
refactor conditional check for menuItem assignment in DrawerActivity. java to improve readability and maintainability of the code
replaced failure message with assumption for network connection failure to improve test reliability by avoiding unnecessary failure messages
added a check to return early if there are no missing symbols to improve performance by avoiding unnecessary processing
added new data entries for data 5 - 4 in StringHelperTest. java to enhance data structure and improve test coverage
added a warning log statement in the Parameters class to indicate when the data provider is returned an empty array or iterator, so this test is not
camel - catalog : use collections. empty _ list ( ) instead of collections. empty _ set ( )
bug fix : set selection style to null if old version be 1.9. 8
fix : setrestitution be not take into account mass
added a new file ` AutoFtpActivity. java ` to implement an FTP test to facilitate automated testing of FTP interactions
refactor token type checking in BaseSemanticAnalyzer to improve clarity to enhance code readability and handle different token types more effectively
added getter and setter methods for component states in ImageViewer, OnOffSwitch, GenericSpinner, and UIBuilder classes to enhance component state management and
added a new class ` RemoteExecutionEnabled ` for serialization and deserialization of ` RemoteExecutionConditional ` to enable or disable remote execution features in the
pdfbox - 4071 : fix typo find by codespell on fossies. org
updated file reading methods to use StandardCharsets. UTF _ 8 and added suppression warnings to improve character encoding compatibility and enhance code clarity
assert working score from scratch in abstractscoredirector.
updated SEMIJOIN _ CONVERSION configuration from " hive. enable. semijoin. conversion " to " hive. optimize. semijoin
added logging statements to various datagram packet classes to inform users that they are not an io. netty. buffer. ByteBuf instance
updated method names and improved file deletion logic in SynchronizeFolderOperation. java and FileDisplayActivity. java to enhance code clarity and ensure proper
added junit assertions to verify the presence and presence of the transaction hash in PollingTransactionReceiptProcessorTest. java to ensure that the getTransactionHash
renamed the test method from ` testConstructSchemaBlackList ` to ` testDeleteTimeseries ` and increased the schema blacklist count from 3 to 4
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is provided to avoid runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl ` and ` AbstractJdbc23PoolingDataSource ` to ensure
updated the @ AllArgsConstructor annotation to include JSON creator mode to ensure proper handling of JSON properties in the constructor
added a check for view type in MetaDataClient to inform users that creating an index on a view is not supported currently
added a new class ` Website ` and updated ` PopulatorImplTest ` to use wildcard imports for ` Website ` to improve test coverage and
added a setup method to set the default locale in BSFormatterTest to ensure consistent localization across test executions
log a warning if someone try to download a large number of. jar file.
updated the assertion method in MultiPartParsingTest to use Matchers for equality comparison to improve readability and maintainability of the test code
added conditional logic to handle cases with single and function parameters in SimpleExprGenerator. java to ensure correct handling of single and multiple parameters in the
added a volatile boolean variable ` createdVertx ` and modified the null check condition to ensure that vertx is only created when it is created
removed null argument from writeAttributes method calls in NodeStyleBuilder. java to simplify method calls and improve performance by avoiding unnecessary parameters
updated logging statements in SynchronizeFolderOperation. java and added null checks in FileDisplayActivity. java to improve logging clarity and prevent potential null
added a new property ` ignoredReadStatus ` to the ` Entries ` class and updated related methods to include checks for ` keywords ` and
updated resource path resolution from ` toURI ( ) ` to ` MavenPaths. targetDir ( ) ` for test classes to ensure test classes are
[ issue # 4900 ] fix npe in registerserviceproducerexecutor ( # 4901 )
updated the isPlaying condition to check if the audio is not paused to ensure that the audio is not paused when the sound is paused
added a permission for SUDO _ AREA in the plot admin command and implemented a new permission constant in Captions. java to enhance permission
refactor query option handling by replacing ImmutableMap with a new method to improve code readability and maintainability by encapsulating query options
updated path suffix checks from ` toUri ( ). getPath ( ) ` to ` getFileName ( ). toString ( ) ` in multiple parser input
updated assertions to check for pure emoji and mix emoji pairs to improve test reliability by ensuring correct attribute values are asserted
changed the native method name from ` NMTWaitForDataMerge ` to ` NMTOverflowHashBucket ` and added a new native method
[ flink - 21143 ] [ core ] migrate javaeitherserializersnapshot to javaesitherserializersnapshot
updated DEFAULT _ NDOTS and DEFAULT _ ROTATE _ SERVERS to use a configurable resolver option to improve flexibility and maintainability of
added superclass association method to RequestRockerTemplate and created a test for null pointer exceptions to ensure proper functionality of the superclass in the rocker
pdfbox - 4892 : handle potential npe, a suggest by valerybokov
update references from " liquibase / parser / core / xml / ns / dbchangelog / dbchangelog - ext. xsd " to
move commonmimetypelocator to test from src / test
changed the RepositoryVersionState initialization from ` INIT ` to ` NOT _ REQUIRED ` across multiple files to ensure that the repository version is not required
updated the comparison logic in GenerateChangeLogTask to include SchemaComparison alongside CatalogAndSchema to enhance the comparison process's ability to
updated JUnit import to TestNG in TestBackwardAnoamlyFunctionUtils. java to utilize TestNG's testing framework
added a new file ` ProgressiveJPEGTest. java ` for testing the ` ProgressiveJPEGTest ` class to implement and verify
ambient, emissive, two - side material will now be load from the asset file.
include 32 - bit architecture in error message
added a null and length check before setting the preferred size to avoid potential NullPointerExceptions when text is empty
fix off - by - one bug in readVarInt ( ).
changed classes PushUtils and ThumbnailsCacheManager and ThumbnailsCacheManager to final and added private constructor to prevent subclassing and ensure singleton instances are not
update length calculation from curConfig's bounds to curConfig's length to improve accuracy in determining the length of the configuration
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen. java to simplify the code and improve readability
updated the file path format for loading presets to improve file naming consistency and avoid potential issues with wildcard imports
added a conditional check for app duration before announceing accessibility in TaskbarStashController. java to ensure accessibility announcement only occurs
replaced ` Args. getInstance ( ) ` with ` RefreshTask ` in the Node instantiation to utilize a refresh task for node management
pmd : fix ant task to target both jdk 13 and jdk 1.5
updated import statements and annotations in QuotaResponseBuilderImplTest. java for improved readability and consistency to enhance test reliability by using mocked constructions
added print stream support to TestSchemaToolCatalogOps. java to enable custom output streams for debugging purposes
added a DFSClient parameter to the SaslNegotiateHandler constructor and initialized it in the FanOutOneBlockAsyncDFSOutputSasl
updated constructor signatures in MongoQueryMethod and MongoRepositoryFactoryBean to include RepositoryMetadata as a parameter to enhance query resolution by incorporating repository metadata
add support for entityresolver2 in xml dsl Digester. java to allow for more flexible xml parsing
removed duplicate import statements and streamlined import statements in MetaDataEndpointImpl. java to improve code clarity and reduce redundancy
increased ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and introduced a deadlockRetryInterval variable to enforce a maximum number of
renamed variable ` xl ` to ` xAxis ` for clarity to improve code readability and maintainability
added methods to validate and determine if a character is printable in the FsUtils class to enhance character validation and ensure proper handling of undefined characters
rename Selenide. in to use WebDriver. using to improve clarity and consistency in WebDriver usage
resolved - issue batch - 1481 : ensure plugins / plugins be populate from the projectbuildingrequest
bugfix : fix typo in getandsetransfer ( ) - > getandsettransfer ( ).
test : use google - cloud - vision resource instead of google - cloud - vision / src / test
updated return values in ModeledConnectionRecord, ActiveConnectionRecord, and AuthenticatedUser classes, and added getRemoteHost method in AuthenticatedUser
[ ds - 3892 ] add admin permission to the community list page.
add thread counter to thread name format for long and short compaction threads to ensure unique thread names for thread management during compaction processes
updated the method to retrieve the resource package for wallpapers to ensure the correct resource is used for wallpaper selection
updated method to use ` getPlayersInPlotVisible ` for retrieving player lists to improve player visibility handling in plots
updated multiple Java files including AndroidManifest, ResName, ShadowMediaPlayer, and ShadowActivity to improve code organization and maintainability
updated test cases in MlibOpsTest. java to improve test coverage and reliability
disable native library that be not ready for initialization of awt headless.
updated the reference variable name from " referencedContainer " to " referencedContainer " and added a new test for the buildable reference to ensure the
simplified key and IV generation in UploadFileOperation. java to improve code clarity and reduce redundancy
[ hotfix ] [ test ] add stability annotation for workprofiletest
added a check to skip processing if bucketing version is not set to optimize performance by avoiding unnecessary processing
replaced ` setCursorPosition ( x, y ) ` with ` input. setCursorPosition ( x, y ) ` to ensure the cursor is positioned
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and introduced new ` LockFreeBucket _ finalFields _ Cache
include tpstats in the nodetool status message. patch by jbellis
update max bitrate retrieval to use user preferences in ExternalPlayerActivity and PlaybackController to ensure bitrate is accurately associated with user preferences
updated ZipkinHttpSpanExtractor and TraceFilterTests to include new methods for checking trace and span IDs to improve code clarity and ensure proper handling
fix duplicate offer and bsq swap issue
refactored the method withTypeIconRightAligned in FlutterCompletionContributor. java to simplify the code and improve readability
added a method call to set the project in the LauncherUtils class to ensure the filesystem has the correct project configuration
added ProjectFilesystem parameter to several JsBundle and JsBundleBuilder classes to improve filesystem handling during build processes
update header for license header ( # 1372 )
refactor MetricsDSLContext class to improve code readability to enhance maintainability and reduce complexity
removed the VersionBuckConfig interface and replaced its implementation with ImmutableSet to simplify the class structure and improve performance by using a more appropriate data structure
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by avoiding potential null pointer
changed method visibility of validateTypes from static to public and updated error message formatting to enhance accessibility and improve clarity of error messages
fix : update gapic - generator - java with mock service generation fix ( # 317 )
added SLF4J logger import and initialized a static final variable in SimulationStatus. java to enhance logging capabilities and improve code maintainability
updated the VERSION _ POSITION _ Y constant from 138 to 150 and adjusted the font size from 9 to 14 to accommodate changes in font
added a runlater call to the notifications list in UserInterfaceComponentImpl. java to ensure that notifications are added on the UI thread for better
updated the ReturnsElementsOf class to include a list of elements to enhance functionality by allowing a list of elements to be returned
[ hotfix ] [ runtime ] fix checkstyle violation in errormessage
added a test method for LineFileDocs in BaseStoredFieldsFormatTestCase. java to validate the functionality of LineFileDocs in Lucene
added ` getVersionCode ( ) ` method to ` MainApp ` and updated usage in ` FeatureList ` and ` WhatsNewActivity ` to
camel - 17442 : fixed bean info method invocation when body be an instance of a bean
replaced ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamParser. MultiPart ` to ensure
added a bufferOwned flag to manage buffer disposal in IndexBufferObject, VertexBufferObjectWithVAO, and BufferUtils to ensure
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through the login
fix checkstyle issue in javadoc of jerseyclientconfiguration
int - 190 remove deprecate reference to characterstreamreadingmessagesource and characterstreamwritingmessagehandler
replaced instances of ` s ` with ` o ` in multiple test files to standardize output formatting to improve clarity and consistency in output formatting
updated StringDict and Table classes to manage column and row counts while ensuring valid contents to improve data handling and prevent errors when dealing with empty
added deprecation annotations and implemented the ` AutoCloseable ` interface in ` GenericContainer ` to signal that these classes are outdated and should not be used
changed logging level from info to error in MediaInfo. java and modified test method signatures in RendererConfigurationTest. java to improve error handling and
added schemapattern option to BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance configuration options for data source connectors
bcjsse : return empty byte [ ] instead of null for empty tl session
refactor bitmap creation calculations to use variables for width, height, and stroke width to improve code readability and ensure proper scaling of bitmap dimensions
refactored Base64 class implementation to improve performance and maintainability of the code
[ sulong ] add assumption and fallback value to sulong global container.
simonstewart : allow the selenium - backed webdriver to run the test on an iphone
updated FlowBuilder and FlowJobBuilderTests files to improve code clarity and maintainability
changed the data type of ` resName ` and ` value ` from ` ResName ` to ` int resId ` in multiple classes to improve
[ type : fix ] fix the issue that ` docker - cert - path ` can't be find when start the docker daemon (
datastream - > datastream - > datastream - > datastream - > datastream integration test
modified type checking logic in ` mmm Attr. java ` and added a new class ` T6450290. java ` to improve type
add -- log - level option for java. util. logging. log. level
added logging for package removal events and refactored deleteItemsFromDatabase method to improve debugging and streamline item deletion process
added allFilesOption ( ) method implementations in FileActivity, FileDisplayActivity, and PreviewImageActivity to enable users to select which files to
added deprecated methods ` forEachOperation ` and ` hasMatching ` to the ` MutationOperationGroup ` class to provide a standard way to perform operations
update calculation for numPredictiveAppCols based on phone type to ensure correct number of predicted app columns based on device type
added UTF - 8 character encoding loading in StringUtils to ensure proper handling of character encoding in content
added new classes RequestMatchers and RequestMatchersTests to implement request matching functionality in the security web application
ggb - 2118 fix for undo / redo in applet
update calculations for knob position and dimensions in the ProgressBar to ensure correct positioning of knob elements within the specified height and width
[ native ] fix path to external function definition file
BruteArgumentMoverHandle. java to make extra variables final and added a native method to permute arguments to enhance immutability and
added a condition to check if the state handler is invalidated along with the existing gesture state check to ensure that gesture handling does not proceed when
updated layout calculations to use constrained dimensions instead of largest and smallest sizes to improve layout responsiveness across different screen orientations
added a condition to check if the redir file is " / robots. txt " in HttpRobotRulesParser. java to ensure correct
openide - netbeans gui : fix ` ` noi18n'' warning icon
updated button navigation keys in AdvancedGameSetupScreen. java to improve clarity and functionality of button interactions
added a check for zero in the UDFOPDivide class and created a new test class for it to ensure accurate division by zero
refactor code formatting and improve exception handling in FlowJob. java to enhance code readability and maintainability
updated BeanDefinitionBuilder usage in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to enhance configuration for logout functionality
added onDestroy ( ) method to ShareActivity and ContributionsActivity to unbind service after destruction to ensure proper resource management and prevent
rename variable'thumbNail'to'thumbnail'in WallpaperPickerActivity. java to improve code clarity by using a more descriptive
refactor multiple command handler and output format classes for consistency to improve maintainability and readability of the codebase
added a method to set the request timeout in the Rpc configuration to ensure that the request timeout is correctly applied to the RPC configuration
updated logging level from error to debug and added sealedTsFileResources in TsFileResourceManager. java ; modified tests in Resource
added system properties to the MavenModuleLoader to enhance the configuration of the module
added metric for readiness calls in the server to enhance monitoring capabilities for readiness and readiness status
fix animatedtorch model not register properly
added null check before closing the writer to prevent potential NullPointerException when closing the writer
replaced instances of ` new HiveConf ( ) ` with a call to ` UtilsForTest. getHiveOnTezConfFromDir ( )
added a new link to the FeaturesActivity for " Muting Users " to provide users with an official link to enhance user experience
added initialization for direct method handle using ` jdk. reflect. useDirectMethodHandle ` to ensure proper handling of method handles in the application
hbase - 25892 splitonLeadingvarcharcolumnspolicy change from constantsizeregionsplitpolicy to steppingsplitpolicy
[ flink - 2594 ] [ yarn ] log warn if yarn. lib. directories or plugins. directories do not exist
updated method calls in BuildTranscriptHMM and TrainerDictionary to use dictionary. getWord ( ) and dictionary. getWord ( )
reformatted a JSON string by removing unnecessary whitespace to improve readability and reduce size for potential storage or transmission
added a ` id ` to the ` compose ` intent in ` TimeLineCursorAdapter `, ` TimelineArrayAdapter `, and ` Com
( chore ) camel - core : add warn log when terminating messagelistener
don't throw an exception when there be no class find to analyze
replaced the import of Key with PublicKey in KeyFetcher. java to ensure compatibility with the latest cryptographic standards
updated the ` isIncompatible ` variable from ` false ` to ` true ` to ensure the compatibility status accurately reflects the media type
updated the method signature of createAccount to include AccountCreateContract to enhance functionality by allowing account creation functionality
pdfbox - 4071 : avoid exception when call getrangesarray ( ) on empty range array
http : / / issues. apache. org / jira / browse / amq - 4798 - fix and test failure
change default value of star tree format version from " ON _ HEAP " to " OFF _ HEAP " to enable off - heap format
modify title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to ensure that the title does not exceed the defined maximum
updated the previewPanel initialization and layout logic in JColorChooser and BasicColorChooserUI classes to improve the handling of the preview panel in the
changed log level from info to debug in DefaultBuildExtensionScanner. java to reduce log verbosity during extensions checking
added a null check before initializing bitmapFactoryOptions in AndroidTileBitmap. java to avoid potential NullPointerException during bitmap decoding
added ` getLayoutParams ` method to ` FakeView ` class to provide access to ` ViewGroup. LayoutParams `
added a check to ensure a Cursor is already closed in DefaultCursor. java and a corresponding test in CursorSimpleTest. java to prevent Illegal
pdfbox - 4892 : don't create a page when there be no kids or page in the parent
added @ Ignore annotation to JMSClientTest. java to temporarily disable tests during development
added a private field'ts'with getter and setter methods to store and retrieve the timestamp associated with the message
add a common exception mapper to log all exception that come up in the request
changed the class declaration of AbstractExecutor from package - private to public to allow access to the AbstractExecutor class from other packages
refactor IsochroneResource to use a static method for removing legacy parameters to improve code readability and maintainability by centralizing legacy parameter removal
updated import statements and class visibility from public to package - private to enhance encapsulation and restrict access to test classes
extract csrf setting into a separate method to improve code readability and maintainability
[ lombok ] add a ` ` lombok. launch. shadowclassloader'to the ` ` lombok. launch. * '
[ jbrules - 3589 ] add a numeric disabled flag to the excel parser to allow users to disable numeric
changed log level from info to debug for default value logging to reduce log verbosity and improve performance during production
added null checks for axes and buttons in Lwjgl3Controller. java and improved joystick handling in Lwjgl3ControllerManager.
updated ObjectFactory import from ` cucumber. api. java. ObjectFactory ` to ` io. cucumber. core. backend. ObjectFactory ` in ` W
refactor port forward saving logic to check the existence of the host before saving it to improve code reliability by ensuring the savePortForward method
added a configuration option to specify if Liquibase snapshot data should be snapshoted to enhance flexibility in snapshot data behavior across different components
added logging for event processing events in SyncedFolderObserver. java to improve debugging and ensure only relevant events are processed
updated LocationMarshaller class to improve data handling to enhance performance and maintainability of location processing
modified conditions for touch sensitivity in StatusBarTouchController. java to improve touch responsiveness based on trackpad gestures
updated package structure and refactored VectorReader and its implementations to improve code organization and maintainability
updated import statements from ArgumentMatchers to Matchers across multiple test files to improve consistency and clarity in the import statements
updated ` getRelativePathName ` and ` getRelativePathSupplier ` methods to return ` Path ` instead of ` PathName ` to improve clarity and
updated method signatures to include RecordReaderFileConfig in various transform methods to enhance functionality by allowing configuration of record readers
added @ WithArgumentExtractor annotation to @ WithArgumentExtractor in ControllerMethodInvoker. java, and updated @ WithArgumentExtractor annotation in Param.
cloudstack - 2120 : fixed listvolumes api to return resource. resource _ unlimited for domain
add event for shift - actions in the gui screen to allow users to shift item easily
add ` ` cold _ reads _ to _ omit'' to compaction strategy option
added a call to leech. stop ( ) in ClientTest. java to ensure leech is properly stopped during test execution
[ issue # 5898 ] fix pop messageprocessor label ( # 5899 )
refactor KeyboardAddonSettingsFragment to improve code structure to enhance maintainability and readability of the code
replaced the @ Test annotation with the @ Ignore annotation in ShadowDateUtilsTest. java to mark the test as ignored for a moment
rename the class ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to
added upgrade request handling in WebSocket connections tests to ensure proper functionality and reliability of upgrade requests and responses
added timeout management functionality to AndroidImplementation to enhance connection handling by allowing customizable timeout values
updated getUserAccessPermissions and getTeamAccessPermissions methods to include user permissions from all users to enhance access permission management for repositories with user and team
added a test for quoted cast expressions in SelectTest. java to ensure proper parsing and deparsing of a SQL query with quoted strings
8151308 : test / java / awt / file / basic. java fail on non - root platform
added logging and thread configuration options to the FixedThreadExecutor class to enhance thread management by allowing dynamic thread selection based on configuration
added null check for the " catalogname " field in AbstractChangeGenerator. java to prevent potential NullPointerException when accessing the field
replaced instances of ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to improve consistency and align with the new library structure
encapsulate animation end handling in a separate method to improve code readability and maintainability
added a close method to the DeflaterOutputStream in RegionFile. java to ensure proper resource management and prevent memory leaks
added a new Java file ` gsp001. java ` implementing a native method to retrieve system properties to facilitate testing of system properties
polish ` ` declare bean'' annotation for non - static method
- add export capability to camerode and lightcontrol so they can be write to / from orchestration.
updated popup window disposal logic in PopupNotificationPanel. java to ensure proper resource management and prevent memory leaks
replaced instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` and updated method signatures accordingly to simplify exception
added getter method for featurevalue to allow external access to the feature value
changed the parameter type from ` int ` to ` long ` in the ` after ` method to accommodate larger time values
added ` onBuild ` and ` executionDriver ` properties to ` ContainerConfig ` and ` Info ` classes to enable configuration of on - build
modified Toolbar icon setting logic to differentiate between rtl and non - rtl targets to improve user interface responsiveness by differentiating between rtl
added a new boolean flag ` enablePositionIncrements ` and modified the return statement in ` StopFilterFactory. java ` to enable or disable
added internet address to Emailstest and SystemErrorEmailReportTest to enhance email verification by including TEAMMATES admin address
added a flag mTryShareAgain to false in FileActivity. java to ensure proper sharing options during file operations
added logic to determine if TTY name can be used in JansiNativePty. java to improve the handling of the TTY
updated variable names and logic in BandwidthProcessor. java for consistency and clarity to improve code readability and maintainability by using a consistent variable name
replaced direct assertions with Awaitility's await mechanism in Issue410Tests. java to improve test reliability by leveraging A
[ easee ] fix checkstyle violation in easeebindingconstants
updated sleep duration in KafkaIOIT. java and set startup attempts in KafkaContainer. java to improve read timeout handling and ensure retry attempts are
replaced allOf with is ( itemName ) in SearchResultMatcher. java to improve clarity and functionality of the hasJsonPath method
added trust management for SSL connections in OkHttp. java to enhance security by trusting all certificates during SSL operations
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code clarity and maintainability by simplifying button
added a new file ` HyperlinkFormula. java ` and updated ` StringPtg. java ` to handle ASCII formulas correctly to improve
added nullable fields for stdout and stderr in ShellStep. java to ensure that workingDirectory is non - null before accessing its path
increase TIMEOUT _ MILLIS from 1000 ms to 2000 ms to allow more time for tests to complete
refactor ` escapeDatabaseObject ` methods to use a consistent parameter name ` objectName ` instead of ` tableName ` to improve code clarity and maintainability
added a boolean field ` inputChanged ` and updated conditions in ` MaterialRenameDialog. java ` to track the change status of the input field
added a test for state change functionality in ShadowDisplayTest. java and implemented setState method in ShadowDisplay. java to ensure correct behavior of display
[ geos - 8770 ] add direct invocation service to the dispatcher
fix for x ^ y in gwt backend ( gwt backend )
added server version check for pg _ catalog and pg _ class conditions in PgDatabaseMetaData. java to ensure compatibility with PostgreSQL server versions without
add nullable annotation to indicate that message should never be null
updated method signature and variable names in FileUtils. java for clarity to improve code readability and maintainability by using a more descriptive method name
added functionality to filter and collect Jenkins nodes based on the name of the Jenkins node to improve monitoring capabilities for Jenkins node monitoring
sec - 1648 : add support for'disabled'and'defaults - disabled'attribute in header configuration
hbase - 26310 protobuflogreader should not throw eofexception if first byte be negative
add destroy ( ) method to nacosregistry to allow for graceful shutdown of nacos
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor status code handling in GoAwayGenerator and GoAwayBodyParser classes to improve compatibility with SPDY versioning
updated test cases in AuditEventTests. java to verify JSON output to ensure the correct JSON structure is returned for audit events
updated interpolation logic to return 0 instead of a fixed value to ensure consistent behavior when rounding errors
change default path to / defaults / forge / forge / forge / defaults. update documentation.
refactor code to store the result of getDxExecutable ( ) in a variable before adding it to the builder to improve code readability and maintainability
added multiple assertions to validate PointRangeQuery instances in TestPointQueries. java to ensure the correctness of PointRangeQuery instances during testing
hbase - 25836 testhfilecleaner should use / namespace / table / region instead of hardcoded ` ` / namespace / table /
added a check to set the file label only if the download file name differs from the fileTransferRequest to ensure that the file name is only
remove jce throw from jedisclustercommand. getconnection ( )
[ hotfix ] [ table - common ] fix the issue of chainingstrategy in rowtimelimedisplayassgineroperator
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap `
added multiple benchmark tests for ` QMapReadRandomKeyBenchmark `, ` QMapReadSequentialKeyBenchmark `, and modified the ` Comp
initialize G _ SCH _ B using a HashMap to improve performance in hybrid plot world handling
updated null and empty fields check logic and introduced a regex - based identifier conversion method to improve robustness of the code and ensure proper handling of
ggb - 2118 fix for angle [ { 1, 2, 3 } ]
added TCP keepalive configuration to Hive configuration and updated socket handling in HiveServer to improve server performance by allowing configurable TCP keepalive settings
renameaction : renameemptyfiles should not return empty file
no effective change - remove unused import
removed unnecessary imports and simplified thread creation in RealtimeSegmentRelocator. java to improve code readability and reduce boilerplate code
cloudstack - 2120 : don't return a success = true when createlbpc be call in createlb
updated interpolation logic in WindowTransformSwipeHandler. java and modified condition in FloatingIconView. java to ensure windowAlpha is non - negative and
updated the fatal error message from " You cannot use a spring - security 3.0. xsd or spring - security - 3.1. xsd to " You
rename several assertion classes and tests for consistency to enhance clarity and maintainability of the codebase
camel - disruptor : make field final to ensure immutability.
added a new file TestConfigureUDF. java and integrated it into ExprNodeGenericFuncEvaluator. java to implement a new test for configuring
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to enhance message matching flexibility and improve test coverage
removed the use of ` final ` logger ` for logger initialization in ` LOG. java ` to improve performance by reducing the number of temporary logger
renamed methods from ` updatePurgedShardNodes ` to ` deletePurgedShardNodes ` across multiple classes to clarify the purpose of the methods
added default Java version handlers for 16 and 17 in the JavaLanguageModule to ensure compatibility with the latest features and improvements in the language
add a constant for wait for compression job to be finish in timebasedrollingpolicy
[ hotfix ] [ test ] remove assertion from volatilereadnode test
added a method ` getSteps ( ) ` to the ` SimpleJob ` class and made minor formatting adjustments to enhance code readability and maintain
removed unused fields and initialized ` fromBase58 ` and ` toBase58 ` in ` TronJsonRpc ` to improve code clarity and
refactor code to store and return the currency pair in a variable before checking for exchange symbols to improve code readability and maintainability by reducing redundancy
use base time unit in longtasktimer to ensure accurate measurement
[ euphoria - flink ] [ euphoria - flink - euphoria - core ]
updated HostEditorActivity to use CharSequence instead of String for pref keys and improved handling of ListPreference objects to enhance code readability and maintainability by
change ethereumerializer to use databaseversionhandler instead of incompatibledatabasehandler
added a maximum tweet count limit in the ExpansionViewHelper class to limit the number of tweets processed during the query execution
increase the refresh interval for the authorization map to ensure that the authorization map can be properly refreshed
fix and add unit test for persist byte size of partially acked tail page
fix checkstyle issue in entitymanager / glowserver / glowserver. java ( # 722 )
added a method ` grow ` to ` DataIO ` for resizing the buffer to improve memory management by allowing dynamic resizing of the buffer
added import statement for java. io. DataOutputStream in GdxSetup. java to enable data output functionality in the Gdx setup process
camel - 4499 : added getsubmittedfilename ( ) method to return the filename of the part
added markReadForLoad ( ) method to LauncherFragment. java to improve data handling by marking read for load state
updated the ` main ` method to throw ` ClassNotFoundException ` and modified the ` instrumentJar ` method to handle ` NegativeArraySizeException `
added a method to checkForSpillPossibility for currentPartition in HashAggTemplate. java to ensure proper handling of potential memory issues during
changed variable declaration from ` info. getDocStoreSegment ( ) ` to ` dsName ` in ` IndexWriter. java ` to ensure consistency and
added a default name ID format constant to the SamlProfileSamlNameIdBuilder class to ensure a consistent name ID format is used when
added error handling for password change aborted to improve user experience by preventing unauthorized password changes
removed unnecessary lines in Deadlock2. java to improve code clarity and maintainability
add getmaxidletime ( ) method to nio receiver mbean to make it easy to get the maximum idle time of the selector mbean
deleted the FontScalingTest. java file to remove obsolete test font size validation for Metal Look and Feel
[ rrd4j ] fix potential nullpointerexception when query rrd4j data
added a check to return early if numVectors is negative to improve performance by avoiding unnecessary processing
test : migrate executablereftest to junit 5 ( # 4517 )
added null checks before setting view and glassPane in JLayer. java and created a new class bug6994419. java to
camel - 7999 : wiretap eip to allow to wire tap on a dynamic route. work in progress.
changed the visibility of the setAction method from public to protected to allow subclasses to access and override the method
added a boolean validator for the TOPN option in PlannerSettings. java and implemented matches method in PushLimitToTopN. java to
[ java ] remove redundant declaration of aeron directory name in log agent test.
fixed - batchping don't take into account the queued execution of the batch request. # 1758
replaced ByteArrayOutputStream with FileOutputStream and refactored getConfVarURL method to use a temporary file to improve file handling efficiency and reduce memory usage
updated the parameter from'defaultDevice ( )'to'criteria. getDevice ( )'in createModel method to ensure that the model is
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer. java to ensure that the onMenuItemSelected method always returns true for the relevant
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future development
use dirname instead of full path for. hawtio
added a condition to return SINGLE _ SPACE for empty comments and empty strings to improve handling of empty comments and ensure correct spacing behavior
changed mClosed to be volatile in Dictionary, UserDictionary, BinaryDictionary, ResourceBinaryDictionary, and SQLiteUserDictionaryBase to ensure thread safety
removed the printStackTrace ( ) method call from ContextHandler. java to improve error handling by avoiding stack trace printing
move customitemdroptest to integration / regression module
added'ifNotExists'parameter to DDLTask and DDLSemanticAnalyzer classes to allow conditional creation of partitions based on the'if
updated input handling in NfsSecondaryStorageResource. java to improve byte reading efficiency and memory management
remove the ` controlRequestStreamId ` call from ` EchoServiceNode ` and ` BasicAuctionClusteredServiceNode ` to streamline
wfs : add'intersects'and'fes'spatial operator to capability
solr - 2161 : disable awaitsfix until solr - 2161 be resolve
refactor preface validation logic in Http11InputBuffer. java to improve clarity and efficiency in handling preface processing
[ java ] set ` isIngressExclusive ` to false in aeron cluster.
updated HBASE _ OFFHEAP _ PCT _ KEY and HBASE _ BUCKETCACHE _ SIZE _ KEY to support multiple cache keys
added running record count tracking and refactored related methods in JSONRecordReader. java to improve tracking of the running record count during exception processing
added filtering logic to remove specific items from mergedItems to improve data management by filtering out relevant years
replaced ` ( 0x00000000 ) ` with ` ( 0, Mode. CLEAR ) ` in multiple files to improve visual consistency by using
added OpenGL ES 2.0 availability check in Mesh. java to ensure compatibility with OpenGL ES 2.0 rendering
added ActionContext import and setContext method to BackgroundProcess. java to ensure proper context management during processing
added a parameter to the ` getUnescapedName ` method and modified the ` isInsertIntoTable ` method to include ` dbName ` as a
added a setConnectionTimeout setting in TestConnections. java and changed the count variable to final in StubConnection. java to improve connection timeout handling and
added multiple assertions for percentile calculations in TestHiveAggregationQueries. java to enhance testing capabilities for percentile calculations in the aggregation framework
update default idle and write timeouts from Duration to 30 seconds in WebSocketConstants. java and WebSocketChannel. java to improve consistency and clarity in timeout
updated the variable name from ` account. name ` to ` platformAccount. name ` in the ` getSharesWithForAFile ` method
updated Inet6Address. java to use generics and improved null handling for scope _ id to enhance type safety and prevent potential null pointer exceptions
refactor button state management in PlaybackControlView. java to improve clarity and functionality of button state updates
update method references in Session. java and Token. java to improve clarity and consistency to enhance code readability and maintainability by using a more des
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary. java ` to ensure
replace true by ____ in graaloptions. useexceptionprobability
updated the newPlateColor calculation to support themed icon colors to enhance visual differentiation between themed and non - them
guacamole - 59 : fix injection vulnerability in mysqluser
added " centre " alias to the aliases list to enhance search capabilities by including relevant candidates
added DirectUpload class import and injection method to CommonsApplicationComponent to facilitate dependency injection for managing direct uploads
added space adjustments for left and right axes in BarChartActivity and BarLineChartBase to improve data visualization by ensuring proper axis spacing
added support for additional Java ABI fields in AndroidLibraryDescription and JavaLibraryDescription to enhance library management capabilities
added operation event status type retrieval in OnlineHubService. java and initialized the services list in CompositeLogService. java to ensure proper handling of
add miss ` ` visibility'' annotation to method parameter. getannotations ( ).
( chore ) camel - jms : use @ setup instead of @ startbundle
( chore ) camel - test - infra - sortedarraystringmap : append classpath to processbuilder
updated separator handling for documentLoader loading to ensure correct file separator is used for Android applications
removed'this'prefix from the'min'and'maxBy'methods in DataSet. java to simplify the method signature and improve code
added JUnit Ignore annotation to WorkProfileTest. java to temporarily disable the test due to a known issue ( b / 243855320 )
escape the percent character in error message formatting to ensure proper formatting of error messages for better user experience
fixed - ` ` nullpointerexception : cache. geturi ( )'' throw by jcache. getcachemanager ( ). get
fix ( commandcontext ) : reduce log level when closing non - technical exception
replaced the direct instantiation of ALPNClientConnectionFactory in HTTP2Client. java to improve code readability and maintainability
fix write of base value of packet when write entity property
update onosaudiosink to check if the thing be initialize
update countDownLatch. await ( 500L, TimeUnit. MILLISECONDS ) to 5, TimeUnit. SECONDS ) in ContextRegisterListenerTest. java and
changed log level from info to debug in LightThingHandler. java to clarify the log's severity when an effect light type is not found
add db. properties and db. properties for asyncjobmanager to configure the asyncjobmanager thread pool size
updated method signatures and improved formatting in Reporter and ReturnsSmartNulls classes to enhance code readability and maintain consistency in formatting
updated the parameters of the ` generate ` method to accept a ` DataFrame ` instead of a ` Frame ` to simplify the method signature and improve
updated multiple module - info. java and package - info. java files to improve code structure and readability
added a check for empty physical column names in OrcPageSourceFactory and implemented a test for ORC use column names with an empty file to
added a return statement to the methCla. mixPlay method to enable audio mix functionality in the engine
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
fix finder pattern finder's x - coordinate calculation in finderpatternfinder.
simplified the check for presence of leadingIncludePaths in PreprocessorDelegate. java to improve code clarity by removing unnecessary checks
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and
simonstewart : add ` ` find'' and ` ` all'' to the list proxy
defaultaudiosink # getmaxsupportedchannelcountforprivssthroughv29 : do not set samplerate if format. no _ value
added getFormula ( ) and setFormula ( String formulaText ) methods to XSSFName class and made XSSFName class final to improve
increase the timeout factor for the target variable from 60000 seconds to 90000 seconds to improve test reliability by accommodating longer data sets
fix arrayindexoutofboundsexception when parse a gml schema with no attribute
added unit tests for the ClassPathXmlJobRegistry class to ensure correct retrieval of job names from the job registry
fix 2 findbugs warning ( use long instead of float )
camel - 12320 - camel - restlet : deprecate the restlet producer, add an advanced option to the endpoint
( chore ) camel - log4j : remove deprecate method from logendpointbuilderfactory
refactored the submitTraceEvent method into a new method ` writeChromeTraceMetadataEvent ` to improve code organization and clarity by encapsulating
added checks to ensure only non - canceled, non - filled, and non - rejected limit orders are added to the limitOrders list to avoid
added pixel offset calculations and validation in LCMSImageLayout. java to improve image layout validation and ensure accurate pixel data generation
updated timestamp handling in Event. java and modified ruby _ timestamp method in JrubyEventExtLibrary. java to improve timestamp management and ensure
added a condition to return the resource if the path ends with " / " and implemented a test case for non - existent paths in WebAppContext
updated ScriptFunctionImpl constructor to use TYPE _ ERROR _ THROWER _ SETTER and TYPE _ ERROR _ THROWER _ GETTER
correct calculation of horizontal / vertical scroll amount on macos
fix npe in graphdecoder if callerloopscope be null.
test : migrate sniperjavaprettyprinterjavaprettyprinter to junit 5 ( # 4517 )
refactor URLOutputStream initialization to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added @ entity annotation to mail class to enable the mail entity to be saved to the database
updated the default value of the command parameter'includeTablespace'from " false " to " true " to ensure that tablespace is explicitly
added getter methods for ` metaDataBuffer ` and ` valuesBuffer ` in ` CountersReader. java ` to provide access to buffer metadata, values
added a flag to track the presence of a non - empty file in ScanBatch. java and implemented tests for handling empty JSON directory to ensure
added null check for internal name before fail comparison in StringSubject. java and updated assertions in StringTest. java to improve failure messaging for named
[ pytorch ] ignore lib. so ( ) in presets for cuda.
updated exception handling from ClassNotFoundException and NoClassDefFoundError to a more general Exception in JrtJavaBasePackages. java and PackageHelper. java to
hbase - 15415 check filesystem in safemode to ensure data can be write in safemode
updated error message formatting in TranslatingJavacPhaseTracer. java to improve clarity of error reporting for better debugging
added clone ( ) and put putputplugin ( ) method in defaultplugincache.
fix a problem with update the status of contact resource when the provider be null.
move servletrequestdetails. withresourceandparams ( ) to servletserverrequestdetails since it be no longer use.
added integration test for fetching account information in the BTCE exchange to ensure the PollingAccountService correctly retrieves account information from the BTCE exchange
added mouseWheel method to VDUInput and vt320 classes and updated its implementation in TerminalView to enable mouse wheel functionality and improve user interaction
updated library path handling in Natives. java to ensure correct library path is used for LWJGL applications
no effective change - remove deprecate columnstore annotation
fix player skin flag not be set in metadataindex.
add log to loadbalancerwithservicetest to help debug build failure
reformatted code in ` MapService. java ` for consistency to improve code readability and maintainability
replaced direct system property retrieval with AccessController's doPrivileged method to improve security by using a privileged action for property access
changed the fileSuffix variable from static to instance variables and updated its usage in TemplateEngineFreemarker. java to allow dynamic configuration of
http : / / issues. apache. org / jira / browse / amq - 3682 - fix error in selectmessagequeueby
gwt : use layout. layout. animationcallback for hide - hDragger
replace ` bindConditionally ` with ` bind. when ( hasCaret ). bind ( area. caretColumnProperty ( ), hasCaret
updated platform flavor handling in PrebuiltAppleFrameworkDescription, CxxBinaryDescription, and CxxGenruleDescription classes to improve accuracy in determining platform flavors
replaced usage of SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator and JpaQueryExecution classes to align with updated parameter handling in the JPA
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer. java to avoid potential NullPointerException when passwordAttribute is null
[ hotfix ] [ table - common ] fix default value for array type
refactor SSL address handling to streamline hostname verification to improve clarity and maintainability of the SSL engine logic
updated assertions in TestFSTableDescriptors to use greater than or equal to improve accuracy of cache hits comparison
danielwagnerhall for delete a cookie by domain instead of path.
added a flag to track if the launcher transition has ended in AbsSwipeUpHandler to ensure proper handling of launcher transition state during gesture handling
updated HTML head and title tags to specify charset UTF - 8 in HTMLListWriter and HTMLWriter to ensure proper handling of character encoding for better
refactor IndexReader class to improve code readability and maintainability
increased the maximum allowed value of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 to accommodate larger
updated comboBox's add method call and added a new class bug6337518 to address a bug related to arrow button functionality in the
renamed TestRandomAccessBuffer. java file to improve clarity and maintainability of the test code
updated UserInfoActivity. java file to improve user information retrieval functionality
added notification for content changes in multiple services to ensure that changes are consistently sent to the HomeContentProvider
added methods for managing state and background invalidation in BubbleTextView and Launcher classes to improve handling of state changes during interactions
updated the ` getFallbackResponse ` method signatures to include an ` Throwable ` parameter across multiple policy classes to enhance error handling capabilities by associating
simplified conditional check for ` _ dest _ dir ` in ` DumpBytecode. java ` to improve code readability and maintainability
add null check for tags in ChannelUri. java to avoid potential NullPointerExceptions when tags are null
updated regex SPECIALS string format and added assertions in TestSqlPatterns to improve pattern handling and ensure accurate assertions for SQL patterns
added a constant for the title in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action bar title reflects the
updated method call from ` Iterables. getOnlyElement ` to ` Iterables. getLast ` in ` PythonDslProjectBuildFileParser. java `
[ cleanup ] use ` ` 0'' a default cleaning interval
updated TransactionalValidationListener to validate table structure based on partition presence to improve validation of partition data for partitioned tables
updated polling enablement in ReplicationHandler and SnapPuller classes to improve user experience by enabling polling functionality
changed ` generatedKey ` from ` int ` to ` long ` and updated SQL execution to use ` RETURN _ GENERATED _ KEYS `
simplified the return statement for proxy retrieval in SimpleReferenceCache. java to improve code readability and maintainability
updated regex patterns from " failed to " failed to inline : disallowed by ciReplay " to improve clarity and accuracy of test failure messages
updated keepAliveTimeoutShared and keepAliveTimeoutCustom variables to use a fixed value and set stop timeout to improve thread management and avoid potential null pointer exceptions
deleted the HttpTestAccount001. java file to remove unused test code
changed exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher. java ` and updated test cases in ` DispatcherTest. java `
camel - 7999 fixed the issue that cxfdataformat. dataformat _ property don't work when use cxfmessage
added a case for the'~'character in ClientUtils. java to handle the special character'~'in the client logic
camel - slack : fix camel - slack poll should have a delay of 10 second
fire a blockharvesting event in the blockutil. getblockdropped method to allow for more flexibility in block dropping.
adjusted the layout spacing in TranscodingTab. java and fixed an error in the encodedAudioPassthrough JCheckBox initialization to improve layout spacing and
added a new Java file for testing JList selection functionality to address bug 8057791 related to improper selection behavior in the JList component
updated flag assignment logic in LambdaToMethod. java and added a new interface LambdaInterfaceStaticField. java to improve code clarity and introduce a
updated RunnerBuilder to use WebSocketMethodsFactory for subscription manager creation and added a test for EthSubscribe availability to ensure that EthSubscribe is
changed null check from ` to. length ( ) > 0 ` to ` to! = null ` to improve null safety and prevent potential Null
refactor ParquetFixedWidthDictionaryReaders to include a dictionary check and adjust record retrieval logic to improve performance by avoiding unnecessary try - catch blocks
updated layout calculations based on device orientation in PortraitPagedViewHandler. java to ensure proper layout rendering for different screen orientations
added logging aspect to the examples application to enable debugging and monitoring of method execution
updated the string concatenation logic in the QueuedThreadPool class to improve clarity and correctness of thread state representation
renamed ` keyType ` to ` implementation ` in ` CacheGenerator `, ` CacheProvider `, and ` SystemUnderTest ` classes to improve clarity
added totalFrameSize ( ) to the createReferenceMap method to ensure the reference map is created with the correct total frame size
updated TypesafeConfigurator. java with new configurations to enhance type safety checks and improve code clarity
camel - graphql : added karaf feature test for camel - graphql
renamed the main method to bug1, bug2, and bug3 in RFE2891944. java to clarify the purpose of the
remove ` ` utf - 8'' from http client string encode
replaced the unsupportedPlatformTool implementation with a new ` UnsupportedPlatformTool ` class to simplify the class structure and improve code readability
updated recovery retry logic to use an integer type instead of a double to improve flexibility and allow for more precise retry duration
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way
[ hotfix ] [ test ] addressmanagertest and abstractaddressmanager now use a random index
updated layout constraints for components in VLCVideo. java to improve visual layout consistency and appearance of components
use bitsquare / bitsquare instead of bitsq / bisq
updated the AUTHORITY string from " com. klinker. android. talon. provider " to " com. klinker
update user configuration directory to include " /. m2 " and modify file handling for user XML to ensure compatibility with m2 and improve file
added buffer binding in VertexBufferObjectWithVAO. java to enable efficient buffer management for VertexBufferObjectWithVAO
updated ServerHttpSecurity configuration settings to enhance security features and improve request handling
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests. java to temporarily disable tests that are not ready for execution
added default headers support to HttpClientProperties and CasCoreHttpConfiguration classes to enhance HTTP client configuration flexibility by allowing customizable default headers
add thingboardcredentialsviolationresponse to handle expired / unauthorized authentication
deleted the NoOpConfigPathGetter. java file to remove unused code that is no longer needed
replace Codec. base16Decode with Bytes. fromHexString in EngineAuthService. java to improve code clarity and reduce dependency on Base16 decoding
replaced ` CascadedStyle ` with ` CSSName ` and added checks for float values and adjusted ` inline _ block ` positioning to improve
planner - 1010 : improve javadocs for planning entity and planning
refactor ` getDefaultHeaders ( ) ` method to return a ` MultiMap ` instead of creating a ` CaseInsensitiveHeaders ` instance to improve header handling
replace all instances of ` enc ` with ` charset ` in multiple classes to improve clarity and consistency in handling character encoding
added a method ` getJobId ( ) ` to ` StepContext ` to retrieve the job ID to ensure StepExecution has a valid JobInstance
refactor comparison methods from ` compareTo ` to ` compare ` in ` ExpandableUploadListAdapter. java ` and ` FileStorageUtils. java `
reduce log level from error to debug for jdk client
updated import statements in LegacyAuthenticationHandlerAdapter. java to reflect new authentication handler structure
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
filtermanager : don't check if the filter have owner publication key before remove it from the network
move the wrap ( inputstream ) method into pgpkeyring so it can be reuse by subclass.
use buffered output stream in MinimalLockingWriteAheadLog. java to ensure data output is properly flushed and closed after use
added a new test method ` testSelectAllFromView ` and modified column name handling in ` HiveBaseResultSet ` to improve test coverage and
modified FocusTransitionTest. java file to enhance test coverage for focus transitions
replaced GWT import from'org. gwtproject. core. client'to'com. google. gwt. core. client'to
added a null check for sourceTask before retrieving counters to avoid potential NullPointerExceptions when sourceTask is a MapRedTask
added a null check for the readListener variable to ensure that the readListener variable is not null to prevent potential NullPointerExceptions
added color selection listener and refactored color setting logic in AppearancePanel. java to improve color management and error handling during color changes
updated constructor parameters in TaskHelper. java to change the boolean parameter from'false'to'hidden'to ensure the correct visibility of the
http : / / issues. apache. org / jira / browse / amq - 4798 - fix test regression
pdfbox - 4071 : fix resource leak when create from randomaccessfile
added DefaultParameterHandler import in LanguageDriver. java to enable parameter handling for script execution
lsra spill optimization : check for def loop depth
fix ( groovy ) : add test case for compile groovy script
fix : close on completion be call twice
initialized ` serviceAdvisorType ` from ` null ` to ` PYTHON ` to ensure the default value is set for the service advisor
replaced static resolver initialization with a ThreadLocal instance to improve thread safety and avoid potential race conditions
changed parameter types from Collection to List in Path and PdfCleanUpContentOperator classes to improve type flexibility and simplify object construction
updated memo length from a fixed value to a random value in SendCoinShieldTest. java to ensure deterministic output generation for cryptocurrency
added a method ` setPersonalisation ` to ` SkeinParameterSpec ` class to enable setting of personalization settings based on date and
removed redundant check for argument count in CodeGenerator. java to streamline code by eliminating unnecessary duplication
updated scroll method parameters from ( 1, 1 ) to ( 0, 0 ) across multiple files to simplify the method signature and improve code readability
changed the access modifier of the pointer variable from private to public and added reset methods to allow dynamic modification of the pointer value during processing
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to clarify that the class is intended to be Bdb
fix : castexpression should not implicitly cast to boolean type.
replace arraylist with boolean variable acceptsall in abstractresource. java to improve code readability and maintainability
added a new boolean parameter to TaskView. java to provide a default behavior for task view handling
added ` isAutoIncrement ( ) ` method to ` LiquibaseDataType ` and implemented ` isAutoIncrement ( ) ` method in multiple classes to
default error text should be ` ` command fail due to internal server error''
replaced imports with ProcessTools and utilized command - line arguments in LocalManagementTest. java to improve code clarity and utilize the new utility for
replace ` add ` with ` push ` in ` toSimulate ` to improve simulation behavior
added support for ajp port configuration in GitBlitServer. java and updated related methods in GitBlitBuildServer. java to allow
added type coercion logic for intersection types in TransTypes. java and created a new Intersection03. java file with a test case to
renamed the class ` EmbeddingTest ` to ` EmbeddingITest ` to clarify that the class is intended for integration testing
added a native method to start the toolkit thread in WToolkit. java to ensure that the toolkit thread is only started once
[ gr - 34467 ] use a separate ForkJoinPool to reduce memory usage during localization compression.
set surface visibility to false and surface visibility to WINDOWS to improve user experience by ensuring surface and visibility are appropriately managed
updated the temporary directory path for the record transformation test from " RecordTransformationTest " to " getClass ( ). getName ( ) " to improve
added support for enabling full and solidity node HTTP settings in the CommonParameter and Args classes to enhance configuration flexibility for node HTTP settings
added a ` service ` property to the ` GoogleCloudFirestoreTicketDocument ` class and enhanced the ` countTicketsFor ` method in
refactor Generate. java file to improve code readability and maintainability
[ json ] scalar function should support null and not only java null.
updated BadgeRenderer and IconPalette to support a new DOTS _ ONLY constant and improved badgeInfo validation to enhance flexibility in rendering different badge
removed the'final'modifier from the'getConfiguration'method in FreemarkerManager. java to allow for potential modification of the '
ww - 3833 add test for invalid excluded package pattern
updated device Udid retrieval logic to differentiate between " mac " and " iphone " platforms to improve accuracy in identifying device Udid based on
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to handle response types and improve error logging to enhance error handling and ensure consistent response processing
added null checks before binding and executing the root script in AllAppsView. java to ensure proper execution of scripts during the initialization process
added a new constant TEXT _ BURN and modified the conditional check for lineCount to introduce a shadow layer for text rendering based on the new
added cleanup methods for table and view in TestColumnAccess and TestReadEntityDirect to ensure proper cleanup of temporary tables after tests
added parser retrieval to SecurityNamespaceHandler to enhance functionality by allowing custom parser configuration
updated the condition in BoundedLocalCache. java and added a new test in BoundedLocalCacheTest. java to improve cache performance testing and ensure
implemented ` complete ` and ` flush ` methods in ` RawConnection ` and ` WebSocketAsyncConnection ` classes to enhance the connection's ability
added multiple test cases for assertions in SoftAssertionsPerfTest. java to improve test coverage for various assertions scenarios
added a constant for test failure codes and overridden the execute method in PythonRunTestsStep to ensure that the test process exits with expected error codes
updated GlyphLayout. java to include logic for setting xAdvances based on markupEnabled state to improve handling of glyphs in subsequent
refactor assertions in TestBooleanRewrites to use streams for comparing scores to improve readability and maintainability of the test assertions
updated enumClass assignment to use getSuperclass ( ) instead of getEnclosingClass ( ) to ensure correct retrieval of the enclosing class for anonymous classes
add flush ( ) method to playerconnection to reduce casting.
added a check for whether drawing has started before removing onDrawListener to ensure that listeners are only registered once to avoid redundant operations
refactor multiple classes including CheckIndex, BlockTreeTermsReader, FuzzyTermsEnum, and Builder to improve code clarity and maintainability
updated import statements and modified the condition for match status in ReplicaAssigner. java to streamline the import statements and ensure proper handling of node
changed the default return value of getBoolean for MEDIAPARSERV2 from false to true to ensure MEDIAPARSERV2 is enabled
allow round _ type annotation on non - method element in generated bean definition
added assertions for existing and non - existent partitions in FolderPermissionBase. java to ensure that partition permissions are correctly enforced during truncate operations
change status publish status of protocol provider when due to a registration change
updated color generation logic in PastelColor. java to include a base of 180 colors to enhance variability in color generation
updated imports and class references in ScriptEngineFactory. java to improve code clarity and maintainability
updated the image rendering logic in HolographicViewHelper to include original and outline bitmaps to enhance visual rendering by preserving original and
updated request method handling to use ` HttpMethod. fromString ` and improved null checks for ` requestBody ` to enhance robustness and prevent potential null pointer
add a tw - dimensional counter to the mult - word preprocessor so that it would well reflect our expectation.
[ hotfix ] fix checkstyle violation in iochannelutilstest
added conditional logic to determine the output format class based on the HivePassThroughOutputFormat to improve class loading efficiency and ensure correct output format is used
refactor ChunkListener, AfterChunk, and BeforeChunk classes to improve code readability and maintainability
update condition checks in DOMBuilder. java to include additional validation to ensure that invalid characters are processed correctly
updated HierarchicalUndirectedGraph handling in ClusteringCoefficient and EigenvectorCentrality classes, and corrected return statements in Diameter
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region, fixed
added a new file ` PublicStaticInterfaceMethodHandling. java ` implementing interfaces with static and default methods to demonstrate the usage of default methods in
camel - 1331 : added support for property placeholder in keyselector to be able to use property placeholder in the keyselector.
catch throwable instead of t instanceof threaddeath to improve error handling for threaddeath
spec in securityfactory implementation
reverse jar order so we don't have to sort the jars
use ` clientkey ` instead of ` clientId ` when ` path ` be empty
int - 1187, add namespace support for ` ` transformer''
rename BACK _ FACTOR to REWIND _ TIME and adjust related conditions to improve clarity and correctness in duration calculations
added ` isScrollWheeling ` method to ` CodenameOneImplementation `, ` Button `, and ` JavaSEPort ` classes
updated usage formatting in UtilityCommands. java and DocumentationPrinter. java, and refactored command annotation handling in DocumentationPrinter. java to improve
no functional change - communitylistservlet should set collection. map
updated method signatures in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to use mergeFiles instead of seqFiles to improve clarity and consistency in
remove @ override annotation to fix compile error
bugfix : don't rebuild project if preference change
abstractsootfieldref : remove unnecessary work while wait for phantom field
change naming convention to snakecase for elastic meter ( # 1371 )
added methods for listener management and Gcode command creation in IController, TinyGController, and BackendAPI to enhance functionality by allowing controller listeners
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to verify rendering of a huge horizontal rule in the
replace all instances of System. out with TTY in TypeSystemTest. java and PartialEscapeAnalysisPhase. java to improve code consistency and
updated multiple Java files for consistency and clarity to improve code readability and maintainability
change condition from " frameLength = = 0 " to " frameLength < = 0 " to ensure that frameLength is valid for further processing
added return statements for float and int values in IntFloatMap and IntIntMap classes to ensure that returning values accurately reflect the initial value
fix nullpointerexception in imagedownloadservice
added a null check for registered in the HandlerRegistration class to prevent potential NullPointerException when registered is null
removed native method hasNextSibling ( ) from AttributeNode, DocumentNode, ElementNode, and HtmlNode classes, and modified return statements in I
added null check for results in RedisDistributedMapCacheClientService. java to avoid NullPointerException when results is null
updated log messages in MobFileCache. java to clarify cache configuration to improve clarity and understanding of cache initialization process
modified ColConvCCMTest. java file to improve test coverage and reliability
replaced instance variable declarations with local variables for ` target `, ` allowCovariantReturns `, and ` syntheticNameChar ` to
pdfbox - 3017 : avoid memory leak, a suggest by valerybokov
replace Float. toString ( ) with a custom class X and add a main method to convert JSON data to a Java class to improve string handling
camel - 15836 : fix compilation error of genericfileconsumer # poll ( # 2897 )
added a Runnable inside EventQueue. invokeLater for asynchronous execution to ensure tasks are executed on the Event Dispatch Thread for thread safety
updated the calculation of maxSize in CompressExtension. java to ensure the correct maximum size is used for message processing
update steering value calculations in TestAttachDriver, TestFancyCar, TestPhysicsCar, and TestPhysicsCar to improve
replaced ` Arrays. equals ` with ` MessageDigest. isEqual ` in ` PasswordEncryptionService. java ` to improve security by using ` MessageDigest `
updated JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp conversions to improve accuracy and consistency in date and timestamp handling
updated the VERSION constant from 2 to 3 and refactored metadata reading logic to ensure compatibility with version 3 and improve metadata handling
refactored FlywayAutoConfiguration to use @ Configuration and introduced FlywayInitializerJpaDependencyConfiguration to improve configuration flexibility and ensure proper
added a call to sorted ( ) on ClassesImpl. java to ensure that the classes are processed in a consistent order
added a method to retrieve the current stable state in LauncherStateManager and implemented a waitForLauncherCondition method in AbstractLauncherUiTest to improve state management
refactor SharedInformer class to improve code readability and maintainability
refactor memory scope creation and closing logic in TestCloseScope0. java to ensure compatibility with different runtime versions
increased the timeout duration of the test method from 50, 500, and 5000 to allow more time for the test to complete
updated test cases in CaptchaChannelProcessorTests. java to improve test coverage for Captcha functionalities
fix a bug in metadataimport where the owner of a collection can not be find.
bugfix : do not retry save property if retry
updated TrackingDirectoryWrapper instantiation to use a variable for the directory parameter to improve clarity and consistency in directory handling
fixed bug 1188372 - unusedimports no long report false positive for package import
added validation for insert overwrite operations on partitioned Iceberg tables to ensure data integrity by preventing insert operations on partitioned Iceberg tables
updated assertions in BootstrapTests to check for correct SAML configuration keys to ensure correct SAML key retrieval and validate legacy SAML keys
ignore non - static local field in excluder. java
remove the synchronized keyword from the getaddressvector method and add a warning log if an unexpected e - mail address be encountered
removed WAITING _ FOR _ LINE _ COMMENT and WAITING _ TO _ LEAVE _ BLOCK _ COMMENT from CommentsParser. java to
added IOException handling to the release method in IndexWriter and Lock classes, and created a new LockReleaseFailedException class to improve error handling and provide specific
move datasource initialization test to org. springframework. batch. test
updated SpelExpressionTransformer, LiteralNode, OperatorNode, and SpelExpressionTransformer classes to improve handling of unary operator transformations
updated ByteBuddy initialization to use TypeValidation. DISABLED to disable type validation for improved performance
refactor ` JavacRoundEnvironment ` to replace ` DeclaredType ` with ` TypeElement ` throughout the ` JavacRoundEnvironment ` class to improve
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest and set timeout in MySQLTableLockWith
allow loggingapplicationlistener to reference system property's logfile
added redirect handling logic and refactored request method parameters in ServiceApiRequest. java to improve HTTP connection management and ensure proper handling of redirects
added constants for SERVICE _ MAPPING, VERSION _ MAPPING, and APP _ MAPPING in MicroserviceFactory to enhance configuration handling for micro
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread. java ` to ensure the
refactor DB _ PATH _ REGEX to static final variables and update DB _ PREFIX to improve code readability and ensure correct database prefix usage
updated return statement to use HomeDataSource to retrieve unread count from the current account
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for Jetty's virtual thread
modified the ` getAllOrder ` method to include a ` limit ` parameter and introduced a maximum limit for market price lists to enhance order retrieval flexibility
replaced direct call to ` CommaFeedSession. get ( ) ` with a null check for the user object to improve robustness by handling
updated the method for obtaining the absolute file path in LocalFileSystem and added a test for matching a relative wildcard path in LocalFileSystemTest to improve
added constants for maximum width and height in ComponentBuilders. java to ensure dimensions do not exceed predefined limits
added logging functionality and deprecated the ` setConnectionManagerTimeout ` method in ` CommonsHttpSolrServer ` to enhance configurability and maintainability of
updated error handling in PrintController. java to include exception details to improve error reporting for document creation failures
refactor file resolution logic in CrateType. java to use a lambda expression to improve readability and maintainability of the code
added number validation logic to SpellChecker to ensure correct identification of input strings
updated the MESSAGE string declaration in HelloWorld. java to ensure consistency in message formatting
added methods for fetching and displaying file actions from OCFileListFragment to improve code organization and enhance functionality for managing file actions
added error handling to the logReplicationTimeAndConfFiles method in SnapPuller. java to ensure graceful termination of the puller
updated the syntax for the update method call to ensure consistency in code formatting
updated the constructor of StreamerLoader to use a more descriptive parameter name and added logic to remove MaterialColumnParser instances to improve code clarity
added new Core Library for LibGDX collision detection and generation of BitmapFonts from. ttf files to enhance the software's capabilities
added maximum recycled views for various device profiles in AppsContainerRecyclerView to improve memory management for different device configurations
added a new test method for building binaries separately in AndroidBinaryCrossCellIntegrationTest. java to ensure proper functionality and cache handling in the build
update examplebaritonecontrol to show good message when no waypoints be define
added import statements for ParsedNode, ParsedNodeException, and ResourceAccessor in CreateProcedureChange. java to utilize ParsedNode and ResourceAccessor for
added null bitmap handling in FilterOperatorUtils and introduced a test for range filtering in NullHandlingEnabledQueriesTest to enhance functionality to support range filtering
updated argument validation logic in JDynamicInvokeExpr. java to ensure all bootstrap parameters are of type java. lang. invoke. MethodType
( chore ) camel - jms : fix unit test failure
clear formattingters from runtime options in CucumberInstrumentation. java to improve code readability and maintainability
changed the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and made related changes to improve type safety
updated workspace label adjustment logic in DeviceProfile. java to ensure correct visibility of workspace labels based on cell size
refactor assertion methods in ReplicationFactorTest for improved clarity and consistency to enhance readability and maintainability of the test code
sulong : defer to initialize llvm context if pre - initialization be enable
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest. java and ChaosMonkeySafeLeaderTest. java to
replace RuntimeException with JsonIOException in error handling to provide a more specific exception type for JSON - related issues
replace Integer. valueOf with Integer. parseInt for value assignment to ensure correct parsing of integer values
updated error messages from " Unable to create " to " Unable to copy " and adjusted directory resolution to improve clarity of error messages and ensure consistent
added a check for high - level consumer segment names and refactored segment name splitting logic to improve clarity and correctness of segment name validation
added multiple overload methods for ` startActivity ` in ` ShadowFragment ` to ensure fragment activities are properly attached to the activity
updated the current time conversion method in DueDateBusinessCalendar. java to ensure accurate date calculation by using the current time from the clock reader
added " - target " option with a value of " x86 _ 64 - none - linux - android " to the list of supported platforms
added ` deleteAllFiles ` method to ` FileDataStorageManager ` and integrated it into ` ManageAccountsActivity ` for managing account file deletion to
updated command format from " -? " to " - h " in SchemaCrawlerCommandLine. java to improve clarity and consistency in command -
added a static factory method to create a suite description and updated equals methods to ensure uniqueId is provided to improve test coverage and correctness of the
replaced usage of Hashtable hints with MultiFormatReader to simplify the code and improve readability
removed the ` ImmutableList < String > sources parameter from the ` BuckTarget ` constructor and added ` @ SuppressWarnings ( " unused " )
added unit tests for the ` getRange ` method in ` GWCZoomContextFinderTest ` to ensure the ` getRange ` method behaves as expected
added a dependency tracking configuration key and implemented the enableDependencyTracking method to enable or disable the dependency tracking feature based on configuration settings
updated request URI checks from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter. java ` to ensure correct
don't re - add keyspaces when schema change. patch by jbellis
refactor WelcomeWindow to use cache images and improve image handling to enhance performance and maintainability by optimizing image rendering
updated Tuner configuration handling to include a running status check before adding new tuner configurations to improve tuner management by ensuring only active
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test for shbinary functionality to enable testing of the shbinary functionality in
added condition to include " db : hsqldb " in TestFilter. java to enable support for the HSQLDB database in the test
removed unnecessary whitespace in JavabinLoader. java to improve code readability and maintain consistency
trufflestacktrace : only materialize exception if there be no stack
refactor service loading and export functionality in GraalServices. java to improve service loading efficiency and ensure compatibility with Java 8 features
fixed unit test for duplicate command handler resolution.
[ flink - 20865 ] [ stream ] allow fine - grained resource management in batch mode.
[ 1.19. x ] fix fish not be place if they won't be place.
camel - 15836 - create an aws - ftp component base on user forum issue
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
added a ` compressPackageNames ` parameter to the ` GangliaReporter ` constructor and methods to enable compression of package names for improved metric
added a check for empty items in AppsContainerRecyclerView to prevent unnecessary processing when there are no items available
added a conditional bean annotation for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration to ensure that the bean is only created when
[ log4j2 - 1342 ] xmllayout do not escape character in tostring ( )
added a new parameter ` OMIT _ HEADER ` in ` CommonParams ` and implemented the ` remove ` method in ` NamedList `,
update property retrieval method in EscherProperty. java and add unit tests in TestEscherProperty. java to ensure correct property naming
refactor code to use the ` Description. getBuildRuleType ` method directly to improve code readability and maintainability
make sootclass. addhierarchy ( ) actually add the hierarchy to the current scene.
don't log error if dispute can not be null
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject `, modified ` retrieveColumns ( ) `
wallet : fix a bug where we incorrectly set the confidence type of a non - seeded block.
allow @ requestmapping annotation on @ body or @ header ( httpcode. coyote. httpurl )
don't load config file that start with _ or _
hbase - 25790 catch block in hregion. open ( ) and print warn if open fails
refactor null length checks to use local variables instead of local variables to improve code readability and maintainability
[ java ] don't check for image correlation id on a subscription that don't have a correlation id yet.
improve testjvmprocess. destroyforcibly to avoid reflection.
added Oracle database check to the conditional statement to ensure compatibility with Oracle database systems
camel - 4900 : do not attempt to connect to mailstore if not connect to store
added token handling in the parser to check for EOF type and document channel to ensure that there are no tokens left after the current stop, impro
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` g'' complete
[ hmm ] add voice data file support for f0 and f1 model
added email domain property and related getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition to allow users to set and retrieve the email
added new timeout constants and methods to retrieve request timeouts in Configuration. java to improve configurability and allow for configurable timeout values
api : fix problem when the concept link to save be empty, return null instead
added RedisCategory import and annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
updated test method to use parameterized tests and improved type pattern handling to enhance test reliability and ensure correct behavior when a type pattern is empty
updated paintComponent method call in OverlayPanel and WaterfallPanel classes to ensure proper rendering of the component in the UI
removed unused imports from multiple classes to improve code clarity and reduce dependencies
updated event signatures handling in ContractEventTriggerCapsule and LogEventWrapper classes to provide a full event signature for better traceability
updated filter condition from contains to endsWith in FileTestHelper. java to ensure correct matching of file names ending with " _ "
replace clearing of the rectangle with setting the color for the graphics context to ensure the correct background color is used for rendering purposes
jbrules - 2250 : fix compilation error when there be no descr lookup yet
refactor multiple Java classes to improve logging and formatting to enhance code readability and maintainability
added a conditional check to verify if the score is NaN before assertions to ensure that scoreDocs [ 0 ] and scoreDocs [ 1 ] are
[ fix ] use set. copyof ( ) to avoid concurrent modification error
added zero - time handling in ColumnSnapshotGenerator and created a test for date default values in MySQLIntegrationTest to ensure proper
rename to offererbtcpubkey and takermultiSigpubkey to offererbtcpubkey.
updated FunctionAllGroupHeadsCollector and FunctionAllGroupsCollector to use a wildcard Map <?,? > vsContext to enhance type safety
[ drools - 561 ] fix compilation error when edit a session in the kiecontainer
updated the instantiation of HiveMetaStoreClient to use'this. conf'to ensure proper context is used for the client initialization
added a conditional check to return early if modalness matches mModalness to improve performance by avoiding unnecessary processing
added a test for ` CodecCapabilities. createFromProfileLevel ` in ` ShadowMediaCodecListTest. java ` and implemented a native method in
fix # 5460 : lose focus on enter key
added validation for width and height, handled potential OutOfMemoryError, and ensured valid XRSurfaceData instances to improve robustness and prevent memory
updated the group ( thousands ) separator from ". " to " \ u00a0 " to ensure correct formatting for internationalization in
updated AsyncStressTest and StressTest to use AtomicInteger for thread safety to improve concurrency handling and enhance thread management
added beta flavour support and improved menu visibility logic in multiple fragments to enhance user experience by providing feedback when beta flavour is unavailable
updated the SearchMethodVisitor class to include access, name, and desc from the context to ensure accurate retrieval of access, name, and description
added multiple sleep calls in IoTDBInsertWithoutTimeIT. java and enhanced exception handling to improve test reliability and handle potential interru
corrected a typo in the variable name from " durSec " to " durSec. " to improve code readability and maintain consistency in naming conventions
remove require attribute from resequencer resequencer configuration xml element
fix ( core ) : fix error when re - opening of a table
replaced keyManagerType and trustManagerType with a new method getkeyManagerAlgorithm to improve code clarity and maintainability by centralizing key manager
refactor ` getSingleSourceApplicableTest ` method to return ` TreeVisitor <?,? > ` instead of ` JavaIsoVisitor ` to
exit ( ) and add tab key handling in Blockmania. java to improve user experience by preventing accidental tab interactions
change access specifier from PACKAGE _ PRIVATE to NONE across multiple files to ensure consistent access specifier behavior across the codebase
renamed the method ` unHandled ` to ` unhandled ` and introduced a new class ` T991561 ` to improve method naming clarity
updated the assignment of stripes and stripeStats in OrcInputFormat. java to improve clarity and maintainability of the code
added a null check for the exception before proceeding to prevent potential NullPointerExceptions during execution
use secure myhentaicomics. com for test
added argument checking and displaying current jar version in App. java to enhance jar versioning functionality for better user experience
replace split ( string, char ) with splittokens ( string, char )
updated rotation handling in ConsoleActivity. java and TerminalView. java to improve user experience by ensuring default rotation is applied when the keyboard is
updated the ` hq ` variable type to use a subclass of ` ScoreDoc ` and added a ` @ SuppressWarnings ` annotation to improve
added a null check for ownerConnectionAddress in ClientSmartListenerService. java to prevent potential null pointer exceptions when the ownerConnectionAddress is null
camel - 6510 : added support for the headersmapfactory attribute to the camel - core component.
corrected the closing brace syntax in JavaCompiler. java and Diagnostic. java to improve code readability and consistency
int - 1921 add namespace handler for'outbound - gateway ', add namespace handler for'outbound - gateway '
updated the index parameter from ` i + 1 ` to ` i2 ` in the ArrayFunctions class to correct the logic for the array replacement
updated class loader initialization and added error logging for script engine additions to improve error handling and maintainability of the script engine setup process
updated PooledConnectionImpl to use the correct class name for PreparedStatement and PreparedStatement to ensure proper handling of prepared statements in the connection pool
[ beam - 1347 ] fix memory leak in cassandraiotest
changed log level from error to warn in AtomicRemainder. java to better reflect the severity of the error message
fix ttl expiration when auto - compaction be enable
fixed - rblockingqueue. queue ( ) and rblockingdeque. queue ( ) and rblockingdeque. queue ( ) method
refactored printMap calls in JobInspectCommand. java for improved readability to enhance code clarity and maintainability
refactor Engine class to improve code readability to enhance maintainability and facilitate future development
replace Stream. of with an entrySet - based stream in ChildHolder. java to improve efficiency and readability when processing child entries
[ issue # 5898 ] fix aclclient to use accesskey and sessioncredentials ( # 5899 )
changed the condition from ` numIndexDims = 1 ` to ` numDataDims = 1 ` to correct the logic for handling data
[ zeppelin - 4970 ] fix npe in notebookserver # start ( )
replace funN with lt in ExpressionNodeEvaluator to correct the evaluation logic for the kernel
removed the ` public ` access modifier from the methods ` verifyIdsAreStable ` and ` getNodeId ` in ` NodeIdAccessor. java ` to
server : improve error message when the volume be not attach to a vm before create snapshot
changed method visibility from public to package - private in ItemWriter. java to allow access to these methods from other classes
updated the mock Thing instance from " AA : BB " to " test " to include a new test device identifier
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and created a corresponding test in ` ImageNameSubstitutorTest ` to improve
replaced FSDirectory with RAMDirectory in TestNorms. java to improve memory management for tests
added a static line height check before retrieving the line height in mDrawTextRectBuffer to ensure line height does not exceed the buffer's
updated WalletAppKit. java file to improve functionality and maintainability of the wallet application
[ oql ] remove need for oracle nashorn engine to get jsrashorn engine
fix leak jcheckboxmenuitem when we have open window and contact add or remove resource ( login / logout or our provider be reconnected ) .
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest `, ` Context `, and ` ContextImpl `
fix : avoid npe when set bsqblockchain explorer
added attributes map functionality to the StandardSession class to enable concurrent access to session attributes
added assertions to verify the name and value of the plain bean in TestDbJson _ List. java to ensure that the retrieved plain bean is
pdfbox - 4892 : fix typo, a suggest by valerybokov
refactor BatchCommandLineLauncher class to improve code readability to enhance maintainability and reduce complexity
add support for hsqldb as a datasource in batchmetricsapplication
change the class name of glowrootloghttpservice from unauthenticatedhttpservice to httpservice.
pdfbox - 4892 : fix regression in stroke rendering
removed synchronized keyword from the close method in DocumentsWriter and added synchronized block for refresh in DocumentsWriterPerThread to improve thread safety and ensure proper
added methods to retrieve and set multiple choice options and validation constraints in UiBinding. java to enhance UI component functionality for better property management
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for string representation to improve consistency and clarity in string representation
bugfix : only update the stored copy of subtrees for a full save.
dictionary. getcondition ( ) return a map < string, string > instead of a single string, to support multiple pattern per affix.
updated the instantiation of KrakenMakerFees and KrakenTakerFees lists in KrakenAdaptersTest. java
removed import of CharTermAttribute from DefaultIndexingChain. java to streamline code by eliminating unused attribute retrieval
refactor NBJavacTrees to improve code readability to enhance maintainability and clarity of the codebase
added a check for unsupported data encoding in VectorizedPrimitiveColumnReader. java to ensure that unsupported data encodings are handled appropriately
added an import for MarkerFactory and modified conditional logging logic in HttpSolrCall. java to enhance logging clarity and ensure consistent behavior with the latest
added a call to destroyMetadataServiceProxy to ensure proper resource management during service instance destruction
fix infinite recursion in defaultentityqueryrepository when the entity don't have a level
updated error message formatting in HubChangeExecListener. java to include a check for null changelog ID to ensure accurate error reporting when no change
add support for the'harder'hack in the barcode format verification to improve the accuracy of normal mode failure in the test
replaced ` int ` with ` ProcessExecutor. Result ` in ` CxxPreprocessAndCompileStep. java ` and added a new test case
updated the event limit handling logic in ObjectStore. java to ensure that the query does not exceed the maximum number of events
removed unused imports and simplified the return statement in ValidatedLocalValidatorFactoryBean. java to streamline the code for better readability and maintainability
clean up entity reference list before iterate over them
[ wasm ] remove redundant component type check in intrinsificationarraycopyphase.
make test more resilient to failure
replaced the ` WantedAnywhereAfterFollowingInteraction ` class with a new ` WantedAnywhereAfterFollowingInteraction ` message to
added null checks for ownerAddress and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that only valid accounts are
replaced the custom CommandComparator with a TreeMap to store sortedCommands to improve command order management and reduce duplicate command entries
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
replaced individual property assignments with setter methods in BaseSingleTreeBuilder. java to improve code readability and maintainability
updated the AsmLoader initialization to use the interface class loader to ensure proper class loading by specifying the parent class loader
pdfbox - 4892 : avoid npe in type1charstring when rrcurveto be miss initial moveTo
updated print statements in Java2TypeScriptTranslator to conditionally use " declare " or " export " based on whether the class is definitionScope
replaced the EmptyServerHandler with a AbstractHandler to manage server input streams to ensure proper handling of input streams in the HTTP client
replaced an array of action listeners with a single listener for " Pause ", " Left ", and " Right " to simplify listener management
fix npe in abstractsqmpath # getlhs ( ) ( # 2896 )
updated package declarations in multiple test files to improve organization and clarity of test code
[ java ] fix awtcanvas crash when try to create a bufferedimage
[ gr - 205362 ] ensure libgraal be start up before graal initialization.
remove dataflowportabilityapiunsupported. class usage for timer in pardotest
chore : update java microgenerator to 1.0. 2 add request initialization to sample code ( # 388 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet to ensure proper serialization compatibility for these enum classes
updated CallStack. java file to improve functionality and maintainability of the code
log warn if max - size per _ node config do not allow any data in map
updated return statements from " AST " to " LST " across multiple files to ensure consistency in terminology regarding LST elements
updated the calculation of scoreablesPerThread and modified the way nThreads is calculated and finished to improve accuracy of scoreable retrieval and ensure the
replace AssertionError with returning null in NetHooks. java to simplify error handling by returning a null value instead of throwing an AssertionError
updated method calls and assertions in ApplicationControllerFluentLeniumTest. java to improve clarity and consistency of test assertions
added default makeString methods for ParallelIterable, RichIterable, and AbstractSynchronizedRichIterable, and AbstractMultiReaderMutableCollection classes to
replaced the hardcoded value for ` HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` OidcServices
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated its validation logic to enhance weak association handling by allowing proposed weak
updated the Deflater class to improve compression algorithms to enhance performance and accuracy of compression efficiency
added error handling to throw IOException in Font. java to ensure proper resource management and prevent potential memory leaks
added a null and empty check for content in VersionTypeBinding. java to ensure a valid version is returned when content is empty
simplified the retrieval of the'places'list from the'loadAttractionsFromLocation'method to improve code readability and reduce redundancy in
convert content type to lowercase in MailConverters. java to ensure consistent handling of content type regardless of case
add support for ssh - rsa algorithm to openssh private key spec
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for better control of folder name updates
replaced specific Hibernate annotations with a wildcard import and added a method to find the Post class to streamline access control and streamline entity retrieval in
updated import statements in ConnectOAuth2RequestFactory. java and added getUserApprovalRequest method in TofuUserApprovalHandler. java to align
[ micrometer ] fix influx name convention ( # 645 )
don't use system. out. println when dump a double or a double
updated key from " Cookie " to " Cookie2 " in HttpURLConnection. java to correct the cookie validation logic
added a static method ` classMetadataUnsupported ` to the Platform class and updated references accordingly to improve code readability and maintainability by centralizing the
added functionality to display a clear all button based on user preferences to enhance user experience by allowing users to clear all tasks easily
updated the ` desiredRepoVersion ` variable to be final and adjusted timeout from 60 to 600 milliseconds to improve code clarity and ensure consistent timeout settings
remove memoryleaktest since it ben't use anymore
updated the return statement in ServletTester. java to include the local hostname if available to improve clarity of the generated URL by using the local hostname
added a configuration check for MvDWPlaceholderAPI in ServerListener. java and enabled BAN _ DELETER in Settings. java
fix partition assignment test by assert cluster size before start node
added SingletonHolder class and implemented the getInstance method for FFIProvider to enable dynamic instantiation of FFIProvider based on the Jna library used
tika - 3514 -- add test case for hierarchical file list.
added null checks and improved logic for saving MongoDB entities to enhance robustness and prevent potential NullPointerExceptions during saving operations
use NODE _ LIST instead of 0 for direct input / output count
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and its getter / setter methods to enable tracking and
updated log messages to use placeholder syntax for better readability to enhance logging clarity and maintainability
replaced hardcoded maximum parallel tasks with a static final constant MAX _ PARALLEL _ TASKS to improve maintainability and reduce the risk of
replace ArrayList with CopyOnWriteArrayList for header and data readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex to
update dictionary documentation to match current state.
added a null check for the destination buffer in FlipTransition. java to prevent potential NullPointerExceptions during execution
( chore ) camel - mksv : fix intermittent test failure
update condition from " beginCycle = = currentCycle " to " beginCycle > currentCycle " to ensure proper range checking for account capsule
increased the default value of ` RandomValueStringGenerator ` from 6 to 10 in ` JdbcExpiringCodeStore `, tests, and tests
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure the correct table matching logic for unique constraints
refactor description extraction and counting logic in MediaDetailFragment. java to improve efficiency and clarity of language code management
log recoverable exception if a classcastexception be encounter. patch by jbellis
listimagecmd : add reference filter to tag image
camel - 14284 : camel - jms should not use bridgeerrorhandler on the jms endpoint, since bridgeerrorhandler be not available in the
added conditional checks in OpExclusionUtils. java to set all ops to true if no ops are found to ensure proper handling of conditional compilation
added return statements to the DatabaseCommand class to ensure the method correctly indicates a failure condition
[ honestpolitician ] fix typo in ksession insert Politician instances
replace null check with stringutils. isNotBlank ( ) to improve code readability and avoid potential NullPointerException
fix restlet component to use the correct restlet port
removed unused block imports from SchematicFormat. java to streamline the code and improve maintainability
added a property to set a maximum query length in QTestUtil. java and removed an overridden configuration method in SessionState. java to optimize query
changed access modifier of userName, AMSecurityManager, and adjusted HttpConfiguration initialization in WebServer. java to enhance encapsulation and ensure proper handling of secure
updated key names from " writeHdfs " to " hdfsSink " and " kafkaSource " across multiple files to improve clarity and consistency in
updated logic to check if the name equals " spark. app. name " in HiveConf. java and modified SparkClientFactory. java to use
change variable name from whiteName to includedName in ManagedClassFactory. java to improve clarity and consistency in variable naming
simonstewart : make remotewindow. maximisewindow return a successful result
refactor ` getEmbeddedCellsBuckOutBaseDir ` to ` getMainCellRoot ` and introduce ` getCellBuckOut ( ) ` method to improve
added assertion to check for specific error messages in TestXMLEntityExpansion. java to ensure that the exception message contains the specific " entity exp
update table offset and length calculations to mask out non - positive integers to ensure proper handling of integer values that are non - positive
added an assertion to verify that the customized form is not null to ensure that the customized form is not null before proceeding
updated LineChartRenderer to use a variable for number of coordinates to improve code readability and maintainability by reducing redundancy
refactor flavor validation logic to accommodate multiple flavors in AndroidBinaryDescription. java to improve flexibility and error handling for target flavors
changed buffer assignment from ` offset ` to ` i ` to correct the buffer assignment logic
added three new classes, PropertySuper, and TestClassResolutionFail, along with a test method to demonstrate the functionality and error handling of property initialization
terminate the lifecycle service only if the shutdown hook is enabled to ensure graceful termination of the lifecycle service when shutdown feature is enabled
updated class name from FilterChainProxy to FilterChjainProxy and refactored variable declarations for clarity to improve code readability and maintainability
replaced ` Collections. sort ` with ` Arrays. sort ` and simplified the return statement in ` PercentileAggregationFunction. java ` to improve
added schema loading logic in MetaDataBasedSQLCompletionProvider and modified MDTable assignment in QueryTypeAnalyser to ensure correct behavior when the schema is
initialized ` baseType ` to ` null ` in ` DatabaseInfoRetriever. java ` and initialized ` literalPrefix `, ` literalSuffix `
fix link to link in javadoc
replaced multiple instances of ` ObjectEqualEvaluator ` and ` ObjectNotEqualEvaluator ` with a single instance of ` BooleanEqualEvaluator ` to improve
updated configurations for the osx _ x86 - 64 architecture in multiple test files to ensure compatibility with the new architecture specifications
added sound effect handling in AllAppsView. java to improve user experience by enabling sound feedback
changed the method signature of ` main ` from ` Exception ` to ` IOException ` to specify that the method may throw an ` IOException `
enable granularity for left axis in BarChartActivitySinus to improve data visualization by allowing for granularity in charts
refactor version comparison logic in GdxSetup. java to improve code readability and maintainability
updated directory path handling and added OS ALIAS _ SUPPORTED assumption in ContextHandlerGetResourceTest. java to improve test reliability by ensuring
added close ( ) method to Connection and JsonAsyncHttpPinotClientTransport classes, and implemented close ( ) method in JsonAsyncHttpPin
mockappender now use a linkedblockingqueue to improve responsiveness of the socket - related test
[ beam - 4142 ] add precondition check for non - directory resource
removed unused imports and streamlined sprite batch imports in IsometricStaggeredTiledMapRenderer. java to improve code clarity and reduce
removed redundant call to unbindHandle in ItemServiceImpl. java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code readability and maintainability
simplified condition checks for touch tracking in OtherActivityTouchConsumer. java to improve code readability and maintainability
updated navigation button handling to use dark mode configuration to improve user interface consistency based on the current device's dark mode
fix : don't throw abort when language can not be determine
replaced references to ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` with ` refKind ` and ` memberIndex ` to ensure correct data
modified the ` findBox ` and ` findElementBox ` methods to include a ` BlockFormattingContext ` parameter to enhance flexibility in managing block formatting
added a method to retrieve the standard error output from the launched process and wrapped process launch in a try - catch block to improve error handling and
added null checks for the operator in collections and enhanced error handling in CheckedListReplaceAll to ensure proper handling of null values and improve robustness
added a ` _ testFill ` variable and a ` FutureCallback < Void > ` in ` SslConnectionTest. java ` to implement a
added listener registration and retrieval in DeviceFlag and FeatureFlags classes to improve responsiveness to device configuration changes
added JUnit Ignore annotation to GatewayRSocketIntegrationTests. java to temporarily disable tests pending review
removed import of MalformedURIException in StandardRequestHandler. java to streamline code by eliminating unused imports
[ 1, 1 ] instructorfeedbackeditpage : execute script after set a new date range
reordered the synchronized block to improve readability to enhance code clarity and maintainability
replace System. err. println with System. out. println in ChangeableUrls. java to standardize logging behavior for ignored class - path
added a ` randomAccessRows ` parameter to the ` SparseRowMatrix ` constructor and modified the constructor to accept a boolean parameter to enhance flexibility
bug fix : add volume poolid to usage event when delete volume
refactor file handling in Utilities. java to support local job configuration to improve flexibility and maintainability of the code
[ beam - 8470 ] use org. apache. beam. vendor. guava. v26 _ 0 _ jre. com. google
bugfix : memorycallgraphbuilder must reset internal state before register it in the profilerclient
fix a nullpointerexception in conferencechatmanager. getchatroomlist ( protocolprovider )
added check to prevent write to a file that can not be read
added FolderSyncActivity to handle folder synchronization functionality to enhance user experience by providing a dedicated folder sync feature
[ hotfix ] [ test ] use closer for test in sequentialchannelstatereaderimpltest
update spanish tree normalizer to handle space after comma
replaced the use of ` reader. next ( ) ` with ` heapPointWriter. getPackedValueSlice ( i ) ` in ` SimpleText
added a new ` LocaleRandomizer ` class and its corresponding test to facilitate random locale generation in the application
tika - 2906 -- add detection for application / x - font - printer - metric and application / x - font - type1
installers and autupgraders should use version 9.2 instead of 8.2
updated access control for the ` run0 ( ) ` method in ` TCPTransport. java ` to ensure proper privilege handling during RMI connection
updated the read method in Http2AsyncParser to include a default timeout value to provide a default timeout when the block flag is not set
updated the initial delay from 120 to 600 milliseconds in TimelineMetricConfiguration. java to improve the initial delay for monitoring metrics
updated error message formatting in SelectStatement. java to enhance clarity and consistency in error reporting
added support for custom date formatting in ThirdEyeJiraClient to enhance date handling capabilities in the application
replaced parent stream ID validation with a priority generator in HeadersGenerator and PriorityGenerator classes to simplify priority generation logic and improve code clarity
added a maximum replacement code size constant and updated the condition for scalar replacement to ensure that the replacement option is only enabled when the maximum replacement code
added DATE _ TAKEN to the projection and sorting order strings in MediaProvider. java to ensure accurate sorting order for media data
updated drawing parameters in TexturePacker2. java to correct positioning of images to ensure proper rendering of images with correct dimensions
added WebSocketUpgradeFilter to JettyWebSocketServerContainer and removed FilterHolder from JettyWebSocketServletContainerInitializer to streamline WebSocket upgrade handling and improve code clarity
added shutdown calls for validateSignService and trxHandlePool in multiple classes to ensure proper resource management and prevent memory leaks
added RawJsonRequestBody annotation processing in JaxrsSwaggerGeneratorContext and created RawJsonRequestBodyAnnotationProcessor class to enable raw JSON data processing
added a new method ` newTarget ` to the ` LoggerUtils ` class to facilitate the creation of a custom ` Target ` with
updated the return statement in BeanContainer and added a new test class BeanContainerTests to enhance functionality and ensure proper functionality of the BeanContainer class
hbase - 15875 fix typo in testmetricsregionserver ( # 2892 )
camel - 6719 : fixed potential memory leak in cachedoutputstream when exchange do not complete.
add deviceid to position in teltonika ( fix # 468 )
changed the method for reading the first line from ` readFirstLine ` to ` Files. asCharSource ` to improve compatibility with character source
added null handling for assignment operators in ` Attr. java ` and created a new test class ` Test. java ` to ensure proper assignment handling
added a flag to enable account handling in FirstRunActivity and BaseActivity to control account management during the activity lifecycle
fix isochroneresource. heuristicallyfindconnectedcomponent don't return any polygon
modified DrillViewTable constructor to accept a list of paths to enhance flexibility in view handling within the Drill framework
added configuration parameters to PooledByteBufAllocatorL constructor to allow customization of allocator parameters for better memory management
changed the type of array types from double [ ] to short [ ] in ObjectInputStream. java and added a new CloneArray class with serialization
added a configuration option for LLAP _ IO _ THREADPOOL _ SIZE in HiveConf. java and modified thread pool initialization in LlapIo
re - initialization of class with sun. security. ssl. debug and sun. security. ssllogger in java 11
added validation for latitude and longitude ranges in LatLonGrid. java and introduced a new test for polygon growth in TestLatLonGrid.
simonstewart : implement expectedconditions. invisibilityofelementwithtext ( ) to ensure no element be visible
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and updated its logic accordingly to enhance functionality by allowing insert overwrite
added a test for ` SomeInnerClassReflector ` in the ` ReflectorTest ` class to ensure correct retrieval of the enclosing object
updated configuration key from " auto _ generate _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources
updated log messages to include author information in HubChangeExecListener. java to enhance clarity of logged messages for better debugging
added properties property handling to Link class and corresponding test cases to enable dynamic configuration of link properties for improved functionality
removed unnecessary @ EqualsAndHashCode annotations from InitialConfig and added a toString method in YamlConfigFileDTO to streamline the code and enhance readability by
added generic type ` ReqT ` to ` SimpleForwardingServerClientCall ` and ` SimpleForwardingClientCallListener ` to enhance type safety
updated ` forName ` methods in ` mmm Class. java ` and ` ppp Class. java ` to support caller - sensitive functionality to
updated assertions from ` not ( isEmptyOrNullString ( ) ) ` to ` is ( emptyOrNullString ( ) ) ` in ` RequestItem
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor ` to improve code clarity by using a more specific class name
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
updated import statements and refactored XML parsing logic in TimeStepdefs. java to enhance flexibility and maintainability of the code
fix ` ` spark _ isolated'' and ` ` spark _ recessive'' recipe not be add.
updated the ` createProxy ` method calls to use ` getUri ( ) ` instead of ` ExchangeSpecification ` to ensure that the correct URI is
[ hotfix ] remove unused code in recordgenerator. java
camel - 17441 : camel - kafka - enable auto commit by default with kafka consumer
removed lock release and added output statement calls in LoggingExecutor and added database change log table flag in StandardLockService to improve resource management and ensure
added @ SuppressWarnings ( { " unchecked ", " rawtypes " } ) annotations in AbstractAuthorizeTag and AuthorizeTagCustomGranted
remove synchronized block around flush, close, preparecommit, and synchronize on the pageStore object to improve performance by reducing synchronization overhead
camel - spring - boot - maven - plugin : fix property resolution for nested property
updated the method call from ` getVirtExTicker ` to ` getVirtExTicker ` with the correct symbol from ` counterSymbol ` to
( chore ) camel - message - dump : fix compile error
replaced UUID generation with system property retrieval for the testId field to improve flexibility and maintainability of the test configuration
added synchronization to date parsing and number formatting in DefaultJobParametersConverter. java to ensure thread safety during date parsing operations
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
fix a typo in heightmap. setheightscale ( )
updated equality check in SecurityConfig to use assertNotSame instead of assertEquals to ensure correct behavior of string comparisons in tests
updated the default value of ` dumpPartitionId ` from ` getBoolean ( " dump - partition - id " ) ` to ` false ` to
added TronTXOutput and TXOutput classes to UTXOSetTest to enhance testing capabilities for transaction management
[ java ] fix false positive for unused var name
pdfbox - 4892 : avoid npe, a suggest by valerybokov
added a test to verify the overriding of previous restart parameters in JsrJobOperator to ensure correct behavior of job restart properties in the Jsr
added a new field ` disallowBatchOnCascade ` and a method ` isDisallowBatchOnCascade ( ) ` to the `
refactor principal assignment logic in JaasAuthenticationHandler. java to improve clarity and correctness of principal creation process
replaced MDCLoggingContext clearming with a custom MDCAwareFixedThreadPool for core closing to improve thread management and ensure MDC is closed properly
added a null check and visibility setting for mActionsView in RecentsView. java to ensure mActionsView is visible when fullscreenProgress is
refactor code to use a conditional operator for initializing JobParameters to improve code readability and reduce redundancy
updated BasicEntity and TestUtil classes to improve code clarity and maintainability
added multiple assertions to verify the expected number of matched devices in SchemaRegionBasicTest. java to ensure that the correct number of devices matches the
[ 3.0 ] fix dubbo - common metric collection exception ( # 9685 )
added a new EigenvectorCentralityBuilder class and modified calculations in EigenvectorCentrality. java to implement statistics
updated registry port handling and string formatting in multiple Java files to improve port management and enhance code readability
fix geometrygenerator to use correct type for ifc product oid
fix beacon not beacons not be able to beacon
pdfbox - 4892 : fix typo, a suggest by valerybokov
change health - check - interval default to 30 second ( # 3669 )
change validation group to be a list of type <? > instead of an array
added a new timeout property and modified the @ run method to handle a specific bug to improve user experience by providing a delay for future action
fix # 322 : make the threads daemon to allow speedment application to exit via main method completion
fix the lexicon version number format
added a reflection access check in JavaAdapterFactory. java to enhance security by verifying access permissions for reflection types
use lazysessioncreation = true for unit test that fail in ci
updated the initialization of the I / O context in CombineHiveRecordReader and HiveContextAwareRecordReader classes to include the record reader as a parameter to
removed ClassLoaderHolder and LoaderManager classes, and simplified loader retrieval logic in VerticleManager to streamline codebase by removing unused classes and improving
added a static method ` configurationChanged ` to ` FileStore ` and updated conditions in ` FileStore `, modified ` ScanClassPath ` to
added try - catch block around registerSessionCallback and unregisterSessionCallback methods to handle potential exceptions during callback registration and unregistration
removed " src / test / org / apache / lucene / index / index / index. nocfs " and added " index. cfs "
[ hotfix ] [ test ] add akkarpcservicecontextutils # createAndstart to facilitate the creation of ak
hbase - 15415 testexportsnapshot should retry on failure to avoid transient failure
pdfbox - 4892 : don't set non - symbolic fd if afmstandard14 be use
added a new test class SslConnectionTest for SSL connection management to ensure proper handling and closure of SSL connections
added validation for IPv4 and IPv6 address types in InetAddress. java and NetworkInterface. java to improve error handling and ensure proper address type
added a test for date serialization in the DefaultTypeAdaptersTest class to ensure proper handling of date values in collections
refactor Message class to improve code structure to enhance maintainability and readability of the code
PutDatabaseRecord. java to modify conditional logic for determining the first update key to improve logic clarity and ensure correct handling of SQL generation
adjusted the loop condition in TableOutput. java to correctly calculate the maximum width based on the running width
pdfbox - 4892 : avoid npe, a suggest by valerybokov
priority for format strings in FormatStringChecker. java to improve handling of format strings by priorizing priority
LocalVariableCouldBeFinalRule : add property to ignore non - final loop variable declaration
added PDF versioning and full compression settings to PDFExporter to ensure compatibility with the latest PDF format and improve rendering quality
added unit tests for LdapUserDetailsMapper to ensure proper functionality of role attribute mapping
( scott phillips ) add the ability to configure the read timeout for ldap connection
updated multiple test cases in TestDescription. java to improve test coverage and ensure consistency across test cases
rename Pixmap, ManifoldPoint, and TextureRegion classes to improve clarity and consistency in naming conventions
rename ` shouldCacheIterator ` and ` shouldAvoidAllocation ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and prevent
added a condition to check if the state handler is invalidated along with the existing gesture state check to ensure that gesture handling does not proceed when
changed the default value of WORKSPACE _ ROTATION and mOverScrollPageIndex while updating the value of mOldRotationYs to
use configproviderresolver instead of configprovider to resolve oci. config. path property
updated test cases in Testjsig. java to improve test coverage and ensure functionality works as intended
multiply the count of mana, not the count of the mana, to ensure proper handling of mana data in the game
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator. java to suppress serialization warnings for the serialVersionUID
updated validation logic to differentiate between empty and non - empty file scenarios to improve error handling and ensure proper cleanup of file resources
added Switch21 and Switch19 classes with specific pattern matching methods to enhance pattern matching capabilities for switch types in the application
updated error messages in ComparableSubjectTest. java to refer to MyTest. ComparableType instead of MyTest. ComparableType to improve clarity and
ooxml : fix npe when standalone mode be enable
update size comparison logic and improve error message formatting in Int2ObjectCache. java to ensure accurate validation of array size and enhance error reporting for
updated sorting logic for security filter chains in WebSecurityConfiguration and WebSecurityConfigurationTests to ensure proper ordering of security filter chains based on bean definitions
removed TimeInForce. GTC from the order type in BinanceTradeService. java to streamline order processing by eliminating unnecessary time
refactored FloatRangeRandomizer to extend AbstractRangeRandomizer and added value validation to improve randomness and ensure min and max values are
change KEY _ SEP from'\ 0'to'\ t'in RocksDBBuildInfoStore. java to ensure correct newline
http : / / issues. apache. org / jira / browse / amq - 4798 - fix for camel - jms
add error handling in SourceUtils's getBound method and create a new test class for it to improve robustness of the code and ensure correct
refactor LeafFilterFactory to use a method for retrieving filter predicates based on Parquet types to improve code readability and maintainability by encapsulating logic in
modified the handling of artifact names by adding a check for the SCOPED _ TARGET _ BEAN _ PREFIX to enhance clarity and correctness in processing artifact names
added a loop to read the certificate serial number from the input stream to improve reliability of certificate processing by ensuring all certificates are processed
modified the default boolean retrieval logic in ` mmm Config. java ` and added a new class ` DnsFallback. java ` to improve handling
ww - 3833 add stack trace to the exception message when write a tag fails
changed the type of the ` success ` field from ` boolean ` to ` String ` in the ` DepositAddress ` class to allow for
replaced the implementation of the ` drop ` method with a lambda expression and added a try - finally block to improve code readability and ensure proper resource
removed " address " from scope definitions in CommonOAuth2Provider and its tests to simplify scope definitions and improve clarity in test cases
added a new ` Start ` class and modified the ` submit ` method in ` ManagedSelector ` to implement the ` SelectorUpdate ` interface to
added constants for hue 65535 and saturation 255 in WLedBindingConstants. java and updated request handling in WLedHandler
replaced the ` isValidCaller ` method implementation with a ` Set < String > VALID _ CALLERS ` to improve code efficiency and maintainability by
added caseJSRInst method to InstSwitch. java to handle JSRInst case sensitivity
added transaction manager to subscription activatingsubscriber to allow transaction management
updated SQL statement preparation and execution logic in DBMSProcessor. java to ensure proper resource management and prevent potential memory leaks
added elevation handling to ContactItemInflater to ensure elevation is set correctly for devices running Lollipop or higher
rename typeInformation to identifier for clarity to improve code readability and maintainability by using a more descriptive identifier identifier
refactor file reading and writing to use AccessController for privileged actions to enhance security by ensuring privileged actions are executed
groovyparser and parser should include ` ` ['' in the binary name
updated warning log message format to include the exception class name to improve logging clarity for debugging invalidation errors
updated byte handling and boolean flags in RecordInputStream and UnicodeString classes, and added a test method in TestUnicodeWorkbook to improve data type handling
add test for norway character in name file download
replaced RuntimeException with CancellationException and added isCancelled methods to handle cancellation scenarios in AsyncResource and FingerprintScannerSample to improve error handling
fix npe in timedmemberstatefactory when there be no statistic
added a test for removing objects from an explicit collection in MongoTemplateTests. java to improve test coverage and ensure correct behavior of the remove method
update copyright header for newly add file
[ hotfix ] fix format string for non - deterministic output
added methods to manage the state of ` mIsClearAllButtonFullyRevealed ` and refactored scroll handling logic to improve user experience
added a COMMON _ HMS _ PROPERTIES map and refactored parameters handling in HiveIcebergMetaHook to improve property management
added a method to check if the address is in use to improve error handling by identifying if the address is already in use
added a JVM argument to the argument list in TestNestmateAttr. java to ensure the test class is loaded from the specified system
updated the SchemaTextDetailType from VERBOSE to verbose _ schema to provide more descriptive output for schema details
to the system by default
fix regression cause by nested transaction isolation level
replace a fixed fetchSize with a ThreadLocal < Integer > fetchSize to improve thread safety and ensure consistent resource management
[ java ] : remove sharednetworkidlestrategy from embeddedpingpong.
allow null return value to be unwrap from supplier < httpstatus >
added HDP _ VERSION property configuration to SliderAppsViewControllerImpl. java to ensure HDP _ VERSION is dynamically set based on configuration
added methods to manage loader and close streams in JavacProcessingEnvironment. java to improve resource management and ensure proper closure of service iterators
added DeepCloner to ParameterizedRobolectricTestRunner and RobolectricTestRunner classes to enable deep cloning of parameters during testing
added binding for Boolean annotated with JETTY _ SHOW _ STACKTRACE in ResourceBase. java to ensure JETTY _ SHOW
added a type check to return null if the object is an instance of JSType. OBJECT to improve robustness by handling cases where type is not
replaced ` sun. jvm. hotspot. types. OopField ` with ` OopField ` in ` SystemDictionary. java `
updated JwkKeyListView to use type hierarchy for RSAPublicKey, DSAPublicKey, ECPublicKey, and ECPublicKey to enhance
use - only - writable boot image heap for native - boot.
updated MBeanServerMXBeanUnsupportedTest. java to improve test coverage for MBeanServerMXBean functionality
removed import of OrderClassLoaders from MavenPluginCollector. java to streamline dependencies by eliminating unused imports
replaced the ` Validator ( ) ` method with ` validator ( ) ` and added ` ByteString getOwnerAddress ( ) ` implementation in multiple actuator
http : / / issues. apache. org / jira / browse / amq - 4613 - add a simple main ( ) that can
update sendCommand to include byteArrayMin and byteArrayMax values for min and max values to ensure correct representation of minimum and maximum values in the command
protobuf serialization : add empty index to the dependency graph
[ java ] remove unnecessary call to contains for asynccommandidset. contains ( id ).
added saveConflict calls to FileDataStorageManager, FileDownloader, and FileUploader classes to handle file conflicts appropriately during data storage operations
http : / / code. google. com / p / mybatis / issues / detail? id = 567 : use parameterized type
removed the usage of StrUtils. splitFileNames in multiple filter factory classes to streamline code by eliminating unnecessary dependencies
added support for Oracle and MySQL databases in DatabaseFactory to ensure proper handling of remarks reporting and information schema usage
added a serialVersionUID to mockedMethods in SignedSupportingClassProxyFactory and updated the ignore annotation in PartialMockingWithConstructorUsingE
( chore ) camel - core - files : use current time instead of new old timestamp
refactor ExecutionContext usage to use a lambda expression for better type safety to improve code readability and maintainability by using a wrapped class loader
added runOnUiThread call to update buffer height in TerminalView and modified buffer height handling in TerminalTextViewOverlay to ensure UI updates occur on the UI thread
added a check for the service pid namespace in the processConfigFile method and adjusted the filenameWithoutExt assignment logic to improve handling of service pid namespaces
refactor freeze logic based on VMConfig's allowTvmFreezeV2 flag to ensure proper handling of frozen balances based on VM
added ` _ insecure ` property and its getter / setter in ` TlsConfig `, and updated the tlsUtils to use this property to
refactor path retrieval logic in JavadocTool. java and add a new class T7091528. java to improve code readability and facilitate
rename nodeColumns to edgeColumns and update conditional checks to be case - insensitive to improve code readability and ensure consistent naming conventions
added cascade option to the OneToOne relationship in DefaultUserInfo. java to ensure associations are cascenced when saving users
make message. equals ( ) and message. hashcode ( ) consistent with message. data.
updated ISO 8859 - 1 encoding from "??? " to " \ u017D " in AsyncProvidersBasicTest. java to ensure
[ hotfix ] [ test ] remove unused method in rocksdbSerializedCompositeKeyBuilder
added static permission retrieval in ProtectionDomain classes to enable dynamic access to ProtectionDomain objects based on their static permissions
fix brewery / elven trade recipe crash
refactor parsing logic in Parser. java to improve clarity and maintainability to enhance code readability and ensure correct parsing behavior
added a method to show a connection error dialog in UploadMediaDetailFragment and updated error handling in UploadMediaPresenter to improve user experience by providing
added a new file ` Issue596. java ` to implement a test for handling 404s on unhandled requests to ensure that 404s
change from bitwise shift to bitwise shift to ensure correct data manipulation by using long literals
refactor ImportLayoutStyle class to improve code readability and maintainability
updated ConsoleUIService to use configurable TERM _ PROGRAM and MINTTY variables instead of hardcoding values to enhance flexibility in input handling
replaced the mock implementation of ` AccountManagerCallback ` with a direct instantiation of ` TestAccountManagerCallback ` to simplify test code and improve readability
replace this. enclosingType with wrapped. getEnclosingType ( ) in AnalysisType. java to ensure correct retrieval of the enclosing type from the
fix typo in ` pair ` and ` inpairsexpression `
nifi - 3957 removed timeout from putallcallable. call ( )
[ issue # 5898 ] fix npe in mqclientinstance # consumerrunninginfo ( # 5899 )
[ java ] add source identity generation to the driver conductor.
added a new file ` TopTabAction. java ` to implement the ` Presenter. Toolbar ` interface to enhance the user interface by providing
dynamicrouter component will now start in a serviceloader if dynamicrouter MODE _ ALL _ MATCH be active
replaced TestCase inheritance with static imports in AggregateItemReaderTests. java to improve test readability and maintainability by using JUnit annotations
updated the instantiation of Procedure in AbstractObjectValueTypeMap to use generics to improve type safety and reduce boilerplate code
updated import statements and refactored wikidata edits handling in multiple Java files to improve user experience by displaying user - specific edits for
add a sanity check for the length parameter in OfflineSorter. java to ensure that the length does not exceed short. max _ value to prevent
don't clear and report absolute bug when sawloadofminvalue be false
renamed multiple dataset classes for consistency to improve code clarity and maintainability
updated the exception message format for invalid credential types in ` ProvisionClusterRequest. java ` and added a corresponding test in ` ProvisionClusterRequestTest
updated random value generation logic in TestVectorUtil. java to ensure correct value generation for variability
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified time comparison logic to improve performance and
fix : add ssl system property to system. getproperty ('ssl')
danielwagnerhall : enable safebrowsing by default and add test
added null check before cloning the oldConfig in BaseMotorMount. java and RecoveryDevice. java to prevent potential NullPointerException during configuration updates
added a condition to exclude non - forced transcoding when transcoding is disabled to ensure that transcoding is not enabled when transcoding is disabled
update logic to handle empty lists in DataTable and TableDiffer classes to improve error handling for empty lists during table diffing
added a constant ` CustomIgnoreTag ` and implemented logic to remove it if it is not empty to ensure proper handling of custom ignore tags in
camel - 18131 : optimisticlockingaggregationrepository should return optimisticlockingexception when update record
fix : do not require reflection when a private bean method be annotated with @ configurationproperties
updated PreferencesActivity to extend LimitlessIDEActivity and modified layout adjustments to improve UI responsiveness and ensure proper layout adjustments
deleted the ClusterNodeInfo. java file to the class is no longer needed in the event bus implementation
corrected return value in ShieldedTransferActuator. java to ensure proper functionality of the method
added debug output for Standard and Legacy ciphersuite in ServerHandshaker. java to enhance visibility into ciphersuite selection during the handshake process
hide list and helper text when template be already in the list
added functionality to handle duplicate node existence and labeling in the ImportContainerImpl class to improve error handling when a duplicate node is encountered
added a new file R2303044ListSelection. java to implement a list selection test to ensure that the list items are properly selected
[ java ] : check for registration. checkkeepalivetimeout ( ) can throw an exception if the registration be already in use.
added a null check for mWorkspace to prevent potential NullPointerExceptions during execution
added a test method ` testCompoundPropertyTwice ` in ` StepScopePlaceholderIntegrationTests ` to verify the correct name of a compound property
hive - 17515 : fix the bug in statsrulesprocfactory ( jesus camacho rodriguez, review
added path parameter handling and updated query parameters in SpringBootDocBuildTemplate. java to enhance parameter processing and improve API endpoint configuration
changed logger to static final in GuiActivator, modified notification handling logic, and simplified action retrieval in NotificationManager, and SystrayActivator to
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and added a conditional check for materializeSourceFilesOnDemand to
improve error message when unable to parse json
added a conditional check for DEBUG before logging the log message in WidgetsModel. java to ensure logging only occurs when DEBUG is enabled
updated Console and Scanner classes to improve code clarity and maintainability
simplified the calculation of numTerms in SimilarityBase. java and added a test for discount overlaps in TestSimilarityBase. java to improve
int - 190 add verification to the email sending test to ensure the test only pass when the mail sending method exists
added new exit and quit methods with corresponding properties to Global. java and removed the old quit method from ScriptingFunctions. java to streamline
[ loan ] fix compile error in loan broker demo
rename methods and variables from " getFirstUnverified " to " findFirstUnverified " across multiple files to improve clarity and consistency in method naming
vmware vnc : make sure the vwware web service request context can't find a cookie
updated authority retrieval order in ResinAcegiAuthenticatorTests. java to ensure consistency in authority retrieval
add 32 bit to the number of bit in eckey. bigintegertobytes ( )
use system property ` ` fml. modstates'' instead of ` ` fml. disabledmods'' to make mod state
refactor account selection handling by extracting logic into a separate method to improve code readability and maintainability
improve error message when client can not connect to the client
return empty result from validator smart contract call instead of return empty result
updated JSON parsing logic in TexturePackerFileProcessor. java to handle a null root JSON value to improve robustness by avoiding potential NullPointerException
added a null check for the datasource JNDI in the PooledConnection class to ensure proper handling of datasource configurations
increase target memory allocation and variable count from 32 MB to 1 MB to optimize memory usage and improve performance
added null checks for currentConsole and systemOut when writing commands to enhance robustness by handling potential null pointer exceptions
set the credentials refresh delay to 100 milliseconds in KinesisConfigUtil. java to improve the responsiveness of the Kinesis connection settings
replaced AlertDialog. Builder with a new method showInfoAlert in SingleUploadFragment. java to improve code readability and maintainability by centralizing info
changed parameter name from'test'to'pack'in the test method to improve clarity and consistency in parameter naming
updated Jetty version from 1.7. 0 _ 60 to 1.7. 0 _ 31 in two test files to ensure compatibility with the latest Jetty features and
added a check for dependency presence before adding it to the dependency resolution list to ensure that only provided dependencies are included in the dependency resolution
added a caching mechanism for ZipFileInputStream instances to improve efficiency by reusing existing ZipFileInputStreams
rename datamatava data matrix format to data _ matrix.
added methods to run active and idle state in SequenceGeneratorSource to ensure thread - safe execution when no key ranges are available
changed method names from " getCurrentyActiveConnections " to " getCurrentActiveConnections " to improve code consistency and clarity
replaced ` findAny ( ) ` with ` findFirst ( ) ` and ` getAnnotations ( Class < T > type ) ` in ` Annotated
added support for " ppc64 " and " ppc64le " architecture checks in Bits. java and ByteArrayAccess. java to enhance
updated the exception message format in RoboMonitoringInstrumentation. java to provide clearer context for the failure to resolve activity
change waitWithDeadline calls from minutes to Long. MAX _ VALUE in TransactionImpl. java to ensure maximum timeout values are utilized for
[ DST ] fix dateutiltest for instant instance
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future development
added a Toast message to indicate when YouTube Player doesn't work on Lollipop yet to improve user feedback by waiting on an update
added validation for unterminated dollar and block quotes in SQL parsing to ensure proper parsing and error handling for SQL syntax errors
added a null check for mVibrator in the mVibrationDuration condition to ensure proper vibration handling when the vibrator is
updated table border and background color settings in DotRenderer. java to improve color rendering and align with foreign key standards
added a method to check if encoded Par configuration is present in HiveConf. java and updated output handling in SetProcessor. java to improve configuration
pdfbox - 4892 : avoid stringindexoutofboundsexception, a suggest by valerybokov
pdfbox - 4071 : fix typo find by codespell on fossies. org
fix wavefront uri validation ( fixes # 3903 )
added new constants and methods for loading images in NetworkedCacheableImageView and MainActivity to enhance image loading capabilities and improve code maintainability
replaced ` view ` with ` value ` in ` LauncherAnimUtils. ofFloat ` across multiple files to simplify the code by removing unnecessary parameters
added a new constant for the version of gdxControllersVersion and updated related references to ensure compatibility with the latest version of the gdxControllers
updated import statements in LaunchedURLClassLoader. java to improve code clarity and maintainability
replaced JdbcUtils with DataAccessUtils for querying a result to improve database query reliability and error handling
add cache - control header ( no cache ) to the response
updated warning message formatting to use Locale. ENGLISH to ensure consistent locale handling for warning messages
updated the SolrQueryParser constructor to include an Analyzer parameter to enhance query processing by allowing custom analyzer behavior
updated copyright year from Copywrite 2014 to 2017 in multiple Java files to ensure compliance with licensing requirements and licensing requirements
removed unused imports from MainTest. java to improve code clarity and maintainability
refactor TypeContributions class to improve code structure to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil. java to ensure proper creation of VoidColumnVector instances
updated method call to use request. getName ( ) instead of templateName to ensure correct request name is used for processing
removed redundant type matching logic from the ` isTypeMatch ` method in ` AbstractConfig. java ` to simplify the code and improve readability
[ java ] : add offer method with correlationid and timestamp to sessiondecorator.
corrected the spelling of the method name from " trustAllXForwardedRemoteAddressResolver " to " trustAll " to improve code readability and
add a new interface ` NoBootstrap ` and modify ` BootstrapInserter ` to include it to conditionally include bootstrapping statements based on annotations
refactor file size retrieval logic to use ` TableDescriptorBuilder ` for better null safety to improve code robustness by avoiding potential NullPointerExceptions
updated the calculation of ` numCommits ` to use ` Math. max ( requestedCommits, maxCommits ) ` instead of `
added InvocationTargetException to main method signatures and replaced invokeLater with invokeAndWait to improve error handling and ensure proper method invocation
added a static final BUILD _ ID constant and refactored method calls in CachingBuildEngine and CachingBuildEngineTest to improve code clarity and
removed unused imports from TransactionCapsule. java to improve code clarity and reduce dependencies
removed the duplicate ` markAsDone ` method call to streamline the code by eliminating redundancy
added import for TezConfiguration and used it in TezConfigurationFactory to enhance configuration handling for Tez processing
added null check for keyPurposes in TimestampedSigner. java to prevent potential NullPointerException when keyPurposes is null
removed the visibility check from the conditional statement to simplify the logic for better readability
added a forget method to OpenALSound for managing recent sounds to ensure null safety and prevent potential NullPointerExceptions when stopping or stopping recent sounds
fix ` simplebaseplayer ` reportdiscontinuityonlyonce ( )
added DecimalFormat instances for various numeric tick units in NumberAxis. java to enhance the visual precision of number formatting in the application
refactor TargetGraphAndBuildTargets construction in multiple classes to improve code readability and maintainability
removed the IndexFileNameFilter class and simplified file name filtering logic to improve code clarity and maintainability by reducing complexity
add a config option to disable the full bounding box for ladder. this be a slight performance tweak that only affect vanilla mechanics.
added a compression level parameter to the constructors and methods in ApkBuilder and SignedJarBuilder classes to allow customization of compression levels during APK
added a test method to include static fields in the MirrorTest class to ensure that static fields are correctly included in the stub JAR
updated ` UNDEFINED _ FIELD _ SIZE ` to ` UNDEFINED _ METRIC _ SIZE ` and modified data type checks to include ` BYTES ` to
updated string formatting in multiple failure error messages across multiple test files to improve readability and consistency of error messages
replaced custom hashCode method with Objects. hashCode in Trade. java and removed super ( ) call in KucoinDealOrder. java to
added caching functionality to ` SpringDataJPAJoinFetchPaginationTest ` and its configuration in ` SpringDataJPAJoinFetchPaginationConfiguration `
ticket : 174 : fix for german locale - sensitive pronunciation file
updated SimpleHttp. java to create a FormBody. Builder for empty post bodies and modified TestHttpPlugin. java to handle null post bodies
added ExecutorService management in ClientSideSlb and updated ClientSideSlbTest to use it to ensure proper cleanup of executors and improve test
modified setV2 logic to differentiate between horizontal and vertical flipping to improve flexibility in setting texture dimensions based on flipiness
throw invalidconfigurationexception instead of hazelcastexception
changed the context path variable from final to non - final and added a null check for contextPath to ensure contextPath is set to " NA " when
[ drools - 7 ] fix nullpointerexception when reiniting class
added a check for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap. java and defined a constant in SerializationHeader.
added ` getPrecompiledHeader ( ) ` method and related functionality to ` AbstractCxxSourceRuleFactory ` to enforcement of precompiled headers
replaced WeakReference with a custom AccWeakReference to incorporate security context handling to enhance security by ensuring privileged actions are executed with the correct access
changed access modifier of ` findNextIndex ( ) ` method from private to private and modified logic in ` OrderedSet. java ` to enhance encapsulation
changed the value of isDirect from true to false to correct the logic for determining if the vertex should be directed
ticket : 2694 : fix compile error
changed method return types from void to Vector2 in Actor and Group classes to allow method chaining for coordinate conversion
pdfbox - 5764 : use input. limit ( ) instead of input. capacity ( )
added null check before removing close hook from context to prevent potential NullPointerException when context is not initialized
updated border spacing logic in CellLayout and DeviceProfile classes to improve layout consistency based on container type and folder type
replace NumberFormat with ValueNumeric for handling numeric values to improve code clarity and maintainability by using a custom ValueNumeric class
added a check for deferred authentication status in the FormAuthenticator class to ensure that deferred authentication is prioritized in the login process
updated argument prefix from " -- module - start - ini = " to " -- add - to - start " in StartArgs. java to
added a null value HIVE _ DEFAULT _ PARTITION _ VALUE and updated partition value handling in DynamicPartitionFileRecordWriterContainer. java to ensure
[ hotfix ] [ stream ] add nullability to streamnode. getoperatorfactory
camel - core - artifact : fix artifact tostring ( ) method to always return artifactid
camel - kafka : fix npe with offsetstaterepository. getstate ( )
improve error message for miss dependency.
change name of jabber account registration wizard to ENABLE _ GMAIL _ NOTIFICATIONS
doc : change formatting for CryptoKey class references to improve code readability and maintainability
( chore ) camel -umberjack : fix the flaky test
fix : do not show health message if player be not dead
refactor Exchange class to improve code readability to enhance maintainability and facilitate future development
api : updateuser api - api - key and secret - key must be specify with apikey / secretKey
replace switch - case statements with if - if statements in MfaProvider, IdleTimer, JdbcMfaProviderProvisioning, SamlServiceProvider
remove @ version that use svn revision a it make useless difference when compare svn with github
added error handling for dropping a materialized view due to SQLIntegrityConstraintViolationException to ensure users are aware of potential issues with
corrected the casing of the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency and accuracy in property naming
added a new file ` RoboExecutorService. java ` that extends ` org. robolectric. util. concurrent. RoboExecutorService `
add group to the menu when there be a group in the group tree
changed the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified a condition to check for path
updated TestDynamicNumberOfGCThreads to use base and extra arguments for GC thread execution to improve flexibility in managing dynamic GC threads during testing
changed host flavor type from Immutable to Flavor in CxxPlatforms. java and KnownBuildRuleTypes. java to improve handling of host flavors
updated SQL CREATE statement formatting and added parameter handling in CreateTable and CreateTableDeParser classes to improve SQL syntax clarity and ensure correct handling of
set the background's alpha to 64 to make the chat appear permanently
test : migrate ctiteratortest to junit 5 ( # 4523 )
added token clearing functionality in tokenizer classes and removed localToken. clear ( ) from DocumentsWriter to streamline token processing and ensure consistent clearing behavior
add a test case for a bug report where initializer would crash on a block statement.
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to throw a ` BeanDefinitionStoreException ` for missing configurers to
simonstewart : no need to check for ` ` link ='' in the locator, just that it start with ` `
ww - 3845 fixed numberformatexception when use %. 0f or %. 0j in locale
aggregatelifecyclelistenerator now only get the current scope, not the unitofwork.
changed touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to ensure touch
added a condition to check if the'~'symbol is present in the FencedCodeBlockParser to simplify the parsing logic by eliminating unnecessary
added support for socket timeout configuration in multiple classes to enhance socket configuration flexibility and improve error handling
added a sleep of 500ms in ElementAttributeTest. java to ensure that exceptions are properly propagated during test execution
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding in HTTP requests
updated List class to improve functionality to enhance performance and maintainability of the code
added URI handling to AsyncFileImpl and updated context handling logic to improve error handling and context management in file operations
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to ensure compatibility with the latest API standards
bug fix : return npe if there be nuage vsp device configure on physical network
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated its usage across multiple classes to improve method naming consistency and
updated class file versioning from Java 8 to Java 9 to ensure compatibility with the latest Java versions
improve error message when - xlint : be not enable
add a method to clear the client header map in an asyncclient class to allow for future reuse of header data
replace Vector with ArrayList and update related method calls to improve performance and clarity in data handling
updated the default grid column value from 0.4 f to 3 f to improve the visual appearance of the user interface
added a condition to check if ` forViewCreation ` is false in ` CalcitePlanner. java ` to ensure that the query does not
updated regex pattern for date pattern in TestHS2HttpServer. java to ensure proper handling of special characters in date patterns
bug fix : do not print error in graphprinter
simonstewart : fix fail test to access page with an insecure ssl certificate.
update byteOffset calculation in ByteBlockPool and add a test for acquiring too many allocations in TestByteBlockPool to ensure correct allocation
changed ` firstEncoder ` and ` secondEncoder ` from static to instance variables and modified string formatting to use ` Locale. ENGLISH ` to ensure
if unexpected error occur, stop the latch.
suppress warning on non - serializable non - transient instance field
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` to simplify the class structure and
add a'discard changes'button on the main window to save the change.
added response type validation and authorized response handling in OAuth20DeviceCodeResponseTypeRequestValidator and OAuth20AccessTokenEndpointController to ensure compliance with
added a check for index value in DrillBuf. java to ensure proper validation of index values during data processing
added a new method ` initTableMapperJob ` to ` TableMapReduceUtil ` for initializing table mapper jobs to enhance functionality by allowing dynamic
removed redundant call to append in AbstractJRubyMojo. java to streamline code by eliminating unnecessary duplication
sulong : llvmpolygloteval : throw early error if no language be available.
added deprecated reserveCommitDuration handling and improved log message formatting in ReplicationHandler. java to ensure compatibility with Solr 7.7. 1 and provide clearer
renamed variable ` cacheVariableName ` to ` cacheForeignKey ` and updated related method names to improve clarity and consistency in cache handling
changed the data type of the generateECKeyPair method from long [ ] to Object [ ] and updated the getEncodedBytes method to cast the key
added the ` suspend ` method in ` Restarting ` and updated ` RestartingTest ` to accept a ` JobStatus ` parameter to enhance the
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation in ` RecentsAnimationDeviceState. java ` to simplify instantiation
refactor portable port table processing to use flatMap for cleaner code to improve readability and maintainability of the code
updated thread ID parameters from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in
don't update offerlistitems state if they exist in the list
fix intermittent failure of test due to tlsv1.3 change
refactor mock handling in MockitoMethodInvocationControl and SystemClassUserTest for improved clarity and consistency to enhance code readability and maintainability by using a
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` across multiple files to improve exception handling by different
replaced the import of DisplayUtils with DisplayUtils and added a extra parameter for file data to streamline code by eliminating an unnecessary import and
added error handling for closing and initalized file operations in StoreDirect and StoreWAL classes to improve resource management and error reporting during file operations
replaced direct calls to ` SystemUiProxy. stopSwipePipToHome ` with a call to ` SystemUiProxy. java ` to stream
added a hidden flag and associated methods to CommandArgumentDefinition and LiquibaseCommandLine to control the visibility of commands based on user input
( chore ) camel - kafka : use port 9092 instead of 8090
move catalog retrieval from styleinfo to geoserverextensions. fix geot - 4877
added permission checks for launcher activities in ` InstallShortcutReceiver ` and ` Launcher ` classes to enhance security by preventing malicious intents from being executed
added ` getId ( ) ` method and setId ( int id ) methods to multiple map loader classes to ensure consistent identification of tile instances
refactor Manager class to improve code readability to enhance maintainability and reduce complexity
updated JDBC connection and session initialization to include versioning to ensure compatibility with V _ 0 _ 13 database versioning
added new properties ` schemas ` and ` includeSchema ` to ` LiquibaseGenerateChangeLogMojo ` and updated the ` diffOutputControl
replace ` putIfAbsent ` with ` put ` in ` registryCache ` to improve performance by reducing the need for ` putIfAbsent `
change log level of singlebenchmarkrunner's warmup method to warn
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore. java ` to allow subclasses to override
fix compile error cause by bad path construction.
added new test cases for handling large response content in FastCGIProxyServletTest. java to improve test coverage and ensure proper handling of large
added startService call in MarkReadService. java to start the ReadInteractionsService to ensure that the ReadInteractionsService is stopped when a read operation
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader. java ` to ensure warnings are only logged when the
added port configuration to Email. java to allow dynamic configuration of the SMTP server port
added retry policies and retry logic for SSLFactory recaling to enhance reliability during the SSLFactory renewal process
updated the date format in ObjectMapperProvider from " yyyy - MM - dd'T'HH : mm'Z'" to " yyyy -
updated error message in SpyingOnRealObjectsTest to clarify the reason for mocking a private class
added end property and logic to handle line endings on NL to ensure proper formatting of line elements in the rendering process
updated filePathString assignment to handle null parent case to improve robustness by avoiding potential null pointer exceptions
added import statement for DocCollection in TopicStream. java to enable usage of DocCollection in the TopicStream class
replaced ByteArrayInputStream with ServletInputStream and added a new test for Windows - 1250 multipart form data to improve input handling and enhance test coverage for
make test use management. endpoints. web. exposure. include = * to restrict access to management endpoint
added validation to ensure the current graph is a dynamic graph to prevent runtime errors due to invalid graph configurations
disable bean that be disable by default for now
add the ability to suppress exception on jsonpath expression
removed duplicate line of code in HelixServerStarter. java to streamline code by eliminating redundancy
updated usage messages in CLHSDB and HSDB to reflect command - line syntax changes to clarify command usage for better user understanding
refactored chunk provider configuration in FaultTolerantStepFactoryBean and removed unnecessary listener registrations in SimpleStepFactoryBean to improve code organization and
[ beam - 1197 ] remove deprecate writablesinkitcase and use beam. sdk. io. write directly
refactor ShadowAccessibilityManagerTest to use AccessibilityManager instance instead of shadowAccessibilityManager to improve test reliability by ensuring accessibility manager state is
add group _ display _ id to analytics to track usage statistic
removed the SourcePathResolver parameter from JavaSourceJar and related classes to simplify class hierarchy and improve dependency management
refactor PostgreSQLDatabaseConnector to use a new PostgreSQLEnumDataTypeHelper class for enumerated column data types to improve code organization and separation of concerns in
updated path comparison from " logpath / spring. log " to " logpath " to ensure compatibility with different operating systems
corrected the spelling of " getMapLocalWork " to " getMapRedLocalWork " across multiple files
added a check for index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations when dropping index tables
update disabled flags for the overview actions view when the visibility is not visible to ensure that the overview actions are disabled scrolling when the view's
added a specific highlighter for non - Windows operating systems to enhance syntax highlighting functionality for non - Windows users
fix : add optional local variable to override bug
replace ` toUri ( ). getRawPath ( ) ` with ` toString ( ) ` in ` filePathStrings ` to improve consistency and clarity in
removed an unnecessary line of code formatting in SelectBox. java to improve code readability and maintainability
changed the value of _ metaDataComplete from true to false to update behavior to reflect updated behavior
changed the return type of the removeTaskTarget method from boolean to void and added execution using THREAD _ POOL _ EXECUTOR to improve
added support for environment variable " RELEASE " in JsBundleGenrule to enhance build rule functionality to expose release flavor as an environment variable
update variable initialization logic in ` mmm Lower. java ` and add a new class ` T6500701. java ` with a
added tests for handling crlf new lines in comments and Java classes to ensure proper formatting of new lines in import statements
added hubMode property to AbstractLiquibaseMojo and updated its usage in AbstractLiquibaseMojo to allow configuration of hub mode for improved
removed unnecessary whitespace in JsrFaultTolerantStepBuilder and JsrChunkProcessor to improve code readability and maintain consistency
added error handling for linkDb existence in IndexerMapReduce. java to improve robustness by logging warnings when the linkDb is not found
replaced manual retrieval of the " setIndexerThreadPool " method with reflection to improve reflection - based accessibility for the " setIndexerThreadPool " method
updated the address string format from " sms : / / " + phoneNumber + " : 5000 " to " sms : / / " + phoneNumber
refactor MapJobExecutionDao to use a copy method for job executions to ensure that modifications do not affect the job execution data
added a new file ` DownloadTest. java ` for testing download functionality to implement and verify the functionality of downloading PNG files
update to late stable stable release version
added UDFArgumentTypeException for argument indices in GenericUDFRound. java to ensure correct exception handling for numeric data types
added null check for selectedVersion before checking for managed dependency tags to avoid potential NullPointerExceptions during version retrieval
added multiple AntPathRequestMatcher instances in SecurityConfig. java to enhance path matching capabilities for web application security
added JUnit @ Ignore annotation to TestConcurrentDppInserts. java to temporarily disable tests during development
fix : do not generate ` ` super class for java. lang. object'' in generated bean definition
added an @ Ignore annotation to HttpClientRedirectTest. java to temporarily disable the test due to known issues
updated method names and variable declarations in OpenWebNetEnergyHandler. java and OpenWebNetThermoregulationHandler. java to improve
simplify code in aprendpoint. processsocketevent ( ).
deleted the SunToolkitSubclass. java file to the functionality provided by SunToolkit is no longer needed
replaced MathUtils with Matrix4 in DefaultRenderableSorter. java and added a method to check for rotation or scaling in Matrix4. java to
added a new test method and modified import statements in TypeHandlerRegistryTest. java to address a specific issue and temporarily ignore the test
added a method to convert to RGB images in PDSeparation. java to improve color conversion accuracy for PDLab components
updated API and wiki URLs to use BuildConfig instead of CommonsApplication to improve configurability and maintainability of API and wiki integration
camel - 18131 : camel - main - allow to turn on / off fake health check
added null check for the blockpos parameter to prevent potential NullPointerExceptions when accessing the block's position
added a test for altering a table with indexes in AlterTableWithViewsIT. java to ensure that the altering table indexes are correctly
updated the offset variable to use ` readerContext. docBase ` instead of ` 0 ` and modified the assertions in ` TestFunctionQuery.
removed the ID from the fields list in MongoRecordReader. java to streamline data handling by eliminating unused constants
added disconnect functionality in YeelightHandlerBase and DeviceBase classes, and updated WifiConnection to handle disconnection gracefully to improve connection handling and
fix for compatibility with mysql 5.2
fix sharedinstancestorexception cause by async reSYNC _ period change
bug 14551 : fix npe in listtemplates api when user vm be not null
changed the type of ` image ` from ` Point ` to ` RobolectricBufferedImage ` and refactored color array initialization logic to improve
removed deprecated constants from LauncherSettings. java and LauncherProvider. java to streamline the codebase and improve maintainability
move / data / stocktickstream. dat under org / drools / examples / broker
added legendTop variable and updated legend positioning calculations in PieChart. java to improve legend positioning for better rendering of the chart
added a check to prevent rendering if the world transformation is not valid to optimize performance by avoiding unnecessary processing when the world transformation is not valid
add a new file MaryScriptCreator. java to generate text files with no content to facilitate the creation of text files without any
nifi - 3952 : fix listenhttpservlet to store the host attribute
updated the instantiation and closing logic for the CompactionLogger and logFile in LevelCompactionTsFileManagement. java to improve code clarity and ensure proper
replace xlink : href with href in component description
camel - aws2 - s3 : use different executor name for timeout checker
hbase - 15410 make isclustershutdown ( ) public and add clustermember ( ) logic
added null check for span before logging in Slf4jSpanLogger and DefaultTracer to enhance robustness by preventing potential NullPointerExceptions
trim whitespace from the active option added to the configuration to ensure valid input formatting for active options
added depth control preferences and updated wallpaper zoom logic to enable or disable wallpaper zoom based on user preferences
updated assertion in OverseerTest. java to check the success count of overseer actions to ensure that the overseer's
removed the method ` getKernelVersion ( ) ` and simplified the conditional check for ` xattrChecked ` to streamline the code and
refactor methods in ExecConstants. java to improve code readability and maintainability
added import and annotation for ScreenRecordRule in ThemeIconsTest. java to enable screen recording functionality for testing purposes
added a method to set scan attributes in TableSnapshotResultIterator and updated ScanUtil to accept a PhoenixConnection parameter to enhance scan functionality by allowing
adjust the lowRange value to a fixed value of 100000000000L in Request. java and RequestV2. java to ensure lowRange is
changed access modifiers of keySizeEstimator and valueSizeEstimator from private to protected and adjusted cache size estimation in AsyncWriteCache and WriteCache
updated the method for setting the zone UUID in HostJoinDaoImpl to ensure correct retrieval of the host UUID
[ zeppelin - 4177 ] fix utf - 8 encode problem in livy
replaced the condition for removing a filesystem path with a direct reference to zfs to simplify the removal process by directly using the zfs object
renamed the ` obj ` variable to ` json ` and updated related methods for better clarity to improve code readability and maintainability by using a more
updated polling timeout values for hard529 in SoftAutoCommitTest. java to improve stability by allowing more time for poll operations
catch runtime exception in selenidelogger. beforeevent ( ) and selenidelogger. afterevent ( )
fix javadoc warning in dial - * - > * - > *
removed unnecessary placeholder in error logging statements to streamline error logging for better readability and maintainability
updated the version of the Ryuk container from 0.4. 0 to 0.4. 1 to incorporate the latest features and improvements in the container
updated the method to return additional bootstrap paths instead of bootstrap paths and added a new test hook class to improve the accuracy of bootstrap path retrieval and
load patchy jar only if it's not already there
[ hotfix ] [ yarn ] reuse yarnclusterdescriptor in yarnitcase
add stats per map to localmapstatsprovider
deleted the AllTests. java file to the test suite is no longer needed in the codebase
added UNICODECHAR _ NONBREAKING _ HYPHEN and UNICODECHAR _ ZERO _ WIDTH _ SPACE constants to AbstractWordConverter to
added a new test class to verify that large stack trace invocations should not starve memory to ensure that large stack trace invocations do not starve
updated method call to use ` getResultMappingsForRowKey ( nestedResultMap ) ` instead of ` getResultMappings ( ) ` to improve clarity
added eventHandled flag to UIText. java to ensure proper handling of text input events
deleted ` Weldby. java ` and renamed ` Weldby. java ` to ` WeldModule. java ` to simplify the
add ` ` monitorcapturegroupsinemptycheck'' flag for ruby flavor
added a protected variable ` liquibaseProLicenseKey ` and removed logging of the license key to streamline access to the license key for better
mondrian : fix bug where mondrian. mondrian. domain. mondrian. rolap. mondrian.
add - g debug info option to generate debug information
mondrian : fix typo in property description
added support for fetching friend paths in Kotlin - related classes to improve integration with Buck's source path management
added support for BATK, BRAHMI, and MAND aliases in Character. java and refactored CheckScript. java
updated equality checks in ExecutionCommand and added a new stringToExecutionCommand method in StageUtils to improve object equality handling and enhance test coverage for JSON
updated Mockito library version to ensure compatibility with recent features and bug fixes
refactor OCFile class for improved file handling to enhance code maintainability and readability
added a toString ( ) method to the SystemScope class to provide a readable string representation of the object for easier debugging and logging
updated CSS parsing logic to handle percentageages and number types more effectively to improve parsing accuracy and error handling for invalid parameters
added tests for local index reverse scan functionality in LocalIndexIT. java to ensure that the reverse scan returns all rows for the physical table
updated import statements and method names from ` InstrumentationRegistry ` to ` ApplicationProvider ` in multiple test files to align with the latest testing framework
updated message strings to use string literals instead of hardcoded strings to improve maintainability and readability of string resource usage
simplified boundary conditions in ` RendererUtilities ` and added a new test class ` test3561093 ` to improve the robustness of the
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid lists instead of individual iterators to improve code clarity and efficiency by
added a try - catch block to handle SQLiteException when adding a column to the FILESYSTEM _ CRC32 table to improve robustness by preventing
removed a debug print statement from AsyncServletIOTest. java to clean up the test output and improve readability
added hashTableLoadFactor and computeOnlineDataSize method to improve data size computation for join operations
modified the ` buildView ` method to accept a ` Context ` parameter and updated the method to use ` Context ` for setting background resources to
added an ` Consumer < Authentication > assertAuthentication ` feature to ` SecurityMockMvcResultMatchers ` to enable customizable authentication behavior during the authentication
vpc cleanup - set vpcid to null
[ beam - 10955 ] disable flink savepoint test on jdk 11
changed the ` @ EdgeType ` and ` @ CaptionStyleCompat. EdgeType ` annotations to ` @ EdgeType ` and ` @
updated loop condition in Actor. java to include the'i'index to ensure actions are processed within the defined queue boundaries
updated the ` BitmexStreamingExchange ` class to extend ` BitmexExchange ` instead of ` BaseExchange ` to align with the
[ task 7 ] add test to prove virtual metadata can be return
add null check for spatial before processing to avoid potential NullPointerExceptions when spatial is null
updated ConditionalTokenFilter and FixedShingleFilter to set lastTokenFiltered to true and added LimitTokenCountFilter and LimitTokenPositionFilter to
fix unsafestorenode mutable state after canonicalization
updated the method call from ` super. putAddress ( base + offset, value ) ` to ` io. putAddress ( base + offset
added an assertion to verify that the event repository is empty to ensure that the event repository is not empty before proceeding
removed final String attributeTemplateName from AuthenticationAttrProcessor. java to streamline attribute processing and improve code clarity
added null check for the key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that null keys are not accepted to
added a method to set the typeface in the CodenameOneTextPaint class to ensure typeface cannot be set in the runtime
implement ` open ` methods in ` AzurePinotFS `, ` LocalPinotFS `, and ` HadoopPinotFS ` classes
simonstewart : delete the deprecated fail ( ) method from webdriverrunner
removed the condition checking if the item's size is greater than zero to simplify the logic for handling empty item scenarios
refactor DefaultResultSetHandler to remove final modifiers and simplify result object creation to enhance code readability and maintainability
updated SQL syntax in CreateTableGeneratorTest. java to ensure proper SQL syntax for foreign key constraints
replace null return with a boolean return value for filter mode in VectorizationContext. java to improve clarity and functionality of the filter operation
fix raw type in configutils. inheritconfig ( )
replaced the existing ReorganizeTableStatement instantiation with a new modifyDataTypeStatement to simplify the code by removing unnecessary parameters
updated cluster name references from " defaultCluster " to " CLUSTER _ NAME " across multiple files to improve consistency and clarity in configuration management
improved logging and error handling in PeerEventListener, PeerGroup, and ClientConnectionManager to enhance clarity of connection attempts and ensure accurate tracking of connection
added a check for multiple style strings in the Nano. java file to ensure the style is set dynamically based on the presence of specific styles
replaced direct usage of AdventureNBTConverter with direct usage of compound tags in multiple files to improve handling of compound tags in schematic processing
change the return statement from " Use ` String ` " to " No # toString ( ) on String " to improve clarity of the error message
updated memory allocation from " - Xmx64m " to " - Xmx32m " to optimize memory usage for improved performance
improve data provider retryAnalyzer to show retry result
change token retrieval from'tokens [ 0 ]'to'tokens [ bandwidth ]'to improve accuracy of token storage based on bandwidth
simonstewart : add method to allow selection, deselect, and capture network traffic
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and added a public key algorithm to streamline the method signature and
removed unnecessary whitespace in TaskAsyncCallTest. java to improve code readability and maintain consistency
added opacity and background setting methods to Dialog and Frame classes to ensure proper handling of dialog properties and prevent illegal component exceptions
changed the ` state ` variable to be ` final ` to ensure immutability of the ` state ` variable
refactor Redis configuration to use sentinel and standalone configuration for Redis connections to improve flexibility in managing Redis sentinel and standalone settings
update jabber room property ` ` lastSeendelayedmessage'' if it's late.
replaced the use of ` new Callback. Adapter ( ) ` with ` NOOP ` in the ` notifyContent ` method call to simplify the
refactor share creation and operation handling in FileOperationsHelper and OperationsService to improve code maintainability and streamline operation creation process
polish ` ` do not inject bean with @ fieldpropertyinject''
updated y - coordinate calculations in ClassicPlotManager. java to use a start value instead of a minBuildHeight constant to ensure correct plot
added handling for NullPointerException in SmackIntegrationTestFramework to improve robustness by ensuring proper handling of NullPointerExceptions
tmi - tiff : fix broken interoperability between tmi and jpeg
added ENABLED _ LS mode to VersionTargetGraphMode and modified the executor initialization logic accordingly to support versioned target graph modes in the application
added a check for video format in the conditional statement to ensure proper handling of video formats in the media processing logic
doc ( regen ) : update AutoMlClient. java with new content
added a load method to LwjglNativesLoader and modified its implementation to allow dynamic loading of the PersistenceService to improve flexibility in loading
added support for Unicode escape in CSVStrategy and updated related tests to enable proper handling of special characters in CSV data processing
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure support for specific grant types and improve test
enhanced exception handling in Throwable and SuppressedExceptions classes to include detailed cause and self - suppresion messages to improve error reporting and provide clearer
added a new SQL query in DerivedTableIT. java and modified the iterator initialization in ClientAggregatePlan. java to enhance query validation and correct
added support for storing the " RSquare " value in the regression object to enable dynamic assignment of the RSquare value in the regression evaluation process
added support for setting context attributes based on request headers to enhance the filter's ability to process and manage request headers effectively
refactor SparkPlanGenerator to use a temporary MapWork object instead of casting to MapWork to improve code clarity and reduce casting overhead
refactor PdfJndiReport and PdfSessionInformationsReport classes to improve image handling and ensure null checks for country images
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling to improve cache management and ensure proper authentication
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` and added a new test for database initialization with directory locations to
added a boolean parameter ` isMethod ` to the ` Function ` constructor and updated related calls in ` LLVMInteropType. java `
removed duplicate sleep statement in AbstractBasicMockingIntegrationTest. java to streamline code by eliminating redundancy
added a new file ` KernCrash. java ` that implements a custom font rendering test to demonstrate and test the handling of font - related
added a fail ( ) method call in LinkedHashTreeMapTest. java to ensure the test gracefully handles failure scenarios
added method getInterfaceAddresses to retrieve network interfaces with a specified prefix to enhance functionality to filter out specific network interfaces based on their prefix
fix housekeeper not be cancel after it have be close.
bugfix : fix bug in group transfer logic when the slave address be a client address.
refactor assertion methods in Assert. java to improve code readability and maintainability
added a new test class Issue247Test to validate the functionality of MapDB operations
changed the ` results ` variable type from ` CategoryItem ` to ` String ` and modified the ` doInBackground ` method to return an ` ArrayList
fix validatortest. testmaxageerror when today be 29 and not 28
added new GrblLookups for alarm and error codes in GrblController. java to enhance error handling by processing both alarm and error responses
updated the method to return a string for home button labels when there are no screens to improve user experience by providing a clearer label when there are
removed the count parameter from the getTrades method across multiple classes to simplify the method signature and improve method usability
updated string handling in ConsoleReader. java and MemoryHistory. java to improve null safety and correct indexing logic
updated the path format for the " Contents / PlugIns / " file in JavaBuild. java to correct the file path format for proper application
replaced calls to ` getDescription ( ) ` with ` getType ( ) ` in multiple files to improve consistency and clarity in accessing build rule types
added a logger parameter to the JFCModel constructors and methods to enable logging of warnings during model instantiation
added validation to ensure tolerance be positive in MaximumInscribedCircle. java to ensure that tolerance is non - negative before proceeding
added methods to create and drop a view database in TestUtil. java and DatabaseMetaDataTest. java to enhance functionality for managing view privileges in the
82319969 : jdk / jfr / agent / nantest. java fail with ` ` no test run'' error on
added a new class ` DesktopTaskbarUIController ` and updated ` TaskbarManager ` to check for PC feature to enhance the taskbar
added progress tracking functionality to ModItemAdapter to improve user experience by managing task counts during mod items
refactor methods in Files. java to improve code readability and maintainability
removed unnecessary imports and simplified list initialization in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration classes to improve code clarity and maintain
updated DomainAwareServicesManager to extend ServicesManager in DomainAwareServicesManager. java and ChainingServicesManager. java to ensure ServicesManager is
use mod : : : getModInfos ( ). getmodid ( ). getModname ( ) instead of modfile : getFileName ( )
chore : update gapic - generator - java version to 2.1. 0 ( # 60 )
added grow ( ) and growY ( ) methods to Cell class to provide flexible resizing options for Cell objects
replaced instances of ` currentBindings ` with a ` bindings ` map and simplified key binding parsing to improve code clarity and maintainability by reducing redund
try - catch to make test more reliable
replaced long array with byte array and updated iteration logic in MetricsMemoryTester. java to optimize memory usage and improve performance during memory testing
deleted the JobParametersPrototype. java file to the class is no longer needed in the project
added a securityEnabled field to the MappingsTable class and updated related methods to enable or disable mapping rows based on security settings
rename ` APPLE _ SWIFT _ OBJC _ CXX _ HEADERS ` to ` APPLE _ SWIFT _ EXPORTED _ OBJ
change the DUMP _ TO _ FILE constant from true to false to disable dumping to file processing for improved performance
workaround for amazon sdk < = 17
[ java ] : don't check if the buffer be already connect when set a producer limit.
added a condition to check if the database info is available in the BaseFormatter class to ensure that the application handles cases where no information is available
allow the port scheme to be set to 443 in PrestoDriverUri. java to ensure secure connections are only established when the port scheme is set
updated DOMOutputOptions handling in DOMConverter. java to ensure proper error output options are used when building latex elements
refactor assertion methods in Assert. java to improve code readability and maintainability
add event. retained property to allow client to retain event.
updated test data to include testCaseName in JSON serialization to enhance test coverage by including additional case names
[ flink - 19748 ] [ table - planner - blink ] fix the bug of groupedwindowfunction
fix compile error due to miss import of fastparse. core. Parsed
use a read - write lock to prevent multiple call to ssl. newssl ( ).
updated conditional check from ` size ( ) = = 0 ` to ` isEmpty ( ) ` in ` AppModule. java `, and ref
replace ` CalciteSqlDialect ` with ` AnsiSqlDialect ` to ensure compatibility with Ansi SQL functionality
changed debug log level from debug to trace in FirmwareUpdateService. java to improve logging granularity for non - firmware update handlers
added tests for retrieving null date and timestamp data in DateTest. java to ensure that null values are handled correctly in the database operations
updated string concatenation syntax in ` StringSubject `, ` AssertionError `, and ` RelabeledSubjectsTest ` classes to improve consistency and
added tests for repository permissions in UserModelTest. java to ensure correct permissions are returned for individual team models
added a new file Test7088020. java with a main method that invokes a method using MethodHandles to facilitate testing of method
replace audience restriction matching logic with a set to track URIs to ensure that audience URIs match accurately for processing audience restrictions
refactor methods in AbstractDataChangedListener to use instance variables instead of local variables to improve code readability and maintainability by centralizing cache refresh logic
updated stderr handling to check for null values before printing to improve robustness by avoiding potential NullPointerExceptions
added a new warning SEPARATION _ ORDER constant in Warning. java and implemented stage active checks in BasicEventSimulationEngine. java to enhance
updated the parameter from ` offlineTableConfig ` to ` realtimeTableConfig ` in the ` optimize ` method call to ensure that the query optimization
added functionality to enable or disable the " hbase. normalizer. enabled " property in the UpgradeCatalog240 and UpgradeCatalog240Test classes to ensure
refactor SavepointV2 and FileStateHandle classes to improve code clarity and maintainability
added Bluetooth class management functionality to ShadowBluetoothDevice to enable setting and getting the Bluetooth class for a remote device
updated method name from ` contains ` to ` containsProfile ` in multiple classes to improve clarity and consistency in naming conventions
fix sum ( [ ] ) with null and empty list
remove graphModel. getGraph ( ). readUnlockAll ( ) call to simplify the graphUnlockAll ( ) call
updated the construction of coreNodeName to use nodeProps. getCoreName ( ) instead of coreName to ensure core name is correctly formatted for
chat activity : update contact list with backpressure update.
updated TaggerParserPosTagCompatibilityITest. java to improve test coverage for tag compatibility functionality
added @ LuceneTestCase. SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase. java to suppress codec for
updated type comparison logic in ` Types. java ` and added a new class ` T7005671. java ` with multiple test methods to
updated DelaunayTriangulator classes to use fixed xmid values instead of fixed xmid values to improve precision in triangle positioning and
added @ Override annotation to multiple collection - related classes to ensure proper implementation of collection methods
refactor JWTClaimsSet initialization to use Builder for better readability and maintainability to improve code clarity and reduce redundancy in date handling
modify the state management logic in StackOverflowCheckImpl. java to correctly manage zone state changes
added ShadowAbstractCursor, ShadowContentValues, and ShadowSQLiteDatabase classes to enhance testing capabilities for SQLiteDatabase interactions
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas. java ` and added
replaced ` bytesPerDim ` with ` ArrayUtil. getUnsignedComparator ` in ` BKDWriter. java ` to utilize a custom comparator for
replaced ` country ` and ` variant ` parameters with ` script ` and ` country ` parameters in ` Locale. java ` to enhance locale handling
update text alpha method from mIconCurrentTextAlpha to mIconLastSetTextAlpha to clarify the purpose of the text alpha calculation
corrected the spelling of " ConfigMap " in the warning log message to improve clarity and accuracy of log messages
replaced LimitedModeLoginMockMvcTests with LoginMockMvcTests and changed test class name from " uaa. none " to improve test
trim whitespace from method calls and parameters in GzipFilter and GzipFilterDefaultTest to ensure consistent handling of whitespace in method calls and parameters
updated formatting of the _ outputType assignment to improve code readability and maintain consistency
updated regex implementation from JDK to JONI to ensure compatibility with the Nashorn regex implementation
replaced ` LooperExecutor ` with ` Executor ` and refactored view capturing logic to use a ` Consumer < ViewRef > ` to
fix for ticket : 289 -- return 0 for unknown style
added a check to ensure the parent folder exists before creating it to prevent errors when attempting to create non - existent directories
updated node discovery bind IP format from " 0.0. 0.0 " to " 127.0. 0.1 " to ensure correct IP address is used for binding
camel - jbpm : fix unit test failure
pdfbox - 2576 : jpegutil don't work for arGB, a suggest by valerybokov
updated the spelling of WorkModeToggleContainer and WorkFooterContainer in multiple files to improve code clarity and consistency in naming conventions
updated import statements and class names in Dalvik - related files to improve code clarity and maintainability
fix : djpp print ` ` extends super'' keyword for ` ` super''
[ hotfix ] [ runtime ] properly free memory in operatorcontext
updated string formatting in QueryByExamplePredicateBuilder. java and adjusted string replacement logic in StringQuery. java to simplify error messages and improve code
updated the eviction and statistics tracking mechanisms in ConcurrentLRUCache and FastLRUCache classes to enhance cache performance and maintain consistency in statistics
fix : taskexecutor. runandwait ( ) run on fx thread cause npe
fix : check if intendeddestination be a Inet4Address before attempt to obtain the local host.
added RuntimeEnvironment initialization in MainFrame. java to ensure proper configuration of database root and source path
added constructors to MarkedClientBootstrapConfiguration and AdminServerBootstrapConfiguration to enable the enabled mode for Solon Admin components
[ hotfix ] [ table - common ] fix typo in tableenvironment javadoc
removed the setStatementTimeout method and adjusted timeout settings in MapperBuilderAssistant and MappedStatement classes to simplify the code by removing unnecessary timeout handling
removed the hangingTscTimeout parameter from the onTsTranspilationCompletedCallback method and related calls to simplify method signatures and improve flexibility in
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration. java to enable serialization of GeoLocationRequest and
updated ` ArtifactFilesystem ` and ` ArtifactFilesystemTest ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl ` to ensure consistency
tika - 2648 : don't throw a tikaexception if the document be not a hpsf document
apps - 2184 fix concurrentmodificationexception on setvalue
don't attempt to write to pipe when there's no data available
add error message for hasvalue ( ) with same tostring ( ) in guavaoptionalsubject
updated the ` BackgroundAppState ` and ` ShelfScrimView ` classes to handle vertical swipe indicator and header extra attributes to improve the
added a null check for the nav variable in MatDefEditorlElement. java to prevent potential NullPointerExceptions during execution
DrawImage. java and GeoImage. java to simplify conditional checks and improve code readability
fixed typo in errorOccuredInOnExceptionRoute. java
astro discovery : use schedulewithfixeddelay instead of scheduleatfixedrate
simplified unit assignment in SinglePassAndImageBasedLightingLogic. java to improve code readability and maintainability
disable test which hang the ci box
updated import statements in GuiceFactoryTest. java to improve clarity and organization of dependencies
added a system feature management feature feature feature feature to the RobolectricPackageManager class to allow users to enable or disable the feature for a
updated RCAFrameworkLoader to handle relative path properties correctly to ensure proper handling of relative paths in configuration files
added logging statement indicating the start of cancellation watch dog to improve visibility into the cancellation process for better debugging
added null and length checks for enumerationValues in RADProperty. java to ensure enumerationValues is not null and avoid potential NullPointerExceptions
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4761 to avoid
server : send what's my ip service replied with the value ` ` whatismyip''
updated column type handling for MySQL in UpgradeCatalog260. java to simplify database type change logic for better maintainability
updated error messages to include space and write - permissions for the index and temp resources directory to enhance clarity and guidance for users regarding directory permissions
[ hotfix ] fix checkstyle violation in datasetsutilities
added a line to append the selector's ID to the key in the Matcher class to enhance functionality by associating the selector with the selected
updated debug log formatting in GouraudShadingContext. java to improve readability and consistency of log output
updated taskbar visibility and alpha management in multiple controllers to enhance user experience by improving the visibility and visibility of the taskbar's alpha
reformatted import statements in KeyExchange. java to improve code readability and maintainability
added a check for ` conn ` before executing the ` version ( ) ` query in ` CockroachDatabase. java ` to ensure
updated error file path handling for index cases in ServerMainTest. java to ensure correct file paths are used when an index is out of range
added methods to retrieve media ordering MIME type from CodenameOneImplementation, MediaManager, and ImageIO classes to enable retrieval of media reordering
change the access modifier of the ` useShaders ` method from private to public and call ` ShaderHelper. useShaders ( ) `
mondrian : fix druidadaptertest to work with druid 1997 - 07 - 01
removed unnecessary whitespace in ZkStateReader instantiation to improve code readability and maintain consistency
pdfbox - 4892 : set feature to disable doctype declaration and entity reference expansion
added a new interface ClientRegistrationIdentifierStrategy with a method to provide custom identification for OAuth2 clients
replace ` indexOf ( " < script > " ) > = 0 ` with ` while ( result. indexOf ( " < script > " )
rename variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and adjust conditional logic for varargs access to improve
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during connection retries
updated InternalDropAllCommandStep and HubUpdater to handle HubRegisterResponse to improve resource management by retrieving project ID from the connection
replace ` & 0xff ` with ` Byte. toUnsignedInt ( b [ off + 1 ] ) ` in multiple files to ensure correct
removed unnecessary whitespace in string conversion to improve code readability and maintain consistency
update DepFiles usage from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig. java to ensure that DepFiles are cached instead of enabled
change the rangePannable property from true to false to disable range panning for improved data visualization
update work mode switch behavior based on the current active page type to ensure proper handling of work mode switching when the current page is WORK
changed access modifiers of ` glCaps `, ` renderer `, and ` animator ` variables in ` Visualizer2TopComponent. java `
added handling for CancellationException in FunctionTest. java to improve robustness by preventing further processing during cancellation
changed constructors of JarFileResource and JarResource to be protected to allow subclassing and enhance flexibility in resource management
fix typo in defaulttrackselector javadoc
add a wait loop for unseq merging in LevelCompactionTsFileManagement. java to ensure unseq merging completes before proceeding
updated fee comparison from AUD to BTC in BTCMarketsAdaptersTest. java to align test with the correct currency used in
updated SQL query and refactored test methods for better clarity and correctness to improve test reliability and ensure correctness of data retrieval
refactor methods in Unicode class to improve code readability and maintainability
updated the installAutoInstance method to include the Service parameter and added logic to update Hive LLAP settings if the service is present
replaced ` delegate. onComplete ( ) ` with ` delegate. onComplete ( ) ` in ` SendHeadersFirstPublisher. java ` to ensure proper
camel - aws : use builder instead of custom deserializer for sseCustomerKey
added handling for BIG _ DECIMAL value in RangePredicateEvaluatorFactory to improve error messaging for unsupported value types
renamed ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper. java ` to improve clarity by accurately reflecting
removed unused import and print statements for annotations in ParameterInfo. java to clean up the code and improve readability
added functionality to enable AC3 playback in the PlaybackController and VideoManager classes to enhance video playback options and improve playback experience
replace an empty value in the HttpResponse with a map containing null values to ensure that null values are properly handled and returned as JSON
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement. java and DiskFileItem. java to address the need of Commons
add a test method ` testSelectInto ` to ` IoTDBExtendTemplateIT ` for database schema creation and querying to ensure that the
refactor methods in RTimerTree. java to improve code readability and maintainability
update package declarations from ` com. facebook. buck. rules. graphbuilder ` to ` com. facebook. buck. core. rules.
- fix issue #358 : add extra round to Letters. java
updated the ClientConnector class to include a client thread name and a client scheduler configuration to enhance thread naming and configuration for better debugging and monitoring
bugfix : viewresultfullvisualizer now have a title and an error checkbox.
added description for user phone numbers in ScimUserEndpointDocs. java to enhance documentation clarity for user phone numbers
added private constructors to DeleteFiles, IndexFiles, IndexHTML, and SearchFiles classes to enforce singleton access and improve encapsulation
added null checks for responseMap and enhanced error logging in JsonHttpPropertyRequest and URLStreamProvider to improve robustness of HTTP response handling and
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a condition to check if the parallel parameter is not DEFAULT _ PARALLEL in XmlSuite. java to ensure that the parallel processing
test vmsupport : fix checkstyle violation
added support for SCARD _ E _ NO _ SMARTCARD in error handling logic to enhance error reporting for smart card presence
added SuppressSysoutChecks annotation to Test2BTerms. java to suppress unnecessary console output for debugging purposes
camel - bindy : added bind method to bind key - value pair so we can reuse the same key - value pair for multiple key -
disable ownership and timestamp by default in preference dialog
updated the method signature of ` runAndCheckException ` to accept a ` ThrowingRunnable ` instead of a ` Runnable ` to improve exception handling
refactor hash calculation to handle null values in CrawlURI to improve robustness by avoiding null pointer exceptions
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version from 4.1. 1 to 4.2 and improved null checks in LiquibaseXMLTransformer. java to ensure compatibility with the latest
bug 60719 - change default cert validity from 7 to 90
updated the ` frame ` variable and calculation logic in ` ThreadHandler. java ` to improve the accuracy of time calculations by using a smoothed
added null check for tableSpec ( ) and paginator in HttpBatchReader, HttpScanBatchCreator, and HttpScanBatchParser to ensure proper
added null check for CompactionInfo client in Worker. java and implemented a test for finding the next compact exception in TestWorker. java to
added onSaveInstanceState method to manage fragment state in ShadowFragmentActivity and FragmentActivityTest to ensure proper restoration of fragment state during state changes
updated formatting for consistency in BatchResourceFactoryBean. java to improve code readability and maintainability
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the color resource is correctly parsed from the application
added error handling for single result retrieval in AbstractJPAQuery to improve robustness by catching NoResultException during query execution
fix findbugs warning ( inconsistent use of local variable )
updated the method of retrieving wallpaper depth effect to use LawnchairApp for improved functionality
updated import statements for ProcessTools in LocalManagementTest. java to streamline dependencies and improve code clarity
updated the ` updateTotalEnergyAverageUsage ` method to use ` getHeadSlot ( ) ` instead of a ` now ` parameter to ensure
refactor ExtensionStack to handle null extensions and improve string representation to enhance robustness and clarity of the code
3. x : fix observable. flatmap. cancelledsubscriber. dispose ( ) on inner error
added connection timeout settings for ` MultiGetRequest ` and ` ControllerStarter `, and enhanced error handling for connection timeouts in ` ServerTableSize
refactor formatting in AndroidPrebuiltAarDescription. java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter. java to align test with the new model implementation
updated EdgeSyncCursor. java to replace SystemResourcesEdgeEventFetcher with TenantResourcesEdgeEventFetcher and modified BaseImageService. java to include
removed conditional success check for BUILT _ LOCALLY in CachingBuildEngine. java and added a test in CachingBuildEngineTest. java
camel - 6555 fixed the unit test error of camel - netty
updated the method call to use Warehouse. getQualifiedName for altering partitions to ensure the correct table name is used for altering partitions
updated the exception message to specify that Vertx instances must be created with the preferNativeTransport option to ensure compatibility with the preferred native transport option
fix : move color type handler test to the same package
refactor StreamEx class to improve code readability to enhance maintainability and clarity of the codebase
set hints for query timeouts in SessionImpl. java to improve query performance by optimizing timeout settings
added a new file ` StaticLoggerBinder. java ` implementing ` LoggerFactoryBinder ` to facilitate the use of SLF4J logging
hbase - 17515 remove unnecessary clonefamily call ( addendum )
added orientation handling for window updates in TaskbarManager to ensure proper handling of window orientations during configuration changes
added xml escape to the nickname of the occupant when display it.
updated the usage of ` longStackPut ` in ` StoreDirect. java ` and added unit tests in ` Issue265Test. java `
added @ SuppressWarnings ( " mutable ", " other ", " selfComparison ", " other " ) annotations in multiple Java files to
fix http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4618
updated type checks for audioTracks and subtitleTracks in DLNAMediaInfo. java and refactored argument array copying in FFMpegVideo
added an unlimited parameter to NBWriteServlet constructors and updated the wlistener instantiation to allow the servlet to be unlimited to prevent unlimted writes
fix ( blockchain ) : do not update totaldifficulty when mine light
modified the handling of playback actions to always return BASE _ ACTIONS when the player is not the current window seekable to improve code clarity and
use copyonwritearraylist instead of synchronizedlist in nativelibrarysupport
added uniform allocation logic to adjust transformation values based on dimensions to improve layout responsiveness and ensure correct positioning in varying screen sizes
modified condition to check for the presence of a colon in the key to improve validation logic for key formatting
added PrincipalResolver import and annotated the method in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration. java to enhance dependency injection for principal
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse. java to simplify JSON handling and improve code readability
added a method to remove trailing slashes from a StringBuilder to improve handling of trailing slashes in the builder
added methods to check and verify pattern matching in the PatternsMatcher class to enhance pattern matching functionality and ensure correctness through testing
improve error message in LoadIncrementalHFiles. java to enhance readability and maintainability of the error message
fire can now place water potion block. close # 289
removed unnecessary whitespace in ` beginOrAdjustReorderPreviewAnimations ` method call to improve code readability and maintain consistency
updated calculations for decreasePercent and supportUnfreezeDelay in ContractStateCapsule, ReceiptCapsule, and ResourceProcessor classes to improve accuracy
added state checks in AsyncContentProducer and BlockingContentProducer classes, and implemented a new test for isReadyIdempotent in AsyncIOServletTest
added a null check for weightField in DocumentDictionaryFactory to ensure that weightField is mandatory to prevent runtime errors
updated AppleBundle. java and AppleTestIntegrationTest. java to enhance plist variable handling and ensure functionality works as expected
fix the laser turret not be able to survive turret damage.
changed return type of ` adaptOrder ` methods from ` OrderCreateApiRequestBuilder ` to ` OrderCreateApiRequest. OrderCreateApiRequestBuilder `
added a new file ` PreParseGrammarTest. java ` that includes XML grammar parsing functionality to facilitate testing of XML schema gramm
8016016 : suppress ` ` doclint : missing'' warning in javax. swing. plaf. basic module
added FontManager import and updated overrideFont method call in ExtendedEditText. java to ensure consistent font overriding across the application
added a null check in the AuthorizeTag class and implemented a test case to always return an empty list when no user is present to ensure
( chore ) camel - cxf : fix illegalstateexception when supply uri contain unsafe character
added an override method ` setUpData ` to the ` JDBCGeometryTestSetup ` class to ensure proper initialization of data during test setup
removed an unused import of DumpHandler in MultipartFilterTest. java to streamline code by eliminating unnecessary dependencies
[ flink - 25989 ] [ runtime ] stop restore attempt for already cancelled task in backendrestorerprocedure
add server. rmi. create property to disable rmi registry creation.
use string. join instead of string concatenation
updated display metrics handling in multiple test files to ensure accurate testing of display metrics across different SDK versions
[ java ] : add clustermemberid to serviceheartbeat counter when allocate buffer.
updated numAttributes assignment to conditionally set to true based on the major version to ensure accurate attribute count based on the version check
modified the calculation logic in CustomExpression. java to include additional cases for negative infinity and positive infinity to ensure accurate evaluation of the double value and
( chore ) camel - consensus : fix ajax listener to log at debug level.
added authentication and authorized routes to the AuthenticityController and implemented authentication methods to enhance user authentication capabilities in the application
add assertion to loweringphase to ensure that the next node be alive during lowering
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
fix track selection bug in defaulttrackselector.
refactor RuntimeSerialization class to improve code clarity and maintainability
mow - 320 update crop box coordinate when drag bound box handler after crop
( chore ) camel - core : fix typo in unitofworkfactory javadoc
added a new variable ` allAppsCellWidthPx ` and updated its value from ` allAppsIconSizePx ` to ` allAppsCell
added validation for content type parameters in MailContentHandler. java to ensure proper handling of non - blank resource names
updated the URI construction to use ` fileId ` instead of ` getRemotePath ( ) ` to ensure the correct file identifier is generated for the trash
added support for marking and resetting input in the Source class to ensure data integrity by preventing invalid mark operations
[ core ] deprecate async * processor and * subject processor in favor of other deprecated apis
ambari - 15490. make server error page configurable. ( mpapirkovskyy )
bug fix : log warn when fail to cleanup domain
remove bailouts from foreign call emission in SPARCArithmeticLIRGenerator. java to simplify error handling for unavailable foreign calls
drools - 5872 - fix and document decisiontableconfigurationadapter ( # 590 )
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to call ` callSerially ` to ensure proper handling
increase the default timeout duration in UnboundedSourceSystemTest from 100 to 1000 milliseconds to allow more time for tests to complete
updated the style resolution logic in ShadowAssetManager. java to simplify the resource name retrieval by removing the " @ " prefix
deleted two files, MrefStat. java and MrefStat1. java to remove unused classes to streamline the codebase
added a check for blank scope in DependencyInsight. java to ensure a default value is used when no scope is provided
added error handling for empty trades and bad status messages in BTCETradeServiceRaw. java to improve error management and provide clearer feedback on
use hamcrest assertion instead of junit in integrations / microprofile / core - backport main ( # 1749 ) ( # 60
bitcoinuri : add method to get payment request url.
[ planner - 383 ] improve error message when use @ planningvalue
removed redundant line setting of folder information in FolderPagedView. java to streamline the code by eliminating redundancy
updated lock ownership checks and modified event handling logic in JfrBufferNodeLinkedList, JfrChunkWriter, and JfrThreadLocal classes
refactor for null value handling in BasicAbstractTuple to improve readability and maintainability of the code
refactor LinterConfigs file reading logic to use InputResourceUtility and improve error handling to enhance code reliability and maintainability while ensuring proper
replace direct call to updateBackgrounds ( ) with a post ( new Runnable ) to execute updateBackgrounds ( ) and updatePaddings
fix incorrect patch value in inventory. oninventorytick ( ) ( # 2221 )
added support for the OCELOT _ BABY case in PlayerEvents. java to enhance player event handling functionality
[ hotfix ] [ ttl ] add @ publicevolving annotation to state - ttlconfig
added null handling for parameter'x'in PreparedStatement and Array classes to ensure proper handling of null values during parameter setting
[ java ] add info about invalidated recordings to archive output.
replace double quotes with single quotes in append0 method to ensure consistent character encoding for newline handling
reformatted the declaration of ` directory ` and ` propertiesFile ` in ` SiteSnapshotVariationsTest. java ` and added a new test
updated test imports and refactored the removeTheTxAndBlock method to improve test structure and encapsulation
fix ( ipcamera ) : enable legacy mode by default
removed the ` NoSuchBuildTargetException ` import from the ` resolveBuildTarget ` method in ` BuckConfig ` and ` BuildRuleFactoryParams `
updated constructors in ChangeLogIterator to accept changeSetList and changeLog parameters to improve flexibility in initializing ChangeLogIterator instances
don't swallow guest exception ( guest error )
replace environment variable OPT _ OUT _ TRACKING with a call to Utils. getEnvOrSystemProperty to ensure the correct property is used
added serialVersionUID to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
fix : fix space before ( ) in spacevisitor
# 2783 - enh : add copy ( boolean ) to servercacheconfiguration # copy ( boolean )
added a new test method to verify behavior when the hidden border is not visible on floated elements with overflow hidden.
updated the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` across multiple files to ensure compatibility with the event bus
changed the variable name from LIVE _ URI to PROD _ URI and added error logging for Kucoin sandbox host exceptions to improve clarity
simplified string concatenation in SpringResourceAccessor. java to improve code readability and maintainability
added unit tests for Microgram and Microwatt units in SmartHomeUnitsTest. java and updated unit format in SmartHomeUnits.
updated the method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader. java `
deleted the ` Tls12SocketFactory. java ` file to remove unused or redundant code
refactor texbibentriesresolver to use stream instead of stream ( )
added a method to check if Robolectric legacy mode is present and implemented logic to handle legacy resources to ensure compatibility with Robolectric '
added a check for FirebirdDatabase to return a specific DatabaseDataType to ensure compatibility with PostgreSQL's DOUBLE PRECISION data type
update defaultbatchconfigurer to not overwrite when autowiring
update gestalt - unittest - stubs to use the new sandbox api
updated test timeouts from 5 seconds to 60 seconds in OutputStreamTest. java to improve test reliability by allowing more time for test execution
test should use try - with - resources instead of try - with - resources
updated TermScorer instantiation to use scoreMode if scoring needs scores to ensure that the scorer defaults to none when scoring is not needed
fix dataflowmetrics. getmetric ( ) to return an empty list instead of null
bug fix : don't try to deploy vm with nics if data center do not exist
refactor DynamicPartitionPruner to use a target object inspector for column lookups to improve flexibility in handling column names during dynamic partition pruning
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and corresponding tests in ` ArtifactFilesystemTest ` and ` ActionExecutionStep ` to
update table row selection logic in ThrustCurveMotorSelectionPanel. java to ensure proper selection of selected rows in the table
replace assertthrows arraystoreexception with assertthrowsarraystoreexception in integration test.
refactor PropertySource class to improve maintainability and readability of the code
added support for custom user agent in the HttpClient configuration to enhance flexibility in user agent customization for the client
refactor session creation and last access time retrieval in MemorySessionStore to improve code readability and maintainability by encapsulating session data logic
updated the test to expect 5 distinct test instances and changed the collection type from HashSet to IdentityHashMap to improve test accuracy and performance by using a
nifi - 992 : fix npe in consumees ws when content type be null
fix ( character ) : send activationrequestdenied event to the character
fix and suppress warning in graphapplet
added and updated the ` updateSnapshotRadius ` method in ` RecentsView ` and ` TaskView ` classes to ensure correct snapshot radius updates
added logging functionality and modified schema addition in StaticMicroserviceVersions. java to enhance debugging capabilities and ensure correct schema processing
changed the return type of the put methods from void to int in ArrayMap. java to enable method chaining for improved functionality
added a startup timeout of 1 minute and streamlined the brokers processing in KafkaContainerCluster. java, while updating error handling in KafkaContainer
[ hotfix ] do not send message back on exception in defaultmqpushconsumerimpl
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added when the header is already present
replaced direct class name casting with package access check in EventListenerList. java to enhance security by ensuring package access is validated before adding the listener
added a custom adapter to display applications list in the ApplicationsFragment and created a CustomAdapter class to enhance user interface by allowing dynamic selection of applications
updated the applyIcon method to include task parameters in KeyboardQuickSwitchTaskView. java to enhance functionality by allowing multiple task instances to be applied
refactor DownloadStateCursor to use try - with - resources to ensure proper resource management and avoid potential memory leaks
( chore ) camel -Sqm - to - sql : fix arrayindexoutofboundsexception
added JUnit test annotations to HibernateCursorItemReader, HibernateCursorItemReaderStateful, and HibernateCursorProjectionItemReaderIntegrationTests classes to improve
refactor DataInputStreamWithTimeout to use a ExecutorService for reading messages and improve interruption handling to enhance reliability and maintainability of the reading process
added ENABLED _ TS ( 0 ) to VersionTargetGraphMode and integrated ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable
refactor UpgradeCatalog150 to improve code organization to enhance maintainability and readability of the upgrade process
rename networkparameters. testnet ( ) to networkparameters. oldtestnet ( )
removed selection check for single geos in PropertiesViewD. java to streamline the user interface by eliminating redundant selection logic
updated onboarding preferences handling in AppsDividerView. java and added nullability annotation in ActivityContext. java to improve onboarding
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling during closing to improve performance and reliability of data handling operations
pdfbox - 4892 : don't call setclip ( ) if the pathiterator be null
removed unnecessary synchronized block around localAddress assignment to simplify the code and improve readability
refactor TemplateTransformer to improve row handling by introducing addToRow method to enhance code readability and maintainability by encapsulating logic in a dedicated method
added a method to check if the system is Windows and refactored file renaming logic to use canonical file handling to improve file renaming robustness
replace CHARACTER _ ENCODINGS [ 39 ] with ASTERISK _ ENCODING and introduce a CHECK _ DIGIT _ STRING constant to improve code
don't cast to void when expect a void return type
removed the call to fieldType. stored ( ) in indexingchain. java to streamline the code for better readability and maintainability
fix ( sql ) : fix handling of nan in where clause
updated the handling of postedRunnableStacktraces in LwjglCanvas. java to simplify stack trace retrieval and improve code readability
fix a typo in the description of the AbstractGCSProcessor class
replaced ` assertInitialized ` method with ` waitUntilInitialized ` method in ` ConnectionPoolTest. java ` to improve synchronization by ensuring ` init
change directory directory retrieval from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure tests are run with a single
renamed ` data ` to ` data ` and introduced a ` filterCount ` counter in the ` UserData ` class to improve clarity and functionality
updated method declaration format and improved error handling in FileWithTabs. java and T4994049. java to enhance code readability and ensure
replaced multiple redundant conditional checks with a static assumeTrue method in ConsoleReaderTest. java to simplify code and improve readability by reducing redundancy
remove unnecessary check for admin in getfeedbacksessionsaction.
adjusted the calculation for newSelection and condition checks in AllAppsView. java to improve the responsiveness of the app's selection behavior
bugfix : do not call initialize ( ) if nprofiledappthreads = 0
added functionality to load and refresh data model lists and simplified password encryption logic in the database connection dialog to enhance user experience by ensuring relevant data
changed ` writeBufferSize ` to ` static final ` WRITE _ BUFFER _ SIZE and updated constructors to use ` String. valueOf ( ) ` to
lucene - 1086 : don't create empty index if there be no doc
blender importer : fix npe when load blender modifier data.
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future development
replace direct instantiation of UnsupportedOperationException with a local variable to improve code readability and avoid potential stack trace filling
updated the method to return the average line height instead of a fixed height to improve accuracy of label rendering by using the average of line height
replace singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing display configurations
refactor string quoting logic in AVA. java to improve handling of escaped quotes to ensure correct processing of quoted strings in the output
replace ` Long. valueOf ( s, 16 ) ` with ` IdConversion. convertToLong ( s ) ` and update ` setStateCurrentTrace
renamed the test method from ` name ` to ` testSmall ` and added a new test method ` testBig ` to improve test clarity and
updated the assertion for COUNTRY _ CODE _ s query in TestSqlEntityProcessorDelta. java to correct the expected COUNTRY _ CODE _
updated caching mechanism in Cache. java to improve performance and efficiency of data retrieval
replace'e'with'ev'in ResourceSetRegistrationEndpoint. java to ensure consistency in naming conventions
updated the ` doBefore ` method to include a ` false ` parameter and made the ` seenDocIDs ` BitSet final to improve code clarity
added a new Java class ` GcodeTable ` to display a persistent table with data to enhance the user interface by allowing users to add or
don't hardcode WEBAPP _ CONNECT _ TIMEOUT, rely on configuration
updated generic type declarations and improved formatting in several Java files to enhance code readability and maintainability
updated test cases in TestMediaService. java to improve test coverage for media service functionalities
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK to HELP _ ABOUT _ DIALOG _ USER
add test to verify that fiat / crypto currency can be print
validate that the component be valid for hostname compliance to ensure that the provided component does not contain alphanumeric and dash.
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration functionality in the application
refactor ServerSpanThreadBinder class to improve thread safety and maintainability
updated user object retrieval from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics. java `, and modified block
fix bug where geo shape would not be draw in csv file
replaced ` callGasWord ` with ` gasCost ` in ` VM. java ` and removed unused imports from ` Program. java `
refactored methods in Parameters. java to improve code readability and maintainability
added a method to ignore null values in the piePlot to ensure that null values are ignored during plot processing
replaced the concurrent map implementation for loading bundles with a simpler approach to improve efficiency and readability of the bundle loading process
replace'_'with'-'in TaggedPdfReaderTool. java to ensure consistent output formatting
allow executescript and a freeplane action to be execute by default
added userModified flag to LoginSamlAuthenticationProvider to enable user modification tracking in the authentication process
added a new file TestSealedObjectNull. java to test the behavior of SealedObject with null and invalid parameters to ensure that the
renamed the method ` onOpen ` to ` setResponse ` and updated its usage in ` ConnectPromise ` and ` WebSocketClientConnection ` to improve
added support for SNOW event using a predefined Material type to ensure compatibility with server version prior to 1.17. 5
added a lastTradeId variable and updated Trade creation to include it to ensure trades are tracked and maintain the integrity of the trading data
added error handling for closing the HMS connection to ensure proper resource management and avoid potential memory leaks
use ` random. nextLong ( ) ` instead of ` system. currenttimemillis ( ) ` to generate a seed
updated device profiles in DynamicGrid. java to include a new device profile " Nexus 5 " to enhance the visual representation of device profiles for better
2. x : fix npe in refcount ( ) when a connection be disconnect
replace type. newInstance ( ) with ReflectUtil. newInstance ( type ) in SynthContext. java to improve instantiation reliability and maintain consistency with
added support forROUND _ TEXTUAL _ OP tokenizer and updated related logic to enhance formatting capabilities for textual operations
added checks for empty file names and improved project file handling in SaveTask and SaveAndLoadTaskTest to enhance robustness of file operations and
added synchronized modifiers to multiple methods in MLogWriter. java to ensure thread safety during concurrent operations
modify add method to handle MutableLogEvent in SmtpManager to enable proper serialization and deserialization of MutableLogEvent
replaced ` LengthLike ` with ` NonNegativeLengthLike ` in ` PrimitivePropertyBuilders. java ` to introduce a new property type for non
remove the ` getUser ( headers ) ` parameter from context creation in resource classes to simplify context creation logic for better maintainability
refactor trap unit handling in MethodIRBuilder and SootWorldBuilder to improve code clarity and efficiency
updated test result handling in JUnitRunner and improved error message formatting in AndroidPlatformTarget to enhance test execution reliability and provide clearer error messages for
increase cacheSize from 16 to 8 in OmniNotes. java to optimize memory usage for improved performance
fix intermittent failure in testinvocationstagetrace. testinvocationpublishmodelfactory [ hz - 2197 ] ( #
add protection against npe during fips keystore initialization
change the port handling in the UpstreamCheckUtilsTest to use a dynamic port instead of a hardcoded value to improve flexibility and ensure the test
ticket # 2113 : fix error in dockmanagerw. get ( )
added support for different shader extensions in GLRenderer. java to enhance shader management capabilities based on available capabilities
updated PopulatorContext class to improve data population logic to enhance performance and accuracy of the application
skip saveall notification if project data be not project
added UTF - 8 encoding handling and improved file writing in ZQLJobManager to ensure proper character encoding for job data processing
added a check for non - empty arguments in the IkStepDefinition class to ensure robustness by avoiding potential ArrayIndexOutOfBoundsException
added a prefix for OSSO header names in the FakeOSSOHeaderDecoder class to improve code readability and maintainability by centralizing
camel - 15836 : deprecate - suffix - strategy option in generatejavasources and generatejavaproducer from camel - core
removed debug log statements for accessing the Apache Derby driver class to streamline log output for troubleshooting purposes
[ drools - 561 ] increase test timeout in ceptest. cepjavatypetest
use stream ( ) instead of parallelstream ( ) to improve performance
updated the handling of the ROLLBACK operation to check for Liquibase HubMode before updating the Liquibase Hub properties file
added new constants for IBM J9 and Eclipse OpenJ9 VM versions, and implemented a test for version information validation to ensure compatibility with the
modified font logging message formatting in FontFamily. java and added a new DebugFonts. java file to improve clarity of font request messages and
updated import statements in ALPNNegotiationTest. java and added a conditional check in NegotiatingServerConnectionFactory. java to
added RateControl configuration to SettingsBodyParser and MaxConcurrentStreamsTest to enable automatic rate control for improved request handling
added a new Java file ` Test6741426. java ` implementing a Runnable with JComboBox and JTextField to establish a basic UI with nim
updated error message from " Could not verify the CSRF token " to " Could not find the CSRF token " to improve clarity of error reporting in
added null checks for ` dbMgdPath ` and ` dbExtPath ` in HMSHandler. java to ensure that managed directories are
[ bugfix ] move s3copyobjectrequest to correct package
refactor setup methods to remove accent color parameter and use viewThemeUtils for setting preferences to simplify code and improve maintainability by centralizing theme
updated the error message for invalid folder paths in TemporaryFolderUsageTest to improve clarity and accuracy in error reporting for relative paths
updated TypeInformation usage from ClassTypeInformation. from ( Map. class ) to ClassTypeInformation. LIST in MappingMongoConverter. java to
check for empty or null address in clientnetworkconfig. addaddress ( )
added " keynectisrootca [ jdk ] " to VerifyCACerts. java to enhance certificate validation capabilities
change return type of compute ( ) from void to int since the compute method may return an integer.
added condition to disable the'Armed'model when the popup is not displayed to improve user experience by preventing unintended actions when the
pdfbox - 4892 : fix arrayindexoutofboundsexception, a suggest by valerybokov
added a new test class ` FinalizerInfoTest ` to verify the finalization of objects in a Java environment to ensure that the finalizer
camel - 20297 : use doonnext instead of map in cachingroutecourcelocator
refactor BurningManService to handle custom addresses and receivers in compensation proposals to improve clarity and functionality when dealing with compens
refactor StringSubject class to improve code readability and maintainability
increased the size of longData from 1k to 1000k and added an import for JUnit's Ignore annotation to improve test reliability and
rename the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity by accurately reflecting the method '
replace " @ " with " from : " in search suggestions query to ensure correct query formatting for recent searches
updated conditional check for rebalance in SimulatorDiscoverer. java to improve responsiveness during device recalculations
added a post mapping for importing and storing YubiKey accounts in YubiKeyAccountRegistryEndpoint to enhance the endpoint's functionality
updated shader program settings across multiple files for consistency to enhance shader functionality and improve error handling for missing material references
added null check for the ` cnt ` variable in ` paintOnTopLoop ` and incorporated safe area handling in ` SideMenuBar `
refactor AbiWriterProtocol to improve data handling to enhance performance and maintainability of the code
modified caption assignment logic to handle null subName case to ensure proper assignment of caption based on the provided subName
replaced ` setDataFlag ( DATA _ FLAG _ IMMOBILE, true ) ` with ` setDataFlag ( DATA _ FLAG _ GRAV
added null check for sim in CustomExpression. java and improved condition checks to enhance code robustness and prevent potential NullPointerExceptions
fix bug where requestBlindvotewartfromnetwork would fail on live server
added a new test case ` testCase4 ` to ` PostgresTest. java ` to test the functionality of the ` PostgresTest ` class with
updated string literals from double quotes to single quotes in SubtitleUtils. java and RemoteUtil. java to improve code readability and maintain consistency with
fix : line separator in javadoc tag do not match expected output
add volatile to singleimplementor. snapshot ( graal - 1071 ).
added null check for excludeSet before adding queries to the qlist to avoid potential NullPointerExceptions when excluding main queries
fix ( bridge ) : support merging of bridge and genericthingbuilder
replaced calls to ` printHelp ( ) ` with ` error ( ktab. commands [ i ] ) ` to provide clearer error messages for
loader : do not try to read output file if it do not exist
camel - 7999 : dateconverter. tocalendar now accept a period in the format': 00 '
added query to find posts by a specific post based on a given slug to improve performance by ensuring that only valid posts are retrieved
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for its existence
added a request factory for handling HTTP requests in ClientRegistrations. java to improve request handling reliability and performance
updated test cases in SourceTest. java to validate file existence and names to ensure the Source class correctly identifies and maintains the integrity of
refactor version retrieval logic in DefaultHomeFinder. java and remove static modifier in GraalVMLocator. java to simplify code and improve
added validity checks for access and refresh token configurations in ClientAdminBootstrap. java to ensure that the client's validity settings are set correctly when
update androidAPIVersion return logic to conditionally use default SDK version to ensure that the application uses the correct API version based on user options
camel - core - optimize : remove'this'prefix from propertyplaceholderhelper
updated formatting of the Owner string in Resources. java to improve readability and maintain consistency in formatting
solr - 12028 : fix flaky test by wait for collection to be process in parallel
added BigInteger import and applied it to simpleTypes in MongoMappingContext. java to enable handling of BigInteger data type in MongoDB operations
updated condition to include a condition for displaying toast messages based on the button text string to improve user feedback by displaying a toast message only when the
added a condition to check if MEncoder is not syncing when not disabled to optimize video processing behavior based on configuration
reduce event loop size from 10 to 15 in ConfigurationProperties. java and ConfigurationPropertiesTest. java to increase the event loop size for better performance
changed access modifiers of several classes and methods in CountMin4 to enhance encapsulation and improve code maintainability
added methods to retrieve file float source and created a test class for external file sorting to enhance functionality and ensure correctness of sorting functionality
changed error message from " Invalid URL " to " Connection error. " in DoiFetcher. java to provide clearer context for the error encountered
added source attribute handling for event time and type in OpenRocketSaver. java, and enhanced event creation in FlightDataBranchHandler.
changed the visibility of the ` check ` method from private to protected final to allow subclasses to access and override the method
added functionality to handle SynchronizeFileOperation in FileActivity to improve user experience by providing a quick way to resolve conflicts during file synchronization
updated the URI generation to use URLEncoder for generating the resized image to ensure proper encoding of file paths in uploads
added a check for the initialization status and the client property " cn1 $ infinite " in InfiniteContainer. java to ensure proper handling of
updated the ` total ` variable initialization in ` IntHashSet. java ` to correct the calculation of the total value
added a lock check before updating the feed entry in FeedRefreshUpdater. java to ensure timely updates occur only when the feed is locked
refactor conditional checks for user principal assignment in SolarisAclFileAttributeView. java to improve clarity and correctness of user principal handling logic
replaced the list manipulation with an array sorting for edges in LatLonTree. java to improve efficiency and readability of the code
added import for IOUtils and ensured proper resource cleanup to improve resource management and prevent potential memory leaks
replace newlines in the comment buffer with underscores to ensure consistent formatting of comments
added a strict property handling to the Main class and corresponding unit tests to ensure proper parsing and handling of properties in strict mode
fix validation error for non - pojos with custom constraint
( chore ) camel - http4 : fix typo in the constructor
added waitForThingsToLevelOut ( 30000 ) to TestCloudPivotFacet. java to address potential issues with thread wait time
simplified the conditional check for writing bytes in UBJsonWriter. java to improve code readability and reduce redundancy
updated test cases in ApplicationTest. java to improve test coverage and ensure accuracy of application functionalities
replaced String details with StringBuffer details to improve performance and memory usage
replaced Type with RoboType across multiple files to improve type handling and consistency in type usage
[ java ] return action. abort when delivery be complete.
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 4670 ( #
added a new file PutfieldError. java that demonstrates the throwing of IncompatibleClassChangeError to verify that the expected error is thrown during runtime
don't add private to public address if it's already present in the public address
add more logging to memtable that have reach memtable _ throughput _ in _ mb and memtable _ operations _ in _ millions
replaced instances of ` Space. build ( " ", emptyList ( ) ) ` with ` Space. SINGLE _ SPACE ` across multiple files to
removed the duplicate ` encodedLength ( ) ` method from ` Flyweight. java ` to streamline the code by eliminating redundancy
refactor TestMethodResultMapBuilder to improve test coverage to enhance reliability and maintainability of the test code
added handling for ` java. lang. NumberFormatException ` and ` java. lang. RuntimeException ` in the FindNullDeref class to
[ hotfix ] [ runtime ] remove unnecessary lock in tasklocalstatestoreimpl
updated return statements to return a value of 1 instead of using context. getResources ( ). getString ( ) to simplify string resource retrieval and improve
updated logic in Utilities. java and FloatingIconView. java to handle DeepShortcutView and SystemShortcut instances to improve functionality for handling deep shortcuts
changed the type of the ` validator ` from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > `
renamed methods for buy and sell quick rate in Coinmate classes to improve clarity and consistency in method naming
added a new configuration class ` CoverageConfig ` and modified ` CoverageController ` to use it to improve flexibility and maintainability of the CoverageController
added a check to register sticky registration only for the current instance to ensure EventBus is registered only when the instance is not already registered
added ASCII - only check to normalize method to optimize normalization process to avoid processing excessively long strings
[ hotfix ] fix checkstyle violation in jobcoordinationservice
added error handling for SQL updates in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL commands have failed
camel - 16400 : camel - core - optimize unit test to speed up test.
updated HR and attrs method calls from ` attrs ( AttrKind. OK, ) ` to ` attrs ( AttrKind. OK, )
added a line break before the br tag in HtmlCoreReport. java to ensure proper formatting of HTML output
updated the calculation of ` ramBytesUsed ` in ` DocSlice. java ` to handle null scores safely to ensure accurate memory usage estimation
updated CustomTypeAdaptersTest. java to use a custom StringHolder class for handling collection elements to improve serialization and deserialization of String arrays
fix miningparameters extradata not be set when populate block
added a static final ` numArgs ` map and updated the ` argsToProperties ` method to accept a variable for the number of arguments to
remove trailing whitespace in PathParamServerEndpointConfig. java to improve code readability and maintain consistency
chore ( core ) : fix memory leak in migrationrulelistener
updated method parameters from'part'to'partOrList'in RestClientRequest and RestClientClientRequestImpl classes to improve clarity by
tidy up the src / test / resources after drools - benchmark - core - statistic
removed the basicCategory method and its logic from SpanishTreebankLanguagePack. java to simplify category extraction by eliminating redundancy
hhh - 14611 : add load ( ) method to abstractentityloader and uniqueentityloader to allow unique entity loader implementation
hbase - 25835 regionservers should use clear ( ) and poll ( ) instead of take ( ) and take ( ) in regionserver
fix for aioobe when call setsize, a suggest by michael klink
remove unnecessary call to fillPool ( ) in javadocs to improve code readability and maintainability
replaced the ` assureMatchVersion ( ) ` method calls across multiple filter factory classes to ensure compatibility with the latest Lucene version
fix : executablemethodwriter. get isInterface ( ) should always return true
added a conditional check for the input LA ( 1 ) before matching a new COMMA expression to prevent parsing errors when the input matches a specific COMMA
updated multiple subject classes including Guava's OptionalSubject, IterableOfProtosSubject, MapWithProtoValuesSubject, and ProtoSubject to improve consistency
throw an exception if the payload length be negative.
move publishsubscriberchannel from'channel. config'to'dispatcher'package
updated data types from String to Long across multiple classes to improve handling of execution IDs more accurately
added digest calculations for width and height in ImageProcessor. java to ensure accurate computation of the digest for image dimensions
added imports for MessageFormat and LocalSolrQueryRequest in SolrConfigHandler. java to enhance functionality and improve request handling capabilities
updated delayUntil calculation in FileSyncAdapter. java to ensure synchronization delays are limited to a maximum of three seconds
removed unnecessary whitespace in SegmentV1V2ToV3FormatConverterTest. java to improve code readability and maintain consistency
refactor ` addPathToMTree ` method to accept a ` Path ` object instead of a ` fullPath ` string to improve path construction consistency and
add support for ` ` file :'' in jar file. relate to http : / / issues. apache. org / bugzilla /
[ hotfix ] [ table - common ] move timestampextractorutils from table - sources to tsextractors
add a new file ` SpringSecurityAuthenticationSource. java ` implementing ` AuthenticationSource ` to provide functionality for LDAP user details retrieval in Spring Security
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager. java to align with the latest SDK requirements
updated the auto suggest dialog to use a cached file list to improve user experience by caching file names
added a test method ` testNewput ` in ` TxInputUtilTest. java ` and modified assertions in ` StoreAPITest. java
removed the entityType parameter from the stream method in MongoTemplate. java to simplify the method signature and improve code clarity
zoom factor calculation and x - value calculation in MapOverviewImageMouseHandler. java to improve zoom handling accuracy and ensure consistent x - value
updated KNearestNeighborClassifier to include a similarity parameter and set it to DefaultSimilarity to enhance search accuracy by allowing custom similarity settings
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler. java to improve query parsing efficiency by utilizing a more robust query
replace ` toString ( ) ` with ` getReason ( ) ` in ` LowResourceMonitor. java ` to improve clarity and consistency in retrieving low
update package - info. java files in mmm and ppp packages to improve documentation clarity and maintainability
updated MTU request handling in ShadowBluetoothGattTest to ensure correct MTU request behavior across different API versions
updated the method ` createServletOutputStream ( ) ` to return ` createServletOutputStream ( ) ` in ` TestPayloadNameRequestWrapper. java
added logging for unsatisfied link errors in VoskSTTService to improve debugging capabilities by enabling logging of unavailable links
[ java ] use concurrenthashmap instead of hashmap for channelprocessingmanager.
updated the description for " all, " all, " and " grouped " resources to improve clarity and consistency in resource naming
updated condition check from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and ` JDBCTypeMappingTest `
added synchronized modifiers to addPlayer and removePlayer methods in GenshinScene. java to ensure thread safety during player management operations
replaced the isScreenReaderActive ( ) method with a new instance of AccessibilityStateTester and added regex patterns for control codes to improve accessibility
fix issue with side menu bar and no icon in the side menu
removed the Disposable declaration from the subscription in PoloniexManualExample. java and added logging in WampStreamingService. java to
added a validation check for contract type in UpdateSettingForEnergyLimitContractActuator. java to ensure energy limit is non - negative and improve
renamed variable ` url1 ` to ` javaUrl ` and added protocol handling in ` UrlBean ` to improve code clarity and ensure protocol consistency
camel - 4447 : fixed soap jaxb dataformat to allow custom namespace prefix.
updated test assertions to use a constant for one minute MILLIS and refactored date parsing logic to improve code readability and maintainability by central
added Jetty server restart logic in BasicAuthIntegrationTest. java and retrieve security properties in ZkStateReader. java to improve server management and
add the pricefeed price feed to the trade chart view
from huuuuuuuuuuuuit - add - add - add - add - add - add -
8015349 : ` ` abc''. lastindexof ( ` ` a'', - 1 ) should evaluate to 0
added file data storage management functionality in FileDownloader. java to enable file downloading and saving of downloaded files
[ java ] : use ` raf. setLength ( logLength ) ` instead of ` FileChannel. length ( ) `.
added a method to check if a registry is running and implemented retry handling for file deletion to improve reliability of registry operations and enhance file management
removed unused import statements and added ` startLoading ( ) ` method in ` Quick3dMain `, ` TextureTest `, and `
removed unused private variables and added multiple @ SuppressWarnings annotations in several Java files to improve code clarity and suppress unchecked warnings
added null check for instances in TraceFeignContext to prevent potential NullPointerExceptions during execution
added a transactional level error check and refactored related code in SQLExceptionCode and PhoenixDatabaseMetaData to ensure proper isolation level handling based on transaction
added transaction attribute handling in AbstractStepFactoryBean and enhanced error management in ItemOrientedStep and SkipLimitStepFactoryBean to improve transaction management and
refactor CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient to improve abstraction and maintainability of the security interceptor
added functionality to the add category menu in ListFragment and NavigationDrawerFragment to enhance user experience by allowing category addition functionality in the navigation drawer
renamed the ` cancel ` method to ` cancelMatchingOperation ` and reformatted method names for consistency to improve clarity and maintain uniform naming conventions
pdfbox - 4892 : avoid classcastexception, a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve font size management by using a dynamic value
add valid fact check before modify frame in ConstantAnalysis. java to ensure that the modified frame is only modified when the fact is valid
updated imports and class names in various files to improve code clarity and maintainability
return a new arraylist < > ( this. spans ) instead of a reference to this. spans to ensure that the returned spans are properly immutable
updated method calls and lock handling in Liquibase. java to improve code clarity and ensure proper lock management
added a ` setRevision ` method to ` MicroserviceVersions ` and modified ` testInstanceCacheChecker ` to set the revision to null to
refactored foreign key and index handling logic in TableRetriever. java to improve code clarity and ensure consistent naming conventions
camel - 14850 - camel - aws2 - s3 should use uri - endpoint - override instead of uri - endpoint - override
removed the currencyPair check from getBitstampUserTransactions method signature to simplify the method signature and focus on user transaction retrieval
added error handling for retrieving component instances in BlueprintContainerRegistry to improve robustness by gracefully handling potential NoSuchComponentException
change pushbuilder. push ( ) to return a boolean instead of void.
refactor LegacyAddressTest to read legacy address data directly from a file instead of converting it to a data file to improve test reliability by reading
changed the visibility of the findDropTargetAt method from package - private to public to allow access to the method from other classes
added a ` closeDrawer ( ) ` method and refactored ` setupPushWarning ( ) ` method in ` NotificationsActivity ` to
close the channel when replay the original cause, not just the original cause.
replace null checks with StringUtils. isEmpty ( ) checks for attributes in LdapPasswordPolicyEnforcer. java to improve code readability and prevent potential
updated DefaultAnnotationEngine and Stubber classes to improve code clarity and maintainability
added an @ Ignore annotation to MemoryManagerTest. java to temporarily disable the test due to PHOENIX - 2840
nifi - 559 : added timezone attribute to the aboutdto class to allow for timezone customization in nifi
don't split split own tokens if the number of tokens don't match
removed unnecessary try - catch block during deserialization to simplify code and improve readability
fix possible deadlock in circuitmanagerimpl # getactivecuits
replace GdxRuntimeException with IllegalStateException in ShaderProgram. java to improve error handling by indicating a non - illegal state
flume - 1021. remove eventdrivensource and poluredesourcerunner from test runner.
changed log level from error to info in FastBindLdapAuthenticationHandler. java to improve logging clarity for authentication failures
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance performance and maintainability of the code
don't throw exception if attempt to freehand function fails
corrected a typographical error in the constructor name from " CasRiskBasedAuthenticationEvaluationStartedEvent " to improve code readability and maintain
refactor connection handling in SchemaCrawlerMain and Executable classes to ensure proper resource management and logging for database connections
bump default tl version to v1.2 with a fallback
[ java ] correct typo in countersmanager exception message
modified audio queue position handling in MediaManager. java to ensure correct ndx calculation based on playback state
updated debug log statements in HttpConnection. java to include the cancelled parameter to improve logging clarity and reduce unnecessary debug information
added support for transient fields in JpaPersistentPropertyImpl to ensure proper handling of transient fields during persistence
updated UpgradeResourceProviderTest to validate the desired stack version from " HDP - 2.0. 1 " to ensure the correct desired stack version is
trufflevm : make eval ( ) return an object instead of symbol
change access modifier of ` isBinaryType ` method and set ` outStreamClient ` to ` public ` in ` SampleResult. java `,
updated the constant name from TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE to TEZ _ DYNAMIC
remove ` findproblems ( int line ) ` and ` findproblem ( string line ) `, because there be no ` javaproblem `
remove DictionaryIndexConfig. DEFAULT _ OFFHEAP usage in DictionaryIndexType and BloomFilterHandler classes to simplify the read method by removing unnecessary
fix flakiness in tablewritertest. tostring ( )
updated DebugHelper class to improve debugging functionality to enhance performance and reliability of debug operations
owns the texture flag in ParticleEffect. java to ensure proper resource management and prevent memory leaks
added new LDAP configuration properties to HiveConf. java to enhance security by allowing custom LDAP settings
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
updated InputMethodManager behavior to toggle between SHOW _ FORCED and HIDE _ IMPLICIT _ ONLY for notes to improve user experience by
added a test for converting a primitive to a map of primitive types in DataTableTypeRegistryTableConverterTest. java to ensure correct conversion of primitive
testfilesystem : harden the size of the memfs : fsMem. mv. db
update error message in ContentTypeManager. java to clarify the nature of exceptions related to file triggering and bug tracking
changed the ` dropSequences ` method in multiple database classes to be abstract and implemented the ` dropSequences ` method in subclasses to enhance
added a null check in the MainWindow class to prevent potential NullPointerExceptions during execution
refactor to assign the result of binaryField. createField to a variable to improve code readability and maintainability
bug fix : HierarchicalIcons. java do not process the event when the root node be not logical style
added a test for the upsert operation in MongoTemplateTests to ensure that the upsert functionality returns the result for non - existing objects
hbase - 13394 fix off - by - one error
added a method to record app launches and updated broadcast intent handling to improve app launch accuracy and prevent null pointer exceptions
added graphics rendering and disposal in JavaSEPort. java to improve rendering performance and ensure proper resource management
[ 4227 ] instructorfeedbackresultspagedata : clear member data when team have no response
added logic to return a player's inventory ID when it is zero to ensure that player IDs are always generated with a valid inventory ID
added a conditional check for ` found ` before breaking the loop to improve flow control and prevent potential infinite loop
added returnType parameter to multiple parser visitor classes to enhance the parser's ability to handle null return values effectively
refactor ` init ` method in ` TileMapRenderer ` to handle blended tiles more gracefully to improve error handling by ensuring ` blended
8151529 : remove unused test class from test / sun / crypto / krb5 / probe. java
added a null check for the last variable and adjusted the calculation of sum in IfcTools2D. java to improve the accuracy of calculations
( chore ) camel - throttler : use'this'instead of'( this - >'this') '
pipeeventbus extensible by add ` ` super. onactionactivate ( )'' to the list of registered pipe events
increased timeout duration from 1000ms to TIMEOUT in ZkControllerTest to allow more time for ZkController initialization
added a test for passcode with client parameters in the TokenMvcMockTests class to ensure correct handling of passcode requests with client parameters
added imports and registered brokenOffsetsConstructors for LengthFilter, TokenStream, and CharArraySet to enhance functionality to handle different input types and ensure compatibility
removed the unused JUnit Ignore import from RandomPlaneTest. java to clean up the code and reduce unnecessary dependencies
fix x86 _ 64bitvumvumvumvum ( pull request )
updated return statements in btCollisionObjectArray, btRigidBody, and btRigidBody _ upcast methods to use btCollisionObject. getInstance
added a method to retrieve the build copyright year and updated the OPENROCKET _ URL in the AboutDialog to improve copyright handling and enhance the
add getdistributedobjects ( ) method to jetclientinstanceimpl. use it in jetclientinstanceimpl.
updated inertia calculations and added debug prints in FinSet and MassCalculatorTest classes to improve debugging information and ensure accurate calculations
changed the semaphore's maximum memory from total memory to max memory to ensure better resource management by using the maximum system memory instead of a fixed
changed exception handling from MetadataException to Exception in StandaloneSchemaFetcher. java and modified method signature in CreateAlignedTimeSeriesPlan. java to improve
switch to bsq to avoid conflict with bsq v1.2
updated JsonLoaderTest. java to replace single quotes with double quotes and added ignoreException and unignoreException methods to improve input handling and ensure
updated the capacity check in ObjectSet. java from a fixed value of 30 to a dynamic value of 0x40000000 to ensure that the
updated import statements and refactored data scale handling in ColumnSnapshotGenerator. java to improve code clarity and ensure decimal digits are only set when
removed the @ AddToRuleKey annotation from several fields in AppleTest. java to simplify the access annotations and improve code clarity
added a security check parameter to the fetch method in FileHelper and TextHelper classes to enhance security by preventing sensitive data exposure
added a test for resolving styles with multiple attributes in ShadowThemeTest. java to ensure correct functionality of styles with multiple attributes
update sheet name check in HSSFWorkbook to use the correct number of sheets to ensure correct sheet handling in the workbook
replaced ` primaryColor ` with ` elementColor ` in ` ManageAccountsActivity. java ` to enhance the visual appearance of the app's
added a null check for replyHandler in DefaultEventBus. java and simplified path resolution in DefaultPlatformManager. java to improve robustness by
added binary collation name configuration to MariaDbDbmsType, MySqlDbmsType, and AbstractDbDbmsType classes to enhance database
added a new method ` whenType ` to handle Optional values based on the class type to improve type safety and provide a default behavior when the
added a method to retrieve the user view destination and simplified navigation logic to improve code clarity and maintainability by consolidating user view logic
replaced Response. ok ( Status. OK ) with a temporary redirect to the application settings service to ensure the application retrieves the public URL from the
[ hotfix ] [ kinesis ] improve error message when deserialization schema be not serializable
( chore ) camel - crypto : update license year for generated file
added a try - finally block around the LeaderElectionTest class to ensure proper resource management and prevent potential memory leaks
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify that the method
refactor the ` read ` method to accept a ` Buffer ` parameter separately to improve code readability and maintainability by reducing redundancy
replaced BufferUtil. allocate with ByteBuffer. allocate in ABCase1 _ 2. java to simplify buffer allocation and improve code readability
changed the return type of prepareStreamsToUpload ( ) from void to boolean and added a null check for mStreamsToUpload to improve clarity
updated comparison logic in AbstractConfigLoader and adjusted test parameters in TestMicroserviceConfigLoader to improve comparison accuracy and ensure valid configurations
added a new file PicOfDayAppWidget. java to handle app widget updates to facilitate the fetching and displaying of day app widgets
bugfix : set default value of internallbvm. service. offering to 0 - for internal lb vm offering
updated HiveParserCalcitePlanner to use HiveRelOptUtil and improved join condition handling to enhance query optimization and support non - equality conditions
added @ Deprecated annotation to multiple transformers to indicate that these transformations are outdated and should not be used in new scenarios
added credentials for user and password in NodeToolCmd. java to enable secure connection to the remote JMX server
removed duplicate BytesRef initialization in Stemmer. java to improve code efficiency and reduce redundancy
updated method calls in AppsCustomizePagedView. java to use mPageViewIconCache instead of null to improve widget caching efficiency and
ggb - 2118 : don't show 3d thumbnail in 3d
updated rotation calculations in GcodeRenderer. java to ensure proper positioning based on rotation direction
added WORKSPACE option to DAEMON and implemented workspace setting in TerminalClient to allow users to specify a workspace directory for better configuration management
updated test file from " apt " to " html " in CLIManagerTest. java to ensure the test outputs the correct HTML content
replace public test methods with asserts in ScimUtilsTest to improve test reliability by using JUnit 5 assertions
updated session attributes and method signature in OAuthConfirmationController. java to improve clarity and functionality of session attribute handling
added a call to ` assertTrueEventually ( ) ` after clearing the ` stats ` collection to ensure that the ` getSecondLevelCacheHitCount `
updated EventBusHook. java file to improve event handling functionality
updated test cases in MultiPaintEventTest. java to improve test coverage for multi - paint events functionality
removed the'final'modifier from the mNewScale assignment to allow for potential modifications to the mNewScale variable
refactored methods in SyncFactory. java to improve code readability and maintainability
added handling for uniqueKeyField in LukeRequestHandler to ensure the correct identification of unique keys during Luke requests
added roundBorderColor functionality to Border and EditableResources classes to enable customizable border color settings
add compilerasserts. neverpartofcompilation ( ) to avoid test failure.
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulingtest
added logging statements to ` GatewayRSocket `, ` GatewaySocketAcceptor `, and ` PingPongApp ` classes to enhance debugging
added menu itemClickListener to RecentChatFragment to enhance user interaction by allowing users to click on the " construction " menu item
changed InfoDropTarget to extend UninstallDropTarget and modified the startDetailsActivityForInfo method to return a boolean indicating success or failure to
replace ` add ` and ` removeTail ` methods with ` push ` and ` pop ` methods in several classes to improve clarity and functionality of
updated URLs from " https : / / test. wikipedia. org / w / api. php " to " https : / commons. w
refactor index management by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by reducing redundancy
replaced ` Collections. sort ` with direct calls to ` AnnotationAwareOrderComparator. INSTANCE ` in multiple classes to simplify code and improve readability by
added date pattern patterns to the FormatData _ hr _ HR. java file to enhance date formatting capabilities for better compatibility
added a line to clear the focus in the clickedView to improve user experience by ensuring the clicked view loses focus
replaced ` notifyDataSetChanged ( ) ` with ` setSelection ( position, true ) ` in ` DescriptionsAdapter. java ` and modified selection behavior
updated time zone name from " WSST " to " WSDT " across multiple files to ensure accurate representation of the time zone designations
added native methods for registering global and weak registrations, and refactored access field handling in FastGetField. java to improve accessibility
added default value handling for UNION and NULL types in ReflectData. java and corresponding tests in TestReflect. java to ensure correct schema
increase timeout for seda blockwhenfull test
added a null check before remapping the resource class in ResourceMerger. java to avoid potential NullPointerException when the r class is not set
added constructors to various dialect classes that require a database version to ensure proper initialization of dialect instances for database compatibility
http : / / issues. apache. org / jira / browse / amq - 3682 - add connection close header to the http
increased timeout duration from 60000ms to 120000ms in BasicDistributedZkTest. java to allow more time for distributed operations
added assertion to verify that final price is greater than zero for ticket status'FREE'to ensure that ticket status'FREE'is
refactor Parser class to improve code readability and maintainability
refactor CASProcessingFilter to improve code structure to enhance maintainability and readability of the filter logic
refactored template parser to use getfirstelementchild ( ) instead of getFirstChild ( ).
[ optaplanner - testdata ] fix infinite loop in look - up strategy
[ java ] : add ClusterNode. waitToShutDown ( ) method to wait for instance to be shut down.
change log level from warn to info in elcontextcleaner
set the content type from " application / octet - stream " to " application / octet - stream " to ensure proper handling of binary data in
added getQueueSize method to LazyTraceThreadPoolTaskExecutor and created corresponding unit tests to ensure correct retrieval of the queue size from the task executor
fix distanceop for geometry that don't use the minimum envelope
renamed the variable'required'to'requiredLabel'in AbstractUITag. java to improve clarity by using a more descriptive name
replaced the next ( ) method with a call to updateProgress ( ) in PurgingPartitionIterator. java to streamline the code by elim
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use this method
added getHeight ( ) and getWidth ( ) methods to BaseMonochromeBitmapSource to provide methods for retrieving bitmap dimensions
added validation to ensure local vertices contain at least 3 points to prevent illegal argument exceptions during polygon processing
replaced ObjectMapper instantiation with ObjectMappers. newDefaultInstance in multiple test files to ensure default values are set for JSON serialization
bug fix : coeffSquarefree be not initialized when coeff be null
drill - 47384 : fix externalnamerecord. readtitles ( ) when multibyteflag = 0.
camel - jms : fix checkstyle violation in abstractjmsprocessor
added logic to exclude username and password prompts in the LoginInfoEndpoint to ensure sensitive data is not present in the login process
updated listener removal logic to use a conditional check to improve efficiency by avoiding redundant operations
added a case to handle the'spin'action in the PieChartActivity to enable the functionality to toggle the spinning of the chart based
xenserver return null in copy _ vhd _ to _ secondarystorage when copy _ vhd fails
hbase - 25836 hmaster should not create table under namespace quota if the namespace do not have quota
removed unused imports and added a resize method for pressure to streamline import statements and enhance pressure handling functionality
added a static method ` propertyValuesOf ` to ` PropertySupport ` and created a static method ` propertyValuesOf ` to improve code readability
temporarily ignore this test until the real problem be fix
fix the hopperhock not center the item's bounding box properly
added authentication dialog implementation in SsoWebViewClient. java to enhance user experience by providing clear authentication prompts
added methods for ID generation and improved document deletion logic in TestStressIndexing2. java to enhance test reliability by ensuring unique
[ flink - 22559 ] [ table - planner - blink ] ignore udtfpsertkafkaitcase. test
replace ` dtohs ( chunk. size ) ` with ` computeIfAbsent ( j, k - > new ArrayList < > ( ) ) `
added a configuration to configure deserialization behavior to accept single values as an array to improve flexibility in handling array types during deserialization
updated localization information in VersionChangeLogs. java to include localization updates for UK, and SL
replace hardcoded string array with resourceutil to get string from resource
updated the `InstanceOf ` method to accept ` RelExpressionContext ` instead of ` ExpressionInstanceOfContext ` to improve type handling in AST expressions
nifi - 4985 : added mime type attribute to gethttp response
updated provenance handling in BaseHapiFhirDao and ResourceHistoryTable, and enhanced test method in FhirSystemDaoTransaction
updated button identifiers from exit _ button to doneButton and added a searchable check in SearchBookContentsActivity to clarify the purpose of the button
fix checkstyle issue in natsconfiguration. java ( # 786 )
refactor ` invalidateStalePartition ` method to accept a ` List < PartitionNameWithVersion > ` instead of a ` PartitionNameWithVersion `
use buffer. isfull ( ) to check if the max number of result be available
replace ` ic _ group ` with ` ic _ chat _ bubble ` in multiple adapter files to enhance user interface aesthetics by
replace ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver ` and its test to ensure correct retrieval of data from the latest counter
updated import statements and method names in MocksCreationTest. java to improve code readability and maintain consistency with naming conventions
added a constant for CSVThirdEyeDataSource and changed the visibility of the generateDetectionConfig method in YamlDetectionConfigTranslator to improve code clarity
updated awaiter timeouts from 10 seconds to 30 seconds to provide more time for phaser synchronization
removed the ` BuildSlaveFinishedStatusEvent ` class and its associated functionality from ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
fix findbugs encode warning in vmwarestemplatemanagerimpl. java
[ ds - 3940 ] add test to verify workflow item deposit
distinct from classpath file processing in ClassLoaderSupportImpl to ensure unique entries are processed for each classpath file
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unused functionality
refactor argument processing to use contains method instead of equals for better readability to improve code clarity and maintainability by avoiding string comparisons
added logic to delete a table if it is not an external table in HiveMetaStore. java to ensure proper resource management and prevent operations on external
hive - 17515 : make async execution wait queue size configurable ( jesus camacho rodriguez, review by
added a try - catch block around the dismissDialog method call to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a constant for task role and component name instead of a hardcoded string to improve code readability and maintainability by reducing
make sure that the correct conferencing state be store in the conferencingdocument
reload the flutter log tree whenever a new log entry be add. ( # 4898 )
updated return conditions in ChannelEndPoint. java to include input shutdown check to ensure proper handling of non - input and non - output shutdown sockets
updated SetNullableGenerator. java file to improve code clarity and maintainability
camel - 13663 fixed the c error of camel - example - reportincident
updated import statements and refactored form submission logic in NettyRoutingFilter. java and FormIntegrationTests. java to improve code clarity and ensure
added @ ApiOperation annotations to AbstractBaseService, IBaseService, MyEndpointWithInterface, and MyService classes to support API operations with parameter
modified lifecycle listener management in Lwjgl3Application and Lwjgl3Window to ensure proper management of lifecycle listeners before disposal
updated the FG _ FK color from 90 to 200 in UIUtil. java to improve visual consistency and aesthetics in the UI
fix warning : soundmanager. getsoundfiles ( ) return invalid sound file
fix failure in secondaryindextermanagertest
added support for the PMD bundle version in the Preferences page to enhance user experience by providing clear versioning information
[ hotfix ] [ test ] use ` findthrowable ` to locate ` ioexception `
updated MediaFormatUtil. java to improve media format handling to enhance performance and maintainability of media processing
added ` isCellEditable ` method to ` GeneralTab ` class to ensure cell editing functionality is properly implemented
added a new method ` isOnlyPrintCommands ( ) ` and modified the ` messageTemplate ` to conditionally display unused dependencies to enhance command handling
updated VocalTractModifier and VocalTractScalingProcessor to increase vscales from 2.0 to 1.0 to improve scalability and performance
updated import statements for BaseScalarUdfTest in both BaseScalarUdfTest and TestGenericUDFConcat to ensure correct usage of test
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthentication
make testskeletoncontrolrefresh work with hw skinning
rename NodeFilter to NodeCountFilter in NodeUtil. java to improve clarity and consistency in naming
updated the condition in NodeImpl. java to check for SYNC _ FETCH _ BATCH _ NUM to ensure proper validation of sync block size
updated state and type assignments in DebugExpressionParser. java to ensure correct type handling and improve type parsing accuracy
updated dependency resolution logic in ExcludeDependency. java to improve accuracy in dependency resolution
refactor method name from'tmp ( )'to'dst2 ( t v )'in Vector. java to improve clarity and consistency in
initialized the ` args ` array in ` GridHubConfiguration ` to ensure proper initialization of the ` args ` array
replaced ` List ` with ` ImmutableList ` for linker flags in ` RustBinaryDescription ` and added a new method ` getLinkerArgs `
[ te ] test ] add travis and appveyor test to testpropertiess
added functionality to include dag name in LLAP splits logging to enhance logging details for better debugging and tracking of LLAP splits
removed the import of ` java. io. File ` from ` TileAtlas. java ` to streamline import statements and improve code clarity
refactor EscapeProcessingOutputStream to use AtomicBoolean for managing closed streams to improve thread safety and clarity in handling closed streams
updated the ` validateQuery ` method to accept an additional ` Object. args ` parameter to improve error message formatting for query validation failures
updated INDEX _ VERSION from 1 to 2 and refactored getTree method to improve code clarity and reduce redundancy
[ flink - 1133 ] [ kryo ] add test to verify that all registered kryo registrations have be change
added null check before removing configuration properties in BlueprintConfigurationProcessor. java to avoid potential NullPointerException when modifying configuration
updated Boolean handling logic in MetaStoreDirectSql. java to improve clarity and error handling for Boolean conversion
added hideCustomizationDrawer ( ) method to Launcher. java to improve user interface by hiding customization drawer functionality
replaced hardcoded warning key " uniqueKeyFieldName " with a constant from TV _ KEY _ WARNINGS in TermVectorComponent. java to improve maintain
added a flag for optimistic types and modified logging behavior to enable or disable optimistic types to improve logging clarity and control over optimistic types
updated Expect class to improve functionality to enhance performance and maintainability of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enable access to Docker with a Unix socketer in
added JUnit 5 test methods for handling " flaky " tests in CloseableDoSFilterTest to improve test reliability and reduce flakiness
camel - 13709 : camel - reactive - notify consumer should not throw exception if no active subscription
refactor ` vectorizeMRTask ` to ` convertMapWork ` for improved task handling to enhance code clarity and maintainability by consolidating task
updated the superclass constructor calls in StringAppender and LogDivertAppender to include a new boolean parameter to enhance functionality by allowing conditional logging behavior
fix null pointer exception when remove guicomp node
make sure weak function be treat a weak function
refactor multiple Java files for consistency to improve code maintainability and readability
no effective change - add unit test for defaulttransactionthreadlocal
added validation for operation handles in HiveStatement to ensure only valid operation handles are processed
rename the variable ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` to ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _
camel - aws - secrets - manager : added unit test for camel - aws - secrets - manager
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
updated the response formatting in UserREST. java to improve readability of the email error message
modified the ` fromContent ` method to include a ` subTree ` parameter to allow conditional handling of nested tree scenarios
modified the column width calculation in ` Sheet. java ` and added a new test method in ` TestHSSFSheet. java ` to ensure
added a configPath parameter to the Commands. less method call to provide additional configuration information for command execution
replaced instances of ` Set ` with ` Collection ` and ` List ` in several Java files to improve code consistency and leverage built - in collection
update the default value of " sshd. container. image " from " sshd @ sha256 : 18aa929c6532
remove an assert statement that check if hostId is not null to ensure that hostId is not null before proceeding with operations
replaced the conditional logic for generating the rawKey with a blockSingleValIterator to simplify key generation logic for multi - valued columns
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and updated its implementation to improve test clarity by differentiating
fix recipe that be not add to the gate, fix recipe that be not add to the gate.
rename method ` put ` to ` putObject ` in ` GraphHopperConfigMixIn. java ` to improve clarity by indicating the
modified visibility logic in CellLayout and renamed the drag exit method to be private to improve code readability and encapsulate drag exit logic
updated ` ModifyRequestBodyGatewayFilterFactory ` to use ` getRewriteFunction ( ) ` for handling ` originalBody ` to improve the handling of
updated method to include a check for package accessibility in multiple finder classes to ensure that only accessible types are processed
changed log level from warn to trace in LoggingHandler. java to provide more granular logging during normal operations
fix #348 : handle wildcard in white blacklist ( #348 )
added options menu functionality to the GalleryActivity for managing gallery images to enhance user experience by providing an option for selecting gallery images
added a null check for the MongoDBService instance in MongoDBServiceFactory. java to improve robustness by ensuring a valid service is provided before
fix : inline constant mutator should not place final boolean value
[ hotfix ] [ test ] fix recordtest. teststatedecode with a blackhole
fix : update gapic - generator - java with mock service generation fix ( # 317 )
[ knx ] fix nullpointerexception when read group address ( # 11543 )
clear the witnesses list in ManagerTest. java to ensure proper cleanup of witnesses after tests
fix : jdbcpagesink should not throw a prestoexception
removed the stack property from the script object and replaced it with getter and setter methods to streamline stack management and enhance encapsulation
added a check to return false if the path name starts with a ". " to ensure that the path format is valid and avoid potential errors
renamed the variable ` onboard ` to ` autoLoadPinotMetricsService ` and updated related method names to clarify the purpose of the variable
added a call to clearIndex ( ) in BasicFunctionalityTest. java to ensure the index is cleared before further operations
change boldweight _ normal from 190 to 0x190 to ensure consistent bold weight formatting
changed ` fThreadGroup ` to ` volatile ` and made the ` fLookForStuckThread ` variable final to improve thread safety and
reformatted the ` getValue ` and ` setValue ` methods in ` ValueResultData. java ` to improve code readability and maintainability
updated the hashCode method and equality check in FuzzyQuery. java to ensure proper comparison and prevent null pointer exceptions
removed unnecessary print statements from PushedResourcesTest. java to clean up the test output and reduce clutter
changed return type of removeFile, removeDirectory, and removeFile methods from SharedOpenFilesCache to void to improve method usability by allowing
update JDBC driver version from 2.5. 1 to 2.5. 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to ensure compatibility
updated attribute retrieval and principal creation logic in PersonDirectoryPrincipalResolver. java to ensure that the principal is properly resolved and improve logging clarity
changed log level from info to warn for ZigBee USB Gateway and BUS Gateway errors to improve logging clarity by using a warning level
update hash function signatures to use ` ^ ( key & mask ) ` instead of ` intHash ` and ` longHash ` to improve hash
added a new method ` ThumbnailGenerationTask ` to validate ` storageManager ` and ` account ` before executing thumbnail generation to ensure proper initialization and
modified the condition in the loop to check if the number of attempts is below 5 to ensure that the loop does not exceed the maximum count limit
add test case to reproduce bug 1933922
removed unnecessary whitespace in comparison logic and condition checks to improve code readability and maintain consistency
updated the validation condition for the character 0 - 31 in FileResolver. java to ensure that only valid control characters with a maximum of 32 are
added focus request to the display component to improve user experience by ensuring the component receives focus
update test data for instructor home page ui test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming
updated Crouton dismissal and refactored notification logic in DetailFragment. java and MainActivity. java to improve Crouton handling and
added a new test method for schema query and fetch with unrelated templates in IoTDBSchemaTemplateIT. java to ensure that schema queries
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
replaced Runtime. getRuntime ( ) with ProcessBuilder to modify process creation to remove JAVA _ TOOL _ OPTIONS environment variable
make test more robust against bad host name
refactor Metrics class to use a loop for collecting subsystem paths to improve code readability and maintainability by consolidating subsystem assignment logic
added assumptions in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed when macOS is available
move jvmciversioncheck. validateproperties into jvmciversioncheck. getrequiredproperty.
updated Mockito library version to ensure compatibility with recent features and bug fixes
updated test cases for ` TestLargePageUseForAuxMemory ` to improve test reliability and performance
updated method calls in BinaryParser, PlainTextParser, and ParsingExecutionContextView to include charset handling to enhance parsing functionality by allowing charset management in
added a new enum ` MultiPartFormDataCompliance ` and modified ` HttpConfiguration ` to set and get the ` _ multiPartCompliance
added support for JDK 17 in GradleDistributionManager to ensure compatibility with JDK 17 features
added a method to add type in SnapshotControl and refactored type addition logic to improve code clarity and maintainability by encapsulating type addition
refactor Term class to improve code structure to enhance maintainability and readability of the code
updated return statement to handle null or empty runWith to improve robustness by preventing potential null or empty values
resolve http : / / issues. apache. org / activemq / browse / amq - 2677
updated multiple Java files including AudioDeviceInfoBuilder, MediaCodecInfoBuilder, ShadowActivityManager, ShadowAsyncTaskLoader, ShadowBiometricManager
pdf417 : fix localblockbinarizer's getuminances ( ) to return luminances [ offset ]
added a temporary value for ` mTintAmount ` before setting dimension alpha and icon color tinting to ensure the correct color tinting
added a new file SumZeroFunctions. java to implement sum zero functions to enable sum zero aggregation functionality in the execution context
[ flink - 2594 ] [ table - planner - blink ] fix npe in firstvaluefunctionit and nthvalue
hbase - 15410 fix npe in bucketcache. getallocationfailwarningmessage ( )
added a null check for propName before adding properties to the roleObject to avoid potential NullPointerExceptions when propName is null
replaced private fields with @ VisibleForTesting annotations in StatusBarTouchController. java and added a new method in RecentsView. java to improve
added methods to log containers with stream parameter to improve container management by allowing clients to log their containers to indefinitely
add performance test for mvstore. putall ( )
replace LONG ( " Long ", " L " ) with LONG ( " Long ", " J " ) in PrimitiveType. java to
changed the return type of delegatingApplicationListener from instance to static to allow the method to be called without an instance of WebSecurityConfiguration
camel - rest - dsl : null body should not be store in exchange. message body should be null
added a new file ` FileDeletingTasklet. java ` and its test class ` TaskletJobFunctionalTests. java ` to
euclidianview : fix updatestartialondrawables ( ) bug
updated hex digit calculation in BitUtil, Int2IntCounterMap, and Int2IntHashMap classes to improve correctness in byte shifting operations
updated ` sendEventToTest ` method to use ` stateOrdinal ` instead of ` eventTag ` to improve event handling by associating state with
added checks for video thumbnail request user - agent in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on user -
bugfixes suggest by timo boehme ; fix highlighting when there be no line
updated the titleArea to accommodate different menu button sizes based on the theme settings to enhance the title area to accommodate different UI
added a preload configuration for the " libskia " library in the Skia. java file to ensure proper loading of the Skia library
add net. bitcoin. unittest a an optional parameter to enable unit test
added validation to ensure format arguments are not empty in QueryCommand to improve error handling for invalid format arguments
updated variable names and logic for better clarity in IntIterator. java to improve code readability and maintainability by using a consistent naming convention
updated ` walkRuleAndAdd ` method to include ` projectConfig. getSrcRule ( ) ` as a parameter and added logic to check
added support for customizable source overrides in PatchModuleFileManager to enhance flexibility in managing module paths during patch processing
[ java ] : only compare consensusmodule. format. major with consensusmodule. format. major.
modified the default policy settings for OwnCloudClientManagerFactory based on SAML authentication to ensure consistent behavior across different authentication systems
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure required fields are provided when building batches
remove unnecessary try / catch block in onmessagesubscriber and jmssampler
refactor ` AnonymousAuthenticationFilter ` to use a ` Supplier < SecurityContext > ` for deferred security contexts to improve flexibility and maintainability of the authentication
updated the ` removeActor ` method to include a ` unfocus ` parameter in the ` Group ` and ` Actor ` classes to enhance actor
changed the variable name from " managed _ schema _ configs " to " validConfigs " in prompt calls to improve clarity and consistency in configuration validation
added logging capability and improved handling of response writing in NettyHttpServer and NettyHttpServerConfiguration to enhance logging capabilities and ensure proper resource management during
refactor multiple Java classes to improve code consistency to enhance maintainability and readability of the code
replaced direct call to ` update ( ) ` with SwingUtilities. invokeLater ( ) ` in ` CodeDependenciesPanel. java ` to ensure that the
camel - 5393 : fix the issue that groovy can not be instantiate from the input stream
pluginmanager. getresolvedartifacts ( ) now return a set instead of an empty map.
changed access modifiers from package - private to public for several methods in CliFrontendParser and ProgramOptionsUtils to allow access to these methods from
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to improve
added storageAlias assignment and enhanced certificate chain logging in HttpsMessenger. java to improve clarity and debugging of certificate management operations
simonstewart : throw a webdriverexception if text can't be convert to the response
changed access modifier of updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access the updateImage method for
fix drop on serverlevel ( # 49881 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality by enabling retrieval and management of spatial location calculator configurations
updated multiple Java files including CommunityDetection, ConnectedComponents, GSAConnectedComponents, GSAPageRank, and SingleSourceShortestPaths to
replace ` keySet ( ). isEmpty ( ) ` with ` isEmpty ( _ root ) ` and add a new method ` isEmpty ` to check
update method calls in AttributedStringBuilder to use parameters r, g, b instead of a specific column to improve accuracy in rendering text with
updated fingerprint handling in PeerSync and added system property management in PeerSyncTest to ensure fingerprint functionality is controlled by system properties and improve test reli
change visibility of the moveFunds method from private to public to allow access to the method from outside the class
replaced ` maybeEmitEvent ` with ` maybeEmitEvent ` in ` MongoTemplate. java ` and added ` setApplicationContext ` method
fix collectioncontainer. settransaction ( ) and collectionitem. setdata ( ) bug fix
- fix for tika - 1188 -- close input stream in tika - app
updated JSON string format and changed exception handling from ApiBag. ExceptionWithErrObject to ApiBag. ExceptionWithErrObject to improve flexibility in
updated configuration loading syntax in OptionsParser. java to improve code readability and maintainability
change teammateslog message to teammateslogmessage in test
[ beam - 8470 ] fix checkstyle violation in externalworkerservice and jobservicepipelineresult
removed the ` step ` variable and related getter / setter methods from ` HmDatapoint ` and ` DisplayTextVirtualDatapoint ` classes
add test for exclusive lock release on postgres read write
basenchedullerserviceimpl # schedulejob should call schedulernJobs ( ) method instead of schedulejob ( ) method ( #
simonstewart : fix a dumb issue in the testgettextcontent.
replace static variables with a ThreadLocal instance for logger management to improve thread safety and maintainability of logger handling
make functioninitializer non - mock so test can run without jmockit
added a boxedTypeOrType method to the Types class and modified type checking in the Infer class, and created a new class T6
updated task focus handling in RecentsView. java and removed a method call in TaskView. java to improve task focus management and streamline
hbase - 25836 testflushfromclient # testflushfromclient hang due to race condition in testflushfromclient. testflushfrom
added logic to delete a track repository based on contract details to ensure that changes to the original repository do not interfere with transaction processing
added TOKEN _ ISSUE _ FEE constant and refactored balance setting logic in TokenIssueProcessor and Program classes to improve fee precision
refactor RealisticRenderStrategy to introduce a cache mechanism for old texture and URL handling to improve texture management efficiency and error handling during texture destr
refactor raster creation and composition in Blit. java and add a new Bug7049339. java file to improve code clarity and introduce a
added support for unselected styles in the Label and DefaultLookAndFeel classes to enhance flexibility in string width calculations based on the selected style
updated ArrayList initialization to initialize with a size of 0 for various collections to ensure that the initial capacity of collections is initialized for optimal performance
removed the'flags'parameter from several methods in ShadowApplicationPackageManager to simplify method signatures and improve code readability
updated imports in PingRequestHandler. java to improve code clarity and maintainability
added a new URI constant for MP4 assets with increasing timestamps and removed the Util. SDK _ INT constant from several test files to ensure compatibility
updated firmware check logic in TradfriGatewayHandler. java to improve clarity and correctness of firmware upgrade warning message
refactor AjaxElementLocator for improved functionality to enhance performance and maintainability of the code
updated layout checks in BoxLayout and DefaultLayout classes to support table - cell display in addition to inline layout elements
refactor JsonDecoder to improve handling of JSON parsing levels to enhance readability and maintainability of the code
added removalCause parameter to the RemovalListener's releaseLocation method to enhance location management by associating removal actions with specific causes
added JUnit Ignore annotation to SavepointTestBase. java to temporarily disable tests that are not ready for execution
jbrules - 2623 add @ test annotation to droolmvelparsertest
changed fields in ContextRegisterListener from non - final to final to ensure immutability and prevent unintended modifications
modified the constructor and iterator initialization in ObjectHashSet and added new test methods in ObjectHashSetIntegerTest and ObjectHashSetIntegerTest to improve iterator management
added batch byte handling in SparkReduceRecordHandler, ReduceRecordSource, and VectorizedRowBatch classes to ensure batch processing does not exceed predefined
changed MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE
updated logging messages and added handling for connection termination in JdbcProxyGenerator. java to improve clarity of log messages and ensure proper resource management during closure
updated the animation state check and added a method to set the important for accessibility to improve accessibility handling based on the current state and
hbase - 15410 log level should be at debug instead of warn
refactor scope handling in UaaTokenServices and add unit test for persisting a scope long than 1000 characters to improve code clarity and ensure proper
updated import statements in SchemaRetrievalOptionsBuilderTest. java and renamed class name in AvailableJDBCDrivers. java to improve code clarity and
[ kie - api ] add executablecommand interface for execute ( context )
camel - 13709 : remove itest - jdbc - itest - itest - jdbctableservice be no longer use
added padding methods to CellLayout and modified bitmap creation logic in Launcher to improve layout handling and ensure proper bitmap scaling
added a length check before filtering candidates in LineReaderImpl to avoid potential errors when the candidate list is empty
refactor ` SamlMetadataUIParserAction ` to use ` Action ` instead of ` SamlMetadataUIParserAction ` to improve code clarity
added a method to check OpenPorts in LdapMockMvcTests. java to ensure port compatibility during tests
log4j2 - 1342 - reduce the number of call to executorservices. shutdown ( executorServiceDeamons, int, int )
updated URL handling logic in Fetcher and HTMLMetaProcessor classes to ensure URLs are updated only when new URL changes
changed the query syntax from " * : * " to " name : samsang " and updated the assertion message format to simplify the query
refactor terminal initialization to support compatibility with old Karaf Console API to enhance compatibility with newer Karaf Console API standards
modified the ` getVerticesColors ` method to include compatibility check and adjusted the initialization of ` verticesColors ` to ensure compatibility with BBMesh
added EXCLUDE _ TIMESTAMPED _ REPORTS _ DIRECTORIES import and modified the copyDirectory method to handle specific file patterns to
refactor test method names and add parameterized validation for email validation to improve test readability and maintainability by using parameterized tests
pdfbox - 4892 : remove unused method, a suggest by valerybokov
added a null check for bindStatus in FieldUtils. java to throw a TemplateProcessingException for missing form errors to ensure proper error handling when
removed a debug print statement from JoglInput. java to streamline output for better readability
added a static flag ` allowExtractingPrivateFields ` and a corresponding method to allow field extraction with private fields to enhance flexibility in field metadata
replace " { name } " with device. getName ( ) in WebDataHandler. java to ensure that the device name is properly formatted for
replaced the direct instantiation of the constructor for Lookup with MethodHandles. lookup to improve compatibility with Java 8 and enhance method resolution
updated the weights method signature from ` weights ` to ` weightsByDouble ` and marked the method as deprecated to indicate that the method is outdated
updated writeCustomHTML method signatures to include the Database parameter across multiple classes to enhance functionality by incorporating the database context
updated key storage and deserialization logic in BTreeMap. java to improve code clarity and ensure correct handling of null values
updated exception handling in CancelDeferredTransactionContractActuator, UpdateDeferredTransactionContractActuator, and TransactionTrace to throw specific exceptions and improve error
bugfix : disable zero size write to a large file in the profiler
updated logging behavior and improved license message sending in the Main class to enhance error reporting and ensure compliance with Liquibase Pro license requirements
change the buffer size from 14 to 13 byte in HortonworksEncodedSchemaReferenceStrategy and HortonworksEncodedSchemaReferenceWriter to
added ItemReadListener import and implemented ItemReadListener in multiple Java files to enhance item handling capabilities in batch processing
refactor code for improved readability and consistency to enhance maintainability and clarity of the code
updated print statements in SearchFiles, SortedSetDocValuesFacetCounts, and MessageFilesParser to simplify output and improve code readability
updated test cases in Test7005594. java to improve test coverage and ensure accuracy of functionality
update error message format in ResourcesValidationProcess. java to improve clarity and consistency in error reporting
updated TopKRollupPhaseOneJob. java file to improve job organization and enhance code clarity
cs - 15432 : fix npe in case where nic. getip4address ( ) return null
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and added a new ` MCOptionUtils. MCO
replaced deprecated method ` iteratesOverSequence ` with ` iteratesOver ` and updated import statements in ` IterableSubject. java ` and ` IterableTest
camel - 9441 : avoid potential arrayindexoutofboundsexception in camel - http
hhh - 11446 add test case for count ( * ) on oracle
added LargeValueFormatter to BarChartActivityMultiDataset and BarLineChartBase, and updated value formatting in Chart and BarLineChartBase classes
add INNOCUOS _ CHAR constant and modify character removal logic to improve handling of comments in the parsing process
remove @ suppresswarnings ( ` ` argument. type. incompatible'' ) from platform. java
updated the printLir method call formatting in TraceLinearScanLifetimeAnalysisPhase. java to improve code readability and consistency
added a TODO comment to the NullAssertionValidator class to improve code clarity and maintainability
added support for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances in the build process
added system profile directory creation in PmsConfiguration. java and improved test setup in DLNAMediaInfoTest. java to ensure system profile directories
changed the instantiation of ` createThreadFactory ( ) ` to ` createThreadFactory ( ) ` in ` TestcontainersDockerCmdExecFactory
added a new LongAdder implementation in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to provide a mechanism for retrieving messages from the receiver
added the " accept " attribute of " image / * " to the ImageFileInputDialog to allow images to be accepted by the user
updated import statements and refactored transport client initialization in ElasticIndexWriter. java and TestElasticIndexWriter. java to improve code clarity
added detailed information about witnesses and their class types to improve debugging output by providing clearer context about witnesses and their types
added a new file ` NullPointerAndEmptyArrayTest. java ` to test the behavior of ` NullPointerAndEmptyArray `
updated the method for finding generated source paths in BaseIjModuleRule. java and deleted the test class TestIjProjectConfig. java
added a new method ` constructSimpleWildcardPatternWithAnyCharDelimiter ` and updated wildcard handling logic in ` UaaStringUtils ` to enhance
added validation for TableScanOperator aliases in Vectorizer. java to ensure proper handling of invalid aliases to work
updated import statement for MockitoJUnitRunner and removed exceptionThrowingGeoLocationProvider's exception handling to align with the latest Mockito API changes and
added error handling for firmware settings in TinyGFirmwareSettings. java to improve robustness by logging errors when setting values
replaced multiple specific imports with a wildcard import and refactored the getLangs method to return a sorted set to simplify import statements and improve
rearranged import statements and assertions in LazyTraceScheduledThreadPoolExecutorTests. java to improve code readability and maintainability
hbase - 25836 takesnapshothandler should have a prepare ( ) method that take table lock
[ j2kt ] implement finally via control flow and throw statement for null reference.
added a test method to verify the behavior of the HTTP _ RPC endpoint in the DockerQuickstartTest class to ensure that the OkHttpClient correctly
added a ` isSuspended ` field and modified thread state checks in ` Thread. java ` to ensure that an IllegalThreadStateException is thrown when
updated Javadoc visitation methods to handle DCTree. DCReferenceTree instances to improve the accuracy of Javadoc documentation representation
camel3 - core : fix npe when use single camel context with multiple service and proxy
removed redundant @ Override annotations from multiple security classes to improve code clarity and maintainability
added module import handling in Java2TypeScriptAdapter and updated eval method to include a static field to enhance the transpiler's ability to
use http : / / www. w3. org / 2001 / schemauri instead of http : / / www. w3. org
added content description handling for badge notifications in BubbleTextView to improve user experience by providing appropriate content descriptions based on badge status
added a mouse wheel listener to capture wheel rotation direction to enhance the robot's ability to respond to wheel movement events
pdfbox - 4892 : ensure that the current document be close to avoid memory leak
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
fix indexoutofboundsexception in vacuumview
removed specific currency conversions for DSH, QTM, and QTUM in BitfinexAdapters. java to simplify currency retrieval logic by
updated JsonFormat. java to include new protobuf fields and implement a flag for always output default values to enhance the protocol's handling of optional
added handling for array and enum types in JacksonXmlFormatMapper to ensure proper serialization of array and enum types in JSON output
updated variable names and introduced new constants for PARKED, TERMINATED, and SUSPENDED in VirtualThread. java to improve clarity
updated DirectoryTaxonomyWriter and NameIntCacheLRU classes to enhance taxonomy handling and improve code clarity
refactor methods in VetoableChangeSupport. java to improve code readability and maintainability
adjust calculation for height by subtracting 1 from owner's height to ensure correct positioning of content within the specified height
pdfbox - 4892 : remove ` ` invalid password'from signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure proper
ggb - 2118 fix : close button text don't disappear
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory files to improve code clarity and maintainability
updated sleep durations in BackendInitializerHelper, TerminalClient, and GcodeParserUtilsTest, added new test cases for axes in Gcode
updated conditions for version checking in SwingStartup. java to improve accuracy in identifying release statuses
added configuration option to include generated file comment in the migration process to ensure that generated files are not modified during migration execution
updated argument syntax from " < player > " to " < player | * > " in multiple files to enhance command syntax flexibility by allowing wildcard
deleted ` BadHdfsThreadsFilter ` and ` BadZookeeperThreadsFilter ` classes to remove unused filters to streamline the codebase
updated method names from ` nameVariableName ` to ` optionName ` in ` OptionProcessor. java ` to improve clarity and consistency in method
added a condition to check for parallel execution in TestNGContentHandler. java to enable support for parallel execution in XML tests
( chore ) camel - kvm : use stringutils. isempty to check for empty string
refactor : remove static import of enums and variables in ctmethodimpl. java ( # 2858 )
added serialVersionUID to multiple exception classes to ensure proper serialization compatibility across different versions
rename DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve clarity and consistency in naming conventions
updated ShibbolethCompatiblePersistentIdGenerator to use a constant separator for hashing to ensure consistent hashing behavior across different operating systems
npe in system _ actions. xml if system _ actions. enabled be set to false
add a new Person class in the org. apache. maven. it0074 package to facilitate the representation of a person's
fix bug where localendpoint be not resolve. patch by jbellis
modified the indexOf method call to use toUpperCase ( ) for column label comparison to ensure consistent casing of string values in the code
add time column and time unit fields to the metadata in SegmentMetadataImpl to ensure proper handling and retrieval of metadata data
updated color import from java. awt. Color to net. sf. openrocket. util. Color in SimulationPlotPanel. java
added disconnectEmitters. onNext ( new Object ( ) ) method call in NettyStreamingService. java to ensure that disconnectEmitters
changed the method from ` getAnnotationNamesByStereotype ` to ` getAnnotationTypesByStereotype ` in ` DefaultBeanContext
danielwagnerhall : fix click on hidden element
added a try - catch block around the dismissDialog method call to handle potential exceptions during dialog dismissal
jbpm - 19752 - use a custom jndi location for jtatransactionmanager by default
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
added a method ` hasFunction ` to the ` Library ` class to provide functionality for checking function presence in the library
rename variable ` enabledCiphers ` to ` result ` for clarity to improve code readability and maintainability
[ beam - 8470 ] change timestamp type to microst in bigqueryutils. writesnapshot
replaced explicit null checks with requireNonNull for buffer and user credentials in Identifiers and DatabaseConnector classes to improve code robustness by ensuring non -
use getOrdefault ( ) instead of get ( ) in valuesresolver. coercevalue ( )
added bounds checking for row and column in FlightConfigurablePanel. java to ensure valid indexing and prevent potential IndexOutOfBounds exceptions
added scrollSelectionVisible ( ) method to ThrustCurveMotorSelectionPanel. java to ensure proper scrolling behavior in the motor selection panel
[ java ] unnecessarylocalbeforereturn - false positive with sourceforge bug
refactored the initialization of ` scriptEngineManager ` and removed the null check for ` scriptEngine ` to improve code clarity and ensure proper
mahout - 4957 : fix corner case in euclideandistancesimilarity.
don't run incremental backup if there be no sstables
added a new method ` relativize ` to ` MorePaths ` for processing paths with and without dot separators to enhance path relativization functionality to
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure correct formatting of column size and decimal digits
fix test to skip current writer head file 1. log. tmp
replace ` toHexString ` with ` toJsonHex ` in ` TronJsonRpcImpl. java ` to improve consistency and clarity of byte representation
renamed ` ErrorHandlerController ` to ` Error403Controller ` and added new classes ` Error404Controller ` and ` Error403Controller ` to
replaced ` resetTerminal ( this ) ` with ` resetIf ( this ) ` in ` UnixTerminal. java ` and ` WindowsTerminal.
fix Tiny class to support both source version and target version
fixed - connectionpool. getconnection ( ) throw concurrentmodificationexception
corrected a typo in the method name from ` getDateConverter ` to ` getLdapDateConverter ` to ensure consistency and accuracy in naming conventions
pdfbox - 4892 : avoid npe when check if the destination name be already exist
improve error message when fail to create class in classLoader
increased exception handling for writer and reader threads in LargeStreamletTest to improve test reliability by allowing more robust exception management
updated the way extra pages are handled in HomeFragment to allow dynamic adjustment of page counts based on user settings
added handling for broken Gaussian rendering to improve image processing stability by preventing crashes on unsupported SDK versions
add @ SuppressSubnodes annotation to BaseParser. java and adjust formatting in ImplicitActionsConverter. java to improve readability and maintainability of
pdfbox - 3017 : fix resource leak, a suggest by valerybokov
deleted the file TestDocInverterPerFieldErrorInfo. java to remove unused test files
added shell command input keyevent 82 in AbstractLauncherUiTest. java and modified assertion check in LauncherInstrumentation. java to enhance input handling and
added JSON mapping for filename to URL in FileDumper to facilitate the conversion of output files to JSON format for better file management
bugfix # 207373, reset the resultsnotified flag in profilerthread.
bugfix : texturehelper. gettextfromimage ( ) now return the loaded image instead of a texture
polish ` ` fix application id prefix in test
updated the seed value in RandomizersTest. java from " 9781797745008 " to " 9781797845005 "
fix for broken notification sound setting
added a method ` reportLoopCount ` to the ` RootNode ` class to enable reporting of the loop count during execution
added stack version handling for cluster finalization in ` FinalizeUpgradeAction. java ` to ensure proper versioning for clusters in the upgrade process
bug fix - listbyregionidandstatesearch need to search by regionid instead of rangeid
removed redundant line of code in ItemOrientedStep. java to streamManager. open ( ) to streamManager. open ( ) without
added a new file ` CountedLoopProblem. java ` that generates a random number based on a specified hash code to implement a counted loop
refactor executeCompiledMethod and executeCompiledMethodVarargs to use Object array instead of long metaspaceMethod to improve flexibility and usability by
[ gr - 17490 ] fix jvmcierror in graalhotspotvmconfig. pendingfailedspeculationoffset.
renamed ` KafkaStreamsTracing ` class and updated methods to use ` ValueTransformerWithKeySupplier ` instead of ` TransformerSupplier ` to improve clarity
update html and test data for constantsum question detail
removed call to DynamicColors. applyToActivitiesIfAvailable to streamline color application logic
added thread management and stack dumping functionality in CloseRace. java to ensure graceful termination of child threads during process execution
updated IntPointField to return the value as an integer and added multiple assertions in TestPointFields to ensure proper handling of integer values and validate
updated arcSize calculation to use rounded values to ensure consistent arc appearance across different screen resolutions
fix for image border w. r. t. a. w. r. t. a. w. r. t. a.
rename method ` isMinifySqlEnabled ` to ` isShrinkWhitespacesInSql ` and update related getter and setter methods accordingly to
refactor ` waitForStateTransitionToEnd ` method to improve clarity and functionality in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to
added new configuration classes to various test classes to enhance testing capabilities by integrating additional configuration options
updated byte array handling in Volume. java to improve performance by reading a single byte array
camel - 15429 : fixed unit test error in camel - http
declare module _ bootclasspath a non - empty classpath, rather than empty
automation : add scope element to the list of script ( # 3687 )
added methods to get and set the layer manager in AnimComposer and AnimEvent classes, and updated corresponding tests in TestJa
added a check to return early if no queue is available in DeferredHandler. java to improve performance by avoiding unnecessary processing when no queue is available
added null checks for mapOp and mapWork in MapRecordProcessor. java and modified exception handling in TezProcessor. java to improve error
replaced deprecated Vector2D assignment with direct Vector2D assignment in CylinderRegion. java to streamline the code and improve clarity by
replaced the try - catch block with a method call to ` expect ` on ` ExpectedException ` to improve error handling by utilizing JUnit '
added null check for subparams in QueryExecutorImpl. java and implemented a test for multi - execute in StatementTest. java to ensure proper
added a conditional check for the customized environment in the SecurityModel class to ensure that the customized security environment is only enabled once
added an additional parameter ` rctag = android% 20app% 20edit ` to the GET method in ReviewInterface. java to enable
updated test cases in Test. java to improve test coverage and reliability
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in key generation
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added method writeSectionDefinition ( ) in RtfDocumentHeader. java to enable section definition writing for document headers
added a check for current location information and calculated distance travelled to improve accuracy of GPS data processing
updated text rendering messages in TableCellLayout, TableLayout2, and TableLayout2 classes to improve visibility and user feedback during painting and cell
doc : generate sample code in the java microgenerator ( # 358 )
changed ` rootNameFn ` and ` sourceFilterFn ` from ` boolean ` to ` Reference < Object > ` and ` sourceFilterFn
simplified the addition of elements to the ` data ` and ` added ` lists by removing binary search to improve performance and readability of the code
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to streamline the
updated the value class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests. java to clarify the purpose of the
added an assertion to assertRootArcs ( ) in FST. java to ensure that the assertion verifies root arc functionality
added an assertion to verify the existence and validity of the security policy to ensure that the security policy is valid and not a file
camel - 15836 : fixed olingo2 component configurability
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest. java to allow more time for thread execution
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver. java to simplify the logging output for better readability
added HTTP image sending functionality in XMPPClient and associated actions to enable users to publish images using HTTP using XMPP
camel - 4900 : fixed the issue that camel - netty don't get the channel from the pool if the producer do n '
update url pattern to allow only valid host name ( # 4321 )
remove system property ` org. apache. jasper. compiler. disablejsr199 ` in fragment activator. java to disable JavaScriptR199
added handling for null values in CSVRecordReader and related classes to ensure proper formatting and handling of null values in CSV input
added @ LiquibaseService ( skip = true ) annotation to multiple connection - related classes to enable the use of the LiquibaseService
updated variable type from J. CompilationUnit to JavaSourceFile in VariableNameUtils. java to ensure compatibility with JavaSourceFile when aggregating field names
modify itemcommandtriggerhandler and itemstatetriggerhandler to change the event. topics default to ` ` /''
updated exception handling imports from BeanCurrentlyInCreationException to BeanCreationException to improve clarity and specificity of exception handling
updated SolrXmlConfig to deprecate " zkCredientialsProvider " and added " zkCredentialsProvider " to enhance code clarity and ensure
fixed mana tablet not show the durability bar.
added a method to set the identifier collection in mCurrentCallEvent to ensure the current call event has the correct identifier collection
removed DictionaryCompoundWordTokenFilter import from TestRandomChains. java to streamline dependencies and improve code clarity
updated the format of the thread pool executor string in ScryptUtil. java to improve readability and maintain consistency in naming conventions
updated method signatures in GeneratedCode. java to improve code clarity and maintainability
updated assertion in TypeDefinitionRegistry to check for a non - null definition to improve error message clarity for null definition validation
hide the'share with me'icon in the LocalFileListAdapter to improve user interface by hiding the'shared with me'icon
update the crossorigin attribute from HTTP to HTTPS in multiple filter classes to enhance security by using secure resources
updated import statements and method signatures in RouterFilter, RouterServerListFilter, and RouterDistributorTest to improve code clarity and ensure headers
enhanced assertion message in TestIndexWriterMergePolicy. java to improve test readability and debugging information
deprecate legacy multilayer perceptron - > perceptron
added null check for context awareness in CrawlerSessionManagerValve and updated test cases accordingly to ensure proper context handling and improve test coverage for
added security check for the getJspApplicationContext method to enable secure access control to enhance security by ensuring JspApplicationContextImpl is only used when
replaced hardcoded values with constants for minimum and maximum values in RocketComponentConfig. java to improve code readability and maintainability by using defined constants
added Scopes. SINGLETON to the NonceService binding in OpenIDAuthenticationProviderModule to ensure proper scoping for the Nonce
feat : feat : feat : feat : feat : feat : feat : feat : new _ links, feat : new _ links
removed the ` HttpMethod ` import from ` SpringCloudPlugin. java ` and refactored error handling logic in ` SpringCloudPlugin. java
increase the publishWithDelay parameter from 100 to 500ms in RetrievalBlockingMessageStoreTests. java to improve test reliability by allowing more
AnyKeyboard. java : added a boolean flag to override shift codes to ensure that shift codes are always overridden when needed
[ hotfix ] [ zookeeper ] change isleader ( ) to be consistent with other leaderelectionmanager.
removed unnecessary line breaks in NearbyActivity. java to improve code readability and maintainability
update filter condition in AbstractKerberosDescriptorContainer. java to use identity. isReference ( ) instead of identity. getName ( ) to ensure
updated ` newInstance ` method signatures to replace ` AbstractCommandOptions ` with a ` noop ` parameter to simplify method signature and improve usability by
added a delay before catching IOException in TestListenTCPRecord. java to ensure proper handling of IO exceptions during network operations
fixed issue where methodcall. arguments be reset to original argument.
replaced Map with Set for library management in RawNativeLibraries. java to improve performance and maintainability of native library loading operations
int - 190 add'apply - sequence'and'ignore - send - failures'to the default router parser
added x509 publish URL mapping functionality in ClientKeyPublisher and JwkViewResolver to enable proper handling of x509 certificate publish URLs in the application
updated the handling of a single reader in QueryComponent. java to ensure proper assignment of the subReader based on the reader length
replaced MaxFloatFunction with a new Double2Parser for the " max " and " min " parsing to improve the parsing logic for maximum and
removed redundant focus and grabs pointer events check to simplify the code and improve readability
removed unused variables from Highlighter and TokenSources classes to streamline code and improve readability
bug fix : add uuid to the user table
added @ ConditionalOnWebApplication annotation to ` CasMultifactorAuthenticationWebflowConfiguration ` and modified ` CompositeProviderSelectionMultifactorWeb
updated SQL commands and refactored resource management in WriteJdbcPTest. java to improve code clarity and ensure proper resource handling
don't set laf if it's empty ( e. g. empty font )
simplified method calls in ServiceComponentHostImpl. java to improve code readability and reduce unnecessary method calls
simplified margin calculations in FloatingTaskView. java to improve code readability and maintainability
added a condition to exit early in RootFolder. java and updated status line handling in NavigationShareTab. java to improve user experience by providing
removed the ` threadId ` variable from the ` instrFilter ` parameters to simplify the method signature and improve performance by eliminating unnecessary thread counting
change default perspective to use def toolbar instead of hardcoded value
added NetworkAddressChangeListener to HomekitImpl class and updated log messages to enhance network address handling and improve logging clarity
updated lease handling in TestHDFSEventSinkOnMiniCluster. java to ensure correct retrieval of lease renewal time from the cluster
replaced ` Optional < SourcePath > absent ( ) ` with ` Optional. absent ( ) ` and added ` linkStyle ` to ` arg `
added null check for the message in ExceptionHandlerRegistryFactory to ensure robust handling of null messages during exception handling
changed nextID variable to be volatile and modified getSize method to return the nextID instead of the indexWriter's maxDoc to ensure thread
resolve intermittent failure in test case of slow machine
added the HasSourcePath interface to several classes and implemented it in the AbstractThinArchiveArg, FileListableLinkerInputArg, and
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify error handling and improve performance
added custom index field name configuration in ` OrdinalMappingAtomicReader ` and updated tests accordingly to ensure consistent facet field naming and improve test reli
updated the ` toEpochMilli ` method to handle negative seconds and negative nanoseconds correctly to ensure accurate conversion of ` millis ` to ` nanos
updated attribute retrieval to include the name of the buffer type in OGLESShaderRenderer. java and LwjglRenderer. java
added code to block update scripts based on the application's state to ensure that scripts are only updated when blocked, improving user experience
added a new class TestCMoveLimitType to facilitate buffer manipulation in the compiler to facilitate performance optimizations related to character moving
reset temporal attributes in ChannelState and enhance contains method in RecordConfiguration, and refactored audio packet processing in AudioPacketWaveRecorder to improve
camel - 18836 : fixed arrayindexoutofboundsexception in camel - sql - stored - template
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current release and ensure compatibility with Oracle
refactor console initialization in Main. java and add version printing functionality in VersionCommand. java to improve code clarity and functionality for displaying version information in
replaced token validation logic in InputStreamBinder. java with a new method in NextcloudRequest. java to improve token validation by incorporating salt
added EOFException handling in Http11InputBuffer. java to ensure proper error management when reading input data
added unit test to verify deletion of non exist group member.
camel - 15429 : remove unnecessary object [ ] { new object [ ] { } }
deleted the V2ReplicationProtocol. java file to the class is no longer needed for replication protocol implementation
updated references from ` ImmutableSortedSet < BuildRule > ` to ` ImmutableSortedSet < SourcePath > ` across multiple Java library classes to improve type safety and
added new classes ` ConstructorArgsDemo `, ` StupidFinal `, and ` StrictDemo ` to demonstrate the use of constructor arguments and
make directtemplatefeaturecollectionfactory. openiterators threadsafe
increase the response count assertion to ensure that the response count does not exceed the replication factor
added a null check for the index number in the ItemRowAdapter to prevent potential NullPointerException when the index number is not defined
rename parameters from " areAnchestorsShown " to " areAncestorsShown " across multiple classes to improve parameter clarity and consistency in
add a check to prevent rendering when the application's width exceeds 12 pixels
compare ` changeLog ` equality rather than ` = = ` in ` ChangeLogParameters. java ` to ensure correct comparison of changeLog parameters
changed the loggers variable from static to final to ensure that the loggers map cannot be reassigned after initialization
updated return statement to use p. getBasePlot ( false ) instead of p to ensure the correct plot is returned
rest server : don't warn on incomplete uploaded directory
added a boolean parameter ` sendStatus200 ` to ` ServerGenerator `, ` HttpTransportOverFCGI `, and ` ServerFCGI
added a check for empty comment length in the multi - line comment condition to ensure proper handling of multi - line comments
added file type management functionality in BuckModule. java to ensure proper file type associations are maintained during file processing
updated import statements and modified method signatures in ComposedUtil. java to streamline imports and improve method functionality
updated error handling for unsupported CPU options in RTMGenericCommandLineOptionTest and TestUseRTMLockingOptionOnUnsupportedCPU to improve robust
fixed checkstyle issue in io / anvil / accountsactivitytest. java
refactor Player class to improve code readability to enhance maintainability and reduce technical debt
added a static method mockitoPackageImport in AbstractModbusOSGiTest to facilitate mockito package import functionality for ChannelTypeUID
fix arrayindexoutofboundsexception in polyglotexceptionimpl.
added a reset method in ShadowFontsContract to manage the context of FontsContract to ensure that the FontsContract's context is
added a ` toMillis ` method to ` TimeGranularity ` and updated date parsing logic in ` PinotDataSourceMaxTime ` to improve time
added null check and flow analysis for finally blocks in ControlFlow. java to improve robustness and correctness of control flow analysis
updated assertions in Assert. java and ArrayEqualityAssertTest. java to improve error messages when arrays do not have the same size
fix windowclicklogic to return unknown type instead of itemstack
corrected the syntax for index calculation in MeshBuilder. java to improve code clarity and correctness
nifi - 4985 : remove'this'from nifi. controller. service. standardprocessscheduler
added handling for ResolvedJavacPluginProperties and introduced a new constant for AP _ PROCESSORS in KotlincToJarStepFactory. java to
update scroll delay from 750 to PAGE _ SNAP _ ANIMATION _ DURATION in DragController. java and PagedView.
refresh workspace when the shortcut permission change
added case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader. java to handle history search functionality
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure robust handling of null core names and
added marker selection functionality to the NearbyMapFragment to enhance user interaction by ensuring a bottom sheet is hidden when a marker is selected
added error handling to catch and print stack trace to improve error reporting and debugging capabilities
refactor Docker test execution to use a try - catch block for exception handling to improve error handling during Docker test execution
updated method call formatting and streamlined feed merging logic to improve code readability and ensure correct feed retrieval based on application settings
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
updated package type handling to ensure case - insensitive comparisons for packageType and resourceCompressionMode to improve robustness by ensuring correct parsing of package
fix? f = text / xml mime type to application / xml
updated references to ` configFile ` and ` config ` from ` INSTANCE. confFile ` to ` INSTANCE. confFile ` to ensure consistency in
updated the method call from " sleep 5 ; exit 1 " to " exit 1 " in HostPortWaitStrategyTest. java to simplify the
replaced ` IntMath ` with ` LongMath ` and updated related logic in ` HiveExpandDistinctAggregatesRule. java ` to improve performance
added multiple calls to throw HeadlessException in mmm Toolkit. java and ppp Toolkit. java to ensure proper error handling for headless graphics
fix exoflamefurnacehandler smelt recipe that don't match the furnace
add a move thread count description to solve ( log )
fix ( search ) : search with rev - include don't select wrong resource
added a new test class ` Issue582Test ` to validate the functionality of ` Fun. Pair < String, Integer > ` to ensure
[ native ] add e2e test for decimal overflow
refactor LoadingCache class to improve performance to enhance efficiency of data loading operations
add rule to avoidnonconstructormethodswithclassname to rule file
simonstewart : catch and return null instead of throw exception
refactor view existence check in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to improve error handling for non - existent views
refactor methods in DOMUtil class to improve code readability and maintainability
added translation calculations in TaskViewUtils and introduced a logMatrix method in Utilities to enable dynamic scaling of UI elements during animations
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags. java and RotationHelper.
added a walk method in TempFSTTermsReader to manage FST arcs to improve the efficiency of FST data processing
added SolrQueryRequest parameter to multiple DocTransformerFactory methods to enable the creation of augmenters with Solr query requests
added new triggers for post content and announcement in SingleTableMySQLTriggerTest. java to enhance testing capabilities for post content updates and ensuring
refactor comparator assignment in FieldValueHitQueue and TopFieldCollector classes to improve clarity and maintainability of comparator management
updated expected query strings to use double quotes for column names to ensure consistency and correctness in query formatting
added Spark initialization in ` RequesterTest. java ` to ensure proper synchronization during tests
added methods to manage total storage pool and usage in DynamicPropertiesStore to enhance functionality and improve error handling during storage operations
added support for loading assets from the ` src ` directory in ` AssetsController ` and updated tests accordingly to enhance asset loading behavior in development
bugfix : mapmarks may contain duplicate key ( e. g. mark )
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enable token rewriting for default constraints
removed IOException from parse methods in JavaCompiler and JavacProcessingEnvironment classes to simplify method signatures and improve error handling clarity
corrected variable name from " fileName " to " fullPath " in JxBrowserManager. java and FileUtils. java to improve code clarity and ensure
added a check for AppVersion in IOSImplementation. java and updated format comparison logic in createImageFile method to ensure proper handling of app version settings
updated the method call from ` getBridgeUID ( ). getId ( ) ` to ` getUID ( ) ` in the HTTP client log
disable flaky test on github action
( chore ) camel - core : use constant instead of define constant
updated logging behavior in ` DynatraceExporterV2. java ` to handle NaN values and improve metric export clarity
added removal of a session ID from sessionIdToSessionInfo to ensure proper resource management and prevent memory leaks
added null hostname check for alerts in HeartBeatHandler. java and updated log message formatting in AlertReceivedListener. java to ensure hostname
replaced the boolean flag ` all _ flushed ` with ` return true ` in the ` ChannelEndPoint. java ` file to simplify the logic by
[ kie - api ] move kmodule. xsd under org / kie / api
added a test for seeking to a MediaPlayer in ShadowMediaPlayerTest. java and implemented seekTo method in ShadowMediaPlayer. java to ensure correct
rename method ` createTask ` to ` createThrowingTask ` across multiple files to improve clarity and consistency in method naming
added border for the tab close button when the tab is aQUA _ LAF to improve the visual appearance of the close button in the
updated HTTP request method in TSPTimeStampService and improved imports in TestSignatureInfo to enhance performance and reliability of timestamp handling
drools - 5873 : allow to configure permission when unmarshalling xstream
updated diamond application logic in ` Attr. java ` and added a new ` DiamondRaw. java ` file to improve error handling
[ calcite - 4892 ] remove redundant parentheses in reldataformat.
changed bitwise operations in Http2Settings. java from " > = 0 | value " to " > = 0 && value < = 0xFFFFFFFF
deleted the MapInterfaceTest. java file to remove obsolete test cases
[ hotfix ] [ test ] remove session disposal test in sessionspooltest
added start / end of root object in GeoJsonWMSBuilder. java to ensure proper object termination during JSON processing
update the index setting method in PopupMenuButton to ensure the correct index is selected for the table
added checks for manual unstashing in TaskbarStashController to ensure proper handling of unstashing behavior based on user conditions
camel - 7319 : dump route a xml with a flag to be dump to xml if customid be provide.
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for wait time to improve flexibility in event mismatch messaging based on expected count
added a new file ` HeaderFileProcessor. java ` to process headers with licence - header files to facilitate the processing of lic
added functionality to broadcast the first loading completion broadcast when the launcher is loaded to enhance user experience by informing users about the loading state
deleted the ` SuperJumperAndroid. java ` file to remove unused code to streamline the project
changed the return value from true to isDistributed ( ) in SystemTableScan. java, and refactored test construction in TestStarQueries
replaced KeyValuesProviderAware and ObservationConventionAware interfaces with setter methods to provide setter methods for key values and convention
actually remove the miss item from the miss map. should fix a couple of findbugs warning.
update return statement in AtomicArray, AtomicIntegerArray, AtomicLongArray, and AtomicReferenceArray to cast the result to long to ensure correct calculation of base
added caching mechanism for data format strings in HSSFCellStyle. java to optimize data format string retrieval by caching only relevant formats
updated the query parameter for fetching users in RemoteAuthenticationEndpointTests to ensure correct filtering of users based on their attributes
change from needsInput ( ) to finished ( ) in DeflateCompressor. java to ensure that the compression process completes successfully
updated getStatsLogManager ( ) to include container information and page index to enhance logging clarity for launcher launcher exit events
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
delete deadlocktest a it be not use anywhere in the project
bugcontentprovider : do not try to update the viewer if the new input be null
added a " Reopen in Browser " menu item and implemented functionality to open the server to enhance user experience by allowing quick access to the server
added a new error message for blank outputs and improved formatting of code for better readability to enhance error handling and maintain code clarity
added null argument assertions to the addEntryListener method in BasicTest. java to ensure that the addEntryListener method correctly throws a NullPointerException
fix java. geometry. coordinatearray. compositesesesesquence ( coordinate [ ], coordinate [ ] )
remove unnecessary whitespace in ToolbarPanel. java to improve code readability and maintain consistency
added a variable ` first ` to the ` TestPayloads ` class to initialize the variable to ` false ` for testing purposes
replaced enterOverviewMode ( ) method with showOverviewMode ( true ) to simplify the overview mode display logic
added msgDispatch. setDestination ( msg. getDestination ( ) ) to NetworkRouteTest. java to ensure correct destination is set for message dispatch
change default value return from Integer. MIN _ VALUE to Integer. MAX _ VALUE to ensure proper handling of larger data sets
remove unnecessary, and suppress warning in test code
replaced calls to ` pending. addComponent ( pendingChunks ). writerIndex ( ) ` with ` pending. addComponent ( true, buff ). writerIndex
updated artifact replacement logic in GetMavenDependenciesTask. java to ensure correct artifact identification based on specific conditions
pdfbox - 4071 : use getcosdictionary ( cosname.. ) instead of getdictionaryobject ( cosname.. )
removed debug print statement from the reference processing to clean up the code and improve readability
add support for query type in field visibility predicate
added configuration for solidity JSON - RPC HTTP port and enablement to enable dynamic configuration of the solidity JSON - RPC service
added a type check before removing drop targets in mDragController to ensure proper handling of non - DropTarget instances
refactor StubJarTest to use a separate method for creating stub JARs to improve code readability and maintainability by reducing duplication
added two new feature strings " Setup wizard ", " Probe Module ", and " Workflow helper " in StartPageTopComponent. java
move schedulewithfixeddelay ( ) to storageservice. optionaltasks to avoid race condition
simplified boolean retrieval logic in OnlineTestCase. java to improve code readability and maintainability
changed ReturnAttributes from NONE. value ( ) to ALL _ USER. value ( ) in LdapUserGraphicalAuthenticationRepository. java to accur
refactor onIdleTimeout logic and improve failure handling in HttpChannelState. java to enhance code clarity and ensure proper handling of on - idle timeouts
changed the implementation of the CreateEndPoint class from Runnable to NonBlocking to allow for non - blocking operations on the CreateEndPoint class
updated TABLE _ HEADER _ SEPARATOR regex pattern and added new test cases for column head and body rendering to improve parsing accuracy and ensure correct rendering of
change return value from 32.0 f to 31.0 f to improve precision in camera interactions
added a preference for starting on bootup in GpsSettingsActivity and removed an unused return statement in Utilities to ensure GPS settings are enabled and
updated the length of the client secret from 128 to 512 characters to improve security by reducing the maximum allowed length for client secrets
updated error message from " [ 1 ] position " to " [ param ] name " in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to
added JUnit Ignore annotation to ScheduledMethodMetricsTest. java to mark the test as ignored due to a race condition
refactor getInputPinotFS and getOutputPinotFS methods to include exception handling and plugin initialization to improve error management and ensure proper handling of file
added locale checks for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistent across different locales
added MetalLookAndFeel import and set it to UIManager in bug8032878. java to improve the visual look and feel in the user interface
added synchronization and refactored ping task management in Bot. java to ensure thread safety during message sending and to improve resource management
removed the throwable message parameter from the error method call to simplify error handling by directly passing the throwable
rename parameter'module'to'from'in ModuleTable and PackageTable classes to improve clarity and consistency in variable naming
added error logging for CmdLineException in PinotAdministrator. java to improve error handling by logging specific exceptions
replaced ` super. equals ( o ) ` with ` isEqualTo ( o ) ` and marked the ` hashCode ( ) ` method as deprecated to
updated method signatures and variable declarations in CustomPlaybackOverlayFragment. java, ImageButton. java, and PlaybackOverlayFragment. java to improve code
update zoom level settings for the mvp object in BasicMapViewer. java to ensure consistent zoom level representation across different map viewer implementations
refactored admin user retrieval logic to utilize process user and process user groups to improve code clarity and maintainability by consolidating user and group
replaced ` AccessController. checkPermission ( perm ) ` with ` sm. checkPermission ( perm ) ` in UnixFileSystemProvider, WindowsFileSystemProvider,
added ArgumentExtractor support to the DelegatedClientAuthenticationAction and updated related classes to enhance functionality by allowing argument extraction from requests
changed the defaultGroup variable from non - final to final to ensure immutability of the default group variable
TileSizeChanger now call destroyTileCaches ( ) instead of destroy ( ) to ensure proper cache cleanup.
removed redundant line of code in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the code by eliminating redundancy
refactored the cleanEntryForFeedsWithoutSubscriptions ( ) method to clean feeds without subscriptions to improve code clarity and reduce redundancy in
replaced CoreAuthenticationTestUtils. getAuthentication ( ) with auth in ImmutableAssertionTests. java to streamline authentication handling in tests
nifi - 1086 : use a temporaryfolder for the firewall test
theorem proving : conic five point ( fix for negative value )
added whitespace around the return statement in RandomAccessReader. java to improve code readability and maintain consistency
added @ SuppressWarnings ( { " unchecked ", " vararg " } ) annotations to Fields and MockitoBeforeTestNGMethod classes to suppress unchecked
added native method to create images from arrays and modified the ` createFromImage ` method to accept a list of images to enhance image processing capabilities and
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder. java ` to ensure compatibility with the latest HBase
rename the variable ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` to improve clarity by accurately reflecting
replaced custom equals ( ) / hashcode ( ) with java. util. Objects. equals ( ) in multiple classes to improve null - safe equality
rename method ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` across multiple classes to improve clarity and consistency in method naming
added assertions to verify the retrieval of default location views in NinjaDefaultTest to ensure that the system correctly handles and returns the expected location values
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity by reflecting the
adjusted timestampsViewPaddingBottom calculation and adjusted list position offsets in DetailFragment and ListFragment to ensure correct layout positioning and improve layout responsiveness
updated exception handling to properly propagate InterruptedExceptions and improve error reporting for thread interruptions
added null checks for request fields in HttpFields. java and implemented a test for empty headers in RequestTest. java to ensure proper handling of
bug 13975 : don't allow static nat rule for non - supported network
added calls to resetHeaderScrollingState ( ) in OCFileListFragment. java to ensure header scrolling state is properly disabled
added a call to removeExtraEmptyScreen ( true ) in Launcher. java to improve user experience by removing extra empty screen content
added a fixedWidth flag and modified xAdvances accordingly to account for the fixed width of glyphs to ensure that the xAdv
modified the ` createFragment ` method to accept a ` Bundle ` parameter instead of a boolean flag to simplify fragment creation and improve flexibility in displaying
added preEvent, preTransition, and postTransition methods to AbstractStateMachineFactory to enhance state machine functionality by integrating state context handling
refactor ConfigDescriptionProvider class to improve code readability and maintainability
updated role creation in TestAuthorizationApiAuthorizer and improved configuration handling in StorageBasedMetastoreTestBase and TestStorageBasedMetastoreAuthorizationD
solr - 9682 : fix infinite loop in facetcomponent. getcounts ( ).
updated PropertiesExpander usage and modified cache file path retrieval in CheckstyleReport. java to improve code clarity and ensure correct cache file retrieval based
refactor DeleteInactiveReplicaTest to improve jetty connection handling to enhance test reliability by ensuring proper cleanup of inactive replica jettys
added a file name parameter to the FileActionsDialogFragment constructor and updated its implementation to allow dynamic file name display in the dialog
added a new constant ` INVALID _ DIRECTION ` and updated conditions for reordering direction handling in ` CellLayout. java ` to ensure proper
update InnerTransferRequest to include currency, from, and to in InnerTransferRequest. java and modify AccountAPI path in AccountAPI. java
added method to get the execution ID for a specific job in JobExecutionService. java and updated test assertions in JetTestSupport. java
added a new interface ` EnableAdminClient ` in the ` admin. client. config ` package to provide an annotation for enabling admin client functionality
replaced specific imports with a wildcard import and added multiple visitIdentifier methods to streamline import statements and enhance identifier visitation functionality
added a method to set the action text color to primary dark theme to enhance the visual appearance of the authenticator activity
added ComparableField import and implemented find methods in StreamSupplierComponent and related classes to support foreign key constraints in the system
renamed test cases for better clarity and consistency to improve readability and maintainability of the test suite
corrected a typo in the method name from " noArgMethodIsNotValid " to " validNoArgMethod " to improve code readability and maintain
added a method to cancel clients in ` RpcServer ` and updated ` startDriver ` to call ` cancelClient ` to improve client management by
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo `, ` ParamInfo `, and ` ReflectionParamInfo
initialize lastDisplayedUser with an Optional. empty ( ) to ensure lastDisplayedUser has a default value initialized
added a method to ` QueryDslMongoRepository ` to retrieve all orders to enhance query functionality by allowing specific sorting criteria
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl instances to prevent potential NullPointerExceptions when stopping the consensus
added a break statement in DefaultPlannerBenchmark. java to exit the warm - up loop in case of a failure
add xread ( ) and xreadgroup ( ) method to support redis streaming
updated method calls in LinkedBufferInput and StreamInput classes to improve clarity and consistency in byte counting logic
added a WebSecurityCustomizer bean and updated configuration methods in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance security configuration flexibility
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to establish a framework for testing JDBC with the MiniHS2
added a method to register custom providers in ShadowContentResolver and refactored ProviderInfo handling in ContentProviderController to improve provider registration functionality and
updated the constructor parameters of AttributeReader to use ClassFile. Version to ensure proper reference to Version in the AttributeReader class
fixed - singleconnectionmanager. getconnectionconfiguration ( ) method don't set keepalive.
[ java ] rename supplier to avoid confusion.
gbasicstrokegraph2 : don't draw locus with no point
added concurrency support to ChannelEndPoint and improved error handling in HttpServerTestBase, WebSocketGeneratorD13, and WebSocketMessageD13Test to enhance
updated WebDriver initialization and enhanced screenshot handling in HttpWebClient to improve user experience by allowing customization of WebDriver options
replaced JUnit assertions with AssertJ assertions in multiple test files to enhance readability and maintainability of the test code
trufflelanguage. getcontextreference : remove deprecate method
fix ( stubber ) : reset mockingprogress ( ) only when exception be instantiate
modified validation logic in Actor. java and Group. java to throw IllegalArgumentException for non - ascendant and descendant actors to improve error handling and
added location access permissions handling in the LocationPickerActivity to enable users to access location data directly from the application
added example to show counter mdb activation
added cookie specification handling in GetHTTP. java to ensure proper cookie management during HTTP requests
simplify the intersection logic in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule. java to improve audio processing accuracy by using non - cli
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel classes to enable monitoring capabilities within the application
added SERVICE _ CREATE _ TIMEOUT configuration to KubernetesConfigOptions to provide a default timeout value for the Kubernetes service creation
added conditional handling for different place descriptions in NearbyListFragment to improve user experience by providing appropriate icons based on their description state
added null check for the package name in DefaultPackageScanClassResolver. java to prevent potential NullPointerException when the package name is not provided
added a new file PrintInlining. java that prints " Passed " to test the functionality of the PrintInlining class
fix : nest element in javadoc tag ( # 4957 )
[ java ] fix checkstyle violation in archivetest
updated EdgeDataTableModel to use both edges and metadata edges to improve clarity and functionality of edge data management
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to streamline code and improve maintainability
changed error message format from " Invalid playback speed requested " to " Setting playback speed " to improve clarity of error logs for better debugging
of type ` ` roomremoved'', don't start cluster task when cluster be start
updated the key from'replicas'to'cores'in AutoScalingHandlerTest. java to correct the spelling of'cores'instead of
added flipping and mip generation options to texture rendering to improve the visual appearance and performance of texture rendering
replaced ` ProjectBuildFileParseEventStarted ` with ` ProjectBuildFileParseEventStarted ` and introduced a new method ` createProjectBuildFileParser
add pass that will execute all library during normalizations.
replaced ` retrofit. nextResponseBodyConverter ( this, innerType, annotations ) ` with ` retrofit. responseBodyConverter ( innerType, annotations )
[ hotfix ] fix checkstyle violation in memorymanager
bugfix : add temporal annotation to consessionvo to fix test failure
added a new file ` Hbs. java ` implementing ` TemplateEngine ` in the ` io. jooby. handlebars ` package
updated ChatMessageAdapter to handle null or empty hint cases and refactored message setup methods to improve message display logic and enhance code readability by
updated measurement iteration from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv. java ` to improve accuracy in processing header
remove @ runwith annotation and replace with parameterized test
added a check to return null if distinct column indices exist to ensure proper handling of distinct column indices in the ReduceSinkDeDuplication logic
use uri instead of url for getclasspathfrommanifest ( )
chore ( deps ) : upgrade gapic - generator - java to 2.7. 0 and update gax - java to 2.16. 0
updated dependencies from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty - websocket -
changed return type from unmodifiable to unmodifiableMap for identity attributes to enhance immutability and thread safety of attribute access
don't update the header if the user edit an already write code
replaced instances of ` new Double ( x ) ` and ` new Float ( x ) ` with ` return x ` and ` @ Deprecated `
replaced ` getDate ( colName ) ` with ` getTimestamp ( colName ) ` in ` JdbcDataSource. java ` to ensure compatibility with timestamp data type
updated condition to check for " javax. naming. Context " in HtmlJndiTreeReport. java to ensure compatibility with additional context types
refactor database option handling in StorageUtils. java to improve clarity and maintainability of the code
changed the case check from " double " to " mutual " in ImporterGEXF. java to accurately reflect the intended edge
replaced the static final integer FLAG _ SLIPPERY with an import for FLAG _ SLIPPERY in StatusBarTouchController. java
fix truffleconstantfieldprovider. getarraydimension for non - array field.
added functionality to retrieve and set the Google Drive folder path preference to enable users to customize and improve access to the Google Drive folder path
ggb - 2118 fix : add ` ` random'' suggestion to algebra input field
added @ Nullable annotation to assertThat methods in Truth. java to improve null safety and clarity in assertions
update case handling for newSize in ArrayUtil. java to ensure correct shift operations for improved functionality
added a new test class ` ApiExceptionTest ` and modified the ` instrumentConstructor ` method in ` ClassInstrumentor ` to ensure proper exception handling
fixed race condition in streamin and streaminmanager. get ( ).
added methods to manage keyguard security status in ShadowKeyguardManager to enable secure keyguard behavior for API level 23 and above
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization processes
replace'>'with'' in GrblUtils. java and add a conditional check for the length of overrideParts to ensure proper handling
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
added a checkDrained ( ) method call in AsyncFileImpl. java and introduced a test in FileSystemTest. java to ensure that
updated light intensity constants and modified shader path parameters in HybridLightTest. java to enhance lighting precision and improve shader loading efficiency
replaced instances of ` FakeProjectFilesystem ` with ` workspace. getProjectFileSystem ( ) ` in multiple integration test files to improve filesystem retrieval consistency and
changed the type of ` loadRerunFile ` method from ` String ` to ` PathWithLines ` to improve type safety by using
updated Gson, JsonArray, and JsonObject classes to improve code clarity and maintainability
remove @ NotNull annotation from TEST _ DIRS in PubRoot. java to address issue # 2022. 1
added a call to close the ParcelFileDescriptor instance to ensure proper resource management and prevent memory leaks
added thread - local support for managing prefix indices in BasisLibrary to improve thread safety and ensure consistent prefix index management across different threads
added LogLevel annotation to TestDistributedStatsComponentCardinality. java to enable debug logging for HttpConnection in distributed stats tests
added two ` throwIfImmutable ( ) ` calls in ` IntList. java ` to ensure immutability of collections before proceeding
added @ NotNull annotation to the GrpcServerRunner method and modified the GrpcClientBuilder to create a URI for the gRPC name to
refactor Graal. java to use a Supplier for the workDir variable and update related command handling to improve code readability and maintainability by reducing
fix invalidation of function array in insight instrument.
added platform - specific line endings handling for the manifest file in GenerateManifestStep. java to ensure proper handling of line endings on Windows
fix rcn _ redundant _ nullcheck _ of _ nonnull _ value warning
added nullability annotations to getConfigDescription methods in ConfigDescriptionRegistry. java to improve code robustness by preventing null pointer exceptions
fix checkstyle issue in masterjobcontext. java ( # 2905 )
added initialization for image streams in PageDrawer to ensure correct image processing when the page type is image
updated ManagerBase. java file to improve functionality and maintainability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags. java to enables accessing All Apps from the
replaced direct initialization of FragmentActivity with Robolectric's activity controller to simplify activity lifecycle management and improve test reliability
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` to improve method naming and
rename ABCase classes to TestABCase1 _ 1, ABCase2, ABCase3, and ABCase7 _ 3 to reflect
renamed parameter parameter ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` method and added a null check for the blackhole
added a new RocketChangedEventHandler to handle changes in the current rocket to ensure that changes do not interfere with changes in the rock
added a new class ` ChangeDependencyGroupIdAndArtifactId ` to facilitate the modification of Maven dependency IDs and artifactId to enable users to update
refactored path initialization and added a check for non - segment paths in IndexingJob. java ; added input validation in SegmentChecker.
updated comparison from'lt'to'lte'in ` GCObjectHeapIteratorAddressOrderedList _ V1. java ` to ensure
refactor PreprocessorDelegate to use a memoized Supplier for replacementPaths and pathToSourcePathMap to improve performance and reduce memory overhead during preprocessing
rename JsonExamples class to Examples and update package - info. java to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor. java to improve traceability and troubleshooting during extraction and stream management
apply a consistent copyright notice to the java / tree
added a new Main class in the com. facebook. buck. oop _ javac package to facilitate the execution of Java's
fix a couple of findbugs warning. no functional change.
removed duplicate continue statements from NativeScanner. java to improve code efficiency and readability
changed the package of RendererConfigurationTest from ` net. pms. test ` to ` net. pms. configuration ` to organize configuration
refactor dependency query handling to use a memoized supplier for improved efficiency to enhance performance and reduce memory overhead during dependency resolution
replace ` stream ( ). count ( ) ` with ` size ( ) ` in ` remoteContainsResults ` to improve performance by using the
added charset handling in ExtractingDocumentLoader to ensure correct content encoding is used for documents
replace single quotes with double quotes in SQL insert and select statements to ensure correct SQL syntax and prevent potential runtime errors
added a check to return early if the slot is - 1 in PlayerInventory. java and WindowListener. java to improve performance by avoiding unnecessary
added cli to ignore remote repository introduce by transitive dependency.
removed redundant @ Inject declaration in ContactsPreferenceActivity. java to streamline injection management for background job manager
updated ColorsActivity to extend AppCompatActivity instead of Activity to support compatibility with newer Android features and features
added null check before closing the selection object to prevent potential NullPointerException when closing the selection
added a condition to check if the string's start position matches the matcher's end to optimize performance by avoiding unnecessary processing when the regex
added a default server port of 0 to the IntegrationTest annotation to ensure the test starts with a specific port configuration
added a new user - defined function " reverse " in UDFReverse. java to enable reverse functionality in the Hive framework
refactor code to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` for retrieving the request context path to improve
updated Tracer class to improve functionality to enhance performance and maintainability of tracing
[ hotfix ] ignore rocksdb state backend reader keyed state test
simplified import statements in XMLChangeLogParserTest. java to enhance code readability and maintainability
added synchronization and implemented buffer clearing in StarTreeRecordStoreCircularBufferImpl. java to ensure data consistency during split operations
updated the default values of forecastMinutes, forecastHours, and forecastDays in OpenWeatherMapOneCallHandler. java to improve the accuracy of
added timeout to test methods and updated expected time values in AbstractPageOperationTemplateTest. java to improve test stability and ensure accurate fetch time
updated RemoteTargetGluer and FloatingHeaderView classes to improve code clarity and manage task IDs more effectively
renamed ` splitAndMap ` to ` splitAndThenFlatMap ` and updated the return type of ` parseRerunFile ` to
add a lot of block to the creative tab to make it easy to create custom mod.
swapped the expected size of optItem and retrievedOptions in TestRadioButtons. java to ensure the test accurately verifies the expected number of
added support for file sizes in RCFileCat and RCFile classes to enhance file size options and improve user experience
updated multiple Java files for consistency and clarity to improve code maintainability and readability
[ hotfix ] add checkndarray ( ) method to jnautils
[ hotfix ] fix checkstyle violation in blobserver
fixed bug 1462137 - unusedprivatemethodrule no long report false positive on static private method
rename ` lexicalScope ` to ` lexScope ` throughout the code to improve clarity and consistency in variable naming
int - 1619 added sftp auto - startup test
* fixed bug in tree construction and test.
refactor version parsing logic to handle minor version differently based on digit check to improve accuracy in extracting version components
added a check for non - empty tags before persisting active items to avoid potential errors when tags are empty
added a method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and integrated it into ` DateTimeFunctions ` to enhance date
hhh - 17100 fix nullpointerexception in customtype. disassemble ( object )
updated Log4j2ConfiguratorServlet. java file to improve logging functionality and maintainability
refactor exception handling in StorageBasedAuthorizationProvider to return a new HiveException and AuthorizationException to simplify exception creation process and improve code clarity
updated the method for putting the " CC " entry in CGoCompileStep. java and added a new test case in GoBinaryIntegrationTest
added @ Buildable annotation to CustomResource. java to disable the Buildable annotation for the API builder package
added @ Override annotation to methods in Only. java to ensure proper method overriding and improve code clarity
added a timeout constant for three hours in HttpClientFactory to improve connection timeout management for better performance
added " nonresolving _ raw _ target _ node _ parse _ pipeline " to PerBuildStateFactoryWithConfigurableAttributes. java and updated
simonstewart : change the name of the constraint to be more descriptive.
remove @ Singleton annotation from ApplicationController. java to ensure that the ApplicationController is no longer used as a singleton
added error handling for retrieving the username from OwnCloudAccount to improve username retrieval accuracy based on user display settings
added BatchStatus import and a test for resume paused job execution to ensure job execution status is correctly managed during job execution
added null check for cacheConfig before joining it in HttpSyncDataService. java and refactored data refresh logic in DataRefreshFactory. java
make the DockerSession class public and remove redundancy in LocalNode. java to enhance accessibility and maintainability of the code
fix name resolution in compilationunitcontext. getqualifiedname ( )
pdfbox - 4892 : fix pdfbox parser for non sequential pdfs
mahout - 2692 : fix break build ( testdistributedlanczossolvermain )
updated HttpServerTestBase. java to improve test coverage and fix existing issues
refactored test to make use of map. getkeyset ( )
added tests for ` NestedBeanIgnoreNulls ` and ` DynamoDbIgnoreNulls ` handling in ` BeanTableSchemaTest ` to ensure correct
added a new interface RedissonAutoConfigurationCustomizer to allow customizable redisson auto - configuration options
adjust startIndex calculation in Indicator. java and add unit test in IndicatorTest. java to ensure correct number retrieval and validate functionality through unit
add new method ` execInContainerWithUser ` to ` ContainerState `, ` execInContainerWithUser `, and ` execIn
update interestedInByteMessages and interestedInTextMessages assignments to account for WebSocketTextListener instances to improve the handling of WebSocket message interestedencies
added test cases for attribute conjuction and negation in SemgrexTest. java to enhance test coverage for different semantic contexts
added a broadcast intent to clear the pull - not - read action to enhance user experience by preventing unintended actions
removed conditional logic for pre - Gingerbread status in TouchImageView. java to simplify code for better readability and maintainability
added flush method to DefaultProfileValidationSupport and introduced a flush method in BaseDstu21Config and WebsocketDstu21Config to enable
( chore ) camel - base - engine : use runtimecamelcontextstartexception to wrap runtime exception in camel exception
added a main floating action button and implemented its functionality in ShareActivity to enhance user interaction by allowing users to interact with Google Maps directly from the
added InlineParslet class and updated ToDateParser to handle inline date parsing to improve date parsing functionality by allowing users to specify inline date
updated TestAnonymousClassUnloading. java file to improve test coverage for anonymous class unloading functionality
updated language names from Swedish to Swedish in various error messages to enhance user experience by providing clearer language information
added checks for server checkbox state before binding operations service to ensure operations service is only bind when the server is checked
updated position dimensions from begin and end columns to begin and end lines in Position. java to ensure correct positioning between nodes
added error handling to process termination in CxxPreprocessAndCompileStep. java and implemented waitFor method in ManagedThread. java to improve robustness
added a boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented a new ` BaseAdditiveAttributeMerger ` method
set approximatemaxsize per node's max - size to 1 to ensure that approx - size be always set to
allow customization of ssl protocol ( e. g. ipv6 ).
replaced ` AtomicBoolean ` with ` AtomicReference ` and introduced a new ` Wrapper ` class for better atomicity to improve thread safety and encapsulate object state
updated QueryDslMongoRepository to return a default key if the property is null and added a new test in SpringDataMongodbSerializer
updated test cases for RoundRectBorder equality to ensure correct behavior of rounded borders with the self attribute
added a check for empty genesis configuration before creating a cluster and updated test parameters to ensure that the cluster is created with valid configurations and improve
remove parallel test for confirmtest. testshouldshouldexecutemultiplewebdriversinparallelthreads
updated CountDownLatch and List initialization to use'min'instead of'cnt ', added a validation check for the length of the sign array,
change condition from " windows " to "! windows " in ProcessInformationsPanel. java to ensure that the window condition is not met
added a new static method ` empty ( ) ` and renamed methods ` maxN ` and ` leastN ` to ` greatest ( ) `
added null checks for orderbook and WebSocketClientExtensionHandler in multiple classes to ensure robust handling of null values and improve WebSocket client extension handling
added validation checks for lat and lon in GeoPointField to improve error handling for invalid GeoPointFields
updated method names from ` createWorkflowFile ` to ` createFile ` and removed the ` saveDraft ` parameter from ` WorkflowFilesService `
update ResponderId. java file to improve functionality and maintainability of the code
updated getTableDocument method to accept a boolean parameter for conditional handling of dependent tables to improve flexibility in table document retrieval based on dependency requirements
added functionality to track the number of consecutive uploads without coordinates to improve user experience by providing feedback on uploads without coordinates
added methods for handling profile data and caching in ` ProfileResources. java ` to improve profile retrieval efficiency and ensure profile data is properly processed
updated property value setting logic in ` JpaMetamodelEntityInformation ` and added nested entity information checks to improve handling of identifier derivation and ensure
added timing checks for index and view in UpgradeUtil to ensure accurate tracking of database timestamps during indexing operations
add default exception mapper to dropwizard - jersey ( # 1718 )
added a boolean parameter to the EntryEditor method to control the behavior of the storeFieldAction
updated parameter name from ` ownerPtr ` to ` ownerPtr ` in ` nativeCreateNSWindow ` method to improve clarity by using a more
fixed typo break upgrade of database version to add remote _ id column
add an'Stock'skin for the'Stock'position to enhance the visual appearance of the'Stock'position in the game
fixed - rbuckets. get ( ) method throw classcastexception if codec be null. # 1798
don't log complex generic signature, log them instead
refactor BackBackAnimationController to utilize a new BackProgressAnimator for managing back animations to improve responsiveness and maintainability of the back animation process
changed the ` _ initialPageNo ` variable from final to non - final and added logic to set it to ` _ initialPageNo `
fix crc16 calculation and increase total operation count in benchmark
added comment parsing logic in FormattedSqlChangeLogParser and created a corresponding test in FormattedSqlChangeLogParserTest to ensure correct handling
( chore ) camel - maven - plugin : set the archiver on the plexus - maven - plugin
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader. java to improve error handling by using a more specific exception
corrected the condition for adding aggregations in ` TSServiceImpl. java ` and added a new test method in ` DaemonTest. java ` to ensure
added support for non - unsigned and non - signed pixel formats in GwtGL20. java to ensure compatibility with WebGL rendering contexts and improve data
renamed test methods and added debug info tests in OutputMemoryTest. java, and refactored method invocation in PrintR. java to improve
replaced UnmodifiableClassException with a volatile Throwable lastException and added a null check for the throwable to improve error handling by throwing an IllegalStateException when
truffle : track initialization trace ( s ) of class that be initialize by user
http : / / issues. apache. org / jira / browse / amq - 3682 - fix test failure
( chore ) camel - topic - routes : migrate to caffeine cache
mbtilesfile can now be store in isolated mode by set read - only to off
updated the regex pattern for invalid source target release and added a fatal error message for unsupported target release to improve error handling and provide more informative
added a check for location availability before constructing the URI to ensure that the URI is generated only when the location is not available
initialized ` referencedIds ` as a ` ArrayList < > ( 0 ) ` when ` getInheritedParameterContexts ( ) ` is null to avoid
updated ClassLoader. java files to improve performance and maintainability of the code
added a method to set and test the origin response headers in ProxyRequestHelper to ensure proper handling of response headers in the context
added a new constructor for ProfileSettingDrawerItem to GpsMainActivity to enhance drawer functionality within the application
add a configuration parameter to enable XML validation in the application context
danielwagnerhall : fix error message when execute ` ` javascript''
added a maxRows variable and adjusted fetch size handling in IoTDBStatement. java to ensure fetch size does not exceed the maximum number of
don't optimize filter in sqlstreamterminator if the filter don't exist
added handling for node and mouse click events in StandardVizEventManager to improve visualization responsiveness during user interaction
replaced ` Integer. valueOf ( Integer ) ` with a new ` zeroBuffer ` method in ` ManyToOneRingBuffer. java ` to improve
[ drools - 7 ] make the ` xorgroup ` variable accessible to subclass.
removed getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource. java to streamline code by eliminating
refactor methods in SourcePathResolver to improve handling of absolute paths to enhance code clarity and streamline path resolution logic
fix dstu2 encode string issue ( # 2171 )
modified WebsocketRoutingFilter to handle encoded URLs correctly to ensure proper URL encoding for WebSocket upgrade requests
fix compilation test name to match the name of the test suite.
added a method to retrieve the CxxPlatform from HaskellBinaryDescriptionArg to improve code clarity and maintainability by encapsulating platform retrieval logic
added imports for IndexReader, Field, and Similarity in multiple Java files to ensure compatibility with the latest Lucene library structure
updated ConcurrentLinkedStack to handle null values and renamed methods for better clarity to improve error handling and enhance test coverage for the Stack implementation
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before accessing its contents to avoid potential NullPointerExceptions when mDirectories is not initialized
updated condition in RecentsView. java to include conditions for overview state and first layout to improve user experience by ensuring appropriate gesture end handling
added multiple package - info. java files for various Lucene packages to provide package - level documentation and enhance documentation clarity
added a line to set the visible auto leveler's text to the localization string " autoleveler. panel. visible "
added post optimization callbacks to DirectUpdateHandler and DirectUpdateHandler2 to enhance performance by allowing callbacks to be executed during the update process
changed the initialization of the decompressor and compressor to include a padding length to ensure consistent handling of compressed data and avoid potential issues with padding
removed a user _ data check from Shaderc. java to streamline data validation logic
added a check for local metastore in retry logic to ensure retries are handled correctly in the retrying environment
updated import statements and added error handling for timeout exceptions in HeliosSoloLogService. java to improve error logging robustness and handle potential
refactor Subject class to improve code readability to enhance maintainability and facilitate future development
pass weak and strong reference type to the concurrentreferencehashmap in serialization service
updated color distance calculations in HSSFPalette and added a test for finding similarity in HSSFPalette to improve accuracy of color calculations and ensure correct
doc ( regen ) : fix docstring formatting ( # 2 )
danielwagnerhall for http : / / issues. apache. org / bugzilla / show _ bug. cgi?
added a flags parameter to the registerReceiver method across multiple classes to enable flag management for receivers in the shadow application
updated FFmpegTest to use InvocationOnMock for mocking input stream to improve test reliability by explicitly mocking input handling
modified Ogg and OpenALMusic classes to manage and release the previous input stream properly to ensure proper resource management and prevent memory leaks during audio
add a constant to indicate if a response was null to improve clarity and maintainability of failure messages
[ te ] migration ] fix anomaly migration failure detection ( # 3804 )
refactor ` BaseActivity ` to use a new ` showToast ` method and rename ` DetailActivity ` to improve code readability and maintainability by
updated the method call in TracingFeignClient to include the request template parameter to enhance the request creation process by incorporating the
added name validation and improved referral handling in LDAPCertStore. java to enhance error handling and ensure valid LDAP names are used
refactor retain method calls in GatewayRSocket. java to use a single method for payload retention to improve code readability and reduce redundancy in data
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click behavior to improve test clarity and ensure proper functionality of item
[ hotfix ] [ test ] fix checkstyle violation in checkpointfailuremanageritcase
remove genericitemuiprovider ( it be not use anymore )
added getter and setter methods for the selected object in SIPCommSelectorBox. java to enable retrieval and modification of the selected object's
added JUnit 5 Isolated annotation to MetaInfConfigurationTest. java to prevent access to the FileSystemPool static method during tests
added a line to set the server connection's bind address to HTTP _ INFO. bindAddress to ensure proper configuration for the server's
updated access and ID token validity seconds based on grant type and grant type conditions to improve token validity settings for different grant types in the application
added a ` CloverInstrumentationFilter ` class and modified ` @ Not ` annotations in ` TestInterfaceAudienceAnnotations. java `, while
added support for the Smartmi Evaporative Humidifier in MiIoDevices. java and modified the newline in ReadmeHelper
update plausibleToBreak method to accept a CalculationContext parameter to enhance variability in breaking logic
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari should log an error if ambari don't have a repository for this host. ( swagle )
updated the logic for determining the presence of a missing value in IntHashSet to simplify the logic to focus solely on missing values
added Serializable interface to RuleAdministratorImpl to enable serialization for instances of RuleAdministrator
updated CrossOriginFilter to use ` Set ` instead of ` List ` for allowed origins and allowed timing origins to improve handling of multiple
updated file paths from " g3d / cube _ anim. g3dj " to " g3d / knight. g3
added error logging for updating latest solidified block error in Manager. java to improve stability and debugging when solidified position changes
hbase - 25836 execresult # getclass ( ) should return null if the return value be null ( addendum )
added a method ` hasAccess ` to the ` HttpServer ` class to check if a remote user has administrator access to improve access control and
replaced the ` writeTo ` method with ` getStubClassBytes ` in ` ClassMirror ` and introduced a new method in ` StubJar `
added internal link text display for sharing functionality in FileDetailSharingFragment to enhance user experience by providing appropriate text based on whether the file is
updated formatting assertion to use Locale. ENGLISH in PredictionTest. java to ensure consistent locale handling for accuracy formatting
updated the condition for checking the saturDAY from ` Calendar. SATURDAY ` to ` Calendar. SATURDAY ` to
added methods to hide IME input in AllAppsContainerView and LauncherAllAppsContainerView to improve user experience by ensuring IME is only displayed
use embeddedeventstoreengine in configuration test
refactor path handling in BsdFileStore and introduce a new method in BsdNativeDispatcher to improve clarity and functionality of path management in the
add test case for issue # 1599 : stackoverflowerror in typesolver. solve ( )
added optional parameter to the spawn command to allow optional spawn parameters to enhance command usability by allowing optional spawn options
added MIN _ CONTENT _ DIMEN constant and refactored methods to use this constant to improve code readability and maintainability by centralizing
add debug scope for crypto method installation in graalcompilertest
change directory initialization from ` newDirectory ( ) ` to ` newMockDirectory ( ) ` to ensure compatibility with Windows - specific operations
added plugin check class names to the UpgradeCheckRegistry and modified the addColumnsToUpgradeTable method to enhance plugin validation and improve code clarity
refactor Environment class to improve code readability to enhance maintainability and clarity of the codebase
added import for LuceneTestCase and annotated with @ LuceneTestCase. BadApple to address a known issue related to SOLR - 7421
updated file system separator handling in CodenameOneImplementation. java and removed unnecessary type check in HashtableContent. java to improve compatibility with different
replaced ` FLAG _ IGNORE _ HDMV _ DTS _ STREAM ` with ` FLAG _ ENABLE _ HDMV _ DTS _
replaced specific ResourceAccessor instantiation with a FileSystemResourceAccessor in LiquibaseEntityResolver. java and modified XMLChangeLogSAXParser. java to
added Security. setProperty ( " jdk. tls. disabledAlgorithms " ) to ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS
updated the Immutable annotation to use builder, copy, and singleton pattern, and simplified the usage of CxxDeps. EMPTY in multiple files to improve
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory `, ` actualStubDirectory `, and ` actualFullDirectory
swapped the order of the ` @ DoNotSub ` annotation in the ` resizeThreshold ` field to ensure proper validation of the ` resizeThreshold
updated folder name hint logic to handle empty values to improve user experience by providing a clear hint when the folder name is empty
updated client loading test to include " uaa " as the client name to enhance security by providing a specific client name in the test cases
changed access modifier of methods isEmptyOrWhitespace and isSpecialCaseOrUnknown from public to private to restrict access to these methods for better encapsulation
updated string concatenation in AtomicCounter, AtomicLongPosition, and UnsafeBufferPosition classes to improve clarity and correctness of value representation
rename MimetypeIconUtil. java file to improve clarity and consistency in naming conventions
corrected a typo in the method name from " supportsViewFor " to " supportsViewsFor " across multiple files to improve code readability and maintain
added a test for negated instanceof in UnnecessaryParenthesesTest. java and updated the condition in UnwrapParentheses. java
added a ` built ` flag to the ` Location ` class and implemented the ` teleport ` method to enable dynamic behavior based on the
replaced Base64 codec imports with Base64Utils methods in TokenKeyEndpoint and TokenKeyEndpointMockMvcTests to improve code maintainability and ensure
added ProjectComponent dependency and updated statistics reporting method to improve project handling and ensure accurate statistics reporting
rename the interface ContainerAnnotation to ContainedBy to clarify the purpose of the ContainedBy annotation
added a null assertion for the result in ObjectIdentityImpl. java to ensure that the getId ( ) method returns a non - null value to
refactored the ` setUpRevampedTweet ` method to ` setUpRevampedTweet ` and improved the ` isMuff
updated the visibility and text setting logic for verified text based on user theme settings to ensure verified text is displayed correctly based on user theme settings
refactor AbucoinsDigest constructor to initialize variables as final and simplify instance creation to improve code clarity and ensure immutability of the variable
camel - 10519 : make the mongo db component autowired so you can plugin different dependency for the mongo db component.
added a sourceIndex parameter to the AttributeMapping class and introduced a getter method for it to enhance attribute mapping functionality by allowing the source index to
improve error message when corrupt column statistic be detect during alter partition
added a call to UserGroupInformation. isSecurityEnabled ( ) to enhance security checks for user authentication
refactor multiple classes including ConnectivityReceiver, TerminalKeyListener, AbsTransport, and EastAsianWidth to improve code organization and maintainability
escape html for contact email and contact email in geoserver home page
refactor ( modulemanager, modulemanager ) : remove subsystemreflections from engine - enrich
don't write ` ` mean'' to the human - readable output
fix for ` ` < math'' command error
added conditional logging to debug and trace statements in SingleNodeKafkaResumeStrategy. java to optimize logging performance by avoiding unnecessary string concatenation
replaced ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat. ACTION _ SET _ PLAYBACK _ SPEED
updated IgnitionConfigurationHandler to replace'automatic'separation with'launch'setting and added isLaunchStage method to manage Ignition
tika - 3750 -- improve mime type detection for ascii name and unicode name length
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest. java to mark the test as ignored due to non - deterministic
refactor lock file creation into a separate method to improve code readability and maintainability
updated shared preferences to use version _ 5 _ 3 _ 1 instead of version _ 5.3 and added multiple sync interval settings to ensure compatibility with
added a check to return null if the user is the FEDERATION _ USER constant to handle scenarios where FEDERATION _ USER is not
ignore method parameter of type TruffleObject in ExecuteMethodNode. java to ensure correct handling of non - truffle object instances
removed the ` @ Disabled ` annotation from the filter statements in ` JakartaClientShutdownWithServerWebAppTest. java ` to
fix logbackviolation vulnerability by use warnstatus instead of error
refactor Collection and Map classes to improve code readability and maintainability
removed unused import of Version in CreateIndexTask. java to streamline code by eliminating unnecessary dependencies
added logic to handle backing index settings in MissingPrimaryKeyChangeGenerator to ensure correct schema handling and improve error handling during missing primary key validations
added MetastoreException handling to MsckOperation and implemented a new test for invalid partition names in TestMSCKRepairOnAcid to
[ hotfix ] [ kafka ] fix producerfencedexception when commit kafka transaction.
[ 3.0 ] fix dlq activity ( add receipthandle processor )
added a service list to DockerComposeContainer and modified DockerComposeContainer to handle empty services to improve flexibility in DockerComposeContainer by
don't duplicate collectionutil. copyset ( ) in export and StructContextDecorator classes to improve code readability and efficiency
removed unused imports and streamlined XML processing in FeedParser. java to improve code clarity and reduce redundancy in XML processing
removed the check for ` DISABLE _ ALL _ APPS ` in ` Launcher. java ` and replaced it with a call to ` num
changed the data type of energyReactiveVArACSumConsumed and energyRealWACSumProduced from int to double to allow for
added a new file ` bug4150029. java ` to create temporary directories to ensure that the system's temporary directory is defined
added a boolean flag ` isSparkConfigUpdated ` and corresponding getter / setter methods, and implemented session closing functionality in Spark - related classes to
added a ` getLongPressIndicator ` method to ` AppIcon `, ` AppIconMenuItem `, and ` Launchable ` classes to provide
add empty POLYGON EMPTY2DSRID and EMPTY3D tests in WKBWriter and WKBWriterTest to ensure proper handling of
refactor UnflavoredBuildTarget construction to use a builder pattern to improve memory efficiency and reduce boilerplate code
added a new file MultiplyByMaxInt. java with a static method test to implement a performance test for multiplication by a specific integer
update drawer indicator settings based on current file state in OCFileListFragment to improve user experience by enabling or disabling the drawer indicator when the current file
removed unused imports from TestRAMDirectory. java to streamline the code and improve readability
replaced instances of FixedBitSet with BitSet in Automaton and Operations classes to improve performance and reduce dependencies on Apache Lucene
drools - 2250 : improve error message for no _ expression _ defined _ for _ node
replaced instances of ` @ ContainedBy ( AC. class ) ` with ` @ Repeatable ( AC. class ) ` in multiple
updated the console message format to include the end duration for file sending to enhance clarity and usability when sending files
updated class name handling in OpenMBeanAttributeInfoSupport. java to ensure proper package access validation for class loading
repair should not repair response when there's no response
update freeSize calculation to use roundTo16 to ensure correct size representation for memory allocation
fix touch event handle for native keyboard
replaced the instantiation of SslContextFactory with SslContextFactory. Server in multiple classes to ensure proper SSL context configuration for the server implementation
removed the PrivilegedSocket class from PG _ Stream. java to simplify connection management by directly using the socket object
updated test cases in InputTest. java to improve test coverage and ensure accuracy of input validation
updated the ` finishRecentsAnimationOnTasksAppeared ` method to accept a ` Void ` parameter across multiple classes to improve animation behavior
updated import statements and refactored location marker removal logic in NearbyMapFragment. java to improve code clarity and ensure proper cleanup of
updated client retrieval logic in ClientAdminEndpoints to use client ID to ensure accurate access to client data based on client context
update SqlSourceBuilderTest to use \ t instead of XMLConfigBuilder to ensure compatibility with new configuration handling
http : / / issues. apache. org / jira / browse / amq - 4758 - use executorservice. awaittermination (
added a test method to verify keys in SlidingGanttCategoryDataset to ensure proper handling of Unknown and Unknown key scenarios in the dataset
added null checks and improved data filtering logic in ShenyuTrieRuleListener. java and ZookeeperSyncDataService. java to enhance
* spatialcontrol should be a clone for lightcontrol to avoid memory leak
updated conditional logic and added suppressed warnings in StdErrLog. java to improve code clarity and maintainability by reducing redundancy
refactor HttpSessionEventPublisher to use the ApplicationContext for event publishing to improve code clarity and ensure proper context handling
added a check to throw a SemanticException if the CREATE CQ statement syntax has changed from v0. 14 to ensure compatibility with the latest
[ hotfix ] [ doc ] fix typo in flinkiotdbsink
add counter to track custom simplifying of node
updated the context parameter in the fileIcon setting method to enhance flexibility by allowing the use of a different context for file type icons
updated method name from ` readIdentifierWithSchema ( ) ` to ` readIdentifierWithSchema ( schema. getName ( ) ) ` and modified
[ bigquery ] add support for'time'field in bigqueryTableRowIterator
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` classes to enable proper retrieval of views with tag
replace raw types with generics in multiple for loops to enhance type safety and avoid unchecked cast warnings
removed unused imports from IndexTool and MetaDataClient to streamline code and improve maintainability
added JSON _ VALUE and JSON _ CREATOR constants and updated getEnumValue method logic to include additional parameters to improve handling of JSON data and enhance
[ gr - 20836 ] fix npe in resourcesfeature. readpath ( ).
updated CUDA _ R _ *. java and CUDA _ *. java files to reflect changes in integer and long type usage to ensure compatibility with
refactored ResourceLoader class to consolidate resource loading logic to improve code maintainability and reduce redundancy
updated block redstone torch attachment logic to handle SimpleAttachableMaterialData to improve flexibility in block face retrieval based on data type
added support for VARBINARY data type in RelToStageConverter to enhance data handling capabilities in the RelToStageConverter
removed unused import of DateHelper in NoteAdapter. java to streamline code by eliminating unnecessary dependencies
updated message messages for backup save failures and load failure scenarios to improve user feedback during backup operations
ggb - 2118 fixed position of very small element in simple panel
removed unnecessary file deletion check in ShadowParcelFileDescriptor. java to simplify the file creation process and improve error handling
refactor security context management methods to use ` addFirst ( ) ` instead of ` poll ( ) ` and ` offer ( ) ` to improve
updated the rule from " optimizations " to " controversial " in BooleanInversionTest. java to clarify the purpose of the rule
added unit tests for the Xor neutral relationship in IntegerEqualsCanonicalizerTest. java and refactored conditional checks in IntegerEqualsNode
remove unused static final constant STRING _ ARRAY in TypeFactory. java to streamline code and improve maintainability
added hideIme ( ) method to AllAppsContainerView and LauncherAllAppsContainerView to improve user interaction by logging events when the keyboard is closed
patch blockstatecontainer. setbits to force bit density to fix network issue.
updated assertions in ` TimelineMetricCacheSizingTest. java ` and refined method names in ` TimelineMetricCacheTest. java ` to
add a gl _ max _ texture _ size setting to the player usage snooper since it be only calculate once.
[ java ] stop log recording only when the recording be stop.
added a check to reset startPosn when isInTransform is true to ensure startPosn is initialized before processing
replace the method ` isStarTreeDisabled ( _ queryContext ) ` with ` isSkipStarTree ( ) ` across multiple plan nodes to
added a mechanism to lock the nearby view and refactored related methods to improve the refresh behavior based on the nearby view state
add convenience factory method for maptransformer.
renamed EmeddedObjects and EmbeddedObjects classes to improve clarity and maintainability of the codebase
added support for loading launcher widget span information in ` LauncherPreviewRenderer ` and ` PreviewSurfaceRenderer ` classes to enhance widget management by allowing dynamic
updated ` StageSelector ` and ` StageAction ` classes to use ` StateChangeListener ` instead of ` ChangeEvent ` and ` ChangeListener `
added methods to retrieve calling UID and process ID in ShadowBinder to enhance functionality by allowing retrieval of calling UID and process ID
replace AutoValue with Guava's Objects utility for creating ExpectationFailure objects to improve code maintainability and leverage existing utility methods for null value
removed a warning log message when deserializing a message to simplify the log and focus on unsupported operations
updated calculation of newW and newH based on targetWidth and targetHeight to ensure correct scaling of image dimensions when new dimensions are invalid
added handling for'&# 9 ;'and'&# 32 ;'characters in Markdown rendering to ensure correct processing of Markdown
added a neutral button to the SharePasswordDialogFragment and refactored the setPassword method to improve user feedback during password sharing
refactor method handling in IoUtil to use a class for file channel operations to improve flexibility and error handling when accessing file channel methods
removed public access modifier from several test methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test. java to simplify access modifiers
added slider - keytab setting options and updated related processing logic in LlapOptionsProcessor. java to improve user experience by managing AM keytab
updated ` tearOutGraphViewContainer ` method to accept a ` JFrame ownerFrame ` and added animation functionality to enable or disable animations when
refactor LauncherModel and LauncherModelTest classes to improve loading and loading behavior to enhance code reliability and ensure proper resource management during bind operations
[ iotdb - 4877 ] [ iotdb - 4977 ] fix nullpointerexception in node path operator
renamed ` error ` to ` messageType ` and added ` setCheckValid ` method to ` JsonValidationReport ` to improve clarity and functionality by
added a method to safely retrieve the cipher provider and improved error handling messages to enhance security and provide clearer output when the cipher provider is unavailable
[ hotfix ] rename ` ` dynamicconfiguration'' to ` ` flinkconfiguration '
change log level from WARNING to OFF in CCJSqlParserUtil. java to disable specific logging for improved performance
added a condition to append a newline to the output if the index does not match the size
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to these constants from outside the class
removed the @ Ignore annotation from CovariantOverrideTest. java to address issue where covariant override is not implemented in the test
refactored the curly and character property logic into a new qtype ( Qtype. GREEDY ) to improve code clarity and maintain
camel - 13557 : fixed reloadstrategy to load route with dom node.
added space minimum and maximum settings to the X - axis in ScatterChart to improve the visual appearance of the scatter chart
fixed syntax error in ExpressionStringBuilder. java to ensure proper SQL syntax for INTERVAL expressions
added shouldPreserveDataStateOnReapply method to multiple classes and implemented it in BaseState to control data state preservation during animations
added a check for the UTF8 key in the properties file to ensure proper handling of missing UTF8 keys and prevent runtime errors
updated print statement in TestReproduceMessage and added randomVal annotation in LuceneTestCase to improve error handling and clarify test behavior
added a UI event for long - pressing an AllApps item in the StatsLogManager to enable logging of user interactions for analytics
added null check in StoreWAL. java and created a new test class Issue112Test. java to ensure proper handling of null logs and validate
fix : show land info only if there be a preset
[ hotfix ] fix unchecked cast in compositetypeinfo # gettypeat
refactor Enum class to improve code readability to enhance maintainability and facilitate future development
added validation to nearby selection configuration to ensure nearbyRandom is not null to prevent runtime errors
remove temporarycache # removelastupdatetime, use google's cache instead
hide the ` createSQLViewContainer ` and ` WMSLayerImportContainer ` containers in ` NewLayerPage. java ` to improve user
initialize Availability _ availability to UNAVAILABLE to ensure the value of Availability _ availability is explicitly set to UNAVAILABLE
updated logic in multiple classes to include a check for sync finishing and corrected variable names for clarity to enhance synchronization logic and improve code readability
fix : migrate phishingprotectionservicev1beta1 to grpc _ service _ config ( # 86 )
replaced boolean _ freeSpaceReclaimDisabled with an integer _ freeSpaceReclaimQ and updated the freeSpaceReclaimDisable method to allow
changed visibility of constants in KDCOptions from public to private static final and added a new KDCDefaultOptions class to enhance encapsulation and provide
refactor the initialization of the writer object in Json. java to ensure proper assignment and initialization of the writer variable
swapped the order of ` mentions ` and ` retweets ` and ` favorites ` lists in ` ProfilePager. java ` to correct the
rename the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider. java ` to improve method naming for better clarity and understanding of
added a method ` valueFromClassConstant ` to retrieve configuration values from a class to ensure that configuration properties are correctly formatted and are not public
added error logging when initialization of KafkaService to improve debugging and error handling during test initialization
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet instead of Sets. newHashSet to allow for additional resource paths in the application
updated logging message to use'channelName'instead of'channel'and added auto - create functionality for DefaultMessageEndpoint to improve clarity of
added functionality to retrieve and store keywords from the parser in HTMLDocument. java and implemented a test for indexing keywords in TestDemo. java to
update SDK version check from SDK _ CODES. S to SDK _ CODES. R to ensure compatibility with newer Android versions
added a ` else ` block around the assignment of ` _ addresses ` in ` MemcachedSessionDataMapFactory. java ` to ensure proper initialization
replace ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall. class ` to improve clarity
refactor builder methods for improved readability to enhance maintainability and facilitate future development
change isbntobibtexfetcher to use ebook. de instead of tungare.
polyglot api : make context. engine. enterifneeded ( ) and context. engine. leaveifneeded ( ) throw an exception
added null check for the text before changing cursor position and adjusting cursor position accordingly to prevent potential NullPointerException when the text is not initialized
add ` simplifiedmodel ` to the sentimentmodel, and remove some unused import.
added line trimming in SuffixURLFilter. java to ensure proper handling of URLs without leading or trailing spaces
added a check to return early if the player is in godmode to optimize performance by avoiding unnecessary processing when in godmode
ggb - 2118 fix : checkbox creation dialog won't register or unregister the popup
updated constructors and method signatures in LinkedHashMapCache and TCache classes to improve clarity and consistency in initialization
corrected spacing in the close ( ) and writeTo ( ) calls to improve code readability and maintain consistency
added null check for keyIndex and refactored KeyIndexBuilder instantiation to use default constructor to improve error handling and maintain consistency in key index
updated exception handling to use Locale. ROOT in DirectUpdateHandler2. java to ensure consistent error reporting across the indexing process
add storecheckguard api for write node and canonicalization phase
fix for jsr dispatch block that be not reachable by exception dispatch block.
add a method to get classificationdisagreement that will return 0 if there be a unique bug
replaced ` BuildTarget. copyOf ( buildTarget ) ` with direct assignment in multiple files to simplify code and improve readability by reducing unnecessary method calls
refactor SqlRunner class to improve code readability to enhance maintainability and reduce complexity
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver. java ` and
rename ` knownApis ` to ` knownSdks ` and introduce a new ` knownSdks ` class to improve code clarity and maintain
show ` ` confidence'' instead of ` ` progress'' for create offer
updated USER _ AGENT string from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 to ensure correct user agent
modified iterateBpt method to accept a boolean parameter to improve flexibility in block indexing during rendering
added support for a new message view type and refactored the onCreateViewHolder method to use it to improve flexibility in handling message display based on
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary. java ` and ` MacOSXLibraryDL. java
separate out a specific sbar expression for conj to eliminate some conflict with advcl
removed the canvas parameter from the insert method and added a new method for writing pack entries to streamline node insertion process and improve code readability
refactor RefactorModule to use a default method for applying SourceVisitors to improve code maintainability and reduce complexity
added methods to retrieve all child elements by name and recursive search to improve efficiency and efficiency of XML loading operations
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of character
added ` @ SystemUiControllerFlags ` annotation and refactored related methods in ` TaskThumbnailView `, ` AllAppsTransitionController `
removed the private ClientConfigurationService field to streamline the access control of the clientService variable
updated the error message for creating a record reader in HiveRecordSet. java to improve debugging by providing more context on the error encountered
removed the ownerId field from NodeEntry. java to streamline the code by eliminating unused fields
bugfix : change backup snapshot aferakingsnapshot to backupsnapshotaftertakingsnapshot.
added a score assignment to the merge method in TextFragment. java to ensure the score is accurately incorporated for fragment merging
removed the private digester variable from Md4PasswordEncoder. java to simplify the class structure and improve maintainability
added validation for maximumUnimprovedStepCount in UnimprovedStepCountFinish. java to ensure that the maximum unimpro
added a check to return early if there are currently opened editors to prevent further processing when no currently opened editors are available
added verify methods with different parameters in BDDMockito to enhance flexibility in verifying mock behaviors
replaced ` Thread. currentThread ( ). getContextClassLoader ( ) ` with ` PathScanner. class. getClassLoader ( ) ` to obtain the class
modified the ` sayHi2 ` method to return a CompletableFuture instead of a String to enable asynchronous processing of the ` sayHi2 `
fix flakiness in abstractsplitbraintecectiontest ( # 21143 )
updated logout handling in ` DefaultLoginPageConfigurer ` and ` ServerHttpSecurity ` to ensure that a default logout page is used when logout is
giac don't handle degree correctly, a suggest by valerybokov
added log consumer functionality to DockerComposeContainer and created a new test class for it to enhance the DockerComposeContainer's ability to
corrected the casing of the method name from " testMapping " to " testMapping. " to ensure consistency with Java naming conventions
removed unused imports from AmbariMetaInfoTest. java to streamline the code by eliminating unnecessary dependencies
added a static method ` fromSupplier ` to create a ` ThrowingSupplier < T, E extends Exception > ` to enhance functionality by allowing
replaced a break statement with a return statement to improve flow control in the ConsoleActivity
camel - 15688 : fix issue with body be not be send to vertx platform - http : / / www. nabble.
added methods to handle platform - specific path formatting in MorePaths. java and updated test assertions in AarWithLibsIntegrationTest. java
added null check for authorizationContext parameters before processing to avoid potential NullPointerException when getParams ( ) is called
replaced the direct call to ` load ` with a ` throwExceptionIfFail ` method and added a privileged action to check for file existence to
updated SDK version from " 4611349 " to " 4514284 " and added new test cases for the text to speech functionality to ensure
create ` transactionlogkey ` class with key ` itemid `, ` name `, and ` itemname ` from it. ( #
datajpa - 281 - add option to disable sql query without profile
added a try - finally block around the write method call in ConnectHandler. java to ensure proper resource management and prevent potential memory leaks
fix eclipse compiler generics issue in modloadingstage.
updated date formatting method to use a calendar parameter in DateUtils. java and removed an assertion in FontParsersTest. java to improve date handling
updated the ` loadValue ( ) ` method to call ` CachedThreadStatesGaugeSet. super. getThreadInfo ( ) ` and added a
added a protected field ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to ensure
updated the path from " FastAsyncWorldEdit - P2 - V6 / " to " FastAsyncWorldEdit - 1.17 / "
updated file existence checks and added null check for input path in SegmentGeneratorConfig. java to improve robustness by ensuring input path is not
added a method to calculate normals in ObjUtils and refactored related code in TriangulationHelper to improve code clarity and maintainability
updated the ` find ` method to include ` identityZoneId ` parameter in ` JdbcAuditService ` to enhance the method's functionality to
refactor methods in SpanCollector class to improve code readability and maintainability
added a null check for the getCurrSession ( ) method in AuthorizationFilter. java to ensure that the current session is not null before proceed
modified TransactionIsolationLevel class to improve transaction isolation handling to enhance performance and reliability of database transactions
rename method from `LVgroups ` to ` printLogicalVolumegroups ` in ` OshiController. java ` to improve
set the current thread's name to " Forwarding to " for the remote URL to improve clarity of thread identification during the forwarding process
refactor CookieManager to improve cookie handling to enhance performance and maintainability of cookie management
replace the loop for adding component keys with a direct return of an ArrayList to simplify the code and improve readability by returning an empty list instead of
add a new OverviewToAllAppsTouchController to the list to enhance user interaction with the launcher interface
updated the ` scaleHotseatWithWorkspace ` method to return workspace scale and translation to improve the accuracy of hotseat scaling and translation
exclude ` org. mockito. internal. junit. JUnitRule ` from stack trace filtering to ensure that stack trace elements above the mockito
replaced usage of ` BufferUtil. hasArray ( ) ` with ` BufferUtil. array ( ) ` and ` BufferUtil. arrayOffset
refactor balanceListener management in DepositListItem. java to improve encapsulation and ensure proper management of balance listeners
update color handling logic in RealisticRenderer. java to ensure correct color assignment based on edge mode
added a null check for httpClientResponse in HttpClientBeanPostProcessor. java to avoid potential NullPointerExceptions during execution
remove patternutil. checkpattern ( ) from gl200protocoldecoldecold.
updated the playback timing logic in FullDetailsActivity. java to ensure proper handling of playback events after a delay
added MWE _ PHRASAL constant and refactored elliptic node checks in SpanishXMLTreeReader. java to
added logic to clear the language from the item if it's empty to ensure the item's language context is set to " iso "
updated the handling of the ` overrideScheme ` based on the security status of the ` ReactiveLoadBalancerClientFilter ` to ensure that the correct
( chore ) camel - default : fix bug with duplicate bytebuffer
changed the access modifier of the fullFilePathFromClassName method from private final to package - private to allow for subclassing of HostedInstanceClass
refactor the return statement in ShadowBackupManagerTest to use the Correspondence utility to improve code readability and maintainability
corrected the spelling of " isNonEN " in multiple files to ensure consistency and accuracy in language support identification
remove redundant check for null redeemData in LocalTransactionSigner. java to simplify the conditional logic for better readability
add modded forge client support to render custom terrain texture.
added a return statement to prevent further processing in the TxCacheDB class
updated import statements to use ` jdk. internal. org. objectweb. asm. Opcodes ` instead of ` com. sun. xml.
refactored the FastDictionary class to improve performance to optimize data processing efficiency
of - 2021 : nioconnection. closesession ( ) now set the session status to closed
updated FlightEvent types for GROUND _ HIT and SIMULATION _ END in FlightEventsTest. java to improve event
[ beam - 8470 ] update grpc dependency to v1p26p0
replace target. addNamespaceDeclaration with newElement. addNamespaceDeclaration to ensure the namespace declaration is added to the new element
update to use getstudentprofilepicturelink ( ) instead of getProfilepicturelink ( )
added a short rules list and modified default rules initialization in DefaultPasswordValidator to allow specific rules based on the password length
simonstewart : move the command to the command line, and change the return value of remotewebdriver. retrievew
removed JUnit test import and annotation from ProxyClassSerializationTest. java to streamline test execution and eliminate unnecessary dependencies
updated the scaling and padding logic for thumbnail dimensions in DLNAMediaInfo. java to ensure proper thumbnail scaling and formatting
replace speculative guard movement phase with actual canonical guard movement phase.
added a check to prevent instantiation of authentication manager beans in the AuthenticationManagerBeanDefinitionParser to ensure that multiple authentication managers are handled correctly without causing exceptions
updated the handling of the forwarded host and server in ForwardedRequestCustomizer. java and added corresponding tests in ForwardedRequestCustomizerTest. java
added a call to sb. setLength ( 0 ) in ConsoleReader. java to ensure proper resource management and avoid potential memory leaks
ww - 3833 make allowedroles and disallowedroles field protect
updated version numbers in manifest. mf and properties for OpenIDE - Module - Specification - Version to ensure compatibility with the latest OpenIDE library specifications
hbase - 14975 add a configuration option hbase. server. netty. tls. wrapsize to hbase. server. netty. tls.
updated multiple Java files to reflect changes in package structure to improve code organization and maintainability
replaced JUnit test annotations with JUnit static assertions in FixedLengthTokenizerTests. java to improve test readability and ensure exceptions are thrown correctly
added protocol binding validation to OpenSamlAuthenticationRequestFactory and introduced a corresponding test class to ensure the protocol binding is valid and improve test coverage
refactor DepthController to use AttachedSurfaceControl for transaction handling to improve flexibility in managing SurfaceControl transactions
update version check from " - SNAPSHOT " to " 2.0. x " to ensure compatibility with the latest version release
updated bulk load operations from WRITE to CREATE in AccessController. java to ensure appropriate actions are created for bulk load operations
removed the third parameter from the subList method in TsFileManagement. java and updated measurementSchemas [ 0 ] in MergeTaskTest. java
camel - 7042 : fix genericfileconverter to use fileinputstream if the file be a plain file
added a login method to DefaultShardManagerBuilder and modified its invocation in ShardManager to allow conditional login behavior in the shard manager
bug fix : delete global reference after delete function call.
updated the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to align with updated naming conventions for better
added a conditional check for ` completion. isMarked ( ) ` before calling ` terminateResponse ( ) ` to ensure the exchange is only terminated
don't show comment if the user's giver be a student
added security checks for linked profiles in BMPImageReader. java to enhance security by restricting access to linked profiles on Windows systems
update the coordinates for the setSimpleCuboid method in ClassicPlotManager. java to correct the coordinates passed to the setSimpleC
added a wait message in PMDOpenTool and modified the actionPerformed method to run pmdCPD on the background thread to improve user feedback
refactor StdGridFragment to use a common method for setting grid sizes to improve code readability and maintainability by centralizing grid size settings
updated return values from false to true in ContributionsListFragment. java to ensure correct behavior of the method
added a test method to ` DistinctPrefixFilterIT. java ` and modified filter logic in ` BaseResultIterators. java ` to
add unit test to verify the behavior of the acrobat acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file to enable retrieval of the last modified date of a file
added a check for " metaTable " existence in the HiveIcebergStorageHandler to ensure proper handling of metadata tables in Iceberg storage
use a combo for default currency selection in cashdeposit form
changed exception handling from IOException to Throwable in WriteFlusher. java to improve error handling by catching all possible exceptions
added an ` mStartedEnterAnimation ` flag and modified item range notification logic to ensure that the content fill animation is only triggered when the animation
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to store the active key identifier for user management
rename sendparticipant to sendmailwithattachment and improve documentation
changed the ` isActive ` variable to be volatile to ensure thread - safety for the ` isActive ` variable
updated ` isDesc ( ) ` method to ` isAsc ( ) ` in ` OrderByExpressionContext. java ` and related tests to
ggb - 2118 fix for implicit equation and line
added a check for the OwnCloud app name in the Calendar condition to ensure proper identification of the app based on its context
hbase - 15441 master should restart the master if hbase. rootdir. perms be not set
change return value from ` httpServletRequest ` to ` httpServletResponse ` in JakartaServletWebExchange and JavaxServletWeb
refactor Instant class to improve code structure to enhance maintainability and readability of the codebase
changed the return type of getStateFormat from int to String across multiple test files to ensure consistent handling of string representations of state formats
updated authentication type handling in CentralAuthenticationServiceImpl. java and modified a condition in AbstractTicket. java to improve clarity of authentication type logging and correct
add handling for IllegalArgumentException in profile exception checks to improve error handling for specific exception types
added a check to ensure the file name ends with " / " to prevent potential errors when checking file types
add pathtranslator to the plugins parameter expression evaluation so that they be compatible with java. io. file.
[ beam - 8470 ] re - add ByteStringcoder to beam - sdk - extensions
updated JpaQueryParsingToken to include a false parameter and added a new test for signed numeric literals to enhance query parsing functionality to handle signed numeric
updated the ` generateLaunchLugFromRASAeroRailGuide ` method to accept a parent length and adjusted related properties accordingly to
removed the getNonceFactory method from the BitmexStreamingExchange class to simplify the codebase by eliminating unused methods
camel - mail : use placeholder instead of string concatenation
[ java ] : use default timer interval in driverconductertest.
changed the initialization of loaded classes from true to false to disable loading features for improved performance
added call to grab focus on the search field to improve user experience by ensuring focus is properly managed
refactor connection factory to store SSL parameters before setting them to improve code readability and maintainability
removed an assertion from the getDouble ( 4 ) method call in StatementTest. java to simplify the test by eliminating unnecessary test logic
updated assertion message formatting in TestSolrConfigHandler. java to improve clarity of error messages for better debugging
replaced HttpMethod with ServerHttpRequest and ServerWebExchange mocks in CsrfWebFilterTests to enhance test reliability by using the correct data type for
updated drawable density handling in FilterResourcesStep. java to ensure accurate pattern matching for drawable density
added a buttonUIID variable and refactored UIID updates to use this variable to improve code clarity and maintainability by reducing redundancy
removed the check for display densityDpi in RecentsAnimationDeviceState. java to simplify the condition for displaying display information
8012240 : arraycopy. clone ( ) with different length constant and object alignment can cause arrayindexoutofboundexception
added import for LuceneTestCase. AwaitsFix and annotated the ReplicationFactorTest with @ AwaitsFix to indicate that the test is
fixed - null pointer exception in redissonexecutorservice # schedule method
update credential validation logic in FileDownloader and FileUploader classes to simplify the code for better readability and maintainability
refactor code to handle multiple StoreFileScanner instances more gracefully to ensure proper resource management and avoid potential memory leaks
replace `. get ( ) ` with `. getOrDefault ( ) ` in ` NetMetrics. java ` to ensure default values are set
added nonce verification to the TokenMvcMockTests to ensure that the nonce is correctly retrieved from the token
updated multiple Java files for consistency in naming conventions to improve code readability and maintainability
added width and height settings for formLayeredPane to ensure proper layout management for forms
removed unused imports and added a method to calculate the maxY value based on the owner's height to streamline imports and enhance the height calculation
close the database only if there's a connection to the database
replaced local variable ` DOCKER _ COMMAND ` with a static constant ` Platform. DOCKER _ COMMAND ` in ` DockerTestUtils. java `
added null check for input stream in TestIsartorValidationFromClasspath. java to improve robustness by handling cases where input files are missing
updated drawLeaveBehind method to accept a color parameter to enhance customization of folder leave - behind appearance
show a warning if the flutter plugin don't work with the Canary version of Android Studio.
fix npe in apiresponseserializer when identityproxy table name be null
added getter and setter methods for module persist enable and disable lists in StartArgs. java to enable and disable module persistence functionality based on command -
updated conditional check and error message formatting in GeminiMarketDataService. java to ensure proper argument length validation and improve clarity of error messages
replaced ` HashSet ` with ` LinkedHashSet ` in ` VerifyPasswordResetRequestAction. java ` to ensure predictable iteration order for the flow scope
add test case and fix for regression
refactored exclusion paths in AuthCheckFilter. java to improve organization and clarity of page configurations
refactored runnable execution logic to improve clarity and efficiency to enhance code readability and maintainability while ensuring correct execution order
updated method signature from String [ ] to varargs String in multiple test classes to improve flexibility and usability of method signatures
refactor XMLParser to handle end - of - stream conditions to improve error handling by returning END _ TAG when the stream has not been read
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest. java ` to verify behavior regarding horizontal page
set the pivot X and Y values for the arrow in DeepShortcutsContainer. java to improve the visual alignment of the arrow based on icon
fix : do not print stacktraces when interrupt
updated the ` updateThumbnail ` method to include a ` refreshView ` parameter in the ` AbsSwipeUpHandler ` class to enhance the functionality
pdfbox - 4071 : use class. getName ( ) instead of org. apache. pdfbox. ExtractTTFFonts
updated EmailFormatSpecifier and HostnameFormatSpecifier to include a boolean parameter for domain validation to improve validation of domain name inputs and enhance error handling
updated method calls to use'this'consistently across multiple activities to improve code readability and maintainability by reducing redundancy
replaced occurrences of ` _ maxDocId ` with a ` _ maxDocId ` variable across multiple files to improve consistency and clarity in the
added overloaded ` promptToOpenFile ` methods to ` FileDialoger ` for prompting files to improve file handling and ensure correct directory assignment
updated sPageSleepDelay from 200 to 150 milliseconds and refactored updatePageCounts method to improve responsiveness and maintainability of widget page
added logic to update component bounds based on active instances in FlightConfiguration. java to improve efficiency and accuracy of flight configuration updates
use the seda : prefix instead of seda : prefix to avoid clash
updated DateTimeFormatter pattern to use Locale. ROOT to ensure consistent localization across different locales
[ ds - 3892 ] fix objectconverter permission filter for non - admin user
added a test method for missing required dimension and metric names in TestStarTreeConfig. java to ensure that the StarTreeConfig correctly handles cases
camel - 13363 fixed the recipientlist builder issue of camel - spring
refactor InlineLayoutBox to improve parent retrieval and add repainting functionality in HoverListener to enhance layout rendering efficiency and ensure correct repainting
refactor AuthenticatorActivity to use ServiceConnection and OperationsService for handling authentication operations to improve code modularity and enhance service management
