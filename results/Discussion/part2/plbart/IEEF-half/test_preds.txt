modified SocketAppender instantiation to set remote host and port to ensure proper configuration of the socket appender
refactor BasicAuthPlugin to use a new method for setting prompt headers to improve code readability and maintainability by reducing duplication
removed the call to RecordDescriptor. msgLength directly in ManyToOneRingBuffer. java to simplify code by eliminating unnecessary method call
cloudstack - 7131 : fix the bug of cpu and ram overcommit ratio be parse when vm detail be null.
added flags handling in ShadowPaint and updated PaintTest to verify anti alias behavior to ensure proper handling of anti aliasing in Paint instances
updated the title for the MassSetFieldsDialog to use a localization language for managing field names and content
added a conditional check for the presence of " Eclipse " in the bug reporter to ensure that the test accurately verifies the presence of Eclipse
added a condition to check if getNonce ( ) is not empty in Realm. java and modified scheme setting in NettyAsyncHttpProvider. java
added a new interface ` RemoteInputListener ` and modified ` RemoteInput ` to handle connection and disconnect events to improve event handling for remote input
refactor conditional logic in OrcEncodedDataReader. java to improve readability and maintainability of the code
updated filtering logic to check if the thing is enabled before filtering to ensure that only valid home connect thing handlers are processed
added a null check for the bs before removing and adding policies to avoid potential NullPointerExceptions when bs is null
updated assertions in ` DefaultTypeAdaptersTest `, ` ObjectTest `, and ` DefaultTypeAdapterTest ` to use ` matches `
added JSON handling for DAG information in TezTask. java to enable better debugging and tracking of DagInfo in the application
updated time calculation in ComputedSummary. java and added methods in HprofHeap. java to improve accuracy of heap dump timestamps
replaced RxJava2Tasks with CommonsApplication's getMWApi ( ) method and removed the RxJava2Tasks class to streamline the code and
mvtable. ismultithreaded ( ) and mvtable. ismultithreaded ( )
[ issue # 1868 ] fix commitlog size limit ( # 1868 )
added a check to ensure the folder is open only if it does not already exist to prevent potential errors when the folder is not open
added a new test method ` testSortOrder ` in ` PGPropertyTest. java ` to ensure that ` PGProperty ` names are sorted
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN in Common. java to clarify the purpose
changed the parameter type of the ` supportsDrop ` method from ` Object ` to ` ItemInfo ` and updated related logic to improve type safety
updated assertions in RequestBuilderTest. java to use isIn method instead of hasMessage to improve clarity of error messages for better debugging
replaced instances of ` NearbyMapFragment ` with ` NearbyListFragment ` in ` NearbyActivity. java ` to
[ hotfix ] fix typo in constructor of FlatProfileContainerFree
added a new property ` send _ zero _ anomaly _ email ` to the ` EmailConfiguration ` class and its corresponding getter and setter methods to
[ hotfix ] [ kafka ] fix npe in flinkkafkaconsumerbase # open
removed duplicate getter methods for userId and geofenceId in DataManager. java to streamline code by eliminating redundancy
added a constructor to BlockingResponseListener that accepts a maximum size of 1024 to enhance flexibility in handling requests exceeding specified limits
refactor ` McastService ` and ` McastServiceImpl ` classes to improve code readability and maintainability
replaced ` System. out. println ` with ` logger. info ` and added error handling for snapshot fragments to improve logging clarity and ensure proper
updated URL assertions in LoginSAMLAuthenticationFailureHandlerTest. java to correct the URL format to ensure the test accurately reflects the expected
updated test cases in ConfigMetadataProviderTest. java to improve test coverage for metadata retrieval
updated imports in ListFragment. java and refactored updateNoteReminder method in SnoozeActivity. java to improve code clarity and
added a private static class AcceptAllFilter and refactored directory stream creation logic to improve code readability and maintainability by encapsulating directory stream
refactor JdbcTestDataSet class structure to improve code readability and maintainability
bugfix for jdk - 805643
refactor Docker image tag validation logic in GenericContainer. java and add corresponding tests in DockerImageNameTest. java to improve validation logic and ensure
updated login error messages to reflect wrong credentials instead of username and password to improve user experience by providing clearer feedback on incorrect credentials
added autofocus functionality to multiple form classes to enhance user experience by ensuring focus is properly managed
added unit tests for ` IdentityZoneConfiguration ` in ` SamlIDPRefreshMockMvcTests. java ` to ensure correct functionality of `
added checks for non - empty and non - empty lists in ComparableVersion. java and updated corresponding tests in ComparableVersionTest. java to ensure
updated method calls to use bottomRightMode instead of topLeftMode and adjusted return statements to ensure correct positioning of the component based on its dimensions
updated package structure and import statements for ParallelUniverse and ParallelUniverseTest to improve organization and accessibility of the ParallelUni
refactor method calls in LocalCacheFactory and NodeFactory to use a constant for FACTORY _ CALL to improve code readability and maintainability by reducing
changed fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills. java to improve visual consistency by using a
added functionality to draw self - loops in the ProcessingPreview class to enhance visual representation of self - loops in the graph
rename ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 0
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in naming conventions
set the translation of the drag handle indicator to zero to improve visual appearance of the drag handle indicator
remove unneeded log message
updated error message for optimization settings in HiveConf. java to clarify that filters may be pushed down into the operator tree when optimization is disabled
added an assumption to skip tests on macOS in ScanningAppProviderRuntimeUpdatesTest. java to address build server compatibility issues
added Maven bundle options for Jetty alpn client in TestJettyOSGiAnnotationParser. java to enhance debugging capabilities for Jetty clients
refactor executeasyncjob ( ) to executeasyncjob ( ) to use commandexecutor for retryasyncjob ( )
refactor transaction handling logic to improve code clarity and maintainability
replaced ` @ CustomFieldBehavior ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable. java ` to clarify the
simonstewart : add a method whichexec to get the executable path of the firefox launcher.
added a check to ensure the map does not already exist before adding it to the map to avoid potential null pointer exceptions
[ hotfix ] [ runtime ] fix rawtypes warning in hadoopoutputcollector
added logic to check if the client version is less than MIN _ SPLITTABLE _ SYSTEM _ CATALOG and the view type is not MAP
update the googleid of the student entity if it exist
updated import statements for TestCellReference in AllXSSFTests. java to ensure compatibility with the latest package structure
fix obsidian won't work in obsidian
added a new file LongPointerPressTest3049. java for testing long pointer press functionality to facilitate testing of long pointer press functionality
remove assumption from partialevaluator. inlining ( )
refactored null checks in BaseBuilder and XMLConfigBuilder to use a ternary operator for alias handling to improve code readability and maintainability by
removed unnecessary type check for matched state in ListBlockParser. java and added a new test for deeply indentation in SpecialInputTest. java
added an abstract class ` AbstractOptionalAssert ` and refactored ` AbstractOptionalAssert ` to use it to improve error handling for optional assertions
added an @ Ignore annotation to WebfluxNotIncludedTests. java to temporarily disable tests related to issue # 1070
remove jsinterop. global from testcaselogger. savemessage ( )
updated formatting in RouteStartupOrderLastTest. java to improve code readability and maintainability
added a condition to check if the video format is video before processing web subtitles to ensure proper handling of video formats in the video playback process
added security property for disabled algorithms in ComHostnameVerifier and JavaxHostnameVerifier to ensure proper handling of disabled algorithms in the hostname verification process
bug cs - 15836 : don't try to attach vm to zone if it's in local mode
refactor logging statements in Driver. java and QueryResultsCache. java to improve readability and maintainability of log output
added an option to skip updating the dependency model after managing dependencies to improve flexibility and control over dependency updates
added a test for sending an intent with a request code in ShadowActivityTest. java and implemented the send method in ShadowActivity. java to
updated FBO logging and refactored graphics creation logic in RocketFigure3d. java to improve clarity of logging and ensure proper rendering
updated synchronization in HydrawiseAccountHandler and added dispose method in HydrawiseControllerHandler to ensure thread safety and prevent potential memory leaks
solr - 9893 : skip test that don't work with java 9
updated the year calculation for BC dates in TimestampUtils. java and added a new DateTimeFormatter in SetObject310Test. java to ensure
fix a null pointer exception when disconnect a jabber connection.
added a new column name ` cur _ ws _ commit _ id ` to the string in ` TxnHandler. java ` to ensure consistency
replaced ByteChunk with ByteBuffer in BufferedInputFilter. java to improve performance and resource management
added a new method ` toSync ` to the ` AsyncUtils ` class and created a corresponding test class ` AsyncUtilsTest ` to enhance
added ActionGraphBuilder to multiple compiler factory classes to enhance functionality by integrating ActionGraphBuilder in the code
add test for upload with hidden file input
removed redundant try - catch block for creating tables in SQLManager. java to streamline error handling and improve code clarity
added a check to return the correct local Maven directory if it does not exist to ensure the correct directory is returned when the file does not exist
ggb - 2576 : hide algebra label for hidden element ( ggb - 2576 )
fix nullpointerexception in ctelementimpl # getmetadata
replaced ` setFlags ( ) ` with ` addFlag ( ) ` in ` DefaultTrackOutput. java ` to ensure proper handling of buffer
don't re - enable re - ordering if it's sort by id
updated error message from " Method call not specified for verify ( mock ) : " to " Missing method call for verify ( mock ) here "
added a null check for the backupFolder before logging the expire timestamp to prevent potential NullPointerExceptions when the backupFolder is not initialized
add a new file ` ArrayNewInstanceOfVoid. java ` to demonstrate the use of ` void ` in ` void `
added @ AddToRuleKey annotation to the ToolType field in ClangCompiler. java and GccCompiler. java to indicate that the
added a new constant PINCODE _ TIMEOUT and modified the condition in PinCheck. java to improve code readability and maintainability by using a
added an ` isSampled ( ) ` method to both ` PrometheusMeterRegistryTest ` and ` PrometheusExemplarsSample
removed @ Ignore annotations from multiple test classes to streamline test execution by eliminating unnecessary tests
fix compile error
updated condition to check if the table is artifical instead of checking for an empty name to ensure that the table is not artifical
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer. java ` and `
373952 ensure mongosessionmanager un / binds session attribute on refresh only if necessary
changed surfaceHolder. setFixedSize ( ) to set setSizeFromLayout ( ) in CameraSurfaceView. java to ensure proper rendering of the surface
refactor variable name from ` _ stopping ` to ` stopping ` for clarity to improve code readability and maintainability
removed unnecessary whitespace in HuobiStreamingService. java to improve code readability and maintainability
http : / / issues. apache. org / activemq / browse / amq - 3796 - use current time instead of stopwatch
[ hotfix ] [ test ] fix flaky test in delayedmonopublishertest
replaced assertTrue with a conditional check for WebSocketHandshakeException to improve error handling for WebSocketHandshakeException
refactor AllAppsTransitionController to improve layout change handling to enhance code readability and maintainability by reducing complexity
refactor variable names from'theHandler'to'handler'for consistency to improve code readability and maintainability by using more descriptive variable names
added support for the " default - output - channel " attribute in XPathRouterParser and its associated tests to enable configuration of the default output channel
added DurationCapable annotation and changed cacheSeconds type from int to String to enhance flexibility in managing cache duration in the application
updated OpenAPI version from'3.0. 0 - rc1'to'3.0. 0'in ParameterDeSerializationTest and ParameterSerializationTest
removed the append method call from ByteBufferPool to streamline the buffer handling process
added a check for the presence of " alt - rt. jar " in the boot class path to skip tests when the alt - rt jar
updated user names from'JO @ FOO. COM'to'JONA @ FOO. COM'and modified test cases accordingly to
replaced ` Arrays. asList ` with ` ArrayList ` and modified flight recording options to include ` - XX : + UnlockCommercial
added a method ` isStreamEmpty ( ) ` in ` WebCamInputPanel ` and modified video handling in ` WebcamInputDialog ` to
added a condition to check if the content view is not empty in HttpParser. java and implemented a test for chunked PUT in ProxyServletTest
camel - 15836 - create an aws - atmos component base on sdk v2, fix javadoc
added additional conditions for " println " and " print " in Java2TypeScriptAdapter. java to ensure proper handling of output and print statements
; ; ; ; ; ;
updated package - info. java files for mmm and ppp packages to improve documentation clarity and maintainability
bugfix : the samplingstatcalculator should calculate the end time at the start of the result
added unit test base on user forum issue
pdfbox - 4892 : don't throw icc profile exception if icc profile be invalid
fix terra shattererra and terraform rod
added a conditional check to ignore the entry type in JoobyModule and SpringModule to ensure only non - existing entry types are registered for
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 467
add nameupdater. properties to allow loading of additional nameupdater. properties file
added initialization of the started state of ellipsoidRegionSelector to ensure that the ellipsoid region selector starts correctly
updated URL from " http : / / www. codenameone. com " to " https : / www. codenameone. com " and
wfs : fix for ` ` sort by'' attribute
modify the logic for retrieving the grantor in AbstractJdbc2DatabaseMetaData. java to ensure that the grantor is only set when it is
updated DiagramGenerationTest to use compatible images instead of expected images to ensure compatibility with different screen orientations
add a runtime exception to fmlcommonhandler when sideddelegate be null.
[ hotfix ] [ core ] fix typo in datautilities. java
fix flaky locktest. testlock ( )
added methods ` wholeWordTokenize ` and ` joinTokens ` to the ` StringUtil ` class to facilitate tokenization and joining of
fix for httpservletresponse. senderror ( 404, 404 )
refactor command handling in SystemHighlighter. java to improve command highlighting logic and enhance command highlighting functionality
updated version and version date constants in Constants. java to reflect the new release version and its date
updated the buffer position method to use dimensionSize instead of idx to ensure proper handling of dimensions in the buffer
added functionality to handle drag state in the QuickstepTestInformationHandler and SystemUiProxy classes to ensure proper handling of drag state in the system
[ log4j2 - 1349 ] skip socketappender socket option test on java 7
added support for PSK - AES256 - GCM - SHA384 + TLSv1. 2 in the TestCipher class to enhance security and
updated the method for retrieving the description from ` getDescription ( ) ` to ` getLongDescription ( ) ` to ensure accurate retrieval of the description from
added JsonProperty annotation to ScimGroupMember. java to ensure proper serialization of ScimGroupMember instances
updated HqlQueryRenderer to handle reserved words and added a new test for schema scoping to enhance functionality for handling reserved words and ensure
( chore ) camel - salesforce : fix typo in subscriptionhelper
refactor Parser class to improve code readability and maintainability
added a new boolean parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method to control the position of the video stream
tika - 697 : fix magic detector to correctly decode byte.
[ hotfix ] [ table - planner - blink ] remove unused method from flinksqloperatortable
added ` EqualsBuilder `, ` HashCodeBuilder `, and ` toString ` methods to ` OneTimeTokenAccount ` and ` OneTimeToken
added a condition to check if the assumption is not already present before flinging to ensure that the fling condition only proceeds when the
added a new file SolarisShortDSA. java to implement DSA key pair generation and verify functionality
added a call to toggleSearchLabel ( false ) in ListFragment. java to control the visibility of the search label in the UI
bug 11000 : don't try to create a snapshot if it fail to create a snapshot
refactor ` FileDetailActivity ` to implement ` DetailsServiceConnection ` and improve null safety to enhance code clarity and prevent potential null pointer exceptions
replaced the handling of SSLPeerUnverifiedException with an AtomicReference to improve clarity and ensure the correct handling of SSLPeerUnverifiedException
added an equals method to the ConjunctionScorer class to ensure proper comparison of Scorer instances
added a null check for the item variable in the bindItems method to prevent potential null pointer exceptions during item binding
fix ccsmemberaddremovalstest. waitforleaderelection
updated cache size calculations and added a warning log for full cache size to improve cache performance and enhance user experience
updated API endpoint from v2 to v3 and modified currency pair handling in CryptoFacilitiesAdapters and CryptoFacilitiesAuthenticated to align API
added a method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the size of the
added handling for null page data in AsyncPageReader and updated test annotations in TestEmptyParquet and TestDrillParquetReader to improve
updated argument validation and added error handling in SerumStreamingService. java to ensure correct handling of market data types and improve robustness
add a config option to disable the animation when an item be charging on top of a mana pool.
[ java ] don't wait for aeron client to connect.
added error logging for InterruptedException in WaitForHelper. java to improve error handling for interrupted tasks
replaced conditional checks with assumeTrue for filesystem support in DefaultServletTest. java to improve test reliability by ensuring that filesystems do not
swapped the order of method calls for ` openScreenStyle ` and ` dialogStylesScss ` in ` ResourcesInjectorFull. java ` to
refactor ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` to improve type
fix checkstyle issue in blockworldvector. java
changed ` LongConcurrentLRUMap ` class to use ` final ` for ` CacheEntry ` to improve code clarity and enforce immutability
replaced direct addition of ` singleElement ( args ) ` with ` Pattern. quote ( literal ) ` in ` resourceConfiguration ` to ensure proper
updated FileCredentialsCache to retrieve the KRB5CCNAME environment variable and modified EmptyCC to accept command line arguments for the credentials cache to
updated database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
remove peer count check for fast sync
danielwagnerhall for http : / / issues. apache. org / bugzilla / show _ bug. cgi?
don't expand isequal [ segment [ X, Y ], Segment [ Z, W ] ] format expression
added a condition to clear pending rendering operations when the component is in a minimized state to ensure that rendering operations are only cleared when the component
fix flakiness of hazelcasttestsupport # testdeadline ( )
make delay value volatile in coalesced write behind queue
added a line to set the icon of the GroupTreeCellRenderer to null to ensure that the GroupTreeCellRenderer does not save unnecessary space
replaced ` setStrictMatch ( true ) ` with ` setStrictMatch ( false ) ` in ` TestBlacklistAwareRedirectResolver ` to
added imports and refactored shutdown logic in ShutdownMonitor and ShutdownMonitorTest classes to improve resource management and enhance test coverage for the ShutdownMonitor
improve performance of randomaccessstore. rewriteserlock ( )
refactor field retrieval and error handling in Json. java to improve code clarity and ensure proper deserialization of objects
[ hotfix ] [ runtime ] move componentclosingutils to flink - runtime
bug cs - 15836 : don't try to delete a volume while transition to error state
fix npe in getip6rangefromcidr ( )
updated references from ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` and ` InitializeUserDetails
updated the leader retry timeout value from 15000 to 30000 in CollectionsAPIDistributedZkTest. java to allow more time for leader
refactor error message handling to use a more general Exception instead of a single quote to improve code clarity and reduce redundancy in error message formatting
updated drawImage calls in URLImage. java to correct positioning to ensure proper rendering of the graphics context
updated field name comparison from solrDocument1 to solrDocument2 in SolrTestCaseJ4. java to ensure correct handling of Solr document fields in
replaced multiple try - catch blocks with a new method ` isItemZeroHighCardDim ` to improve code readability and maintainability by encapsulating
updated StreamTaskException instantiation to include exception information to improve error handling by providing context about the exception being thrown
refactor character processing logic in Preprocess. java to improve readability and maintainability of the code
reformatted the ` read ` method in ` MessagePack. java ` to improve code readability and maintainability
added a new annotation ` Mapper ` with a default value in the ` org. apache. ibatis. annotations ` package to facilitate
add a check for fhir comment in the JsonParser to ensure that the parser correctly handles empty extensions and comments
updated artifact extraction logic to handle external metadata with no internal name to ensure proper handling of external metadata with no internal name
added a alias for " node _ popup _ scripting " in the ScriptingMenuEntryVisitor class to enhance the menu's functionality by allowing
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView. java and added
( chore ) camel - jms : use getout ( class ) to avoid unchecked cast
fix checkstyle issue in io / java / util / stream / fieldselector. java
deleted the ` AbstractDelegatedVerb. java ` and ` FailureContext. java ` files to remove unused code to streamline the codebase
updated ` GzipHandlerTest ` to use ` final ` strings and added a new ` MicroServlet ` for handling micro content to improve code clarity
fix onsubscriberedo to use backpressureutils. getandaddrequest ( )
added logging functionality to the SpeedmentImpl class to improve debugging and monitoring of component installation status
[ dsspace ] add load dspace oai config from dspace - oai.
refactor StoreScanner and TestWideScanner to improve handling of null and non - matching rows to enhance robustness by preventing null pointer exceptions and
( chore ) camel - management : enable and disable jmx on camel - test
replaced occurrences of '.'with a constant CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation. java and SourceCodeDisplay. java
added support for YARNBIN in HiveConf and updated related methods in RemoteSparkJobMonitor to enable launching of Spark with YARN and improve
added support for " maria " database type in DbConnectionManager to enhance compatibility with Maria database systems
fix log message in masterwalmanager. splitlogmanager
added a new file ` ExecuteAndReturnStringTest. java ` for testing the ` ExecuteAndReturnString ` functionality to ensure that the ` ExecuteAndReturn
don't invoke a method from a class.
refactor methods in EvictingBoundedList. java to improve code clarity and maintainability
turn cost should not be disable when turncosts = true
added a null check for the backgroundDisabled variable in the SelectBox class to ensure that the selection is non - negative to prevent runtime errors
added a null check for the method name in RpcServer. java to throw an exception when the method name is null
updated the calculation of hotseatCellSize to use border space instead of padding to improve layout consistency and ensure hotseat icon aligns
updated the method of constructing the ` valString ` string to use ` values. get ( ` partitionColumnIndex ` ) ` to streamline the
added versioned support to NamedTaskDecorator and TaskDefinition classes to ensure compatibility with different cluster versions
updated the method used to retrieve the index directory from getIndexDir ( ) to getNewIndexDir ( ) to ensure the correct directory is used for
updated the boolean value from false to true and modified the conditional check for display mode equality to ensure the test accurately reflects the intended behavior
updated UnicodeToLatexFormatter to conditionally append code point based on character type to ensure correct handling of Unicode characters and improve code clarity
added validation for ISO control characters in OAIDCCrosswalk and Item classes to ensure only valid ISO control characters are processed
danielwagnerhall for webdriverbackedseleniums that don't select the window.
updated StringSearchPanel, BookmarksPanel, and DataBrowser components, and added clear button functionality to enhance user experience by allowing users to clear
refactor ` OAuth2AuthorizationRequestRedirectFilter ` to use ` UrlUtils ` for URL construction to improve code readability and maintainability by utilizing
fix error message check that be system or machine dependent
updated the ` adaptOrders ` method to include a ` reverse ` parameter for order adaptation to enhance order handling by allowing reverse order adaptation
added null and position checks for vartype in PrettyPrinter and created a new Java11Var class with a test method to improve handling of
simonstewart : don't rely on unimplemented test
updated Configuration initialization to accept a boolean parameter and removed unnecessary conditional check for Hadoop configuration to improve flexibility in configuration handling and reduce unnecessary debug output
replaced the call to ` super. drawChildren ( batch, parentAlpha ) ` with ` super. draw ( batch, parentAlpha ) `
added unit test base on user forum issue
use getcatalinabase ( ) instead of system getProperty ( )
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the return logic in ` ShadowIC
updated the color codes in the PlotSquared class to include additional color codes to enhance the visual representation of the PlotSquared object
added ZuulProperties as a parameter in TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to support Zu
tika - 1953 -- fix unit test for tika - 3878
added ` SampleApplication ` class with a main method and modified ` BuildInfoMojo ` to include a build time parameter to enhance functionality by allowing
update calculation for xDist in PagedView. java to ensure correct positioning of the view under certain conditions
deleted the GUIRWTester. java file to remove unused code that is no longer needed
removed nullability annotations from LazyMessage and StandardSubjectBuilder to simplify method signature and improve code clarity
updated the error message format in TestStream. java to improve readability of the error message
rename thymeleaftemplatetemplatereader to org. thymeleaf. templateparser. markup
added a new test method ` testXPathString ` in ` XPathTest. java ` and updated the XPath syntax in ` XPathTest. java
added @ Nullable annotation to FutureUtils. java to indicate that FutureUtils is nullable for better handling of null values
warn on - graph construction for dynamic invoke expression
updated email addresses from " myfakeemail @ gmail. com " and " myrealemail @ gmail. com " to " myfakeemail
updated HTTP version from " HTTP / 1.0 " to " HTTP / 1.1 200 " in HttpConnectionTest. java and URIUtil. java to
added ` getColumnDataType ` method implementations in ` AbstractResultSet `, ` ResultSet `, and ` ResultTableResultSet ` classes to provide a way
add default implementation for unsupportedoperationexception
refactor HSSFPictureData class to improve code readability and maintainability
replaced the use of ` System. currentTimeMillis ( ) ` with ` java. time. Duration ` and ` java. time. Instant `
updated version handling in LibMediaInfoParser to use a new method to retrieve the version to improve clarity and maintainability of the code
added methods to create a Proxy for IdeaDependency in ProjectReader. java to facilitate the creation of IdeaDependency instances for better integration with

added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types. java to suppress serial warnings related to serialization
move mouse wheel event to the correct place
updated the method to handle null values in the ` addAppropriateLikeRegexTo ` call and added a new test for null case in
[ hotfix ] [ core ] make maptypeinfo. getelementtypeinfo ( ) return 1 instead of 2
added a method to retrieve an identity provider by issuer in XOAuthProviderConfigurator. java and corresponding test cases in XOAuthProviderConfiguratorTests.
fix cmapparser so that it don't try to parse malformed cmapparameters
refactor ContactsBackupJob to utilize a new OperationsServiceConnection class for better management of the operations service
refactor type constraint handling in ` Attr. java ` and introduce new classes ` T6938454a. java ` and ` T6938
added a check for the ` IS _ ACCOUNT _ CONFIG _ HIDDEN ` property in ` AccountList. java ` and introduced a new method
added a check to ensure the number of supported displays matches the expected number of supported bounds to improve error handling for inconsistent display states
replaced ` SchemaUtil. getSchemaKey ( ) ` with ` getSchemaKey ( ) ` in ` PMetaDataImpl. java ` and added a
ggb - 5641 fix for loginpassive action
added a new ` Box2DTest ` class and updated ` GDXTester ` and ` Box2DTest ` to include `
return ` ` anonymous'' instead of ` ` - deleted -''
[ hotfix ] [ network ] change default buffer request timeout to 5 minute
feat ( deps ) : upgrade gapic - generator - java to 0.4. 5 ( # 38 )
added a help button to the OpenOfficePanel to enhance user experience by providing help information
refactor netty acceptors to use child options instead of parent options to improve clarity and maintainability of the code
removed ` throws IOException ` from method signatures in ` BinanceAuthenticated `, ` BinanceAccountServiceRaw `, and ` BinanceTrade
refactor class loading logic in ScanResultObject. java to improve clarity and maintainability of class loading logic
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 43
added null handling functionality to Querydsl and created QuerydslIntegrationTests to enhance query functionality and ensure proper handling of null values
added a condition to check if the actor is not null in ParallelAction and SequenceAction classes to ensure actions are only processed when the actor is
fix : fix typo in cttypetest. java
replaced synchronized access with synchronized access to ` sfWritersLock ` to ensure thread safety during concurrent access
added a new interface ` Issue888 _ JavaI ` with default methods ` aa ( ) ` and ` JJ ( ) ` and `
added functionality to revoke an existing certificate in CertificateManager to enhance security by allowing users to revoke an existing certificate
added a test for writing body after no body response in AbstractHttpTest. java and implemented a corresponding test in HttpServerTestBase. java to
added error handling for null script text and language in ScriptTransformer. java to improve robustness by ensuring scripts are only used in Java 6
added support for the BONECP connection pooling type in HiveConf and updated related classes to enhance connection management and improve test reliability
replaced instances of ` mDevice. pressHome ( ) ` with ` mLauncher. pressHome ( ) ` across multiple test files to ensure
added filtering logic for lock and unlock actions in FileMenuFilter and OCFileListFragment to improve user experience by allowing lock and unlock actions based on
updated version handling in the application to improve performance and maintainability of the code
clear endpoint cache when update keyspace
added a new method ` waitForState ` in ` Locks. java ` and made ` semaphore ` volatile in ` ThreadExecutionSynchronizer.
refactor ` SkylarkDescription ` and ` SkylarkDescriptionArg ` to use ` SkylarkRuleContextAttr ` instead of ` Map < String
simonstewart : move the storage interface to a separate class to improve code organization and clarity
fix nullpointerexception in create view statement
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner. java to improve error reporting for segment generation failures
updated the retrieval of the query string in SpellCheckComponent to ensure a valid query string is used to avoid potential null pointer exceptions
added validation logic to check for illegal characters in header values to ensure only valid header values are processed
replaced instances of ` instanceSize ` with ` arrayBaseOffset ` in ` HybridLayout. java ` and added ` afterFieldsOffset `
pmd : fix issue with comment containment in apex tree
hhh - 147772 - add fetchmode. lazy _ warn for association with ` fetch '
refactored NoGetOperationsFilter, NoUserOperationsFilter, and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing Swagger
added assertions to verify database name and table name in TestCompactionTxnHandler and TxnHandler to ensure correct handling of database and table names in
camel - 16400 : added suspendable interface to timerconsumer to allow graceful shutdown.
added a conditional check before adding traces and removed the current block from the work list to ensure traces are only added when the block is not processed
updated the ` contains ` method in ` ProviderManager ` to use ` CollectionUtils. contains ` and added tests for null elements in ` ProviderManager
simplified database instance check in InsertOrUpdateGeneratorPostgres. java to improve code readability and maintainability
added a new constant for " _ LocalIndexLimit " in multiple classes to facilitate the handling of local index limits in the query
added a check to prevent adding a collection with the same name and type to ensure that collections with the same name and type have already been used
updated cursor handling logic in VDUBuffer. java and vt320. java to ensure correct cursor behavior and improve code clarity
removed the use _ retries constant from HttpShardHandlerFactory. java to streamline the code by eliminating redundancy
updated the VERSION _ NUMBER string format in JavaVersion. java and added a test for JavaVersion. parse in TestJavaVersion. java to
added a check to return early if all input gates are empty to avoid unnecessary processing when no input gates are available
added a test method to the TestReceivingMessageSourceParserTests class to facilitate unit testing of message handling functionality
added null check for properties in RemoteCluster. java to prevent potential NullPointerException when accessing properties
refactor IOException handling in FileSystemBlobStrategy. java to improve clarity and maintainability of the code
refactor multiple Java files to improve code organization and clarity to enhance maintainability and readability of the code
added a txConfidenceListener instance and removed it from the walletService to streamline the transaction confidence update process
added a new constant G1 _ PERM _ GEN in JmxSupport. java to support G1 Perm Gen functionality in the application
removed unused imports and simplified return statements in NearbyController. java to streamline code and improve readability
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
added checks for home activity type in BaseSwipeUpHandlerV2. java to ensure proper handling of home activities in the gesture state
rename DefaultEdgeClientFilter to EdgeAddHeaderClientFilter and update related references to improve clarity and maintainability of the code
corrected the spelling of " networkCountryIso " and " simCountryIso " in ShadowTelephonyManagerTest and ShadowTelephonyManager
updated the unfreezeAmount assignment in UnfreezeBalanceV2Actuator. java to ensure proper handling of unfreeze balances
fix the description of conferenceschedulingxlsxfileio
simonstewart : replace google's java. io. files. copy ( ) with commons - io. copydirectory ( )
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
refactor Observable class to improve code readability to enhance maintainability and facilitate future feature additions
replaced ` $ pushAll ` method with ` addMultiFieldOperation ` in ` Update. java ` and added tests for multiple push - all
added null check for randomUUID before setting it to avoid potential NullPointerException when randomUUID is null
added support for hover event handling in InputConsumer classes to enhance user experience by enabling hover functionality for quickstep live tiles
added a new conditional check for bootstrap configuration in CoreContainer. java to ensure that the bootstrap configuration is only set when necessary
camel - 15836 : camel - netty - allow to configure max header size for camel - http
; ; review for jb jb jb jb jb
refactor code to use ` new File ( baseDirectory. getAbsolutePath ( ) ) ` instead of ` toPath ( ). resolve ( templateRelativePath )
fix broken test
updated query commands in SchemaCrawlerTextCommandsOutputTest to use " all _ tables " instead of " CUSTOMER " and added a new
added currency metadata handling for Kraken assets in KrakenAdapters. java to ensure accurate representation of currency information for Kraken
added a toString ( ) method to AnyOf class and created a new test class AnyOf _ toString _ Test to provide a way to display
refactor email subject name handling in AlertTaskRunnerV2. java to improve clarity and correctness in email subject generation
add nullness check for influxdb measurement
replace dotransform ( number ) with downcast ( number ) in converter
added filtering logic for unique local addresses in NetUtils. java to ensure only valid local addresses are processed
added a method to quote column names in DataTextFormatter. java to ensure proper handling of quoted column names in data output
added methods for setting properties and retrieving properties in WrapSystem, StrUtils, and CompileMethodEntity classes to enhance functionality for managing system properties and
added a constructor to UpdateRequest that accepts a URL parameter to enhance functionality by allowing requests to post to a specified URL
updated enum declaration from static to instance in ProtoTypeAdapter. java to ensure consistent usage of the enum throughout the codebase
removed the ` addExperimentalFormatWarning ` method from ` RequestHandlerUtils ` and added it in ` DataImportHandler ` and ` ReplicationHandler
added formatting for module names in JpmsUtil. java to improve readability and maintainability of the code
adjust row height of table to match the font size
[ hotfix ] [ broker ] remove unused parameter in defaultbrokerheartbeatmanager
refactor partition and split handling logic in CqlInputFormat. java to improve clarity and maintainability of the code
refactor condition in JUnitTestsShouldIncludeAssertRule. java for improved readability to enhance code clarity and maintainability
[ drools - 407 ] ruleterminalnodelefttuple : add equal and hashcode to ruleterminalnodelefttuple
added functionality to handle StageIDsRearranger in TezCompiler to ensure proper handling of StageIDs in the optimizer
use ` ` org. apache. cassandra. net'' instead of ` ` cassandra. concurrent''
updated memory consumption logic in LotsOfOutput. java to improve memory management and provide more detailed logging for memory consumption
added imports for Document in multiple Java files to enhance documentation clarity and maintain consistency across the codebase
updated ` LdapAutoConfiguration ` and ` LdapProperties ` to use ` anonymousReadOnly ` instead of ` default'to ensure correct handling of anonymous
refactor DatabaseMetaData class to improve code readability and maintainability
make echopipelinetest run with @ runwith ( junit4. class ) private
added a ` finishMocking ` method to ` DefaultMockitoSession ` and implemented it in ` DefaultMockitoSession ` to handle exceptions
removed unnecessary ` withoutExtraDeps ` method calls in ` GoTestDescription. java ` and added new test cases in ` GoTestIntegrationTest
replaced instances of ` buffer ` with ` readBuffer ` and ` writeBuffer ` in ` SPDYAsyncConnection. java ` to improve clarity
change block retrieval from static block to flowing block in BlockLiquidWrapper. java to ensure correct block structure is used for liquid
updated the background location handling to use a URI for the background class instead of a hardcoded class name to ensure the background location listener uses the correct
( chore ) camel - apr : fix typo in javadoc
[ hotfix ] [ flink - 13551 ] fix cli to work with streaming plan
fix crash in craftingmanager. getshapedrecipes ( )
[ hotfix ] [ test ] fix intermittent failure in flaky test
tabsandindentsvisitor don't handle \ r'anymore
added a compiled pattern for pg _ temp _. * in NeuteredLinesFilter. java to ensure proper handling of temporary files in
sample code to set total timeout, add api client header test
added handling for " INTERVAL " data type in DataTypeFactory and modified condition checks for " NCLOB " in ColumnSnapshotGenerator and ColumnSnapshotGenerator
add publish histogram metric to wavefront distribution summary
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to include a warmup of 50 milliseconds
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to provide a way to register sensor listeners with specified parameters
added multiple test methods for SslConnection in SelectChannelServerSslTest. java to improve error handling and logging for SSL connection issues
added null check for ignite before closing it to prevent potential NullPointerException when ignite is not initialized
modify the logic for printing the total line number in AbstractClient. java to handle cases where the total line number is zero to improve clarity of
pdfbox - 4892 : catch exception, return false instead of throw
added unit tests for ` setDisplayHdrCapabilities ` in ` ShadowDisplayTest. java ` to ensure that the ` setDisplayHdrCapabilities `
added a condition to set classLoader to null in JavacInMemoryStep. java to ensure proper resource management and prevent memory leaks
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of semantic exception messages and provide better debugging information
added a default constructor to the Message class to provide a default constructor for Message instances
added logic to handle non - GUI components in the SerializableIdiom class to improve bug reporting for non - GUI components
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and modified BigDecimal creation logic to improve precision handling and ensure accurate decimal representation
modified GZIP output handling in CompressionFilterTestServlet and CompressionResponseStream to ensure gzip output is retained when the response is committed
updated the ` getAuthorization ` method to accept a ` authenticateHeader ` parameter instead of ` WWWAuthenticate ` to enhance functionality by allowing
added a condition to check if the directory name starts with " com \ \ ibm \ \ \ " and " org \ omg \ \ "
added a method to retrieve the thread group name in the ThreadLeakTest class to improve thread identification for better debugging
added logging functionality and modified access decision handling in MethodInvocationPrivilegeEvaluator. java to improve error handling and enhance debugging capabilities
changed the package of the DmozParser logger from org. apache. nutch. crawl to org. apache. nutch. tools to
updated import statements in RegisteredServiceChainOperatorTypes. java and ChainingRegisteredServiceDelegatedAuthenticationPolicy. java to improve code clarity and maintain
cloudstack - 7131 : add iso volume to the vm's data center
removed unused handling of signal handlers in SigInt. java and updated related tests in SigIntTest. java to streamline signal handling logic and
replaced the static import of ArrayUtils. isEmpty with a utility method call to improve code readability and maintainability
updated AxonAutoConfigurationWithSpringCloudTest. java to use SpringBootTest annotations and added a new discovery client to enhance test configuration and ensure
added multiple @ Override annotations in ColorRGBA. java to improve code clarity and ensure proper method overriding
planning : do not initialize planning entity if solver be already initialize
updated TwoLevelArtifactCacheDecorator and ManifestRuleKeyManager to include artifactBuildTimeMs and modified CachingBuildRuleBuilder to include buildTimeMs to enhance
replaced direct access to ` agg. getFields ( ) ` with ` agg. getDeclaredFields ( ) ` and added a check for ` numEntries
added a null check for the block before adding a block appearance to avoid potential NullPointerExceptions when the block is null
added support for CNC currency pairs in BTCEUtils and updated ticker retrieval in TickerDemo to enhance functionality for currency pairs and improve ticker
updated the skewAllowance value from 5 to 15 and refactored the skewAllowance assignment logic to improve flexibility in handling skew allowance
updated SongListActivity to use ItemSortBy instead of Genres to ensure consistent sorting order for song data
removed the ` readBodyToBytesIfNecessary ` method from ` Utils. java ` to streamline the request reading process by eliminating unused imports
added LegacyBaseBlockWrapper class and updated MobSpawnerBlock and SignBlock to extend it to improve code organization and facilitate future
refactor snapshot handling in IcebergBranchExec. java and add a test for it in TestHiveIcebergBranchOperation. java to improve
replaced ` newArrayList ` with ` singletonList ` in ` AbstractLdapMockMvcTest. java ` to simplify code and improve readability by using a more
refactored bounce count and frame number handling in PhotonMappingDemo and HybridDemoSsboInstancing classes to improve
added validation for the requirePasswwordChange property in IdentityProviderEndpoints. java and updated identity provider provisioning in IdentityProviderEndpointsMockMvcTests
added a method to clear notInitializedInConstructors in UnreadFields. java to ensure that the class is not initialized when the class is not
modify the connection URL handling in JdbcExecutor. java to ensure proper error reporting when the connection is closed
added a new test method ` testRequiredBody ` in ` SpringmvcClient. java ` to verify the functionality of the ` @ Name `
updated regex patterns for user and password in CredentialInjector. java and adjusted JDBC URL format in CredentialInjectorTest. java to ensure correct handling of
added a new menu item " Item4 " and a key binding for the enter key in ActionListenerCalledTwiceTest. java to support additional
updated debug print statements and modified assertion logic in TestCoreParser. java to improve debugging and ensure results are only produced when necessary
updated comparison from ` Arrays. equals ` to ` id ` in ` SimpleNode. java ` to ensure proper comparison of ` id ` and
changed the access modifier of the PopulatorContextStackItem class from public to package - private to allow access to the class from other packages
updated numDocs retrieval logic in MoreLikeThis. java and added a new test for small sample from corpus in TestMoreLikeThis. java
refactor event triggering logic in QuestManager. java to improve code readability and maintainability
; ; addendum
updated the syntax for appending values in MongoSessionDataStore. java to improve code readability and maintainability
add a native method unsafegetlong to the compilerdirectivessubstitutions
updated time zone name for Asia / Amman from ARAST to EET across multiple language files
updated ID from 90000010 to 90000011 in DeprecationLogger. java to correct the ID from 90000010 to 90000011
added exception handling for JDBC exceptions in SessionImpl. java to ensure proper handling of JDBC exceptions during rollback operations
remove unnecessary system output from downloadexternalfile. download ( )
disable menu bar on macos
added unit test for piecewise integration in ggb
changed access modifier of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods from private to protected
added a new method ` testConfigWhiteList ` in ` HiveConf ` and a corresponding test in ` TestJdbcWithSQLAuthorization ` to
removed duplicate entry name and value assignment in EntryLoader. java to streamline code by eliminating redundancy
updated target location calculation to use player team instead of sharded to ensure the target reflects the player's team
updated cookie domain from " comp1 " to " getHostName ( ) " to ensure the correct domain is used for cookie creation
added validation checks for nullable columns in ` MissingColumnChangeGenerator `, ` MissingTableChangeGenerator `, and ` ColumnSnapshotGenerator ` to
chore ( regen ) : update license year for generated file
refactored CustomCollectionTest and CompositeIdRouter to use static final separators and bits separators to improve code readability and maintainability by using static final
replaced InputStreamList with SnapshotGeneratorFactory in ExecutablePreparedStatementBase. java and added snapshot handling in PostgreSQLIntTest. java to
updated conditional checks for max _ cached _ files and max _ cached _ size in DefaultServlet. java to ensure proper handling of cache size and
added drag - and - drop functionality for tab components in JabRefFrame. java to enhance user experience by allowing users to drag and drop
updated description generation and assertions in ExecutionUnitRunner, CucumberTest, and ExecutionUnitRunnerTest to improve accuracy of description handling and ensure accurate
replaced `! isEmpty ( ) ` with ` isNotEmpty ( myVersion ) ` and ` isNotEmpty ( buildTimeString ) ` to improve readability and
removed the public access modifier from several methods in TimeUtils to allow access to these methods from other classes
added a method to check if a security frame is injected or not in RefectionMHTests to improve security frame handling and ensure compatibility with
updated file extension check in PreviewImageFragment. java to ensure correct handling of. jpg and. jpeg file extensions
updated method return logic for HostedMethod in NativeImageDebugInfoProvider. java to ensure correct handling of HostedMethod instances
added ` getIcon ( ) ` method to the ` Data ` class and imported ` Icon ` from ` ImageUtilities ` to provide a way to
modified substring extraction logic in CounterRequestAggregation. java to handle cases where the last character is not present in the request name
updated regex replacement logic in FindAndReplace. java and added a new test for dollarsigning in FindAndReplaceTest. java
don't try to connect to a jabber connection if it's not an xmpp connection.
refactor SchemaExtractionProcessor for improved clarity to enhance code maintainability and readability
added a new method ` copyDir ` to the ` IO ` class to copy files to a specified directory to enhance file copying functionality and improve
added exception handling for unknown datum class in JacksonUtils. java to improve error reporting for unknown datum types
replaced references to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with ` requireRule ( )
simplified height calculation in SelectBox. java to improve code readability and maintainability
added normalization of database and table names in ObjectStore. java to ensure consistent handling of database and table names
added schema handling for PostgreSQL and Oracle databases in DbSqlSession. java to ensure proper schema is set when using an Oracle database
removed the call to Logout in HomeFragment. java to simplify the logout process by directly calling getActivity ( )
[ flink - 1337 ] [ connectors / streaming ] fix flaky test
added null check for candidates in FastImportAction. java to prevent potential NullPointerException when candidates are null
refactor managed bean check logic in ContainerLifeCycle. java and update test assertions in ContainerLifeCycleTest. java to improve clarity and correctness of
rename iexecutionattributesdialect to iexecutionattributedialect for consistency
added a call to ` metadata. clearUnsafe ( ) ` in ` AlterTest. java ` to ensure that the metadata is properly cleared for
fix for null pointer exception in gettime command
added null check for measurement in TabletInsertionDataContainer and replaced setRingBufferSize method with setThreadFactory method in DisruptorQueue to
deleted the Session2Token. java file to the class is no longer needed in the current project
remove volume from db when volume creation fail
added a new Install class and integrated it into PopupDataProvider and InstantAppResolver to enable users to install and drop target labels in the launcher
added a ` NullAuthoritiesPopulator ` class and modified ` LdapAuthenticationProviderTests ` to include a test for handling null authorities to ensure
updated the way the retrolambda JAR path is retrieved and added a warning for non - existent jars to ensure compatibility with the latest version of
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera. java ` to streamline the build process by elim
replaced FixedBitSet with Bits and refactored the sortLiveDocs method to use a more streamlined approach to improve code readability and maintainability
added handling for null results in JMESPathExtractor to ensure robustness by preventing null pointer exceptions
updated import statements in AuthorizeTag. java and added a check for null or empty authorities to improve code clarity and prevent potential null pointer exceptions
updated assertions in DefaultLogoutManagerTests and DefaultSingleLogoutServiceLogoutUrlBuilderTests to use consistent formatting to improve code readability and maintainability
cloudstack - 7131 : fix typo in exception message
refactor ` RobolectricTestRunner ` to use ` testClassConfig ` instead of ` classConfig ` and change the type of ` shadows `
replaced SelectChannelConnector with SocketConnector in JettySolrRunner. java to align with the latest Jetty API changes
refactor partition key validation logic in HiveAlterHandler. java and add tests in TestHiveMetaStore. java to improve accuracy of partition key comparison and
added a new BooleanFlag ENABLE _ ICON _ IN _ TEXT _ HEADER to the FeatureFlags class to control the visibility of icons in the text
updated the condition check for component activation in SimulationStatus. java to ensure proper handling of component activation in the configuration
replaced ` SharedBlockingCallback. Blocker ` with ` Callback. Completable ` in ` StandardDeployer ` and ` StandardUndeployer `
added workspace listener to update the preview graph in PreviewControllerImpl. java to ensure the preview graph reflects the current state of the workspace
added a condition to check if the method's declaring class is not a VM anonymous class to ensure that only non - VM anonymous classes are
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path format in CatalinaAcegiUserRealm. java to ensure compatibility with Spring's ResourceLoader
updated log messages for the ActionManager in AmbariServer. java to improve clarity of log output during server startup
added null checks for ` init `, ` modify `, and ` getter ` in ` JSONWriter. java ` to enhance robustness by
refactor Hadoop configuration handling in SliderAppsViewControllerImpl. java to improve clarity and maintainability of the code
added a check to ensure backgroundManager is not attached before setting it to avoid potential null pointer exceptions when the background manager is not attached
added functionality to set the current tab in AllAppsTabbed, Launcher, and PagedView classes, and adjusted height calculations in Workspace to
added a null check for the URL in BaseDataSource and created a test for PGSimpleDataSource to ensure that the URL is valid and handle potential
added Java version checks for PebbleTemplateEngine in PebbleModuleTest. java to ensure compatibility with different Java versions and improve test
added EditNameDialog functionality and improved directory creation handling in FileDisplayActivity to enhance user experience by ensuring the correct directory name is displayed
added functionality to toggle bar borders in multiple chart activities to ensure proper rendering of bars in the chart
updated SSL URI from " https : / / www. okcoin. com / api " to " https : / / www. okex
refactor AcceptedForagerTest to use createStepScope for step scope creation to improve clarity and maintainability of test code
refactor file reading logic to use a SeekableByteChannel instead of FileChannel to improve performance and resource management during file operations
refactor the ` getFlattenFieldTransferPair ` method to accept ` ColumnReference ` as a parameter to improve code clarity and maintainability by
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
removed redundant check for ` LAMBDA _ CAPTURING _ SERIALIZATION _ TYPES _ KEY ` in ` SerializationConfigurationParser
added heap watch limit configuration for debug devices in QuickstepProcessInitializer. java to improve performance monitoring for debugging purposes
refactor sumWithCompensation logic to use a variable ` val ` for clarity to improve code readability and maintainability
added a boolean flag ` shouldRethrow ` and modified conditional logic in ` AbstractLoadBundleTest. java ` to improve test reliability
fix for http : / / issues. apache. org / activemq / browse / amq - 388
updated return statements in ICC _ Profile. java and ColorConvertOp. java, and added a new InvalidRenderIntentTest. java file
added MeterRegistryLifecycle bean to manage meter registry lifecycle to ensure proper resource management and prevent potential memory leaks
[ 3.0 ] change log level to info for config center config item
added exception handling for certificate generation in CertificateFactoryTest. java to ensure that CertificateException is thrown when the byte array is empty
added support for ambiguous binary operator in simple predicate parser
removed redundant variable declarations in onTabUnselected method and added focus handling in IDEEditor to streamline code and ensure windows are properly dismissed
add ` ` user. name'' to accesslogvalve log message
updated texture scaling and texture scale values in SkeletonModelGpuSkinningTest. java ; added null check in OgreXmlLoader.
removed InterruptedException from the createOrThrow method signature to simplify method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse. java to indicate that these methods are outdated and should not be used in future versions
added functionality to generate d. ts files when the " dtsout " option is set to enable users to generate generated d. ts files
[ hotfix ] [ kinesis ] add test for fetch timeout
added ". html " to the timestamp in StreamingDataflowWorker. java to ensure the timestamp is rendered as a HTML file
increased the maximum number of metastore server threads from 100, 000 to 1000 to accommodate larger metastore server configurations
changed the return type of onTaskSnapshotChanged from void to boolean to enable the method to return a boolean indicating success
updated shadow radius assignment in SwipeUpAnimationLogic. java to ensure correct shadow radius is used for animations
added a test for chain nesting and aggregation in ChainParserTests. java to ensure correct handling of aggregator input and improve test coverage
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest. java ` to ensure the loop correctly
fix : do not invoke isinteractive ( ) if the source be an interactive source.
fix npe in createkeytabfilesserveraction when previouscachedfilepath be null
added DisplayController import to LauncherPreviewRenderer. java to ensure proper handling of display controller instances
added logic to set the tooltip text for root directories in MetalFileChooserUI and SynthFileChooserUIImpl to ensure the tooltip text reflects the
replaced ` getToolkit ( ). getScreenSize ( ) ` with ` Toolkit. getDefaultToolkit ( ). getScreenSize ( ) ` to ensure
changed method signature from ` recognise ` to ` recognise ` in ` TensorflowRESTCaptioner ` and ` TensorflowRESTRecogniser ` to
added tests for entity insertion and deletion in JPASQLBase. java and refactored JPASQLQueryBase. java to improve test
removed debug print statement for drag index removal in FreeformFinSetConfig. java to streamline drag index handling and improve user experience
updated moeVersion from " 1.3. 2 " to " 1.3. 0 " to reflect the latest version of the software
updated runtime error message and added spendAllGas ( ) method call in Runtime. java to improve error reporting and ensure gas is properly
updated error messages in ElementsShouldSatisfy and ZippedElementsShouldSatisfy classes to improve clarity and consistency in error reporting
added a @ Deprecated annotation to indicate that the Weights class is outdated and should not be used
move registration of unsafe plugins to a separate method to improve code organization
added Hint annotation for isDep = false in AndroidAppModularityDescription, AndroidGraphEnhancerArgs, and AndroidBinaryModularIntegration
changed mCenterPagesVertically from true to false in AppsCustomizePagedView. java to ensure that the center page is always visible
[ hotfix ] [ table - planner - blink ] fix npe in migrationrequestoperation
[ konnected ] replace ` ` host'' with ` ` baseurl''
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy
added database handling and modified SQL queries in TestJdbcWithMiniLlap. java and LlapBaseInputFormat. java to ensure compatibility with different
added a new test method ` testCaseInsideBrackets ` in ` CaseExpressionTest. java ` to validate SQL parsing and deparsing for
added MotionEventCompat imports and refactored copy mode handling in ConsoleActivity. java to improve code clarity and maintainability by encapsulating copy mode
updated import statements and refactored the ` writeXmlOutput ` method to use ` Writer ` for XML output to improve XML output handling and
camel - 16400 : fix npe in abstractlistaggregationstrategy when exchange be null
( chore ) camel - core : use throwable instead of exchangehelper
move basic configurator class from logback to logback. classic
added a condition to check if targetVN has a specific ValueNumber. PHI _ NODE to ensure that targetVN does not contain
removed import of SharedStringSource in TestXSSFRichTextString. java to streamline code by eliminating unused imports
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with specified parameters
refactor multiple classes related to BoxAndWhisker and Histogram functionality to improve code organization and maintainability
[ hotfix ] [ test ] migrate ReadableWritableConfigurationTest to junit 5
changed ` NormUpdate ` to a static class and modified equality checks in ` InstantiatedIndexReader. java ` ; changed ` collection name `
changed the visibility of the singleton instance of IndexFileNameFilter from public to private to restrict access to IndexFileNameFilter for better encapsulation
refactor if statement test to improve readability and maintainability of the test code
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl. java ` to ensure correct
refactor Gson handling in TypeAdapter. java and update nullSafe method in StreamingTypeAdaptersTest. java to improve code clarity and maintainability
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new class EXIFReader to process metadata from a file to enhance functionality by allowing extraction of metadata from external files
change default value of cloudwatchmeterregistry. batch ( ). tostandardunit ( ) to none
[ jbpm - 3762 ] fix applypmmlmodelcommand to set the value of the parameter
add more information to fluent protocol when a counter currency transfer be send at startup.
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
catch branchtargetOutOfBoundsexception in substrateaarch64backend. emit
added a try - finally block in ` JDKXRLogger. java ` and introduced a concurrent initialization test in ` XRLogTest
added a new method ` find ( Class < Ticket > ticketClass ) ` to ` TicketCatalog ` and updated ` DefaultTicketCatalog ` to
refactor code for better readability and maintainability to enhance code clarity and facilitate future modifications
[ hotfix ] [ runtime ] fix memory leak in sortmeresultpartition
updated constructor calls in JmsIO to include null parameters to ensure proper handling of null values for read and write operations
added a'type'parameter to the list method in PluginHandleController and PluginHandleDTO classes to enhance functionality by allowing plugin type to be
updated method calls from ` start ( ) ` to ` start ( ) ` for ` DefaultSpanCreator ` and ` SleuthAdvisorConfig
added new drawable format options to IOSApplicationConfiguration and updated IOSGraphics constructor to utilize these format values to enhance flexibility in drawable configurations and improve code
refactor login handling in LoginIT. java to use a new attemptLogin method to improve code clarity and maintainability by encapsulating login logic
[ pytorch ] throw unsupportedoperationexception if complex ( ) be not support.
refactor thread lock name retrieval to use a do - while loop to improve responsiveness and prevent potential thread interruptions
refactor Implements and ShadowPicker classes to improve code organization and maintainability
refactor RestTransportClient to use a dedicated method for creating HTTP / 2 client options to improve code organization and maintainability by centralizing the creation
added support for both DynamicStruct and DynamicArray classes and improved type handling in SolidityFunctionWrapper to enhance type handling and provide clearer error
added a boolean parameter to the ` getStringProperty ` method calls in ` InlineLayout. java ` and ` FontUtil. java ` to enable
added constructors to ` CopyStep ` for accept a ` Path ` parameter and created a corresponding test in ` CopyStepTest ` to enhance functionality
fixed - rsemaphore. acquire ( ) and rsemaphore. addpermits ( ) method don't
( chore ) camel - aws2 - dsl : fix test failure on window
added a new ` FlavorParser ` class and integrated it into ` BuildTargetParser ` and ` FlavorParserTest ` to facilitate parsing of
replaced instances of List < String > with List < ByteString > in WitnessScheduleStore. java to use ByteString instead of String
added a check to ensure resultsMeta is not empty before printing to avoid printing empty results
refactor ConcurrentLinkedQueue logic to improve handling of node removal and add a new RemoveLeak class to enhance the robustness of the removal process
added a boolean parameter ` addSpecialTokens ` to the ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] [ runtime ] use collections. nCopies for resource profile computation
[ iotdb - 6657 ] fix load singletsfilenode when there be too many chunk
added session storage context to ` BrowserSessionStorage ` and integrated it into ` DuoSecurityMultifactorWebflowConfigurer ` to enhance
add unit test for schema validation
added a default constructor to TypeAdapter and updated the @ Ignore annotation in Java17RecordTest and ReflectionAccessTest to ensure compatibility with Java 17
refactor SuspendedEvent to improve event handling and context tracing to enhance event clarity and ensure proper context tracing
refactor AntPathRequestMatcher class implementation to improve code clarity and maintainability
removed null parameters from createResourcePolicy method calls across multiple classes to simplify method signatures and improve code clarity
added a null check before releasing the deflater entry in GzipHttpOutputInterceptor. java and modified assertions in BlockingTest. java to improve
added @ AfterEach annotation to ReactorCoreAutoConfigurationTests. java to ensure proper cleanup of resources after each test execution
added normalization for MD5 checksums in CheckSum. java to ensure proper handling of special characters in checksums
refactor command handling and add null check for completer to improve code robustness and prevent potential NullPointerExceptions
make keylistener final in basicprofilerstate ; add @ override
replaced the type of objectToSave from T to DBObject and added a new test for saving JSON strings to ensure correct handling of JSON strings
added functionality to handle multiple remote addresses in RequestUtils to ensure that only valid remote addresses are processed
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` and replaced ` String ` with ` ObjectBuilder `
added a new method ` getAddr ( ) ` to retrieve the local host address and modified the connection URL to use ` NO _ PROXY `
refactor glyph handling logic in GlyphLayout. java and add a new test case in BitmapFontTest. java to improve resource management and ensure
( chore ) camel - pulsar : allow pulsar split reader to pause / resume split
added a new configuration variable for HIVESCRIPTIDENVVAR in HiveConf and updated ScriptOperator to utilize this variable to enhance flexibility in
refactored the ` getListedTermCounts ` method to streamline term count retrieval to improve code readability and maintainability by separating sorting and
added a new file ` UseSeparateStepSizeAction. java ` that implements the ` UseSeparateStepSizeAction ` feature to enhance
refactor FileMenuFilter to utilize AccountManager and FileLockingHelper for improved file management to enhance code clarity and maintainability while ensuring proper
hbase - 25880 fix roundrobintableinputformat to handle empty or null region server
updated header values from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest
pdfbox - 4892 : use ioutils. close, a suggest by valerybokov
added fullscreen mode functionality to GwtApplication and GwtGraphics classes to enhance user experience by allowing fullscreen functionality
replaced ` LoadingCache < String, String > issuers ` with ` LoadingCache < URI, String > parameterName ` and refactored
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the functionality of ` SoulApacheDubbo
replaced ` Gdx. files. internal ( ) + ". png " ` with ` resolve ( fileName ). pathWithoutExtension ( ) "
updated logging levels from warn to info in ChainingAttributeReleasePolicy. java and OidcDefaultJsonWebKeystoreCacheLoader. java
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in ` PlayerApiServlet. java ` and ` BrowseHandler.
updated package structure in Compiler. java to improve organization and clarity of the code
refactor conditional logic in NullDerefAndRedundantComparisonFinder. java to improve clarity and correctness of redundant branch checks
use defaulthttpdatasource instead of contentid for manifest fetch
added a new configuration property for the maximum number of prepared statements per database connection to allow configuration of the maximum number of prepared statements per connection for
changed the return type of the set method from WritableConfig to Configuration across multiple configuration files
added error handling for CommandOperation in AutoScalingHandler. java to improve error management and provide clearer feedback for bad requests
improve javadoc for combineddataset
replaced the variable ` buf ` with ` b ` in the ` InflateIn _ DeflateOut ` class to improve code readability and maintain
added methods to remove cryptography restrictions from the JceSecurity and CryptoPermissions classes to enhance security by allowing removal of cryptography restrictions
fix entity teleport not be able to teleport
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest. java ` to verify the functionality of
added null check for vContext in Vectorizer. java to avoid potential NullPointerException when accessing vectorization contexts
fix # 539957 ( # 539957 )
hbase - 15836 disable metric user in test
added a ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
added new boolean flags ` mUserPresent `, ` mVisible `, and ` mAttached `, and modified the unregisterReceiver logic to
refactor AsyncFile, HttpClientRequest, HttpClientResponse, HttpServerRequest, and ReadStream classes to improve code organization and maintainability
added a parameter to the zadd method call in PipelineBase. java to enhance functionality by allowing the zadd operation to include additional parameters
updated assertions and variable names for consistency and clarity to improve code readability and maintainability
jm - s - r - r - r - r - r - r - r
added a method to retrieve an Optional < TargetNode <?,? > > from the target graph and refactored the VersionPropagator
replaced EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW with corresponding EPOCH _ SECONDS _ LOW and adjusted conditional
modified the return value in EscherBlipRecord. java and added a new test class TestOLE2Embeding. java to
updated initialization of row and column variables in JSONParser. java to improve clarity and maintainability of the code
replaced ` JavaType. ShallowClass. build ( fullyQualifiedTypeName ) ` with ` Pattern. compile ( pattern ) ` in ` Find
updated the DETAIL _ THUMB _ HEIGHT and added play trailer actions in BaseItemDetailsFragment. java to enhance playback functionality and improve user
added a native method to remove glyph information from the cache in CStrike. java and CStrikeDisposer. java to enhance functionality
fix : terminateallbehaviour don't delete process instance
camel - 16400 : camel - core - allow to use @ xmlrootelement annotation in type name strategy
updated the URL in the test from " http : / / www. apereo. org / scottb. html " to "
added a defPrefs option to reset all preferences to default values to enhance user experience by allowing users to clear default preferences
hbase - 15836 addendum : change access modifier of metric and servlet from private to protect
[ danfossairunit ] remove deprecate channel for manual fan speed
use hamcrest assertion instead of junit in examples / microprofile / testendpoint. java
removed redundant call to stop ( ) in TweetActivity. java to streamline the code by eliminating redundancy
added equals and hashCode methods in PartitionPanel and PartitionFactory classes to ensure proper handling of null values and improve hash code generation
fix root disk size for vmware vms
updated visibility logic to conditionally show suggested apps based on user preference to improve user experience by allowing suggestion apps visibility based on user preferences
[ geot - 7478 ] add api bbox parser to handle invalid crs
added validation methods for non - negative value and position parameters in LibrustzcashParam. java to ensure proper handling of negative values
mark IThrowableEntity a deprecated to indicate that it should no longer be used in favor of an alternative implementation
added random values for x and y in NodeDataImpl. java to ensure uniformness of data generation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to improve
refactor variable names for clarity and consistency in JavacStep. java to improve code readability and maintainability
updated the VERSION constant from " 0.9. 1 " to " 0.9. 2 " to reflect the new release version
added a condition to check if the item type is DEEP _ SHORTCUT to ensure proper handling of SHORTCUT items in the list
added a hashCode ( ) method to the TimeGranularitySpec class to ensure proper handling of null values and hash code generation
changed access modifiers of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes and improve encapsulation
added a boolean flag ` useProxyResponseCode ` to control response code handling to ensure proper handling of NTLM proxy when the response code is
aarch64 : use aarch64. sp instead of aarch64. sl
bug fix : when we don't have any public ip in the list of public ip of the host, we don't
added a null check for ` maxScore ` in ` JSONResponseWriter. java ` and modified the query in ` TestDistributedSearch. java
updated audio recording duration from 22050 to 44100 in AudioRecorderTest. java to improve audio recording accuracy
updated calculation for newOriginX in RocketFigure. java to ensure correct positioning of the new origin based on the specified scale
added a check for empty data source in DruidQueryBasedInputFormat. java and set intervals to default interval to ensure proper handling of empty data
added ORIGINAL _ TYPE and ORIGINAL _ ID to the regex pattern in CustomProperty. java and created corresponding tests in CustomPropertyTest.
added a static method ` create ` to create an ` Index ` with a parent and data map to facilitate the creation of ` Index
refactor isBetweenGivenPeriod logic for clarity to improve readability and maintainability of the code
updated schema compatibility handling in SchemaCompatibility. java and added a test for schema compatibility in TestSchemaCompatibility. java to improve compatibility handling and ensure
added handling for persistent attribute types in QueryUtils. java to improve handling of entity paths and collections
added synchronization to prevent concurrent access to spans in TestSpanHandler. java to improve thread safety and prevent potential concurrent issues
updated method signatures to use a wildcard List <? > instead of List < Object > to simplify method signatures and improve type safety
ambari - 15218 . suppress error message when try to get defaultrealm in non kerberized environment . ( pallavkul via gaurav nagar )
updated OAuth2AccessTokenEntity. java file to improve access token handling and enhance security
updated error messages in SCBEngine, TestInvokerUtils, and HighwayServerInvokeFail classes to clarify that a service can process requests due
added new project files for iOS data and resources in GdxSetup. java to streamline the setup process for iOS applications
updated TestSearcherManager to use ConcurrentMergeScheduler for improved merge performance to enhance performance by utilizing a concurrent merge scheduler
added null and empty list handling in QTestUtil and GenericUDTFInline classes to improve code robustness and prevent potential NullPointerExceptions
refactor MapIterable, FJIterate, and ParallelIterate classes to improve code organization and maintainability
make sure we don't lose focus if we don't want it
fix issue with hibernate bundle not register properly.
update elapsedTimeMs calculation in HikariPool. java to use connectionTimeout instead of elapsedTimeMs to ensure accurate time measurement based on connection timeout
added support for non - packaged resources in the VoiceCompiler class to ensure proper handling of non - packaged resources during component processing
updated file path handling in Compat and FileOpener classes to improve compatibility with different file systems
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to allow the method to
added functionality to check for duplicate port numbers in BesuCommand to ensure that duplicate port numbers do not interfere with existing port configurations
added null mask handling in WebSocketClient and modified WebSocketConnectionD12 instantiation to allow for customizable mask generation for WebSocket connections
plan for ud _ table _ table _ for ud _ table ( )
added tracking for Bucketed - related node selection counts in NodeScheduler and NodeSelectionStats to improve tracking of selected nodes and enhance monitoring capabilities
added a new Person class with a name attribute and its getter method to facilitate the creation and retrieval of a Person instance
added a boolean variable ` hasOwnerPtr ` and modified the execution logic in ` CPlatformWindow. java ` to improve handling of the owner
added a clock display and animation functionality in PlaybackOverlayFragment to enhance user experience by providing a visual representation of the clock
remove duplicate call to world. updatecomparatoroutputlevel ( )
changed the access modifier of IMPL from private static final to private and modified exception handling in SegmentReader. java to improve encapsulation and enhance error
refactor Sudoku cell handling to run on the Event Dispatch Thread to improve responsiveness and ensure UI updates occur on the Event Dispatch Thread
replaced ` DefaultInetAddressAdapter ` and ` DefaultInetAddressAdapter ` with ` CollectionTypeAdapter ` and removed the ` DefaultInetAddressAdapter
added methods to retrieve double, long, boolean, and string values from the Series class to enhance functionality for handling null values in the Series class
updated the audio time stretch option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to ensure
updated GeoRelationUtils and GeoUtils to use Math. min and Math. max for bounding box calculations to improve accuracy of bounding box calculations and
cloudstack - 7131 : fix the bug of get the disk offering from the service offering
added JUnit @ Before and @ After annotations to HazelcastTest. java to ensure proper resource management during tests
added tests for AES / NoPadding and NoSuchProvider exceptions in BlockCipherTest. java to ensure correct handling of cases with missing padding and provider
added filters for printing operations logs in QFileClient. java to enhance logging functionality for better debugging
add support for inject type argument in aop proxy
added a null check for currentConnectionAddress in the ProtocolProviderServiceServiceSipImpl class to ensure proper handling of the current connection address when
replaced the use of Math. addExact with MathUtils. cappedAdd for demand calculation to simplify the code and improve readability by using a more
replaced direct file deletion with a try - finally block to ensure proper resource management and prevent NullPointerExceptions
refactor search handling in multiple fragments to use Intent instead of TvApp directly to improve code clarity and maintainability by reducing redundancy
updated formatting in SchemaCrawlerCommandLine. java and GrepOptions. java to improve code readability and maintain consistent formatting
fix for http : / / issues. apache. org / activemq / browse / amq - 4237
added @ Autowired annotation to the PersonRepository field in RepositoryIndexCreationIntegrationTests. java to ensure proper initialization of the PersonRepository instance
updated the ` stop ` method signature from ` throws Exception ` to ` throws InterruptedException ` in ` UIServer. java `, and corrected
fix cactus detection for cactus
refactor mouse event handling in ThemeSelector. java to improve code readability and maintainability by encapsulating mouse event logic
added a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` and removed ` AbstractMinMulticastFlowControlFields ` class to enhance
added alignment and vertical alignment properties to the editStringAt method in IOSImplementation and IOSNative to enhance functionality by allowing users to customize text alignment
don't throw exception if tokenization model ben't specify
modify query generation logic to handle distinct queries for group columns to improve accuracy of query results and maintain consistency in handling distinct and aggregate operations
make native linkage's similarity function public
bug report by lgtm. com : http : / / issues. apache. org / bugzilla / show _ bug. cgi?
added null check for children in PartitionPruner. java to avoid potential null pointer exceptions
added tokenPosition and currentPosition fields to MessagePackParser and updated parsing logic to enhance functionality and improve error handling during JSON parsing
added Locale handling in AbstractSolrMorphlineTestBase. java to ensure consistent locale usage during tests
removed conditional check for ` isLauncher ( ) ` in ` LauncherFragment. java ` to streamline code for better readability and maintainability
added a new test class ` MetricsReporterTest ` to validate the functionality of ` MetricsReporter ` to ensure that the ` registerMetrics ` method
( chore ) camel - test - infra - osgi : remove unused import
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing for rectangle objects
[ hotfix ] fix flaky test in streamkafkaitest
refactor DSAParameterGenerator to use BigInteger. ONE for strength validation to improve readability and maintainability of the code
added a new configuration variable for LLAP AM machine and refactored related methods in LlapUtil and LlapTaskCommunicator to enhance
fix clientoutofmemoryhandlertest failure
added a method ` getCmoObjectId ` to retrieve the object ID in multiple shape classes to ensure consistent handling of object IDs across different shape types
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest. java ` to verify the functionality of distinct queries in the
refactor SearchTravRetLoadFieldSelectorTask, SearchTravRetTask, and SearchTravTask classes to improve code organization and maintain
added binding and unbinding methods for ExtensionAdapter in ManagedKubernetesClient to enable proper management of extension adapters in the Kubernetes client
replaced direct calls to ` getOfficialRating ( ) ` with a utility method ` getInfoRow ( ) ` in ` DetailsDescriptionPresenter.
updated JUnit imports and annotations from Before and After to JUnit Jupiter API to ensure compatibility with the latest JUnit 5 features
added exception handling to the ` generateSummary ` method in ` BugCollectionBugReporter ` to improve robustness by catching potential ` TransformerException `
removed unnecessary parameters from intPool and bytePool reset methods to streamline resource management by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream. java to ensure proper method overriding and improve code clarity
added a new ` WindowSessionDelegateU ` class and modified the API level check in ` ShadowWindowManagerGlobal. java ` to enhance functionality
refactor port handling logic in UrlHelper. java and add a test for forcing a non - standard port in UrlHelperTest. java to improve
added support for MSSQL database in foreign key constraint generation to enhance compatibility with MSSQL databases
hbase - 25764 addendum : fix checkstyle violation
fix emzuli pipe crash
danielwagnerhall for http : / / issues. apache. org / bugzilla / show _ bug. cgi?
[ hotfix ] [ hive ] fix typo in hivelookuptablesource
clarify and correct allow multi - threading for some player method
updated schema name formatting in SequenceSnapshotGenerator. java to ensure correct schema name is used for schema filtering
added color normalization in SpriteBatch, SpriteCache, and AlphaTest classes to enhance visual rendering and improve test reliability
fixed - rconnection. join ( ) method throw an exception
added logic to add the base core to statisticYearCores if it does not already contain the base core to ensure statisticYearCores are only added
renamed ` launchTask ` method to ` launchTaskFromView ` and introduced a new ` launchTaskFromTask ` method to improve clarity and
refactor MorfologikFilter to use DictionaryHolder for resource loading to improve code clarity and maintainability by using a dedicated method for loading
updated sorting options for community, community, and Critic rating in GridFragment. java to improve clarity and functionality of the sorting options
added imports for ViewKt and ListRow, and modified visibility logic for ListRow in CustomListRowPresenter to enhance user interface by allowing
refactor client handling in StressAction. java to include a try - finally block to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability and maintainability
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ` in ` CatalogAndSchema ` and ` AbstractDb2Database ` to
add ` ` com. fasterxml. jackson. datatype. jsr310. javatimemodule'' to the jsr310
updated the import statement for MDC in LogUtils. java to use SLF4J logging instead of Apache Logging
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver. java ` to simplify type handling and improve code clarity
removed unnecessary import and improved formatting in CoinbaseTransaction. java to enhance code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and updated ` ProjectCommand ` to include a check for forced build targets
removed the declaration of the idleStrategy variable and replaced it with a call to System. gc ( ) to streamline code by eliminating unnecessary
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and updated references accordingly to improve code clarity and ensure proper handling of
remove redundant conditional checks in ReportPanel. java to streamline code and improve readability
[ hotfix ] [ test ] fix npe in testinglogicalslot
added a new file ` RemoveCallsToSystemGc. java ` that removes calls to ` System. gc ( ) ` and ` Runtime.
removed multiple super ( ) calls from multiple exception classes to streamline exception handling and improve code clarity
added a method to set the UIID of the ImageView to ensure the UIID is correctly set for different UI components
replaced instances of ` foundEntry ` with ` update ` in ` FeedUpdateService. java ` to improve clarity and maintainability of the code
added support for both " - classpath " and " - cp " arguments in Main. java to ensure proper handling of classpath arguments in the application
updated compiler option in avutil. java to ensure compatibility with recent changes in the code
set ` initialized ` to true in ` StorageService. java ` to ensure proper initialization of the service
renamed Test7196045. java to improve clarity and maintainability of the test code
updated the ` density ` and ` decay ` values in ` ShaderParametersLightShaft. java ` to reflect the new density and decay
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and updated ` OidcRedirectActionBuilder `
ddl generate for unique constraint with non - null value
added functionality to check if federated share is allowed in UsersAndGroupsSearchProvider and modified condition in EditShareFragment to enhance user experience by
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy. java ` to ensure that the ` needs
refactor BufferAlignmentAgent and BufferAlignmentInterceptor for clarity and consistency to improve code readability and maintainability
added a method ` intForEach ` in ` Int2ObjectHashMap ` and updated imports in ` Int2ObjectHashMapTest ` and `
fix worldscoreboard save data for worldservermulticloud but not worldservermulticloud
changed return type of count method from Long to long in QueryDslMongoRepository, QueryDslPredicateExecutor, and SimpleMongoRepository to
don't create mtree snapshot if they don't change the timestamp.
updated the dotProduct method in VectorUtil and TestVectorUtil to use a variable for the denom variable to improve code readability and maintainability by
added a new constant ` IRREVERSIBLE _ THRESHOLD ` and methods to manage the latest confirmed block number to enhance the flexibility of
replaced the ` setLocale ( ) ` method with ` Systems. setLocale ( ) ` for locale handling to streamline locale setting process
added logic to check if the database is a new instance of the launcher provider to ensure that the database is only created when a new instance is
refactor collection iterator in BasicAclEntryAfterInvocationCollectionFilteringProvider. java to improve code readability and maintainability
removed redundant assignment of is64Bit in Constants. java to improve code readability and maintainability
added a check to return early if the current thread is not the same as the current thread to avoid unnecessary processing when the thread is not the
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the method for better usability
updated import statements and replaced direct calls to ` mBaseItem. getPeople ( ) ` with ` ModelCompat. asSdk ( ) `
added attribute handling for SVG elements in BatikSVGDrawer to ensure that only imported SVG elements are stored in the document
added a try - catch block for handling IllegalArgumentException in ConsoleKeys. java to improve error handling and logging clarity
added handling for " WaitForResult " flag in AndroidImplementation. java and CodenameOneActivity. java to ensure that " WaitForResult "
modified ` HitQueue `, ` SpanPositionQueue `, ` PriorityQueue `, ` SpanPositionQueue `, and ` PriorityQueue ` to use
replaced instances of ` WidgetImageView ` with a direct reference to ` mWidgetDescription ` and updated visibility logic for widgets to improve code clarity and
added a maximum validation check for registered attribute count in Attribute. java to ensure that the maximum registered attribute count does not exceed the defined limit
move predicates test to package com. hazelcast. query. impl. predicates
camel - 16400 : camel - core - optimize the case sensitivity of header name
refactored inline handling in InlineLayout and Breaker classes to improve readability and maintainability of the code
added NonNull annotations and improved null safety in the getView method to enhance code robustness and prevent potential NullPointerExceptions
removed unused imports and refactored the ` shouldInstrument ` method to check if the class is from Android SDK to streamline code and improve
added a condition to return the last one of the columns in the table if there is an insert destination before source to ensure the correct number of
added functionality to retrieve the maximum size of the Cgroup memory limit in the container to enhance functionality by allowing the maximum size of the Cgroup
; ; ; patch from from from from from from from from to to
added error handling for null rule in JavaTestRule. java to improve robustness by providing clearer error messages when a Specified source under test
added support for multiple Minecraft versions in Botania. java to enable proxying for Minecraft 1.10 and 1.12
added a condition to set atIndex to 0 in StringUtils. java to ensure atIndex is non - negative and prevent potential errors
increased the timeout duration in the BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds to improve test reliability by allowing more time
refactor TaskOverlayGo constructor to accept AssistContentRequester as a parameter to improve flexibility and allow for better handling of content requests
updated the encoding of the witness address in VoteWitnessProcessor. java to ensure proper handling of encoded witness addresses
updated DefaultMethodRegressionTests. java to improve test coverage for method regression scenarios
refactor WorkloadManagerMxBean class structure to improve code maintainability and readability
updated import statements for KafkaProducerException and KafkaException in KafkaOutboundAdapterParserTests. java to ensure compatibility with the latest Kafka library
added a call to closeLoader ( ) in DesktopGeneratorController. java to ensure proper resource management and prevent memory leaks
added clear method to ExceptionThrowingTaskletStub and implemented multiple test cases for specific exceptions in FaultTolerantExceptionClassesTests to ensure
updated error message formatting in ConfigBuilder. java to include additional context about the BeamJobCoordinatorRunner and the appRunner
updated ` applyTunerConfigs ` method signatures to include ` extraProperties ` as a parameter across multiple classes to enhance flexibility by allowing additional
added logic to check for in - progress instances in PinotRealtimeSegmentsManager to ensure that only in - progress instances are added to the
added a check to return null if touchable is disabled to prevent potential null pointer exceptions when touchable is not enabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to verify the functionality of precompiled headers in different cells
throw a retryable exception if cache config can't be create yet
refactor JSweetTranspiler to utilize ProcessUtil for checking node package installation to improve code readability and maintainability by centralizing package installation logic
added @ ManagedObject annotation to MBeanContainer and Destroyable classes to indicate that MBeans are registered as MBeans and destruction of components
changed the condition from ` if ( settings. inAppBrowser ) ` to ` if ( false ) ` to handle cases where ` settings.
updated string comparisons to use the diamond operator for better readability to improve code clarity and maintainability
updated a warning check in ` Types. java ` and added new classes ` T6558558558559a ` and ` T6558
point selection command now emit the coordinate and / / size now have more information .
( chore ) camel - kafka : fix shutdown issue
removed the default method ` examples ( ) ` from the ` Schema ` class to streamline the code by eliminating unnecessary default methods
modified thread interruption logic in AgentRunner. java to ensure proper handling of thread interruptions
removed the time column from the dataset and its configuration in DefaultAggregationLoader and PinotDataSourceDimensionFilters to streamline data handling by eliminating
updated condition to check for a single shard in FacetComponent. java to ensure that only one shard is processed in the request
replaced references to ` LinkerProvider ` with ` CxxPlatforms ` in ` RustBinaryDescription ` and ` RustLibraryDescription `
added'name'property with getter and setter methods to JaasAuthenticationProperties, JdbcAuthenticationProperties, NtlmProperties, and Abstract
improve error message when dump graph to file and method
added small scan threshold feature and test for small scan in query plan
add routeId and retryid to retrygatewayfilterfactory's tostring ( ) method
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl. java ` to stream
updated ` onOverviewShown ` method calls and added delay handling for visual updates to improve user experience by ensuring UI elements appear at the appropriate times
refactor null checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex. java and add a new test in TestPointValues.
updated the publish method to use ` updateLastState ` instead of ` true ` to ensure that the last state is updated correctly
updated SQL string concatenation syntax in MetastoreDirectSqlUtils. java to ensure proper handling of single quotes in string literals
added a null element to the exp array in SpliteratorCollisions. java to ensure proper handling of null values during collection operations
michaeltamm : add ` ` textcaseensitive'' and ` ` exacttextcaseensitive'' condition to the selenium
replaced ` while ( true ) ` with ` while ( true ) ` in ` ManyToManyConcurrentArrayQueue. java ` to improve code readability and
# 169 - add queryengine. forwardfetchsize ( ) for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to improve error handling for closed channels
pdfbox - 4892 : initialize arraylist with the correct size of beads
updated the initialization of ` mWindowRadius ` to use ` initialWindowRadius ` instead of ` startCrop / 2f ` to ensure consistent
refactor DesktopTaskView to use View instead of ShapeDrawable for background management to improve code clarity and maintainability by using View instead of ShapeDrawable
refactor UpstreamCheckService initialization to use a new instance of UpstreamCheckService to improve code clarity and ensure proper initialization of upstreamCheckService
updated logging levels from warn to debug in AbstractSession and AbstractSessionManager to improve logging granularity for session management
replaced error handling in ZooKeeperHiveLockManager with a return statement to streamline error handling and improve code clarity
[ hotfix ] [ runtime ] fix checkstyle violation
added a check for custom data in the mipmap generation logic to ensure mipmaps are only generated if they do not already exist
camel - 16400 : camel - core - optimize the test case for camel - aws2 - flink
added selectable functionality and related getter / setter methods to the List class to enhance touch event handling for non - selectable items
added a condition to check if the value count is zero in LlapArrowBatchRecordReader. java to ensure that the LlapArrowBatchRecordReader
added file separator handling and improved logging in PolicyContext to ensure consistent file path formatting across different operating systems
replaced HashSet with ArrayList for flatQueries and expandQueries to improve performance and memory efficiency
updated the TLSRestrictions class to enhance security protocols
[ hotfix ] fix npe in kafkamanager. close ( timeout, timeUnit )
updated assertNodeStateProvider to accept an " freedisk " parameter and modified its implementation to include ignorable node values to enhance functionality by allowing
added a lock file deletion mechanism in RocksdbMavenPomCache. java to ensure proper cleanup of temporary files in the workspace
[ hotfix ] [ test ] fix npe in minizookeepercluster
added a new method ` getResponse ( RestCallSpec < R > callSpec, Gson gson, HttpURLConnection connection ) ` to provide a way
replaced ` toString ( ) ` method with ` toArray ( new String [ 0 ] ) ` for ` segmentTarURIStrs ` to
updated loginStudent method calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure correct password is
added a null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions when accessing the last deleted item
reduced the number of string from 500 to 100 in TestSpecialOperations. java to allow more time for the test to run
remove bytearrayinstream from wkbattributiouser for now
renamed the method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to clarify the purpose of the method
added a method to check if a transition is a direct substate and updated assertions in ShowcaseTests to improve state management and ensure correct listener
added checks for ListMultimap and SetMultimap in MultimapSubject. java and implemented corresponding tests in MultimapTest. java to ensure correct behavior of list
added ` JoinOperation ` to the ` PostJoinOperation ` class to enhance functionality for handling join operations
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest. java ` to verify the functionality of the ` PostgreSQL `
http : / / issues. apache. org / activemq / browse / amq - 5035 - fix test failure
refactor AvaticaDatabaseMetaData class to improve code organization to enhance maintainability and readability of the code
updated MongoDbConnectionPoolProperties to use @ DurationCapable for lifeTime, idleTime, and maxWaitTime to use String representations instead of int
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 4672
updated filter handling logic in FacetProcessor. java to improve clarity and functionality of filter processing
add an option to disable timeout in the shuffle handler
updated the initialization of mQuickStepStartingRotation to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code
camel - 16400 : camel - core - optimize xpathbuilder to avoid use of deprecated method
fix link to dataresource in action. java
added test case for edge cpd file with escaped back slash
added validation for the'atlas'property in AtlasTmxMapLoader. java to ensure that the'atlas'property is not present
camel - 15836 : remove propertyplaceholderhelper from the component interface
added a database close method in BlockchainTest. java and removed redundant ReceiveSource implementation in KafkaTest. java to ensure proper resource management and
refactor CoreMarkdownNodeRenderer to use a unified method for splitting strings to improve code readability and maintainability by reducing redundancy
removed redundant import statements from WebServiceInboundGatewayParserTests. java to streamline test code for better readability and maintainability
replaced ` ImmutableList. builder ( ) ` with ` List. builder ( ) ` in ` ProjectableSQLQuery ` and ` SQLBindings `
added support for Java VM name detection in VirtualMachine. java to ensure compatibility with OpenJDK in the application
added a keepAlive method to the ReactorClient class to enable connection management during HTTP requests
replaced string literals with constants from ShaderProgram in MD5Renderer. java and ObjLoader. java to improve code readability and maintainability by using
camel - 15836 : allow to load property component from classpath. thanks to daniel for reporting.
updated null check for accountCapsule in UnfreezeBalanceActuator. java to improve code clarity and prevent potential null pointer exceptions
updated version number to reflect the new release status
updated method calls to use ` t. unannotatedType ( ) ` instead of ` t ` to ensure correct handling of unannotated
updated assertions in StorageGroupProcessorTest. java and modified sequence ts file size handling to improve test reliability and ensure correct sequence ts file size
added a new ` DumpableCollection ` method to ` Server `, ` Environment `, and refactored environment handling in multiple classes to
added a call to ` params. waitbeforestart ` with a value of 2500 in ` FFMpegVideo. java ` to ensure
removed the ` _ skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and its usage in ` GenericColumnVectorProducer `
add test for accessors. listindex ( int, int )
make graalcompiler. compilemethod ( ) public
replaced ` @ Ignore ` with ` @ ConditionalIgnore ` for ` RunningContinuousIntegrationCondition ` in ` DynamoDbTicketRegistryTests `
fix boat not be able to place water
updated the ` toString ( ) ` method in ` Directory ` and added ` getLockID ( ) ` method in ` RAMDirectory ` to improve
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the conditional check for experimental options
added new methods ` then ( Path actual ) ` and ` then ( AssertDelegateTarget assertion ) ` to the ` BDDAssertions ` class
replaced instances of ` HostPort ` with ` hostField ` in ` ForwardedRequestCustomizer. java ` to improve clarity and consistency in host
updated logging level from debug to warn for Kubernetes config files and added a warning message for non - desired files to improve clarity of logging and provide
added functionality to handle file upload states in UploadListActivity to improve user experience by allowing uploads to be canceled or failed
added a new ProviderLoader class for ProviderInstaller and updated TerminalManager and TerminalManager to implement ProviderLoaderListener for handling provider installation and error handling
replaced instances of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and its tests to standardize naming conventions and improve
updated SelectFromDatabaseChangeLogStatement to set the name of the select statement to improve clarity and functionality of the SelectFromDatabaseChangeLogStatement
hhh - 147642 - fix schema update for postgresql 11
fix partition per - member calculation for non - zero data member
updated the execution scheduler initialization logic to check if the scheduler is already started to improve robustness of the scheduler startup process
removed unnecessary conversion from text. toString ( ) to InlineBox to simplify code and improve readability
refactor checkArgument calls for clarity in StatisticMap. java to improve code readability and maintainability
updated the return value of getStagedRectSlideEnd ( ) from 383 to 500 in TabletSplitToConfirmTimings. java to
updated button references from ` " Random " to ` " waves. random " in ` WaveInfoDialog. java ` and ` Place
added a check for plotArea's owner in the KILL _ ROAD _ ITEMS condition to ensure that the plot area is owned
added a new test method ` setTouchExplorationEnabled ` to ` ShadowAccessibilityManagerTest ` and modified touch exploration handling in ` Shadow
pdfbox - 5328, pdfbox - 5328, pdfbox - 5328, pdfbox - 5328, pdfbox - 5
use getname ( ) instead of getpropertyasstring ( )
replaced the instantiation of NPOIFSFileSystem with POIFSFileSystem. create in TestNPOIFSFileSystem. java to streamline the
refactor plot area retrieval logic in Move. java to improve robustness of plot area retrieval
updated regex pattern for version matching in TestWebHCatE2e. java to ensure compatibility with new version formats
updated the range check for ` count ` from ` 0 ` to ` 1 ` in ` Filters. java ` to ensure that ` count `
add client id to kafka consumer config ( # 3669 )
added a check for javac execution failure in JavacCompiler. java to improve error handling by throwing an exception when the compilation fails
ggb - 2852 : do not repaint the view if there's no select item
camel - 16400 : camel - spring - batch - fix checkstyle violation
added a method ` isAnimationFinished ` to check if an animation is finished based on the current state time to provide a way to check if
added a new test for custom favicon link with line breaks in LoginMockMvcTests. java to ensure that custom favicon links with line breaks are
added a null check for ` otherUrl ` in ` TimeLineCursorAdapter. java ` and modified the refreshing text in ` HomeFragment.
ggb - 1976 fix for ggb - 1976 ( fix for ggb - 196 )
refactor ObjectHashSet class implementation to improve performance and maintainability of the code
refactor DataUtilities to simplify null checks and improve clarity to enhance code readability and maintainability while ensuring proper handling of null values
fix creative not be able to delete enchanted book ( mc - 12770 )
add unit test for async resource in helidon - microprofile
rename header - target - flat - headers. hmap to target - user - headers. hmap
added error handling for ` SendFailedException ` in ` MailService. java ` to improve debugging and error logging for email sending failures
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder. java ` and ` Task
added unit tests for partition retrieval with multiple equal and unequal size batches in Hive to ensure correct handling of batch size in the Hive metastore
added a closing brace in FileListListAdapter. java to improve code clarity and maintainability
changed the data type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFileListAdapter `
updated child count from 1 to 2 in BubbleBarView. java to correct child removal logic
removed unused import statements from JavaxWebSocketConfiguration. java and JettyWebSocketConfiguration. java to streamline code by eliminating unnecessary dependencies
modified the default value of the S3Request policy from true to false to ensure that the S3Request object behaves as expected without altering
fix jfxradiobuttonski animation when timeline be null
updated the condition for splitting in DeweyNumber. java and added a test for zero - splits in DeweyNumberTest. java
updated the return statement to replace " Category : " with " Category : " in MwVolleyApi. java to ensure proper formatting of
removed the status code 1111 from the close message assertion in WebSocketClientTest. java to ensure the test accurately verifies the expected close code
added null check for classLoader in WebappLoader and updated expected value in TestVirtualWebappLoader to prevent potential NullPointerException when classLoader is null
removed redundant code in PersistentAttributeTransformer. java to streamline code by eliminating redundancy
pdfbox - 4071 : don't try to cast to cosinteger, a suggest by valerybokov
added a new test class TestPorterStemFilter to validate the functionality of the PorterStemFilter class
renamed the ` postBatchMutate ` method to ` postBatchMutateIndispensably ` and added a ` success ` parameter to
corrected package name from ` exlore. support ` to ` explore. support ` in multiple test files to ensure consistency with the new package structure
fix a concurrentmodificationexception when close a chat window.
removed redundant calls to Sys. touch ( ) across multiple Java files to streamline the code by eliminating unnecessary calls
updated HgCmdLineInterface, NoOpCmdLineInterface, VersionControlCmdLineInterface, and VersionControlCmdLineInterface to enhance functionality for
( chore ) camel - netty : use timer from component instead of custom timer
changed variable declarations to be final in DirectionalLight, PointLight, SpotLight, and SpotLight classes to enforce immutability
added calculations for minimum width and height in X11 and WGL graphics configurations to ensure minimum dimensions is considered for rendering
added toString ( ) methods to DelegatingSecurityContextCallable, DelegatingSecurityContextRunnable, and DelegatingSecurityContextCallableTest classes to provide
added a new class ` AnnoFilterTreeSet ` to filter annotation classes based on their presence to enhance the functionality of ` findAnnotatedClasses
[ flink - 3441 ] [ table - planner - blink ] fix the maximize size of the small buffer.
[ hotfix ] [ test ] fix flakiness of write - behind test
updated the parameter type of the uninstallListeners method from JScrollPane to JComponent in MotifScrollPaneUI and XTextAreaPeer classes to ensure compatibility with
add equality check for polynomial function
added a null check for the table before retrieving the column class to prevent potential NullPointerException when the table is not initialized
added a try - catch block to handle ClassCastException in CustomChangeWrapper. java to improve robustness by gracefully handling ClassCastException when loading custom
added methods to retrieve BuckConfig and Optional < ImmutableList < Path > > in DistBuildConfig. java and refactored related classes to
show a warning for double entry in the export dialog
added JUnit Ignore annotation to BasicDistributedZkTest. java to temporarily skip the test due to a known issue
changed the return type of doJoin methods from void to boolean and modified return statements accordingly to improve clarity and functionality of the doJoin method
removed the Optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription. java to streamline the code by eliminating unnecessary
updated intent flags in LauncherTimelineCursorAdapter. java to include FLAG _ ACTIVITY _ NEW _ TASK to ensure the activity is launched in a
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance query functionality for paging
updated URL assertions in RepositoryConventionPluginTests. java to reflect the correct version of the repository
add a new AffiliationTask class to manage affiliate tasks to enhance the functionality of affiliate nodes in the pubsub system
improve error message when uri don't start with a slash.
changed access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling for CacheKey updates in CacheKey. java and updated test cases in CacheKeyTest. java and CacheKeyTest. java
replaced the implementation of ` GnomeFileTypeDetector ` with a new ` getFileTypeDetector ` method across multiple files to standardize file type detection
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
replaced ` getParams ( ) ` with ` getVirtualSensorCallback ( ) ` in ` ShadowVirtualDeviceManagerTest. java ` and added methods to
added a condition to check if the context object equals before execution in HttpSessionSecurityContextRepository to ensure that the security context is not removed from the
renamed variable ` lch ` to ` loopback ` and modified the logic to check if the address is a loopback address to improve clarity and functionality
renamed BUF _ SIZE to DEFAULT _ BUF _ SIZE and refactored buffer initialization logic to improve code clarity and ensure proper handling of
updated KeyInfoReferenceResolver to include secure validation and modified error handling in XMLSignatureInput and TransformXPath classes to enhance security checks and improve error
added a boolean flag ` iconChangeListenerInstalled ` to manage the action listener behavior to ensure the icon action listener is only added when the component is
added support for Russian language in the application
hhh - 147642 - fix conversion of second duration to nano second
disable state verification in SubstrateGraphKit. java to ensure proper handling of frame states during state verification
added system property management in Robolectric test classes to ensure proper cleanup of system properties during tests
added a system class " org. slf4j. " in ViewClassLoader and its corresponding test in ViewClassLoaderTest to ensure proper loading of
added a check for " jar " in the ` ChangePackaging ` class and implemented a ` toString ` method in ` Xml ` to ensure
fix flaky test
added a call to nk _ buffer _ clear ( cmds ) in GLFWDemo. java to ensure the buffer is properly cleared from the
rename ` defaultUnits ` to ` preferredUnits ` and update related methods to improve clarity and consistency in unit handling
updated DatePatternConverterTest to use UTC timezone instead of a hardcoded value to ensure accurate date formatting based on the current time zone
removed an unnecessary return statement in Terminator. java to streamline code by eliminating unnecessary return
improve error message when local file path can't be resolve.
fix : jabrefframe. showtrackingnotification don't work in one minute
fix test that fail on slow machine
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` class to utilize ` ConcurrentSkipListMap ` for
added an ` ignore ` method to ` JavaUtilLog `, ` Logger `, ` LoggerLog `, and ` StdErrLog `
added a null check for runningTaskView in LauncherActivityControllerHelper. java to prevent potential NullPointerException when runningTaskView is not initialized
removed unnecessary type casting for getDamage ( ) in BukkitWorld. java to simplify code and improve readability
removed a call to GraphicsUtil. cleanImage to streamline image processing by eliminating unnecessary graphics processing
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes to manage unmap behavior and improve directory management
added a null check for the ` ic ` variable before creating a new ` cleanUpColor ` instance to prevent potential ` NullPointerException ` when `
updated the field name from ` field1 _ s ` to ` field1 _ s ` in ` QueryEqualityTest. java ` to ensure
updated ExtendedOperatingSystemMXBeanImpl. java to improve performance and resource management
added functionality to install left and right command buttons in SideMenuBar to enhance user interface by allowing navigation to left and right commands
added a boolean flag ` advanceWindowed ` to the ` AppSettings ` class and modified ` TweetActivity ` and ` UserProfileActivity `
added support for SybaseDatabase in the DropPrimaryKeyGenerator to enhance compatibility with additional database types
refactor Client class to improve code readability and maintainability
[ java ] don't reset leadership position when there be no follower.
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView ` and added ` shouldDelay
added a return statement to the NearCachedClientMapProxy class to prevent potential null pointer exceptions during execution
updated package - info . java files for mmm and ppp packages to improve documentation clarity for package usage
added a method to shutdown the HTTP server and wrapped it in a try - catch block to handle potential exceptions during server startup
camel - 15836 - camel - aws2 - s3 - stream upload : fix import issue
[ hotfix ] remove unused parameter ` ` tmid''
added a method to drop keys from the database if it does not exist to ensure that the database does not drop keys that do not exist in
hive can't login if password be not present in log ( jonathan via zshao )
added a maxEnergyLimit variable and updated energy limit assignment logic to ensure energy limit is accurately associated with constant calls
added a new ` maxInMemorySize ` property and its getter / setter in ` HttpClientProperties `, and modified the ` webClientPlugin `
refactor Cache class implementation to improve performance and maintainability of the code
added two new test classes, RunCucumberTest and StepDefinitions to facilitate testing of Cucumber features in the application
fix array [ pow ( infinity ( ), 2 ), { sqrt ( - 1 ), infinity ( ) } ]
updated the hex string from " 656469746564 " to " 8080656469746564 " in Utf8StringBuilder
added a check for parameter set before appending them in Params. java and refactored the buy method in RestInvocationHandlerTest. java to
camel - 15836 : allow to configure the number of output for circuit breaker load balancer
updated the maximum buffered documents setting in TestIndexWriterExceptions. java to ensure that the test accurately reflects the maximum number of buffered documents
replaced ` putUnencodedChars ( ) ` with ` update ( hasher ) ` in multiple files to ensure proper handling of hash values and improve
added enumValue, intValue, and longValue methods to AsmRuntime. java to enhance functionality for enum handling in the application
add new biome tag for forge biome
refactor async image loading to use a separate thread pool to improve performance and resource management
changed access modifiers of fields in BaseTableUpsertMetadataManager from private to protected and refactored preloadSegments and preloadSegments methods to
updated references from " \ u0646 \ u0648 \ u0627 \ u0631 " to " \ u0623 \
replaced calls to ` getImage ( ). equals ( varName ) ` with ` hasImageEqualTo ( varName ) ` in ` AbstractSunSecureRule
camel - jbang : add -- repos option to camel - jbang run command
added handling for NaN scores in CrawlDbReader to improve robustness by preventing null pointer exceptions
added a cleanup method to delete temporary files in OnStartupTriggeringPolicyTest. java to ensure that the target file is cleaned up after tests
updated focus handling in FilterConditionEditor and FindAction classes to improve focus management and ensure proper focus behavior
[ hotfix ] make checkpointcleaner thread safe
added a new file ` XPathWhiteSpaceTest. java ` with XML schema validation to facilitate testing of XML schema with whitespace characters
fix : rollback don't override trieloglayer
updated FilledNewArrayInstruction. java file to improve code clarity and maintainability
[ hotfix ] [ test ] set timeouts to 60 * 1000 in simplenetworktest
modify the method to check if the parentPath ends with a slash to ensure correct handling of leading and trailing slashes in parent paths
added a log statement to indicate when a skin file is not found to improve error handling and provide feedback on loading failures
added dirty flag to LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes, and modified the skip logic in Lgo
replaced the instantiation of ` new Result ( status, null, null ) ` with ` Result. UNDEFINED ` in ` TestStep. java `
replaced ` PersistenceException ` with ` NullPointerException ` in ` TestTransactionCallback. java ` to handle potential ` NullPointerException ` during callback registration
add checkjetisenabled to uploadjobmultipartitionoperation
[ hotfix ] [ runtime ] don't recover journal file in case of miss journal file
fix : summarylevel. of ( nodemodel ) do not ignore child
replaced ` volatile int pos ` with ` int sizeMask ` and refactored the ` ensureAvail ` method to utilize ` nextPow
added @ Ignore annotation to ChaosMonkeySafeLeaderTest. java and RecoveryZkTest. java files to temporarily disable tests that
modified the assignment of targets and messages array to use endpoints. subList ( 0, handler. blockfor ) instead of targets to improve clarity and
modified the order of parameters in FileManager. java to improve code readability and maintainability
added support for " plus ", " minus ", " div ", " ceil ", and " log " transform functions to enhance functionality
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` Element ` and ` package - info. java ` files
updated references from " RFC3280 " to " RFC5280 " across multiple Java files to ensure consistency and correctness in naming conventions across the
update to 2.17. 4 and fix compilation error
refactor selection logic in ListActivity and NoteAdapter to use a SparseBooleanArray instead of HashMap to improve performance and maintainability by using a more
refactor the conditional structure for checking softCommitTracker ' s time upper bound to improve readability and maintainability of the code
updated path handling in ConfigFileApplicationListener and added a new test for absolute resource defaults to ensure correct handling of file URLs and improve test coverage
updated ` TaskViewSimulator ` and ` TaskThumbnailView ` to initialize ` PreviewPositionHelper ` with ` Context ` instead of ` device
[ java ] only publish new leadershipterm when there's no leadershipterm.
pmd coverage test : improve error message
refactor ByteArrayInputStream logic and add a new Skip class for handling skipped bytes to improve input handling and provide functionality for skipping bytes
refactor conditional logic for promptUpdate in UpdaterTask. java to improve code readability and maintainability
don't download header if there be too many header.
add rt. jar to the list of jar that be use by lwjgl. jar.
refactor connection handling logic in AbstractHandshakeHandler. java to improve clarity and maintainability of the code
replaced references to ` parentReader. heterogeneousGranules ` with ` Utils. Prop. heterogeneousGr
added a check to prevent sending a 500 error if the response is already committed to ensure that a 500 error is only sent when the response is
updated conditional checks for pendingElements and connectionQueue in HttpSession. java to improve clarity and correctness of polling logic
updated fadeOutFakeTaskView parameters and added gesture navigation tutorial functionality to enhance visual feedback and improve user experience during gestures
fix : prefab format can not be serialize
refactor ScimGroup external group creation logic in LdapMockMvcTests. java to improve clarity and maintainability of the code
added a check for a non - existent account transfer amount in TransferActuator to ensure that the transfer amount does not exceed 1 TRX to
updated path separator from'/'to File. separator in FileResolverTestBase. java to ensure consistent file path handling across different operating systems
ggb - 565 fix focus problem with soft enter
updated GpsMainActivity to retrieve session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command event handling to improve user
don't fail test if there be too many page in the pdf
replace androidbufferallocator with androidnativebufferallocator and add androidnativebufferallocator
added handling for flag names starting with "! " in multiple files to ensure correct parsing of flags that start with "! "
added a NOPMD comment to the executeQuery method call in JDBCHistoryCache. java to clarify the purpose of the method for executing
updated comparison from equals to = in BattlePassManager. java to ensure correct usage of the ITEM _ USE _ GRANT _ SELECT _
updated test cases and added a toString method in PriorityElement to improve test coverage and provide a clearer error message for better debugging
refactor unit test for affinity group creation to improve clarity and maintainability of the code
added a null check for the main command in Main. java and modified the argument validation logic in Main. java to improve robustness of command
increased LightOutputStream size from 7 to 4 in PropertyTypes, ByteIterableBase, and LongBinding classes to optimize memory usage and improve performance
changed the access modifier of the Scanned class from static to public to allow access to the Scanned class from other packages
replaced ` println ( ) ` with ` true ` and added a new class ` T8032819 ` with multiple test methods to enhance functionality
removed an assertion check for the length of the variable'sn'to streamline the code by eliminating unnecessary assertions
added a null check for the file extension in the VirtualFile class to prevent potential NullPointerExceptions when checking file extensions
fix ` ` continue'' to ` ` continue''
[ hotfix ] [ runtime ] fix bug in slotsharinggroupassignment
modified the calculation of the variable ` si ` in ` InstallShortcutReceiver. java ` to simplify the code and improve readability
refactor the binding and closing logic of PlainSocketImpl to use a delegate instance to improve code clarity and ensure proper resource management
added functionality to manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to ensure proper management of removed items in the fragment
updated log message to clarify the context of the offset from the element's in - view center point to improve clarity of log output for better
added a new file ` bug4865918. java ` to test the functionality of the ` TestScrollBar ` class to address a bug
replaced the instantiation of ` VelocityEngine ` with a direct instantiation in ` ADKerberosOperationHandler. java ` to simplify the code by
replaced specific imports with a wildcard import and added handling for group triggers in QuestCommand. java to streamline imports and enhance command handling for
added file chooser functionality for GnuCash account selection to improve user experience by allowing users to select a gnuCash account
added ` @ ToString ` annotation to ` PartitionChangeEvent `, ` TbApplicationEvent `, and ` TbApplicationEvent ` classes to
updated the description URI in the ConfigurableService annotation to use a constant for the configuration URI to improve code readability and maintainability by centralizing the
removed redundant calls to setViewportComponent and setJScrollPane in BrowserPanel. java to streamline code by eliminating unnecessary component settings
replaced hardcoded KEYCODE _ DEL with a constant for KEYCODE _ FORWARD _ DEL across multiple files to improve code readability and maintainability by using a
added a conditional check for " moreIndexingFilter. indexMimeTypeParts " in MoreIndexingFilter. java to enable dynamic handling of MIME
added author pattern to handle comments in JSDoc. java to improve readability and maintainability of the code
renamed metrics constants for clarity to improve code readability and maintainability
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for better integration with Drill's HiveMetaStoreClient and
updated ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String, String > ` parameter and added error handling in ` Login
updated month names for Hijrah and Hijrah - umalqura in TCKChronology and TestUmmAlQ
added a condition to check if the browser is Firefox in WebAudioWrapper. java to ensure compatibility with different browser configurations
added an ` appendInterceptor ` method to the ` GrpcServerBuilder ` class and removed the private constructor from the ` InterceptorConstants ` class
added a new table definition for " DEFAULT " in TestCompatibility. java and modified the CREATE TABLE statement in TestCompatibility. java to support new
updated method calls in WriterRecordBatch and StreamingAggTemplate for consistency to improve code readability and maintainability
[ hotfix ] [ runtime ] fix incorrect allocation timeout in executiongraph
added a ` hasFrom ` flag to the ` Delete ` class and modified SQL query handling in ` DeleteDeParser ` and ` DeleteTest
replaced the ` isSuccess ( status ) ` method with ` isMultiStatus ( status ) ` in ` SynchronizeFolderOperation. java ` and
refactor RecipeScheduler to utilize RecipeSchedulerUtils for applicable tests to improve code readability and maintainability by centralizing applicable test logic
updated regex pattern for logLine in LogAnalyser. java to improve accuracy of log line matching
( chore ) camel - aws2 - integration : enable integration test for google cloud
fixed - rsearch. value ( ) and rsearch. value ( ) method don't take into account exclusive mode. # 3
[ ds - 3762 ] add option to select a select license from the cc lookup.
added a null check for ` ifcRoot. getGlobalId ( ) ` before accessing its value to avoid potential null pointer exceptions
updated equality check in OptionalAssert to use comparison strategy to improve accuracy of comparison logic
added logic to conditionally store the LAST _ MARGIN _ BOTTOM value based on the presence of the LAST _ MARGIN _ BOTTOM property to ensure
add a new file ` TestArrayCopyToFromObject. java ` to test array copying functionality
updated escapeAsBashString method calls for pathlibDir and watchmanDir in BuckPythonProgram. java to ensure correct handling of
don't call isasync ( ) on closed socket in apr and nio
added a new boolean parameter ` defaultUnfoundRoot ` to the ` findFiles ` method in ` ForgeHooks. java ` and
added an Ignore annotation to the TestLlapSignerImpl class to indicate that the test case is unstable
refactor error handling in TestInternalInputBuffer to check for a null exception to improve robustness by preventing null pointer exceptions
refactor autoloading logic in Environment. java and SplClassLoader. java to improve clarity and maintainability of autoloading logic
updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to ensure compatibility with different server versions and improve user preference handling
replaced instances of " server / localhost " with " localhost " and added handling for localhost in KDC and OneKDC classes to ensure localhost
updated Jsr250Voter to conditionally return ACCESS _ DENIED based on the presence of a jsr250 attribute to improve flexibility in
updated import statements in MP4Parser. java for consistency and clarity to improve code readability and maintainability by standardizing import statements
added a new constant for HS2 _ PROXY _ USER and modified session parameter handling logic to ensure proper handling of session parameters based on the
camel - 16400 : camel - hdfs - add snappy compression to the camel - hdfs component
added a sleep delay of 1000 milliseconds in HttpClientTest. java to allow for a longer wait time before proceeding with the test
update xssfsheet. getcellvalue ( string ) to remove the cell from the row
updated glyph positioning logic in GlyphLayout. java and modified text format in BitmapFontTest. java to ensure correct rendering of glyphs and
refactor Fabric8IstioIT. java to streamline image loading process to improve code readability and maintainability
replaced direct calls to ` apiClient. ReportPlaybackStartAsync ` with ` TvApp. getApplication ( ). getPlaybackManager (
don't hit disk on every invocation of simpleauthority
added check for existinmemory ( ) and existinmemory ( ) method in putfromloadall
updated the return logic for LENGTH _ BIT and ERROR _ BIT in ResponseFlag. java to improve clarity and correctness of error handling logic
bugfix : fix default policy for read community
refactor FontUtilities to use a SoftReference for ConcurrentHashMap to improve performance by avoiding unnecessary garbage collection
updated the calculation of prefHeight in Tree. java to ensure consistent spacing between node and node height
drools - 3864 dmn - improve error message for unknown variable
removed unused import statements and updated generics in LinkedList instantiation to improve code clarity and ensure type safety
changed access modifier of finishRunningRecentsAnimation method from private to public and refactored long press runnable execution to improve accessibility and ensure
added null checks for node ID and edge type in ImportContainerImpl. java and modified edge handling in ImporterGDF. java to improve
[ beam - 8470 ] fix npe in fnapi control client.
replaced direct instantiation of Bin with session factory in BinFiles. java and added a new test for flowfile larger in TestMergeContent
replaced the method of finding the closest core in Teams. java to improve accuracy of core selection based on distance
added a debug log for skipping content - length in RestTemplateCopyHeaderFilter and implemented a test for skipping content - length in TestRestTemplateCopyHeader
added new case handling for CLASS and CHAR in Java2TypeScriptTranslator and modified syntax tests in SyntaxTests to improve handling of string literals and
updated sample size from 1000 to 1200 in ChannelizerViewer. java and adjusted sample size in PolyphaseChannelManager. java and TwoOutputChannel
hbase - 25827 canary will try to run all region on a regionserver mode
removed unnecessary import of NodeModule in CassandraConnectorFactory. java and updated test cases in TestCassandraConnector. java to streamline code and
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 558 : reset
added minimum size constraints for frames in CallDialog and OneToOneCallPanel to ensure frames do not exceed their defined dimensions
fix loss of state information during world gen
updated the TestHTTPSamplersAgainstHttpMirrorServer class to use JUnit's Test setup and teardown methods to improve test reliability and
added dependency injection for KerberosPrincipalHostDAO to ensure proper cleanup of Kerberos principal entities
removed the parameter ` true ` from the ` getTableSnapshot ` method call to simplify the method call by eliminating unnecessary parameter
fix for http : / / issues. apache. org / activemq / browse / amq - 380
updated error message in AndroidGradleBuilder. java to include the Base64 - encoded RSA public key to enhance clarity of error message for better
replaced ` getName ( ) ` with ` getDisplayName ( ) ` in ` DLNAResource. java ` and removed the ` isInsideTranscode
[ drools - 5907 ] fix package name for spring boot
added an assumption to skip tests on a specific runtime version to ensure tests are only executed on a specific runtime version
removed parameters from the assignTargetsForSplitScreen method and simplified target assignment logic to streamline target assignment process by eliminating unnecessary parameters
refactor the LeaderLatch class to improve code readability and maintainability
added methods to retrieve and initialize zk - SNARK parameters in SolidityNodeHttpApiService to enhance functionality for managing zk - SNARK
refactor transaction confidence handling to use a new ` getDepthFuture ` method to improve clarity and maintainability of the code
added a new method ` createMediaRecorder ` in ` CodenameOneImplementation ` and corrected variable names in ` Location ` and ` Map
added a default value for the ` platformName ` variable in ` JavaSEPort. java ` to ensure the ` platformName ` variable is
[ hotfix ] [ doc ] fix typo in pageeditclient
refactor conditional checks for ` mozDash ` and ` webkitLineDash ` in ` Graphics2D. java ` to improve code readability and maintain
updated the implementation of the CreateVisibleSignature class to enhance functionality and improve security
added error handling for outgoing frame processing in AbstractExtension. java to improve robustness by logging exceptions when the callback is not available
refactor caller class retrieval to use AccessController for improved security to enhance code reliability and maintainability by using privileged actions
added logic to update parent and child categories in CategoryREST. java to ensure proper management of child categories based on their parent ID
added title to ContributionManagerDialog to enhance user interface by providing contextual title for contributions
added a new ` vwap ` field to the ` Ticker ` class and created a corresponding ` vwap ` field to enhance
added functionality to update the bottom inset of the no widgets view in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to
add rendergraphapi to allow tint node to be connect to the screen
added a call to set the primary color of the NCFirebaseMessagingService to enhance the visual appearance of the NCFirebase messaging component
updated ShadowUsbManagerTest. java file to improve test coverage and reliability
update evaluation logic in AbstractDifferenceRecommenderEvaluator and add logging in AverageAbsoluteDifferenceRecommenderEvaluator and RMSRecommenderEvaluator
added a call to update the selected configuration in the Rocket class to ensure the selected configuration reflects the new configuration
updated the calculation of stroke width and height in AndroidGraphics. java to ensure that the stroke width and height are within valid bounds
replaced instances of HashMap with LinkedHashMap across multiple files to ensure predictable iteration order of the options map
replaced ` nativeClosureManager ` with ` closurePool ` in ` NativeClosureFactory. java ` to improve closure management and resource management
( chore ) camel - spring - boot : migrate routebuilder to junit5
added WebsocketIngressIntegratedBootstrap and WebsocketPluginTest classes for WebSocket integration testing
[ ds - 3441 ] remove dead code from dspaceservicemanagertest
refactor authentication comparison logic in AbstractCasWebflowEventResolver. java to improve clarity and maintainability of authentication comparison logic
added a conditional check to return false if the x86asm property is not set to " true " to ensure that the x86asm flag
refactor method calls to use ` callNodeType ` instead of ` callNode. getType ( ) ` to improve clarity and maintainability of the code
added a new ` Insecure ` annotation to the ` MessageBuffer ` class and refactored related methods in ` MessageBuffer ` to enhance
added new Hive configuration variables in HiveConf. java to enhance configuration options for Hive connections
replaced instances of scopes and policies with HashSet instances in ResourceSet. java and added a null check in DefaultResourceSetService. java to ensure
updated MultiReader constructor to include readerFinishedListeners as a parameter to enhance flexibility by allowing multiple readers to be closed
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
danielwagnerhall : fix selenium test for html5
updated ` getFirstTypeArgument ` method to return ` null ` for ` ParameterizedType ` and made class final in ` LinkedHashTreeMap `
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Values in Int2IntHashMap to
added a ` duration ` parameter to the ` FlipTransition ` class and updated its usage in the ` FlipTransition ` class to allow
removed trace log statement for subsAreValidForStreaming to streamline the code by eliminating unnecessary logging
bump forge version to 9.10. 0
replaced ` System. err. println ` with ` LowLevelLogUtil. log ` for warnings in ` StackLocator. java ` to improve
( # # # )
adjusted padding for the background view based on the number of replies to improve layout responsiveness by adjusting padding based on the number of replies
[ iotdb - 4447 ] fix partition - primary - replica antientropy task for v3. 9.
added metadata handling in SeedUrl and SeedResource classes to store and retrieve metadata from the seed URL
added a null check for the declaration in PatternBuilder. java to ensure that the declaration is only set when it is not null
updated TestCoprocessorWhitelistMasterObserver. java file to improve code clarity and maintainability
ww - 4672 - fix npe in annotationactionvalidatormanager
updated ` containsAllOf ` method to accept a ` ( Object ) null ` parameter and added a new test for ` iterableContainsExactlyWithOnly
added stream ( ) and parallelStream ( ) methods to MapIterable, PrimitiveObjectMap, and PrimitiveObjectMap classes to enhance stream processing capabilities
replaced direct return statement with a clone method for notifInfo to ensure that the original instance of notifInfo is not modified
ggb - 2652 : make sure command key be case sensitive
refactor AEADBlockCipher. java file to improve code organization and maintainability
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap `, ` WebVariablesMap `, and ` WebVariablesMap
added a check for null resName and updated ResourcesMode from best to legacy to improve resource identification and ensure compatibility with legacy resources
added a check for ` ulSize ` and ` ulPos ` before retrieving the table buffer in ` TrueTypeFont. java ` to ensure
refactor SignPlugin constructor to accept a list of HttpMessageReader <? > instead of a static list of HttpMessageReader <? > to
modified the implementation of Int2ObjectCache to improve performance and memory efficiency
added validation for MavenDeployer in StandardMavenAuthenticationProvider. java to ensure proper handling of deployment scenarios
refactor AudioNode class to improve code readability and maintainability
added SSL context initialization and improved exception handling in LinkyHandlerFactory and EnedisHttpApi to enhance security and provide clearer error messages during SSL
added a function replacement map for OracleSqlOperatorTable and refactored the register method to use a stream instead of an array to improve efficiency
fix for http : / / issues. apache. org / activemq / browse / amq - 380
updated the ` getBuildTargetForAlias ` method to handle possibly flavored aliases to improve handling of ambiguous alias names
added a check for empty ODataFeed entries and adjusted the return logic in Olingo2Consumer. java to improve handling of empty O
added support for EQUIVALENT _ VERSIONS in MetaStoreSchemaInfo to ensure compatibility with different Hive versions
don't call advanceexpunge when expunge a vm
added multiple @ Deprecated annotations to AbstractDateAssert. java to indicate that these methods are outdated and should not be used in new code
replaced calls to ` TextHelper. parseTitleAndContent ( ) [ 0 ] ` with ` getNoteTitle ( context, note ) `
updated GoogleAuthUserConfigTable to use " nvarchar / varchar " instead of " varchar " and modified error message in TotpEndpoint
replace ` commit ( ) ` with ` apply ( ) ` in multiple classes to ensure changes are applied to the shared preferences
added an idle listener to the StandardSession instantiation in AsyncTimeoutTest. java to enhance resource management by allowing idle notifications
[ beam - 8558 ] fix bigqueryioit flakiness ( # 9995 )
added a background resource for the predicted icon in HotseatPredictionController. java and set the background in BubbleTextView. java to
mondrian : fix typo in property name
add test for native system query
[ hotfix ] [ table - planner ] fix npe in lessexplanation
added argument handling for Apple targets in AppleSimulatorController and updated InstallCommand to accept a list of run arguments to enhance flexibility in command execution
replaced direct calls to ` getArea ( ). getCurrentParagraph ( ) ` with a local variable ` area ` to improve code readability and maintain
added checks for Lifecycle state in ContainerBase. java and StandardContext. java to ensure proper handling of lifecycle states in the application
added setClipToOutline method to QsbWidgetHostView to enhance visual appearance of the QSB background
added flags and plotsProcessed tracking in SQLManager and updated split logic in BlockTypeListFlag and PlotArea to improve handling of flag conversions and enhance
updated FloatingTextRenderer to conditionally enable or disable depth based on whether the floating text is occluded to improve rendering behavior based on whether the floating
refactor variable names and method signatures for clarity to improve code readability and maintainability by using consistent naming conventions
http : / / code. google. com / p / mybatis / issues / detail? id = 413 - allow to set
use l1 / l2 regularization instead of l1 / l2 regularization
added exception handling for read / write operations in AbstractChecker . java to improve error handling and prevent application crashes during communication failures
changed the visibility of the colorStack variable from static to instance to ensure the colorStack is consistently accessed across different components
changed return value from false to true for getMappedStatement and hasStatement methods to align method calls with intended functionality
updated the method to convert tradableIdentifier and currency to lowercase to ensure compatibility with case sensitivity for depth retrieval
updated test cases for QTT publishing values in ChannelStateTests. java to ensure consistency and accuracy in test cases
remove deprecate versionedhashes from enginepayloadparameter
reset the trigger price in MutableOfferView. java to ensure the trigger price is reset when the text field changes
modify studentfeedbacksubmissioneditsaveaction to redirect to student home page
removed debug print statements from I18NPageController. java to clean up the code and improve readability
hbase - 25827 hstore. getconnectioninfo ( ) should check for result in debug log.
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 567
added a new boolean flag ` _ alwaysSaveUri ` with getter and setter methods to enable control over the behavior of the ` _ alwaysSave
added two overloaded methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality
updated import statements and added popup menu handling in LWChoicePeer. java to improve code clarity and ensure proper visibility of the popup menu
removed redundant null check for insert in StressProfile. java to streamline code by eliminating redundancy
[ java ] use javaconversions. collectionasscalaiterable in java test wrapper
added null check for requests in MockServerEventLog. java and enhanced logging in HttpForwardObjectCallbackActionHandler. java to improve robustness
added a warning log for loading properties file in DefaultEnvironment. java to improve user feedback when properties file can not be found
replaced a try - with - resources statement with a try - with - resources statement to ensure proper resource management and prevent potential memory leaks
added a check for multicast and NIC support in the SetOutgoingIf condition to ensure only non - multicast and non - UP ports are accepted
updated the constructor of ` sqlCommand ` to include an additional length parameter to enhance functionality by allowing dynamic parsing of SQL commands
setLatestConsumeTime and setLatestConsumeTimeForEnergy in multiple processor classes to ensure accurate consumption time for both account and energy components
added a method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to handle invalid session strategies more effectively
[ hotfix ] [ core ] improve error message in protobufserializer
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of the ` containsKeys ` method in the `
refactor JdbcProxyGenerator to use DelegatorGenerator and introduce JDBC4TemporaryPreparedStatementMethods interface to enhance code maintainability and facilitate future
added a method ` ensure ` to create a ` ServerWebSocketContainer ` instance and modified the ` start ` method in ` DirectUpgradeTest `
;
pdfbox - 3017 : use point2d. float instead of point2d. float
replaced instances of ` MethodHook [ ] ` with a static constant ` EMPTY ` in ` Method. java ` to ensure consistent handling of empty
added a ` grantAccess ` parameter to the ` MockAuthenticationManager ` class and modified the authentication return logic to allow access to the ` Mock
updated the ` afterJob ` method signatures to accept a ` JobExecution ` parameter to enhance flexibility in job execution handling
updated file write permission check from ` canWrite ( ) ` to ` canExecute ( ) ` in ` SharedLibraryLoader. java ` to
update protoc to v3.15. 3 ( # 364 )
rename resultcollector. recordresult to resultcollector. recordevent.
added new constants for BATTERY _ LEVEL, ANNOTATION, TIME _ WITH _ OFFSET, DISTANCE, STARTTIMESTAMP, and PROFILE _
replace ` ` hashtable'' with ` ` map'' in searchexpression
ggb - 1976 move cursor to absolute screen instead of widget.
updated the resize method in JoglGraphics and modified texture filtering in ProjectiveTextureTest to improve compatibility with different texture formats and enhance texture
modified the ` setResourceToDelegate ` method to return a ` File ` instead of void to ensure that the output resource is writable before proceeding
camel - 15836 : allow property placeholder to be intercepted from the intercept uri.
updated comparison logic in ActionScheduler. java and changed expected value in TestActionScheduler. java to ensure accurate time comparison and correct expected value in
updated debug zip path in DbgPacker. java to ensure debug _ log is correctly set and avoid potential null pointer exceptions
fix notification overlay not bind to hud _ hidden
pipe : implement pipe. resetgate ( ) to reset the gate.

updated the alpha value of the team's random color from 0.8 f to 0.4 f to ensure the team's color reflects the intended
refactor ` SequenceMatcher ` to use ` Collection ` for ` activeMatchedStates ` and ` activeMatchedStates ` to improve performance by avoiding unnecessary
updated the condition for checking null and emptiness in SoftAsserts. java to improve clarity and correctness of exception handling logic
added error handling for invalid JSON and UnrecognizedPropertyException in StorageResources and StoragePluginRegistryImpl to improve error reporting and provide better context for plugin
replace printvmentrypoint ( ) with printcsvfile ( ) in calltreecrinter
added null checks for note and adjusted action handling in DetailFragment. java to improve robustness by preventing potential NullPointerExceptions
added peakTasks tracking and adjusted calculations for loaded tasks in AssetManager to ensure accurate loading behavior based on the number of tasks loaded
simonstewart : disable native event on window
added support for custom scoring and fetch interval in the Injector class to enhance functionality for handling nutch URLs and fetch intervals
updated import statements to use org. apache. commons. collections4 instead of org. apache. commons. collections to ensure compatibility with the latest
added a method ` isShareSchema ` to the ` CoreContainer ` class and created a test for schema sharing in ` TestCoreContainer `
updated method calls to use ` sizeInBytes ( true ) ` instead of ` sizeInBytes ( ) ` across multiple files to ensure consistent handling of
replaced assertEquals with assertNull for version1 _ 2 in VersioningTest. java to improve test reliability by ensuring version1 _ 2 is
updated SQL queries in ` DatabaseMetaDataTest. java ` and added tests for nullable domain types in ` DatabaseMetaDataTest. java ` to ensure
[ java ] fix race condition in appendnewleadershiptermevent.
removed the ` buildMediaType ` method from ` WebClientPlugin. java ` to streamline media type handling for better code clarity
replaced calls to ` bytes. fillUsingLengthPrefix ` with ` bytes. fill ` across multiple files to standardize method naming and improve code
added a check for ` isCompactedBase ` in ` AcidUtils. java ` and introduced a new test in ` TestCleaner
update immutableStorageScheme and qualifierEncodingScheme initialization to handle null values to improve robustness by preventing null pointer exceptions
added two new classes, PojoProducersCustomized and RestProducersCutomized, in the servicecomb demo package to provide a
updated cache configuration keys to use CACHE _ SECTION _ NAME instead of " http _ client _ tls _ cert " and " http _ client
replaced ` AesGcmSivProtoSerialization. register ( ) ` with ` AesGcmSivProtoSerialization. register (
added support for wooden slab in OreDictionary to enhance the functionality of the wooden slab functionality
refactor session management classes for improved organization to enhance maintainability and readability of session management code
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` parameter from the ` UndefinedSymbolsLinkerScript
update doc tree and overview ( rc1 )
hhh - 147642 - fix test failure on oracle
updated the calculation for the centerX and centerY in the spriteBatch draw method to correct the positioning of the texture based on its dimensions
refactored plot coordinate handling and improved string concatenation in PlayerFunctions and PlotId classes to enhance code readability and maintainability while ensuring proper
added a deprecated version constant for Lucene 8.5. 0 to indicate that this version is outdated and should no longer be used
updated the print statement for clarity in SSLSocketImpl. java to improve code readability and maintainability
added a new test method ` testCastToSignedInteger ` to ` SelectTest. java ` to ensure the SQL parser correctly handles signed integer
refactor dependency type handling in CoNLLUOutputter and add new constants in SemanticGraphCoreAnnotations to improve code clarity and maintainability by
replaced usage of ` ParseContext. Type. BUILD _ RULES _ FILE _ NAME ` with ` ParseContext. Type. BUILD _
;
updated the array size for configBlocks from Block. blocksList. length to 256 to optimize memory usage and prevent potential ArrayIndexOutOfBoundsException
replaced PlotSquared log statements with System. out. println and updated version checks in BukkitMain. java to improve clarity of log messages
updated regex pattern in AbstractSQLChange and added a test for escaping PostgreSQL questionmark operators in AbstractSQLChangeTest to ensure correct SQL escaping for
added ` ofAll ` and ` withAll ` methods to ` MutableBagFactory ` and its implementations in ` MutableBagFactoryImpl ` and `
added checks to ensure the file ends with ". adoc " and ". page - shortname " and " page - permalink "
updated MqttBrokerConnection instantiation to include an additional boolean parameter to enable connection pooling for improved connection handling
refactor ChangeSet retrieval logic to retrieve the root change log if it is null to improve robustness by avoiding potential null pointer exceptions
removed unnecessary initialization of MethodResult in StaticMethodInterceptor and refactored output handling in RocketMQGlobalPluginHandler and PrometheusPluginBoot
added database drop functionality in TestHiveMetaStorePartitionSpecs. java and enhanced logging in TestObjectStore. java to improve database management and enhance debugging capabilities
added a new parameter " order _ currency " to the BithumbAuthenticated and BithumbAccountServiceRaw classes to enhance functionality by allowing
deleted the SSEFluxWebConfig. java file to remove unused configuration to streamline the codebase
updated method checks from ` getReturnType ( ). getFullyQualifiedName ( ) ` to ` isVoid ( ) ` in ` JsonBuildHelper `
refactor YamlResource to simplify YAML loading and add a listYamls method for fetching detection configuration to improve code clarity and enhance functionality for fetching
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to allow access to these
refactor thread creation in Basic. java and introduce awaitTermination method in GroupOfOne. java to improve code clarity and ensure proper termination of asynchronous
added unit tests for the ` testAddingToList ` method in ` MongoTemplateTests ` and created a new class ` PersonWithAList `
g2p : use getordinatespacewidth / getordinatespaceheight instead of calculate width / height
replaced direct toolbar visibility setting with a delayed execution using a Handler to improve UI responsiveness by delaying the visibility change
bugfix : do not unpack the first page reader if it do not exist
bug fix : don't save vm password if vr be not running
added initialization for usingOutputStream, usingWriter, and isCharacterEncodingSet to ensure proper handling of character encoding in response
added a warning check for assignment side effects in GroupDialog to ensure proper handling of assignment side effects in the group dialog
refactor JSON and JSONConvertor classes to improve code organization and maintainability
updated the conditional check for icon dimensions in FileUploadApiController. java to ensure proper positioning of icons within specified limits
refactor ` RegisteredServiceProperty `, ` JwtTokenCipherSigningPublicKeyEndpoint `, ` JwtTokenCipherSigningPublicKeyEndpoint `
added methods to check if the file is readable or not based on the operating system to ensure proper handling of file contents and improve user experience
added JZlibDecoder, JZlibEncoder, and Z _ BEST _ COMPRESSION imports in NettyConnection. java to enhance compression
added a method ` doesClassLoaderDescendFrom ` in ` Util ` and removed its logic from ` Class ` and ` MethodHandles ` to
removed unused imports and added a warning log for NoClassDefFoundError in ChannelProvider. java and ProxyChannelProvider. java to streamline the connection process
added a new method ` startField ( ) ` in ` TextReader. java ` and implemented a test for handling empty final columns in `
added compass gravity and margins for the NearbyMapFragment to enhance the visual appearance of the NearbyMapFragment
added a new test method ` testInterpolation ` in ` GeoPathTest. java ` to ensure the ` computeNearestDistance ` method
refactor ` getLeafFilterBuilderByType ` method to throw ` HiveException ` and improve error handling in ` ParquetFilterPredicateConverter ` to
added handling for audio track language in LibMediaInfoParser to ensure correct language is set when the current audio track is not empty
added a warning log for schemas in old and new version to inform users that schemas in incompatible versions may lead to compatibility issues
replaced System. arraycopy calls with addAll for Array and FloatArray, IntArray, and LongArray classes to streamline code and improve performance by
fix for http : / / issues. apache. org / activemq / browse / amq - 4237
refactor InMemoryClientRegistrationRepository to streamline registration handling and add null checks for registrations to improve code clarity and prevent null pointer exceptions
added a method ` resetUIState ` to reset the UI state in the ` SchemaUpgradeHelper ` class to ensure that UI state is reset
added conditional logic to handle pending exceptions in JUnitReporter and corresponding tests to improve functionality and error handling for test execution results
add a new playerselector class to allow player selector to be use in entity.
added Closeable interface to Selector class to enable resource management for the Selector class
added MultiplexConnectionPool initialization in MaxConcurrentStreamsTest. java to improve connection handling and resource management
added multiple calls to stringType ( ) in CoreOptions. java to ensure consistent handling of string types across the application
added null checks for character and parameter in HqlQueryRenderer and disabled ESCAPE clause in EclipseLinkUserRepositoryFinderTests to improve robustness
updated status checks and refactored method names for better clarity to improve code readability and maintainability by using defined constants
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
fix flaky test
drill - 7142 : fix file selection in parquet format plugin
updated success variable and added error handling for ABI compilation in Jsr199Javac. java to improve error reporting and provide better diagnostics during
added a new ` BaseTableModelListener ` class and integrated it into the ` DefaultSortedTableModel ` to provide a listener for table change events
updated the range check for the number in ServerConfig. java from 49152 to 65535 to ensure that the number does not exceed the maximum
added imports for DocumentsContract and updated notification logic in AuthenticatorActivity, AccountRemovalJob, and DocumentsStorageProvider to ensure proper handling of document
removed a call to Log _ OC. startLogging ( getAppContext ( ) ) in MainApp. java to streamline logging process by elim
added ThrowableAnalyzer to handle wrapped RequestRejectedException in FilterChainProxy to improve error handling for wrapped RequestRejectedExceptions
updated length handling in StringBuilder to use'this. length'instead of'length + length'to improve code clarity and maintainability by using
pdfbox - 4892 : throw an exception when decode an empty filterlist
added a new class TbStopWatch for managing TbStopWatch instances to provide functionality for managing TbStopWatch instances
set the initialized state of PListStore to true to ensure proper initialization of the PListStore instance
added @ Deprecated annotation to multiple Java files to indicate that these classes are outdated and should not be used in future versions
[ zeppelin - 4957 ] set context class loader for remote interpreter server.
remove unnecessary call to entity. getentity ( )
update minSdk from VERSION _ CODES. P to VERSION _ CODES. O _ MR1 in ShadowRttCallTest. java
corrected the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in the ` onExpiry ` method to ensure consistency in
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 567
updated response path from " wro / all. js " to " static / all. css " and added a new WroSass
added a new test method ` showLatestTimeseriesTest ` in ` IoTDBMetadataFetchIT. java ` to validate the functionality of
corrected the parameter name from " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency with the new naming conventions
refactor exception handling in OCSPChecker to improve clarity to handle specific exception types more gracefully
add config option to disable solution benchmarking
bulk client regen : set default maxinboundmessagesize to max int
added a new test class ` Issue _ 815 ` to verify the functionality of the ` SliceSize ` feature to address issue # 815
added a shapeless recipe for the pipe water proof in the BuildCraftTransport class to enhance the inventory with a shapeless recipe
[ mahout - 3447 ] fix concurrentaccessSparsevector. nextindex ( ) to return the last element
added handling for Shulker and FixedMetadataValue in multiple classes to improve entity management and metadata handling
added ` getDebugLogger ( ) ` method to ` DIHWriter ` and overridden ` getDebugLogger ( ) ` in ` SolrWriter ` to
fix for http : / / issues. apache. org / activemq / browse / amq - 453
added a check for the presence of a tag in the UpToTagChangeSetFilter and modified the UpToTagChangeSetFilter to handle
[ flink - 1867 ] [ table - common ] fix compile error
( chore ) camel - broker : fix checkstyle violation
changed volumePaint and upPaint from gray and green to GRAY and GREEN in CandlestickRenderer. java to improve visual consistency and
refactor layout parameters in InsettableFrameLayout to use a more descriptive variable name to improve code readability and maintainability by standardizing layout parameters
added duration property to rule info and updated related tests to enhance the functionality by tracking the duration of rule execution
replaced the @ Profile annotation with @ Assume. assumeTrue in multiple test classes to ensure tests are only executed when the database profile is enabled
added a null check for the user object in the OAuthConfirmationController class to prevent potential NullPointerException when accessing the user object
added unit test base on user forum issue : http : / / issues. apache. org / activemq / browse / camel - 213
replace concurrentskiplistset with nonblockinghashset in cassandraconnection
api : listpublicipaddresses api : add source network id to list public ip address
added unit tests for ` isIgnoringBatteryOptimizations ` method in ` ShadowPowerManagerTest ` and implemented it in ` Shadow
updated the method to retrieve the Jetty version from ` __ buildProperties ` to ensure compatibility with the latest Jetty version
added unit tests for verifying multiple invocations in ` NumberOfInvocationsInOrderVerifierTest. java ` to ensure that the verifier correctly verifies
modify debugForceEvaluation logic in TRegexExecNode. java to handle cases where no match instance is present
added a new parameter " - foreground " to the startProfile method call to specify the foreground mode for the process
replaced instances of ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster. java ` to improve
replaced ` Map < String, String > ` with ` String [ ] ` for ` parseFieldnames ` in ` MetadataIndexer. java `
updated logging to use file name instead of file name and added logic to dismiss the editor if it is not visible to improve logging clarity and ensure
updated the handling of skipped entries in ClassFileReader and changed the warning message format in JdepsTask to improve clarity of skipped entries and enhance user
refactored Fetcher and FetcherTask to utilize LinkStorage and LuceneStorage for document storage to improve efficiency and maintainability of the code
updated the ` populateBubble ` method to accept an ` BubbleBarBubble ` parameter and added a null check for existing bubble to
camel - 15836 : camel - aws2 - quartz : remove warn log for scheduled route policy
removed array from method signatures in MotanServiceBeanPostProcessor, TarsServiceBeanPostProcessor, and TarsServiceBeanPostProcessor to simplify method
[ java ] use nak _ multicast _ delay _ generator for loss handler.
updated Gson initialization and added client secret handling in ClientInformationResponseView. java to improve clarity and functionality when deserializing JSON data
added a check to ensure the order's average price is greater than zero before adding it to limitOrders to prevent potential errors due to incorrect
refactor rawExecutionReports method for better readability to streamline the code for better readability and maintainability
added a fail method to handle exceptions in LdapTimeoutTest to improve error handling and provide more informative failure messages
don't try to read the user dictionary if it don't exist
refactor password handling logic in AmbariServerConfigurationHandler. java and update test cases in RootServiceComponentConfigurationResourceProviderTest. java to ensure
added a method to check if a segment is already parsed in ParseSegment. java and refactored SegmentChecker. java to improve segment parsing
[ hotfix ] [ yarn ] add default value for application attempt failures validity interval
don't unload the h2 driver when it be not include.
hbase - 25764 add ability to set read type for snapshot - based inputformat ( chaoyu )
added fixedHeight and fixedWidth fields with their getter and setter methods in LoginInstanceRequest. java to allow dynamic adjustment of the instance's
added a new parameter ` cornerRadius ` to the ` update ` method across multiple classes to allow for better control over the corner radius during animations
added filters for " DESCRIBE [ \ s ] + FORMATTED " and " SHOW [ \ s ] + INDEXES " in Q
added retry logic for connection pooling in TxnHandler. java to improve reliability of database connection handling
add backup preparation for txn _ prepare _ backup _ rebalance
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to store and initialize the ` strings ` array
updated delete statements from " DELETE ROWS " to " DELETE ROWS CLIENT SELECT " and added a new ExplainPlanTextTest class to
added handling for SocketException in BaseServiceException. java and created corresponding tests in BaseServiceExceptionTest. java to improve reliability of exception handling and ensure
added a new parameter ` rapidInstallTypes ` to the ` AdbHelper ` and related classes to enable flexible handling of rapid install types in
updated the regex pattern for SeedPattern in SortTest. java to improve accuracy of seed pattern matching
refactor MultimapSubject to use a factory for creating ` IterableSubject ` instances to improve clarity and maintainability of the code
adjusted the calculation for the real - display size in the hotseat to ensure proper positioning of the hotseat based on device orientation
add transmux option to transformer to support multiple medium item.
added localization support for picker values to enhance user experience by allowing localization of picker values
camel - 7464 : camel - cxfrs : fixed npe in camel - cxf when a customer uri can not be find
hhh - 147642 - add support for postgresql 11 +
added null check for queryId in TestJdbcDriver2. java and updated import statements in HiveStatement. java to improve test reliability and
[ hotfix ] [ test ] add usesunboundedpcollections category to pardotest
updated HTML formatting for filename display in GpsSimpleViewFragment. java to improve code readability and maintainability
[ java ] remove leadership term id from joinlogasfollower.
refactor HttpSender to use a private instance variable for the exchange to improve encapsulation and maintainability of the code
migrate failoverstrategycheckpointcoordinatortest to junit5
refactor ` token ( ) ` method to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and its corresponding test to
added null check for the ` tree ` in ` Recipe ` and ` Markers ` classes to prevent potential ` NullPointerException ` when ` tree
bugfix : getfontsize ( ) now return a double instead of a float
refactor email handling in AddressBookDoCoResultParser to use an array instead of a single email string to improve code readability and maintainability by
refactor exclusions handling in RawMavenResolver to improve clarity and maintainability of the code
added handling for quoted and base currency in the DSXAdapters and DSXPairInfo classes to improve error handling and support for quoted and
r r r r r r r r r r r r r r r r r r r r r r r
drools - 90 : incremental compilation fail if kmodulepom be invalid
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj. has ( k ) ` to
camel - jackson : fix typo find by codespell on fossies. org
replace methodhandle. findstaticgetter ( ) with methodhandles. unreflectgetter ( )
added a method parameter annotation for CompletableFuture in DefaultNullnessAnnotations. java to enable handling of CompletableFuture instances in the database
updated the calculation for mFreezeCheckPoint in PlaybackController. java to ensure that the freeze check point accurately reflects the
added imports for Whitebox and removed the run method from PowerMockRunner to streamline the code by eliminating unnecessary run notifications
updated the method call to use realType ( ) instead of typeCode to ensure compatibility with real types in unmarshalling
refactor TabsAndIndentsVisitor to improve indentation logic for method invocations to enhance code readability and maintain consistent indentation across method invocations
updated TestSingleTokenFilter to extend TestCase instead of LuceneTestCase to improve test reliability by using TestCase instead of LuceneTestCase
modify the output format for the new column in HtmlProcessInformationsReport. java to improve readability of the output by providing a wrapped text
refactor ` JdbcStepExecutionDao `, ` MapStepExecutionDao `, and ` SimpleJobRepository ` to manage the latest execution context to
added a conditional check for new media folder visibility to ensure media folders are only added when the configuration changes
added null checks for actor and secondWidget in SplitPane to ensure proper handling of widget states
added handling for JavaType. Parameterized in RemoveUnusedImports. java to ensure correct handling of JavaType. Parameterized instances
updated debug log message to use ` this. getClass ( ) ` and added a null check for ` getModFileInfo ( ) ` to improve logging
changed the logger initialization from instance to static final in TicketGrantingTicketImpl. java to improve performance by avoiding unnecessary instance creation
updated the SNAPPY schema version from " SNAPPY. RLE " to " SNAPPY. RLE. 81 + 12
added a method ` isValue ( String value ) ` to the ` AttrData ` class and updated the ` Converter ` class to handle value
added support for character modifier keys in US International PC locale in CPlatformResponder. java and LWCToolkit. java to enhance character
[ java ] use aeron _ publication _ connection _ timeout in ctestmediadriver
added a check to return false if the request URI does not start with " / css " or " / images " or " / favicon "
added an assertion to check the installation process in TestUtil. java to ensure the device is rooted before proceeding with the APK installation process
no effective change - remove oraclequerylimiter
added MultiMap mock in TestSimpleBodyHandler and updated assertions in TestVertxTLSBuilder to ensure proper handling of multi - map requests
updated JavaLib1. java file paths in DiffRuleKeysScriptIntegrationTest. java to ensure compatibility with the latest Java libraries
added a flag to manage haptic dismissal behavior in TaskViewTouchController to ensure that haptic actions are only performed when the
add projectile source to the world explosion's cause.
removed unused import and modified getItemId method in SymbolInputAdapter. java to streamline code and improve maintainability
updated limit _ bids and limit _ asks parameters from 10 to 50 in Bitfinex. java and BitfinexPollingMarketDataService.
added a check to replace single quotes with double quotes in the result to ensure proper handling of double quotes in XML output
added a ` toString ( ) ` method to ` KubernetesLeaderElectionDriver ` and corresponding tests in ` ZooKeeperLeaderElectionDriverTest `
refactor SqlSessionFactoryBean implementation to improve code readability and maintainability
[ 3.0 ] fix npe in tripleinvoker
replace error handling with throwing a GdxRuntimeException for reading errors to improve error handling by providing a more informative error message
added a method to check if the threadlocal deadline has not been started to ensure that the threadlocal deadline is only used when it's
added handling for ClosedChannelException in NettyRequestExecutor to improve error reporting for closed channels
modified text setting logic in ItemListActivity to handle null genres gracefully to improve user experience by preventing null pointer exceptions
[ hotfix ] [ checkpoint ] reset the master hook in checkpointcoordinator
add mappedcontainercomponent to allow prefab to use collection of mapped container
[ hotfix ] fix npe in walnode. getunpinnedmemtables ( )
added test for retrying the same host on callback failure in HttpTest. java to ensure that retrying the same host does not result in
update package - info. java files for mmm and ppp packages to improve organization and clarity of package documentation
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server escaping to ensure correct handling of escaped question characters in SQL queries
added NonNull annotations to constructors of CamelModule for better null safety to enhance code robustness and prevent potential NullPointerExceptions
replaced synchronized block with a utility method for synchronization to improve code readability and maintainability
rename ParameterFlags to com. kenai. jaffl. provider and update import statements to reflect the new package structure
refactor crop behavior handling in CropperUtils. java to improve type safety and error handling for unsupported image types
removed appName parameter from the configure method across multiple classes to simplify method signatures by eliminating appName parameter
fix ` ` ignore deps'' for ` ` r'' and ` ` broken deps''
use ` -- headless = chrome ` instead of ` setheadless ( true ) `
replaced direct assignment of the value with a method call to intern the value to improve performance by avoiding unnecessary object creation
added a condition to check for " MOVE " status in the connection status validation to ensure proper handling of " MOVE " status in the
updated date format patterns in FixedDateFormat. java to ensure consistent date formatting across different formats
replaced ` org. apache. curator. shaded. com. google. common. collect. Lists ` with ` com. google.
` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` ` `
added checks for untrusted visit permissions in plot visit logic to ensure that untrusted visit permissions are handled correctly
don't register jabber service if it be already register.
updated conditional check in BasicURLNormalizer. java and added a new test for curly brackets in TestBasicURLNormalizer. java to enhance
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation and improve code clarity
added a check to compare the lock rate against the enc1 and enc2 values to ensure accurate comparison of cryptocurrency rates
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and changed the return type of ` generateProjects ( ) ` to ` ImmutableSet
refactor calendar type retrieval logic in HostLocaleProviderAdapterImpl. java to improve clarity and correctness of calendar type handling
added a new file ` MSwingUtilities. java ` with utility methods for scaling images to enhance image loading functionality and improve error handling
( chore ) camel - mail : use defaultasyncproducer instead of defaultproducer
added ` @ RefreshScope ` annotation to ` CasCoreWebConfiguration ` and ` PasswordlessAuthenticationConfiguration ` classes to ensure that the application
added unit test base onexception handling
added two new Java files, Main. java and ScriptRenderer. java, implementing a template rendering mechanism to facilitate the rendering of JavaScript
added a condition to check if ` _ inputState ` is ` __ NONE ` in ` Request. java ` and implemented a new test for
updated descent calculation and added isDescendant method in Group and SelectBox classes, and modified touch focus handling in FlickScrollPane and Select
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager. java ` and added a new test in ` DeploymentTest
fix lexiconrecipemapplicits. lexiconrecipemapplicits. lexiconrecipemapplicits.
increased sleep duration in ConstantTimeBackoffTest from 100ms to 500ms to allow more time for interruptions during interruptions
replaced ` StringUtils. trim ` with a wildcard import and modified the condition to check for non - blank strings to simplify import statements and improve readability
don't use classpathurlstreamhandler in jolly dayolidays
added a new utility class ` FieldUtils ` for retrieving and managing field accessors to improve code organization and facilitate easier access to field
removed unnecessary speculative type assertion in DeferredAttr. java and added a new DoubleStaticImport. java file with a test method to streamline
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for custom content to ensure proper layout
added a method to update the xmpp account settings with saving the last account and improved error handling for invalid tokens to enhance user experience by ensuring
added a new method ` setvar ` to the ` Commands ` class to handle command line arguments to enhance usability by allowing users to specify
fix animaltameevent not fire on animaltame. close # 70877
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 467
pdfbox - 4071 : add a test to verify that a font be present in the first widget.
added setting of app mode in PageListController. java to enable or disable the app mode for enhanced user experience
added support for configuring Docker file path in ` ImageFromDockerfile ` and created corresponding test cases to enhance flexibility in managing Docker file paths
added a null check for threadInfos [ threadId ] in ThreadInfos. java to prevent potential NullPointerException when accessing threadInfos
updated the condition for the sweep angle in PieChartRenderer. java to ensure that the sweep angle does not exceed the floating - point tolerance
[ hotfix ] [ network ] add log for recovered input channel
added new tables including SYNONYM, ALIAS, GLOBAL _ TEMPORARY, HIERARCHY _ TABLE, INOPER
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum classes to allow users to specify the minimum similarity in the query
replaced the method ` addActionsView ( ) ` with ` setActionsView ( ) ` in ` RecentsView. java ` to standard
log4j2 - 1010 - remove unused property immediateflush from layoutwrappingencoder
added " org. springframework. boot. autoconfigure. amqp. RabbitAutoConfiguration " and " org. springframework. boot.
modified JLayer. java to handle null component removal and added a new test class bug6875716 to ensure proper handling of null components and
replaced ` avro. shaded. com. google. common. base. Function ` with ` com. google. common. base. Function
add unwind block to the graph builder.
added getter and setter methods for legacy renderers in Label. java to enhance functionality for legacy renderers
replaced instances of ` intToFourBytes ` with ` Ints. toByteArray ` in ` AbstractJweDecrypter ` and ` Abstract
added null check for mObserver in NavigationModeFeatureFlag. java to prevent potential NullPointerException when mObserver is null
removed the default implementation of the ` thenComparing ` method in the ` Comparator ` class and added a new test method in ` TypeTest
; ; ; ; ; ; ; ; review
updated the setEndTimeUtc method to use currentKey instead of null to ensure accurate tracking of time based on the current timestamp
added exception handling for NumberFormatException in VisualScoreTagTest. java to ensure that parsing fails gracefully by catching potential NumberFormatException
updated MockFactory to set class loader for mock enhancer to ensure correct class loading for mock enhancer
added a new class ` OriginalFormat ` and modified the ` format ` method in ` ConverterWithEnumFormat. java ` to include a new
replaced hardcoded " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils. java to improve maintainability
updated JAWTRenderer. java file to improve rendering performance
camel - 15836 - camel - aws2 - lambda : enable autowire on the lambda client, regen doc
cloudstack - 7131 : allow to create a mac address for a network that have a valid mac address.
added a check for " Authorization " header in ProxyServlet. java to ensure proper handling of authorization headers in the application
replaced submit method with execute method in TraceableExecutorService to improve asynchronous execution handling
added ` getDetails ( ) ` method to ` AbstractAuthenticationToken `, ` UsernamePasswordAuthenticationToken `, and ` BasicProcessingFilter ` classes
replaced the method of generating a random boolean for ` randUsePoints ` to simplify the randomness of the randUsePoints variable
replaced occurrences of ` appendDot ( ) ` with ` endSentence ( ) ` across multiple classes to standardize the method name for better clarity
updated formatForConsole method to use Locale. US for consistency to ensure consistent formatting across different locales
refactor GroovyParserVisitor and GroovyPrinter to improve handling of named argument expressions to enhance readability and maintainability of the code
fix splicedimage border so that each slice be guarantee to have positive dimension .
refactor gesture state handling in TouchInteractionService to improve clarity and maintainability of gesture state management
replaced Joda - Time imports with Java's ` Instant ` and ` DateTimeFormatter ` to improve compatibility with modern Java practices
refactor openblas and openblas _ nolapack to improve code organization and maintainability
fix possible resource leak in torrent storage
added synchronized keyword to the initTxnMgr method in SessionState. java to ensure thread safety during the initialization process
updated timeout values in ` AbstractDistribZkTestBase. java ` and set socket timeout in ` AbstractFullDistribZkTest
added a new class ` SearchResults ` to handle search results to facilitate the retrieval of documents and their associated results
refactor thread CPU refresh mechanism in CPUSamplerSupport. java to improve clarity and maintainability of the refresh logic
added null check for primitives array in BytecodeNode. java to prevent potential NullPointerException when primitives are not initialized
added new versions " 8.9. 0 - cfs " and " 8.9. 0 - nocfs " to TestBackwardsCompatibility. java
updated feature flag from DISABLED to TEAMFOOD in FeatureFlags. java and modified app icon text check in AppIcon. java to improve
added a new API endpoint to retrieve tenant pools for the current instance to enhance functionality by allowing access to tenant pools for the current instance
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods in ` TopFieldCollector.
added support for mock interface methods in InlineBytecodeGenerator and InlineByteBuddyMockMakerTest to enhance functionality and improve test coverage for mock
added logging statements to CxxCompileStep and CxxPreprocessStep classes to improve error handling and debugging for command compilation and preprocessing processes
add stringutil. removefromcharacter ( string, char ) to remove non - existent char from string.
fix ` ` metadata service protocol'' log message ( # 2497 )
kie - api - runtime : add datatransformer interface for compile and transform method
changed the type of ` values ` and ` objval ` from ` Collection <? > ` to ` Collection < Number [ ] [ ]
removed the conditional check for " Ljava / lang / String ; [ Ljava / lang / Object ; " in FormatStringChecker. java to simplify
set core to null in ElectionContext. java to ensure core is properly initialized before use
refactor ITestDbTxnManager. java file to improve code organization and readability
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and prevent potential memory leaks
added a method ` testMapModel ` to ` CodeFirstPojoClient ` and its implementation in ` CodeFirstPojoClient ` and ` CodeFirst
pdfbox - 4892 : don't try to create a xobject if it be a cosobject or cosstream
refactor selection selection handling in ScaleDialog. java to improve code clarity and prevent potential null pointer exceptions
rename ` updatePlayerStepStatus ` to ` tickBelt ` and add null check for ` reachDist ` and ` attrib ` to improve
added logging for appearance stream creation and changed exception handling in AppearanceGeneratorHelper. java to improve error handling and logging for appearance stream creation
replaced TreeSet with LinkedHashSet in ExecuteSqlCommandStep. java to improve performance by using a linkedhashset instead of a sortedhashset
updated time range from 1500 to 1000 in CancelEventTimer. java and modified method signatures in PagePreviewCard. java to improve responsiveness and
updated the preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the
added a conditional check for agentSupport in MainMockTransformer and created new classes MockStaticWithPrivateCtorTest and StaticWithPrivateCtor
pdfbox - 4892 : don't decrypt a cosstring or cosarray, a suggest by valerybokov
add a method to set the title in the main frame to allow users to change the title of the application.
updated depth calculation based on pixel size in XRSurfaceData. java to ensure depth is set correctly based on the pixel size
added error handling for reading response body in OkHttpDataSource to improve error reporting for unsuccessful responses
added a new method ` exit ` to the ` TopLogging ` class and modified ` TopThreadGroup ` to use it to improve error handling
updated the logic for determining the start index in NativeRegExp. java to ensure the correct start index is set based on the regexp's state
planner - 468 : ignore test due to upgrade to optaplanner 6.3. 1 +
updated variable assignment for highAllocation in DefaultAllocator. java to ensure correct allocation handling for high allocations
added a method to clean entries without feeds in DatabaseCleaner and implemented a deleteWithoutFeeds method in FeedEntryDAO and AdminREST to
changed the return type of the appendToLabel method from void to AtomicCounter to allow the method to return the current instance instead of void
added NoOpIdleStrategy class and modified LowLatencyMediaDriver to use it instead of BusySpinIdleStrategy to enhance idle strategy functionality and
added handling for NOT _ MODIFIED HTTP status in CacheControlHeadersWriter and its tests to ensure headers are only written when the response status changes
refactor instrumentation for ` InstrumentationPartialEvaluationTest ` to use ` ToolEvalNodeFactory ` instead of ` SpliceInstrumentListener `
removed the paintTabArea method from SynthTabbedPaneUI. java to streamline the code by eliminating unnecessary method
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional ` Object. args ` parameter to
camel - 15836 : camel - ftp - add file separator and absolute check to the ftp component.
added a new method ` build ` to the ` JavaProvenance ` class and updated ` MavenProject ` to use this new method to enhance
added logging for Registered Hive UDFs in HiveFunctionRegistry. java and created corresponding test in TestInbuiltHiveUDFs. java to
reduced the loop iteration from 100 to 200 in CloudStateUpdateTest. java to allow more time for the test to complete
defer delivery of hintedhandoff for unknown columnfamily. patch by jbellis ; review by jbellis for cassandra - 1313
added a check for writable output files in NativeErrors. java to improve error handling for writable output files
added error handling for package information retrieval in LauncherModel. java to improve robustness by logging errors when package information is not found
don't try to upgrade the database if it fail to start
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test in FaultTolerantChunkOrient
replaced ` startsWith ( completed ) ` method with ` regionMatches ( ) ` method in ` LineReaderImpl. java ` to improve matching logic
added imports for SourcesFileErrors and SourcesFileResults, and refactored dataTable descriptor handling to improve code clarity and maintainability by
added functionality to dismiss all tasks from the overview in TaplTestsTaskbar. java to ensure that all tasks are dismissed when the
add db upgrade systemvm template to upgrade systemvm template
removed redundant null checks for the connection object in LdapClient. java to simplify code logic and improve readability
refactored index checking logic in SequenceAction. java to improve readability and maintainability of the code
patch by jbellis ; review by jbellis
added a check to skip processing for synthetic fields in ReflectUtils. java to improve performance by avoiding unnecessary processing for synthetic fields
added LoggerProvider class and integrated it into ApplicationController to facilitate logging functionality within the application
changed the type of the ` builder ` variable from ` ImmutableMap < String, String > ` to ` ImmutableMap < String, Object > ` and
added a warning mechanism for deprecated spring context configuration in SpringFactory and SpringFactoryTest to inform users about the use of deprecated spring context configuration
added a method ` deepStart ` to the ` Startables ` class to facilitate deep starting of ` Startables `
removed the deprecated ` reservePrimitiveExtensionArray ` method from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the code and
make blocklasertable implement iliasertargetblock
refactor the condition for checking object names in AbstractJdbcDatabase. java to improve readability and maintainability of the code
removed unused import statements in TestSolr4Spatial2. java to streamline code and improve readability
http : / / issues. apache. org / jira / browse / amq - 4237 - fix memory limit test
updated conditional checks in RequestHandlers. java to use length ( ) instead of null checks to improve code robustness and prevent potential NullPointerExceptions
updated the servlet name retrieval logic in ProxyServlet. java to ensure correct logging format for servlet names
refactor python environment variable handling to use Google's Maps utility to improve code readability and maintainability by leveraging Google's utility for
updated audio frame size calculations and improved error handling in DirectAudioDevice and Toolkit classes to ensure audio data is valid and handle potential OutOfMemoryError appropriately
added null check for enums in ElasticSearchStringLookupService to prevent potential NullPointerException when enums is null
[ hotfix ] [ core ] log unexpected end of segment in commitlogreader
added policy assignment to WebSocketSession to ensure proper handling of WebSocket session policies
simplified the initialization logic for static fields in the Java2TypeScriptTranslator to improve readability and maintainability of the code
added a webroot argument to the StaticHandler constructor to allow dynamic configuration of the web root directory
( chore ) camel - spring - boot : migrate test to junit5
bugfix : use monitoredvmutil. isattachable instead of monitoredvmutil. isattachable ( )
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in method naming
replaced individual trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and provide a placeholder for
added multiple calls to buffer. reset ( ) in ReduceRecordProcessor. java to ensure proper resource management during processing
added null checks for mOriginalForeground and mOriginalBackground before setting foreground and background to prevent potential NullPointerExceptions when mOriginalBackground is not
modified conditional checks in FloatingDecimal. java to use'less than or equal to'instead of'less than or equal to'to ensure
updated property type check in ` PropertyDescriptor. java ` and added a new test class ` Test7189112. java ` to ensure
removed the maxVersion parameter from version retrieval to simplify the code by eliminating unnecessary parameters
don't set ` ` origin'' header if uri be not secure
refactor task visibility and animation logic in RecentsView, TaskView, and TaskView classes to improve visual feedback based on the overlay modal state
updated error messages in ORCRecordReader. java to include field information to enhance clarity of error messages for better debugging
added new sample for TearsOfSteel. m3u8 and bipbop _ 4x3 _ variant. m
removed unused imports and simplified variable names in PersistenceProvider. java to streamline code and improve readability
hbase - 2697. addendum : fix log for exec rpc and rpc engine
added logging functionality for JavaFileObject errors and warnings in TestSpecificCompiler. java to enhance error handling and debugging capabilities during code compilation
refactor WebSocket session creation logic and add a new test for session closure to improve session management and ensure proper handling of WebSocket connections
change daostatemonitoringservice. ondaostateblockchainchanged to onbatchprocessing
updated references from " xwork - 2.1. 3 / / EN " to " xwork - 2.1. 1 / / Apache Struts / X
added conditional logic for stopping the video track in WebCamInputPanel to ensure proper handling of video tracks when stopping the video stream
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
[ geot - 5657 ] fix checkstyle violation in gml example
replaced ` s. substream ( 200 ) ` with ` s. skip ( 200 ) ` in ` TargetType58. java ` to
hhh - 10956 - fix nullpointerexception in composite id generator
rename ` ` find full text'' to ` ` download full text''
refactor URI registration logic in ` URIRegisterExecutorSubscriberSubscriber. java ` and remove deprecated methods in ` ShenyuClientRegisterDefaultServiceImpl
refactor WebSocket mapping and upgrade filter classes to improve code organization and maintainability
refactor OpenSubtitle. java to handle blank OSDb hash and improve type safety to enhance code robustness and prevent runtime errors due to blank
added transferToken method to handle token transfers and validation in MUtil . java and updated RuntimeImpl . java to use it to improve token management and ensure proper validation during asset transfers
camel - 15836 : camel - ftp - don't delete file if it's a stepwise operation
updated method reference from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration. java ` to ensure consistency in
added assertions for empty join result and modified condition checks in MapJoinOperator. java ; refactored BloomFilter in HybridHashTableContainer
updated the ` HTTPSPDYAsyncEndPoint ` constructor to include ` AsyncEndPoint ` as a parameter to enhance the constructor's functionality by allowing
added ` id ` putExtra to ` TimeLineCursorAdapter `, ` TimelineArrayAdapter `, and ` TweetFragment ` to include the
replaced internal disconnectInternal ( ) with disconnectWeb ( ) and added handling for proxy authorization in HttpURLConnection. java to improve handling of proxy authorization
replaced ` int _ numChildren ` with ` AtomicInteger ` for thread - safe incrementing of ` _ numChildren ` to improve thread safety and performance
removed unused JWT values from multiple Java files to streamline code for better readability and maintainability
updated test annotation to disable the test for null pointer exceptions to improve test reliability by preventing null pointer exceptions
[ hotfix ] [ kiecontainer ] move resourcefactoryservice to kie - api
updated predicates in multiple predicate classes to use NOT _ IN instead of IN to improve clarity and consistency in predicate handling
updated exception handling in FileActivity, Preferences, and ReceiveExternalFilesActivity to improve error reporting and streamline account management
added null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
modified the construction of the taggedCol string in JoinDesc. java to ensure the correct expression string is used for column identification
added a check to ensure the Javadoc is not present before setting the Javadoc value to avoid potential NullPointerExceptions when the Javadoc is not present
) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
replaced revalidate ( ) calls with revalidateWithAnimationSafety ( ) in Tabs. java to improve UI responsiveness by using a more suitable animation
[ hotfix ] [ core ] replace unsupportedoperationexception with return of unregisteredmetricsgroup
updated the calculation of'y'to use'oldX'instead of'x'to ensure correct positioning of the polygon based on its
fix cacheconfigtest failure
added a check for non - empty string in InheritanceUnsafeGetResource. java and created a new Bug2974855. java file with
updated ShadowCookieManager. java to improve cookie management functionality
added a configuration option to disallow dropping external tables in the Hive metastore authorization provider to enhance security by preventing operations on external tables
added a conditional check for WebGL in Stage. java and updated the draw method in ProgressBar. java to ensure proper handling of WebGL applications and improve
implement platformcapability. getplatformbyteorder ( ) for endianness.
updated the property name from " testcontainers. namedpipesocketprovider. timeout " to " testcontainers. windowsprovider. timeout " to
updated initWebViewLogin method to accept a base URL and added handling for the login URL to improve flexibility in loading the login URL based on the
updated error message for JDBC type specification in CallableStatementHandler. java to improve clarity of error messages related to output parameter specifications
updated date format in AuditEventsMvcEndpoint and modified test assertions in AuditEventsMvcEndpointTests to ensure proper date formatting and improve test coverage for
renamed ExponentialTimer and ExponentialTimerBeanInfo to PreciseThroughputTimer and PreciseThroughputTimer respectively to
added functionality to remove soft body from the world's dynamics world to ensure the soft body is properly removed from the world's dynam
[ hotfix ] [ table - common ] make interface public
[ zeppelin - 4441 ] fix log message in zeppelinhubclient and zeppelinwebsocket
add test case for jingle. builder. toxml ( ).
fix a couple of rare npe in the chest.
added support for filtering HTTP / 2 headers in BareResponseImpl and updated HelidonConnectionHandler to improve handling of HTTP / 2 headers
replaced calls to ` plot. getTrusted ( ) ` with ` plot. getTrusted ( ) ` and ` plot. getMembers ( ) `
updated the delimiter format in SimpleReport. java and modified the format string in SimpleReport. java to ensure consistent formatting and improve readability of the
removed the ` - XDignoreSymbolFile ` option from ` JavapTask ` and added a new class ` T68637
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and updated references accordingly to improve clarity and consistency in naming conventions
refactor contract handling logic in Runtime. java to improve error handling and ensure contract address is null to enhance robustness and prevent null pointer exceptions
make sure we don't create an input3d if we're in an applet
added an @ Ignore annotation to the KinesisIntegrationTests class to temporarily disable tests that are not ready for execution
remove parserexception from scripttagpayloadreader. parsepayload ( )
added @ Override annotation to getRepositoryFactoryBeanClassName method to ensure proper implementation of getRepositoryFactoryClassName method
changed return types of getExecutableCommand ( ) from String to List < String > across multiple rule classes to improve flexibility in handling multiple executable commands
replaced'this. x'and'this. height'assignments with'IOSGLES20. x'and'IOSGLES20
removed the ` UploadPathActivity ` class and its associated file handling logic to streamline the code by eliminating unused components
updated logic to return totalTermFreq and sumTotalTermFreq only if indexOptions is DOCS _ ONLY to ensure accurate calculation of total term
fix : implicit constructor be not set to sourcestart
added a ` Database ` parameter to the ` populateValidateNullableIfNeeded ` and ` populateValidatePrimaryKeyIfNeeded ` methods to skip validation for Oracle databases
refactor Database class structure to improve maintainability and readability of the code
updated SpringApplicationBuilder. java for improved functionality to enhance application performance and maintainability
removed the ` IndexOptions ` declaration from ` DefaultIndexingChain. java ` and updated the iterator assignment in ` PointInSetQuery.
removed substring extraction from rawName in SchematicHandler. java to streamline code by eliminating unnecessary substring extraction
added case handling for Collections $ EmptyList, Collections $ EmptyNavigableSet, Collections $ EmptySortedSet, and Collections $ SingletonList in
changed the visibility of the Option enum from static to instance to allow for dynamic instantiation of the Option class
updated Compose. java and ComposeActivity. java to include a confirmation dialog for the twitlonger to enhance user experience by providing
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ) ` to streamline file synchronization
replaced ` DatatypeConverter. parseBase64Binary ` with ` Base64. decode ` and added unit tests for the ` ImageUtilTest `
added new classes ` ControllerCounter ` and ` DBCallback `, and modified ` doInDB ` method to include a ` doInDB
added'final'modifier to the deleteTicket method parameter to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner. java for database migration to facilitate migration of Flyway databases in the application
don't create empty map if there be no entry
updated the version number from " 0.6. 0 " to " 0.7. 0 " in TsFileDBConstant. java to reflect the latest
added nullability annotations to the modify method in CompressionCodec and ZlibCodec classes to improve null safety and prevent potential NullPointerExceptions
refactor LauncherHelper to handle null main entry values and add a new test for missing main entry jar to improve robustness of the jar creation process
corrected the spelling of " Tests " in multiple test files to ensure consistency and accuracy in naming conventions
fix issue with graal _ node _ count and graal _ node _ count
refactor CellCopyPolicy class to improve cloning functionality to enhance code clarity and maintainability by using a unified constructor
added a method to reset the icon load result in FloatingIconView. java and called it in Launcher. java and FloatingIconView. java
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager. java ` to
updated IconRecentsView to conditionally apply item decoration based on device orientation to improve layout responsiveness for different screen orientations
deleted the AddAdapter. java file to remove unused code to streamline the project
fix bug in nonstaticlifter. nopout ( )
hive - 25827 : remove unnecessary null check when process sort column ( jesus camacho rodriguez, review
refactor TestLogWatcher to improve error handling and message verification to enhance robustness of the test by ensuring messages are only validated when a watcher
added a print statement for any type in Java2TypeScriptTranslator. java to ensure proper handling of any type in TypeScript translation
updated SDK version from " 4799589 " to " 4913185 " to reflect the latest release version
added a condition to set the SPRING _ AOP _ PROXY _ TARGET _ CLASS property to true in TraceEnvironmentPostProcessor to ensure that the proxy
removed the singletonLock boolean from TypeCachingBytecodeGenerator. java to simplify the code by directly using the singleton lock value
rename callbackactionexamples to callbackactionexamples
added a ` appendToFile ` method to the ` Utils ` class and modified the ` writeFile ` method to include an additional parameter for appending to
updated ` MavenExecutionContextView ` to include a check for ` MavenSettings ` before returning the mirrors to ensure that only mirrors are processed
added a ` name ` parameter to ` BuildRuleSourcePath ` and ` PathSourcePath ` constructors and updated their implementations to enhance functionality by allowing
updated the service client matching logic in OAuth20CallbackAuthorizeEndpointController. java and added a new test in OAuth20CallbackAuthorizeEndpoint
replaced calls to ` values ( ). toArray ( ). EMPTY _ ANNOTATION _ ARRAY ` with ` AnnotationParser. toArray ( ) `
updated methods in UserManagerCompatVL to use getBadgedIconForUser instead of getBadgedDrawableForUser and getBadgedLabelForUser
updated the default line separator default value in GlobalConfiguration. java to ensure consistent line separator handling across different operating systems
don't implement abstract class in configurationmanager ( fixes # 388 )
added ` sanitizeInput ` method to sanitize input values in ` BaseController. java ` to enhance security by preventing XSS vulnerabilities
chore : update java and python dependency ( # 2 )
updated the buildFileNamesCanBeDifferentCrossCell method to include an IOException and modified the way build file names are handled to improve test reli
refactor CountersReader to improve code readability to enhance maintainability and facilitate future feature additions
refactor ` logDeepShortcutsOpen ` method to accept ` View ` instead of ` int ` and update related calls to improve code clarity and
hbase - 15836 deprecate buffer _ count and buffer _ size in hbase. ipc. server. bytebuffallocator
fix native test for window
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types based on the presence of ` real ` and ` non
updated test cases in TestFSTs. java to improve reliability of test cases
fix label height calculation for latex text
hbase - 25836 region split policy should set initial size to 2 for increasingtoupperboundregionsplitpolicy
removed unnecessary state reset and loading logic in LauncherClings. java to streamline the code by eliminating unnecessary state management
replaced instances of ` keys ` and ` updates ` with ` keys ` and ` updates ` in ` ManagedSelector. java ` to improve clarity
added a set of excludedDatasources and a corresponding getter and setter in SpringDataSourceBeanPostProcessor to allow configuration of excluded datasource in Spring applications
added undo info storage in TableValuesView. java and removed null check for'cb'in TableValuesPanel. java to enhance user experience
[ hotfix ] [ kinesis ] use sdkclient instead of sdkclient in kinesisproxy
fix channel id for velbus sensor
disabled due to unfavorable benchmarks in LocalCacheSelectorCode. java and updated test annotations in BoundedLocalCacheTest. java to
added a new test method ` illegalDatabaseNameTest ` in ` IoTDBSessionSimpleIT. java ` and modified ` PartialPath.
added a call to resetNewFiles ( ) in GarbageCollector. java to ensure proper cleanup of new files during garbage collection
replaced ` desiredWorkspaceLeftRightOriginalPx ` and ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` and updated
refactor whitespace and formatting in CharTokenizer. java for consistency to improve code readability and maintainability
update gapic - generator - java version to 2.1. 0 ( # 38 )
cloudstack - 7131 : fix typo in xenserver network label
updated libGDX and libGDX nightly versions in DependencyBank. java to ensure compatibility with the latest release releases
removed the private field ` metricNames ` and its getter method from ` SolrCore. java ` to streamline the code by eliminating unused
replaced URI handling with Fs for working directory and absolute path resolution to improve compatibility with different filesystems
replaced a conditional check with a constant for the OS name check to improve code readability and maintainability
refactor JdbcAggregationRepository class to improve code readability and maintainability
added functionality to clear and copy the slotList from the other object to ensure that the slotList reflects the current state of the other object
initialize m _ predCount to - 1 in PredicatedNodeTest. java to ensure proper handling of pred count in tests
added properties merging functionality in ConfigurationSpringInitializer to enable merging of configuration properties for better configuration management
refactor CommandLineOutputAppender to use org. slf4j. Logger instead of org. slf4j. Logger to ensure compatibility with the latest
replaced instances of HashMap with LinkedHashMap in multiple Java files to ensure predictable iteration order of the aliasToWork list
added logic to retrieve the superclass of the JDBCHandlerMap to ensure proper handling of class hierarchy in type handling
added debug logging for writing items in HibernateItemWriter, JpaItemWriter, FlatFileItemWriter, and JmsItemWriter to improve traceability
replace';'with';'in LocaleUtils. java to ensure correct parsing of language range from the wellformed string
updated Http2ServerResponseImpl and VertxHttp2Handler to execute the handler from an I / O operation to ensure proper handling of resource
added caching mechanism for XSSF tables in the SXSSFEvaluationWorkbook class to improve performance by reducing unnecessary table retrieval
updated conditions for schema text detail in BaseSchemaTextFormatter. java to ensure correct handling of schema text details
replaced Mongo with MongoClient in MongoNamespaceReplicaSetTests. java to ensure compatibility with the latest MongoDB features
replaced instances of HashSet with LinkedHashSet in SparkWork. java to ensure predictable iteration order
added a check for non - cloned TableScanOperator in SkewJoinOptimizer. java to ensure that the operator tree is properly cloned before proceed
added a null check for the client ID in the DynamicRegistrationClientConfigurationService and JsonFileRegisteredClientService classes to ensure the client ID is
fix a crash when clear the achievement list.
initialized ` userName `, ` productName `, ` driverName `, ` driverVersion `, and ` connectionUrl ` to an empty string
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissions
added functionality to read long longs from byte arrays in ByteBuffersDataInput. java to improve handling of long data in the input stream
replaced direct access to ` st _ atime ` and ` st _ mtime ` with ` st _ atime _ sec ` and ` st
don't execute full gc of humongous region
added logic to conditionally update the header scroll based on the search bar state to improve user experience by controlling the visibility of the search bar based on
use env. routes ( ) instead of env. router ( )
added a null check for the ` cur ` and ` next ` variables in ` LineChartRenderer. java ` to prevent potential null pointer exceptions
added a new action for reloading the current page in Eeze. java to enhance user experience by allowing users to reload the current page
changed log level from info to warn for entries in ` plot _ rating `, ` plot _ helpers `, and ` plot _ flags `
update minimum Spring version from 3.7. 7. RELEASE to 3.7. 8. RELEASE to ensure compatibility with the latest security features and improvements
added a null check for currentClusterConfigForService in UpgradeHelper. java to throw an exception if configuration type does not have a selected version
use serviceloader. load ( ) instead of serviceloader. lookup ( )
added a call to closeTable ( ) in HiveHBaseTableInputFormat. java to ensure proper resource management and prevent memory leaks
added ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and ` HiveViewImpl `, and enhanced logging in ` JdbcConnector
updated feature settings in DocumentFactory and modified hints initialization in XMLSAXHandler, ComplexElementHandler, ElementHandlerFactory, and DocumentFactoryTest to
refactor JdbStopThreadidTest to use OutputAnalyzer instead of JdbCommand to improve clarity and maintainability of the code
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure that the ` getType `
replaced occurrences of ` future ` with ` future ` in ` ExpressionThreadPoolManager. java ` to ensure proper handling of ` Future <? >
updated the default HTTP port from " 8080 " to " vertx. httpPort " in HttpTestBase. java to ensure compatibility with the
replaced ` addCaptureListener ( new ChangeListener ( ) ) ` with ` addListener ( new ChangeListener ( ) ) ` to streamline listener
increased the default batch size from 10 to 3 in NewSessionQueueOptions. java to optimize resource usage based on available processors
added error handling for establishing Resource Manager connection in TaskExecutor to improve robustness by logging errors when establishing Resource Manager connection fails
[ hotfix ] [ runtime ] fix checkstyle violation in lambdarewriter
updated error message to include min and max values in IllegalArgumentException to improve clarity of error messages for better debugging
updated method signatures to include the owner parameter for telegram messages to improve clarity and functionality of telegram message handling
added ` Cursor ` interface and ` Database ` class for managing database interactions to facilitate the management of database interactions within the application
refactor AbstractIterableAssert, AbstractPathAssert, AtomicReferenceArrayAssert, and InstanceOfAssertFactories classes to improve code organization and readability
# 166 - add setbeanid ( ) and setbeanid ( ) to beanserver
updated the xsl transformation method in RuleSetToDocs. java to use getAddToSiteDescriptorXsl ( ) instead of a hardcoded xsl
added a list of RequestMatcher instances and updated the requestMatcher initialization logic to enhance the flexibility of request matchers in the application
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing for ContactResource instances
move getrequest ( ) from ajp processor to ajp processor
updated logging statements in FileManager. java to improve clarity of logging for saved Persistable objects
added reset method to mockControl in TestJdbcDataSource and overridden tearDown method in TestIndexSearcher to ensure proper resource management during tests
added import for LambdasWithInterfaces and updated formatting in SyntaxTests. java to improve code readability and maintain consistency in formatting
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
tika - 3641 : remove parserdecorator that don't use temporary resource
make fmlsecuritymanager. getcallerclass ( ) return ` ` none'' instead of ` ` none''
removed unused variables from AccountUtils. java and adjusted variable declarations in IndexedForest. java and CustomPopup. java to streamline code and improve
updated parameter name from " swap " to " rename " in TestCoreAdminApis. java and CoreApiMapping. java to use a
added a new test method ` testJsxComment ` to ` JsLexerTest. java ` and modified lookahead logic in ` Parser. java
added ScreenRecordRule import and annotation in AddWidgetTest. java to enable screen recording for debugging purposes
added error handling for missing Buck configuration in ` BuildEndToEndTest ` and ` CxxEndToEndTest ` to improve test reli
added physical memory checks in TestStringBufferAndBuilderGrowth. java to ensure the test does not exceed a specified physical memory limit
added a deprecated conversionService to the MapToLocalDateConverter class and refactored date conversion to use it to improve code clarity and maintainability
added a success flag to the HiveMetaStoreClient class to indicate success status of the Hive metastore client
updated the condition for checking " * " in ResourceReferenceInfo. java and modified the bundle creation in Dstu2BundleFactoryTest.
added support for " amp. twimg. com / v / " video links in TweetActivity and TimeLineCursorAdapter to enhance user
added a @ Deprecated annotation to the AreaReference class to indicate that the class is outdated and should not be used
refactor ElementType and Target classes to improve code clarity and maintainability
updated reference kind handling in MemberName. java to improve clarity and correctness of reference kind checks
changed the default value of __ submitKeyUpdates from " false " to " true " and added synchronization for the ` runChange ` method to
modified event handling logic in EditNodeTextField. java to improve clarity and maintainability of event handling logic
camel - 16400 : allow to load dynamic bean with static method. thanks to ben for the patch.
[ hotfix ] [ test ] fix checkstyle violation
refactor exception handling in AgentRunnerTest. java to improve code readability and maintainability
added getDescription ( ) method implementations for multiple classes to provide clearer descriptions for Maven project properties and plugins
refactor face addition logic in ObjLoader. java to improve clarity and maintainability of the code
refactor ProcessEngine class structure to improve code maintainability and readability
rename ` reentrantLock ` to ` lock ` in multiple files to improve clarity and consistency in naming conventions
updated ` PrintMavenAsCycloneDxBom ` and ` PrintMavenAsCycloneDxBomTest ` classes to include
replaced the call to ` back ( ) ` with ` evt. getComponent ( ) ` to ensure the correct component is used for the back button
refactored certificate verification logic in SASLAuthentication. java to improve code readability and maintainability
updated parameter types from @ Nullable T @ Nullable [ ] to @ Nullable Object in ObjectArraySubject and StandardSubjectBuilder to improve type safety and
updated method calls to use ` getConf ( ) ` instead of ` NutchConf ` to ensure consistent retrieval of configuration values
remove boards pane in SheetAssembly and add a check for the selected sheet stub in StubsController to improve UI responsiveness and prevent
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the session ID for external use
added null checks before setting time interval in ImportContainerImpl. java and added assertions in ImporterGEXF2Test. java to ensure
removed logging level from the server command in MockServerContainer. java to streamline command execution by eliminating unnecessary logging
updated error logging to include exception message to improve clarity of error messages for better debugging
refactor DispositionProcessor to use CrawlMetadata instead of RobotsHonoringPolicy to improve clarity and maintainability of the code
added JUnit Ignore annotation to the ITSystemTest class to temporarily disable the test due to known issues
camel - 1860 : fix unit test on window
added an alternative method ` alternativePath ` to the ` ExpectNewDemo ` class that returns an ` ByteArrayInputStream ` to enhance functionality by allowing
replace input. init ( ) with input. getFirstFilter ( ). init ( ) in LogEntryParseTester. java to ensure that the input
added protection domain parameter to BufferAlignmentAgent constructor to enhance security by restricting access to the protection domain
added dispose method to WaterRipples class to ensure proper resource management and prevent memory leaks
added a new configuration option ` HIVE _ DISABLE _ UNSAFE _ EXTERNALTABLE _ OPERATIONS ` in ` HiveConf. java
updated the description of the Authorization header in TokenKeyEndpointDocs. java to clarify the purpose of the authorization header for public keys
adjusted wallpaper offset setting in Workspace. java to ensure proper wallpaper offset is applied to the scroll range
updated the return value in ` SybaseASADatabase ` and modified the SQL query in ` SequenceSnapshotGenerator ` and ` CreateSequenceGenerator
nifi - 7171 : fix npe in putsql when autocommit be set to false.
added logic to create the parent directory if it does not exist in SnapPuller. java and added tests in TestReplicationHandler. java
updated the AppTarget reference from " id : launcher " to " launcher : launcher " to ensure the correct app target is created for the launcher
fix framer. frame ( ) and framer. frame ( )
updated method signatures in OAuth2LoginConfigurer, OAuth2LoginAuthenticationFilter, OAuth2AuthorizationRequestRedirectFilter, and OAuth2LoginAuthenticationFilter
added support for splitting text into key - value pairs in GenericUDFStringToMap to enhance functionality for splitting text into key - value pairs
updated ` PlainFormatter ` to use ` ChronoUnit ` and ` TemporalUnit ` instead of a static ` INSTANT _ STAMPLE `
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS in AgentRunner. java and added a close method to improve timeout handling and
hhh - 147642 - fix classloadingstrategyhelper to not try to access private lookup.
updated Mockito library version to ensure compatibility with new features and bug fixes
updated log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the log message
added a JUnit Ignore annotation to the SamplingNamingTest class to mark the test as ignored due to timing issues
updated error message to clarify that rows and columns must be greater than zero to improve clarity of error message for better debugging
updated string concatenation and formatting in DecisionNode and WagonCART classes to improve readability and maintainability of the code
added sorting functionality for BoundSheetRecords in XLS2CSVmra. java and implemented sorting for BoundSheetRecords in BoundSheetRecord.
refactor ThrustCurveMotor calculations for start and end thrust to improve accuracy of thrust calculations
updated InputSystemJme instantiation to use the inputManager directly to ensure proper handling of the input manager in the code
refactor hash code calculation logic in UniverseBuilder. java to ensure correct handling of hash code fields
remove deprecated block. getmesh ( )
[ hotfix ] [ yarn ] rename keytab path to localkeytabpath in yarnapplicationmasterrunner
added a new option ` EMPTY _ WORD _ OPTIONS ` to ` Example. java ` and modified matchers logic in ` LineReaderImpl. java
don't push view replica update if writecommitlog be false
added default button ID handling for clipboard and web preferences in CaptureActivity and PreferencesActivity to improve user experience by ensuring the correct button is displayed
added a new test method ` testBatching ` in ` JoinedTableTest. java ` to validate the functionality of ` boards `
added handling for duplicate timestamp error in JpaPersistenceService to improve error logging for duplicate timestamps during item persistence
removed the deprecated ` @ Deprecated ` annotation from ` CucumberOptions ` and updated the plugin name in ` RuntimeOptions ` to streamline the
removed the save ( ) method from PMS. java to streamline the code by eliminating redundancy
removed redundant checks for the back key event in ExtendedEditText. java to streamline the code for better readability and maintainability
modified the calculation of ` newCapacity ` in ` AbstractStringBuilder. java ` and added a new test class ` Capacity. java ` to ensure
replaced the call to goHome ( ) with onNoteSaved ( noteTmp ) to handle note saving functionality
added support for handling endnote references in XWPFDocument and related classes to enhance functionality for handling endnote references in the document
added clientInfo parameter to the CasAuthenticationTransactionSuccessfulEvent to include the client information for better event tracking
added a new test method ` testVersion ` in ` BridjOGRDataStoreTest. java ` to verify the version of the GDAL
added a new file Lifecycle. java to handle network errors to improve error handling and logging for network errors
make deviantart ripper more robust
removed unnecessary imports from BodyTubeShapes, RocketFigure, and RocketFigure classes to streamline code and improve readability
added scaling behavior for the window and updated texture attachment buffer calculations to enhance visual quality and improve texture attachment handling
update the default value of the create params to match the new default value
refactor DiskDocValuesConsumer to use BlockPackedWriter instead of PackedInts for writing data to improve code efficiency and maintainability by eliminating unnecessary
camel - 16400 : camel - core - optimize rout engine to reduce object allocation.
removed unused imports and streamlined response handling in GoAwayTest. java to streamline code and improve readability
added property setting functionality for ` Map ` objects in ` ReflectionUtils ` and created a corresponding test in ` EasyRandomTest ` to enhance functionality
updated the ` post ` and ` send ` methods to return ` HttpResponse ` instead of a generic future type to provide a structured response that includes both the request content and the server ' s response
fix file sort by expression with file : / /
updated the variable name from ` lastAppearedTaskTarget ` to ` lastAppearedTaskTargetId ` to improve clarity of the
added properties and methods for handling image PDF and OpenOffice settings in RtfDocumentSettings. java to enhance functionality for handling PDF conformance and
added handling for AGGREGATION function in TSServiceImpl. java to ensure correct retrieval of the AGGREGATION function from the processor
sr sr sr sr sr sr sr sr sr sr sr sr
added functionality to display the xcap server URI if it is enabled to enhance user experience by allowing access to the xcap server URI
ww - 4496 add ww - 4496 to dispatcher to handle exception
added stopEditing method to CodenameOneImplementation, Display, TextArea, and AndroidImplementation classes to ensure proper handling of text input during editing
npe in controlrate when group attribute be null. patch by brandonwilliams ; review by jbellis for cassandra - 14
updated showDialog method to include a new parameter and modified its logic for selecting presets to enhance functionality by allowing users to choose presets based on
added error handling and logging for Chat errors in ChatAnnotation. java to improve stability and debugging when sending messages to the client
added a conditional check for the Windows OS type in HTMLDataFlavorTest. java to ensure the test is only run on Windows systems
added SQL _ SERVER _ SNAPSHOT ( 0x1000 ) to the SERIALIZABLE constructor in TransactionIsolationLevel. java to support snapshoting for
replaced the put operation with a while loop that waits for a new recid to complete before proceeding with further operations
use java. util. zip. zipfile instead of jrecompat
added a null check for the command class before creating a RegisteredService instance to avoid potential NullPointerExceptions when the command class is not available
change default disk failure policy from best _ effort to ignore. patch by jbellis
removed the public access modifier from several methods in RipperInterface. java and RipStatusHandler. java to allow access to these methods
updated filter logic in PeerDiscoveryAgent. java to check if the IP address is an instance of InetAddresses to ensure that only valid IP addresses
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to streamline the job identifier handling
updated import statements in PinotSegmentRebalancer. java and modified computePartitionAssignment method call to include ClusterDataCache to ensure proper handling of
simonstewart : remove the delete method from the container interface
simonstewart : make defaultselenesecommand accept pipe - separated command
added a MultipleAttemptsRule to the CreateGlossaryTests class to enable testing of multiple attempts in the application
updated schema references from ` allOfOfRef ` and ` anyOfRef ` to ` Components. COMPONENTS _ SCHEMAS _ REF
refactor EntityDeletedEvent to use JsonUtils for JSON serialization to improve readability and maintainability of the code
added support for the " gop " format in multiple files to ensure compatibility with different media formats
; add test for return type
replaced direct calls to ` remoteItems ` with ` configLock ` for thread safety to ensure thread safety during configuration updates
replaced direct calls to ` nextBlock ( ) ` with ` acquire ( ) ` for ` AcquireReleaseColumnsSegmentOperator ` to ensure proper
danielwagnerhall : remove @ ignore from firefox profile test
added @ return statements to retrieve display density, visibility, and bounds information in HasAndroidDeviceDetails. java to enhance code clarity and functionality by
remove redundant call to ` addbug ( bug ) `
added disabled text styling for disabled components in ImportPanel. java to enhance user interface by providing visual feedback for disabled components
removed multiple redundant @ Override annotations in CacheControlImpl. java to improve code clarity and maintainability
added a check for empty mRecurrence and implemented a test for weekly actions without a week day set to ensure that weekly actions do not return
refactor upload button handling to use a menu item for single upload functionality to improve user experience by providing a single upload option
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading of metadata from an
added a custom JsonSerializer for writing Writable objects in CrawlDbReader to enhance JSON serialization capabilities for better data handling
[ ci ] remove unused class
added a service configurationPid parameter to the MDNSDiscoveryService annotation to enhance the component's lifecycle for better configuration management
added a null check before calling scrollToPositionWithOffset on the message item to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in BPIndexReorderer and TestBPIndexReorderer to use a separate ForkJoinWorkerThread for thread
removed assertions checking for DATANODE and NAMENODE in RoleCommandOrderTest. java to streamline test cases by eliminating unnecessary assertions
added a new method ` restoreLocalInfoFromTableInfo ( ) ` and renamed ` writeObject ` to ` dedupWithTableInfo ( )
[ hotfix ] fix checkstyle violation in ` jvmutils `
added transformation for the logo sprite in BitmapFontTest. java to ensure proper rendering of the logo sprite during rendering
added a condition to check if the python aggregate is not built - in to ensure that only non - built - in aggregate functions are considered in
remove pending echo check from endpoint state. patch by jbellis
patch by jbellis ; review by jbellis for cassandra - 1701
fix for integral ( f ( x ^ 2 ), f ( x ^ 2 ), f ( x ^ 3 ) )
added content type handling in FormAuthenticator and SavedRequest classes to ensure correct content type is set based on the request's content type
removed unused variable ` _ display ` and added a null check for ` localEnv ` to improve code clarity and prevent potential null pointer exceptions
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
fix for http : / / issues. apache. org / activemq / browse / amq - 48
added a test for reading identity providers in the other zone to ensure correct handling of identity providers in different zones
updated JobHandle schedule method to use ExpireJob and added null check for timestamp in PointInTimeTrigger to improve job scheduling efficiency and prevent
removed unused import of Service in SendTicketGrantingTicketActionTests. java to streamline test code by eliminating unnecessary dependencies
( chore ) camel - rocketmq : send heartbeat to all broker with lock
added support for detached Mkdir mode in PropServerConfiguration, CairoConfiguration, CairoConfigurationWrapper, and TableWriter to
[ java ] fix race condition in cluster test when there be a slow follower.
fix # 1365 : default label pattern back to ` ` [ auth ] [ year ] ' '
replaced references to ` getCxxPlatform ( ). getLd ( ) ` with ` getCxxPlatform ( ) ` in ` DBinaryDescription
refactor GoogleCloudAPI to streamline the creation and disposal of the OAuth client service to improve code clarity and ensure proper resource management during the
camel - 15836 : fixed file consume done file issue
added a new boolean parameter ` reopenReaders ` in ` SolrConfig ` and updated the conditional check in ` SolrCore ` to allow for
add dialect attribute to map writer ( freeplane _ version )
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` Attr. java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor ` Condition ` class to implement the ` Condition ` interface instead of extending ` Condition ` to improve clarity and maintainability of the code
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector. java to improve query accuracy and performance
removed multiple unused import statements from ConcurrentClassLoadingTest. java to streamline the code and improve readability
rename ` default _ preferences ` to ` direct _ nearby _ upload _ prefs ` in ` CommonsApplicationModule. java ` to improve clarity
added support for " SYSIBM " and " SYSDUMMY1 " database modes to enhance compatibility checks for different database modes
refactor log initialization and improve logging formatting in TraceGatewayEnvironmentPostProcessor. java ; add conditional properties in SamplerAutoConfiguration. java ; add default
added logic to retrieve the last process ID in POIXMLProperties and introduced a test for adding properties in TestPOIXMLProperties to enhance functionality
tiff : check for infinity instead of nan to avoid npe
refactor CliDriver to improve error handling and resource management to enhance reliability and maintainability of the code
replaced ` Executor ` with ` Scheduler ` for ` httpExecutor ` and ` httpScheduler ` in ` MockRestAdapter. java ` to improve
refactor selectByRuleIdSet method to return a list of filtered rule IDs to improve code organization and enhance readability of the selectByRuleId
refactor ` addExitDescription ` method to accept ` Throwable ` as a parameter and streamline exception handling in ` AbstractJob ` and ` Abstract
fix multiblock not render correctly when the player ben't the player.
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand ` to improve clarity by using a more descriptive column name
updated the calculation of the range length in PlotConfiguration. java to ensure the correct range length is used for calculations
refactor DefaultIOSInput to use UIAlertController instead of UIAlertViewDelegate to improve clarity and maintainability of the code
updated the method call from ` params. getBuildTarget ( ) ` to ` nativeLinkable. getBuildTarget ( ) ` to ensure the correct
rename parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in naming conventions
added an assertion to verify that the service's message is not null to ensure that the service's message is not null before proceeding
replaced ` potentiallyEscapeMapKey ` with ` potentiallyEscapeMapKey ` in ` MappingMongoConverter. java ` to simplify key handling and improve
updated Timber message formatting in NearbyMapFragment. java to improve readability of log messages
camel - 1860 : camel - core - optimize to reduce stack frame in use during camel - main
added null check for terms in FuzzyLikeThisQuery and introduced a test for non - existing fields in FuzzyLikeThisQueryTest to
refactor ` writeApplicationsLinks ` method to accept a boolean parameter for ` tabularList ` to enhance flexibility in rendering applications based on whether the
[ ds - 3441 ] remove dspace dependency from createnissingidentifiers
updated the method call from ` bytes. length ` to ` bw. getLength ( ) ` in ` VectorColumnAssignFactory. java ` to
modified the ` getDisplayScript ` method to return ` null ` instead of ` abstract ` to provide a default implementation for the ` getDisplayScript `
danielwagnerhall : fix ` ` key to release'' issue in remote webdriver
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
added synchronization for empty active interfaces in NetworkConfigurationWatcher. java and added null check for dbusConn in NetworkManagerListenerImpl. java to ensure
refactor ` getAllEmbeddedObjects ` method to accept ` HSSFShapeContainer ` as a parameter and add tests for nested objects in ` TestEmbedded
removed import statement for Shdr in ShaderNodeLoaderDelegate. java to streamline code by eliminating unnecessary dependencies
replaced ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl. java ` to standardize the handling of role parameters
added handling for font type " Symbol " in PDSimpleFont. java to ensure proper handling of font types in the application
replaced GlStateManager. popAttrib ( ) with GL11. glPopAttrib ( ) in ModelHourglass. java to ensure proper rendering
updated date handling in LiveTvGuideActivity and added a method to retrieve the current start date to ensure accurate date representation and improve code clarity
replaced ` getDeclaredMethod ` with ` Whitebox. getMethod ` in ` MockGateway ` and added new classes ` CommonParentTest ` and `
added dlopen calls for " libfreetype. so " and " libfontmanager. so " to ensure proper loading of specific library files
refactor function parsing logic to improve readability and maintainability to enhance code clarity and facilitate future modifications
loop safepoint elimination : allow float guards
don't check if a dataflow be a constant class object.
added ` LocalizedString ` class and refactored ` Attr ` and ` Resolve ` classes to utilize it for method argument handling to improve code
added a ` disableClasspathSearch ` property and its getter / setter in ` ServerConfig `, and modified the condition in ` DefaultContainer `
replaced direct array copying with ` Arrays. copyOf ` for ` formats ` and ` maxBufferSize ` to enhance immutability and performance of audio
updated default retries value from 0 to 2 in Reference and AnnotationPropertyValuesAdapterTest to increase retry attempts for better resource management
updated TexturePacker to use a Settings object and modified process method to accept a settings file to enhance flexibility in handling settings during packing
replaced ` imagesUploadedProgressbar. setProgressTextFormatPattern ` with ` uploadedImagesTextview. setText ` and added ` imagesUsedBy
added unit tests for annotation processing and processing in TranslatingJavacPhaseTracerTest. java to improve test reliability by ensuring
added ` @ SuppressWarnings ( " unused, NullableProblems " ) ` and ` @ SuppressWarnings ( " unused, NullableProblems " ) `
updated assertions in AuthzAuthenticationRequest to check for empty username and password to ensure that the username and password fields are validated correctly
added accessibility support in TaskbarStashController to manage taskbar auto - hiding behavior to enhance user experience by allowing customization of taskbar
added handling for the'^'character in the GenericSignatureParser to ensure that it does not throw an NoSuchElementException when attempting to retrieve a
updated access flags handling in ClassVisitorDriverFromElement. java and added multiple test cases in StubJarTest. java to ensure correct handling of
replaced direct assignment of'in'with a null check in IntervalFilter. java and added a null check in LowpassIntervalsSource.
added two test methods ` testEntrySetIteratorLastHashNext ` and ` testEntrySetIteratorLastNext ` to validate the behavior of the ` entrySetIteratorLast
added a serialVersionUID to the TreeMap class to ensure proper serialization and deserialization of TreeMap instances
updated the createdAt timestamp from milliseconds to seconds in ImageData. java to ensure the correct timestamp is returned for the image
[ f2m ] use locus2d instead of locus2d.
added encryption key deletion for an account in AccountRemovalJob. java to ensure proper handling of private and public keys during account removal
refactor keep - alive header handling into a separate method in AsyncHttpProviderUtils to improve code readability and maintainability by centralizing keep - alive
added a check to return early if interceptorList is empty in PostJoinMapOperation. java and created a corresponding test in PostJoinMapOperation
danielwagnerhall : remove unnecessary processor from standarddialect. java
removed the ` spillEnabled ` parameter from the ` BaseHybridHashTable ` and ` LongHybridHashTable ` constructors to simplify
refactor EnvironmentVariableHelper to utilize Optional for process environment variables to improve code clarity and maintainability by encapsulating environment variable retrieval logic
ww - 4672 - fix typo in defaultactionmapper. java
added SerializableMode import in Mockito. java and updated PluginSwitch. java file to enhance serialization support in the Mockito framework
added handling for nullable field injection in AbstractBeanDefinition to improve error reporting for non - nullable fields
added isolation level support for select statements in the database schema to enhance compatibility with different database modes
refactor HiveConnection to use constants for transport mode, HTTP path, transport mode, and HTTP path to improve code readability and maintainability by using
added an override method ` isCacheable ` to the ` GlobalOrdinalsWithScoreQuery ` class to ensure that the ` GlobalOrdinalsWithScore
; ; ; ; ;
updated file names from ". json " to ". jsfile " and ". jslib " in JsFile and JsLibrary classes to
added methods to set and get selection start and end parameters in ShadowEditText to enhance functionality for setting and retrieving selection positions
refactor server initialization to use try - with - resources and improve resource management to ensure proper resource management and prevent potential memory leaks
added a new method ` use ( String path, Class <? > routeClass ) ` to ` Jooby ` and updated the corresponding
added a null check for the fst variable in FreeTextSuggester. java to prevent potential null pointer exceptions during lookup
replaced newline character with a system - dependent newline character in T4975569. java and added error handling for MalformedURLException in T6729
added abi writer class loading functionality in JavacInMemoryStep. java to enhance functionality for loading ABI files from different classloaders
added a suppression for BooleanMethodIsAlwaysInverted in PubRoot. java to suppress warnings for BooleanMethodIsAlwaysInverted
added a check for ` isStopped ( ) ` before scheduling tasks in ` PullMessageService ` to avoid potential ` NullPointerException ` when the
refactor EnergyEndpointer class to improve code readability and maintainability
refactor ComponentPresetChooserDialog to use a list of displayed columns instead of an array to improve code readability and maintainability by reducing repetitive
removed unnecessary import statements from BazaarRepository, CVSRepository, and IndexDatabase to streamline code and improve readability
camel - google - sheets : fix switch / cases indentation see camel - 14540
added a default method to retrieve the exported header style in CxxLibraryDescription. java and updated CxxLibraryMetadataFactory. java to use this method
; ; ; ; ; ; ;
refactor RandomPartitioner to extract the first and second parts from the key string to improve clarity and maintainability of the code
fix native - image generation for fallback class.
added a test for creating an inline role binding in RoleBindingTest. java and removed the create method from RoleBindingOperationsImpl. java to
added logging statements for session cookie configuration in UaaSessionCookieConfig. java to improve traceability and debugging of session cookie configuration
updated the calculation of FILE _ NAME in HotseatFileLog. java to use Calendar. DAY _ OF _ YEAR to ensure accurate filename
[ hotfix ] fix typo in observableblockingsubscribe
added error handling for invalid use of an option in JavapTask. java and created a new class T8033711. java to
replaced usage of ` collect ( toList ( ) ) ` with ` toList ( ) ` in multiple Java files to streamline code by eliminating
[ hotfix ] [ runtime ] change log level from error to warn in taskdriver
[ hotfix ] [ network ] enable tiered storage for hybrid partition
replaced the ` SUCCESS _ CODE ` constant with a new method ` isNotSuccessStatus ` across multiple services to improve code clarity and maintainability by
added useGL20 configuration to CubocDesktop. java to enable GL20 rendering for the Cubocy application
remove unnecessary check for void type in jimplebody
replaced DefaultSourcePathResolver with SourcePathResolver in OutputMacroExpander. java and added a new appendToCommandLine method in OutputMacroExpander
rename ` assertNoJobsLeftEventually ` to ` assertNoLightJobsLeftEventually ` in ` LogExceptionSqlTest ` and ` SimpleTest
updated condition in MergeWordsListTask. java to include a check for the presence of backslashes in file paths to ensure that duplicate words are not
[ # 3496 ] instructorfeedbackfeedbackfeedbackfeedbackfeedbackresponsecomment : replace getquestionresponsemap ( ) with getresponsecomment ( )
removed unnecessary whitespace in the isMixingNeeded check to streamline code for better readability and maintainability
added a new file ` TestEscapeThroughInvoke. java ` containing a class ` A ` with multiple methods to test the behavior of ` A
replaced ` stream. skip ( start ) ` with ` IOUtils. skip ( stream, start ) ` in ` FilePreviewService. java `
added error handling and logging for connection pooling in the ConnectionPool and DataSourceProxy classes to improve robustness of the connection pool and enhance debugging
changed catch block from catching Exception to catching Throwable in CoreContainer. java to improve error handling by catching a broader range of exceptions
added checks for eviction and overhead in LruBlockCache and implemented a corresponding test in TestLruBlockCache to ensure that eviction
removed unnecessary check for zero taskCount in RecentsView. java to streamline code by eliminating unnecessary checks
added instance configuration change listener to HelixBrokerStarter and increased the sleep duration in HelixServerStarter to ensure proper handling of routing table updates
added methods to retrieve and retrieve Coinmate metadata from the CoinmateExchange class to enhance functionality for retrieving metadata from the Coinmate
improve error message when syspath do not contain $ { basedir }
pdfbox - 4892 : don't create a new cosobjectkey when write a cosobject
add a method to set display data in the ptransform to allow modification of display data.
replaced instances of ` Truth. THROW _ ASSERTION _ ERROR ` with ` assertThat ( ( Object ) null ). that ( "
added a security property to disable certain algorithms in the ClientJSSEServerJSSE class to enhance security by restricting the use of
added a check for subcommands and subcommands in OptionData. java to improve error messaging for subcommands and options
updated module - info. java files for mmm and ppp modules to improve clarity and organization of module documentation
added error handling in IOSImplementation. java and modified ensureConnection method to throw IOException to improve error management and prevent potential null pointer exceptions
removed redundant assignment of sCheckingEvents in LauncherInstrumentation. java and added exception handling in LogEventChecker. java to improve code clarity and ensure
refactor exception handling and improve resource management in FileSinkOperator. java to enhance error handling and resource management during write operations
added diagnostic logging for task execution in SchemaGenerator. java to enhance debugging capabilities by providing detailed diagnostic information
replaced RuntimeException with OptiqSemanticException in SemanticAnalyzer. java to improve error handling by using a more appropriate exception type
updated test cases in DataSourceMonitorTests. java to improve test coverage for datasource monitoring functionality
added a HashSet to track loaded resource paths before scanning to improve efficiency by avoiding unnecessary scanning when no resource paths are available
refactor test instance initialization logic to handle null values gracefully to improve error logging for null values and avoid potential null pointer exceptions
refactor response handling in RoutingInBoundHandler to handle null cases for better error handling to improve robustness of the code and ensure proper handling of
added a nullable natIp field to EkeyConfiguration and updated the warning log message to include the IP address of the Ekey UDP packet
updated import statements and class references for ArrowBuf in multiple Java files to ensure compatibility with the latest ArrowBuf and improve code clarity
[ hotfix ] fix checkstyle violation in commitlogarchiver and commitlogreplayer
modified the parsing logic in HttpConnection. java and added a test for unexpects with body in RFC2616BaseTest. java to
replaced the ` Flow. Subscription ` with an ` AtomicReference ` for ` upstream ` and ` requestedInitial ` in ` MultiTimeout. java `
patch by brandonwilliams, review by brandonwilliams for cassandra - 1474
added a test annotation to the TestOrcTimezone1 class to facilitate testing of time zone functionality in the application
refactor regex matching logic in Debug. java to improve readability and maintainability of the code
refactor JSON handling in PinotSegmentRestletResource and TraceContext classes to improve error handling and streamline JSON processing
modified the default renderer logic in JTable to handle cases where the column class is not Object and added a new test class Test6888156
added conditional logic to check if the environment shell exists before adding it to the argument list to ensure the argument is only added when the environment is
updated the method call from ` deleteWithoutSubscriptions ( 10 ) ` to ` deleteWithoutSubscriptions ( 1 ) ` to ensure that the deletion process
replaced List with Set for test instances in MockitoExtension. java and added a test for dependency injection in JunitJupiterTest. java to
refactor FieldMonitor class for improved readability to enhance maintainability and facilitate future modifications
replaced deleteFilesAfterClose ( ) with transactionDisable ( ) and fileMmapEnableIfSupported ( ) in BTreeMapTest. java to
modified iterator handling in SortedIntList. java and added a new test class SortedIntListTest. java to improve iterator management and ensure proper
added registration of the object name in DefaultRemoteProxy and modified exception handling in JMXHelper to ensure proper cleanup of object names and improve error handling
[ hotfix ] [ rocksdb ] set rocksdb default writebuffer size to 64mb
removed the boolean parameter from the constructor call in the Style class to simplify code by eliminating unnecessary parameters
replaced ` addArgument ( " message " ) ` with ` addArgumentNoEncoding ( " message " ) ` in ` FacebookShare. java
added JSON graph configuration to the SamzaRunner class to enable dynamic loading of JSON data for pipeline execution
use mouseinput instead of vector3f in helloaudio
updated LoopRotateBadNodeBudget. java file to improve performance and maintainability of the code
added ` convertToMongoType ` method to ` AbstractMongoConverter `, ` MappingMongoConverter `, ` MongoWriter `, and ` Converting
make sure imaginary unit be display correctly
simonstewart : fix sendkeys to active element
added a method ` getScaledInstance ` to compute scaled images based on target dimensions to enhance image scaling functionality for better visual representation
removed the extendArgumentCheck and extendWrapStore methods from DBMaker to streamline code by eliminating unnecessary argument checks
added updateShiftStateNow ( ) method to AnySoftKeyboard. java to ensure the keyboard reflects the current shift state
removed ` DETECTED _ ACTIVITY ` from ` SerializableLocation ` and updated URL handling in ` CSVFileLogger ` and ` CustomUrl
updated import statements for ExtensionConfig from ` org. eclipse. jetty. websocket. extensions ` to ` org. eclipse. jetty. websocket.
removed import of Buildable from AaptPackageResources. java to streamline code by eliminating unused import
added comments to indicate unused start _ pc, end _ pc, catch _ type, bootstrap _ method _ attr _ index, and other
updated exception message in WebSocketUpgradeHandler to specify the status of the upgrade protocol to provide clearer context about the response status
refactor assignment for blockMode assignment in P11Cipher. java to improve code readability and maintainability
updated Mockito classes for consistency and clarity to improve maintainability and readability of the test code
removed duplicate permission check for plot ownership to streamline permission handling for plots
removed deprecated getConversationID ( ) methods from HttpContentResponse, HttpResponse, Request, and Response classes to streamline code by eliminating outdated
updated imports in DummyFreeTTSVoice. java to use de. dfki. lt. mary. featureprocessors. PhoneSetImpl
refactor stripQuotes method to use PlanUtils in multiple classes to improve code readability and maintainability by centralizing stripQuotes logic
refactor rendering handling in DLNAResource and Request classes to improve clarity and maintainability of rendering logic
add remote artifact repository to the resolution group's default plugins
camel - 16400 : camel - cxf - cxfrs - cxfrs producer should close the application context
refactor PhysicsClient class structure to improve code readability and maintainability
added JUnit Ignore annotation to the SessionTest class to temporarily disable the test due to frequent failures
added functionality to create a new File instance from a file name to enhance file handling functionality
added a deprecated method ` handleAll ` to the ` TryType ` class to indicate that the method is outdated and should not be used in
[ smarthome ] make channel uid non - final with default constructor
added logging functionality for call stack traces in GenericDAOImpl and created a new StackTraceUtils class in ForumServiceImpl and ForumServiceImpl to improve
removed the @ Test annotation from FormLoginIntegrationTests. java to streamline test execution by eliminating unnecessary test annotations
mondrian : fix for mondrian - 1113
updated SQL query and error messages in CheckDatabaseHelper. java to improve clarity and correctness of configuration selection logic
rename sun. security. provider. supresswarnings to suppresswarnings for jdk 11 +
added checks for ` peek ( ) ` and ` peek ( ) ` in ` JsonTreeReader ` and implemented tests for ` nextJsonElement
added functionality to handle unexpected arguments after the " -- " option in TestCommand. java and ExternalTestRunnerIntegrationTest. java to improve error handling
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enhance functionality by allowing deduplication of documents based on specified
[ flink - 2131 ] [ table - planner ] use flink planner in streaming mode
added a call to clear the database in MssqlIntegrationTest. java to ensure proper cleanup of the database data
updated the ` dispose ( ) ` method to include ` showPercentage ` and modified the ` showModeless ( ) ` call to ensure proper
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added methods to write and close documents in IOUtils. java to improve resource management and prevent potential memory leaks
replaced print statements with print statements for runOptions and exportClassPath to streamline output for better readability and performance
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for its properties to enhance
added handling for custom user search queries in CustomQueryFilterFactory. java and updated test cases in TestLdapAtnProviderWithMiniDS. java
camel - 16400 : camel - netty - allow to configure port for camel route.
added functionality to update and verify the status of ThingStatus in multiple test classes to ensure proper handling of ThingStatus and improve test reliability
added instructor permission check to instructorfeedbackeditpageaction
added @ Incubating annotation to AvailableSettings. java to indicate that the method is outdated and should not be used
refactor path extraction logic in FileResolverImpl. java and add unit tests in WarFileResolverTest. java to improve robustness of file
updated log message for newFlushedSize in DocumentsWriterPerThread. java to clarify that newSegmentSize includes docstores
fix block name for dirt.
rename stripWhitespaceX to stripWhitespaceY in ImageProcessor. java to improve clarity and consistency in whitespace handling
updated the lock calculation in FeedRefreshUpdater. java to accommodate a larger number of threads
updated the ` deserializeFrom ` method in ` TsFileSequenceReader ` to include ` exactSearch ` and added a test for measurement metadata
removed the ` dateFormat ` parameter from the ` makeResultFromDelimitedString ` method in ` CSVSaveService. java ` to simplify the method
added preferred size adjustment for the pane in NavigationShareTab. java to ensure proper layout of the pane based on its preferred size
replaced ` startOffset ` and ` endOffset ` attributes with ` state ` and updated state handling in ` BeiderMorseFilter ` to improve state
updated multiple Upnp - related classes to improve code organization and maintainability
fix burst not beCollided at the correct position. close # 349
added dynamic test methods for JSON serialization and deserialization in JsonTest. java to enhance test coverage and ensure proper handling of JSON data
updated documentation for MutableContextDataSupplier to enhance clarity and maintainability of the code
changed exception handling from ` SolrException ` to ` Throwable ` and added a warning log for ` LogWatcher ` to improve error handling and provide
updated KubernetesMockServer to use ` https ` instead of ` true ` to enhance security by using a secure connection
use stamp of unarymathintrinsics instead of create a new one
replaced ` HttpServletResponse. SC _ METHOD _ NOT _ ALLOWED ` with ` doGet ( request, response ) ` in ` DefaultServlet. java
tika - 2907 -- fix tika - 2905 -- allow number format to be specify in the tika parser
replaced instances of ` BAD _ REQUEST ` with ` NOT _ FOUND ` in ` ShowFileRequestHandler. java ` and added a new test for
added support for handling InvocationTargetException in ReflectorClassWriter to improve exception handling and provide better error reporting
added clamp method to Vector and Vector2 classes to enhance vector calculations for better performance
added imports for ClientDetailsEntity, OAuth2Utils, and OAuth2Authentication in ChainedTokenGranter. java to enhance token handling
updated the instanceof method in BC _ instanceof. java to improve type safety and maintainability
replaced setSaveFlags ( SAVE _ ALL ) with a private static final Logger instance to improve logging consistency and reduce redundancy
updated test class imports and annotations in UaaUrlUtilsTest. java to use JUnit Jupiter API and improve test reliability
hhh - 147643 - fix npe in native query
added synchronized access to the ` aatInfo ` variable in ` SunLayoutEngine. java ` to ensure thread safety when accessing font properties
use intarraylist instead of intbigarray to improve performance
danielwagnerhall for the ie driver, and fix a couple of test failure
refactor BrokerRequestUtils class to improve code readability and maintainability
refactor instance handling in InjectorBuilderImpl to use a unified instance map to improve clarity and maintainability of the code
refactor RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use getBasePath ( ) instead of getAbsolutePathToBuildFile ( ) to stream
added a null check for the input string in EchoMessage. java to prevent potential NullPointerException when parsing a null value
fix a problem with keepaliveservice. getconnection ( ) return null.
updated DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 to ensure the default load factor is used for better performance
added ` getAllDataTypePhysicalVariations ` method to ` VectorizationContext ` and updated ` Vectorizer ` and ` Vectorizer ` to utilize
updated package structure for HtmlAssetTranslator, StringsResourceTranslator, and HtmlAssetTranslator to ensure compatibility with the new package structure
modify the logic for determining the visibility of the hotseat button based on the device profile to improve the responsiveness of the hotseat
added @ Entity annotation to BaseActivityEventEntity. java to facilitate entity - related data handling in the application
added ` TraceHelper. partitionSection ( " Launcher On resume ", " Launcher drawn ", " Launcher on new intent " ) ` to
added a new file InvalidOptions. java to handle invalid options to improve error handling and provide clearer usage instructions
added a check to ensure the number of supported displays matches the expected number of supported bounds to improve error handling for inconsistent display states
refactor ` getClientIdAndClientSecret ` method to ` getClientIdAndClientSecret ` in ` OAuth20Utils ` to improve code organization and
changed the default value of _ unwrapServletException from false to true in ErrorPageErrorHandler and AsyncContextTest to enable unwrapping of servlet
added logic to set the status of the shortcut info to default to ensure proper handling of shortcuts in the package update process
camel - 16400 : camel - seda - allow to configure the size of a seda exchange. thanks to daniel for the patch
add batchupdatestart ( ) and batchupdateend ( ) to web
added httpClient configuration to ThirdEyeApplication. java to enable configuration for HTTP client in the application
added a new ` getSort ( ) ` method to ` JobInstanceFetchRequest ` and implemented sorting functionality in ` JpaJobPersistenceImpl ` to
added currency pair handling in CryptoFacilitiesTradeService to ensure proper cancellation of cryptocurrency facilities orders
fix for cancel keyboard hide when click on algebra view
make memcpy a native function so that it can be use by llvm.
modified the formatting of the ` authenticateUsernamePasswordInternal ` method in ` BindLdapAuthenticationHandler. java ` to enhance code readability and maintain consistency
bug fix : tooltip will be show only when the tooltip be block.
refactor DefaultDateTypeAdapter to accept a DateFormat instance and add support for customizable time styles to improve flexibility in handling date formatting based on specified
updated the format of the playerSet string in ListCommand. java to improve readability and maintainability of the code
added a check to return the current instance if it is empty to ensure that the method handles empty lists gracefully
added handling for InvocationTargetException in ParametricCallable. java to improve error handling for CommandException
modified getLikeExpression method to include a boolean parameter for handling LIKE expressions to improve flexibility in handling LIKE expressions based on user input
added start and stop methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to enhance functionality for managing stream suppliers
added locale handling in the runChild method of LuceneTestCase to ensure consistent locale behavior during child execution
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
refactor context handler initialization into a separate method to improve code readability and maintainability
camel - 9641 : camel - core - add test case for camel - test - blueprint
remove ` ` fffffffffffffffffffffffffffffff'' from unit test
refactored the ` returnTypeSubstitutable ` method to remove the ` Warner. noWarnings ` parameter and streamlined the return logic
added a new ThrottleType enum and modified throttling logic to handle CHARS and BYTES to improve flexibility in processing throttled templates based
simplified variable assignment in ColorBleedEffect. java and added a conditional check in SpriteBatch. java to improve code readability and ensure correct
updated annotations in Annotation. java and AnnotatedElement. java to improve clarity and maintainability of the code
added a new interface ` Model ` in the ` org. apache. poi. hssf. model ` package and modified ` Sheet `
camel - 16400 : camel - core - optimize filter pattern for camel - cxf and camel - cxf2
added functionality to clear the entity manager in the JpaItemWriter and JpaItemWriterBuilder classes to ensure proper management of entity manager during item writing
added null checks for shortcut info and intent in multiple classes to improve robustness by preventing null pointer exceptions
fix bug in coremapnodepatterntrigger
corrected the spelling of " BTC - e " to " Wex " in WexExchange. java to ensure accurate representation of the exchange
added null checks for columnReaders and reader in OrcEncodedDataConsumer. java and modified buffer setting in EncodedTreeReaderFactory. java
added null check for files in the directory and implemented a test for it in TestIndexReader to ensure robust handling of null segments in the directory
updated date format in HSearchSortHelperImpl. java and refactored FhirResourceDaoR4SearchWithElasticSearchIT
refactor BigDecimal calculation to use an intermediate variable for clarity to improve readability and maintainability of the code
fix rangeinputstream. read ( byte [ ], int ) to return - 1
camel - 16400 : camel - core - optimize routecollector. collectRoutesfromregistry and. collectRoutesfromdirectory.
fix incorrect calculation of segment start time in hl chunk source.
xml unit test for new xml parser
added a new StatefulMapper2 class and updated the streaming context in StatefulOperatorTest. java to improve state management and ensure correct behavior of stateful
removed null check for fill in Area. java and set bitmap shader shift in Line. java to streamline code by eliminating unnecessary null check
removed dbExists ( ) method from Blockchain class and added dbExists ( ) method in BlockchainTest to streamline database handling and improve
trim whitespace from the group value in SQLPlusSupport. java to ensure consistent formatting of the group value
added asynchronous setting for the socket in Http11AprProtocol. java to ensure proper handling of asynchronous connections
ggb - 1958 fix for splitpane's divider location
added HEALTHCHECK _ OK _ CALLS and HEALTHCHECK _ BAD _ CALLS metrics and modified the checkHealth method to
set the visibility of sharedAvatars view to GONE to improve user interface by hiding the shared avatars
mebis : move mebis - toolbar. scss to mebis - toolbar. scss
[ java ] : use'< ='instead of'> ='in udp ping.
added logging level check in LogInterceptor. java to ensure proper execution of the next command when log level is FINE
replaced CountDownLatch with assertWaitUntil in EventBusTracingTestBase. java to improve test reliability by ensuring spans are finished before proceeding
replaced the static parse method with a setter method for locale in QueryParser. java to streamline locale handling and improve code clarity
remove unused button, use list. singletonlist instead
[ jbrules - 4071 ] make rulebaseimpl public for beta node constraint.
added a new class ` OcspUnauthorized ` and modified ` PKIXRevocationChecker ` and ` OCSPResponse ` to include
added a volatile variable ` serverState ` and modified the sleep logic in ` SSL. java ` to improve thread safety and prevent server failures
added functionality to track open connection counts in SourceCounter and integrated it into SourceCounterMBean and AvroSource to enhance connection management and improve resource management
change method visibility of executionstrategy. execute ( ) to public
added a method ` getSrcRoots ( ) ` to the ` BuckConfig ` class and refactored the ` createDefaultJavaPackageFinder
replaced the instantiation of ` Writer ` from ` OutputWriter ` to ` PrintWriter ` to improve compatibility with Java's ` PrintWriter `
[ hotfix ] fix test failure on window
added handling for DataTable in JRubyStepDefinition to ensure compatibility with Cucumber's table functionalities
updated visibility settings and refactored image node retrieval in the SearchImagesRenderer and ApacheHttpClientMediaWikiApi classes to improve user interface clarity and
refactor ReadSentimentDataset class for improved readability to enhance code maintainability and readability
updated error handling in FormulaParser to include a more informative error message to improve clarity of error messages for better debugging
added getter and setter methods for the bind address in WebSocketClient to enhance functionality by allowing access to the bind address for WebSocket connections
[ java ] don't delete archive directory when delete medium driver.
refactor WidgetGroup to use a consistent method for setting dimensions to improve code readability and maintainability by reducing redundancy
updated sessionFixationAttribute comparison to use Boolean. valueOf to ensure proper handling of sessionFixation attributes
[ fix ] bug in lalogiclinefragment. java
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 558
added HttpMethod and httpRoute handling in TraceExchangeFilterFunction to enhance functionality for handling HTTP requests in the filter
patch by brandonwilliams ; review by jbellis for cassandra - 1315
modify renderingIntent handling and add a new test class for rendering intent to improve rendering intent processing and ensure proper functionality through testing
add feedback question form for contribution question
added multiple calls to ` PublicMethed. waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003.
remove unused field from kafkaprocord
added PGConnection import and modified connection handling in PooledConnectionImpl. java ; added a test for PGConnection in BaseDataSourceTest. java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code clarity and maintainability
updated logging level from warn to info for JWT authentication and changed log level from warn to trace for better traceability
removed the @ Deprecated annotation from Hazelcast. java to indicate that Hazelcast is outdated and should not be used
added functionality to send topology update events in multiple action classes to enhance functionality for managing topology updates and improve error handling
replaced ` writeStr ( name ) ` with ` writeExternString ( name ) ` and refactored iterator handling in ` NamedList
don't assign lost partition owner if partition state be null
added schema inclusion rule to ApiExample. java to enhance schema management by allowing public access to the API
updated the expected value from 3. 0 to 7. 0 in StreamExpressionTest. java to ensure the test accurately verifies the expected
fix for geometry with unclosed ring
added methods to retrieve base name and dimension count from ConstantPool to enhance functionality for retrieving base name and dimension count
add a debug evaluation output for xssf and xssf formula evaluation
test : disable refactoring test for java 8
updated ExoPlayerProfile instantiation and modified live TV check condition in PlaybackController to ensure compatibility with live TV and prevent premature live TV
added a return statement to the DynamicStyleBar class to ensure proper handling of return values in the code
added SLF4J logging statements to the Utils class for REPL dump functionality to improve debugging and monitoring of REPL dump state
refactor ReactiveAuthorizationManager class to improve code readability and maintainability
updated the condition to promote both types to objects and boolean in MethodEmitter. java to ensure correct handling of boolean types in the code
rename llvmstackframenuller to llvmaddressnuller.
[ hotfix ] [ test ] fix checkstyle violation
added a new test class ` CaffeineCacheDefaultConfigurationTestSuite ` to validate the functionality of ` CaffeineCacheConfiguration `
added a new method ` calculateBoundingBox ( ) ` to the ` Mesh ` class to calculate bounding box based on vertex attributes to improve bounding box
added a new ` TargetHashFunction ` enum and modified the hashing logic to allow customizable hash function for different hashing strategies
updated the implementation of DefaultConfigurationProperties to enhance configuration management
added high light color and alpha settings to ListViewMultiChartActivity and modified highlight paint behavior in BarChart to improve visual consistency and visual quality of
added pgPathPlanMap to the ClusterPlanRouter to store the path plan for better management
( chore ) camel - infinispan : fix checkstyle violation
added functionality to remove artifact files from the staging repository and refactored artifact fetching logic to improve artifact management and ensure proper handling of file locks
added a conditional shader for GL _ ES in the fragment shader to ensure compatibility with OpenGL ES and improve shader generation
ticket ticket ticket ticket ticket ticket ticket
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 465
updated version handling in CustomAnalyzer and added a new test for version awareness in TestCustomAnalyzer to ensure compatibility with the latest Lucene features and
added a test to verify that the ` getPackageArchiveInfo ` method reads values from the ` setPackageArchiveInfo ` method to ensure that the
replaced direct calls to ` method. invoke ` with ` MethodUtil. invoke ` across multiple Java files to enhance security by ensuring package access
added imports for ProjectConfigurationStartEvent and TaskStartEvent, and modified progressUpdateTypes method to include new operation types to enhance event tracking and
danielwagnerhall : remove unnecessary synchronization in androidwebdriver
fix bug with hikariconfig. getinitializationfailtimeout ( )
remove parameter ` ` timeOut'' from the ` get ( ) ` method and add an ` ` error'method to the ` Net
changed the ` isNative ` field to be transient and modified the ` addEntry ` method to set the ` isNative ` field to false
updated error message formatting in CEntryPointCallStubMethod. java to improve clarity of error messages for better debugging
renamed ` RuleEnableHandler ` to ` RuleEnablementActionHandler ` and updated references accordingly to improve clarity and consistency in handling rule enablement
fix checkstyle issue in util / tagsupport. java
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of log output for better debugging
refactor KafkaDynamicTableFactoryTest to improve clarity of source and sink options to enhance readability and maintainability of the test code
added null check for the registrant repository in UsersPanel. java to improve robustness by preventing null pointer exceptions
updated font name checks to include ". otf " and ". OTF " to ensure compatibility with additional font formats
refactor ` AnnotationMatcher ` to use ` argType ` instead of ` matchWithoutDotClass ` to improve clarity and maintainability of the code
updated log level from " OFF " to " SEVERE " in Grep. java to reflect the severity of the application
added a check for debug log level before logging messages in FaultTolerantChunkProcessor. java to ensure debug logging is only triggered when debug
fix a bug where it wouldn't work if there be no test.
added a check for the ` shouldMoveToDefaultScreenOnHomeIntent ( ) ` method and implemented the ` onHomeIntent ( ) `
change maximum bitrate from 110 to 30 in PMS configuration to increase bitrate for improved performance
removed the ` getOptions ( ) ` method from ` CommandLineParser. java ` to streamline the code by eliminating redundancy
trim whitespace from the description return value to ensure consistent formatting of the description string
updated the path for the output filename in XOMParserTest. java to ensure the output file is correctly generated for the specified file path
removed the process. pid ( ) parameter from the error log message to simplify error logging by directly using the process name
added ` getLoadedMusic ( ) ` and ` getLoadedSound ( ) ` methods to the ` MusicLoader ` and ` SoundLoader `
removed unnecessary import statements in OnBeanCondition. java to streamline code and improve readability
added ScreenRecord annotations to RequestPinItemTest. java to facilitate screen recording during tests
disable lrPauseButton when lrPauseButton is not present in CPUFeature and MemoryFeature to ensure lrPauseButton is only selected when it is
replaced instances of ` accountsPrefCategory ` with ` mAccountsPrefCategory ` and refactored account preference handling to improve code clarity and maintain
send a'available'packet to the client when the connection be connect to the server.
updated StringBuilder initialization logic in ObjectInputStream to handle cases where utflen does not exceed Integer. MAX _ VALUE to ensure proper memory allocation for large
updated WebEndpointsAutoConfigurationIntegrationTests to set property values for metrics export to ensure metrics are properly set for testing purposes
refactor InterruptedException class to improve code readability and maintainability
refactor ServiceTicket class to improve code readability and maintainability
refactor connection check logic to streamline SSL handling to improve code readability and maintainability by reducing redundancy
added a check for both String and Map types in ArgumentArrayMessageMapper. java to ensure correct conversion logic for different data types
added a second parameter to the ` findOrCreateCollectionWithHandle ` method in ` ItemOwningCollectionUpdateRestControllerIT ` to ensure proper handling
updated the intent flags for activity reordering in PasscodeManager to improve the user experience by ensuring the activity does not reappear after re
refactor : remove @ deprecated annotation in patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` from void to boolean and added a null check for the drawable to ensure that the widget
added an Ignore annotation to the TestPackedInts class to temporarily disable the test due to LUCENE - 4488
added a null check for the root variable in DynamicStyle. java to prevent potential NullPointerExceptions when accessing the root component
add a method to update confusion matrix in testclassifier and testSentence
bug 58153 - bug 58161 - bug 58163 - bug 58163 - bug 58163 - bug 5816
added tests for retrieving connected device states in BluetoothHeadset to ensure that the Bluetooth headset correctly handles non - connected device states
renamed the test method from ` testAutowire ` to ` testAutowired ` and updated the corresponding property binding to clarify the purpose of the test
added support for " clone " and " finalize " methods in ResultObjectProxy. java to enhance functionality for handling object methods in the lazy loading
added null check for counters object in IntegrationTestBigLinkedList. java to prevent null pointer exceptions in YARN configuration
make sure that getinstanceinfo return a not _ implemented error code
updated the parameter name from ` service ` to ` serviceId ` in the ` setRegisteredServiceFilter ` method to ensure the service matches the
added a null check for the activity before calling showStorageIssue to prevent potential NullPointerException when accessing the UI thread
rename logger to logger in multiple Java files to improve clarity and consistency in logging practices
added getter and setter for ` _ stringType ` in ` DatabaseAdaptor ` and changed visibility of ` doInsert ` and ` doUpdate `
solr - 2387 : fix uima update test
refactor thread name handling in multiple classes to improve clarity and maintainability of thread name updates
refactor TaskletAdapter class to improve code readability and maintainability
dmn : add test for ` ` will be null if negative''
added a call to glFlush ( ) in TextureMap. java and updated the default value in SplashProgress. java to ensure texture map
added tooltip text for the ` showCGCP ` checkbox in ` RocketPanel. java ` to enhance user experience by providing context for the
replaced ` getTypes ( ). add ( e ) ` with ` addType ( i ) ` in ` EnumFactory ` and ` InterfaceFactory
add a description to the hot reload action in the hot reload ui
bug fix : use hasspreadsheetlabel ( ) instead of gettext ( )
changed the method call from intValue ( ) to doubleValue ( ) for BRIGHTNESS _ FACTOR to ensure accurate calculation of BRIGHTNESS _
sscmhistoryparser : remove unnecessary regex match
added a ` isAdmin ` parameter to the ` createUser ` method and implemented the ` listUsers ` method to determine if a user is a
added checks for ` indexedWriteMethod ` return type in ` Introspector ` and ` PropertyDescriptor `, and created a new test class `
replaced string concatenation with parameterized logging in DynatraceExporterV2. java and updated assertions in DynatraceExporterV2Test. java
replaced instances of ` Runnable runnable ` with ` Runnable task ` in ` Context. java ` and updated method signatures in ` Response. java `
fix mixinitemstack not deserialize properly.
[ hotfix ] fix test failure in lifecycleutilstest
added contract type checks for CreateSmartContract and TriggerSmartContract in Wallet. java and GetContractServlet. java to ensure contract creation and trigger
added package - info. java files for various packages including com. ibm. dtfj. image, com. ibm. dtfj
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to improve handling of node additions to enhance concurrency and prevent potential race conditions during
added a HashSet to track duplicate JavaFileObject entries and modified the test method to improve handling of duplicate Java files and enhance test coverage
updated the default value of STRIP _ IPV6 from " true " to " false " and adjusted substring extraction logic to ensure compatibility with
refactor LoginServerTokenEndpointFilter to accept a list of user parameters to enhance flexibility in handling multiple user parameters
added support for the ` C _ KEY ` language in ` LanguageFactoryTest ` and updated the condition in ` CPPParserTokenManager ` to
replaced ` ThreadPoolExecutor ` with ` MoreExecutors. newSingleThreadExecutor ( ) ` in multiple files to standardize executor usage and improve code
added caching control and expiration headers to the LoginService and FormAuthenticator classes to ensure proper handling of cache and expiration headers in the response
added exception message to log error message to improve debugging by providing context on the error message
updated test suite to use TestAreaReference, TestCellReference, TestRangeAddress, and TestSheetReferences instead of AllHSSFUtilTests
refactor FetchHTTP2Test and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output file in TestCommand. java to avoid potential NullPointerExceptions when the output file is null
added ExternalResourceControlPriority settings for access control in Java2DRenderer to enhance security by allowing access control to run before and after resolving URI
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage. java to ensure that JDK sometimes fails to build on Windows environments
replaced the static HotspotThreadMBean instance with a final static variable and refactored CPU time test logic to improve thread CPU time handling and
added a check for empty comments in TabsAndIndentsVisitor. java to ensure that comments are only processed when there are no comment
updated assertions in SimDistribStateManager and TestTriggerIntegration to use greater than 100 for collection and replica rates to improve accuracy of rate checks and
replace occurrences of ` getFilePath ( ) ` with ` getFilePath ( ) ` and ` getAuthor ( ) ` in multiple files to ensure case
added a method ` getString ` to handle null values in ` ShadowBundle ` to ensure that the ` getString ` method returns a default value if
added support for military time format in TweetActivity to ensure consistent date formatting across different locales
added a check to return an empty list if no connections are available to improve robustness by handling cases where no connections are available
refactor focus handling in DetailFragment by extracting focus request logic into a separate method to improve code readability and maintainability by encapsulating focus logic
fix for ` ` file : / /'' in classpath
[ fix ] fix race condition in coordmatrix. solve
added import statement for org. springframework. integration. core. message to enable usage of org. springframework. integration. message
refactor the SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater to use a new join method to improve code readability and maintainability by reducing
updated filtering logic in AquaFileChooserUI. java to check for file filters before setting the file filter to ensure the file filter is only
refactor synchronization logic in P2PTransportManager. java for better readability to improve thread safety and maintainability of the code
updated the ` toString ( ) ` method in ` ArrayPtg ` and added a test for the ` toFormulaString ( ) ` method
updated import statements in PGtokenizerTest. java to use specific assertions instead of a wildcard import to improve code clarity and maintainability by using
refactor variable handling logic in Java2TypeScriptTranslator and add new test cases in GenericsTests to improve code clarity and ensure correct handling of variable
added support for creating and altering auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL's auto - increment feature
updated bitwise operations in DataInput. java to use ` readByte ( ) ` and ` readUtf8 _ slow ( ) ` to ensure correct handling
removed unnecessary assertion for VerticalPhysicalPixelSpacing and HorizontalPhysicalPixelSpacing in ImageParserTest. java to streamline test cases by eliminating unnecessary
updated method call from ` getParent ( ) ` to ` parent. getParent ( ) ` to ensure proper retrieval of the parent component
refactor code for improved readability and maintainability to enhance code maintainability and facilitate future updates
replaced calls to ` ENGINE _ finish ( engine ) ` with ` ENGINE _ free ( engine ) ` in ` NativeCryptoTest. java `
added a new method ` fireIterEventNeeded ( ) ` and replaced it with ` fireIterEvents ( ) ` across multiple classes to enhance
release httpcontent and fileupload in case of exception
added a call to deleteLogs ( ) in TestRecovery. java to facilitate the deletion of logs during recovery
added a condition to check if the URL contains " twitter : / / " and modified URL loading logic to handle cases where the URL does not
added awaitHostStatus method call in DeploymentGroupTest. java to ensure proper handling of host status during test execution
changed logResult from false to true for " listLabels " parameter to enable functionality for list labels in the visibility controller
updated the MaxAutoRetries value from 0 to 25 in RestTemplateRetryTests. java to increase retry attempts for better resource management
removed a debug print statement from TranslatorSupportTest. java and added multiple @ Override annotations in StandardTypeMapperComponent. java to streamline
added support for handling fraction resources in the ResourceLoader and Converter classes to enhance functionality for handling fraction resources in the application
removed a conditional check for file write confirmation in BasicFrame. java to streamline file handling by eliminating unnecessary checks
added null checks for ` tagGroupId ` and ` tagArtifactId ` in ` findNewerDependencyVersion ` method to ensure proper handling of null
; ; ; ; ; review
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
addendum ; fix testfuzzpreloop
added a condition to set f0 to zero in HTSVocoder. java to ensure f0 is non - negative and prevent potential errors
removed redundant null check for ` pkColumn ` and ` fkColumn ` in ` TableRetriever. java ` and added null checks for `
remove request. clearencoders ( ) from inputbuffer. getencoders ( )
added functionality to check for an empty screen preference in the Workspace class to enhance user experience by preventing empty screens from being displayed
added a warning log indicating the use of cucumber - needle has been deprecated to encourage the use of cucumber - cdi2 or cucumber -
refactor ShadowThemeTest, ShadowArscAssetManager, and ShadowVMRuntime classes for improved theme handling and resource management to enhance code clarity and
updated import statements and improved error message formatting in VerifyFast. java to enhance clarity of error messages for better debugging
no effective change - remove obsolete dbmigration annotation
updated type checking for PROTO _ PROPERTY _ NAME and refactored method handles in ScriptObject to improve type safety and ensure proper handling of
updated the shuffle method in TestFilterDirectoryReader to include a random seed to improve randomness of the shuffle process
added conditional logic to retrieve displayName based on userName to ensure displayName reflects the correct user context for sharing
updated the path format in CookieRetrievingCookieGenerator to use a default value if the path is blank
removed redundant closing brackets in multiple Java files to improve code readability and maintainability
don't check total backup count in abstractcachervice
pdfbox - 4892 : don't try to compare page number if it's not zero
added a condition to check if the focused widget is not null and matches the current instance to enhance functionality by ensuring that the focused widget is
remove the exclude parameter from playSoundAtLocationExcept and playSoundPitchRange methods to simplify method signatures and improve readability
refactor ApplePackageDescription to use ` getAppleCxxPlatformFlavorDomain ( ) ` instead of ` appleCxxPlatformFlavorDomain ` to
added a test for the clickhousifySql function in ClickHouseStatementTest. java to ensure the correct SQL syntax is used for displaying
changed method names from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory `
rename EnglishPTBTreebankCorrector. java to EnglishPTBTreebankCorrector. java to improve clarity and maintainability
npe be throw when logger. getlogger ( ) return null.
added a data field to the PathSharingContext class and updated references in ActionDirectory, ScriptedProcessor, and ScriptedDecideRule
espresso : don't throw exception when a field be unsynchronized
added support for " NEXT VALUE FOR " pattern in NextValExpression and related classes to enhance flexibility in handling next value expressions
improve error message for unsupported resource bundle access
updated the handling of pending writes in BoundedLocalCache and added a test for clearing pending writes in BoundedLocalCacheTest to ensure that pending writes
added " Leverage _ Level " parameter to QuoineExchange and implemented order direction handling in QuoineNewMarginOrderRequest to
added a new method ` boundInitialization ` in ` PropertyDescriptor. java ` and created a new test class ` Test7192955.
replaced ` failsafeWidth ` and ` failsafeHeight ` with ` SetDisplayModeCallback ` in ` LwjglGraphics ` to improve
added null check for buttonsAwatingRelease in Tabs. java to prevent potential null pointer exceptions when accessing the parent form
refactor wrap width calculation in LineCell. java and update wrap width handling in StyledTextAreaSkin. java to improve layout responsiveness and ensure consistent
corrected a typo in the error message to ensure proper formatting of the error message
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper classes to ensure predictable iteration order of parameter values
use string. format ( ) instead of getname ( ) +'\''
replaced the use of ` namespaceContext. getNamespaceURI ( ) ` with ` getNamespace ( prefix ) ` in ` StaxXmlPullParser. java `
added support for nested joins in multiple test classes to ensure proper handling of nested joins in tests
server : allow admin to access the list of account, not the normal one
added caching functionality for JavacFileManager in SourceFileManager. java and modified CompletionTaskProcesor constructor in CompletionProvider. java to ensure
added Hive configuration variables for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection. java to
replaced ` Assert. assertThat ` with ` assertThat ` in ` KuduIOIT. java ` and ` XmlIOTest. java `
fix lint warning in exoplayer2
updated the calculation of offsetMemSize in SymbolMapReaderImpl. java and added a new test for symbol file mapping in LineTcpConnectionContext
removed debug print statements for termFilter and otherTermFilter in TermFilterTest. java to streamline output for better debugging
removed the ` Reflection ` class and its associated methods and members methods from the ` jooby. internal ` package to streamline the code
refactor ThreadlessExecutor methods for improved clarity and functionality to enhance code readability and maintainability by using more descriptive variable names
removed unnecessary try - catch block in DateTimeFormatter. java and added unit tests in TestDateTimeParsing. java to streamline error handling and ensure
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` in ` CompressionParameters. java ` to improve clarity and consistency in naming
added a new class T7034495 with generic interfaces A, B, and C in T7034495. java to address
refactor loop structure in LotsOfEvents. java to improve readability to enhance code clarity and maintainability
fix false positive in transclusiondeciderule
remove ` ` version'' output from micronaut version output
added tests for ` Print _ Area ` and ` Area3DPtg ` in ` TestBugs. java ` to ensure correct handling of
updated MindIcon creation logic to include a description if the name starts with a slash to ensure the MindIcon is created with the correct
modified the ` onHomeIntent ` method to accept a ` internalStateHandled ` boolean parameter to ensure proper handling of home intents based
refactor dependency tree handling in CxxBuckConfig. java to improve code clarity and maintainability
added ` showDetails ` method to ` ContactsPreferenceActivity `, ` FileDisplayActivity `, ` FolderPickerActivity `, and ` File
corrected the spelling of " $ apply " to " apply " across multiple files to ensure consistency and correctness in method naming
added capacity handling and a method to randomize253State in MinimalEncoder. java and updated test assertions in HighLevelEncodeTestCase. java to
updated append statements in SourceBuilder. java for better formatting to enhance readability and maintainability of the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity. java to ensure the adapter reflects the new data
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline the code by eliminating unused functionality
updated type checks in RemoveJavaDependenciesAdapter. java and added assertions in Collections. java to improve type handling and ensure correctness of collections
remove unused method from defaults3crtasyncclient
updated test cases for corrupted stream out of bounds length in ParserTest. java to ensure correct handling of corrupted stream values
fix ` ` found - content'' assertion in ` hazelcasttestsupport. java `
fix bug in graphbuilderphase that cause exception to be throw.
fix for ggb - 195 : don't draw pen image if it's full
refactor SQLXML class implementation to improve code maintainability and readability
added a limit parameter to the getOrderBook method in YoBit and YoBitMarketDataService to allow users to specify a limit for order
replace ` GotWrongOOMEException ` with ` HeapOOMEException ` in ` StressHierarchyBaseClass. java ` and modify exception
nifi - 7141 : allow nifi to configure the max string length for the dataflow
fix for http : / / issues. apache. org / activemq / browse / amq - 380
rename ` FullIterator ` to ` WheelIterator ` and update related references to improve clarity and consistency in naming conventions
add error message if bug pattern can not be find
fix flakiness of localchunkprovidertest
changed the visibility of the menu item from true to false to disable the uncomplete checklists feature for improved user experience
refactor DefaultResultSetHandler to resolve discriminated result map and create Contract class with associated fields to improve handling of discriminated result maps and
added null check for defaultHome and improved receiver registration logic to ensure proper handling of null values and prevent potential NullPointerExceptions
removed VertxGen annotation from PumpImpl. java to streamline code by eliminating unnecessary annotations
removed unnecessary type casting for file operations in FileDetailFragment and OCFileListFragment to streamline code by eliminating unnecessary type casting
trim whitespace from tokens in ConfigAttributeEditor and add a test for trailing and leading spaces in ConfigAttributeEditorTests to ensure trimming of whitespace
refactor ClassUsingAnotherAuxiliary, ClassUsingAuxiliary, and SelfClassWithAux to improve code organization and maintainability
fix native - image image build for java 11
added a check for the string " pg _ " in DatabaseMetaData to set relKind based on the presence of " pg _ " in the
updated TIER _ ENTERPRISE _ PLUS _ VALUE from " m " to " p " and marked the TIER _ ENTERPRI
corrected the initialization order of RQST _ FIELD _ DESC in ThriftHiveMetastore. java and removed unnecessary exception declaration in HiveMetaStore.
added a new module - info. java file for the com. speedment. runtime. core module to facilitate modularization of the
added handling for ` _ flushState ` and modified fill state logic in ` SslConnection. java ` to improve connection handling and ensure fill inter
updated Log4j2LogDelegateFactory to implement LogDelegateFactory and modified LoggerFactory to utilize LogManager for better logging management
updated ` ExecutionEnvironment. java ` to include ` haveServerVM ` and ` haveClientVM ` checks in ` Test7029048.
refactor ExecutableFindOperation, MongoOperations, ReactiveFindOperation, and ReactiveMongoOperations classes to improve code organization and maintainability
replaced null with " org. postgresql. ssl. LibPQFactory " in PGProperty. java to ensure compatibility with the latest SSL library
added a currently failing TODO annotation to the TestInterProcessSemaphoreEdges class to indicate that the test is currently failing due to a known issue
added sorting functionality for resource names in EditableResources. java to ensure consistent ordering of resource names across different themes
added a new class ` OSvTerminal ` and modified ` TerminalFactory ` to handle OSV environment variables to improve compatibility with different operating systems
added conditions to check for both ". gs " and ". grs " files in ClassType. java to ensure compatibility with additional package
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper. java to ensure predictable iteration order for tests
added a condition to check if the collection size does not match the actual size of the names and values in XPathEntityProcessor. java to ensure
refactor WebSocketPolicy class structure to improve maintainability and readability of the code
removed static modifier from ` setReadPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` methods in ` ShadowTelephonyManager ` and
http : / / issues. apache. org / activemq / browse / amq - 3957 - allow a template - based resolution to
replaced instances of ` MethodVisitor ` with ` Class <? extends ClassVisitor > ` in ` AsmUtil. java ` to improve type
added a new class LoggingAuditService for logging user authentication and non - existent users to provide detailed logging for user authentication and non - existent users
[ java ] allow temperature range to be set to undef if it's null.
added a check for abstract classes in the BeanDefinitionInjectProcessor to ensure that only public methods are processed for abstract classes
camel - 15836 : camel - http - allow to configure http proxy via system property.
updated MAX _ ENCODING _ VERSION from 1.1 to 1.2 to reflect the new version of the template
added jdkSerialFilter method to System. java to enhance functionality for handling serial numbers
camel - 15836 : add more detail to log when pool size be too small.
replaced the method ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple files to simplify the method signature and improve
updated ` ensureRealtimeClusterIsSetUp ` method to use ` rawRealtimeTableConfig ` instead of ` realtimeTableConfig ` to ensure
added methods to handle error messages in ValidationReport and DisallowValidator classes to improve error handling and provide more informative error messages
refactor inline QSB handling in InvariantDeviceProfile. java to improve clarity and maintainability of the code
updated URL decoding methods in SortedArrayStringMapTest. java to ensure proper handling of URL encoding and decoding
updated regex patterns in TransformSteps. java to include parentheses around parameter names to improve clarity and accuracy of test cases
added null checks before assigning retinaProp in Toolkit. java and modified fillRect method in PGraphicsJava2D. java to prevent potential Null
replaced hardcoded timeout values with a defined timeout value in FaultToleranceTest. java to improve flexibility and maintainability of timeout values
updated package - info. java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in Environments. java to ensure the Docker image URL is correctly set for the environment
[ java ] remove unused call to system. gc ( ) in knowledgeagenttest
refactor AdditionalAnswers, AnswerFunctionalInterfaces, and InvocationOnMock classes to improve code organization and maintainability
added a copyFile method to handle copying files to ensure that the target directory and source files do not exist before copying
renamed the method ` appendDescription ` to ` getDescription ` across multiple classes to improve clarity and consistency in naming conventions
[ hotfix ] [ core ] add device check to functioninfo
added a check for ` Xml. Document ` before visiting indent and general format statistics in ` Autodetect. java ` to ensure proper
replaced ` InstrumentationTestCase ` with ` @ RunWith ( AndroidJUnit4. class ) ` in ` NotesHelperTest ` and ` Rem
added new rules for GasLimitRule, DifficultyRule, and ParentGasLimitRule in CommonConfig. java to enhance rule management
changed the visibility of setupData ( ) method from public to private in BaseAssumptionsRunnerTest. java and removed the setupData (
renamed the ` autocommit ` variable to ` runInTransaction ` and updated its usage throughout the ChangeSet class to clarify the purpose of the variable
[ hotfix ] [ runtime ] fix npe in tripleserverstream. close ( )
[ hotfix ] [ config ] fix typo in config file
added a new test method ` testIssue154 ` to ` SelectTest. java ` to address issue # 154
refactor Common class structure to improve code maintainability and readability
refactor app launching logic to use a context layer for improved clarity to enhance code readability and maintainability by leveraging context layers
updated StreamExecDeduplicate. java file to improve code clarity and maintainability
[ hotfix ] [ kafka ] log kafka error when send kafka message to topic
added PersistentPropertyAccessor and isImmutable method to SimpleElasticsearchPersistentEntity and SimpleElasticsearchPersistentProperty classes to enable immutability of properties
changed the return type of the setCoord method from void to boolean and modified conditional logic in GeoCoordSys1D and GeoSegment3D
added logging and velocity barrier handling in AskGestureEventsListener. java to improve debugging and control over gesture scrolling behavior
modify comparison logic in NGramEstimator. java to ensure correct comparison between key and value lists
updated the import paths for ScenarioScoped from ` cucumber. runtime ` to ` io. cucumber. core. runtime ` to ensure compatibility with the
updated StatsLogCompatManager. java to include additional parameters for folder icon retrieval to enhance functionality by providing additional metadata about the folder icon
updated method call from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ThemeUtils. java to ensure correct handling
r r r r r r r r r r r r r r r r
remove selectionendnode from selectionhighlighter, and add hashcode and equal to the selection highlighter
string result converter to be use from native.
camel - 197751 : camel - aws2 - m2s : disable test that run reliably on apache ci
removed the condition checking for '! = 0'in the WaitForSingleObject method call to simplify the condition for better readability
added null checks for buffer before accessing its capacity in BufferUtils. java to prevent potential NullPointerExceptions when accessing buffer methods
updated the assertion for the data directory property in TestSolrDiscoveryProperties. java to ensure correct handling of data directories across different operating systems
updated OS detection for Windows and macOS in AutoUpdaterServerProperties. java to ensure compatibility with macOS and improve user experience
refactor Lock class to use lockName instead of File for lock file handling to improve clarity and maintainability of lock file handling
replace ` appIcon ` with ` allApps ` in ` Overview. java ` to improve clarity by using a more descriptive variable name
updated references from ` Invocable. InvocationType ` to ` ClientDatagramEndPoint ` for consistency to improve code clarity and maintainability by
changed the order of the GET _ STEP _ EXECUTIONS string from " oreder by STEP _ EXECUTION _ ID " to "
modified button handling in LwjglInput. java to return - 1 instead of returning - 1 and added a check for unknown buttons to improve
added tests for claimed tasks in TaskRestRepositoriesIT. java to ensure that the claimed tasks can be reject or approve based on the
replaced instances of ` Logger ` with ` SLF4J Logger ` in multiple response builder classes to standardize logging throughout the code and improve
refactor SsoAccessTokenProvider and SsoAccessTokenProviderTest for consistency and clarity to improve code readability and maintainability by standardizing expiration logic
[ geot - 6657 ] fix test failure on window
add miss license header to test
removed redundant check for EXIT _ ON _ CLOSE in JFrame. java to streamline code for better readability and maintainability
refactor connection handling in LibraryScanner. java to check for a non - null connection to improve robustness by preventing potential NullPointerExceptions
refactor MetricsContext initialization in SuggestComponent. java to improve code clarity and maintainability by using a unified superclass method
refactor ` OCFileListFragment. java ` to handle cases with ` filesCount ` and ` foldersCount ` to improve clarity and correctness of file
[ flink - 3447 ] [ sparc ] change the return type of the loadKeys method from KeyPair [ ] to Iterable
pdfbox - 4892 : remove obsolete comment from sourceversion. java
added a new test class ` ThreadFactoryTest ` to validate thread creation functionality to ensure that the thread factory behaves as expected and does not start
refactor getLockPeriod method to accept DynamicPropertiesStore and adjust expiration time calculation to improve lock period handling based on dynamic properties
added a new TicketModel instance to the EditTicketPage to facilitate ticket editing functionality
changed the default value of " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature option for dimiss apps
updated constructors in various assertion classes to include generics for better type safety to enhance type safety and prevent runtime errors
added a new menu item for quote functionality in TweetActivity to enhance user experience by allowing quote functionality
move . lock ( ) statement out of try to avoid accidetal release if lock fails
renamed codec passthrough format to decryptOnlyCodecFormat and updated related method calls to improve clarity and functionality of codec passthrough handling
added a conditional check for the result before offering a failure to ensure that the consumer is only offered when the result is available
updated German and French error messages from " Stiller Modus " to " Silent - Modus " and " Le nombre d
added @ ThreadSafe annotation to CheckpointsCleaner. java to improve thread safety for the CheckpointsCleaner
use rx. subscriber instead of rx. subscription in mockrestadapter
added a check for the existence of the components. yml file in the ComponentPresetManager class to ensure that the components. yml file is
added a new configuration option ` HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES ` in ` HiveConf. java `
ticket # 241 : fix for ticket # 241 : mary gui do not update audio effect when replace text.
added validation for session validity in Session. java and refactored exception assertion in SessionHandlerTest. java to improve error handling for invalid session
hhh - 147642 - remove unused exceptionhelper. java
change key pair generation from 256 to 255 in JceX25519Domain. java to accommodate larger key pairs and enhance security
added a codec setting for Lucene41 postings format in TestBlockPostingsFormat3. java to ensure proper handling of postings formats in
[ hotfix ] [ checkpoint ] add log for empty checkpoint range header
added handling for RSA / ECB / OAEP padding algorithm in OperatorHelper. java to ensure compatibility with RSA / ECB / O
updated platform references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files
added logging for SecurityException in DebugSourcesResolver. java to improve error handling and provide visibility into source resolution failures
removed unnecessary whitespace in AbstractTest. java to streamline code for better readability and maintainability
updated FileUploadUtils and ControllerConf to include exception handling and modified file handling in UploadRefreshDeleteIntegrationTest to improve error reporting and ensure file
rename bufferutils. newdisposablebytebuffer ( ) to bufferutils. newunsafebytebuffer ( )
changed the default value of USE _ PIPELINE _ DOWNLOADER from false to true to enable the download downloader feature by default
modified DST offset handling in ` SimpleDateFormat. java ` and added a new test class ` Bug7130335. java ` to ensure correct
refactor variables in AllAppsView. java for consistency and clarity to improve code readability and maintainability by using a local variable for iconCount
cloudstack - 7131 : fix npe in listvirtualmachines api call
refactor StringBuffer implementation to improve performance and maintainability of the code
added rule uid assignment in RuleResource. java to ensure the rule's uid is correctly assigned
added a null check for the listener before unsubscribing to prevent potential NullPointerException when unsubscribeing URLs
added a new property ` PRETTY _ PRINT ` to the JoltTransformJSON class to enable pretty - printing formatting to the output of
make access _ table flag public for instrumentation.
improve error message when resource not find at location
refactored xmpp transport to use a unified dorun ( ) method.
updated multiple Java files for consistency and clarity to enhance code maintainability and readability across the project
added an ` isUpgradeSuspended ` boolean parameter and updated related logic in ` AmbariManagementControllerImpl. java ` to improve handling of
update copyright year for the Google Inc. file to reflect the correct copyright year for the Google Inc.
removed the declaration of wfields from the Resolver class to streamline the code by eliminating unnecessary field retrieval
added a constructor to OAuthProperties that initializes encryption and signing key sizes to ensure proper handling of key sizes in the OAuthProperties class

replaced the ` AllowedResourceAliasChecker ` instantiation with a lambda expression for alias checking to simplify the code and improve readability
updated ObjectInputStream, ObjectOutputStream, ObjectStreamClass, Serializable, and package - info. java files to improve code organization and maintainability across
added a reset method to the Cluster interface and implemented it in ClusteredServiceAgent to provide a way to reset the idle strategy
updated the increment operation for currentChunkID in ChunkedWriter. java to ensure proper handling of the current chunk ID in the writer
added a new abstract class ` AbstractJobExecutor ` for job execution handling to provide a mechanism for executing batch tasks based on job configuration
replaced replay with replayFuture assignment and added a break statement to improve clarity and control flow during replay operations
replaced instances of ` hugeStaticBase ` with ` staticBase ` in ` HugeResourceTest. java ` to improve clarity and consistency in
added implementation of service ID retrieval logic in AbstractConsulClient to ensure proper handling of service IDs based on the consul configuration
replaced ` Math. random ( ) ` with ` new SecureRandom ( ). nextInt ( ) ` for ` hashSalt ` to improve security
improve logging of method reachability trace in runtime compilation
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler. java to streamline the code by eliminating unnecessary calculations
added logic to return a default value for abstract methods in CallsRealMethods. java and created corresponding tests in CreatingMocksWithConstructorTest.
refactor ` checkPackageAccess ` method to accept ` Class ` as a parameter and update access control logic to enhance security by restricting access to
updated ContextPathPluginTest to extend AbstractPluginDataInit and added setup and teardown methods to improve test structure and ensure proper setup and teardown of
replaced instances of ` dtm ` with ` model ` in ` ContributionListPanel. java ` to improve clarity and consistency in font
added handling for the REQUEST _ HAS _ TIS case in QuickstepTestInformationHandler and TestInformationHandler, and refactored the Launcher
removed redundant try - catch block in ConnectAction. java to streamline code for better readability and maintainability
changed the type of ` showRulesResult ` from ` ImmutableMap < String, ShowOptions > ` to ` ImmutableMap < BuildTarget, ShowOptions >
added new files for ArrayHelper, Asserts, Comparables, Enums, NativeRegExp, Objects, and ValueType to improve code organization and
added handling for HOME and END operations in the Less class to improve user experience by allowing navigation to home and end commands
removed synchronization from the plot retrieval process to streamline the code by eliminating unnecessary synchronization
refactor intent handling in Utilities. java to use IntentChooser for sharing activities to improve code clarity and maintainability by simplifying package installation logic
remove public modifier from roster constructor
added a new extension for basic constraints in TestUtils to enable handling of basic constraints in certificate generation
added a new test method ` testFixedNestedTransform ` to the ` TextVisualRegressionTest ` class to mark the test as failing due to
replaced instances of ` Integer. MAX _ VALUE ` with ` precisionStep ` in ` TrieDateField. java ` and ` Trie
added TaskbarStateHandler to the BaseQuickstepLauncher class and removed the TaskbarStateHandler class to streamline the code by eliminating
added a new file ` ArrayLength. java ` to test the behavior of ` getFields ( ) ` and ` getDeclaredField ( ) ` to
added logging for Hazelcast process destruction in the tearDown method to improve debugging and monitoring of Hazelcast process destruction
refactor ApplicationSettingsService to use PostConstruct annotation and simplify save method to improve code clarity and ensure proper initialization of application settings
fix bug in safepoint. getvalue ( )
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 46
updated DEFAULT _ RAND _ SEED from System. currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hn
refactor stroke handling in PGraphicsJava2D to use a reusable stroke object to improve code maintainability and reduce redundancy
refactor expression expansion logic into a separate method ` expandDynamicStar ` to improve code readability and maintainability
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to locate child elements based on their type
added import statement for Messages and set a status code for a specific warning icon to enhance user experience by providing a clear status message
use getmodifiersex ( ) instead of getmodifiers ( )
remove cycles from amd64countLeadingZerosnode and amd64counttrailZerosnode
added test case for disposition notification when content transfer encoding be not set.
refactor Locale class for improved locale handling to enhance code maintainability and readability
added a clearLog button and a clearLog method to the ErrorConsoleController and ErrorConsoleViewModel classes to enable users to clear log messages during
set mRecentsAnimationController to null in RecentsView. java to ensure proper initialization of the animation controller
replaced instances of ConsolePlayer with LocaleHolder and updated method signatures to use Set instead of Map to simplify code and improve readability by using a more
added connection pooling functionality to multiple test classes to enhance resource management and improve test reliability
[ java ] adding opera driver to the default driver session
show a clear error message if download fails
# 39 ( # 39 )
updated asynchronous handling in OverseerCollectionProcessor and added async request handling in CollectionsAPIAsyncDistributedZkTest to improve asynchronous handling and ensure
refactor PostgresDatabase and PostgresDatabaseTest to improve readability and maintainability to enhance code clarity and facilitate future modifications
updated references from ` getRepositoryName ( ) ` to ` objectId ` in ` LogPage ` and ` SummaryPage ` to ensure correct retrieval of
updated the calculation of parentTail in SkeletonInterBoneWire. java to correct the calculation for bone space position
added a new method ` browserDestroy ( PeerComponent browserPeer ) ` to the ` AndroidImplementation ` class to ensure proper cleanup of the browser
added a call to wait for the active collection of " readApiTestViolations " to ensure that the test correctly waits for the active collection
refactor ScreenTerminal to improve handling of terminal attributes to enhance accuracy of terminal color representation
updated the condition for retrieving the controller state in SoftResetAction. java to include additional state checks for the backend
disable on - disc stream cache to speed up texture pack reload
added logic to retrieve the parent folder in both Request. java and RequestV2. java to ensure the correct parent folder is set based on
fix typo in networkofferingvo. ispersistent ( )
updated the FileOutputStream implementation to include a close method to ensure proper resource management and prevent potential memory leaks
added handling for 403 responses in StandardGitHubRepository to improve error handling and provide more informative logging for 403 responses
added a method to retrieve the original MessageFactory in MessageFactory2Adapter and updated tests accordingly to ensure correct handling of MessageFactory2 adapters in
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest. java, DurationTest. java, SizeTest. java
updated version regex from " [ 0 - 9 ] { 1, 2 } " to " [ 0 - 9 ] { 1, 3 }
added error handling for tooltip delays in ExtractionModelFrame. java to improve user experience by providing feedback during tooltip updates
refactor ProjectCommand to use passedInTargetsSet for better handling of build targets to improve clarity and maintainability of target handling logic
added timezone handling in TimeTest. java to ensure correct formatting of time values
refactor MediaSessionConnector class to improve code readability and maintainability
don't use jssefactory. getsslsupport ( )
updated the accuracy display method in GpsLoggingService to display accuracy accurately instead of altitude
added functionality to enable future handling in BinanceExchange and BinanceAccountService to ensure correct handling of future data based on the specified parameter
[ # 3441 ] fix admin account management ( # 3442 )
added a call to setAcceptQueueSize in ThriftHttpCLIService to set the acceptor thread size for better resource management
replaced direct calls to ` getClass ( ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` to improve code readability and maintain
added a check to return true if the scheme is " ssl " to ensure proper handling of SSL connections based on the composite data scheme
replaced ` UserException. parseError ( e ) ` with ` UserException. validationError ( e ) ` in ` DrillSqlWorker.
updated the calculation of duration in GCInspector. java to ensure that the duration value may be zero for a really fast collection
refactor Javadoc comment handling to use a filter for better readability to improve code clarity and efficiency when processing Javadoc comments
replaced the ` getUnsafe ( ) ` method with a ` isOsx ( ) ` method and updated the ` readReservedMemory ( )
added two calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner. java ` to ensure proper handling
hbase - 2496 hbaseadmin. getoperationinfo ( ) should print procedureid and table name
camel - 16400 : camel - cxf - allow to set the service class for the cxf endpoint.
refactor YamlChangeLogSerializer to use a map for storing database change sets to improve clarity and maintainability of the code
replaced ` println ( ) ` with ` print ('\ n') ` in ` SchemaPrinter. java ` to improve readability of output
remove roads regeneration code from schematichandler
replaced ` getContext ( ) ` with ` getActivity ( ) ` for ` HomeFragmentNowPlayingRow ` and ` HomeFragmentFooterRow ` to
replaced ` @ GeneratedValue ( strategy = GenerationType. AUTO ) ` with ` @ GenericGenerator ( name = " native " ) ` in multiple
removed the country parameter from the ` getSystemTimeZoneID ` method to simplify the code by eliminating unnecessary dependency on the ` user. country `
added position and remaining parameters to the output stream in BZip2Codec. java and modified ByteBuffer allocation in TestBZip2Codec. java
move logger initialization to app frame.
added a constant VALUE _ TYPE _ EMPTY and modified the create method in Value. java to improve code clarity and ensure consistent handling of empty values
replace ` ` = ='' and ` ` = ='' with ` `. equals ( group ) '
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
updated the SimplexNoise class to improve noise handling to enhance performance and reliability of noise generation
added a new method ` newInstanceExact ` to create instances of ` TargetNode <?,? > ` in ` TargetGraphFactory ` to
patch by brandon ; review by jb ; review by jb
add a version adapter to the metadata collection. fix # 486.
modified the handling of the last element in the NativeArray to ensure proper deletion of the last element when the current element has changed
updated file handling logic in FileUploader. java to ensure correct parent file ID is set for uploads
added a new class UTF8ReaderBug with a test for supplementary characters to ensure proper handling of supplementary characters in XML parsing
added unit test base on user forum issue
updated expected values in BinanceIntegration and BinanceUsIntegration tests to include " ethbtc @ depth20 " instead of " ethb
added a method ` resetAllocation ( ) ` to the ` Wrapper ` class and invoked it in ` SimpleParallelizer ` and ` SimpleParallel
removed import statement for AssertTree in AmbariManagementControllerTest. java to streamline test code by eliminating unused imports
refactor system property handling in mmm Agent. java and add a new AgentCMETest. java file to ensure thread safety when accessing system
refactor ModelUtils class structure to improve code maintainability and readability
refactor AbstractDoubleArrayAssert class structure to improve code readability and maintainability
updated width and height calculations in Legend. java to handle cases with fewer than one label to improve layout accuracy and prevent potential ArrayIndexOutOfBoundsException
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf `, ` TestResponse
replaced the use of ` d. get ( fieldName ) ` with ` d. getValues ( fieldName ) ` and added a loop for adding term
replaced the use of ` BuildRuleResolver. requireRule ( ) ` with ` new BuildTargetSourcePath ( ) ` in ` Omnibus.
add a new chat message when the botania versioning be disable
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` variable in ` MediaFolder
removed the argument " - b " from the command string in AidlStep. java and GenAidlTest. java to streamline command
added test case for issue # 79
removed TODO comment in FakeHttpLayer. java to improve code clarity and maintainability
replaced handleError method with revokeLeadership method in EmbeddedLeaderService. java to ensure proper handling of leadership issues
compositediscoveryclient to use flowable. fromarray instead of stream.
replaced calls to ` applySystemConfiguration ( ) ` with ` applyQualifiers ( ) ` in multiple files to improve clarity and consistency in configuration
[ hotfix ] [ runtime ] add description for jobmanager. job. recovers. max. attempts - kept - in - history
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` and updated visibility logic based on search mode to improve user interface responsiveness and
refactor WstxInputFactory and WstxOutputFactory handling in XmlUtil. java and improve error handling in MultiVersionXmlParserTest
refactor ` AuditAliasCommandIntegrationTest ` to use a private ` ProjectWorkspace ` variable and add a ` setUp ` method to improve test setup
removed logging statements for header view height and recommended widgets in WidgetsFullSheet and WidgetsRecommendationTableLayout to streamline logging and
camel - 7999 : camel - cxf : disable test that be not applicable in this scenario
added error handling for periodical refresh failure in CachedStore to improve robustness by logging errors during periodical refresh failures
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use @ RequiredArgsConstructor and streamline provider management to improve code clarity
added checks for default background and foreground color in HSSFCellStyle. java and refactored background handling in HSSFPalette. java to
refactor ZonedDateTimeFormatterBenchmark. java to improve code readability and maintainability
refactor the ` shouldBufferUpdate ` logic in ` DistributedUpdateProcessor ` and add a new test class ` DistributedUpdateProcessorTest ` to improve
added a null check for the stage number in the simulation list handler to ensure proper handling of null motor cases when the stage number is not available
add / editscript / replacereplaceid and / editscript / replacereplace to allow replace of a block.
updated ExtendedMasterSecretExtension. java file to improve code clarity and maintainability
changed the declaration of the InputProcessor variable to be final to ensure immutability of the processor variable
added a listener to handle Reached end of stream in WritableKeyProcessor to improve handling of stream closure during write operations
added a new column " CUBE " to the MySQLDatabase class to support new database connections
added a try - catch block around the resource removal in the TestReplicationHandler class to handle potential IOException during resource cleanup
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods to improve clarity and consistency in
refactor DefaultOkHttpClientFactoryTest to use reflection to improve code readability and maintainability
refactor BatchUpdateException, PreparedStatement, and Statement classes to improve code organization and maintainability
added a null check for the'os'variable in RawMessageContentRedirectInterceptor. java to prevent potential NullPointerException when'os'is
ggb - 1965 fix for desktop apps
modified jailerMain method to include a ` fromCli ` parameter and added a conditional check for ` fromCli ` to enhance functionality by
refactor HttpRequest class for improved readability to enhance maintainability and facilitate future updates
added a preference for the pull unread status in shared preferences to track and manage the unread status of the pull notification
fix isnullnode. replacefirstinput ( parent, parent. object ( ) )
updated rendering parameters and improved camera handling in Box2DTest and Pong classes to enhance performance and ensure correct camera behavior
refactor RecyclerView initialization logic in ViewPostDetailFragment. java to improve readability and maintainability of the code
updated log level from trace to warn for aborted background operations to improve visibility of critical issues in background operation management
added debug output for method instance flags in JimpleBodyBuilder. java to improve visibility of method instances in the code
ggb - 2657 fix for ie10 + : don't call app. invokeLater ( callback )
updated the ` getNotificationUsers ` method to include a device ID parameter and modified its implementation to include the device identifier for notification users
updated the baseUrl to point to SRT - ZIP and SRTM - V41 / SRTM _ Data _ GeoTiff to
modified the file chooser behavior in MotifFileChooserUI. java and added a new test class bug6520101. java to improve user
change return value from void to boolean in hollowdiffui, hollowhistoryui, hollowexplorerui
refactor ` getRuleOptional ` and ` getRuleOptionalWithType ` methods for improved handling of ` BuildTarget ` and ` Class < T > ` to
added visibility logic for the transport spinner in HostListActivity to improve user experience by hiding the transport spinner when making a shortcut
added null check for attributes _ field in Attr. java and created new classes T7043371. java and T7043371. java
fix issue with back press on medium detail fragment
added support for long view index configuration in QueryServices and related classes to enable or disable long view index functionality based on user - defined settings
updated string formatting in SDRTrunk. java to improve readability and maintainability of the code
replaced a method call to ` with ` StringUtils. cleanPath ` with a new utility method to improve code readability and maintainability by using a
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method calls to simplify the method signature by eliminating unnecessary parameters
update IndexWriter configuration to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest Lucene releases
hbase - 25764 add option to disable column family check
[ java ] change logrecordingchannel to logsubscriptionid to be null.
replaced startActivity with startActivitySafely and added visibility control for the voice button proxy view to improve user experience by ensuring the voice button opens
added a check to skip processing for the first JSON node in PoloniexStreamingService to ensure that only valid JSON nodes are processed
refactor Procedure class structure to improve code maintainability and readability
added Locale. getDefault ( ) and ClassLoader. getSystemClassLoader ( ) parameters to the applyResourceBundle method to ensure consistent resource bundle retrieval across different locales
added a new class NormalizeArrayCreationsKotlin and modified Backend. java to include this class to enable proper handling of array creations in
modified conditional logic in PerSegmentSingleValuedFaceting. java to handle cases where mincount is less than or equal to zero to ensure accurate
use objects. firstnonnull ( ) instead of optional. fromNullable ( )
added a new test class ` OSGiTest ` and implemented imports for ` com. google. gson. annotations ` and ` sun. misc `
ticket ticket ticket ticket ticket # # # # # # # # #
hbase - 25816 clear buffer on fail in htable.
fix : ctstatement. getThenstatement ( ) cast to ctstatement. getThenstatement ( )
added a method ` hasUserData ( ) ` to the ` SimpleFeatureImpl ` class and a corresponding test in ` SimpleFeatureImplTest `
removed ` HiveException ` from method signatures in ` DDLPlanUtils. java ` and ` ExplainTask. java ` to simplify method
refactor RelyingPartyRegistration class structure to improve code maintainability and readability
removed the ` enableLogging ` method from the ` JavaCompiler ` class to streamline logging configuration by eliminating unused logging functionality
added a new file ` InJavaSourceSet. java ` and modified ` UsesJavaVersion. java ` to include markers for Java source sets
added functionality to check the existence of a fits file in the TestGDALParser class to ensure the file exists before proceeding with the test
added a static method ` createGetter ` to create a getter for an object with a specified attribute to facilitate the creation of getter instances
removed the check for useExtStorage in the conditional statement to simplify the code for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` in ` IndexerMapReduce ` and updated ` ObjectCache ` to use it
api : don't allow snapshot id to be pass while create a volume
updated the content assignment in ToHtml. java and modified the assertion in BaseTestCellComment. java to ensure that the content is never null
added handling for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate `, ` LocalDateTime `, and ` ZonedDateTime ` classes
added a new file ` Issue382. java ` with multiple error handling tests for ` IllegalArgumentException `, ` IllegalStateException `, and
replaced the static signum method with a static import for Integer. signum and simplified the return statement to streamline code and improve readability by eliminating
added logic to hide the text holder when a condition is met to improve user experience by preventing unnecessary text display
fix ( ctimport ) : use getimportkindfor ( ) instead of getelement ( )
simonstewart : fix compilation error
add bucketpickup to liquidblock, close # 61422
http : / / issues. apache. org / activemq / browse / amq - 22902 - fix intermittent failure
updated time zone from PST to America / Los _ Angeles in LocaleProviders. java to ensure compatibility with the latest time zone
replaced instances of ` existingObservation ` with ` distinctObservation ` in ` DistinctErrorLog. java ` to improve clarity and consistency in handling
updated system property checks in ` LuceneTestCase ` to include ` TestGroup ` annotations to enhance test flexibility by allowing multiple test group configurations
replaced ` createLogger ( ) ` with ` getOrCreateLogger ( ) ` in ` SQLEditorSupport. java ` and added a newline
add deny access to graal context to allow access to class.
use get ( ) instead of get getRGB ( ) in pgraphics2. updatepixels ( )
updated HiveUtilities. verifyAndAddTransactionalProperties to include partition and table properties to ensure correct handling of partition and table properties
refactor ` shouldScrollOverlay ` and ` shouldZeroOverlaySroll ` logic in ` Workspace. java ` to improve handling of overlay scroll behavior
hhh - 147642 - add batchbuilderimpl and batchbuilderinitiator to make it easy to implement batchbuilder and batchbuilder
improve error message when an unexpected input be reach
added unit test for MockWithStaticStateDemo in PartialMockingRetainsStateTest. java and created MockWithStaticStateDemo. java
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest. java ` to validate SQL parsing and depar
added error handling for ugi in SecurityUtil. java to improve robustness by handling potential IOException and RuntimeExceptions
refactor error handling in OpenALMusic to use a variable for error code to improve code readability and maintainability by reducing redundancy
rename endpointhelper. reslovestringparameter to endpointhelper. resolveparameter.
refactor RexNodeConverter to improve precision and scale handling to enhance precision and scale handling for DECIMAL types
replaced direct calls to getVendorProperties ( ) with Optional. ofNullable ( ) in WebAuthnMultifactorDeviceProviderAction. java
updated the method call to use ` Long. toString ( now ). getBytes ( ) ` instead of a hardcoded ` testName ` string to improve
replace AxialStage with RocketComponent in BasicFrame. java and update selection logic in DesignPanel. java to improve code clarity and ensure
added a longRunningTime parameter with getter and setter methods in Args. java to allow configuration of the long running time in the application
updated comparison logic in ` FindRefComparison. java ` and added a new class ` Ideas _ 2012 _ 05 _ 21. java `
replaced ` sun. misc. ServiceConfigurationError ` with ` java. util. ServiceConfigurationError ` in ` HttpServerProvider. java ` and
gml3encodingtest : use decimal. tostring ( ) instead of decimal. tostring ( )
updated assertions in TestRestClientRequestImpl. java for consistency to improve readability and maintainability of the code
added a condition to check if the database is the same as the backing index before proceeding with existing constraint checks
refactor IjProjectTemplateDataPreparer to streamline asset path handling to improve code readability and maintainability by reducing redundancy
replaced assertEquals ( 0, s1122. getRequests ( ) ) with await ( ). atMost ( 5, TimeUnit. SECONDS )
added user _ args and timestamp fields to ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance the functionality of the build process by including
[ gr - 259657 ] fix loading of resource bundle for java 11 +
change log level from " match limit " to " match order " to improve clarity of log output
added a new file TheRockMetaDataDemo. java to demonstrate the functionality of exchange metadata
renamed FloatingDecimal and FormattedFloatingDecimal classes to strictfp and added a new test method for strictness to improve code clarity and prevent conversion
removed unparseIdentifier method call from columnNamesBuilder to simplify the code by eliminating unnecessary unparseIdentifier method
added a test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified variable declaration handling in ` BlockStatementTemplateGenerator `
added a check for non - synthetic methods in the InstantiateStaticClass class and created a new test method in Bug1282 to ensure
removed the call to projectFilesystem. getPathForRelativePath ( basePath ) in WorkspaceAndProjectGenerator. java to simplify the code by eliminating unnecessary
added handling for pending rescue and pending conditions in IkStepDefinition. java to improve responsiveness and ensure proper handling of pending rescue and conditions
removed the ` final ` modifier from ` equals ` and ` hashCode ` methods in multiple type classes and added ` equals ` and ` hashCode `
added a new method ` getSyncLevel ` to retrieve the default sync level to improve error handling and provide a way to retrieve the default sync
fix flakiness of controlcommandstest
added a condition to check if the slice state is neither CONSTRUCTION nor RECOVERY to ensure that the recovery logic only proceeds
updated the parameter order for the create method in opencv _ core. java to ensure the correct depth parameter is used for creating images
added a ` sdkPath ` variable to ` AppleBundle ` and modified ` makeProcessExecutorParams ` method to include ` ExecutionContext ` to
[ hotfix ] [ runtime ] remove unused lock from transientblobcleanuptask
server : fix the error message for static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code maintainability and readability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of
refactor BetterBlockPos class for improved readability to enhance maintainability and facilitate future updates
updated the proxy retrieval method to use the class loader to ensure proper loading of the servlet context
updated version handling to differentiate between nightly and nightly builds to improve clarity and maintainability of the code
added support for OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing and duplicated characters in SQL statements
added a new boolean constant for UNKNOWN _ VALUES _ ARE _ NSP to control the behavior of null value analysis
simonstewart : fix test failure on window
updated variable names and calculations in DrawAudio. java for clarity and consistency to improve code readability and maintainability by using more descriptive constants
added multifactor authentication provider configuration to DuoSecurityMultifactorProviderBypassConfiguration to enhance multifactor authentication functionality for better
removed the ` rotate ` parameter from the ` findPositionForNewNodeBestAreaFit ` and ` findPositionForNewNodeContactPoint `
[ drools - 4892 ] fix checkstyle violation in org. drools. model. kiecontainer
added methods to set and get the help page in the PMS class and refactored the updateContents method in HelpTab to improve code
added GeocodeProviderFactory and Constants interface, and created GeocodeProviderFactory and Constants classes to provide a unified GeocodeProviderFactory and Constants
updated import statements for CharArraySet in LuceneAnalyzerUtil. java and LuceneTokenizer. java to ensure compatibility with the latest Lucene features
refactor test cases in OptionTest and ResourceManagerImplTest to use try - catch blocks for exception handling to improve test reliability and ensure proper exception
updated GATEWAY _ SERVER _ ID string to use Protocol. GATEWAY _ SERVER _ ID and modified memory management condition in MemoryCommand
simplified conditional checks in SegmentsInfoRequestHandler. java and refactored collection creation in CollectionsAPISolrJTest. java to improve code
updated the calculation of numPredictiveAppCols based on device type to ensure correct number of app columns for different screen orientations
added a method ` hasScalarSubqueryInput ` in ` JoinUtils ` and refactored the ` hasScalarSubqueryInput ` logic
add a craft block that keep the inventory when a block be remove.
updated gravity and layout parameters for the target bar in DeviceProfile. java to improve layout responsiveness and ensure proper sizing of the target bar
replaced the run ( ) method with start ( ) in YahooSession. java to ensure proper execution of the Yahoo session
replaced the standAloneClient check with a null check for the client in HiveMetaStoreClient. java to improve clarity and prevent potential null pointer
updated the getDisplayScript method to use a default category for DISPLAY and added a test for bug 7079486 to ensure that the display script
updated references from ` BASE _ URL _ PROP ` to ` CORE _ NAME _ PROP ` in ` Replica. java ` to ensure consistency
replaced ` ThreadLocalRandom ` with ` Random ` for randomness in ` StoreDirectTest. java ` to improve randomness and avoid potential issues
added a check for the launcher state before backuping Favorites, icons, and widgets to ensure the backup process only occurs when the launcher is
replaced instances of ` throw new IllegalArgumentException ( " space " ) ` with ` throw new IllegalArgumentException ( " space " ) ` to improve
added unit test for resilience in camel - jbang
changed method names from ` getBodySpace ` to ` getBarSpace ` across multiple dataset classes to improve clarity and consistency in naming
refactor ShadowProcess class to improve code readability and maintainability
fix flakiness of filemessagehistorytest
added logging statements for express, quartz, reflections, eclipse, jetty, and mongodb in Grasscutter. java to enhance logging capabilities
lucene - 4892 : fix highlighting of n - distinct query
modified the condition for exiting overview mode in the launcher and added a method to retrieve the current state in the Workspace class to ensure proper handling of
updated multiple assertion classes for consistency to improve code maintainability and readability
updated conditional check for ` UseSnippetTemplateCache ` and ` cacheable ` in ` SnippetTemplate. java ` to ensure correct handling of template
added SCOPE _ SOLR _ CORE and SCOPE _ SOLR _ CORE constants, and refactored variable handling in DataImportHandler
added a primary key for the measurement table in DatabaseMetaDataTest. java to ensure that the measurement table has a valid primary key
rename ` -- permissions - config - path ` to ` -- permissions - config - file `
removed redundant null check for httpSession in HttpSessionContextIntegrationFilter. java to streamline session creation logic and improve logging clarity
; ; ; ; _ _ _ _
rename ` ` englishud'' to ` ` englishUSD''
refactor SnowflakeIdGeneratorTest to enable and disable HighResolutionTimer during test execution to improve test reliability by ensuring HighResolution
added a staticUi flag to AppSettings and modified toast bar visibility logic in MainFragment to enable dynamic visibility of the toast bar based on user
modified the return statement in WindowsSecurity. java to include a try - finally block to ensure proper resource management and prevent potential memory leaks
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added a check for ` clientId ` in ` Wh
updated dialog messages to use localized strings instead of hardcoded strings to improve maintainability and readability of the code
tika - 3864 -- add tika - ooxml and tika - openxmlformats - officedocument. spreadsheetml.
added logging for loading glues and improved logging for features to enhance debugging and provide better insights during feature loading
camel - 15836 : camel - aws2 - eip - documentation - enricher now work on window.
fix race condition in migrationcoordinator. scheduleschemapull
added debug logging in DeviceConfiguration. java and refactored audio notification handling in PortAudioAuto. java to improve debugging capabilities and ensure correct
added WebsocketConfig class with getter and setter methods in ShenyuConfig. java and updated ReactorNettyWebSocketClient initialization in WebSocket
fix : cachevalidationlistener be not thread - safe
added a check for non - empty content length before adding it to the document to ensure that the content length is only added when it is not
solver job : fix synchronization issue
added handling for PathAlreadyExistException during timeseries creation to improve error handling for concurrent inserting timeseries
added a new method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check for a boolean result
changed access modifiers from public to protected in multiple classes to allow subclasses to access these methods while maintaining encapsulation
server : fix list reserved / free public ip in project ( # 6198 )
modified the default value string assignment logic in HttpParser. java and updated test cases in HttpParserTest. java and HttpParserTest. java
refactor J9VMInternals and Thread classes to streamline initialization process to improve code clarity and maintainability by reducing redundancy
added implementation of ` getExternalStoragePublicDirectory ` in ` ShadowEnvironment ` and created a corresponding test in ` EnvironmentTest ` to ensure that external
[ jbrules - 4071 ] add test case for mvel type coercion
removed unnecessary imports and improved formatting in LoggingConfig. java to enhance code readability and maintainability
added exception message to log message to improve debugging by providing context about the exception being thrown
added logic to extract the tel number from the number if it starts with " tel : " to ensure the number starts with " tel : "
refactor visibility logic for sharedWithMeIconV in FileListListAdapter. java to improve readability and maintainability of the code
removed the deprecated method HIVEOPTSORTDYNAMICPARTITION from HiveConf. java and updated its usage in TestTxnCommands3. java
refactor ExecuteStatementOperation and Operation classes to streamline configuration management to improve code readability and maintainability by reducing redundancy
replaced ` Lists. newArrayList ` with ` Arrays. asList ` in ` BTCMarketsStreamingAdapters ` and ` BTCMarkets
[ geot - 7470 ] [ geot - 7470 ] fix test failure
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to streamline error handling by eliminating unnecessary method
refactor Wallet class to improve code readability and maintainability
camel - 16400 : camel - netty - allow to configure the charset in camel - netty - http
replace system. out. println ( ) with log. info ( )
added a check to return false if the row index exceeds the size of the connectionList to ensure that the database connection dialog does not proceed with
pmd : add rule for method with same name as enclosing class.
added support for ExtendedPlatformComponent in ManagementFactory and created a new ExtendedPlatformMXBeanProxy class to enhance functionality for managing platform - specific JMX beans
replaced single quotes with double quotes in SQL string replacement to ensure proper handling of escaped characters in SQL queries
updated Bleutrade DTO tests to include the " org / knowm / xchange / bleutrade / dto / "
refactor TextEscapeUtils class to improve code readability and maintainability
added a filter parameter to the FilteredQuery instantiation in AbstractSpatialFieldType. java and introduced a new test in TestSolr4Spatial. java to
added progress display for auto - email sending in GpsLoggingService to improve user experience by providing feedback during email sending
replace ArrayList with HashSet and implement iterator for inlinks to improve performance and readability of the code
added a synchronized stopScan method to remove older results to ensure accurate removal of older results based on the current timestamp
updated test methods in HiveMetaStoreClient and TestFilterHooks to include a boolean parameter for filtering behavior to ensure correct behavior of filterForPartition
added'Abandoned'status to the TicketModel and added'Abandoned'status to the TicketModel and TicketsPage
removed redundant assignment of columnAliasPrefix in multiple platform classes to streamline code by eliminating redundancy
updated LlapRowRecordReader and LlapRowInputFormat to use BytesWritable instead of Text to improve performance by using BytesWritable instead of Text for
[ terasology ] don't run terasology on a 64 - bit system.
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 51
added a new daemon option to the RESET _ ALARM command and implemented daemon mode functionality in TerminalClient to enhance functionality by allowing users to
added a new file FlushIndexTask. java to implement the flushing of the index writer to facilitate the flushing of the index
patch by jbellis ; review by brandonwilliams for cassandra - 1315
added a condition to check if the expected output is SEASONS in MediaLibraryFolder. java to handle cases where the expected output is not
added a new file ` LocalSocketAddress. java ` to test IPv6 address handling in a DatagramSocket to ensure that IPv6 address is correctly
updated grid size points in GridSizeMigrationTask. java to align grid size points with new design requirements
updated method calls from ` getName ( ) ` to ` name ` in ` SerializerPojo. java ` to improve clarity and consistency in accessing class
added read - only context handling to the Context class to ensure that operations only execute in read - only contexts
refactor LookAndFeelCommand class to improve code readability and maintainability
fix off - by - one error in blockboxing
added imports for EOFException and EofException in GracefulStopTest. java to enhance error handling by checking for specific exception types
replaced multiple instances of ` lock. lock ( ) ` with ` lock. unlock ( ) ` in ` NetJavaImpl. java ` to
refactor NetworkParameters class to improve code readability and maintainability
updated allowAccountAssetOptimization logic in DynamicPropertiesStore. java to ensure proper handling of account asset optimization settings
; ; ; ; ; ; ; ;
added error handling for invalid contract protobuf in TransactionCapsule. java to improve robustness by throwing a more informative error message
remove ` ` exception type checking'' rule
updated localization for the help pre file and improved error message formatting to enhance localization support and provide clearer error messages
add processor info for vert. x and vert. x.
added support for generating an HTML output with a default stylesheet in the PrintingBugReporter class to allow users to specify the default stylesheet for HTML output
remove logbackxmllocation from logbackloggingsystem and make it final
refactor HostLevelParamsHolder to use ServiceComponentRecoveryChangedEvent instead of HostLevelParamsUpdateEvent to improve clarity and maintainability of the code
updated SleuthTagPropagationAutoConfiguration to conditionally create the handler based on the whitelisted keys to ensure that the handler is created by default
refactor rustDepType assignment logic to use a switch statement to improve readability and maintainability of the code
updated ` oauth2LoginLinks ` method to accept a ` MultiValueMap < String, String > ` parameter and added error handling in ` Login
hbase - 25880 improve halfstorefilereader # getfirstkey ( ) to avoid npe
hhh - 147642 - add generationtimemillis. always ( ) to generate timestamps.
add test for nd4j's layer normalization with non - nan value
replaced direct calls to ` showShareFile ( ) ` with ` mContainerActivity. getFileOperationsHelper ( ). showShareFile ( )
added a new test class LiquibaseUpdateMojoExecutionTest to validate the functionality of Liquibase plugin configuration updates
updated proxy type retrieval to convert it to uppercase to ensure consistent handling of proxy types across different environments
added a new file mod _ MinecraftForge. java that implements Minecraft forge functionality to facilitate the initialization of Minecraft forge with
refactor JdbcDatabaseSnapshot to handle tables of columns more effectively to improve efficiency and maintainability of the code
added a new Container with a border image and a label to the CSSBorderTest class to enhance the visual appearance of the dash background with a
make load balancer retry interceptor conditional on the presence of retry policy
changed the superclass parameter from FILL _ PARENT to MATCH _ PARENT in CellLayout. java to align layout parameters with new layout specifications
updated the calculation of ` parentTaskName ` to use ` System. currentTimeMillis ( ) ` instead of ` System. nanoTime ( ) `
added handling for UncheckedIOException in ServiceResourceProvider to improve error handling and logging for valid AddService requests
modified the return value of the ` isIndexVersionedFilesOnly ( ) ` method in ` IndexDatabase. java ` to ensure the method
ggbround ( x [ j ], 0, length ( x ) + i * ggbround ( x ), 0, length
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
added @ Deprecated annotations to methods in ProducerTemplate. java to indicate that these methods are outdated and may be removed in future versions
refactor JLayer class implementation to improve performance and maintainability of the code
increase wait time for eviction test
renamed the ` encodeInternal ` method to ` saltedPass ` and updated its usage throughout the ` Md5PasswordEncoder ` class to
updated method calls from ` getViewTreeObserver ( ) ` to ` getViewTreeObserver ( ) ` in ` IconRecentsView. java `
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
use long. max _ value instead of long. min _ value for max timestamp
set preferred size of security panel to 60.
added a null and empty check for replies in multiple classes to prevent potential null pointer exceptions when processing replies
added ` Objects. equals ` and ` hashCode ` methods to ` HitbtcBalance ` and updated ` HitbtcAdaptersTest `
refactor SqlCodeGenerator to improve column handling and add a new test for where clause with in statements to enhance code clarity and ensure proper handling of
updated return statement in RetriesExhaustedWithDetailsException. java to use addrs. toString ( ) instead of s to improve clarity and
replaced the method of opening an OpenCookie in EditGcodeFile. java to streamline the code by using the OpenCookie class directly
updated HTTP client imports from ` org. apache. http. impl. client. * ` to ` org. apache. hc. client5
modify energy removal logic in PipePowerWood. java to ensure energy is only updated when energy is available
added a check to delete the temporary file if it exists to ensure that the temporary file is removed when it does not exist
updated BitstampWebSocketTransaction constructor parameters and added new test cases in BitstampStreamingMarketDataServiceTest to ensure correct handling of trade data and improve
fix replayprocessor. peekstatetime ( ) and replaysubject. peekstatetime ( ) to return null when time be less than max age
updated the expectedCitation string format in CitationStyleGeneratorTest. java to correct the formatting of the expected citation string
added new column ` INSERT _ COLUMNS ` and refactored the SQL query for retrieving media entries to improve code readability and maintainability by
show only definition for exam in exam
fix a nullpointerexception in sipcommtextfieldui
added caching mechanism for scan operations in MetaReader to improve performance by optimizing scan caching
updated the initialization script from " q _ test _ init. sql " to " q _ test _ init _ for _ minimr. sql
refactor methods in Math and StrictMath classes to improve code readability and maintainability
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags. java to facilitate debugging by enabling transient taskbar
refactor AccessExecution, AccessExecutionVertex, ArchivedExecution, and AccessExecutionVertex classes to improve code organization and readability
added a condition to set density to 3f in IOSGraphics. java to ensure density is set only when scaling is set to 3f
renamed the ` optional ` variable to ` vararg ` in the ` Parameter ` class to improve clarity and consistency in naming conventions
hbase - 25836 regionstatestore should log exception to help diagnose failure
[ hotfix ] [ test ] fix flaky test in testclusterupgradetask
updated log messages and refactored connection handling in AsyncHttpConnection and AsyncContextTest to improve clarity of warning messages and enhance connection management
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to control the visibility of the ` title ` and ` subtitle
added lock mode handling in Database. java and removed the testSetMode method from TestRowLocks. java to ensure proper locking behavior for VMS
ignore big - endian test for linux / amd64 only
added handling for Integer and StringValue types in Scalars. java to improve type safety and prevent potential ClassCastExceptions
updated error handling for single and multiple PRIMARY KEYs in CreateTableStatement. java to improve clarity of error messages related to single and multiple primary
added conditional drawable resources for various UI components in CellLayout, Hotseat, and Launcher to enhance visual appearance for different UI components
fix an npe in vmservicemanager. getflutterviewslist ( )
added multiple HeadersConfigurer methods for content type, xss protection, cache control, HTTP strict transport security, and frame options to enhance header management
refactor ObjectEnumerableAssert class for improved readability to enhance code maintainability and facilitate future updates
simonstewart : move devtoolsprovider to devtoolsprovider
added type attribute to @ AggregateRoot annotation in EventSourcingRepositoryTest. java to improve test clarity by specifying the type of the aggregate
added functionality to resolve prebuilt libraries in the Python binary to ensure correct handling of prebuilt libraries in the Python binary
added handling for ` clientAuth ` in ` NetServerOptionsConverter ` and removed deprecated methods in ` HttpServerOptions ` and ` NetServerOptions
updated REPL directory paths to include the system version in HiveConf and MetastoreConf to ensure compatibility with different operating systems
refactor task view retrieval logic in RecentsView. java to improve clarity and correctness when determining primary and secondary task views
http : / / issues. apache. org / activemq / browse / amq - 2802 - add timeout to test that take a
removed the clearAll ( ) method from DataTableTopComponent. java to streamline the code by eliminating unnecessary calls
rename ` controller ` to ` flowController ` in multiple classes to improve clarity and consistency in variable naming
[ flink - 1860 ] fix operator tree generation for full outer - time join
added use of io. github. classgraph. classloaderhandler in module - info. java
refactor solve ( ) to solve ( planProblem ) and return the best solution in event thread
added JsonIgnore annotation to ApplicationSettings. java to prevent serialization of sensitive data during JSON processing
changed condition from checking if throwable is null to checking if it is not null to ensure proper handling of throwable to avoid potential null pointer exceptions
refactor query info retrieval logic in QueryTimeManager. java to improve readability and maintainability of the code
fix the auto worker not work when there's no material
fix hdop value for gl200 text
rename ` timeColumnName ` to ` incomingTimeColumnName ` and update related references to improve clarity and consistency in naming conventions
added multiple calls to ` HttpMethed. waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc
added support for the Initializable class in ContainerBuilder and created a new Initializable interface to enhance the functionality of ContainerBuilder by allowing initialization of
refactor TimerObservationHandler to use a new method for creating error tags to improve code organization and maintainability by encapsulating tag creation logic
replaced float SYNC _ DELTA _ RATE with double SYNC _ DELTA _ RATE and adjusted time calculation logic to improve precision
thymeleaf : fix issue with unwrapped fragment expression in thymeleaf 2.0. 0
changed the type of the _ attributes variable from HashMap to ConcurrentHashMap to ensure thread - safe access to the _ attributes variable
fix for http : / / issues. apache. org / activemq / browse / amq - 407
added new color constants and refactored color extraction logic in ColorExtractionAlgorithm. java to enhance color extraction functionality and improve fallback handling
added accessibility check for data folders in SketchBuilder. java to ensure only accessible data folders are added to the srcFolderPathList
updated the ` appendContent ` method in ` NotesHelper ` to include a ` includeTitle ` parameter to enhance functionality by allowing titles to be
removed instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl. java to simplify code by eliminating unnecessary instantiation
added logging for connection reconnection success and failure in NettyStreamingService. java to improve error handling and debugging when reconnecting fails
replaced instances of ` Factory ` with ` Proxy ` in multiple test files to ensure compatibility with the latest Javassist API
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` and updated the type of ` _ threads ` from ` ConcurrentLinkedQueue ` to `
refactor socket exception handling to improve clarity and maintainability to enhance code readability and facilitate easier debugging
added a check to see if the view path is under the repository to provide feedback when the view path is under the specified repository
added drag - over and drop handling for the tab header area in JabRefFrame. java to enhance user experience by allowing users to drag
# # # # # # # # # # # # # # # #
removed an error log statement when update log is not in ACTIVE or REPLAYING state to streamline error handling for outdated update logs
deleted the ConnectionHook. java file to remove unused code to streamline the codebase
removed ` waitForInSyncWithLeader ` and ` waitForReplicasInSync ` methods from multiple test files to stream the test by eliminating unnecessary
( chore ) camel - swagger : fix parameterassert. assertthatthrownby ( ` ` int'' ) )
updated version handling in ApexLanguageModule and added a new method hasNamespaceGuardedAccess in TestAccessEvaluator to ensure compatibility with the latest
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread pool management to improve thread management and resource management
replaced ` StandardByteBufferPool ` with ` ByteBufferPool ` in ` WebSocketAsyncConnection ` and ` WebSocketServerFactory ` to improve memory management and
added scrollToPositionWithOffset logic for thumbnail views in UploadActivity. java to ensure thumbnails are displayed in the correct position based on the selected index
fix : ` ` timestamp'' can not be override by other column alias
refactor ` LauncherAnimUtils ` and ` LauncherAnimUtils ` to improve animation handling and state transition animation to enhance code clarity and maintainability while
added a check to disable the default user agent in the HttpClient builder to ensure proper handling of default user agent configuration
added a check for the pubsubhubbububububub property in ApplicationSettings and modified FeedRefreshUpdater to conditionally handle pubsubsub
changed the access modifier of the finalize method from public to protected to allow subclasses to access and override the finalize method
renamed the method ` isAnonymousOrLocalClass ` to ` isAnonymousOrSyntheticClass ` and added a check for synthetic classes to
[ ds - 3441 ] add rest web application to the web application.
added null check for ` leftTableAlias ` in ` CalcitePlanner. java ` and implemented ` getTableAliasContainingColumn ` method in `
[ hotfix ] fix typo in jobgenerator
updated log level from info to warn for broadcast transactions in Wallet. java to improve clarity of log messages related to transaction failures
fix checkstyle issue in com. hazelcast. core. basicmaptest
rename rcfileOptimizedWriterEnabled and rcfileWriterValidate to improve clarity and consistency in naming conventions
added a new enum ` TlsClientCertPolicy ` and refactored client certificate handling in ` GitBlitServer ` to improve flexibility
updated logging for subscription failure in KrakenFuturesStreamingService. java to provide clearer feedback when a subscription fails
added support for handling Sec - WebSocket - Protocol in WebsocketRoutingFilter to enhance WebSocket protocol management and improve request handling
added debug log statement for HiveQueryResultsFetchReq to improve visibility into the fetch request for better debugging
updated formatting for dimensions in HolidayEventFormatter. java to improve readability and maintainability of the code
refactor methods in FinalizePrivateFieldsTest and FinalizePrivateFields to improve clarity and functionality of inner class handling
refactor UnexpectedJobExecutionException class to improve code clarity and maintainability
removed ` jdk. internal. loader ` export from ` java. desktop ` and removed the ` shouldUseOpaqueButtons ` method from ` A
updated maxFreq and maxCost calculations in DrillSidewaysQuery. java and DrillSidewaysScorer. java to improve accuracy of
added GeoDegeneratePath class to StandardObjects. java to enhance the functionality of the GeoDegeneratePath class
removed pre - fill parameter from various pool classes to simplify constructor parameters and improve performance
added logic to update the taskbar stash state based on the launcher state to ensure the taskbar stash state reflects the current state of the
added null check before comparing styles in CascadeDeleteVisitor. java to prevent potential NullPointerException when comparing styles
refactor GuiUtil to use a unified setSize method and update MarqueeLabel constructor to improve code readability and maintainability by centralizing preferred and preferred
refactor icon retrieval logic in FileTreeViewHolder. java to improve readability and maintainability of icon handling logic
updated assertions from isEqualTo ( " v18 " ) to contains ( " v18 " ) in ParallelUniverseTest. java to ensure
fix concurrentmodificationexception in xmlreporter
add test native probability function for presto native driver
added ShutdownThread deregistering to ClientContainer to ensure proper resource management during shutdown
sybase : drop temporary table after use for sybase
simonstewart : fix htmlunitdriver to work with htmlunit 2. x
updated multiple Solr - related Java files to improve code organization and maintainability
updated LinksIndexingFilter. java file to improve indexing efficiency
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit. java to improve clarity of reserved memory addresses for the
fix ad playback state when there be no ad group
added a suppression warning for UndefinedEquals in MultimapSubject. java to suppress the warning about the contract of this method
updated the frequency string resource from ` deg _ text ` to ` unit _ hz ` in ` WaveGeneratorActivity. java ` to
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
replaced the method call to ` putAll ` with a constructor that initializes the TreeMap directly from ` includedLabelSets `
fix npe in vertex lighter due to null vertex format.
added tracing context checks for message sending and message received in multiple interceptor classes to ensure that messages are visible when tracing is enabled
updated TimeZone handling in ScheduledTrigger. java and removed the @ BadApple annotation in ScheduledTriggerTest. java to improve accuracy of time zone representation
added ` AsyncBucket ` class and ` InMemoryExtension ` class, and modified ` Bucket ` and ` ConfigurationBuilder ` to utilize it for asynchronous
updated resexhausted003. java to use regex for class directory extraction to enhance flexibility in class path handling and improve error messaging
removed redundant whitespace and improved formatting in the setHost method to enhance code readability and maintainability
refactor OngoingStubbing class to improve code readability and maintainability
updated the ` getValidWebServerPort ` method to accept an optional ` Optional < WebServer > ` parameter and added logic to reuse the web server
rename ` productConstructor ` to ` constructor ` in ` HttpClientUtil. java ` and introduce ` SolrHttpClient ` in ` SolrTestCaseJ4
added a check to ensure that the thread allowlist is not empty before clearing it to prevent potential errors when attempting to clear the allowlist
replaced the method ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests. java ` to ensure the correct output source
added a conditional check for the HitPolicy in DMNDTAnalyser. java and modified the return logic in OverlapHitPolicyTest.
add test for sliding windows combine
added a conditional check for ` allAppsDirty ` before binding all apps and improved logging for app icons to ensure that app icons are only bound
[ hotfix ] [ test ] remove the running flag from managedfilelwatcherreloadstrategytest
refactored the Solution class to improve code readability to enhance maintainability and facilitate easier debugging
updated AquaMenuBarUI. java to utilize AccessController and GetBooleanAction for deprecated usage to improve compatibility with different operating systems and enhance
setrawlocation ( location, fall ) now set fall distance to 0.
refactor query handling in SimpleJpaRepository to improve clarity and functionality to enhance code readability and maintainability while ensuring correct query results
added timestamp, parent hash, nonce, and number properties to BlockUtil. java to ensure correct handling of genesis block parameters
remove safepoints from loop safepointinsertionphase
added null and empty checks for child lists in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to improve robustness by preventing null pointer
changed visibility of several methods in ArtifactResolver from package - private to public to allow access to these methods from other packages
fix race condition in chunkprocessingpipeline. dispose ( )
added a check to ensure maxBufferedDocs is at least one to prevent potential errors when maxBufferedDocs is less than one
added functionality to manage the state of the login process in LoginActivity to improve user experience during the login process
added null check for source returned null element in Pump. java and implemented a test for UUID reverse in PumpTest. java to ensure
refactored HttpShardHandlerFactory and LBHttpSolrServer to use a dedicated createLoadbalancer method and changed access modifiers from private to
changed the default order of ` BaseAuthenticationServiceSelectionStrategy ` from ` LOWEST _ PRECEDENCE ` to ` HIGHEST _ PRE
added imports for Server and HandlerList in TestJNDI. java to enhance server functionality and improve code organization
updated method calls and added assertions for child operators in SortedDynPartitionOptimizer. java to improve code clarity and ensure correct handling of child operators
modified the return value of the ` isEventLoop ` check from ` NioEventLoop ` to ` true ` to ensure that the ` isEventLoop `
updated the logic for setting ` newNumNulls ` to account for ` newNumRows ` to ensure that the number of nulls does not exceed
camel - 1860 : camel - jbang - export kamelet and camel - endpointdsl to be able to use kamel
replaced OkHttpOAuthConsumer with an AtomicBoolean for authorization handling to ensure only authorized users can upload to OpenStreetMap
remove system. out. println
added clientAuth property and its getter / setter in IoTDBRestServiceConfig. java, and modified RestService. java to include client
updated the initialization of mocksToBeInjected in PropertyAndSetterInjection. java and added a new ChildWithSameParentFieldInjectionTest. java
updated BloomUriUniqFilter and BloomUriUniqFilter to use BloomFilter64bit instead of BloomFilter32bitSplit and
changed the default value of getCursorAdapter from false to true and added a preference for refreshing me to ensure the UI reflects the current state
updated the intermediate header height ratio from 1f to 75 f to improve the responsiveness of the layout
replaced RuntimeEvent with RecompilationEvent across multiple Java files to improve clarity and consistency in event handling
added support for system prepped hosts in multiple classes to enhance flexibility in managing system packages
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog ` and created a corresponding test
added a loop to remove the last slash from the location string to ensure proper handling of trailing slashes in the location string
added support for entities, scores, urns, and scores in the StaticPipeline class to enhance functionality for processing entities, scores, urns
refactor filename and source handling in Frame. java and update Whoops initialization in Utils. java and WhoopsModule. java to improve
[ geot - 7470 ] [ geot - 7470 ] fix nullpointerexception when look up a catalog
refactored assertions in Assert. java to improve code clarity and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added a new ` MultiLineJaggedTextTests ` class
http : / / issues. apache. org / jira / browse / amq - 4237 - fix test
refactor TsFileWriteAlignedWithTSRecord and TsFileWriteAlignedWithTablet to use measurementSchemas instead of writeMeasurementScheam

updated log file name from " slf4j - log4j12 -. * " to " slf4j - reload4j -
updated the assertion in HueBridgeHandlerOSGiTest to use waitForAssert for better synchronization to improve reliability of the test by ensuring
updated package structure and import statements for various activities in the codebase to improve organization and clarity of activities within the project
jbrules - 1276 : add @ ignore annotation to kiecontainerproblemfactchange test
added a constructor to PullRequestMergedEventsStream for reading Pinot schema from a file to enhance the functionality of the PullRequestMergedEventsStream
refactor AbstractExpressionPart class to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in taskslot
replaced occurrences of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` NettyWebSocketTest `
modified lock release logic in MoveTask. java to handle LockException to improve error handling and logging for lock release failures
refactor JRubyBackend to use ResourceBundle for retrieving GEM _ PATH and RUBY _ VERSION to streamline resource loading and improve error handling
transaction : use byteutil. empty _ byte _ array instead of a static constant ZERO _ ADDRESS
refactor class loading logic in ClassGraphClassLoader. java to improve readability and maintainability of the code
[ hotfix ] [ test ] fix test failure in jobmanagerstartuptest
feat ( v1beta1 ) : add v1beta2 and v1beta1 to the list of cloud datastream resource ( #
added a new Bundle to set extras in FileDisplayActivity to ensure proper handling of extras in the builder
changed the condition from ` break ` to ` continue ` in ` ParticleEmitter. java ` to ensure proper handling of null particle scenarios
updated expected values in AmbariManagementControllerImplTest. java from 4 to 3 and changed the expected value in AmbariManagementControllerImplTest
removed the nullable attribute from the TransientSessionTicketImpl annotation and added handling for NoResultException in JpaTicketRegistry to simplify the schema and
updated Bug4823811. java file to improve code organization and maintainability
updated path reversal logic in RmStep. java to ensure correct handling of path reversal based on the context's path relativization
modified the ` requestFullState ` method to accept a boolean parameter indicating if it is an initial request to enable periodic request handling based on the
refactor ShibbolethCompatiblePersistentIdGenerator to improve attribute handling and streamline hashing process
updated the @ Inject annotation in RequestValidationService. java to ensure proper injection of the RequestValidationService
refactor keyboard hiding logic in UiThreadHelper. java to utilize a Bundle to improve user experience by conditionally hiding the keyboard based on the presence of
removed redundant calls to ` MManager. getInstance ( ) ` and added imports for TsfileDBConfig and TsfileDBDescriptor to
refactor NavigableMap and NavigableSet implementations to improve performance and maintainability of the code
add a test for slurpfile ( ) to verify that it don't throw exception.
added @ FunctionalInterface annotation to multiple classes to indicate that these classes are intended to implement functional interfaces
refactor span naming logic in TraceWebFluxTests to use a new method to improve readability and maintainability of the test code
added support for DateWritable in ETypeConverter and related classes to enable handling of date - related data types in Hive
updated regex pattern for splitting strings in StyleConverter. java to ensure proper handling of whitespace in style sequences
ggb - 2652 : make sure positive number be valid before convert to double
refactor column count handling logic in SemanticAnalyzer. java to improve clarity and maintainability of the code
refactor scoring logic in WANDScorer. java to improve clarity and correctness of scoring logic
refactor Correspondence class for improved clarity to enhance code maintainability and readability
updated import statements in PaintSetEnabledDeadlock. java to improve code clarity and maintainability
modified the initialization of ` curPixVal ` in ` XRSolidSrcPict. java ` and added a new ` WhiteTextColorTest
replaced ` List < Type > subTypes ` with ` Collection < Type > supertypes ` in ` BiomeDictionary. java `
rename ` withinTolerance ` to ` exceedsTolerance ` in ` BoundedLocalCache. java ` to improve clarity by accurately reflecting
added test stability rules for LOCAL and PLATFORM _ POSTSUBMIT in TaplTestsLauncher3. java to enhance test stability for
updated package - info. java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure ` logFileSuffix ` is not empty before proceeding with operations
refactor PythonBuckConfig class to improve code readability and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of system shared library names in the package manager
fix meiligao meiligao extend info
added a null check for the tile variable in PowerDiode. java to prevent potential NullPointerException when tile is null
added a new ` TrimCache ` class to manage cache trimming to improve cache management and enhance user experience
fix checkstyle issue in util / rendertasklistgenerator
updated exception handling in BasicAuthAccessControlFactory and related classes to throw NotAuthorizedException instead of returning false to improve error handling for unauthorized access
add scheduler. scheduleperiodically ( t, t1, t2 )
replace ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( getStorageManager ( ). getFileByPath ( ) ) ` to ensure
added a check for files match the ". xsd " path and improved stream handling logic to ensure files match the ". xsd " path and
refactor create _ table method to use CreateTableRequest instead of EnvironmentContext to streamline table creation process
added a ` aborted ` flag and synchronized ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker. java ` to
refactor indentation logic across multiple parser classes to improve readability and maintainability of the code
add a listener for change Wi - Fi connection to Wi - Fi
removed redundant check for control frames in FrameGenerator. java to streamline control frame validation logic
added visibility setting for the collapse handle view to enhance user interface by allowing the collapse handle to be visible
added two new files for handling HTML and JavaScript in the Jooby framework to address issue # 475 and ensure proper handling of HTML and
added a check to return early if unitsToScroll is zero to improve performance by avoiding unnecessary processing when unitsToScroll is zero
updated condition to check if the contract list size is greater than one to ensure that the contract list is not empty before proceeding
added ` add ` and ` put ` methods to ` JsonArray `, ` JsonObject `, and corresponding tests in ` JsonArrayTest ` and `
added hashCode ( ) method to IPPPrintService and created a new TestRaceCond class for printing services to ensure consistent hash code generation
refactor db2i dialect to use getversion ( ) instead of getversion ( )
added a condition to check if the platform fee is greater than zero before enabling transactions to ensure that transactions are only enabled when the platform fee is
refactor BatchUpdateException, PreparedStatement, and Statement classes to improve code organization and maintainability
add adaptive reconfiguration for adaptive reconfiguration
removed the public access modifier from multiple Antn classes to allow access to these classes from other packages
added Retrofit import to Part and PartMap classes to ensure proper handling of Retrofit requests in the application
refactor parameter handling in JsonBuildHelper and ParamsBuildHelper to improve clarity and functionality to enhance code readability and maintainability while ensuring proper handling
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the type flags in AbstractFloatingView. java to support overlays for the taskbar
fix : update gapic - generator - java with mock service generation fix ( # 86 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on recents
removed the second parameter from the createRenderScript method call to simplify the code by eliminating unnecessary parameters
pdfbox - 4892 : fix typo find by codespell on fossies. org
fix : plugin list don't show up when there be no system bundle
removed unused import statements and adjusted method signatures in IntegrationTestSparkBulkLoad. java to streamline code and improve readability
fix flakiness of keychaingrouptest
refactor configuration handling in Overview. java to improve clarity and maintainability of the code
fix npe in agentmanagerimpl. listhosts ( ) when hostid be null
added a null check for the value in DefaultRecordStore to prevent potential NullPointerException when retrieving data values
cloudstack agent shouldn't return null when cloudstack agent fail to start
updated the constant for the NO _ NAME and NO _ VALUE string to include both the name and value attributes to improve clarity and maintainability of
refactor BaseStubbing and ConsecutiveStubbing constructors to use Object instead of InvocationContainerImpl to improve clarity by using a more descriptive parameter
added a method to strip method parameters from the method line to improve handling of method parameters by eliminating unnecessary parameters
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the new release version
use set instead of list in outputfilter. isallowed ( )
[ geot - 5657 ] fix typo in symbolmblayer
ggb - 2576 center and resize popups when there be overlap
fix typo in validationsuite. java
refactor the StartingWindowListener implementation in QuickstepTransitionManager to improve clarity and maintainability of the code
added a comment inherited from MBeanServerConnection in MBeanServer. java to indicate that MBeanServerConnection is inherited from MBeanServerConnection
updated exception messages for SecurityExceptions in CheckPackageAccess. java to provide clearer context about the expected PackageAccess SecurityException
increased await timeout from 30 seconds to 90 seconds in ThreadSafetyTest. java to allow more time for the executor service to terminate
replaced boolean loggingEnabled with Boolean loggingEnabled and added a new test class XRLogTest to improve logging handling and ensure logging functionality works as
added @ JsonIgnore ( true ) annotations to Schema. java to ensure proper serialization of schema data
hhh - 11453 addendum for this test to make it work
modified the parameters of the train method in SimpleNaiveBayesClassifier. java to improve clarity and functionality of the train method
updated CheckDatabaseHelper and CheckHelperControllerModule to extend AuditLoggerModule and added CheckHelperAuditModule to enhance functionality by integrating AuditLogger
refactor Prototype class structure to improve code readability and maintainability
added a check to determine if the table is transactional to ensure proper handling of transactional tables
[ java ] remove recordingfragment from recordingwriter
[ exoplayer2 ] fix cediasubtitles with no cue
[ kairos ] add alias to the datastore metric query
updated currency pairs for BTC, LTC, PPC, DOGE, and DOGE in VaultOfSatoshi
hhh - 147642 - fix resource leak in some test
updated KafkaSender import from kafka11 to kafka in ZipkinKafkaSenderConfiguration. java and ZipkinAutoConfigurationTests. java to align Kafka
added two new test classes, GwtBinaryIntegrationTest. java and A. java, while updating existing ones to improve test coverage and ensure gwt
updated visibility logic for loading cause labels and refactored ResultSet handling in SQLConsole to improve user experience by ensuring loading cause labels are visible
fix checkstyle issue in util / randomizer / enhancedrandomimpl. java
added XMLSecurityPropertyManager to DTDConfiguration, NonValidatingConfiguration, and SAXParser classes to manage XML security properties effectively
added a new file ` InlineDefaultMethod. java ` implementing interfaces with default methods to demonstrate the behavior of default methods in subclasses
replace ` ` LIKE (... )'' with ` ` glob (... )''
[ drools - 5657 ] make dmnassemblerservice. getdmnprofiles ( ) protect
fixed - rscript. loadallasync ( ) method don't return the result of rscript. getentry ( ). #
remove setwordfieldvolatile from staticobject. setwordfieldvolatile ( )
updated debug log levels from debug to verbose in multiple Java files to improve log granularity for better debugging
release the payload before send the proxy packet to ensure that the original payload is preserved after sending the proxy
added HTTP _ JETTY _ SERVER _ HANDLERS constant and updated thread pool configuration in WebServer to allow dynamic configuration of Jetty server
replace ` idsToShortcuts ` with ` removedShortcutInfos ` in ` LauncherModel. java ` to streamline the handling of removed shortcuts
( chore ) camel - http2 - client : remove unnecessary check for non - string value
removed the case for ` android. R. id. home ` in ` DetailFragment. java ` to streamline the code by eliminating
added a condition to check if the Android market is present before including play services to ensure play services are only included when the Android market is present
refactor TableBlockParser to handle spaces after the'|'character to improve handling of spaces after the'|'character
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enhance functionality by allowing bridging headers to be
refactor PotentiallyDeadCode to utilize a set for unused methods and streamline source path handling to improve code clarity and maintainability by simplifying
added support for diamond finder in ` Attr. java ` and created new classes in ` T6939780. java ` and ` `
replaced invocation. getInvocationStageTrace ( ). startSend ( ) with invocation. onStartSendRequest ( ) in multiple filter classes to
removed unnecessary import and debug log statement in SolrCacheHolder. java to streamline code by eliminating unnecessary dependencies
added exception handling for AuthenticationException in LdapCtxFactory to improve robustness by properly propagating authentication exceptions
updated the conditional check for zero in Test6796786. java to correct the logic for determining the difference between two float values
added a local file for " logback. dev. xml " in JoobyMojo. java and updated file paths in Main. java to
added a new JaasEventCheck class to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent to facilitate
refactor animation logic in QuickstepTransitionManager to use a list of views instead of individual views to improve code readability and maintainability by consolidating
updated string distance comparison logic in ConjunctionSolrSpellChecker. java and added a new test class ConjunctionSolrSpellCheckerTest. java to
replaced HashMap with Map for fetchers in ShadowSystemServiceRegistry. java to improve performance by using a more efficient data structure
[ hotfix ] [ runtime ] remove unused member and fixed typo
changed the visibility of the setAuthentication method from public to package - private to allow access to the method from other packages
cloudstack - 7131 : add a new property to allow the agent to wait for the read command to run.
fix for http : / / issues. apache. org / activemq / browse / amq - 407
updated SQL update syntax from ` getSqlUpdateAUP ` to ` getSqlUpdate ` across multiple files to ensure correct syntax for SQL updates
refactor schemaTypeCache initialization to use a synchronized map for efficiency to improve performance by avoiding unnecessary synchronization when creating schema
refactor header addition logic in ` StaticServerHttpHeadersWriter ` and add a test for case sensitivity in ` StaticServerHttpHeadersWriterTests
added a JUnit Ignore annotation to the LatticeDemo class to mark the test as ignored due to file availability issues in CMU
added a call to mkdirs the storage directory in TestCollector. java to ensure the storage directory is created for testing purposes
added chunked streaming mode to StarTreeJobUtils to improve performance by reducing data transfers
add test case for basictype syntax checker
hbase - 25827 fix build after hbase - 258
added a new class ` Node ` and a test method ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` to validate the behavior of
added an IOException declaration to the getRemoteName method to handle potential IO exceptions during remote name retrieval
added handling for IllegalArgumentException in UserAccountManagerImpl and refactored ClientFactory and ConnectivityServiceImpl to utilize Apache Commons HttpClient to improve error handling and
refactor WebSocketConnection and ExplicitDemandTest classes to improve code clarity and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to allow users to use AspectJ with protect - pointcut definitions
updated imports and refactored hostname verification logic in mmm Connection. java and ppp Connection. java to enhance security by disabling hostname verification
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to
replaced ` invoke ( ). joinInternal ( ) ` with ` invokeUrgent ( ) ` in ` ClientSchemaService. java `
refactored code to streamline the removal of a JointEdge from the world to improve code readability and maintainability
fix null pointer exception in searchfilter. issearchingphoneofnumber ( )
[ hotfix ] [ test ] add license header to sourcereadertestbase
removed redundant null checks for document and parent folder in DocumentsStorageProvider. java to streamline error handling and improve code clarity
added new classes ` HookDefinition `, ` JavaHookDefinition `, and ` JavaHookDefinition ` for handling Java hooks to facilitate
refactor flushIfDeadlockRisk method into a new flushIfDeadlockRisk method to improve code readability and maintainability by reducing duplication
updated the ` setExoOptions ` method to accept a ` allowTs ` parameter for better flexibility to enhance flexibility in setting Exo options
removed the USER identifier from the getIdentifierCollection in DMRDecoderState. java to streamline the code by eliminating unnecessary user identifiers
added a INVISIBLE color and refactored color handling in Color. java, RailButtonShapes. java, and RailButtonShapes.
updated null handling logic in CountAggregationFunction and added a new test for count with null handling in NullHandlingIntegrationTest to ensure correct handling of
set ` deep ` to - 1 in ` InternalTransaction ` constructor to ensure proper initialization of the ` deep ` variable
updated the method to escape XML names in StreamInitiation. java to ensure proper handling of special characters in the name attribute
updated file path construction to use a configurable work directory to enhance flexibility by allowing dynamic configuration of the work directory
added handling for deprecated rules in RuleSetFactory to ensure proper handling of deprecated rules in the rule set
use codebuffer. position ( ) instead of codebuffer. bind ( ).
changed minStamp and maxStamp to static final in TimeRange. java and added checks for min and max timestamps in TimeRange. java to
refactor BitDocIdSet class implementation to improve code clarity and maintainability
refactor connection handling in AbstractTimelineMetricsSink to use a unified emitMetricsJson method to improve code readability and maintainability by reducing duplication
added support for " VIDEO " MIME type checks in DetailFragment and GalleryActivity to enhance functionality for handling video and image types in the application
fix tank fill for remote player
added handling for RuleAnalysisLegacyBuildRuleView in CsharpLibrary. java to ensure correct handling of DotnetLibraryProviderInfo in the
don't send iq packet with no jids
don't try to load intrinsification graph if runtime be null.
updated conditional check for active state in MetricTrackingWindmillServerStub. java and removed redundant check in StreamingDataflowWorker. java
pdfbox - 4892 : don't search for object id, genid, and objoffset if they don't
added listeners to the LwjglAppletApplication class and modified its initialization to improve application responsiveness and ensure proper rendering of the Lwjgl
refactor string representation in EnvironmentAndSystemPropertyClientProviderStrategy. java to improve readability and maintainability of the code
refactor password policy handling in LdapAuthenticationHandler to improve clarity and maintainability of the code
modified the implementation of Int2ObjectCache to improve performance and memory efficiency
added a private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize this field to improve
refactor Readable class for improved readability to enhance maintainability and facilitate future feature additions
danielwagnerhall for flaky test
updated the drawable resource for the share menu item in CaptureActivity. java to ensure the correct icon is used for sharing functionality
updated the JVM version handling logic in Constants. java to improve compatibility with different Java versions
updated network timeout handling in ` PoolUtilities ` to check for ` AbstractMethodError ` or ` NoSuchMethodError ` to improve error handling for non -
refactor GenericContainer class structure to improve code maintainability and readability
replaced HashSet with ArrayList for filteredSet and filteredList to improve performance by using a more efficient data structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl, ImmutableAuthentication, AbstractCasProtocolValidationSpecification, and AbstractCasView classes to enhance
removed unnecessary whitespace in ChartProvider. java to improve code readability and maintainability
fix : use getparent ( ) instead of getpath ( )
modified the return statement in JavacParser. java and added a new class ExtraSemiTest. java to improve code clarity and facilitate
added support for " AFTER " and " BEFORE " keywords in User and related classes to enhance functionality for querying users with specified timestamps
updated Test15FloatJNIArgs. java for improved functionality to enhance performance and maintainability of the code
updated version strings for PlotSquared in the plugin. java file to ensure compatibility with the latest version and improve user feedback
corrected substring length in MockProcessContext. java and added a new test for fake encryption and decryption in TestMockProcessContext. java to ensure
[ java ] prevent reentrant reentrant call to aeron archive.
added a null check for ` inp _ dep ` before merging dependencies in ` OpProcFactory. java ` to avoid potential ` NullPointerException `
added timeout parameter to @ Test annotations in SslBytesServerTest. java to improve test stability by allowing more time for tests to complete
refactor peer class for improved readability to enhance maintainability and facilitate future updates
added getter methods for ` IndexSegment ` in ` RealtimeIndexingCoordinator ` and introduced new methods in ` StreamProvider ` and ` Stream
added a null check for exportedData before writing it to the output stream to avoid potential NullPointerExceptions when exportedData is null
refactor scrolling logic in RecyclerViewFastScroller to improve touch responsiveness to enhance user experience by ensuring correct scrolling behavior based on popup visibility
updated error message for restarting IntelliJ and added a check for tool window instantiations to improve clarity of error messages and ensure proper handling of tool window
added a check for non - Windows platform before adding the preventSleep checkbox to ensure preventSleep is only added for non - Windows platforms
updated import statements from javax. servlet to jakarta. servlet in HttpConfigurationAuthorityOverrideTest. java to ensure compatibility with Jak
added startCrop and endCrop variables for vertical bar layout in QuickstepAppTransitionManagerImpl. java to ensure proper scaling of window dimensions based on
added full - screen exclusive mode management to XWindow and its peers to enhance user experience by ensuring consistent display behavior across different screen orientations
added substring logic for the played duration string in StringUtil. java and created a corresponding test class UMSUtilsTest. java to enhance functionality and
added functionality to handle DAG credentials in DagUtils. java to enhance functionality for managing DAG credentials in the Tez framework
( chore ) camel - core : use entryset ( ) instead of keyset ( )
trim whitespace from the last element of the thread's name to ensure the thread's name reflects the last element of the array
updated the message in GpsMainActivity to clarify that the description is only added when the next point has logged to a file
[ hotfix ] [ javadoc ] fix typo in job class javadocs
added a new ` Unused ` class with methods for retrieving integer, boolean, double, and double fields to enhance the functionality of the `
ambari server should use hbase master host instead of hbase master host
deleted the EventReaderDeserializer and EventWriterSerializer interface files to streamline code by eliminating unused components
changed the return type of performJoin method from GenericRecord to List < GenericRecord > to allow for multiple output records in the join process
updated handling of MAX _ DELEGATE _ LOCK _ PERIOD in ProposalUtil and related classes to ensure that MAX _ DELEGATE
fix nicto. getnetworkrate ( ) return null instead of int.
removed the constructor from CmcExchange and implemented the applySpecification method in CmcExchange to streamline the class by eliminating unnecessary instantiation
refactor GossipLocalNode to check for the presence of " seed. node. ip. list " before processing IP addresses to improve robust
make client tpc enable system property ` ` hazelcast. client. tpc. enabled''
upgrade to swagger - ui 3.2. 18. 2 ( # 3669 )
refactored the division logic in MutableBigInteger and added a new ModInvTime class for computing modular inverses to improve handling of large
refactor the key assignment logic in NamedObjectList. java to improve clarity and maintainability of the code
replaced instances of ` cleanupEmptyDir ` with ` cleanupEmptyTableDir ` across multiple files to improve clarity and consistency in handling empty directory cleanup
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered RCFileInputFormat in SerializationUtilities. java to utilize RCFileInputFormat for improved data handling
added methods to retrieve Java type and category in TypeMapperComponent to enhance functionality for retrieving Java types and categories
added error handling for invalid host header in Request. java and created a test for invalid host headers in RequestTest. java to improve robustness
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` instead of ` libcore. util. TimeZone
modified the ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in the ` StandardOp ` class to ensure proper handling of outgoing values
refactor ` SegmentCoreReaders ` and ` SegmentReader ` to use ` si. name ` instead of ` core. segment ` to improve
added ` hasMainThreadProfile ` method to ` AggregateDao `, ` AggregateDao `, and ` AggregateRepository ` to check if a main
added a validation check for annotation definitions in a Buck rule with required _ for _ source _ abi absent or set to false to improve error
updated lowercase names for GreekLowerCase, IrishLowerCase, UAX29URLEmailTokenizerFactory, and TurkishLowerCase
updated HSSFSheet and Sheet classes to improve code organization and maintainability
[ ds - 4441 ] change internallogic to discoverysearchrequestprocessor since dspace 4.0
remove America / Dawson and America / WhiteHorse and America / Canada / Yukon from the list to streamline data
updated the SurfaceSyncGroup instantiation to include a specific name to improve clarity and maintainability of the code
replaced direct retrieval of ` BsonObjectId ` with ` getId ( ) ` in ` GridFsTemplate. java ` and added a new test
added methods to retrieve total size and bytes so far in ShadowDownloadManager to enhance functionality by allowing retrieval of total size and bytes so far
refactor character insertion logic in TextField. java to handle both ENTER _ DESKTOP and ENTER _ ANDROID characters appropriately to improve code clarity and
fix npe in group node view
added an ` afterSetStatements ` method and refactored logic in ` Lower. java ` and ` BlockLexicalContext. java
added hashCode method to IntervalXYDelegate and updated equals method in XYSeriesCollection to improve hash code generation and ensure consistent behavior across instances
fix clientqueuenultanagertest # testclientqueuedisruption
reformatted code for better readability and maintainability to enhance code maintainability and facilitate future updates
replaced GsonBuilder's serializeSpecialDoubleValues ( ) method with GsonBuilder's serializeSpecialFloatingPointValues ( ) method to ensure proper
added calls to ` HttpMethed. waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed. wait
added checks for non - empty subtag before canonicalizing and appending language tags in Locale. java and added tests in LocaleEnhanceTest
kvm. ssh. to. agent config to allow ssh into kvm agent
removed the public access modifier from several methods in SchedulerWhen. java to allow access to these methods from other classes
updated import statement for PagerSlidingTabStrip in EmojiKeyboard. java to ensure compatibility with the new package structure
added a condition to check if the filter string does not contain a dash to ensure that only valid filter strings are processed
replaced instances of " natural order " with " Natural column order " in BrowserContentPane. java and updated statistics retrieval in DataBrowser.
removed the call to Arrays. copyOf with a size of 6 to streamline code by eliminating unnecessary array copying
updated the write method to include ` htmlEncodeButNotSpace ` to ensure proper handling of special characters in remote addresses
fix ` ` smarthome / items /'' in itemstatetriggerhandler
removed unnecessary synchronized block in FastHttpDateFormat. java to streamline code by eliminating unnecessary synchronization
refactor file moving logic to use a separate thread pool for better resource management to improve reliability and responsiveness of file moving operations
added two overloaded ` trigger ` methods to ` WrapTimer ` for scheduling tasks based on a specified period to enhance the functionality of the ` trigger
added support for both SQL date, time, and timestamp types in TypeStringUtils. java and added corresponding tests in TypeStringUtilsTest.
added a verbose option to the error setting in AbstractStatusReporter to control the severity of errors based on user options
updated ClickStartHandler initialization to include a boolean parameter for menu visibility to ensure menu behavior reflects the current state of the application
added validation to ensure VPN connection can only be esitablished between the same account's VPN gateway and its domain ID to
updated error handling logic in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to improve error handling and ensure
pdfbox thumbnail and text extraction if pdf be encrypt
[ 3.0 ] fix curator watcher not be able to close ( # 3669 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code clarity and maintainability
replace ` getSelectedItemId ( ) ` with ` id ` in ` HostsList. java ` and refactor ` deleteItem ( ) ` method to
updated Java6Assertions and Conditions classes to improve code clarity and maintainability
updated the return type of replaceOrderBulk method from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > and changed its
refactor enterDefault method to enterIdentNode and add enterFunctionNode method in FindScopeDepths and Lower classes to improve clarity and functionality
added a new ` J9ConstantHelper ` class and modified ` ObjectHash ` and ` ObjectHashTest ` to utilize it for retrieving long
added test for concurrent modification exception on multi - threaded invocation
add a method to remove a roster and notify it offline.
replaced direct calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator. java ` and added a
updated method call formatting in FunctionObjectCreator. java to improve code readability and maintainability
added null check for ` extTypeCustomDesers ` before creating it in ` MessagePackFactory ` to prevent potential ` NullPointerException ` when
added a system property " mockserver. logLevel " of " WARN " in the Main class to indicate that the log level should not be set
removed the @ Test annotation from AbstractRegistryFactoryTest. java to streamline test cases by eliminating redundancy
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase. java to streamline the
changed the type of scoreMap and termScoreMap from Map < Float, Float > to Map < Float, Float > and added a new
updated bitwise checks from ` & 0x8000000000000000L ` to ` < 0 ` in U64. java and added an ` eq
remove font - weight and font - size from mainviewmodel
added a condition to notifyChange based on the didSupportDarkText state to ensure that changes are only notifyed when the correct dark theme is
[ flink - 197487 ] [ runtime ] fix non - forced enqueuing of checkpointrequestdecider
updated MAX _ POOL _ SIZE from 1000 to 15 and adjusted KEEP _ ALIVE _ TIME _ MILLISECONDS and KEEP _
add test case for mfa resolvers by request
[ macos ] [ test ] do not fail on window
fix for http : / / issues. apache. org / activemq / browse / amq - 380
modified the ` getReturnValue ` method to handle ` Throwable ` and improved exception handling in ` Py4JNetworkException ` to enhance error handling
added a Repeatable annotation to the Issue class with a @ Repeatable annotation to allow the Issue annotation to be annotated with @ Ret
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor. java and modified
modified socket connection logic to conditionally use socksProxyHost based on the system property to enhance flexibility in connection behavior based on the presence of socksProxy
[ hotfix ] [ runtime ] fix checkstyle violation in slotreport
removed unused import of ClassUtils in ReflectionUtils. java to streamline code by eliminating unnecessary dependencies
replaced instances of HashSet with LinkedHashSet in SslContextFactory. java to ensure predictable iteration order for better performance
added a check to return the system resource if it matches the specified resource location to ensure that the system resource is only updated when it differs from
added a constant for the size of plaintextSegment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to
added a test for invalid fallback scenarios in ServerMvcIntegrationTests to ensure that the fallback route throws an exception when the fallback route is invalid
added SSL connection factory to AppPage. java to enhance security by using a more secure connection factory
replaced the call to resetBytesReadCounter ( ) with a call to resetBytesReadCounter ( 0x7FFFFFFF ) to ensure proper
added a ` preferAES ` property with getter and setter methods in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to
( chore ) camel - opentelemetry : use log instead of system. out
added a new test method ` testLoadBalancerInstanceOperations ` in ` ElbIntegrationTest. java ` to ensure that the ` DescribeInstanceWith
rename ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver. java ` to clarify the purpose of the method for setting notifications
added error handling for file creation in DiacriticTest. java to improve robustness by preventing file creation when the locale or file system
hhh - 147642 - fix followonlockingtest on oracle 11
added error handling for missing atlas files in TextureUnpacker. java to improve robustness by providing a clear error message when the atlas file
refactor AmbariManagementControllerImpl to use Lock for thread safety to improve concurrency handling and ensure consistent state updates
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added tests for closing the ResultSet in TestJdbcDriver2. java and modified the HiveStatement. isQueryClosed method in HiveQueryResultSet.
remove inputstream. mark ( 0 ) from streambodygenerator and add test for buffer larger than file
added logic to remove pre - deleted databases from the schema map to ensure that only relevant schemas are removed from the database
added a check to remove the " chunkedWriter " from the pipeline if it is not already present to ensure proper handling of chunked responses in the
added a confirmation dialog for item deletion in EnhancedBrowseFragment and FullDetailsFragment to enhance user experience by providing confirmation before deleting items
refactor RuleFinder to utilize RuleBank for rule management to improve code organization and maintainability by encapsulating rule logic
added exception handling to the doFinal method call in JcaTlsCrypto. java to improve error handling by throwing a fatal alert when an
add test for mono object call.
replaced the ` removeMetaDataSource ` method with ` toFront ( ) ` in ` DataBrowser. java ` and ` Desktop. java `
hbase - 16621 fix nullpointerexception in defaultmemstore
[ hotfix ] [ runtime ] remove unused parameter in taskmanagerservicesconfiguration
modified AlterTimeSeriesStatement constructor to include a boolean parameter for altering views to enhance flexibility in altering time series statements
fix condition. matchtext ( ` `. *'', '. *'' )
added error handling for RoutingTableBuilder retrieval in HelixBrokerStarter. java to improve robustness by handling potential exceptions when retrieving the routingTable builder
refactor code to use a traditional for - each loop for better readability and performance to improve code clarity and maintainability while ensuring proper handling of
( chore ) camel - jms : use char [ ] instead of string for password
bug fix : don't invalidate session if it's in recursive mode
replaced ` Math. abs ` with `! = ` in ` Counters. java ` and ` CountersTest. java ` to streamline the
modified the ` initialize ` method in ` BasicTumbleStepper ` to accept a ` original ` SimulationStatus ` and added warning
add compilerdirectives. transfertointerpreterandInvalidate ( ) to type. getcurrenttimemillis ( )
updated the variable name from " var " to " var " in the PrettyPrinter class to improve clarity and consistency in variable naming
added a null check for indexToNode [ currSize ] in LRUDictionary. java to avoid potential NullPointerExceptions during iteration
refactor DatagramSocket and DatagramChannelImpl to improve filtering logic to enhance code clarity and maintainability by encapsulating filtering logic
test : migrate testquerydns to junit 5 ( # 2496 )
added a new class NutchServerInfo with getter and setter methods for startDate, configuration, jobs, and runningJobs to provide functionality for
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter. java ` to stream
added support for timestamp handling in CqlInserter, ThriftInserter, and SettingsColumn to allow users to specify timestamps in the query
refactor DSAParameterGenerator to use BigInteger. ONE for strength validation to improve readability and maintainability of the code
updated methods in Numbers class to use Numbers. doubleToLongBits ( ) and Numbers. longBitsToDouble ( ) instead of returning 0 to improve
updated mask check in InetAddressSet. java and added new test cases in InetAddressSetTest. java to ensure correct handling of masked octets and
added checks for SQLException handling for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to ensure compatibility with SQL Server versions below 23
remove setzeroifnotfound = false from removenomplicationprocessor. removenomplication
added methods for adding tabs and inserting tabs into the Tabs class to enhance tab management functionality for better user experience
replaced usage of ` toArray ( ). size ( ) ` with ` toArray ( 0 ) ` in multiple Java files to improve performance by avoiding
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment
refactor conditional logic in MavenVisitor. java for clarity to improve readability and maintainability of the code
corrected the spelling of " MOCK _ APP _ NAME _ UPDATE " and replaced occurrences of " MOCK _ NAME2 " with " MOCK _ NAME
added a new test class FormatCheckingTest to validate class format error handling
replaced the method call to ` lineNumber ( statement. getLineNumber ( ) ) ` with ` lineNumber ( lineNumber ) ` to ensure the correct line number
added a try - catch block around the add method call to handle potential exceptions to improve robustness by catching potential exceptions during configuration retrieval
added two overloaded createToggle methods to the RadioButton class to enable toggling of RadioButton components based on command and icon
updated cache size in LRUCache and adjusted CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to improve cache efficiency and
int default _ cap _ value be now public so that it's accessible from outside the class.
added a null check for symbolicName before quoting it to avoid potential NullPointerException when symbolicName is null
add ` ` usemode'' system property for external mode
[ hotfix ] [ yarn ] fix timeout issue in yarnsessionfifoitcase
replaced occurrences of ` projectRoot ` with ` androidManifestPath ` in ` RobolectricTestRunner ` to standardize the handling of Android manifest
updated the condition for selectingive header propagation in AbstractMessageProducingHandler and added a new test in AbstractReplyProducingMessageHandlerTests to
refactor CompareMode class for improved readability to enhance maintainability and facilitate future updates
added ` HasTests ` interface to ` Arg ` class and implemented it in ` RustBinaryDescription ` and ` RustLibraryDescription `
updated drawable resources for the recent image placeholder in FileMessageVH. java to ensure consistent usage of the placeholder drawable across the application

added an onUserPreferenceChanged method to recreate the taskbar to ensure the taskbar is refreshed when the user preference changes
refactor HeapDump. java to handle VM - specific heap dump methods to improve compatibility with different JVM versions
fix for http : / / issues. apache. org / activemq / browse / amq - 4237
simonstewart : make sure we can iterate over all open window
updated Java version from JDK 5 to Java 5 in IteratorToFor. java to ensure compatibility with newer Java versions
set the application state to unavailable to ensure that the application is in an unavailable state
updated position and limit calculations in ByteBuffer classes to ensure correct handling of buffer positions and limits
removed unnecessary ` toUri ( ) ` call to ` split ( ) ` method in ` ConditionalResolverMergeFiles. java ` to streamline the
added setEmpty methods to various classes for setting empty arrays to improve array management and ensure proper handling of empty arrays
changed the visibility of the ` Protocol ` and ` Transport ` enum from package - private to public to allow access to these enum from other packages
updated document handling in TestMultiPhraseQuery. java to streamline document creation and improve test accuracy
fix ticket reservation with offlin payment
added a ` _ onTimeoutThread ` variable and refactored listener invocation logic in ` HttpChannelState. java ` to improve thread safety
replaced printStackTrace ( ) with logger. warn ( ) in SslBytesTest. java and added debug logging in SocketChannelEndPointTest. java and Server
updated package - info. java files for mmm and ppp packages to improve documentation clarity and maintainability
patch by jbellis ; review by jbellis for cassandra - 1315
added handling for " Home " model in HeosDiscoveryParticipant. java and modified serialization logic in HeosPlayerHandler. java to ensure proper
added a new ` Wait ` class with getter and setter methods to the ` PlainSelect ` class and integrated it into the ` SelectDeParser
refactor Neo4j node and edge data handling to use AttributeController and AttributeTable for better attribute management to improve code clarity and maintainability by
added null check for serverName in SessionManager. java to prevent potential NullPointerException when serverName is null
nifi - 7191 : move rocksdb metronome class to controller. repository
updated the method call to retrieve the " IS _ GRANTABLE " string to ensure the correct retrieval of the " IS _ GRANTABLE
added logging for asynchronous execution in JavascriptContext. java and modified URL validation logic in JavascriptContext. java to improve debugging capabilities and ensure proper URL
camel - 7999 : fix the camel - cxf unit test on macos
added a check for a new column descriptor before modifying it in LoadTestTool. java to ensure proper handling of column modifications based on the new
added Disposable interface to Texture class to enable disposable handling for texture objects
added null checks for ` tldBundleLocation ` and refactored ` WebappRegistrationCustomizerImpl ` and ` WebBundleDeployerHelper
don't use goquorum privacy if goquorum privacy be enable
replaced IOException with Throwable in HttpInput. java to improve error handling by using a more general Throwable instead of IOException
added a check for the country code " JP " in LocaleTest. java to address issues with country codes in the era
replaced instances of ` Wrapper. class ` with ` HostResponse. HostResponseWrapper. class ` in ` HostService ` and ` ViewPrivilege
updated filter and hash code calculation in FilteredQuery. java to ensure correct boost handling and improve hash code calculation
updated formatting in the FileMenuFilter constructor to improve code readability and maintainability
[ web ] fix ` ` showlogging'' and ` ` geogebradebug''
; add test for - - CMSclassunloading
don't create item toss event if there be no entity
rename ` KeyMappingPreparedStatementSetter ` to ` ItemPreparedStatementSetter ` across multiple classes to improve clarity and consistency in naming conventions
fix compactionstest to use identityqueryfilter instead of range. forkeyrange
added a null check for the " type " attribute in MiniAapt. java and created a corresponding test in MiniAaptTest. java
added SpELJudge functionality to the OperatorEnum and created a new SpELJudge class to enhance functionality for handling Spel expressions in
[ hotfix ] [ sql - planner ] use equal ( ) instead of equal ( ) in localexecutionplanner
bugfix # 2183130, use eventqueue. isDispatchThread ( ) instead of SwingUtilities. iseventDispatchThread ( )
updated multiple Java files for consistency and clarity to improve code maintainability and facilitate easier debugging
updated the initialization of ` start _ offset ` and ` length ` in ` AttributeResolution9. java ` and ` ShadowArscAssetManager
updated the number of source and target options in the setup options to ensure compatibility with new configuration requirements
[ hotfix ] [ table - planner - blink ] fix pushprojectIntotablesourcescanrule
added imports and modified sorting logic for localized names in AboutActivity. java to ensure the displayed list reflects the current language look - up table
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a conditional check for live streaming in HomeFragment to ensure refresh behavior only occurs when live streaming is enabled
added the exception as a parameter in the MappingException constructor to provide more context for the exception when creating AuditStrategy instances
( chore ) camel - file : fix flaky test
updated generic type parameters for CompositeType and DynamicCompositeType in multiple files to improve type safety and eliminate unchecked cast warnings
added support for transports and URL formats in GitClientApplication and modified permission handling in RepositoryUrlPanel to enhance functionality to support transports and
added support for long press navigation handle functionality in multiple input consumer classes to enhance user experience by providing insights into input components
refactor version filtering logic in ChangeParentPom. java to handle null mavenMetadata to improve robustness by preventing null pointer exceptions
; ; ; _ _ _ _ _
cloud _ usage : skip event migration if cloud _ usage db do not exist
fix test on window
; ; ; ; ; ; ; ;
removed redundant null check for myself. getDataCenterInfo ( ) in ZoneAwareDiscoveryFilter. java to streamline the code by eliminating unnecessary
changed log level from error to warn in OpenTracingTracer. java to provide more granular logging for data capture failures
added a toString ( ) method to the Generator class to provide a meaningful string representation of the Generator instance
refactor URI handling to improve readability and maintainability to enhance code clarity and facilitate future modifications
added a null and empty check for resources in ClusterControllerImpl. java and created a corresponding test in ClusterControllerImplTest. java to ensure
refactor API response handling in AccepttoApiUtils. java to improve error handling and logging for API responses
added a check for Android version compatibility in VertexBufferObject. java to ensure compatibility with devices running Android 5 and above
refactor SybaseASADatabase class to improve code organization and maintainability
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated its usage in the ` HashJoinInfo ` class to
added a public method ` getStringDistance ` to the ` SpellChecker ` class to provide access to the ` getStringDistance ` method for external
added flags for ONE _ SHOT, MUTABLE, and IMMUTABLE in AndroidImplementation. java to enhance functionality for PendingIntent creation based on
added methods to append read column IDs in HiveFileFormatUtils and refactored read column ID handling in HiveInputFormat to improve code organization and

added DisplayTemporaryToast ( ) functionality to SavedExperiments. java to enhance user experience by displaying temporary toasts
added version handling in ServiceModule and created corresponding unit tests in ServiceModuleTest to ensure correct resolution of services based on their parent version
added a new test class RawSerializationTest for Gson serialization to ensure correct serialization behavior of collections and objects in Gson
replaced instances of SeleniumServer with SslCertificateGenerator across multiple files to improve clarity and consistency in SSL certificate generation
modified the iteration over replies from a for - each loop to a for - each iteration and adjusted padding for the status view to improve readability and
increased the timeout duration from 3 seconds to 60 seconds in ExpiringUrlCacheTests to accommodate longer timeouts for resource access
added a test method ` testNGramFilterPayload ` to validate payload handling in the NGramFilterFactory to ensure correct handling of payloads
refactor AclImpl class to improve code readability and maintainability
added a new test method to verify different arrays are randomized with different sizes in EasyRandomTest. java to ensure that different sizes are correctly
cloudstack - 7131 : fix a couple of findbugs warning in citrixresourcebase. java and citrixresourcebase
added thread - safe handling for the ` tryWriteAgain ` variable in ` SslConnection. java ` to ensure that the ` tryWriteAgain
refactor actor visibility check into a new method ` ancestorsVisible ` to improve readability and maintainability of the code
added logging for failed deployment groups in RollingUpdateOpFactory to improve error handling and debugging for deployment failures
[ hotfix ] [ table - connector - blink ] fix checkstyle violation
added handling for ` AuthenticationFailureUsernameNotFoundEvent ` in ` DaoAuthenticationProvider ` and created ` AuthenticationFailureUsernameNotFoundEvent ` class to improve
updated AtMostXVerificationTest. java file to improve verification testing accuracy
updated default query type from " lucene " to " LuceneQParserPlugin " and added " lucenePlusSort " argument in multiple test files to
updated date formatting to use Locale. US for consistency to ensure accurate date formatting across different locales
added a ` isInitialized ( ) ` method to the ` ILanguageServer ` class and created a new ` LocalsCompletionTest _ template `
updated test parameters and renamed ` idToken ` to ` shouldHaveIdToken ` in ` ClientAPITokenIntegrationTest. java ` to improve
added beginTransaction ( ) and endTransaction ( ) methods to DatabaseAdapter and refactored transaction handling in GncXmlHandler to improve transaction
replaced byte array handling with ByteArrayOutputStream for improved performance to optimize memory usage and enhance performance
added multiple @ Override annotations and modified exception message handling logic in MessagingTemplate. java to improve code clarity and ensure proper exception handling based on client
added an implementation of the ` isAcceptable ` method in the ` AutoFormatVisitor ` class to check if a source file is a compilation
added maximum buffered documents and a RAM buffer size configuration to optimize resource usage during merging operations
added functionality to clear and update witnesses in the Manager and ManagerTest classes to enhance functionality for managing witness information and improve test coverage
added error handling for NoSuchElementException in CopyOnWriteMap to improve robustness by handling potential NoSuchElementException
[ hotfix ] remove log level parameter from flumenode. logversion ( )
added functionality to reindex collection and updated authentication metrics in BasicAuthIntegrationTest. java ; modified DaemonStream. java to improve test reliability and
replaced HashMap with LinkedHashMap for the nodes variable to ensure predictable iteration order of the nodes variable
add an internalerrorexceptionmapper to jerseysupport to handle internal error
refactor header validation logic in Http2TestBase. java to improve clarity and maintainability of the code
refactor system property handling to use a switch statement for better readability to improve code maintainability and ensure consistent behavior across different Java versions
changed parameter types of ` contains ` and ` doesNotContain ` methods from ` String ` to ` CharSequence ` in ` StringSubject ` and
added toBeInvestigated and JVM method calls in CheckGraalIntrinsics. java to facilitate investigation intrinsics
; ; ; ; ;
updated connection factory handling in PersistenceManagerProvider. java to ensure correct connection factory is used based on the configuration
refactor DeploymentOptions class to improve code readability and maintainability
changed the parameter type of ` updateTextButtonWithDrawable ` from ` Drawable. ConstantState ` to ` Drawable ` and refactored drawable
updated resource handling in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve resource management and avoid potential memory leaks
added support for the COALESCE operator in RexNodeConverter and implemented a corresponding method in SqlFunctionConverter to enhance functionality for coalesce operations
camel - 16400 : camel - hl7 - remove unused unit test
fix for http : / / issues. apache. org / jira / browse / amq - 4237
added synchronized keyword to DefaultDateTypeAdapters for thread safety to ensure thread safety during serialization and deserialization processes
removed unnecessary whitespace in method declarations to improve code readability and maintainability
refactor URI handling in HttpClientRequestBase and add new test cases in HttpClientRequestBaseTest to streamline URI construction and ensure proper functionality of the
removed the filterOldEntries method from FeedRefreshUpdater. java to streamline the process of retrieving and filtering old feed entries
[ hotfix ] [ wal ] change log level from fatal to warn in fshlog. append ( )
replaced the ` getValues ( ) ` method with a ` NodeMapIterable ` class and refactored the iterator implementation to improve code organization and
updated import statements and refactored predicate definition in DiscoveryClientRouteDefinitionLocator. java to improve clarity and functionality of predicate handling
added a check for non - empty fields in MongoRecordReader and modified the return logic in RexToMongoTranslator to improve handling of empty fields and
defaultadminprovider : add'admin'to the list of admins
replaced usage of MultiFields with SolrIndexSearcher for term retrieval to improve compatibility with Solr's indexing system
updated the return statement in ConstantBeanHolder to include the class name and identity hash code to improve debugging by providing context on the class name and
updated the handling of the ` primitiveType ` variable in ` GroovyParserVisitor. java ` to ensure proper handling of null primitive types and improve
remove uninterruptible hashcode method from java. lang. string
increase default offer timeout for seda blockwhenfull test
added a new package - info. java file for the org. apache. lucene. core. testresources package to provide package - level documentation
updated the calculation of ` readLen ` in ` MessageUnpacker. java ` to ensure it does not exceed the buffer's size
updated the import statement for Nullable from ` common. lang ` to ` core. lang ` to ensure compatibility with the latest Micrometer
updated the query in IconDB to include both COLUMN _ COMPONENT and COLUMN _ USER to ensure that the IconDB query retrieves the user's
( chore ) camel - defaultmq : fix typo find by codespell on flink - core
added a boolean parameter to the addWhitelistedResource method and updated its logic in ClasspathElementDir and ClasspathElementModule to handle class file
ambari server upgrade to 4.20. 0 to 2.2. 2 ( # 4657 )
removed the ` IJava2DRenderer ` interface from the ` java2DRenderer ` class to streamline the class by eliminating an unused
added a null check for the onTearDown method in DefaultAudioSink to ensure proper handling of offload buffer emptying when the listener is
refactor UpstreamCacheManager to use a ScheduledThreadPoolExecutor for scheduling upstream tasks to improve efficiency and maintainability of the upstream task management
refactor StreamType class to improve code readability and maintainability
updated assertion in Recording. java to include the time difference to ensure the test accurately verifies the expected output
replaced ` GitBlitWebSession ` with ` RequiresAdminRole ` and modified the authentication logic in ` FilestorePage. java ` to
camel - elasticsearch : ignore camelelasticsearchresttest until it can be fix
refactored the ` accept ` method in ` ExpressionControlBusFactoryBean. java ` to use the ` getDeclaringClass ( ) ` method to
updated button names in OfferBookChartView from " leftButton " and " rightButton " to " market. offerBook. buyWithFi
camel - 15836 : camel - restlet should not allow route to route with invalid url.
removed the ` blockHeight ` parameter from the ` createNextBlock ` method signatures in ` Block. java ` to simplify method signatures and improve
removed Serializable interface from BTreeMapJava and added NotSerializableException handling in ConcurrentSkipListMapTest and JSR166Test to simplify serialization process and
added a null check for the getCause ( ) method in RuleEngineImpl. java to avoid potential NullPointerExceptions when the getCause ( ) method
added an additional condition to check if source control stats gathering is enabled in the test mode to ensure statistics are only generated when the test mode
changed the method call from ` mFilesAll. indexOf ( file ) ` to ` mFiles. indexOf ( file ) ` to ensure accurate
deleted the PlainVerifier. java file to remove unused or redundant code
added a check to close system windows when triggered from an altTab to ensure proper handling of system windows when triggered from an altTab
refactor dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve code clarity and ensure proper dialog behavior
updated MimeUtil to accept a UTF - 8 encoding parameter in RestAdapter. java and added a suppression annotation in MimeUtilTest. java
added a call to ` super. deinitialize ( ) ` in the TextField class to ensure proper initialization of the TextField component
replaced the usage of ByteArrayOutputStream and ObjectInputStream with TestUtilities for serialization to simplify serialization process and improve code maintainability
updated the method from ` previousClause ` to ` previousUntilLastClause ` in ` LogicalGenerator. java ` and modified the ` fill `
added argument validation for negative array sizes in JAXWSExceptionBase. java to ensure proper handling of negative array sizes and prevent runtime errors
test : migrate ctresolvedimporttest to junit 5
updated the join duration in T6567415 from 10 seconds to 60 seconds to allow for a longer wait time for the thread to complete
[ hotfix ] [ test ] change default value of legacy to region
added a title property with getter and setter methods in ShadowActivity and updated ShadowAlertDialog and ShadowTextView to include i18nSafe flag to
replaced Log with POILogger in POIFSFileSystem. java to ensure compatibility with the latest POI features and improvements
fix ` ` instar'' alarm not be trigger when it's an instance of ` ` pi''
added latency tracking for map deletion in MapDeleteMessageTask to enhance performance monitoring for map deletions
updated status handling in Response. java to use a switch statement to improve clarity and maintainability of the code
added a method to find the javac location in the CheckResourceKeys class to improve code robustness by ensuring the correct Java file is found
add project name to flutter _ create _ additional _ settings
added a new test class ` DeprecatedStubbingTest ` for stubbing functionality to ensure correct behavior of stubbing methods in the Mockito framework
updated import statement to use javax. servlet. DispatcherType instead of org. eclipse. jetty. server. DispatcherType to ensure compatibility with the
fix parsing of vbd in treebank
add system property to allow rsa key exchange for fips
replaced instances of ` output _ reader ` with ` reader ` in multiple files to ensure proper resource management and prevent memory leaks
added methods to delete OAuth clients and access tokens in PubSubAPI and SDMAPI classes to enhance functionality by allowing deletion of OAuth clients and
updated interpolators in TaskbarEduView. java to use EMPHASIZED instead of AGGRESSIVE _ EASE to
[ iotdb - 3447 ] fix log level for datanode region migration
added a new file ` FileDialogLeakTest. java ` to test the behavior of ` FileDialog ` to ensure that the ` finalize
; ; ; ; _ _ _ _ _ _ _ _
truffleservice. isuninterruptible ( ) to return false for uninterruptible implementation method.
[ hotfix ] [ table - common ] remove unused split method from pbcodegenrowdeserializer and pbcodegenrowser
updated condition to check if disi is not null in DrillSidewaysScorer. java to ensure proper handling of null disi values
replaced calls to ` ExoPlayerTest. assertTimelineChange ( ) ` with ` assertTimelineChangeBlocking ( ) ` and refactored
added support for the JVM version in the Constants class to ensure compatibility with Java 9 and above
updated FileReporter constructor to accept a null parameter to ensure proper handling of null values in the FileReporter class
updated the method call from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity. java ` to ensure proper handling of
added home button functionality to the DirectMessageConversation class to enhance user experience by allowing navigation to the home button
added support for retrieving users in RpcServlet and updated PROTOCOL _ VERSION from 5 to 6 and modified PROTOCOL _ VERSION from 5 to 6 to enhance
added an @ EnabledIfSystemProperty annotation in TestJdbcPluginWithMSSQL. java to enable compatibility for different operating systems
updated the handling of the original start class in the strategy to ensure that the strategy correctly identifies the original start class
fix : add local for parameter register number
replaced ` getAsyncContext ( ). getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl. java
[ jbrules - 4071 ] fix nurserostering panel look and feel
update version regex in AppPage. java to ensure compatibility with the latest version format
refactor animation listener logic in LauncherAppTransitionManagerImpl. java to improve code readability and maintainability
updated error message in DumpedPrivateKey. java to include the version of the network to provide clearer context for network issues
replace offerPayload with newOfferPayload in EditOfferDataModel. java to ensure correct handling of offer payloads
replaced ` PageParameters ` initialization with ` WicketUtils. newOpenTicketsParameter ` and ` WicketUtils. newRepositoryParameter `
updated the RFBattery initialization from 640, 640, 0 to 640, 80, 0 to accommodate new features and improvements in the
updated the ` getStateMachineClusterInstance ` method to include a ` blueprintName ` and ` blueprintRev ` parameter to enhance functionality by allowing retrieval
initialize downgradeAllowed to true in UpgradePack. java and add a test for the isDowngradeAllowed method in UpgradePackTest. java to
updated scan method calls in XML11NSDocumentScannerImpl and XMLDTDScannerImpl to use ElementSTART instead of ATTRIBUTE to ensure correct handling of
added a new configuration option ` EMULATE _ SYSTEM _ LOADLIBRARY ` and refactored library loading logic to improve library loading efficiency and
replaced instances of ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` AppsCustomizePagedView.
modified file output handling in DefaultPlatformManager and FatJarStarter to ensure proper creation and closing of the output stream
updated test method signatures and assertions in TestSecretKeyCredentialHandler. java to improve clarity and accuracy of test assertions
( chore ) camel - spring - boot : adapt to new spring api
[ hotfix ] [ doc ] fix typo in metric option description
hbase - 177643 testfulllogreserstruction fail on slow machine
added reuseAddress functionality to DatagramSocketOptions to allow configuration of socket reuse behavior
fix server shutdown message
remove deprecate Locatable interface from the internal package
updated error messages for non - indexed and non - multiValued fields in VersionInfo. java to improve clarity and accuracy of error messages related to
replaced instances of ` equalityPredicateColumns ` with ` predicateColumns ` in ` StarTreeIndexOperator. java ` to improve clarity and consistency in
removed redundant lines in HandshakeHandler. java to streamline code for better readability and maintainability
reformatted code in Navigator. java for better readability to improve code clarity and maintainability
changed access modifier of DEFAULT _ RECORD _ READER _ CLASS from private to static in RecordReaderFactory. java and added a new test class
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator to enhance query functionality for
refactor group by expression handling in CalciteSqlParser. java to improve readability and maintainability of the code
replaced UnsupportedOperationException with Unsafe and refactored buffer management in MappedByteBuffer and FileChannelLinesSpliterator to improve memory management and resource management
replaced direct calls to ` l. getValidator ( ) ` with a local variable ` validator ` in ` LdapUtils. java ` to improve
added a schedule method to CircuitBreakerImpl and modified test method to include ExecutionException and TimeoutException to enhance functionality and improve test reliability by
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags to simplify the intent flag setting for better clarity
rename ajax property to progressbar in submission controller
added a @ Disabled annotation to the TableExtRetrieverTest class to indicate that the retrieval strategy is restricted for column privileges
fix synchronization issue in entitygraph. getexportedcount
updated import statement for requireNonNegative from IntRangeUtil1 to IntRangeUtil to ensure proper handling of non - negative values
updated character validation logic in HttpParser and added a test for encoded headers in HttpParserTest to ensure proper handling of encoded characters and improve test
replaced ` trends _ activity ` with ` configuration _ activity ` in ` ConfigurePagerActivity. java ` to align the application with the new
updated print statement to include the position of the SLWT in the document to improve clarity of log output
added a new ` ForceLeaderWithTlogReplicasTest ` class to test the number of documents in the index to improve test reliability by
updated thread handling logic to improve performance and responsiveness
added support for RECOGNIZED _ TEMPLATE _ FILE _ SUFFIXES _ HTML, RECOGNIZED _ TEMPLATE _ FILE _ SU
camel - 16400 : camel - cxf - allow to specify namespace in soap request. thanks to daniel.
reformatted code in YamlRepresenter. java for improved readability to enhance code clarity and maintainability
updated date formatting in ToChar. java and added test for the TO _ CHAR function in TestFunctions. java to improve date formatting and ensure
added validation for ValidTxnList and ValidTxnWriteIdList in GenericUDTFGetSplits. java to ensure valid transactions and write IDs are
replaced ` ArrayList < String > ` with ` Collections. emptyList ( ) ` for ` columnNamesProperty ` and ` columnTypeProperty ` to improve
added a method ` hasInitialNoImage ( ) ` to check the existence of a book and modified the ` hasNoImage ( ) `
modified the formatting of the ` SSTDeserializer ` and ` TestSSTDeserializer ` classes to enhance code readability and maintain consistent formatting
updated default grid column handling and scaling logic in AppPreferencesImpl and ExtendedListFragment to improve user experience by ensuring a consistent default grid column
updated error messages in Platform. java and ComparisonFailureWithFieldsTest. java to improve clarity of error messages related to line breaks
fix sample queue wait for key.
updated API endpoint paths in OkexV3. java to ensure consistency with the new API structure
updated boundary checks in LineUtilitiesTests. java to improve accuracy of boundary detection
added error logging for varargs syntax in JavacParser and created two new classes VarargsAndOldArraySyntax and T6569633 to improve
added playback thread verification in DefaultDrmSession and DefaultDrmSessionManager to ensure that DefaultDrmSession and DefaultDrmSessionManager
added methods and modified variable context handling in VariableContext. java and TestVariableContext. java to enhance functionality for variable contexts and improve test coverage
added tests for invalid compilation unit and profile string JSON in ExperimentParserTest. java and removed the asNullableBoolean method from ExperimentJSONParser.
refactor buffer position handling in Piece. java and SharingPeer. java to improve code clarity and maintainability
added responseTimeout property to HttpClientProperties and modified GatewayAutoConfiguration and NettyRoutingFilter to utilize it to improve response handling and allow for configurable timeout
refactor CxxLibraryFactory and NativeLinkTargetGroup for consistency and clarity to improve code readability and maintainability by standardizing method calls
add unit test for camel - main rest configuration
added support for handling RexFieldAccess in ASTConverter and RexNodeConverter to enhance functionality for handling field access in the query plan
replaced direct usage of ` QueryLogEntry. values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
add a method ` noProxyPredicate ( ) ` to the ` Proxy ` class and refactor URI construction in ` WebClientRequestBuilderImpl ` to
updated certificate handling logic in PKCS12KeyStore. java and modified certificate loading in StoreSecretKeyTest. java to improve certificate management and ensure correct
added reflection access checks in ` NativeObject `, ` Bootstrap `, and ` ReflectionCheckLinker ` classes to enhance security by verifying access
removed the public access modifier from the CollisionMap constructor to allow access to the constructor from other classes
removed the @ NotNull annotation from the getRawInputFromTransactionInput method and added a null check for the input to indicate that the input is not
refactor log level handling from multiple if - else statements to a switch statement to improve readability and maintainability of the code
remove region _ id parameter from insertsql
added handling for ` FILE _ PASS _ RECORD _ SID ` in ` OldExcelExtractor ` and updated test assertions in ` TestOldExcel
add extra _ image _ build _ argument to mx _ java _ benchmarks
removed an unnecessary else clause in TimeLineCursorAdapter. java to streamline code for better readability and maintainability
[ hotfix ] [ test ] increase timeout in batchingstatechangedenclosetest
refactor directory deletion logic in ShadowContext. java and add a new deleteDir method in ContextTest. java to improve directory management and ensure proper
updated exception handling in ExceptionFactory to utilize Class. forName for AssertionFailedError and JUnit ComparisonFailure to improve error handling and ensure compatibility with the
increased WAIT _ TIME _ MS from 10000 to 60000 to allow more time for the launcher to complete before proceeding
replaced static import of CLAIMS with a wildcard import and added audience handling in ConnectOAuth2RequestFactory and ConnectTokenEnhan
camel - 14284 : camel - kafka - remove default value from uriparam
added a new static final integer selectableItemBackground to facilitate the selection of items in the application
replaced individual trade DTO imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and provide a placeholder for
updated event type assignment logic in TxnSetOperation. java to ensure correct event type is set when the record is null
added a new class ` ResumableRandomAccessFileListener ` and modified ` ResumingExternalDownload ` and ` ResumingExternalDownload `
updated class loading to use " AbstractAccessLogValve $ 3 " instead of " AccessLogValve $ 3 " to align class loading with the
added functionality to set and retrieve the format string in HSSFDataFormat. java and updated test assertions in TestWorkbook. java to improve handling of
[ hotfix ] deprecate flinkkafkaproducer for backwards compatibility
updated the condition for checking compressed length in CompressedInputStream. java to ensure that the compressed length does not exceed the maximum allowed size
camel - 15836 : camel - redis - add an idempotent repository for idempotent operation
fix entity damage not be apply to vanilla. close # 7795
added logic to check if the repository layout is local before returning the artifact path to ensure correct handling of local repositories in the LegacyLocalRepositoryManager
added logging for task manager initialization and improved error handling in LocalInstanceManager and JobManager to enhance error reporting and ensure proper initialization of TaskManager
added functionality to provide detailed information about the deployment process in AbstractArtifactResolutionException. java to enhance debugging information for deployment scenarios
updated the method for obtaining the internal temporal path in UploadFileOperation. java and added a new method in FileStorageUtils. java to improve
updated import statements and added a method to find FeedEntryStatus by entries to improve code clarity and functionality for fetching FeedEntryStatus based on subscription
added execution logic to manage Vert. x thread execution in ContextImpl. java and introduced a new test in BlockedThreadCheckerTest. java
updated the ` instantiate ` and ` convert ` methods to accept ` formatterString ` and ` ctorArgClass ` as parameters and added a test
updated Ezvcard parsing logic to handle different Android SDK versions to ensure compatibility with newer Android SDK versions
refactor remote address and hostname assignment in Credentials. java to improve code clarity and maintainability by using more descriptive variable names
added a null check for the realClass in Robolectric. java to ensure that the shadow class is not annotated with @ Implements to
added a check for ` tlsMutualAuthenticationRequired ( ) ` in ` NettySslContextFactory ` and ` ExampleNettySslContextFactory ` to ensure
added a test for requesting a plain HTTP endpoint that throws a SSLException to ensure proper handling of SSL exceptions in the server
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to allow access to these methods from other classes
refactor event handling logic in PageChangeListener. java and FrameRenderer. java to improve code readability and maintainability
updated warning log message from " email " to " SMS " in CommunicationsManager. java to clarify the purpose of the warning message for
# 157 - add draftqueryoptimise method to beandescriptor and beandescriptordrafthelp
added exception handling for IO exceptions in MultipartBody. java to improve robustness by gracefully handling potential IO exceptions
[ fix ] : fix typo in cttypereference array
( chore ) camel - main - java : update copyright year to match the copyright year
fix : attach file action use current working directory
added LoadOptionsBuilder and modified SchemaCrawlerOptionsBuilder usage in AccessTest. java to improve clarity and functionality of schema loading options
updated package structure and modified test method names in TestLoadLegacyLibrary. java to improve organization and clarity of the code
modified the return value of the TestParseException to return null instead of throwing an exception to ensure that the test method returns null instead of throwing an
added functionality to set the name, enabled, and expanded properties based on the prototype's state
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and prevent potential memory leaks
refactor DataStreamJob class to improve code readability and maintainability
added error handling for ErrnoException in TestContentProvider. java to ensure proper resource management and prevent potential memory leaks
camel - 4897 : camel - cxf should use classhelper to determine the class of the cxf instance.
added a conditional check for the " h2 - 14 " protocol in HTTP2ServerConnectionFactory. java to ensure only black list protocols are
refactor parameter symbol handling in LambdaToMethod. java and introduce mIsLambda flag in ClassFileVisitor. java and ReflectionVisitor. java to improve
modify the copular word regex pattern in coordinationtransformer. java to improve the accuracy of the copular word matching logic
added a timeout parameter to the copyURLToFile method in DL4JInceptionV3Net. java to allow more time for file transfer
added setSlop ( phraseSlop ) method to QueryParser to enhance query parsing functionality
fix flaky long press test
updated the default value of Servers from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to ensure compatibility with
add a parallel task to the game scheduler to allow for parallel execution of the game
updated visibility logic for compound in EditShareFragment to account for available edit options to ensure correct visibility behavior based on user preferences
updated progress calculation to apply a maximum cap of 1f to enhance the progress increment logic to ensure it doesn ' t exceed 100%
remove unused method packetreceived ( )
added debug logging for authentication failures and refactored client authentication handling to improve error handling and streamline client authentication process
added null checks for the service parameter in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUIAction classes to
added a hidden parameter to the PantheonCommand class to enable account level permissions for the smart contract
added doNotInstrumentClass for the CoroutinesRoom $ Companion class to prevent instrumentation of the CoroutinesRoom $ Compan
removed conditional logging for the context class loader in NegotiateAuthentication. java to streamline the code by eliminating redundancy
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization process by eliminating redundancy
camel - 15836 : camel - jms - reply manager should use same thread name for persistent and temp queue reply manager.
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added conditional logic to flush and close mc blocks in PdfDocument. java to ensure proper rendering and closing of mc blocks when tags are present
log4j2 - 1349 add test for pattern selector.
simonstewart : don't run selenium rc test in hta mode
replaced ` thank ` method with ` MwThankPostResponse ` and added a new ` MwThankPostResponse ` class to
added a new interface ` SocketBased ` and modified ` ChannelEndPoint ` to extend ` AbstractEndPoint ` to implement ` SocketBased `, while
refactor revokingStore initialization and update maxSize logic in Manager. java to improve code clarity and ensure proper handling of revoking store
added tests for implicit join functionality in HQLTest. java to ensure correct handling of implicit joins in the database
added normalization of expected and actual values in NonVisualRegressionTest. java to ensure consistent formatting of expected and actual values
replaced references to ` pendingCommit ` with ` filesToCommit ` and introduced ` assertNoUnreferencedFilesOnClose ` method to improve clarity
removed ` final ` modifier from method parameters in ` BaseError. java ` and added ` @ Final ` annotation to ensure immutability of
added validation for user resource percentage in ConsumeUserResourcePercentActuator to ensure that percentage values are within valid range to prevent runtime errors
added a condition to check if ` showLegacyLogin ` is true based on the ` show _ old _ login ` resource to ensure the legacy
rename StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming
updated setResponsePage to include UsersPage instead of EditTeamPage to streamline response handling for improved user experience
updated debug log message to include the exception for initializing plugin credentials to improve clarity of error logging for better debugging
refactor connection handling to ensure proper resource management to improve resource management and prevent potential resource leaks
refactor Rocket class structure to improve code maintainability and readability
added a method ` createDynPartSpec ` to check for dynamic partition specification in ` BaseSemanticAnalyzer ` to ensure correct handling of partition
make sure round _ half _ up _ factor be always 1 / 10 instead of 1 / 10
added functionality to handle directory entries in ` JarDirectoryStep ` and corresponding tests in ` JarDirectoryStepTest ` to ensure that directory entries are
added a new JWKSetEditor class to handle JWKSet values to enable parsing and handling of JWKSet values from
refactor term handling in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to improve clarity and maintainability of term processing
add truffle boundary for partialevaluationconstant.
changed default value of " fetcher. threads. per. host. by. ip " from true to false to ensure that the fetcher correctly handles
refactor conditional check for queryTimeout in StatementUtil. java to improve readability and maintainability of the code
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest. java to ensure genPath
refactor ReplicaPosition class to improve code readability and maintainability
fix : network usage stats update task should run immediately if the initial delay be negative
updated interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use FINAL _ FRAME instead of t - > t to improve animation
updated swipeLength calculation in Background. java to include a dynamic value based on display density to enhance user experience by adjusting swipe behavior based on
added a new module - info. java file for the Jetty HTTP 3 server and modified the FillInterest initialization in multiple classes to ensure proper module
updated value handling in JsonType. java and introduced constants for JSON object names in JsonTest. java to improve code clarity and maintainability by
refactor code to improve readability to enhance maintainability of the code
[ hotfix ] [ runtime ] remove the use of optional. nodefault ( ) from checkpointconfig
updated the method signature and logic in ` InnerClassesTable ` to use ` Element topElement ` instead of ` TypeElement ` to improve clarity
updated the format of the command string for better readability to improve readability and maintainability of the code
replaced FluentIterable with Arrays. stream for file listing in ChromeTraceBuildListenerTest. java to improve code readability and performance by using modern Java
[ 3.0 ] add support for register dubbo service ( # 2497 )
fix crash when open otr mode be disable
added properties for node label outline size, transparency, and outline transparency in PreviewProperty and NodeLabelRenderer to enhance rendering capabilities by allowing customizable
refactor ProxySelector, URL, and URLStreamHandler classes to improve code organization and maintainability
added a boolean parameter to the method call in Win32FontManager. java to enable functionality for font management in the application
added null check for the variable'v'in TreeVisitor. java to prevent potential NullPointerException when'v'is null
added error handling policy based on the presence of a classpath in JDTBatchCompiler to improve error handling behavior when no classpath is available
added text and text anchor properties to LabelBlock and updated draw method to utilize them to enhance flexibility in label rendering by allowing dynamic positioning of text
updated method implementations in mmm and ppp classes to improve code clarity and maintainability
refactor methods in IndexReader. java to improve code clarity and maintainability
replaced boolean isLoopback with Boolean isLoopback and added null check for networkInterface to improve null safety and prevent potential NullPointerExceptions
updated the ` fromRfc1123DateString ` method to include a ` Locale ` parameter to ensure consistent date formatting across different locales
fix flaky test
nifi - 7171 : add output _ no _ hits property to jsonqueryelasticsearch
use aggregation ratio instead of aggregation ratio for quota update
[ java ] use try - with - resources statement to avoid resource leak.
remove unnecessary call to onfirstnull ( ) in streamfilesp. close ( )
refactor widget handling logic in PageChangeListener. java to improve clarity and maintainability of widget event processing
added a method ` isWriteProtected ( ) ` to the ` Workbook ` class and modified the ` FileSharingRecord ` class to
added a try - catch block around the unregisterInvalidatedatedSessions ( ) method call to handle potential exceptions during session unregistration
refactor CategorizationFragment. java to improve code readability and maintainability
updated status message from " reachable = false " to " not reachable = false " in HueLightHandler. java to clarify the reason for
added a loading flag to the FMLClientHandler and created a method to check if the client is currently loading to enhance the functionality of the
fix ` ` [ gray ] mil [ ]'' to ` ` [ gray ]''
added handling for BYTES and STRING types in MessagePackParser and implemented a corresponding test in MessagePackDataformatTestBase and MessagePackParserTest
added a parameterized test for querying with reserved words as identifiers in HqlQueryTransformerTests. java and JqlQueryTransformerTests. java to
added tests for serialization and deserialization of nested maps in MapTest. java to ensure correct handling of nested maps in JSON responses
fix geometryutils. getx2 ( ) and geometryutils. gety2 ( )
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and maintainability by using a dedicated sorting order dialog
added error handling for empty TestPlan in StandardJMeterEngine. java to improve robustness by logging errors when no test plan is found
replaced direct calls to ` DbmsTypeOf ` with ` Lazy < DbmsType > ` and ` Lazy < DbmsOperationHandler >
added a conditional check for non - strict identification in the parser to ensure proper handling of non - strict idents in strict mode
updated the default protocol from " SSL - HTTP / 1.0 " to " SSL - HTTP / 1.1 " to ensure the correct protocol is used for
set default value for displayVolume to true to ensure volume display is controlled by default
updated the ` version ` method to accept a boolean parameter for logging version and modified the ` version ` method to accept a ` full ` boolean
refactor logic in ChangeLogParameters. java to handle global change logs more robustly to improve robustness of change log retrieval logic
change log level from warn to debug for jtatransactionmanager
hhh - 147642 - fix setoperationtest for oracle
refactor socket timeout handling in Connection. java to improve readability and maintainability of the code
updated size calculations across multiple fragments to account for popup status to ensure correct height calculation for non - popup activities
changed default value of CHA from false to true in EspressoOptions. java and made DefaultClassHierarchyOracle and NoOpClass
fix for http : / / issues. apache. org / activemq / browse / amq - 4237
replaced deprecated ` generateSeededTimeRandomizersAndTheirExpectedValues ` method with a new ` shouldGenerateTheSameTimeForTheSame
added URL redirection for Jakarta EE 9 and Jakarta EE versions in WebDescriptor. java to ensure compatibility with Jak
fix : don't check if a node be readiness
refactor loop to iterate over handler endpoints instead of liveEndpoints to improve clarity and maintainability of the code
added a null and empty check for creationStatements in IdTableHelper. java to prevent potential NullPointerExceptions when creating tables
updated RPC _ VERSION from 1 to 2 in DataRpcConfig. java and UserRpcConfig. java to align RPC version with the latest configurations
added a null check for System. getSecurityManager ( ) before accessing package access in ObjectStreamClass and ObjectStreamField to enhance security by preventing
removed unused imports and modified return statements in Utils. java ; changed UGSCommandCount from 0 to 0 in XLCDCommunicator.
refactor DefaultMetricsTagProvider to use a HashMap instead of a ImmutableMap for URL templates to improve flexibility and maintainability of URL template sanitization
updated the test suite for MockBrowserTest in ClientDriverSuite. java to ensure the test suite accurately reflects the intended functionality
change default level from OFF to ERROR in Launcher. java to provide a more informative error message for debugging purposes
changed member variables from non - final to final in IconNormalizer. java to enforce immutability and improve code clarity
added a boolean flag ` firstCallPrepareDo ` to control the behavior of the ` invokePrefixMethod ` method in ` PrepareInterceptor ` to
refactor ` showWorkspaceAndExitOverviewMode ` and ` showWorkspace ` methods for better clarity and functionality to improve code readability and maintainability by
added Singleton annotation to AuthWithStoreFeature and refactored Auth binding to use the singleton pattern to improve singleton handling and simplify the code
don't include invisible association in graphical data model
cloudstack - 7131 : remove private ip from capacity table when pod be delete
[ bugfix ] [ web ] update profile servlet documentation for async profiler
refactor model resolver logic and add a new class for RequiredRefFieldModel to improve code readability and maintainability while ensuring required fields are correctly
corrected the spelling of " CasCore " to " Cas " in multiple configuration classes to ensure consistency and accuracy in naming conventions
updated feature flags for improved functionality
updated ` ConfigStore. java `, ` CommonSetup. java `, ` ItemMapping. java `, and ` ItemMappingTest.
added null check for the holder's image drawable in TimeLineCursorAdapter and TimelineArrayAdapter to ensure that the holder's drawable is
updated the description of compaction settings for full CRUD tables in HiveConf. java to clarify that compaction only runs via queries regardless of the configuration
added a null check for storage path in the FileDisplayActivity to ensure that the file path is not null before proceeding with operations
replace resizeThreshold checks with a new checkResize ( ) method across multiple classes to improve code clarity and maintainability by centralizing resize logic
refactored LDAPConnectionService for improved connection handling to enhance reliability of LDAP connections
added @ Deprecated annotations to the AggregateDefinition class to indicate that this class is outdated and should not be used in new code
removed debug tracing logs in TouchInteractionService. java and added a constant in TestProtocol. java to streamline the code by eliminating unnecessary
added a condition to check if the class name starts with " com. intellij. rt. junit. " to ensure compatibility with IntelliJ IDEA version
updated assertions in TestMultiSearcher to compare hits2 and hits3 to ensure that the test accurately reflects the expected results
added a new LucenePackage class to facilitate the construction of LucenePackage instances
modified the calculation of sizeInBytes in RAMDirectory. java to ensure correct handling of existing size in the directory
updated calculations and added estimation methods in multiple classes to improve accuracy and maintainability of the code
added a null check for the drawer toggle before starting the animation to avoid potential NullPointerExceptions when accessing the drawer toggle
added @ SuppressWarnings annotation to the convertToAuthentication method signature to improve code safety by suppressing unused warnings
added logic to determine if ` scanModules ` should be set based on ` jdk. internal. loader. ClassLoaders $ AppClassLoader `
fix for msbib file export with corportrait / corportrait
added a method to cancel core recovery based on ZooKeeper awareness to ensure that recovery is only performed when ZooKeeper is active
updated time calculations in bug5070081. java and added a method to calculate the difference between two timestamps to improve accuracy of time measurement and
don't show edit view when there be only one entry in the list
fix javadoc warning
added role hierarchy and permission evaluator handling in SecurityEvaluationContextExtension to enhance security evaluation by allowing customizable role names
added a check to set the exponentSize to primeSize - 1 if it is zero to ensure the exponentSize is correctly set based on prime
replaced instances of ` ocLocalFolder. getSavePath ( ) ` with ` FileStorageUtils. getUsableSpace ( mAccount.
replaced delegate. combine ( ) with accumulate ( object ) in DistinctSqlAggregation. java and added a corresponding test in DistinctSqlAggregation
added a test method to verify the execution of post - login activities for a user on successful authentication to ensure that the login process behaves as expected
; review for # # # # # #
refactor CharArraySet to simplify code generation and improve readability to enhance code clarity and maintainability by reducing complexity
update error message for unsupported track formats in MuxerWrapper. java to improve clarity and consistency in error reporting
refactor JsBundleGenrule to return AndroidPackageable instead of JsBundleAndroid and update asset handling in tests to improve code clarity and ensure correct
updated character encoding in PinotClientRequestServlet and refactored string index calculation in StringDictionary to ensure proper handling of UTF - 8 character
replaced the " Logical Analyzer " case with " Logic Analyzer " and updated resource strings to use a new tile icon instead of the oscillo
added a static variable ` instanceClassName ` and modified the instantiation logic for the ` vector ` class to ensure that the ` vector ` class is
removed syncMetaLeader ( ) method from CMManager. java to streamline code by eliminating unnecessary synchronization
remove claimed to instructor question from feedback question detail
added TestLoggingExtension annotation to DiagramRendererTest to enable logging functionality during test execution
added a boolean parameter ` mapUnderscoreToCamelCase ` to the ` findProperty ` method across multiple classes to allow the method to handle
added support for VIOMI _ WATERHEATER _ E1 and VIOMI _ WATERHEATER _ E1 in M
replaced direct calls to getSslSessionData ( ) with a local variable to improve code readability and maintainability
added a new file CreateNewSpreadsheet. java for creating new Excel sheets to facilitate the creation of Excel sheets using the HSSF
refactor ` CacheProperties ` to use ` long timeToLive ` instead of ` Duration ` and update related methods accordingly to improve clarity and consistency in
replaced CONTENT _ URI with CONTENT _ URI _ NO _ NOTIFICATION in LauncherBackupHelper. java and modified icon retrieval logic in ShortcutInfo.
updated the version in the testCompile group from'2.14. 0'to'2.27. 2'to ensure compatibility with the latest
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager. java ` to improve
added a condition to check if the character is an'<'before verifying if ltLen is 1 to ensure that the code correctly handles
updated the method to retrieve the string resource for the workspace scroll format to improve readability and maintainability of the code
added import for Scope and invoked a message for no validation errors in ValidateCommandStep. java to enhance error handling by informing users when no
refactor IntegrationTestContextLoader to utilize DefaultResourceLoader and FileSystemResourceLoader for web resource configuration to improve resource loading efficiency and ensure proper servlet context
replaced ` getResponderAt ` with ` getComponentAt ` in multiple classes to ensure proper handling of scroll events and improve code clarity
removed unnecessary whitespace in RamlType. java to improve code readability and maintainability
` ` ` `''''''''''''''''''''''''
replace $ 1 and $ 2 with $ \ n1 in CellContentConverter. java to ensure correct handling of special characters in expression
updated regex patterns in SeleneseTestCase. java for glob matching to ensure correct matching of globs with specified characters
mondrian : fix typo in mondrianproperties. java
added stack trace printing for process start failures in ProcessTools. java and modified launcher logic in CustomLauncherTest. java to improve error handling and
added a test method for embedded images in TumblrRipperTest. java to ensure the TumblrRipper
added a condition to check if the symbol has a slot for the storeType before converting the storeType to ensure proper handling of storeType for
[ java ] don't call extractorwrapper. init when there be no output.
refactor BaseLockFactoryTestCase to use a custom toString method for ByteArrayOutputStream to improve readability and maintainability of the code
tika - 396 : add support for dynamic loading of serviceloader in tikaconfig.
replaced ` Pattern ` with ` Diagnostic ` and updated type declarations for ` javacFiles `, ` javacOpts `, and ` files ` to
added a check for both IMPORT _ CMD and DELTA _ IMPORT _ CMD in DataImportHandler. java and introduced a constant for the import
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` in ` ChangeTypeTest. java ` to ensure that inner
removed import statement for Log in JettyService. java to streamline code by eliminating unused imports
refactor checkItemPlacement method to include workspaceScreens as a parameter and update associated logic to improve item placement validation and ensure proper handling of workspace
simonstewart : add the ability to kill the jvm
[ iotdb - 6441 ] fix null pointer exception in realtime segment data manager.
added a check to skip processing for Teredo instances to ensure only Teredo instances are processed
show a warning message if the contact be not connect to the contact.
updated the registration method for USER _ DETAILS _ SERVICE _ FACTORY in AuthenticationConfigBuilder. java to ensure proper registration of user details
updated the drawBitmap method to use a null parameter instead of a fixed value to improve flexibility by allowing the draw method to accept a null value
fix meitrack and totem protocol decoder
changed method access modifiers for getFontPath and getPlatformFontPath in SunFontManager and X11FontManager to enhance encapsulation and improve font path retrieval
added @ Deprecated annotations to EnhancedRandom. java to indicate that these methods are outdated and should not be used in new code
[ hotfix ] [ test ] fix test forachedmaxsizeexception in clientmapstoretest
added functionality to keep empty sentence in document processing to enhance flexibility in handling empty sentence scenarios
refactor createArtifactSubdirectory method to return a boolean indicating success or failure to improve error handling and provide feedback on artifact creation issues
removed the ` IDELazyTreeLoader ` class from ` ReusableCompiler. java ` and updated return statements in ` JavaLanguageServer. java
added a null check for the answer in DirectAgentAttache. java to handle cases where the response is null
modified the ` sendEmail ` method to handle ` MessagingException ` to improve error handling and logging for email sending failures
fix pipe item obsidian crash
updated date parsing method to use Locale. ROOT instead of Locale. ROOT to ensure consistent date parsing across different locales
added a boolean flag ` includeDecals ` and its getter / setter in ` StorageOptions `, and implemented a ` IncludeDecals `
updated the generateDocumentation method to include an additional parameter and added a suppression annotation for the getImplementedDatabases method to improve documentation generation and
updated HiveProtoLoggingHook to retrieve duration from configuration and modified TestHiveProtoLoggingHook to enhance logging functionality and ensure accurate tracking of durations
updated log messages in SolrIndexConfig. java for consistency to improve clarity and accuracy of log messages
updated class file version check to include MAJOR _ VERSION to ensure compatibility with the latest Java version
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP password authentication to ensure correct functionality of LDAP password authentication in the application
replaced OrcInputFormat import with BasicStatsNoJobTask import and modified the conditional check to use the footer scan for transactional tables
fix an issue with save all notification in the editor
refactor VisibleAdvance class for improved readability to enhance maintainability and facilitate future modifications
fix : reflector. start ( ) don't reconnect when reconnecting
added a check for dynamic number columns in EdgeDataTable and NodeDataTable to ensure correct handling of dynamic number columns in Sparklines
added null checks for getGroupId ( ), artifactId ( ), and getVersion ( ) in ResolvedGroupArtifactVersion constructor to prevent potential NullPointerExceptions
added a null check for ` apiInfo ` before assignment to avoid potential ` NullPointerException ` when ` apiInfo ` is ` null `
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added texture management and texture disposal methods in PhotoPanel and FlameRenderer to improve texture management and ensure proper resource cleanup
updated method references and added local variable handling in InsnListEditor and InsnProxyListEditor to enhance functionality and improve local variable management
added validation for character boundaries in CSS parsing logic to ensure proper handling of carriage return characters and prevent potential errors
added a check for the " isLookAndFeelDecorated " property in UIServiceImpl. java to ensure proper UI behavior when the Look and Feel is
removed redundant'this'keyword from the SQL query in HostRoleCommandDAO. java to streamline the SQL query by eliminating unnecessary '
updated F2 _ TEST, F5 _ UNKNOWN, F6 _ UNKNOWN, and F6 _ TRANSPONDER _ TEST _ REPLY
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and functionality for swipe actions
replaced ` HostDatabase ` with ` ColorStorage ` in ` ColorsActivity. java ` to utilize ` ColorStorage ` for better color management
refactor String class for improved readability to enhance maintainability and facilitate future modifications
removed unused Logger and Charset declarations from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to retrieve global entries from the map
added multiple calls to the sendcoin method in MultiSign34. java to ensure that the PublicMethed functionality behaves as expected
( chore ) camel - CUfilter : migrate test to junit 5 ( # 4657 )
updated path separator handling in JavadocReport. java to ensure consistent path formatting across different operating systems
changed method visibility of augmentSuccessViewModelObjects from static to instance to allow subclass access to the augmentSuccessViewModelObjects method while maintaining encapsulation
added assertions to check if a field exists in the metamodel for ` AbstractEntity `, ` Person `, and ` String ` to ensure
removed unnecessary ` getConf ( ) ` parameter from Outlink constructor calls across multiple classes to streamline the instantiation process by eliminating unnecessary parameters
` ` ` ` ` ` ` `''''''''''''''''''''
updated method to include modifiers and removed unused imports in ` UseLambdaForFunctionalInterface. java ` and modified type expression handling in ` Types
fix : ` ` appendclassselector'' should be ` ` appendclassselector''
added a check to return the root input as a Aggregate in HiveCardinalityPreservingJoinOptimization. java to ensure that the root input
fix npe in registryevent. getmapping ( )
updated variable assignments for x3 and y3 in Intersector. java to ensure consistency in variable naming
added default methods ` sbeDecodedLength ( ) ` and ` sbeLimit ( ) ` to ` MessageDecoderFlyweight ` to
refactor ElasticsearchContainerTest to use a constant for the ELASTICSEARCH version instead of a hardcoded value to improve code readability and maintainability by
fix arrayindexoutofboundsexception in workreceiver
refactor ClusterDefinition to use constants for cluster name and version ID to improve code readability and maintainability by centralizing cluster definition logic
camel - 15836 : remove duplicate setconfiguration ( ) method from ftpendpoint
zeppelin - 2576 : fix ` ` fetch dependency'' error
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified the ` Gen. java ` file to
added a check to skip processing for basic constraints in ForwardBuilder. java and created a new class BuildEEBasicConstraints. java to enhance
added a check for the database version in the initAfterFirstDbConnection method to ensure that values with the same time will be upserted for
set maxMessageSize to 64MB and implement setInputBufferSize method in AbstractWebSocketConnection to ensure that the WebSocket buffer size does not exceed defined limits
removed undeleteAll variable and added pendingDeleteCount checks in SegmentReader. java ; added a new test in TestIndexReader. java
replaced Assert. notEmpty with a null check for scopes in ClientRegistration. java and added new test cases in ClientRegistrationTests. java to
added a null check for orderBy before adding it to the explanation to avoid potential NullPointerExceptions when orderBy is null
[ java ] use hamcrest assertion instead of junit in clusterentrypointtest
cloudstack - 7131 : don't try to delete vm when it be in stopped state
hive - 25880 : hive server2 should log the initializelog4j call to debug level
added a check for non - empty tasks in AssetManager. java to avoid potential null pointer exceptions during asset loading
change the return type of the deleteNode method in PubSubManager and OpenPgpPubSubUtil to boolean to indicate whether to delete a
added null checks for ` strValue `, ` longValue `, ` doubleValue `, and ` booleanValue ` in ` TsKvLatest
added checks for empty barcode strings in Code128Reader and Code39Reader, and implemented null check in FalsePositivesBlackBoxTestCase to
changed the type of the ` suites ` variable from ` TreeSet ` to ` LinkedHashSet ` to ensure consistent iteration order for ` CipherSuites `
added control character detection in Escaper. java and modified expected string in InternationalizationTest. java to ensure correct handling of control characters
refactor ProviderSqlSource to check if the provider method is a CharSequence before invoking it to improve error handling for duplicate provider method invocations
updated import statements and improved null handling for aliasChildren in InternalMNode. java to enhance code clarity and prevent potential NullPointerExceptions
added a method to calculate the scroll offset for a page in PagedView. java and updated scrollDelta calculation in Workspace. java to improve
renamed variable ` synthetic ` to ` pruned ` and refactored code for clarity to improve readability and maintainability of the code
added a call to setAccessible ( true ) in WidgetInterceptor. java to ensure proper accessibility of methods in the interceptor
added a condition to check if the field name equals " database. server. id " before setting the literal initializer to ensure that the literal initializer
updated the Mozilla version for the Ripper to ensure compatibility with different operating systems and improve user experience
added a new menu item for the web interface in BasicSystemUtils. java to provide users with an easy way to access the web interface for
refactor HandleGetter to use a constant for the actual value and improve variable naming for clarity to enhance code readability and maintainability by reducing redundancy
added a null check for the ` r ` variable in ` EncryptedSlideShow. java ` to handle potential ` ArrayIndexOutOfBoundsException ` when building
[ hotfix ] [ core ] add more logging for queue creation and checkpointing.
replaced the call to loadBattlePassManager ( ) with a call to loadBattlePassManager ( ) to avoid null pointer exceptions
added " AllowAgentForwarding " and " AllowTcpForwarding " options to the PortForwardingContainer class to enable agent forwarding functionality for SSH connections
added a large long array and forced garbage collection in ThresholdTest. java to optimize memory usage during garbage collection
added checks for log names starting with " before " and " after " in StdErrLog. java and StdErrLogTest. java to
fixed - rremoteservice. getlocalserivce ( ) method throw npe if remote service name don't match
added methods ` isSelected ( ) ` and ` setSelected ( boolean ) ` to the ` MultiButton ` class to enhance functionality for selecting items in
replaced the UpNextActivity import with NextUpActivity in CustomPlaybackOverlayFragment. java to reflect the new functionality of NextUpActivity
( chore ) camel - infra - broker : fix typo in brokercontroller
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection management to improve connection handling and ensure proper resource management
refactor background color retrieval to use a new utility method for theme color to improve code clarity and maintainability by centralizing theme color logic
rename ` ` participanttransportaddresschanged'' to ` ` peertransportaddresschanged''.
updated type adapter registrations in ToolingApiLauncher. java to ensure proper instantiation of type adapters
updated the range of values in TestPayloadCheckQuery. java to ensure accurate validation of payloads in the query
refactor ConsoleReader to simplify character handling and improve buffer printing logic to enhance code readability and maintainability while ensuring proper handling of empty lines
added user information to the BaseCommand class to enhance user feedback during command execution
move modulesupport and export class from test to api. test
[ hotfix ] [ test ] remove unused constructor in slotsharinggroup
added a condition to check if the Java version is not compatible with Java 8 in StreamExInternals. java to ensure compatibility with Java 8
updated texture references from " data / wheel. png " to " data / sys. png " and adjusted song duration from 22 to 183
removed redundant registration and unregistration of the receiver for mCloseSystemDialogsReceiver to streamline the code by eliminating redundancy
removed an unused import statement in HostsRemovedEvent. java to streamline code by eliminating unnecessary imports
updated ClientDetailsEntity, ChainedTokenGranter, IntrospectionEndpoint, and OAuth2TokenGranter to allow introspection functionality and
added html encoding for remote user and session attributes in HtmlSessionInformationsReport. java to ensure proper handling of special characters in session information
added new links to PhraseQuery, PhrasePrefixQuery, and SpanQuery in the Query. java file to enhance the functionality of the
updated method calls from ` size ( ) = = 0 ` to ` isEmpty ( ) ` in ` CommentsInserter. java ` and `
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods to improve readability and maintainability of the code
changed method parameter types from A to Object in AbstractAssert, Assert, DateAssert, Descriptable, and DateAssert classes to improve type
replaced ` ThrowingFunction ` with ` ThrowingFunction < T > ` in ` JwtPlugin ` and ` ThrowingFunction ` classes
added a new method ` getUploaderBehaviour ( ) ` to ` AppPreferences ` and refactored the ` setUploaderBehaviour `
fix : try to initialize final field in constructor
updated BitmapDrawable instantiation to use Robolectric for better testing to ensure that the drawable is created in a controlled testing environment
changed method names from ` isValidSEnding ` and ` isValidEnEnding ` to ` isValidEnEnding ` and added a character
replaced ` ic _ pageindicator _ add ` with ` ic _ pageindicator _ current ` in ` Workspace. java ` to clarify the purpose
added a reinvocations counter in BasicInvocation. java to track the number of reinvocations to improve tracking of reinvocations for better
updated the calculation for topPadding in DefaultLookAndFeel. java to correctly account for the inner height of the text area
added a break statement in Recognize. java to prevent fall - through behavior
added haptic feedback functionality for the home screen in various components to enhance user experience by providing long press feedback for the home screen
refactor excel formula handling in ExcelBatchReader. java and add a new test for text formula in TestExcelFormat. java to improve handling of
fixed bug 1291655 - immutablefield now catch assignment in anonymous inner class method.
added a ` userAgent ` variable to ` CommaFeedConfiguration ` and updated the user agent assignment logic in ` HttpGetter ` to ensure user
camel - 16400 : camel - base64 - camel - aws2 - bom should be generate by camel - core - maven - plugin
change log level from info to debug for file not found message to reduce log verbosity for better debugging
renamed ` QueueTest ` class to ` QueuedPipeTest ` to clarify the purpose of the test class
updated version check logic in BukkitMain. java to ensure compatibility with OfflinePlayer's getUniqueID method
camel - 15836 : camel - core - optimize route collector to not try to discover route
added vertexColor property and modified color handling in PShape3D. java to enable customizable vertex colors for different rendering modes
updated method signatures and variable names in SchemaDotFormatter. java for consistency and clarity to improve code readability and maintainability by using more descriptive
replaced shadowMatrix. getValues ( ) with matrix. getValues ( m ) in ShadowMotionEvent. java to streamline code by eliminating unnecessary
updated package structure for MetaRules and removed unused import in PythonDslProjectBuildFileParser and PythonDslProjectBuildFileParserTest to
refactor class definition handling in GroovyEngine. java to improve readability and maintainability of the code
[ hawtio - plugin ] add plugincontextlistener to allow plugin to be initialize and destruction.
removed duplicate print statement in NativeCodeGenerator. java to streamline output for better readability
replaced updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) in FlightConfiguration. java to improve event handling
added tests for ` ExpectedException ` in ` ThrowableAssert _ hasCause _ Test. java ` to ensure that ` actual ` and ` expected
removed redundant variable declarations for flattenName and pack in AutomaticDependencies. java to streamline code by eliminating redundancy
rename ` requestedScopes ` to ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint. java ` to improve clarity by using a more descriptive
simonstewart : add marionette test for firefox profile
camel - 16400 : camel - core - allow to configure route description.
; ; ; ; ; ;
added a line to set the weight of the edge in ImporterCSV. java to ensure that the edge's weight is correctly set for
bug fix : get tariff cost per hour from the usage record
updated SQL queries in DatabaseMetaData. java to include adsrc and adnum fields to ensure accurate retrieval of database attributes
added a null check for binarized sentences in SentimentAnnotator. java to ensure that Binarized sentences are not built by the
updated the ` toString ` method in the ` User ` class to include detailed username, password, enabled, accountNonExpired, accountNonLocked
added null check for message body in MessageHelper. java to improve robustness by handling potential null pointer exceptions
[ hotfix ] [ runtime ] fix typo in task deployment descriptor factory
fixed group visibility check for node group.
added Maven test classpath reference to AbstractJRubyMojo and removed unchecked suppression warnings in CucumberMojo to ensure the test class is loaded
removed redundant checks for ` rtype ` in ` MethodHandleImpl. java ` and added a new test method in ` MethodHandlesTest. java
added imports for StopFilterFactory and NamedSPILoader classes in CommonGramsQueryFilterFactory, AnalysisSPILoader, and LegacyHTMLStripChar
changed conditional checks from'>'to '! ='for width and height in URLImage. java to ensure proper handling
added a condition to check if the name does not start with " META - INF / " and modified the handling of the ". class "
added a background task to the createImageToFileSystem and createImageToStorage methods to ensure that the ImageDownloadService runs on the UI thread to avoid
updated version check logic in StackWalkerTest. java to ensure tests reflect the correct expected version and improve logging clarity
changed the access modifier of the addViewportJob method from protected to public to allow access to the method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method to simplify the flow creation process by eliminating unnecessary parameters
added server restart and no system exit settings to the TestDatabase class to ensure proper handling of server shutdown scenarios
added null and empty check for block in NodePathsConvertOperator and modified child iteration logic in SchemaQueryMergeOperator to improve robustness by preventing
added methods to retrieve harvesting time and updated harvesting time retrieval across multiple classes to enhance functionality by providing accurate harvesting time
updated font drawing parameters in ParticleEditor. java to improve visual appearance and performance of particle rendering
added logic to update the " hadoop - env " property based on the " keyserver _ port " configuration to ensure that the " hadoop -
[ fix ] svgviewer create with transparent background.
removed ` @ Config ( minSdk = M ) ` annotation from ` ShadowKeyguardManagerTest. java ` and added ` @ Implementation `
updated the containsExactly method signature and added a new test for an array contain exactly to improve clarity and functionality of the method's functionality
updated Bucket4jFilterFunctions to include refillGreedy functionality and improved bucket proxy handling to enhance functionality and ensure proper handling of bucket requests
updated GermanAnalyzer, GermanStemmer, and WordlistLoader classes for improved functionality to enhance text analysis and functionality for german
updated the Generator class to include postExecHooks and modified transformations to use postExecHooks instead of transformations to ensure proper handling of context
added error handling for NoClassDefFoundError in REngine. java to ensure that the supported flag is set to false when a NoClassDefFoundError occurs
refactor ` TraceWebFilter ` and ` TraceWebFluxTests ` to use ` SpanAndScope ` instead of ` Span ` to improve
added a null check for the getCause ( ) method in AbstractUpdateCommandStep. java to avoid potential NullPointerException when retrieving the error message
updated SolrServerException to include the base URL as a parameter to improve error handling by providing context about the Solr server exception
modified the logic for setting and returning the landscape orientation of the print setup record to ensure correct handling of landscape orientation in the output
updated null handling in JavaVoidObjectInspector to safely return NullWritable when'o'is null
added a check to throw an exception if the argument name contains an empty string to improve error handling for invalid argument names
added inMemoryBackgroundLocationListener to manage location updates based on the activity's activity context to improve location management and ensure location updates are only
modified the condition for determining if the primitive type is GL10. GL _ POINTS to ensure proper handling of GL10 primitive types
trufflestring : check the length of the array before execute it.
added functionality to set the command list based on the current state of the ComboBox
nifi - 701 : fix issue with pem file name contain forward slash.
removed redundant command construction in ZkCLI. java to streamline command execution and reduce unnecessary complexity
updated equality checks in FirmwareUpdateProgressInfo and BridgeHandler to use `. equals ( ) ` instead of `. equals ( ) `
added a conditional check for remote grpc status before posting the severe message to ensure that the severe message is only sent when the remote grpc
refactor method signatures in various classes for consistency and clarity to improve code readability and maintainability
added entity ID to tick entity in ForgeChunkManager. java to ensure proper handling of entity IDs during tick processing
add ` ` EGL _ BAD _ SURFACE'' and ` ` EGL _ BAD _ NATIVE _ SURFACE'to the
added support for retrieving supported locales in FeatureRegistry. java and updated InfoRequestHandler. java to handle unsupported locales and improve error handling
updated the server URI from ` serverURI ` to ` http : / / myhost : 1234 ` in RFC2616BaseTest. java
added a call to addToHelperList ( ce ) in the Construction class to enhance functionality by allowing the addition of helper lists
added handling for escape sequences in GlyphLayout. java to improve robustness by skipping the first character in the escape sequence
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring correct context class loading and
refactor ` populateDirectoryList ( ) ` and ` browseToRoot ( ) ` logic in ` ReceiveExternalFilesActivity. java ` to ensure
[ ci ] fix npe in testng
updated the deltap calculation in BarrowmanCalculator and TubeCalc to improve the accuracy of the deltap calculation
added type checking for COLUMN _ KEY in TimelineControllerImpl. java to ensure proper handling of Node instances in the application
added a method to register extra components for the broker admin application to allow external access to the broker admin application
added a new test method ` testBug4658 ` in ` MultiCfQueryExecIT. java ` to verify that the query behaves
peergroup. getpeerversion ( ) should consider witness
fix a bug in the abstractbuilder that could cause a stack overflow.
refactor Ratis configuration handling to use a Supplier for retry attempts to improve reliability and maintainability of the Ratis configuration
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a check for ManagedService annotation in DefaultRemoteProxy to ensure JMXHelper is only registered when ManagedService is present
tika - 3641 -- fix for tika - 4892, tika - 4892, tika - 489
; review for # # # # # # # # #
added methods to lookup generic types for interfaces and superclasses in TemplateRegistry to enhance functionality for handling generic types in the application
reduced the buffer size from 512 to 1028 in ByteArrayOutputStream to optimize memory usage and improve performance
added todo message for unavailable language symbols in PlayerSettingsScreen
updated byte array size from a fixed value of 8192 to a fixed value of 8192 to accommodate larger data sets and prevent potential issues with
move windowfocuslistener to windowadapter and remove windowlostfocus from menu
added a null check for the source ASTNode before throwing a SemanticException to improve robustness by preventing null pointer exceptions
added scaling and center extent creation for aabb in SkeletonRenderer to enhance visual rendering by incorporating scaling factors
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` to retrieve the Solr
added @ ComponentScan annotation to SpringWebConfig. java to enable scanning of components in the web application
removed the ` getAccount ( ) ` method from ` UserListItem ` to streamline the account retrieval process
added a test for installing package with default package names in ShadowPackageManagerTest. java and modified process name handling in ShadowPackageManager. java
refactor AvailableSettings class for improved readability to enhance maintainability and facilitate future updates
added TransactionTrace class with ReceiptCapsule and TransactionCapsule to enhance transaction tracing capabilities
add client. client. shuffle. member. list system property.
replaced ` Text ` with ` CrawlDatum ` in ` SegmentReader. java ` to improve data handling by using ` CrawlDatum `
refactor JsonDeserializer class to improve code readability and maintainability
updated fetch size handling in TsfileDBConfig and modified fetchSize initialization in QueryProcessExecutor to improve performance and ensure consistent fetch size across
updated error message from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument to " trunc ( ) only takes STRING /
removed unused import of ExecutionContext in TaskletStep. java to streamline code by eliminating unnecessary dependencies
initialize the title variable to an empty string to ensure a default value is used for the title variable
added a constant for empty response body in AsyncHttpClientCall and created a corresponding test in AsyncHttpClientCallTest to ensure that the response body is
add a new interface ` EmbeddedServerInstance ` that extends ` io. micronaut. runtime. server ` to provide a way to
refactor MacAdapter instantiation and add a method to register Mac events in JabRefFrame to improve code organization and enhance functionality for registering Mac events
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` to clarify the purpose of the test class
modified the return statement in the HandlerLibrary. java file to ensure the method correctly handles enum types
changed the visibility of the hideUnprivilegedObjects variable from private to private final to ensure immutability of the hideUnprivilegedObjects
change the scoring thread log level from info to fine and update the test to use a configuration manager to reduce log verbosity and improve test reliability
added a check for Android Q and implemented video URL saving for Android Q to ensure compatibility with Android Q and improve video URL handling
fix null pointer exception in service task variable
updated EhCacheTicketRegistry, LdapPasswordPolicyEnforcer, GoogleAccountsService, SamlService, and SamlCompliantUnique
simplify logger creation leverage map . computeifabsent
hbase - 16836 remove outstream for compatibility with hadoop 0.23
updated row IDs for " delta _ 0000021 _ 0000021 _ 0000 / bucket _ 00001 " in TestAcidOnTe
changed log level from info to debug in MavenEnhancePlugin. java to reduce log verbosity during enhanced class logging
added a method to retrieve the default " Conscrypt " provider and updated the provider name logic to ensure compatibility with different cryptographic providers
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod to enhance functionality for capturing captured fields in tests
added error handling for cases with no test cases are present to improve robustness by throwing an exception when no test cases are found
updated import statements and modified conditional logic in GroovyAutoComplete and GroovyLanguage classes to improve code clarity and ensure proper handling of Java identifiers
graphhopper should use osm instead of graphhopper
[ java ] use clientconfig instead of httpclient in handlesession
changed the visibility of mHideSysUiScrim from final to non - final and added logic to conditionally hide the top shadow based on user
modified the enqueue method to include a canceled flag and adjusted exception handling in OkHttpCall to ensure proper handling of canceled calls and improve error reporting
refactor swipe handling logic in WindowTransformSwipeHandler. java to improve clarity and functionality for swipe actions
updated the RequestMatcher interface to extend from org. springframework. security. web. util. matcher. RequestMatcher to ensure compatibility with Spring
added a new class ` ImplicitLambdaConsideredForApplicabilityTest ` and modified ` DeferredAttr. java ` to include IF
fix for ` ` object. valueof ( ) = = null''
added unit tests for display metrics in DeviceConfigTest. java and updated dimensions calculations in DeviceConfig. java and DeviceConfig. java to ensure
replaced IOException with RuntimeException in ExternalViewReaderTest. java and refactored URL method invocation in PluginClassLoader. java to improve error handling
updated icon icon resource from ` ic _ launcher ` to ` ic _ launcher ` to improve user interface by providing a more accurate icon
added content text setting for error in FileUploader to improve user experience by providing clearer error messages
updated references in ConcurrentHashMap. java to improve performance and maintainability of the code
added methods to adapt user trades from an array in AbucoinsAdapters and AbucoinsTradeService to enhance functionality for
updated economy claim logic and modified plot claim logic in PlotSquared, Claim, and SetBlockFast _ 1 _ 8 to
simonstewart : allow the browser to connect to the firefox driver
added handling for VARBINARY definition in BlobType. java to ensure correct database data type is returned for VARBINARY data type
updated version handling logic in SetCookieSupport. java to improve clarity and correctness of cookie version checks
added synchronization to ensure thread safety when accessing the language's simpleTypeMap
replaced ` Context ` with ` ContextInternal ` and ` VertxThread ` in ` InboundBuffer. java ` and added a new test
updated timeout values in ` Connection. java ` and refactored timeout handling in ` LdapTimeoutTest. java ` to improve test reliability
updated usage message from " UniocdeData. txt uniName. dat " to " UnicodeData. txt uniName. dat "
camel - 7464 : camel - cxf should use the inout operation name for the inout message.
refactor multiple UI classes for consistency and clarity to improve code maintainability and readability across the UI components
added handling for ` BoosterSet ` in ` ComponentAssemblySaver. java ` and changed return value in ` BoosterSet. java
added password authentication functionality for proxy requests in JabRef. java to enhance security by allowing direct password authentication for proxy requests
replaced instances of ` BLOCKCHAIN __ FORK _ COUNT ` with ` BLOCKCHAIN _ FORK _ COUNT ` across multiple files to
replaced an InternalError throw statement for JEP 359 support with a return statement to ensure compatibility with JEP 359 support
[ hotfix ] [ test ] fix checkstyle violation in testipcutil
remove the ` ` chunkedTransfer'' parameter from ` NettyRoutingFilter. java ` to simplify the code by directly using the ` request `
added a call to clearAttributes ( ) in PatternTokenizer. java to ensure that attributes are properly cleared after processing
added a polling period parameter to the VerificationAfterDelayImpl class and refactored related methods for better error handling to improve robustness of the
added compaction flag to SessionState and modified conditional logic in SemanticAnalyzer and QueryCompactor to manage compaction behavior during query processing
[ zeppelin - 5657 ] fix docker image generation ( # 5657 )
hbase - 25764 fix checkstyle violation in hbaseadmin. gettableregions
added an @ Ignore annotation to the PartialEscapeAnalysisTest class to temporarily disable the test due to known issues
removed the ` calcXBounds ` method from ` Renderer ` and its implementation in ` BarLineChartBase ` and ` CombinedChartRenderer
added error handling around XML parsing in SimpleSAX. java to ensure proper resource management and prevent potential memory leaks
added a call to release the header buffer in HttpSenderOverHTTP. java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` to validate the behavior of diamond operators in Java 17 +
added a null check for the result set before closing it to prevent potential NullPointerExceptions when closing the result set
updated driver version from - 1 to 6 in DerbyDatabase. java to reflect the new release version
implement a new test case for the use of a stringbuffer in the usestringbufferlength rule.
removed error logging from RemoteSparkJobMonitor to streamline error handling for better debugging
replaced the ` createDb ( ) ` method with ` getConnection ( ) ` and added a ` close ( ) ` call to ensure proper resource
refactor CreateCustomMetric, ListResources, and ListResourcesTest classes to improve code organization and maintainability
hbase - 25764 add option to disable large compaction
added handling for the " address " node in BitstampDepositAddress. java and created a new test class DepositAddressJSONTest
replaced IllegalStateException with an IllegalArgumentException for buffer capacity handling to improve error handling by providing a more informative exception
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` to ensure the correct absolute path is used for directory
replaced instances of ` Event ` with ` MetricsEvent ` and ` InvocationType ` in ` InvocationFinishedEvent ` and ` DefaultMetricsRegistry `
added a loop to check for multicast support in the OptionsTest class to improve robustness of network interface handling
added a loop to check for validCheckSums in ChangeSet. java to ensure validCheckSums are checked for " 1 : any
added a clone method to BufferedChecksumIndexInput to throw an UnsupportedOperationException for unsupported operations
replaced Math. sqrt ( x * y + y * y ) with Math. sqrt ( x * y * y < = radius * radius
added a condition to check if the frequency band identifier matches the download channel identifier to ensure that the frequency band is only set when it's
replaced instances of ` tapSquareSize ` with ` tapRectangleWidth ` and ` tapRectangleHeight ` in the GestureDetector class to improve
change default _ replicate _ on _ write from true to false to disable replication on write for improved performance
added lastFillTime parameter to CryptoFacilitiesAuthenticated and utilized a new format method in CryptoFacilitiesTradeServiceRaw to allow users to
added ` getDelegate ( ) ` method to ` TraceCallable `, ` TraceRunnable `, and ` TraceRunnable ` classes to provide access to
refactored error response handling and improved snackbar handling in FileActivity and FileDisplayActivity to enhance code clarity and maintainability while ensuring
added stream writable method to multiple quiche connection classes to enhance error handling for stream operations
added a boolean parameter to the method call in JavascriptContext. java to enable context management during JavaScript execution
removed padding from TableCell constructor parameters to simplify constructor parameters and improve readability
added a new file TracingAutoConfiguration. java to implement automatic tracing for the identity provider
refactor content handling in Submissions. java to use a new Para instance to improve clarity and maintainability of the code
replaced direct access to queryableSegmentDataManagerList with a call to segmentsToDecrement to improve efficiency by limiting the number of segments returned
refactor VertxBufferTest. java to improve code readability and maintainability
patch from jonathan ; review by jbellis for bug # 4897
changed the access modifier of mContext from private to protected to allow subclasses to access the ` mContext ` variable
removed unused imports from ShowTablesOperation and ShowViewsOperation to streamline code by eliminating unnecessary dependencies
added MongoDataIntegrityViolationException class and updated MongoTemplate and tests to handle duplicate data integrity violations to improve error handling for duplicate data integrity
change jobCompletionFuture return type from jobCompletionFuture ( ) to jobCompletionFuture ( ) to ensure proper handling of job completion events
replaced the method ` bitsToHumanReadable ` with ` bytesToHumanReadable ` and introduced a new ` mimeType2HUmanReadable ` array
be be a a ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
added a check to return early if mOverviewStateEnabled is false to prevent unnecessary processing when mOverviewStateEnabled is true
updated error logging link in CpuNDArrayFactory. java to improve clarity of error message regarding CPU support instructions
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for better resource loading to improve flexibility in loading settings from different input
added null checks for incoming fields and terms in FilterLeafReader. java to ensure proper handling of null values and prevent potential NullPointerExceptions
add key size verification to jcecms contentencryptor
updated exception handling in NetSocketReader and removed redundant constructor in SoftEndOfStreamException to streamline exception handling and improve code clarity
removed unnecessary ` @ Inject ` annotations from multiple Java files to streamline the code by eliminating unnecessary dependencies
updated the expected size in BundledDistributionTest and added assertions in PostgreSQLTest to ensure tests validate the correct number of database users and their
[ flink - 1860 ] [ core ] add user define job name to streamexecutionenvironment
refactor scaling calculation for two - panel layouts in OverviewState. java to improve layout responsiveness based on device profile
updated IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome to improve biome structure and
refactor methods in DataUpdateManager and StorageUtils for consistency and clarity to improve code readability and maintainability by standardizing date and time calculations
add a ` ` isqualified'' parameter to the ` ThisReference ` class and update the ` CompilationUnitBuilder ` to include this reference
fix xhamster ripper to match wmde.
change entity iteration to use a temporary arraylist to improve performance
hhh - 147131 - fix oracle dialect to handle null schema
fix a syntax error in the flutter console filter
added functionality for selecting and deselecting all files in the FileMenuFilter class to improve user experience by allowing users to select and deselect all files
[ java ] : fix termoffset calculation in network publication.
fix checkstyle violation in guildupdateownerevent
change in portal tick count for creative and creative.
added compressed property and adjusted spacing calculations in ClusterMonitorTileSkin. java to enhance visual appearance of chart elements based on compression status
refactor multiple codec template classes for consistency to improve code maintainability and readability
updated variable types for ` lengthDataBits ` and ` numberTriplets ` from ` int ` to ` long ` to ensure proper handling
removed unnecessary null check for header in RendererConfiguration. java to simplify code logic and improve readability
don't scale cpu and memory of vm with custom service offering
updated import statements and modified order builder initialization in HitbtcAdapters. java to improve code clarity and maintainability by using more descriptive
corrected variable name from ` idleCount ` to ` consecutiveIdleCount ` in ` LLRealtimeSegmentDataManager. java ` to improve clarity
updated the description URI for the automation service category from " automation : jruby " to " automation : jrubyscripting " to
updated the formatting of the displayName variable in ConfigCategory. java to improve code readability and maintainability by using a consistent variable name
added a condition to check if the preciseExchangeAmount is less than or equal to 0.000001f to ensure correct handling of negative amounts in
updated the loop condition in FeedUtils. java to handle cases where the index exceeds 10 to improve robustness of the code by avoiding unnecessary iterations
added a new test method ` testHDF4 ` in ` HDFParserTest. java ` to validate the functionality of the ` HDF4
added a new boolean variable CALCITE _ 6092 _ FIXED in Bug. java and modified SqlOperatorTest. java to include
removed redundant whitespace in IDEEditor. java to improve code readability and maintainability
added methods to quietly close AutoCloseable instances to improve resource management and prevent potential memory leaks
replaced ` posBtn ` with ` getString ( string. common _ yes ) ` in ` RemoveFileDialogFragment. java ` to standardize the
added a check to ensure srcWidth and dstWidth are non - zero before calling context. drawImage to avoid potential NullPointerExceptions when srcWidth
replaced ReflectionHelpers with Unsafe's method for defining a class to improve compatibility with modern Java practices
updated regular expression pattern in GUIUtil. java and added multiple test cases in GUIUtilTest. java to improve regex validation accuracy and ensure proper
refactor conflict handling logic in CachedRowSetWriter. java to improve clarity and maintainability of the code
fix a nullpointerexception in sdkconfigurationnotificationprovider
added a check to return the reference object if it is the current instance to ensure that the reference object is only assigned when it is the current
added handling for non - file input files in the Injector class to improve robustness by ensuring only non - file input files are injected
added a condition to check if the original view is hidden before hiding it to ensure proper visibility behavior when hiding the original view
ensure that the maximum number of nodes does not exceed the defined maximum limit to prevent potential errors when the maximum number exceeds the defined maximum constraints
refactor texture data handling in CombinedTexture. java and add a warning method in UVCoordinatesGenerator. java to improve texture coordinate handling and
added a null check for ` barcodeFile. delete ( ) ` in ` EncodeActivity. java ` and improved error handling in ` Decoded
added seek and close methods to TracingConsumer and TracingProducer classes to implement seek and close functionality for better resource management
updated hql query to use oldPrefix length instead of locate to ensure correct handling of special characters in query results
replaced the addition of elements to the convertedValsList with a constructor that initializes it directly from the collection
added a deprecated constructor to AbstractTimer that accepts a Clock and PauseDetector parameters to indicate that the constructor is outdated and should not be used
added a check to display a warning dialog for users on a nightly version of Universal Gcode Sender to improve user experience by notifying users
add team name to the list of response by team.
updated return statement to include " Remove unnecessary ` throws ` declarations to improve clarity of exception handling
replaced the ` CacheApplication ` class with ` CommonsApplication ` and updated references accordingly to standardize caching across the application
replaced instances of ` realObject. getApplicationContext ( ) ` with ` RuntimeEnvironment. application. startActivity ( ) ` and ` realObject.
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
added conditional logic to update configuration based on the Android SDK version to ensure compatibility with devices running Android KitKAT and above
added logic to set the latest URI for the Stack repository to ensure the correct version definition is used when the repository link exists
refactor ApplicationImpl, NodeImpl, and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData. java to skip processing when oldIndexName is null
added import statements for XML resolver helpers and readers in CheckPackageAccess. java to ensure compatibility with XML resolver packages
renamed methods ` save ` and ` persistExecutionContext ` to ` add ` and ` updateExecutionContext ` across multiple classes to improve clarity and consistency in
bugfix : replace loopexitnode with loopexitnode in graphutil
refactor ` SearchAndRecommendationsScrollController ` to use ` WidgetsRecyclerView ` instead of ` RecyclerView ` to improve code clarity and maintain
added a check for terminal support in ConsoleReader to ensure compatibility with the current terminal implementation
changed variable types from long to int in CloudExitableDirectoryReaderTest. java and added time allowed checks in LBHttpSolrClient.
added validation check for session validity in AbstractSessionCache. java and modified session handling in RemoveSessionTest. java to ensure proper session management and
refactor index change handling in ChangedIndexChangeGenerator. java to improve clarity and maintainability of index change logic
replaced Vector with ArrayList for button management in ButtonGroup. java to simplify code and improve performance
updated UserManagerCompat and UserManagerCompatVL to extend from UserManagerCompatVL and UserManagerCompatVN to improve compatibility with
added methods to retrieve database major and minor version in multiple database classes to enhance functionality for retrieving database version information
refactor ActionGraphCache to use lastActionGraph and lastActionGraphAndResolver for better clarity to improve code readability and maintainability by using a
added new classes ` LockDatabaseDesc ` and ` UnlockDatabaseDesc ` for managing database lock and unlock operations to facilitate the management
refactor RankingTopComponent, RankingUIModel, RankingToolbar, and RankingPanel classes to improve code readability and maintainability by
added handling for DisconnectMessage in HandshakeHandler and updated logging in NodeImpl to improve handling of disconnect messages and enhance logging clarity
added a new test method ` testSetDeleteSG ` in ` IoTDBAuthorizationIT. java ` to validate the functionality of storage group
fix google : / cloud : documentai / v1beta1 to documentai / v1beta2
updated type validation logic for variable declarations and introduced a new visitVariable method in FindMissingTypes. java to improve handling of variable types and enhance
added two methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to facilitate test execution
updated CountersManager to use a wildcard import and adjusted validation logic for metadata buffer to improve code clarity and ensure proper handling of metadata buffer sizes
simplified logging statements in MultiSteps and SendEmail classes to improve code readability and maintainability
added handling for ` joinKeys ` in ` JoinDesc ` to ensure deep copies of ` joinKeys ` from ` joinDesc `
added PrincipalResolver dependency to WebAuthnConfiguration to enhance authentication handling by using PrincipalResolver for principal resolution
added search paths parameter to the ` addSettingsFromFile ` method in ` XcconfigStack ` and updated corresponding tests in ` Xcconfig
changed variable declarations to be final in Oracle. java to enforce immutability and improve code clarity
[ hotfix ] [ runtime ] disable unaligned checkpoint option until rescaling of unaligned checkpoint be complete
fix ( sql ) : throw unsupportedoperationvisitor instead of unsupportedoperationvisitor
add graal. compiletheworldtest. log option for debug purpose.
removed a check for LocalVariable type in LambdaRewriter. java to streamline the code by eliminating unnecessary exception handling
added handling for MySQL's timestamp column in CreateTableGenerator. java to ensure correct handling of timestamp columns in MySQL
added context class loader management in EnvConfiguration. java to ensure correct context class loader is used during context loading
added conditional logic to set ejection delay when stageNr is zero to ensure correct simulation delay is applied when stageNr is zero
renamed method ` runFunctionalCommandLineRunnersAndApplicationRunners ` to ` BeanDefinitionOrderRunnerConfig ` and renamed ` FunctionalRunnerConfig
refactor TransactionUtil2 class structure to improve code maintainability and readability
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance functionality by allowing
updated formatting and added null check for collectionStates in ClusterState. java to improve code readability and prevent potential NullPointerExceptions
replaced ` getStyle ( ) ` with ` getAllStyles ( ) ` in ` TextArea. java ` to ensure consistency with the new style used in
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance flexibility in foreign database and schema handling
[ java ] catch timeout exception in election.
refactor ShadowActivity and ShadowBluetoothDevice to use Shadow. extract instead of shadowOf to improve code clarity and maintainability by using a dedicated method
refactor root path handling in FileSelection. java and add a new test in TestBugFixes. java to improve error handling and ensure correct
deprecate oninventorytick in favor of oninventorytick
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 46
added a null check before calling invalidateOptionsMenu ( ) to avoid potential NullPointerException when getSherlockActivity ( ) is not initialized
refactor widget binding logic in Launcher and PendingAddItemInfo classes to ensure proper handling of widget options and prevent potential null pointer exceptions
added new capability constants for air pressure and quality in the EcobeeSensorThingHandler class to enhance sensor functionality for better handling of air
reformatted code for consistency and clarity to improve code readability and maintainability
added environment variable " AAPT " and " AAPT2 " to the Genrule class to support AAPT and AAP
don't dump the access table if the instrumentation profile be enable.
added a null check before disposing the message object to prevent potential NullPointerException when disposing the message
added a final field to the DB variable and changed the visibility of the init method in TxCacheDB to ensure immutability of the db
updated warning messages in CoreContainer. java to clarify that logwatches are not yet implemented for log4j to improve clarity of warning messages
replaced printStackTrace ( ) calls with fail ( ) and added return statements in CategoryPlotTests. java to improve error handling by returning instead of printing
replaced ByteArrayOutputStream with SmallByteArrayOutputStream in IOSImplementation. java and added a new SmallByteArrayOutputStream class to improve performance and handle larger byte arrays
* shader. getattributetype ( ) now return an int instead of a string.
updated JDBC connection string from ` jdbc : derby : ; close = true ` to ` jdbc : derby : ; shutdown = true `
added null checks for firstExchangeCompletedTimestamp and lastExchangeCompletedTimestamp in RouteInfo. java to prevent potential NullPointerExceptions when accessing attributes
8047157 : [ javadoc ] fixup test for determinism and add class us
added a condition to check if the result is incomplete ( ) and the size of items is greater than 10 to improve the logic for handling
updated command - line argument for time column name in HybridClusterIntegrationTestCommandLineRunner. java to ensure correct handling of time column name in
update variable name from ` format ` to ` outputFormatValue ` and added logic to determine the ` extension ` to improve code clarity and ensure correct file extension handling based on output format
updated condition in DeviceProfile. java to check if the min QSB margin exceeds the hotseat bar bottom space to ensure that the Q
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey `, ` GltfModel
added a timestamp field and its setter method in AbstractGenerator, Generator, HttpGenerator, Response, HttpConnection, and TestServer to allow for
replaced Adler32 with CRC32 in Store. java to utilize a more efficient CRC32 implementation
cloudstack - 7131 : fix default value of xen. heartbeat. interval for xenserverselffencing
added a new constant ZERO _ AREA _ FIN in Warning. java and updated warning handling in FinSetCalc. java to improve code clarity
[ beam - 8470 ] use standard json serialization for document metadata in elasticsearchio
hhh - 147642 - fix date trunc for h2
added a check for the " memory. " prefix in the warning log message and adjusted error handling in MetricUtilsTest to improve error handling and
added ` useJavaScript ` parameter to ` ensureSignedUp ` method and modified error handling in ` FileAccess ` and ` FileTreeNode ` to
updated error messages in ValidationTask. java to include RUNTIME _ PROTOTYPE _ TYPE and PrototypedBy annotations to improve clarity
updated the BACKFILL path from " / generateAnomaliesInRange " to " / replay " to accurately reflect the intended
updated the return values in PrecompiledContracts. java to include the latest proposal number to ensure accurate retrieval of the latest proposal number for the
updated badge handling in AllAppsContainerView. java to improve user experience by applying badges based on child views
( ch _ ch _ ch _ ch _ ch _ ch _ ch _ ch _ ch _ ch _ ch _ ch _ ch _ ch
updated context start methods in ResourceHandlerTest. java and modified ServletContextHandler in ResourceHandlerTest. java to ensure correct behavior of ContextHandlerCollection
removed conditional check for WORKSPACE _ CUSTOM in Cling. java to streamline code for better readability and maintainability
remove assertion that ben't need
added @ Ignore annotation to the shadowInvocationWhenChildIsInstrmentButUnshadowed method in ClassicSuperHandlingTest. java to
updated import statements for ItBitEx and ItBitMarketDataServiceRaw in multiple demo files to ensure compatibility with the latest package structure
ww - 4672 - fix npe in profile activation and session reset
changed class modifiers from public to final in Utils, ApplicationUtils, AsyncSocketFactory, and Whois classes to enforce immutability and improve code
added error handling around object stream reading in RegionsApiUtil. java to improve robustness by preventing resource leaks
replaced instances of " java. util. Vector " and " java. util. Hashtable " with " java. util. Vector " and "
added tableNameWithType parameter to the warning log message to provide more context about the table type being processed
added trimming for empty fragmentList elements in QueryExecutorImpl. java to ensure proper handling of empty fragment lists in the query execution process
update resource pack exception to use mod file path instead of path to improve error handling by using the correct file path for resource pack resolution
replaced usage of ` nodeTransformerGroup ` and ` edgeTransformerGroup ` with ` nodeTransformerGroup ` and ` edgeTransformerGroup ` to improve
added a condition to check if the task view is fully visible in RecentsView to improve user experience by preventing unnecessary scrolling when the task view
updated the calculate method in CalculatorEndpoint and CalculatorService to return BMIViewObject instead of Map < String, String > to enhance functionality by
replaced Comparator. comparing ( Entry < TargetNode <? >, Integer > : : getKey ) with direct Entry < TargetNode <? >
fix a bug with entity. getblock ( ) and getblock ( )
refactor environment symbol handling for Windows and J9DDR image processing to improve code clarity and ensure compatibility with newer Java versions
add plugin property to reportoptions
updated condition to check if hashTable is not empty in HashJoinBatch. java to ensure proper handling of empty hashTable cases
updated timestamp handling logic and added new test cases for pre - epoch and exact second in TimestampTest. java to improve timestamp accuracy and ensure accurate
[ java ] use context. clone ( ) instead of context. clone ( ).
added a condition to check if the component is not compiled before proceeding to ensure that the invoker type is checked only when the component is not
added new test methods for image2 functionality in multiple test files to enhance test coverage for various images in the online test suite
replaced the ` getInitialValue ` method with ` getOverridenDefaultValue ` and added a change listener for ` NAMESPACE _ LAUNCHER ` to
updated logging statements in DockerClientFactory. java to include additional log messages to improve clarity of log output for better debugging
added a check to return early for non - Android platforms to optimize performance by avoiding unnecessary processing on non - Android platforms
updated assertions in RoutesTest to use assertThat for better readability to improve test reliability and maintainability
added new functional interfaces for various data types including Byte, Float, Short, and Short in the common function to enhance functionality for converting primitive values
changed the return type of ` getSubsColor ` and ` setSubsColor ` methods from ` int ` to ` String ` and updated bitrate
added a conditional check before deregistering the invocation registry to ensure the invocation registry is only registered when the future is complete
use output ( null, nop, null, close. asframe ( ) ) instead of append ( )
added handling for the " redirected " flag in the welcome intent in LoginActivity and SignupActivity to ensure the welcome intent is only launched when
added ShadowCheckedTextView class to facilitate testing of CheckedTextView functionality in Robolectric
added Serializable interface to ParserState and made ParserState serializable to ensure proper serialization and deserialization of ParserState
added " identrustdstx3 [ jdk ] " to VerifyCACerts. java to support identrustdstx3
removed duplicate calls to setAttribute for TEMPDIR _ CONFIGURED in WebInfConfiguration. java to streamline code by eliminating redundancy
fix muc room occupant's nickname
removed the ` volatile ` context ` parameter from ` QuicConnection ` and ` QuicSession ` constructors to simplify the constructor parameters and improve
replaced direct calls to ` writer. setMergeScheduler ( ) ` with ` writer. getConfig ( ) ` in ` CreateIndexTask. java
replaced occurrences of ` pageWidth ` and ` pageHeight ` with ` pageWidthValue ` and ` pageHeightValue ` in ` TextPosition
added support for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange. java and AbstractDatabase. java to enhance functionality for handling
refactor NbtScoreboardIoService class to improve code readability and maintainability
updated SAML2 configuration to check for writable resources and changed logging level from error to warn to improve robustness of metadata handling and enhance error reporting
changed the visibility of the ` printer ` variable and refactored the ` createPrinter ` method in ` GraphPrinterDumpHandler. java `
added BigDecimal import and updated the average price calculation in HuobiAdapters. java to ensure accurate representation of order's average price
updated field handling in ProjectionOperation and TypeBasedAggregationOperationContext, and added a new test for excluding values in AggregationUnitTests to ensure
fix fakeplayer not be able to add player to the list.
added constant state management in FolderAdaptiveIcon and ShiftedBitmapDrawable classes to ensure proper handling of drawable states and improve visual consistency
refactor SSL connection handling in SPDYClient. java to improve clarity and maintainability of the code
fix npe in protostuffobjectoutput. write ( )
pdfbox - 4071 : fix typo find by codespell on fossies. org
refactor BarrowmanCalculator class to improve code readability and maintainability
ggb - 196 fix for ` ` 0, 1, 0'and ` ` 1 '
replaced ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` to streamline filtering and wrapping process
updated returnToWorkspace method call for consistency to improve code readability and maintainability
added SSL context factory for HttpsURLConnection in CustomUrlJob. java and created CustomUrlTrustEverything. java to enhance SSL handling for
updated clock rate retrieval methods to use getRealUsedClockRateString ( ) instead of getClockRate ( ) to improve accuracy of clock rate representation
updated TextureAtlas class to improve rendering performance
replaced ` getProductNameForBuildTargetNode ` with ` getModuleName ` and added a method to set the module name in ` AppleLibraryBuilder
added locking mechanism around the release process in TestSlot. java to ensure proper resource management during release processes
fix for @ findids ( id _ list = true )
updated WebSocketServletRFCTest. java to improve handling of response headers and streamline the reading process
[ wasm ] fix unsafefunctioninstance. pushreference ( ).
added a default TTL value to the ClickHouseLogCollectConfig and updated the query method to include it to allow configuration of the TTL
replaced ` SerializationType. NESTED _ OBJECT ` with ` SerializationType. NAMED _ FIELD ` in ` CustomChangeWrapper ` and
replaced the usage of ` QueuedThreadPool ` with ` HandlerCollection ` and added server startup and stop methods to improve server management and ensure proper
added error handling for resource loading in CommonsApplication and NearbyController to improve robustness by gracefully handling exceptions during image loading
modify the condition to return a default value if the objectName is not null and is not empty to improve robustness by handling potential null or empty
updated error message from " could not find file " to " could not open file " to improve clarity of error reporting for file access issues
[ hotfix ] [ table - planner - blink ] change plannerclass to blink plannerfactory
updated subject and issuer handling in KeyTool. java and added error messages in Resources. java to improve clarity of subject and subject handling and enhance
added a @ Deprecated annotation to the RuntimeOptions class to indicate that the class is outdated and should not be used in future versions
replaced manual byte array encoding with a utility method to improve code readability and maintainability
added a new interface PermissionEvaluator in the org. springframework. security. expression package to provide functionality for permission checks in Spring Security
added ERASE _ LINE _ ON _ FINISH option and implemented buffer cleanup logic in LineReader and LineReaderImpl to improve handling of
hbase - 25827 master should check if the server exist before add it to the list of online server
updated exception types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR and Tron
expandwar now use ` ` lastmodified'' instead of ` ` lastmodified''
catch throwable instead of exception in defaulthttpclient. onerror ( )
replaced ` center ( spinnerC ) ` with ` centerAbsolute ( spinnerC ) ` in ` Picker. java ` to ensure the spinner
updated the ` recycleMemorySegments ` method to include ` numRequiredBuffers ` parameter and adjusted the calculation of ` numTotalRequiredBuffers ` to
refactor MBeanServer handling in TestJmxIntegration. java to improve clarity and maintainability of the code
replaced RunWith with Rule for RetryTestRule in AbstractIT. java to simplify test execution by using a predefined RetryTestRule
refactor QueryStateMachine constructor to remove autoCommit parameter and streamline transaction management to enhance code clarity and maintainability by using more descriptive parameters
updated import statements in CsvFieldType. java, CsvTable. java, and CsvTableScan. java, and added a new package - info
added support for " javax. microedition. khronos. opengles. GL " in InstrumentationConfiguration to enhance functionality
[ hotfix ] [ test ] remove unnecessary constructor in streamtasktimertest
refactor URI handling logic in Request. java and add a test for CONNECT request URL in RequestTest. java to improve robustness of URI handling
replaced direct access to ` KEY _ LAST _ SEEN _ VERSION _ CODE ` with a call to ` WhatsNewActivity. KEY _ LAST
added methods to handle session availability and unavailable states in SessionManager to improve session management functionality
added a call to addPackageToScan ( " liquibase. pro " ) in ServiceLocator. java to enable scanning of Liquibase
replaced ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` and ` MainApp ` to
updated the ` loadWithNewGlobal ` method to accept an additional ` Object. args ` parameter to enhance functionality by allowing arguments to be passed
updated region matching logic in FastPathResolver to use start index instead of relative paths to ensure correct handling of relative URLs in path resolution
updated the weigher method calls to use ` toIntExact ` instead of ` length ( ) ` to improve accuracy of the weigher
renamed ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizedType ` across multiple files to improve clarity and consistency in naming conventions
added support for the " LAG " function in UnsupportedOperatorsVisitor. java and created a test case in TestWindowFrame. java to ensure
clear the proxy request headers in AbstractProxyServlet. java to ensure proper handling of HTTP headers in the proxy request
added a check to skip tests if SA attach is not expected to work to ensure that the test only runs when SA attach is expected to work
added null check for bgColor in GraphicsDevice. java and created TranslucentWindow. java to ensure proper handling of null background color and
added null checks for user details and improved error message handling in UserInfoActivity. java to ensure user information is only displayed when it's not
added custom field serialization for precompiled headers in PrecompiledHeaderData. java and removed precompiled header check in PreprocessorDelegate. java to
[ flink - 1860 ] [ table - planner - blink ] add update - mode property to kafkaproducer
added a new file ` MultipleOutputsIntegrationTest. java ` to implement integration tests for named output groups to ensure that named output groups can be
updated regex pattern and added logic to handle old content in FileSettings. java to ensure accurate matching of file names and their associated values
fix npe in statelecontrollerserviceinitializationcontext and statelecontroller
replaced usage of ` new Object [ ] { } ` with ` ArrayUtils. EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests.
added TaskbarModeSwitch annotation to TaplTestsQuickstep. java to manage taskbar behavior during tests
added new DeviceStatus entries for " leaving - dock " and " energy - save - mode " in DeviceStatus. java to enhance functionality for
catch blockstate and normal exception in modelloader. loaditem ( )
removed unused imports and added an @ Ignore annotation in KrakenFuturesStreamingPublicDataTest. java to temporarily disable tests that are not
added a conditional check for the graphics type in PSurfaceJOGL. java to ensure compatibility with different graphics platforms
refactor RussianLowerCaseFilter class to improve code readability and maintainability
removed unnecessary initialization of server and client properties in CsvBulkLoadToolIT and simplified zookeeper server configuration in QueryUtil to streamline configuration process and improve code clarity
replace occurrences of File. separatorChar and File. pathSeparatorChar with underscores to ensure consistent file path formatting across different operating systems
added reset functionality to WAVLoader and modified input stream handling to enhance functionality and improve resource management during WAV file loading
added a boolean flag ` repeatFirstLineIndent ` to control indentation behavior in ` ColumnText. java ` to control indentation behavior based on the
changed the type casting for the oid comparison in Oid. java to ensure proper type handling for Oid objects
remove duplicate code in hikariconpool. initializeconnection ( )
rename controlflowanchornode to controlflowanchornode to controlflowanchornode
added a line to disable focus painting on the button in WindowsPlacesBar. java to improve user interface responsiveness by preventing unintended focus
added a check for UniqueConstraint in the DatabaseSnapshot class to handle cases where there is no backing index to ensure proper handling of primary and foreign
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and integrated it into ` AccountAPI
[ ds - 3441 ] fix npe in community admin group endpoint
gapinsertiondetector : improve handling of empty utterance
added unit test base on user forum issue
replaced ` getBackgroundThreads ( ) ` with ` getDatabaseUpdateThreads ( ) ` and added getter and setter methods for ` databaseUpdateThreads ` to
reduced FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller. java to increase scroll threshold for better user experience

hhh - 13644 - fix npe in stored procedure call
added a null check for ` getApiProperties ( ) ` in ` RestSwaggerSupport. java ` to avoid potential ` NullPointerException ` when
added new ` BinaryFrameGenerator ` and ` TextFrameGenerator ` classes to handle binary and text frame payloads to enhance the WebSocket frame generation
simonstewart : fix selenium test for firefox
updated randomness logic in RandomGeo3dShapeGenerator. java to use random ( ). nextBoolean ( ) to improve randomness and
added a keepAlive method to the ResourceBundle class to manage resource loading behavior
changed the return value from false to true in SQLiteDatabase. java to accurately reflect the intended behavior of the code
add workaround for jsr166 lock monitorenter
added MkdirStep to multiple classes including AndroidAar, AppleBundle, ApplePackage, and FatBinary to ensure proper directory traversal
update error message for x coordinate and y coordinate in mesh leveler.
[ jbpm - 3907 ] don't try to load jpmml libs from classpath when compile pmml module
change from locationMode to thermalStatus in ShadowPowerManager. java to ensure proper handling of thermal status
added a conditional check for the OS - specific temporary directory to ensure temporary directories are created only on macOS
make prjfilereader. memory _ mapped _ buffers configurable
added a null check for the organization in the PluginManager. java file to ensure that a plugin is required to have an organization in the pom
removed license agreements in SepPostingsWriterImpl. java to streamline licensing and improve code clarity
deleted the ` TerminateWebSessionListener. java ` file to streamline the codebase by eliminating unused components
updated the parameter passed to executeChildProcess to use the system's class path instead of an empty string to ensure compatibility with the current Java
replaced ` ArrayUtils. EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for ` cryptKeyInit ` and ` md5
added a new test method ` dontChangeJavadoc ` in ` AddLicenseHeaderTest. java ` to address issue # 3198 related to
changed the default value of LAUNCHER3 _ PHYSICS from false to true to enable support for the LAUNCHER3 _ PH
added a ` < div class ='noPrint'> " to the ` HtmlThreadInformationsReport ` class to indicate that the
updated the main version from " 3.1 " to " 4.0 " and changed the test version from " LUCENE _ 31 " to
added macosx symbolicator and task handles in BsdDebuggerLocal. java and updated OS detection for Darwin in PlatformInfo. java to
use weak reference to prevent memory leak
don't log connection reset exception in networkdispatcher
[ java ] : added application build for mediadriver . added sub and pub task to example build to simplify run example .
added a break statement in TouchImageView. java to prevent fall - through behavior during image processing
update advancedsettingsproto to reflect new proto structure
removed the flushOnSSLHandshakeComplete method from FeedableBodyGenerator. java to simplify the SSL handling process by directly flushing the feeder
added handling for Java Object type inference in TypeUtils. java to ensure correct handling of Java types in the code
replace NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush to improve performance by using a more efficient data structure
added null check for ` tree. errs ` in ` MemberEnter ` and modified error handling logic in ` JavaCompiler ` and ` Err
changed the background color of the browser from NO _ BACKGROUND to NONE to improve visual appearance by removing unnecessary background background
updated the method call from ` finish ( ) ` to ` cancel ( ) ` in ` AboutActivity. java ` to ensure that the cancel
add test for integerstamp. foldstamp ( int, long )
added a method to read an input stream from an InputStream in ITextUserAgent. java to improve image handling by utilizing ByteArrayOutputStream for
added variables and defined variables handling in SwitchCompiler and related classes to enhance variable management and improve code clarity
refactor the initialization of the TlsRsaPremasterSecretParameterSpec in RSAClientKeyExchange. java to improve error handling and provide clearer logging
removed duplicate ` WinGammaPlatformVC10. java ` and added ` psapi. lib ` to the ` AdditionalDependencies ` list to stream
updated newline handling in StringUtilsTest. java to use the system's line separator to ensure consistent SQL syntax across different operating systems
added compatibility and encoding settings for templates in TemplateEngineFreemarker. java and updated malicious JavaScript alert message in ApplicationControllerTest. java
replaced ByteArrayInputStream with a String for reading input data to improve performance and readability of the code
bug 52340 - allow remote sample mode to be change at run - time
added a conditional check for the " testngEmailableReporter " system property before adding the Emailable reporter to ensure that the EmailableReporter
added quoting logic in CommandLineBuilder and updated corresponding tests in CommandLineBuilderTest to ensure proper handling of quoted characters in command line arguments
removed the ` public ` access modifier from the ` Clock ` and ` DelegatingGauge ` classes to allow access to these classes from other packages
added a method to set the number of reduce tasks for the job to ensure that the job correctly processes tasks based on the number of fetchers
added handling for default object fields in SchemaGeneratorHelper to improve the accuracy of field value retrieval
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the new file version
added support for " GL _ ARB _ texture _ float " and " GL _ RGBA32F " in FloatTextureData. java to
add a method to open and close a file in the fileserver to allow the server to decide whether to open a file.
added a null check for ` jarStream ` before setting the output directory to avoid potential ` NullPointerException ` when ` jarStream ` is not
replaced direct return statement with PerfStatsCollector to improve performance tracking for SQLite connections
replaced ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest. java ` and ` JDKTool
add a new enum ` ResourceErrorHandling ` for error handling to provide a way to handle resource error reporting
added a check for buffer position in RAMInputStream and implemented a test in TestRAMDirectory to ensure buffer position does not exceed buffer size and handle
update error message to include the current request URI to improve error reporting by providing context for missing resources
updated ForkJoinPool and ForkJoinWorkerThread to support innocuous behavior to enhance thread management by allowing innocuous behavior
updated the CHECK _ EVERY _ N constant from 10000 to 0xFFFF and modified the logic for free memory checks to improve efficiency in free memory
hbase - 257782 - fix testsplittransaction to work with hadoop 0.20.
added a null check for ` currentSelectionArea ` in ` CompatibilityEngine. java ` to prevent potential ` NullPointerException ` during selection
added a parameterized test for JaasDemo in DemoModulesTests. java to ensure that the application correctly handles different Jetty versions
added checks for spanX and spanY in CellLayout. java to ensure proper positioning of cells within specified spans
updated CacheOffHeap. java file to improve performance and resource management
added functionality to handle table dependencies in CreateTable. java and introduced a test for referencing a table with a higher ID in TestCases. java
added conditional check for row and column in TiledLoader. java to handle extra XML gid values to improve error handling and provide clearer warning for
added synchronized keyword to setWorkingSet method in InMemoryTileCache. java to ensure thread safety during concurrent modifications
added a new file ` Solution. java ` that implements a solution for determining the maximum and minimum steps to implement functionality for determining the maximum and
add interface for avoid bad ip address by tracker ( e . g . 0.0 . 0.0 or localhost )
fix rendertype. gettranslucentmovingblock ( ) in multileadermodel.
bugfix : tagless tagless result should be remove from the list of tag
changed ` thingTypeVersion ` from ` int ` to ` String ` and updated its assignment to use ` Integer ` instead of ` int `
added a null check for recieptents before sending messages to prevent potential NullPointerExceptions when recieptents is null
refactor issing logic into a new method ` isSingle ` to improve code readability and maintainability
added a ` failFast ` parameter to the ` client ` method and modified logging behavior in ` RemoteDockerImage ` and ` ImageFrom
added resourcesMode parameter to AndroidMetadata and updated related tests to support resource management in Robolectric tests
fix date truncation for historic process instance
replaced ` importProject ( projectFile ) ` with ` importProjectCore ( projectFile ) ` in ` OpenAndroidModule. java ` to
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command - line arguments
refactor TreeMap implementation to improve performance and maintainability of the code
added functionality to enable and manage asynchronous stack traces in the Display class to improve user experience by enabling asynchronous stack traces
added a method to set the glow color in BubbleTextView and used it in Folder to enable customization of the glow color for the
added styles for link and description in LinkedFilesEditor to ensure consistent styling across different file types
modified AbstractJdbc2ResultSetMetaData to return a short type instead of a short type and added a test for class matching in ResultSetMetaDataTest to
removed the call to IOUtils. deleteFilesIgnoringExceptions in Lucene40LiveDocsFormat. java and SimpleTextLiveDocsFormat. java to
added null check for _ info before checking for SWITCHING _ PROTOCOLS _ 101 to prevent potential NullPointerException when accessing the upgrading status
added a constructor to set the provider in ShadowLocation to allow for passing a provider to the constructor
added a condition to check if deviceRam is less than 2048 to ensure that maxRAM is only set when deviceRam is below 2048
add stats for no - data - included map in localmapstatsprovider
added logging support for file activation in FileProfileActivator. java to enhance logging capabilities for file activation
updated the parameter name in the addToBody method from " noname1234 " to " invalid _ " to ensure the correct identifier is used for
change from ` list ( ) ` to ` toSet ( ) ` for the ` roles ` map to ensure consistent ordering of roles in the map
updated the maximum number of uploads from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter. java to ensure
added unit tests for the delete method in DashboardUserMapperTest. java to ensure that the delete method behaves as expected in the dashboard
change parameter name to use primaryparticipant instead of recipientparticipant
llvm to native : don't handle dereferenced pointer.
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size
add usage help for standalone terasology launcher
reformatted switch statement for better readability to enhance code clarity and maintainability
updated CommandLineParserTest . java file to enhance functionality to improve command - line argument handling capabilities
added animation interpolators for ALL _ APPS _ FADE and NORMAL states in QuickstepAtomicAnimationFactory and PortraitStatesTouchController
updated method to use javaNameFromExternal instead of Character : : toUpperCase to ensure proper handling of external names in case sensitivity
removed native methods from CWrapper. java to streamline code by eliminating unused native methods
added constant value validation in mmm Checker. java and created a new ValueTest. java file to ensure that constant values are handled correctly
updated test files for MontgomeryMultiplyTest, MontgomeryMultiplyTest, and TestSquareToLen to
removed null check for constructors in PojoUtils. java to simplify code by eliminating unnecessary null check
refactor JiraConfiguration class to improve code readability and maintainability
replaced instances of " [ FAILED ] " and " [ COVERAGE ] " with " ( FAILED ) " and " ( COVERAGE
updated bounds calculations in DeviceProfile. java to include search bar offset to improve layout accuracy by accounting for search bar offset
don't schedule next disconnect if idletimeout = 0
added a call to getLauncher ( ). runOnUiThread ( ) before starting the RecentsActivity to ensure that the RecentsActivity is only
removed the ` getSourceGroupOptional ( ) ` method and its implementation from ` AppleSource. java ` to streamline the code by eliminating
updated await timeouts in TestSimTriggerIntegration. java from 220000 milliseconds to 320000 milliseconds to improve test reliability
[ flink - 197487 ] [ runtime ] fix bug in floatselectivereader
added a check for the bestSoFar array in AbstractNodeCostSearch. java to ensure that the bestSoFar array is not null and
added a check to skip processing for specific component types in ResourceEditorView to ensure proper handling of UI components in the resource editor
replaced ` UiThreadHelper. getBackgroundLooper ( ) ` with ` LauncherModel. getWorkerLooper ( ) ` in ` DragView. java
added a null check for ` commitPoint ` in ` ReplicationHandler. java ` to ensure the latest commit is set when ` commitPoint `
added unit tests for IMEI and MEID in ShadowTelephonyManagerTest. java and implemented corresponding methods in ShadowTelephonyManager.
added debug logging for ZUUL requests in SimpleHostRoutingFilter. java to enhance debugging capabilities for HTTP requests
added a ` destory ` method to ` IndexSegment ` and implemented the ` close ` method in ` BitmapInvertedIndex ` and
( chore ) camel - rocketmq : fix test case
replaced Charset. forName with StandardCharsets. UTF _ 8 for OutputStreamWriter to ensure compatibility with standard character set handling
hbase - 2657 bulk load error should not be retry if bulk load fail
added a nullable commission field to DefaultWithdrawFundsParams and updated formatting in RippleWithdrawFundsParams to allow for
removed import statement for StreamTerminator in AutoClosingReferenceStream. java to stream termination functionality
replaced multiple catch blocks for ` SolrServerException ` and ` IOException ` with ` SolrServerException | IOException ` and ` ParserConfigurationException `
added a check for abstract overloaded methods in Java2TypeScriptTranslator to ensure correct handling of overloaded methods and improve error messaging
replaced direct call to sweepDisk ( ) with a try - with - resources statement using StacklessLogging to improve resource management and avoid potential memory
added Serializable interface and refactored Entities class to be public to enhance serialization support and improve code organization
updated test cases in SubExactLConstantTest and SubExactLNonConstantTest to improve accuracy of exact and non - constant tests
added null check for claimRequestString before parsing to avoid potential NullPointerExceptions when claimRequestString is null
replaced ` FilterFactory ` with ` RelBuilderFactory ` in ` HiveFilterSetOpTransposeRule ` to utilize ` RelBuilderFactory ` for improved
updated the ` processTypeHintForNestedDocuments ` method to handle null source cases and added unit tests for null values in ` UpdateMapperUnit
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest. java and updated method calls in CoreAdminRequest. java
make moddirtransformer. transformers and. locators a non - static list.
updated error message formatting in AbstractQuerydslProcessor. java to improve clarity of error messages for better debugging
implement tostring ( ) for pemethodscope. getcallerstack ( )
replace setof ( ) with copiedsetof ( ) in resttemplatebuilder
( chore ) camel - mail : don't dump mailmessage in tostring ( )
fix for http : / / issues. apache. org / activemq / browse / amq - 407
updated getIdentifierName ( ) method to include setIsPropertyName to ensure proper handling of property names in identifiers
added a new class ` WaveGeneratorActivity ` and modified ` InstrumentsFragment ` to launch the ` WaveGeneratorActivity ` to improve
added logging functionality to check for null m in KeyedProperties. java and improved sheet retrieval in SheetOverlaysManager. java to enhance error handling
added unit tests for logging and exec execution in PodIT. java to improve test reliability and ensure proper logging functionality
added a test method to force an FS factory to detect no index and created a new Solr server to ensure that the Solr server correctly handles no
added a call to ` super. dispatchMethodKernelOkra ( range, args ) ` in ` GraalKernelTester. java ` to
added Comparable interface and modified sorting logic in DefaultDnsClient and DefaultMxRecord classes to ensure consistent ordering of MxRecord instances based on
refactor thread creation in XToolkit. java for improved readability to enhance code clarity and maintainability by using a more descriptive variable name
added validate ( ) method to SelectBox and set the selected value for the dropdown to ensure the dropdown reflects the current Linux version
replaced IllegalStateException with Collector. printStackTrace for exception handling to improve error reporting by providing a more informative stack trace
added parentSplit parameter to createState method and modified state handling in FlowBuilder and SplitState classes to enhance state management by associating split states
changed ` connectionState ` from ` int ` to ` volatile int ` in ` SSLSocketImpl. java ` to ensure thread safety when accessing connection
polledpollingendpoint : increase default poll period to 1 second.
refactor memory allocation methods to use ` MemoryUtil. wrap ` instead of ` malloc ` to improve code clarity and maintainability by using a
added handling for IOException and DocletAbortException in HtmlDoclet, AbstractDoclet, and AbstractBuilder classes to improve error reporting and provide
fix false positive for unusedmodifier.
refactor code to use method references instead of lambda expressions to improve readability and maintainability of the code
add ssl parameter to abstracthttpclientservertest
added exception handling for IllegalFormatException and improved logging messages in TransformationHelper. java to enhance error logging and provide clearer diagnostics for transformation failures
replace userPermissions with activeConnectionPermissions in ActiveConnectionRESTService. java to ensure correct access to active connection permissions
refactor equality check in Point class to use EqualsBuilder to improve code readability and maintainability
added a null check for outputRoot in the FileProcessor process method to prevent potential NullPointerException when outputRoot is null
pdfbox - 2576 : add annotationfilter to pdpage, pdfbox - 2576
refactor StackTraceCleaner class to improve code readability and maintainability
added content type handling for CSS and JavaScript files in PluginServlet. java to ensure correct content type is returned based on file extension
hhh - 117642 - fix test that fail on sybase
changed the parameter name from ` slot ` to ` slotSize ` in ` ForkController. java ` and modified the version check logic to improve
added getStats ( ) methods to AbstractDataImportHandlerTest, Context, ContextImpl, and DocBuilder classes to provide a way to retrieve statistics
refactor KieClient to utilize a configurable long polling mechanism to improve flexibility and control over configuration refresh behavior
refactor gesture handling in PagedView and BaseOverview to use a new scroll method to improve code clarity and maintainability while ensuring proper gesture
replaced the instantiation of UnlocksDialog with a new instantiation in UI. java and added a button for unlocking in PausedDialog. java
clear the drain of the drag events in PlayerEventListener to ensure proper handling of drag events in the player
added a constant for the default input name in StreamResult. java to provide a way to specify the input name for stream processing
removed MalformedURLException from testNormalizeOrder method signature to simplify method signature by using IOException instead of MalformedURLException
updated TsFileSketchTool. java and LocalTsFileInput. java to improve output formatting and ensure correct chunk type handling
added exclusion logic for Swift headers in UmbrellaHeader. java and updated test assertions in ProjectGeneratorTest. java to improve handling of
refactor onHttpError method signature for clarity to improve code readability and maintainability
added encode ( ) method to RequestPlugin. java to ensure proper handling of special characters in request data
added support for different database dialect in RolapNativeSql to enhance compatibility with different database systems
added a validation check for null or blank password in LdapAuthenticationProviderImpl. java and created a test class for LdapAuthenticationProviderImpl. java
pdfbox - 4892 : simplify code, a suggest by valerybokov
added logic to clear complex writers in ProjectRecordBatch to ensure proper handling of complex writers in the batch processing process
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress serialization warnings and improve code clarity
added null check for classInfo in ClassGraphClassLoader. java to prevent potential NullPointerException when classInfo is null
added handling for " _ errors " in ErrorResponseException to improve error reporting for schema errors
added a constructor to the EventSourcingRepository class to initialize the EventSourcingRepository with additional parameters
refactor symbol handling logic in ` mmm Attr. java ` to improve code clarity and maintainability
updated SearchedPeopleCursorAdapter to filter " @ mentions " and append a screen name to improve handling of text input to maintain proper format of mentions
updated NuvoConnector to replace ALL _ OFF with ALLOFF and modified sendCommand method to handle standby commands to improve command handling
tiff : use ` ` chunk'' instead of ` ` chunk''
added a call to close ( ) in ItemListTag. java to ensure proper resource management and prevent memory leaks
add a new utils class to calculate the average of a craftable.
added SigInt and SigIntBarrier classes for signal handling to provide a mechanism for signal handling in a concurrent environment
refactor graph management logic in ExporterGEXF. java to improve clarity and maintainability of graph management
refactor TCTLSeparatedProtocol to use Text instead of byte array for string handling to improve code clarity and ensure proper handling of character encoding
add test case for rubric response
updated the condition to check for schema and catalog case in CatalogComparator. java to ensure correct handling of schema and catalog case values
simonstewart : make browsermobproxytest more robust
bugfix : don't display error message when there be too many error
replaced mTextWatcher. reset ( ) with mTextWatcher. reset ( ) in InPlaceEditView. java to ensure text watcher is properly reset
fix javadoc for internalbytearray and trufflestring
from # # #
rename multiple classes related to Java 6 to improve clarity and consistency in naming conventions
fix for jdk - 823
replace CountDownLatch with CyclicBarrier for better synchronization to improve reliability of the cluster membership test by using a more robust wait mechanism
[ mng - 4657 ] fix npe in defaultmaven
updated the SSL scheme check to use `. equals ( uri. getScheme ( ) ) ` instead of ` startsWith ( " https " ) `
updated Mockito library version to ensure compatibility with new features and bug fixes
removed an unnecessary array in the Jdbc3Connection constructor to streamline code by eliminating unnecessary array usage
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to ensure proper initialization and instantiation of the servlet instance
added logging functionality for delta server time in BinanceExchange and BinanceBaseService classes to improve monitoring and monitoring of delta server time in the
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8. 5 " in Tomcat adapters to enhance
added a null check for the component form before deregistering the animated animation to ensure that the animation is only registered when the form is not
refactor ` decodeResource ` and ` decodeByteArray ` methods to use ` BitmapFactory. Options ` instead of ` new BitmapFactory. Options ` to improve
[ java ] don't call executor. execute ( ) for aeron subscription.
added preventNextClick logic and modified tweet text handling in TimelineArrayAdapter to improve user interaction by preventing repeated click actions
added " text " to the unmodifiableDataTypes in PostgresDatabase and modified handling of numeric data types in NumberType and ColumnSnapshotGenerator to enhance
remove @ ignore from entryprocessorbouncingnodesstest ( # 3683 )
updated state checks from " INSTALLED " to " STARTED " in AmbariManagementControllerImpl. java and AmbariManagementControllerTest. java to
added a null check for ` bridgeUid ` before adding it to ` inbox ` in ` CreateBridgeServlet ` to avoid potential null pointer exceptions
refactor robots handling in PreconditionEnforcer and CrawlServer classes for improved clarity and consistency to enhance code readability and maintainability by
replaced calls to ` getDisplayName ( ). contains ( " Teredo " ) ` with a null check for ` getDisplayName ( ) ` to
added a default shader parameter to the SpriteBatch constructor and updated shader creation logic to enhance flexibility in shader creation based on available shader
added property to set synchronous _ commit to " - c synchronous _ commit = on " to enable synchronous commit functionality in tests
added TypeCoercer to handle duplicate elements in SortedSetTypeCoercer to improve error handling for duplicate elements in collections
refactor ` RemoveFileDialogFragment ` and ` RemoveFilesDialogFragment ` to handle folder and file favorites more effectively to improve user experience by providing
added a condition to check if the character's value is less than 256 in URLPathEncoder to ensure safe URL encoding does not exceed 256
updated fragment storage registration to use a dynamic port number to improve flexibility in fragment storage management
updated the method call from ` clusters. getClusters ( ) ` to ` clusters. getClusters ( ) ` to ensure that the test returns
[ hotfix ] [ yarn ] remove unused log from yarnentrypointutils
bugfix : border size don't change when resize the gui.
removed the ShadowHtml class from RobolectricBase. java and updated assertions in HtmlTest. java to streamline the code by eliminating
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl. java ` that implements the ` StarTreeRecordStoreFactory ` interface
updated Jetty logger names in HttpClientLoadTest. java to improve clarity and consistency in logging
changed the visibility of the addListeners method from private to package - private and added a new test for listener validation in MockSettingsImplTest to
refactor StateHandleStore class structure to improve code maintainability and readability
updated import statements for security Constraint in multiple test files to ensure compatibility with the latest Jetty package structure
update studentattributes to use default _ section instead of null
replace try - finally block with try - with - resources
( chore ) camel - 1145 : add a way to get the port from the wsdl url
added ` BuildTarget ` parameter and refactored ` getJarParameters ` methods in ` JarBuildStepsFactory ` to improve handling of library dependencies
( chore ) camel - rabbitmq : fix typo
npe in listcapacity - don't override getpagesizeval ( )
added handling for CLOSED state in IteratingCallback. java to ensure proper handling of closed states
added a boolean flag ` isAuthorized ` to ` AccessControlContext ` and updated its usage in ` AccessController ` and ` ProtectionDomain `
added a check to ensure the application is an instance of AbstractOSGiApp before sending deployment events to improve event handling for AbstractOSGiApp
added handling for " tiff " codec in DLNAMediaInfo. java to ensure correct MIME type is set for Tiff files
refactor assumption handling in OptimizedCallTarget. java to improve clarity and prevent potential null pointer exceptions
added a new file ` CubocDesktop. java ` and modified rendering logic in ` Map. java ` and ` MapRenderer. java
updated PolicyMonitor initialization to include " test - classes / monitor - test - 1 " and " test - classes / monitor - test - 2
added a call to removeAllFiles ( ) in TrashbinActivity to ensure the trashbin list reflects the current state of the activity
replaced ` org. eclipse. jdi. Bootstrap. virtualMachineManager ( ). allConnectors ( ) ` with ` com. sun
add guard to check if a global variable be write or not.
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted its logic to ensure correct handling of launch source data based
added a maximum burn target lower floor and updated the BurningManPresentationService to ensure that the burn target loor does not exceed a
replaced multiple specific imports with a wildcard import and refactored the snapshotObject method for UniqueConstraintSnapshotGeneratorSnowflake to streamline
fix for http : / / issues. apache. org / activemq / browse / amq - 3802 - allow insert statement with no
updated test method names and replaced " pgtUrl " with " https : / / www. github. com " in ServiceValidateControllerTests
updated ` getDefaultValidFunctionName ` method to include ` isStatement ` parameter and refactored function body handling to ensure default function names are
refactor JarLauncher class structure to improve code maintainability and readability
[ hotfix ] [ runtime ] use generic in jdkconcurrentresultqueue
fix problem with jabber conferencing
added a test method for updating a PGobject in ResultSetTest. java to ensure correct handling of PGobject updates in the database
updated PasswordResetEndpoints to handle empty results and added a test for creating a password reset for non - UAA origin to improve error handling and
replaced the method of obtaining the document element from ` getChildNodes ( ). item ( 1 ) ` to ` getDocumentElement ( ) ` to improve
refactor Cache class implementation to improve performance and maintainability of the code
corrected variable names from ` timeInSec ` to ` timeMillis ` in ` Isochrone. java ` and ` SPTResource
allow light relays to be bind even if they be not bind. close # 388
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to include a ` Chainer ` class
refactor Model class structure to improve code readability and maintainability
updated recordedTime from a fixed value of 1024 weeks to a fixed value of 619315200000L to ensure accurate tracking of recorded time
added a check to resize the status if the terminal type is Windows to ensure proper resizing behavior for Windows terminals
updated state management for host versions in ` UpdateDesiredStackAction. java ` and changed default values in ` RepositoryVersionState. java ` to
move javatests / jre _ bundle _ deploy. jar to test _ root
use linkedhashmap instead of hashset to ensure consistent iteration order
removed try - catch block around operation creation in OperationServiceImpl. java to simplify code by eliminating unnecessary exception handling
removed unnecessary whitespace in the resolvePropertyConfigurer method call to streamline code for better readability and maintainability
rename commitlog _ archiver to commitlogarchiver
added connection logic in CloudSolrClient and implemented a test for cloud client uploads in TestCloudSolrClientConnections to ensure proper handling of SolrCloud
synchronize access to allbindings in Breakpoint and DebuggerSession classes to ensure thread safety during binding operations
added methods to clear files and cache in Robolectric tests to improve code organization and maintainability by centralizing file management logic
added LinkedHashSet and TreeMap imports to SecureXStream. java and updated Styles retrieval in XStreamPersisterTest. java to enhance stability of
[ hotfix ] [ kie - api ] add kiemodule to the kie - builder
refactor block event handling to check for Farmland instances to improve code clarity and ensure proper handling of farmland state
added a default implementation of the getLocalIp ( ) method in FinishedSpan. java to provide a default implementation for the method
updated ` JdbcStepExecutionDao ` to use ` SerializationUtils. deserialize ` for ` OBJECT _ VAL ` and added a new test for integer
pdfbox - 4892, pdfbox - 4892, pdfbox - 4893, pdfbox - 4894,
added " lib " and " python37 " extensions to the resource list and updated file paths to include " lib " and " python37 "
refactor PluginTab to use a button for refreshing the plugin list to improve code readability and maintainability by reducing repetitive code
change log level from info to warn for history file reload, saving, and trimming
cloudstack - 7131 : fix the npe in vmwarestorageprocessor when the volume be attach to a vm
camel - sftp : fix test failure on window
renamed ExperimentalMockitoJUnitRunner. java to improve clarity and maintainability of the test code
updated GpsSettingsActivity to conditionally enable the prefix _ serial checkbox based on the presence of a serial ID to improve user experience by providing a
modified SwapGBuffers. java file to enhance performance and maintainability of the code
added null check for skeletonControl in AnimControl. java to ensure proper control removal when spatial is null
added a new method ` setSmartReplies ` in ` ShadowRankingTest ` and refactored ` ShadowRanking `
[ java ] remove redundant call to archive. list ( ).
fix bug in carrot clustering engine
added null check for ` testRect ` in ` WindowsTreeUI. java ` and created a new test class ` bug8004298.
updated ASM _ API _ VERSION from ASM7 to ASM9 in CompilationConfig. java to reflect the latest ASM versions and
replaced null return statements with TasteException throws in RecommenderMapper. java and CacheTest. java to improve error handling and provide clearer
added ClientInfo import and integrated it into SurrogateAuthenticationEventListenerTests to ensure proper handling of client information during tests
initialize isUserView to false in CardPresenter. java to ensure proper handling of user view state
refactor DiagramRenderer, GraphvizJavaExecutor, GraphvizJavaExecutorUtility, GraphvizUtility, and GraphvizSchemaCrawler classes to
refactor the creation of the histogram variable for constructBatch and syncLogTimePerRequest to improve code readability and maintainability
added a new module - info. java file to define module dependencies for SQLite
added a sleep delay of 500 milliseconds in StreamResetTest. java to ensure sufficient time for the test to complete
removed redundant condition check for " new " in the permissions manager initialization to streamline code by eliminating unnecessary check for " new "
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method ` getDepth ` to the ` SpringLoadedState ` class to provide a mechanism for retrieving the depth of the application
replaced manual array copying with ` Arrays. copyOfRange ` to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in executiongraph
remove notification from NotificationActivity and simplify swipe handling in NotificationRenderer to streamline notification handling and improve code clarity
updated DefaultExceptionConverter to handle null invocation and improved exception messages in tests to enhance error handling and provide clearer feedback on unexpected exceptions
fix checkstyle issue in inventory / glowcontainer. java
replaced MethodHandle findSetter method with getDeclaredMethod for TARGET _ FIELD to enhance compatibility with reflection and improve error handling
changed the type of bit values from int to Integer in MathTest. java to ensure proper handling of integer values during bit operations
remove join from templatedata. get ( ` ` datasets')
added logic to hide theProvidedPanel and manage its visibility based on the layout node's layout to improve user experience by hiding the provided panel
added a null check for location in ServerCallable. java to prevent potential NullPointerException when location is null
[ hotfix ] [ test ] fix checkstyle violation
added a check for null DSA key parameters in BasicChecker. java to throw an exception when the key parameters are missing
refactor MediaTypeRequestMatcher to use a dedicated method for ignoring media types to improve code readability and maintainability by encapsulating media type ignore logic
refactor task number assignment logic in LlapBaseInputFormat. java to improve readability and maintainability of the code
added a property for allow - bean - definition - overriding in the SpringBoot test to enable configuration overriding for Spring Boot applications
added a null check before closing the indexReader to prevent potential NullPointerException when indexReader is not initialized
updated package structure and import statements for BTCMarketsStreaming classes to improve organization and clarity in the codebase
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest ` to validate the rendering of ` this code ` with
added a new file CompatibilityTest. java with methods for loading and validating internal DTD and properties to facilitate testing of internal DTD
added new ` VariantComponentsModule `, ` PushUtils `, ` SecurityUtils `, and ` DaggerUtils ` classes to implement a
fix npe in table rebalancer when there be too many instance
bump version to 2.17. 0 and bump version to 2.17. 0
log4j2 - 1349 fix line separator in test
added handling for SocketTimeoutException in AjpAprProcessor. java to improve error handling for timeout scenarios
initialize friction, restitution, density, isSensor, and isSensor to 0 in FixtureDef. java to ensure default values
updated method signatures to include anomalyFunctionSpecMap and adjusted fetchSaclingFactors to fetchScalingFactors to enhance clarity and functionality by
removed the shell command execution for " am wait - for - broadcast - idle " in LauncherInstrumentation. java to streamline the code by elim
added unit tests for reading font and link tags with attributes in ResourcesTest. java and modified the ResStringPool _ span constructor in ResString
fix GuiStatsComponent's patch to use ---. / src _ base / common / net / minecraft / src _ work
added permission handling for CALL _ PHONE in Launcher. java and Utilities. java to ensure proper access to the CALL _ PHONE permission and
updated return values and modified variable names for clarity and consistency to improve code readability and maintainability by using more descriptive names
refactor GeoPointDistanceQuery, GeoPointInBBoxQuery, GeoPointInPolygonQuery, and GeoEncodingUtils to improve code readability and maintainability by
added a synchronized method ` isDockerAvailable ` to check if the Docker client is available to provide a way to check if the Docker client is
added a new constant VPX in CodecTypes. java to support VPX format in the application
added a coordinator address option to the DistBuildFactory class and modified the getCoordinatorAddress method in AbstractDistBuildExecutorArgs to allow users to
added a ` match ` method to ` FsUtils ` and replaced direct calls to ` timer ` with a new ` timer ( ) ` method
added a check to ensure ` ent. getValue ( ) ` is greater than zero before adding ` LabelAndValue ` to ` labelValues `
mow - 479 fix for ` ` no result find'' error
removed the @ Test annotation from TestPerfBenchMarkDriver. java to streamline test cases by eliminating unnecessary tests
added a method to set the materialization time in ObjectStore and implemented a test for it in TestObjectStore to ensure proper handling of creation
added handling for UnsatisfiedLinkError in VoskSTTService to improve error reporting for missing native dependencies
remove jmssampler. is _ one _ wAY from jmssamplergui. java and update jmssampler. java
modify return logic for BadBreakWeight and GoodBreakWeight in GlyphView. java to improve accuracy of break weight detection
refactor sync handling in RCFile. java to improve clarity and efficiency to enhance code readability and maintainability while ensuring accurate synchronization
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest. java to address a known issue related to SOLR - 130
replaced steps and processors entries with a list of unwound entries to improve clarity and maintainability of the code
removed the ` keysToDataFlavorArray ` method from ` ClipboardTransferable ` and refactored the ` DataTransferer ` class
added functionality to include an infoport port in the TestThriftServerCmdLine class to facilitate testing by providing a random port for
added a conditional check for the atEOF ( ) method in RegExpScanner. java to ensure the method handles end - of - file scenarios
refactor metrics and timers handling in Debug. java to improve clarity and maintainability of the code
fix nullpointerexception in chatroomjabberimpl
add null check for empty filename and improve error message
refactor refresh token creation logic into a separate method to improve code readability and maintainability
updated error message formatting in BuckConfig. java to improve clarity of error messages for better debugging
[ hotfix ] [ yarn ] remove unnecessary lock from yarnflinkapplicationmasterrunner
added a synchronized method nativeGetHardwareBuffer to ShadowNativeImageReaderSurfaceImage. java to implement a native method for retrieving hardware buffer
updated the SSL URI for BTCChinaMarketDataService initialization to ensure compatibility with the latest BTCChina API
pmd : generate cpd file on window
added a new ` OauthController ` and ` Oauth2PluginTest ` classes for integrating OAuth authentication with the shenyu
refactor SemgrexPattern class implementation to improve code readability and maintainability
added new ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx `, ` EntryStream `, and ` StreamEx `
updated error logging message in RestCodec. java and added error handling in ExceptionToProducerResponseConverters. java to improve clarity of error messages and
updated the condition for the ` shouldComeFromThisClassLoader ` to allow for android projects with mixed ` org. specs2 ` and `
added a condition to check if the transmittable audio encoding does not contain the specified sdp to ensure that only transmitted audio encodings are considered
updated the type check for defaultValue in CreateTableGenerator and added new imports and tests in CreateTableGeneratorTest to ensure correct handling of DatabaseFunction
added test methods for station 3 and 32 GML in the NormalizedMultiValuesTest. java file to ensure tests validate the latest GML
added a volatile boolean ` wasInvoked ` to ` NetworkTestUtils ` and updated several instances of ` NetworkTestUtils ` to improve thread safety and
added a check to ensure the processor is not configured before expanding regex mappings to prevent potential NullPointerExceptions when the processor is not configured
refactor ` splitIntoThirtyParts ` method to use ` SEEK _ LENGTH ` instead of ` splitIntoThirtyParts `
added new classes XLCDCommunicator and XLCDController for handling G - code responses to enhance functionality for handling G - code commands
[ kie - api ] move xsd to org / kie / api / kmodule. xsd
added retry logic to check if the message is not empty in multiple event query classes to improve reliability of event query execution by ensuring that
replaced multiple calls to ` awaitThreadState ` with a new method ` join ` for thread states to improve code clarity and maintainability by reducing
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
updated energy values from 20000 to 10000 in EnergyCost. java to improve the efficiency of energy operations
updated the ` command ` method signature to include ` throws ConfigurationException ` and removed unnecessary calls to ` PMS. getConfiguration ( ) `
deleted the ` SpringTransactionHooks. java ` file and replaced ` SpringTransactionHooks ` with ` AbstractSpringTransactionHooks ` to
updated method implementations in AbstractClassAssert. java to improve code clarity and maintainability
jls _ string : : getuninitializedstringvalue ( ) should return value.
added support for provided dependencies in AndroidLibraryDescription and updated related tests to enhance dependency resolution functionality and improve test coverage
added a new device flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to control the synchronization of the keyboard between home and all apps
replaced the handling of system anomaly message with a flag to ensure that bug reports are saved only when necessary
added support for the " cinepack " format in FormatConfiguration and LibMediaInfoParser classes to enhance media format handling for Cinepack
added camera bobbing functionality to the Player class and updated the hand movement animation logic to enhance player functionality and improve the visual appearance of the player
replace ` data. describe ( ) ` with ` digest. toString ( ) ` in ` GrpcCasBlobUploader. java ` to
remove hsqldbserverfilesfilter from testutility
walletappkit : don't call restorefromseed if restorefromkey be null
added a trace log statement for missing title by IMDb ID in MediaTableTVSeries. java to improve debugging and monitoring of the title
added type matching logic for method invocations in HasTypes. java to ensure proper handling of method invocations based on their presence of qualified class names
replaced hardcoded value 6 * 3 with a constant NUM _ VALUES in AmbientCubemap. java to improve code readability and maintainability by
bugfix [ netbeans - 4657 ] add a new warning message for method and object selection for profiling
added handling for zero - length masked numbers in multiple UDF classes to ensure correct masking behavior when values are zero
refactor test to use a temporary folder in BoundedOverheadBlockStoreTest and DerbyBlockStoreTest to improve test reliability and maintainability
added methods to check item type and their damage status in ItemStack. java to enhance functionality for item management in the inventory
fix mc - 167447 and mc - 167447 ( # 167447 )
danielwagnerhall : set browser. startup. page to 0 in firefoxdriver
modified the condition for handling CONNECT and GET requests in Http1xClientConnection. java to ensure proper handling of CONNECT and GET requests based on
updated task acceptance from " compile " to " process - classes " to clarify the purpose of the task
replaced ` shutdown ( ) ` method with ` closeIdleConnections ( 1L, TimeUnit. MICROSECONDS ) ` to improve connection management
added a condition to check if the aggregate function suffix is not present before creating a new Metric to ensure metrics are only added when the aggregate function
added a method to set fullscreen parameters in TaskOverlayFactory and updated the method to retrieve the corner radius to ensure consistent handling of fullscreen parameters across
added a new file ` Solution. java ` that counts the number of character in a given string to implement functionality for counting character frequency
[ java ] set ch1 to null to avoid npe.
modified the MutisignOperationerGododicTest. java file to enhance test coverage for Mutisign operations
added exception handling for NoSuchElementException in StaxEventItemReader. java and created a test for restart behavior in StaxEventItemReaderTests
replaced specific imports with a wildcard import and modified return logic in ShadowTextView. java ; added a null check in TestAttributeSetTest. java to
replaced ` com. nimbusds. jose. shaded. json. JSONArray ` with ` net. minidev. json.
added handling for AIX architecture in OS. java and added support for Linux - s390x - 64 in PKCS11Test. java to
bug cs - 15836 : fix router _ ip value for vr
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class to provide a way to invoke without blocking with result
remove ` ` presencemessagefiltertests''
replaced integer division with rounded division in PortraitPagedViewHandler. java to improve precision and avoid potential integer overflow issues
updated path construction for KMeansDriver and FuzzyKMeansDriver to ensure consistency and correctness in path construction
hbase - 25880 addendum : fix keyvalue. get ( ) for null row cache
camel - 15836 : camel - core - add type converter to the registry to allow the type converter to be register in the registry.
added handling for ConditionalTask in SparkCrossProductCheck to improve task processing for conditional tasks
updated action identifiers for managed profile events in Launcher and LauncherAppState to ensure proper handling of profile events in the application
updated conditional logic in LoginInfoEndpoint and added tests for passcode prompt functionality in LoginInfoEndpointTests to ensure correct handling of account chooser and
hbase - 25880 add region state and server name to the region's description
added a new field ` msg ` and ` result ` to the ` HuobiAccountInfo ` class and updated related getter methods to
added support for the " PERIOD " keyword in MariaDBDatabase to ensure proper SQL generation for period - related columns in MariaDB
[ flink - 1860 ] [ python ] [ python ] provide an option for portable worker
added note about a few change to the dictionary loading mechanism in VersionChangeLogs. java to clarify the purpose of the dictionary loading mechanism for Android
updated the access modifier of ` NUM _ MILLIS _ IN _ DAY ` from private to public in ` TestUtil ` to allow access to the
removed a debug print statement from ImageResourceLoader. java to streamline output for better debugging
aeron client to use aeron client in the archive.
updated the validation logic for implicit lambda parameters in mmm Attr. java and added a new class R12. java with a test for raw
refactored menu item hiding logic into a separate method in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by reducing
added reserved0, reserved3, payment, and reserved8 fields to BTCETransHistoryResult and BTCETransHistoryJSONTest to
replaced List < Class <? extends Throwable >, List < Class <? extends Throwable > > with Set < Class <? extends Throwable >
added a @ Deprecated annotation to the PluginLoader class to indicate that the PluginLoader is outdated and should not be used
updated condition in LastQueryExecutor and added a new test for last with unseqTimeLargerThanSeqTime in IoTDBLast
modified the append method call in HttpResponse. java to ensure correct formatting of the response string
added a static block to set the HTTP logging level to " ERROR " to indicate that the build process fails due to logging issues
added a safe area setting to the title bar in the Sheet class to enhance user experience by allowing safe access to the title bar
modified the iteration over TimeSeriesChunkMetaDataList from a for - loop to a for - loop to ensure correct handling of TimeSeriesChunkMetaData
added SQL syntax for ALTER TABLE commands in AlterTest. java to ensure that SQL commands can be parsed and deparsed
make abstracthikariconfig. copystate public
fixed - rexecutorservice. executeasyncasync should return a completable future
added a new constant SUFFIX _ SPLIT _ FILE and updated file name handling in FileLister and FileSystemSplit to improve file name handling
refactor OrcBatchReader, OrcRowInputFormat, OrcTableSource, OrcTableSourceTest, and OrcTestFileGenerator classes to improve code organization
removed redundant null check for valueArg in CompareFunctionsProcessor. java to streamline code for better readability and maintainability
fix checkavailablediskspace ( ) to account for expect disk space
removed ` toString ( IndexReader ir ) ` method from ` SegmentTermVector `, ` TermFreqVector `, and ` QueryTermVector
added a check for invalidated state in AbsSwipeUpHandler and unregistering task stack listener in TaskAnimationManager to improve stability by preventing
added getLockTimestamp ( ) and setLockTimestamp ( ) methods to AppPreferences and updated PreferenceManager to use SharedPreferences for lock timestamp retrieval and
refactor artist retrieval logic in MediaInfoParser to improve code readability and maintainability by encapsulating artist retrieval logic
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
npe in splittext when there be no header
added support for handling Windows keystores in HttpsConnectorFactory to ensure compatibility with Windows keystores and improve error handling
updated DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest. java and WebClientSenderTests. java to increase timeout
added a condition to check if the result code is not FILE _ NOT _ FOUND in FileSyncAdapter. java to ensure that the remote folder
added animation features to the Slider class to enhance user experience by allowing customizable animation options
updated assertions in LineSeparatorProcessorTest. java for improved clarity to enhance readability and maintainability of test assertions
changed maxWidth and maxHeight values from 512 to 1024 in TexturePacker. java to accommodate larger texture sizes
added a test for negated ternary in UnnecessaryParenthesesTest. java and modified the return condition in UnwrapParentheses.
camel - 14284 : fixed npe in camel - hazelcast consumer. thanks to joao for the patch.
added a new test class ` TextFeedbackTest ` and modified ` AllTests. java `, ` TextFeedbackTest. java `, and
replaced Math. round with Float. compare for score comparison to simplify score comparison logic
updated default case statements for DENSITY _ 560 and DENSITY _ 2HD and DENSITY _ 4K in multiple files
add array class offset to arraycopysnippets
added a boolean flag ` firstLine ` and modified comparison logic for stage total in ` DefaultLogPublisher. java ` to improve performance by skipping
added support for remote scm support in multiple Java files to enhance functionality for remote scm management
[ mieloneco ] fix state change for mielonecoappliancehandler
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for event logging to standardize event logging across the application
updated log variable name from ` log ` to ` LOG ` for clarity to improve code readability and maintainability
added tests for ` ProjectGenerationEventFinished ` and ` ProjectGenerationEventStarted ` events in ` EventSerializationTest. java ` to ensure correct
ggb - 2657 : preview point should be prerelease, not prerelease
updated method implementations in JavaCompiler. java to enhance performance and improve code clarity
add sanity check to prevent random read from be execute in integration test.
updated multiple Java files for consistency to improve code maintainability and readability
added " -- gc - sections " and " nocopyreloc " flags to the argument list in NdkCxxPlatform. java to
refactor SpringCloudCircuitBreakerFilterFactory to utilize ServerWebExchangeUtils for URI expansion to improve flexibility in handling fallback URIs and enhance test coverage for
simonstewart : fix doclint warning in java / desktop test
added null checks for URI and localName in ReadOnlySharedStringsTable. java to improve robustness by preventing potential NullPointerExceptions
added a new method ` getAccountNet ` in ` HttpMethed. java ` and a corresponding test in ` HttpTestAccount001.
added a check for negative availTextWidth in SwingUtilities2. java and modified the look and feel setting in Test6635110. java to
refactor FlatteningIterator initialization and simplify iterator handling to improve code clarity and maintainability while ensuring consistent behavior
updated the ` removeColorHtml ` method to remove HTML tags from the ` title ` and ` body ` variables to ensure HTML formatting is consistent
doc : generate sample code in the java microgenerator ( # 4 )
added reload and delete question functionality in InstructorFeedbackEditQuestionsUiTest to enhance user experience by allowing users to delete any existing question
modified return values in HSSFSheet. java and added tests in BaseTestSheet. java and BaseTestSheetTestSheet. java to ensure
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being processed
[ java ] don't send session open event to cluster session.
added hashCode ( ) and equals ( ) methods to AbstractParquetMapInspector and refactored equals ( ) method in AbstractParquetMap
added handling for remotely closed connection in HTTP3StreamConnection to ensure proper buffer management when remotely closed
added AutoCloseable interface to SplitReader for better resource management to improve resource management and prevent resource leaks
added a ` deepCopy ` method to the ` GsonBuilder ` class to facilitate deep copying of ` GsonBuilder ` instances
[ sulong ] fix npe in sulong compilation.
refactor file opening and closing logic in RestClientRequestImpl. java to streamline file handling and improve performance
updated the formatting of the dispatchStatusString method call to improve code readability and maintainability
replaced ` MockFactory. class. getClassLoader ( ) ` with ` SearchingClassLoader. combineLoadersOf ( ) ` in ` MockFactory.
test : add test for refresh flag bug
added a condition to check for LEFT _ SEMI _ JOIN in the condition check to ensure proper handling of LEFT _ SEMI _ JOIN conditions
replace the condition checks for response and request completion with inline method calls to improve code readability and maintainability
rename arraylengthoffset to arrayoopdesclengthoffset.
add default policy for broker service in test case
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the codebase
added a check to prevent further processing when the application context is not running
changed the return type of the drawItem method from void to GlyphLayout to improve code clarity and maintainability by using a consistent return type
replaced direct calls to ` JsonUtils. writeValueAsString ` with ` metricsPublisher. metrics ( ) ` in ` SpringmvcClient. java `
removed the unused constant SAFE _ ACCOUNT _ AGE _ DATE and simplified the return statement in AccountAgeWitnessService. java to stream
updated formatting in StructureHeader. java and StructureReader. java for consistency to improve code readability and maintainability
added support for ResourceUrlProviderExposingInterceptor in CasWebflowContextConfiguration and related tests to enhance functionality and ensure proper handling of resource
added a new class ` DexReturnInliner ` and modified ` DexBody ` and ` DexBodyTest ` to handle return statements to improve
[ smarthome ] add configuration property to enrichedrule
removed the NOFOLLOW _ LINKS option from the ` isDirectory ` method in ` PathResource. java ` and added a new symlink directory
[ hotfix ] [ table - planner - blink ] remove sql dialect from executionentry
replaced instances of ` rDotJavaPackages ` with ` hasRDotJavaPackages ` in ` AndroidBinaryGraphEnhancer ` and `
pmd : add test case for ASTPackageDeclaration class to ensure correct functionality of package - info image
added a method to set the minimum cross - compaction unseq file level in IoTDBDescriptor to allow configuration of the minimum cross - compaction
[ hotfix ] [ runtime ] move activeresourcemanager into active resourcemanager
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the purpose
updated URI creation in ZipResource. java to handle URISyntaxException and added a new test class ZipResourceTest. java to improve robustness of
updated ` mProgressListener ` assignment and modified thumbnail handling logic in ` ExpandableUploadListAdapter. java ` to improve clarity and functionality of thumbnail generation
refactor RobolectricTestRunner to use a list for class hierarchy and improve config handling to enhance code clarity and maintainability while ensuring proper configuration
added filtering for block and item registry in ModelLoader. java to ensure only relevant items and blocks are processed
removed the abstract modifier from several methods in ` AbstractDataChangedListener ` and replaced ` SyncDataService ` with ` WebsocketDataChangedListener ` to simplify
updated JSONPojoConvertor to handle enum types and added color handling in JSONPojoConvertorTest to improve compatibility with enum types and enhance test
added a check for the ` -- view ` option in ` IjProjectCommandHelper. java ` to deprecate the ` -- view `
refactor GWTRequestWrapper to use ByteArrayOutputStream instead of String to improve performance and reduce memory usage during payload processing
replaced ` GyroControl ` with ` OrientationEventListener ` and added ` OrientationCorrectionListener ` to handle screen orientation changes to improve user experience
update biomedictionary. biome _ list _ size to use biomegenarray's length instead of 256
replaced instances of ` println ('this is run function') ` with ` print ('this is run function') `
removed redundant assignment of the environment variable in FileCompilerConfig. java to streamline code and improve readability
added a new interface ` ByteToLongCollector ` for converting byte string to long to provide a mechanism for converting byte string to long
added preload parameter to MMapDirectoryFactory to control the default behavior of mapDirectory
added custom metrics for various components in BukkitPlatform. java to enhance analytics for various components in the application
refactor QuickConnectREST class to improve code readability and maintainability
added aspect ratio and a default card image drawable in CardPresenter. java to enhance the visual appearance of the card in the application
refactor authentication logic in AuthenticationCountSelector. java and LoginRedirect. java to improve code clarity and ensure proper handling of login page URLs
updated cloning logic in VectorHashKeyWrapper. java to handle empty array cases for long, decimal, and byte values to ensure proper handling of
added test cases for SystemNanoTimeJit in TimeChangeTest. java to ensure proper handling of system nanotime in CRIU
added null check for line in MultiPartFilter and printed the " field1 " parameter in MultipartFilterTest to ensure robust handling of null input
fix entitylivingbase. getexperiencedropevent not fire
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to provide clearer feedback on quota and refresh status
remove unsupportedoperatorsvisitor from dsls. sql. planner
added RdepsFunction to GraphEnhancementQueryEnvironment and updated input and output functions to enhance dependency management and improve code clarity
refactor Character class to improve code readability and maintainability
added logic to set the selection option for an entire rocket to ensure the selection option reflects the entire rocket
replaced ` Arrays. toString ( bytes ) ` with ` assertEquals ( bytes, rs. getBytes ( 4 ) ) ` in ` UpdateableResult
added time boundary information handling for hybrid tables in BaseBrokerRequestHandler. java to improve handling of time boundary for hybrid tables
simplify apr and http connector code
fixed ripper so that it would well reflect our new version of the code.
replaced instances of ` mDevice. wait ( Until. hasObject ( ) ) ` with ` TestHelpers. wait ( Until. hasObject
added a condition to check if the profile is a phone and not in landscape mode to ensure proper layout behavior for phone devices
replaced instances of ` getValue ( ) ` with ` unwrap ( QueryImpl. class ) ` in ` PartTreeJpaQueryIntegrationTests. java
replaced ` Files. readAllLines ( Paths. get ( ), param ) ` with ` subsystem. readMatchingLines ( param ) ` to
added a dynamic check for the result stream retrieval in JpaQueryExecution to ensure proper handling of the result stream retrieval based on the specified dynamic check
fix npe in physic process when entity be null.
add a test for entry processor to clear map when value attributes are indexed
add a jitsi - conference - room to the jitsi - conference - tools sip implementation.
updated color formatting in mmm Utils. java and mmm UtilsTest. java to ensure consistent color representation across different UI components
added bindings for text input control and normalized names in DefaultMenu and EditorMenus to enhance user experience by allowing users to disable text input
updated the scratch path format in Aapt2Link. java to include a link tree path and added a recursive step to enhance the build process
replaced instances of ` new Capture < > ( ) ` with ` Capture. newInstance ( ) ` in ` ExternalJavacTest. java `
make sure selection be update when click on algebra view
added handling for ` MarkedYAMLException ` and ` EmptyStackException ` in ` YsldValidator. java ` to improve error
added isCanceled ( ) method implementations to BehaviorCall, Call, OkHttpCall, and ExecutorCallAdapterFactory classes to ensure proper handling of can
added a default implementation of the ` isAnnotationPresent ` method across multiple classes to provide a default implementation for annotation presence checks
added a default implementation of the ` removeAllWidgets ` method in ` UILayout. java ` to indicate that the method is not implemented yet and
[ hotfix ] [ test ] fix test failure
fix for opensslcipher. getoutputsizeforupdate ( )
added checks for Fire TV Stick and Fire TV Stick in PlaybackController. java to ensure proper handling of high - res transcoding
add test for spark dataset source with mock data source.
replaced specific imports with a wildcard import and modified listener handling logic in GpsLoggingService. java to streamline import statements and improve listener management
changed the data type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` in ` vt320. java ` and
added import for BaseItemDragListener and modified drag handling logic to ensure proper handling of drag events in the folder
added method ` createEmptyArtifact ` to ` RepositoryConnector `, ` AbstractRepositoryConnector `, ` FileSystemConnector `, and ` Signavio
polish ` ` fix typo''
removed conditional logic for checking the validity of the video link in VideoViewerActivity. java to streamline the video loading process by eliminating unnecessary
camel - 15836 : fix camel - sftp to work on window. thanks to daniel.
( chore ) camel - weather : fix test failure on slow machine
renamed the variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and understanding of the variable's
check for double plate and under plate ( fixes # 388 )
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab. java ` to improve focus
don't swallow exception during vm start
added a condition to check if the test system is an instance of DB2TestSystem and modified import statements in DockerDatabaseWrapper and TableIs
added functionality to set and update the best value unit in the GeneralOptimizationDialog to enhance functionality by allowing users to change the best value unit
added a new static final CurrencyPair BTC _ ZMW to support trading functionality in the CurrencyPair class
added logic to set the number of samples based on context settings to ensure that the number of samples is set only when necessary
refactor assertTasklet calls in StepWithSimpleTaskJobParserTests for consistency to improve code readability and maintainability
changed variable declarations from ` UsernamePasswordCredential ` to ` final ` in ` CentralAuthenticationServiceImplTests. java ` to ensure immutability of
fix : ggbabs ( ) should be ggbabs ( ) instead of ggbabs ( )
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer. java ` to ensure proper handling of service output
[ jbrules - 2801 ] add support for bigdecimal type in executable model
added a new import statement for " org. eclipse. jdt. " in WebAppContext. java to hide the jdt used by jetty
modify the return value of the ` useAuthCache ( ) ` method from ` super. useAuthCache ( ) ` to ` false `
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
camel - 16400 : ensure backwards compatibility for direct endpoint with non - existing consumer.
added a null check for zooKeeper before initializing it to avoid potential NullPointerException when zooKeeper is not initialized
fix a typo in the initialization progress bar message
added a new method ` runOnUiHelperThread ` for executing vibration and cancel actions in ` AllSetActivity. java ` to ensure UI
added a method call to update the last remote stream ID to ensure accurate tracking of the last remote stream ID in the HTTP2 session
added text anti - aliasing to the Graphics2D in EditorHeader and EditorToolbar classes to improve visual quality of text in the editor
[ java ] fix flow control over run on window.
refactor : remove static import of enums in ctannotationimpl. java ( # 2657 )
refactor ExoPlayer class to improve code readability and maintainability
replaced the ` getRGBPixelImpl ` method with a new ` getRGBPixels ` method that returns a rectangle to enhance functionality by allowing retrieval of pixel
added a new method ` newPrintStream ( FileOutputStream fos, String enc ) ` to handle UnsupportedEncodingException to ensure proper handling of file
updated vibration duration from 1 to 25 in TouchableMovementMethod. java to improve the responsiveness of the vibration process
move flybush data clearer to a separate module
refactor WebSocketClient constructor parameters for clarity to improve code readability and maintainability
simonstewart : fix broken test
refactor error handling in BytecodeParser and SharedGraphBuilderPhase to use handleLoadConstantException instead of handleIllegalArgumentException and handleIncompatibleClassChangeError
added a call to restore the authentication system state to ensure proper handling of authentication system state during tests
added a new LowercaseComparator class to compare strings to ensure case - insensitive comparison for features
refactor JavadocTool to use a unified parse method for handling multiple JavaFileObject instances to improve code readability and maintainability by reducing redundancy
simonstewart : add a test for toggle option in a select element.
added a check for the length of the keys array in HighestKvno. java to ensure that the count does not exceed the specified
added error handling for retrieving attributes in HDF5BatchReader to improve robustness of attribute retrieval for Huge objects with 1 record
[ beam - 8470 ] use p done instead of pDone in bigquery query
update documentation for createtemplaterequestentity and add api implicit param to processgroupresource
added a new file TestMultiANewArray. java to test the behavior of the ClassWriter to ensure that the ClassWriter correctly handles class
added a new configuration option for secondary storage in the management server to ensure that secondary storage is properly managed on the management server
refactor block ID handling logic in SyncBlockChainMsgHandler. java to improve clarity and maintainability of the code
added theme setting for preview tab in PreviewTabView to ensure consistent UI appearance based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader. java to ensure proper resource management and prevent potential memory leaks
added a test for idle timeout in the ConnectorTimeoutTest class to ensure proper handling of idle timeouts and improve test coverage
add ` ` dcoref. dictlist'', ` ` dcoref. dictpmi'', and ` ` d
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity
updated parameter type in JpaPagingItemReaderIntegrationTests and modified error message in JobLaunchingGatewayParserTests to improve clarity and accuracy of
changed log level from warn to debug for child node retrieval to reduce log verbosity and reduce unnecessary logging
refactor ColorExtractionService to use a new method for retrieving hotseat palette to improve code clarity and maintainability by encapsulating color extraction logic
added methods to set default data table entry and cell transformer in TypeRegistry to ensure proper handling of table entry and cell transformations
; ; ; review for # # #
chore ( regen ) : update license year for generated file
added a boolean variable ` projectGenerated ` and its getter method in ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator `
[ java ] check for the presence of the ` ` user'' header in the ` ` info'' header.
added contact form functionality in ApplicationController and created Contact class in BodyParserEnginePost to enhance functionality for contact handling in the application
guacamole - 361 : rename permission class to guacamole. net. auth. user. getpermissions ( )
updated RELEASE _ VERSION from 20 to 21 to reflect the new release version
[ hotfix ] fix checkstyle violation in traitfactory. java
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple Java files to
replaced manual closing of PerDocConsumer with IOUtils. closeSafely to improve resource management and prevent potential IO leaks
refactor AbstractDataChangedListener and HttpLongPollingDataChangedListener classes to improve code organization and maintainability
added an OnClickListener to the overflow button to enable users to click the menu item to enhance user interaction by allowing the overflow menu to be shown
updated error messages for null and non - null references in various classes to improve clarity of error messages related to null references
ggb - 5641 : fix height of the help button in the algebra view
test : move protobufferutilstest to core package
refactor divider position and width handling in JabRefFrame. java to improve code readability and maintainability by using a dedicated runLater method
fix auxsubgenerator to correctly handle crossref entry.
use metadatamap instead of map to reduce memory footprint
renamed the variable ` extractTypes ` to ` dataTables ` to improve clarity by using a more descriptive variable name
fix a problem with update the meta contact avatar of the contact list.
updated import statements to use org. apache. sshd. server. command. Command instead of org. apache. sshd. server.
added a new test method to clean up the audit log table based on a specified timestamp to ensure that the audit log table correctly reflects the
added @ SuppressWarnings ( " unchecked " ) annotation to the inject method in ComponentContext. java to suppress unchecked warnings and improve code clarity
added regex patterns for parsing comment lines in ` ACLFileParser. java ` and updated test cases in ` ACLFileParserTest. java `
updated import statements and modified the ` isReadable ` method in ` MapRDBFormatMatcher ` to include ` FileSystemPlugin ` as a parameter
added ancestorDimensionValues handling in StarTreeImpl and StarTreeNodeImpl classes to improve handling of dimension values during dimension splitting
added isUserUnlocked check in TouchInteractionService and refactored closeOpenViews method in BaseQuickstepLauncher and RecentsAnimationDeviceState
changed condition from widthStr to positionStr in Photo. java to ensure correct handling of null values
refactor conditional logic in PKIXValidator. java for better clarity to improve code readability and maintainability
[ hotfix ] [ core ] [ test ] add archunit test for the test code
updated package names from ` org. apache. shenyu. integratedtest. alibaba. dubbo ` to ` org.
cloudstack - 4892 : remove skipprojectnetworks parameter from listnetworks api call
replaced ` remove ( typeFieldName ) ` method with ` get ( typeFieldName ) ` in ` RuntimeTypeAdapterFactoryFunctionalTest. java `
added methods to store undo info for properties in the App class to enhance user experience by enabling undo functionality for properties
replaced direct access to ` sun. java2d. xrgradcache ` with a privileged action using ` AccessController ` to enhance security
replaced assertEquals with await in StreamCloseTest. java to improve test reliability by using a more robust awaitility
added ` doAfterFlush ( ) ` method to ` DocConsumer ` and modified initialization of ` perFields ` in ` TermVectorsConsumer `
added handling for non - deprecated warnings in ConfigurationMetadataGenerator and introduced nested configuration property in AbstractJpaProperties to improve handling of deprecated properties and enhance
replaced instances of ` capacity ` and ` mask ` with ` values ` and ` newCapacity ` in ` BiInt2ObjectMap ` and
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and refactored file renaming logic in Hive. java to
don't try to close the selector if the connection fails.
added a null check for the context in SchemeAndroidIDE. java to prevent potential NullPointerException when the context is null
make native - image - generator - runner use the application classloader.
refactor ` modifyGrantedAuthorities ` method to return a list instead of an empty array to simplify the method signature and improve readability
refactor JaxrsIntegrationTest to JaxrsIntegrationTestBase and create new JaxrsSpringIntegrationTest and JaxrsSpringIntegration
add querytimeout support to poolutilities. isjdbc41compliant ( )
added DataProviders for general and supplementary character tests in XslSubstringTest. java to enhance test coverage for substring and supplement
replaced ` eventWriter. close ( ) ` with ` delegateEventWriter. close ( ) ` in ` StaxEventItemWriter ` and
added support for MariaDB sequences in CreateSequenceGenerator. java and modified sequence generation logic in MariaDBDatabase. java to enhance sequence
[ java ] fix typo in class file name
replaced ` BrokerResponse ` import with ` TableDataManagerProvider ` and added ` ServerMetrics ( new MetricsRegistry ( ) ) ` in multiple
updated the condition for enabling MFL extension in SSLExtension. java to ensure correct handling of MFL extension configuration
removed generic type parameter from ObjectHashSetIterator and added new test cases for string representation in ObjectHashSetIntegerTest to streamline iterator handling and ensure
updated character limit values in Compose. java and TweetFragment. java from 22 to 23 for shortened URLs and shortened URLs to
added a new property DATAPOINT _ TTL in CassandraDatastore. java and updated WriteBuffer. java and WriteBuffer. java to
refactor ` checkForAndKillXcodeIfRunning ` method to accept an ` enablePrompt ` parameter and update related logic to improve flexibility in prompting
added a method ` getTerrainAtCell ` to the ` TerrainGrid ` class for retrieving terrain from a cell to enhance functionality
added default value handling in ` Pretty. java ` and created a new test class ` T6665791. java ` to enhance functionality
added error handling for missing quest encryption keys in ResourceLoader. java to improve robustness by providing a clear error message when the quest encryption key
updated the return condition to include a check for push support to ensure that the request is only sent when it's not push
refactor PointValue class to improve code readability and maintainability
removed the sign method call for the local witnesses in BlockUtil. java to streamline the code by eliminating redundancy
modified return logic in FileSystemView. java to handle empty roots and improved security checks in Win32ShellFolder2. java to enhance robustness
updated method names and logic for copying last rows in ` ColumnText ` and ` PdfPRow ` classes to improve clarity and functionality when copying
replaced the ` undoTrash ` boolean with ` undoArchive ` and added a ` SparseArray < Note > ` to store and manage the
added logic to handle multiple feedback questions and responses in UploadBackupData. java to improve handling of multiple feedback questions and responses based on their IDs
added a null check for data in bug8024061. java to ensure that the getTransferData method returns a non - null data
remove old ebean - core class ( no longer need )
replaced the use of ` mLauncher. getPaddingForWidget ` with ` AppWidgetHostView. getDefaultPaddingForWidget ` to streamline padding
refactor methods in NashornBeansLinker. java for better readability and maintainability to enhance code clarity and ensure proper handling of consStringFilter
refactor ClassGraph and ScanResult classes to improve code organization and maintainability
rename ` latch ` to ` goAwayLatch ` and update the corresponding assertion to improve clarity and accuracy of the idle timeout check
replaced calls to ` getFailure ( ). getMessage ( ) ` with ` hasMessageThat ( ) ` in ` IterableSubjectTest. java `
replaced calls to ` Workbook. currentBook. set ( null ) ` with ` Workbook. currentBook = null ` across multiple files
added support for ` Class ` and ` Object ` in the ` vote ` method of ` ContactSecurityVoter ` to ensure that ` Class
removed unused imports from DataLoader. java to streamline code and improve readability
added a new parameter ` rowsAffected ` to the ` postUpdateLog ` method and updated its implementation to handle the number of rows affected
mow - 352 : fix margin of x and y scale
set default value for foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration. java to allow more control over FPS
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper release of resources during transaction logging
replace DefaultWebSocketFrame with a ChannelFutureListener for closing WebSocket frames to ensure proper handling of WebSocket frame closures
updated StateMachineErrorTests to use TestApplicationEventListener1 and TestApplicationEventListener2 instead of TestApplicationEventListener and added OnStateMachineError interceptor to
replaced the existing startActivity method with a new setListBackground method to improve code readability and maintainability by encapsulating background color setting
replaced the import of StringUtils from org. apache. commons. lang3 to org. openhab. core. util. StringUtils and added
added an ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to calculate the sum and count of a user - defined aggregate
hbase - 25827 fix typo in put. java and replicationsink. java
replaced VALID _ CACHE _ SET with REGEXP _ CACHE to store compiled regexs instead of VALID _ CACHE _ SET to improve efficiency by caching
added a static method ` reset ( ) ` to the ` GameThread ` class to reset the game thread state
added a login method to DigestAuthenticator that checks if the realm matches the login service name to ensure that the login service behaves as expected when the
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency to enhance code readability and maintainability while ensuring consistent parameter handling
fix a typo in the log message
replaced ` waitPoint. countDown ( ) ` with ` this. wakeup ( ) ` in ` CommitLog. java ` and ` HA
added a check for Android O and implemented auto - complete functionality in the UserAutoCompleteHelper and Utils classes to ensure that the auto - complete
changed the schema info level from minimum ( ) to basic ( ) in SchemaCrawlerTest. java to ensure that the schema info level is
replaced the use of ` ZipOutputStream ` with ` BufferedOutputStream ` in ` SaveTask. java ` and removed the ` writeEndElement ( )
replaced ` bytesToString ` method with ` utf8ToString ` in ` TestPayloads. java ` to ensure proper handling of UTF - 8
fix mc - 103516 and mc - 103516.
added Tomcat10ContainerAdapter and Tomcat101ContainerAdapter to the list to support new container adapters in the application
fix marshalling of multi - accumulator in protobuf
refactored case statements in NowSearchTerm and SearchTermBuilder for consistency to improve code readability and maintainability
pdfbox - 4071 : remove public modifier from class, a suggest by valerybokov
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for URL resolution and headers to improve code clarity and maintainability by utilizing
added a new method ` newResponseBuilder ( SolrQueryRequest, SolrQueryResponse, List < SearchComponent > components ) ` to encapsulate the
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command start notifications
added a ` recomputePreviewDrawingParams ` method to ` FolderIcon ` and modified the ` computePreviewDrawingParams ` method in ` Preview
replaced ` SimpleOrderedMap < Object > ` with ` CharFilterFactory ` in ` LukeRequestHandler. java ` to improve code clarity and
replaced null checks for'plot ','generator ', and'hotspot'with ParamChecks. nullNotPermitted in AbstractCategory
added verbosity support to ` JavacStep ` and modified ` createSubContext ` method to conditionally print error messages based on verbosity settings
added a check to convert schema to uppercase if the database type is " oracle " to ensure compatibility with Oracle database types
log4j2 - 1349 fix test failure
; ; ; ; ; ;
refactor code to use Splitter for splitting custom packages to improve code readability and maintainability
removed the conversion of ` utf8ToString ( ) ` to ` utf8ToString ( ) ` in ` AnalyzingInfixSuggester.
updated the handling of local attachments in PushsaferMessageBuilder. java to improve clarity and functionality when processing local attachments
removed the usage of the ` showLabelStats ` command from both ` ModelExplorer ` and ` SequenceModelExplorer ` to streamline the command
pdfbox - 4071 : remove unneeded null check
removed the'final'modifier from FORMATTER in multiple field test classes to allow for subclassing and improve code clarity
updated the ` evaluate ` method in ` UDFRound. java ` to use ` java. math. RoundingMode ` instead of ` Log `
refactor code to use ConfigParser for configuration retrieval to improve readability and maintainability of the code

replaced instances of ` String. valueOf ( String. valueOf ( permission. no _ permission _ event ) ) ` with ` String. valueOf (
added session parameter to the getAdditional method in ConditionAndOr and ConditionInConstantSet to ensure the correct session is used for additional expressions
from # # # # # #
fix box2d character controller test
r r r r r r r r r r r r r r
removed duplicate checks for " must be a multiple of 8 " in ObjectAlignment and Options classes to streamline code by eliminating redundancy
added target package extraction functionality in AndroidInstrumentationTest and related classes to enhance functionality for extracting package names from the APK and improve error handling
refactor DocHelper class to improve code readability and maintainability
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of an empty list to improve flexibility in handling acceptableThrowawayItems
6987555 : test6987555. java fail on java 11
reformatted code for consistency and clarity to improve code readability and maintainability
refactor Inflection class implementation to improve performance and maintainability of the code
added locale getter and setter methods to EvaluationContext to enable flexible locale handling in the evaluation context
removed an unused import of Plugin in SummaryPrinter. java to streamline the code by eliminating unnecessary dependencies
added a break statement in DrawerActivity. java to ensure proper handling of fall - through cases
replaced import of ` where ` with ` * ` and updated debug log statement to use ` query. getQueryObject ( ) ` instead of `
added a new constant XWORK _ LOGGER _ FACTORY in XWorkConstants and integrated it into LoggerFactory to allow configuration of the logger factory for
fix test for p2p disable acceptance
polish ` ` add bean name to ` ` livenessstatehealthindicator'' and ` ` readinessstatehealthindicator''
added concurrent map implementation for PStore management in LocalPStoreProvider. java to improve concurrency handling for store configurations
changed the visibility of the deleteFiles method from public to private in TestUtility. java to encapsulate the file deletion logic within the class
refactor ServiceLoaderSpliterator and TypeUtil to improve clarity and consistency to enhance code readability and maintainability by using more descriptive variable names
don't throw runtime exception in javainteropreflect. findfield ( )
added ` isToolchainCreated ` method to ` AbstractCell `, ` DefaultToolchainProvider `, and ` DaemonLifecycleManagerTest `
do not add context to the engine if it have be add to the engine.
replaced ` indexOf ` with ` contains ` in ` AbstractCheckDescriptor. java ` to improve readability and maintainability of the code
r r r r r r r r r r r r r r r r r r r
refactor ` AbsSwipeUpHandler ` and ` RecentsView ` to use a new method for updating recents rotation to improve code clarity and
updated listener checks to use wildcard generics for better type safety to enhance type safety and prevent runtime errors
updated the method to retrieve the hash as a string from the new block to ensure the correct hash is used for block processing
use getstorepathphysic ( ) instead of getstorepathcommitlog ( )
remove unnecessary try - with - resources statement in MicrometerMetricManager. java to simplify code and improve readability
added logic to track the number of messages in the CompactionLog class to ensure accurate tracking of message counts based on their status
mark certain methods as deprecated in AbstractJPASubQuery, JPACommonQuery, and JPAQueryBase to indicate that these methods are outdated and should
added a method to check for the presence of the system UI object in AbstractLauncherUiTest. java to ensure proper handling of system UI interactions
hhh - 147642 - remove static modifier from sessionregistryimpl. java
added a check to return false if the cookieJar is empty in InMemoryCookieStore. java and implemented the removeAll operation in NullUriCookieTest
[ bonsai ] add debug log for bonsai
changed parameter types from String to CharSequence in ITextRepository, LimitedSizeCacheTextRepository, and NoCacheTextRepository classes to allow for
added a @ NotYetImplemented annotation to the AlertsTest class to indicate that the test is not implemented in marionette
added a finally block to handle potential IOException in the SocketConnector class to improve resource management and prevent potential resource leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update references accordingly to standardize naming
added synchronization for the heartbeatExecutorService in DbTxnManager. java to ensure thread safety and prevent potential deadlocks
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored the ` wrapWithTracingAndCan
added a method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to ensure proper handling of drag - selecting text within the
added support for multiple work directories in TestInformationSchemaWithPrivilege. java to ensure proper configuration for different operating systems
refactor graphics configuration retrieval logic in Component. java to improve readability and maintainability of the code
tika - 2692 : fix unit test for oom in legacy mode
camel - 16400 : camel - core - optimize rout engine to reduce stack frame in use during rout
fix for - model argument in printtaglist
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser. java ` and added a new test for
http : / / issues. apache. org / jira / browse / amq - 4237 - check for eofexception in journalcorruption
; ; review for this test
updated arc calculation in LineBorder. java and modified test cases in Test4252164. java to improve accuracy of rounded rectangle calculations and
added a check for empty gallery images in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions when galleryImages is null or empty
refactor deployment ID handling in StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to improve code clarity and ensure consistent deployment ID generation
pdfbox - 4892 : use the interactive form instead of the fdf one
removed the ` false ` parameter from the ` canUseIndex ` method calls across multiple files to simplify method signatures and improve code clarity
added support for managing provisional engines in QuickfixjComponent to enhance engine management and improve test coverage
replaced the ` setMixedContentMode ` method with ` mixedContentMode ` and added ` setDisplayZoomControls ` and ` getDisplayZoomControls `
add corporea and corporea spark corporea block, fixes corporea spark and corporea
add @ since 5.4 . 0 to connectionfactory # enablehostnameverification
added a new method ` EnableDisableMenuItems ( ) ` and a corresponding check in ` GpsMainActivity ` to enable or disable menu items
updated the ` setMessageForEmptyList ` method to include ` filter _ list ` instead of ` server _ search ` to enhance user interface by
hhh - 147643 - fix unit test for h2
set auto - resize mode to OFF in MotorMountConfigurationPanel and modify the MotorMountConfigurationPanel instantiation to improve UI responsiveness and
replaced ` System. lineSeparator ( ) ` with ` System. getProperty ( " line. separator " ) ` to ensure compatibility with system properties
added getter and setter methods for getCreator, getSubject, and subject in POIXMLProperties. java and updated test cases in TestPOIXML
removed redundant call to super. doStop ( ) in HandlerWrapper. java to improve code clarity and maintainability
added a check for non - empty cncFile length in Aeron. java to ensure that the loop continues while the cncFile
renamed ` NonMarkedFoo ` and ` MarkedFoo ` to ` Command ` and ` FooCommand ` respectively to improve clarity and consistency in
added methods to check if the file ends with ". jmod " in ClassFileSourceImpl. java to ensure correct handling of jmod
replaced ` PostEnterCanonicalizer ` with ` @ Nullable ` in ` TreeBackedElement ` and removed ` PostEnterCanonicalizer ` from
replaced the existing token request with a new PublicTokenRequest instance in Saml2TokenGranterTest and UserTokenGranterTest
replace array length with value range object in AbstractFromPropertyValueRangeDescriptor to ensure correct handling of range values in the list
added synchronization functionality to ZKAssign and ZooKeeperWatcher classes to ensure that changes to ZooKeeper do not interfere with other operations
added a check for the absence of the current context in GlUtil. java to ensure that the current context is not null before proceeding
npe when remove a ruleflow group without activation
added a return statement to the HystrixDashboardConfiguration class to ensure graceful shutdown of the application
removed exception handling for non - existent pipe in DropPipeProcedure. java and added a test case in IoTDBPipeIT. java to
fix clientqueuenultanagertest # testclientqueuedisruption
refactor : use defaultjavapretref. tostring ( ) instead of signatureprinter. getsignature ( )
changed the access modifier of the validateInstance method from public to protected to allow subclasses to access the method for better usability
updated import statements for GeoPointField, GeoPointTokenStream, GeoPointInBBoxQuery, and GeoPointInPolygonQuery classes to improve code clarity and
added a new class ` FakeBuildable ` and modified ` OnDiskBuildInfoTest ` to use it to improve test reliability by ens
fix crash in guiingameforge
renamed ` rule path ` to ` rule timeseries ` in ` TSParser. java ` and ` SQLParserTest. java ` to improve
added a check to return 0 if the velocity is less than the EPSILON threshold to improve accuracy of velocity calculations
replaced instances of ` getBucket ( gcsUri ) ` with ` _ storage ` in ` GcsPinotFS. java ` to ensure
removed redundant call to blockCloseVertxByName in TestHighwayTransport. java to streamline the code by eliminating redundancy
fix for postgres history view
updated the cluster engine check from 2 to 3 in CarrotClusteringEngineTest. java to ensure the test accurately reflect changes in the clustering
added JUnit Ignore annotation to SynDataReplyDataLoadTest. java to indicate that the test needs to be rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand. java ` and added a new class ` ParserState
added logic to set the object quoting strategy in ChangeSet. java and DatabaseChangeLog. java to ensure that the correct object quoting strategy is
replaced ` MetainfoParser. parse ` with ` MetainfoParser. fromXmlStream ` to improve compatibility with XML streams
deleted the CsrfControllerAdvice. java file to remove unused CSRF token handling code
added a method to quote path lists and modified the way endorsed directories and directories are handled to improve path handling and ensure proper handling of
added scrim animation functionality to the Launcher and related classes to enhance visual feedback during app transitions
updated parse threshold in TypeInferenceUtils. java and added new values in TypeInferenceUtilsTest. java to ensure correct parsing of long values and
regenerate client with updated copyright year ( # 4382 )
added handling for absolute and UNC path types in WindowsPathParser and PathOps classes to improve robustness of path parsing and ensure correct handling
removed unnecessary InetSocketAddress instantiation to simplify code and improve readability
replaced multiple instances of ` writer. close ( ) ` with ` writer. close ( ) ` in ` TestWildcard. java ` to ensure
return nBits. clone ( ) instead of nBits to ensure deep copies of nBits to avoid unintended modifications
changed the visibility of ` deriveCollectorName ` from private to protected and added tests for ` TotalHitCountCollector ` and ` TestProfilerCollector `
datamongo - 2043 - fix miss type hint when write simple type
added performance measurement for creating a proxy factory in ProxyMaker to improve performance tracking during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine. java to suppress unchecked warnings during compilation
added the exception as a parameter when throwing ConnectionException in TCPConnection. java to improve error handling and provide more context for connection issues
refactor reinflateWidgetsIfNecessary method to use the Workspace class for better widget management to improve code clarity and maintainability by encapsulating widget inflation
added a new file ` DeleteInsideFileDialogTest. java ` to test the functionality of the ` deleteInsideFileDialog ` dialog to ensure that the
don't auto - flush the display when there be no renderable
add test case for show photo
added functionality to filter tests based on the " onlyrun " and " method " system properties to enhance test flexibility by allowing only run and methods
removed the ` pointer ` parameter from the ` fling ` method signature in ` ScrollPane. java ` to simplify the method signature for better
added null check for pageable in QueryDslJpaRepository and created a test for null pageable in QueryDslJpaRepositoryTests to
add computememorysize ( double fraction ) to memorymanager. computememorysize ( )
publishjmstest : fix flaky test
refactor SnowballAnalyzer class structure to improve code maintainability and readability
replaced the previousBatch initialization with a new instance of InternalBatch to simplify code and improve performance by eliminating unnecessary object creation
improve error message when plugin don't have a receiver
added a new method ` stream ` to the ` StreamSupplierComponent ` class to provide a default implementation for stream operations
updated logging messages and improved file renaming logic in MediaMonitor. java to enhance clarity of logs and ensure proper handling of file move failures
replaced the ` setAccessable ` method with a new ` newInstance ` method in both ` InjectorProxy ` and ` ReflectionUtil ` to improve
[ hotfix ] [ stream ] fix resource leak in flinkstreamingcreatefunction
added unit tests for SHOW CREATE TABLE, ALTER INDEX, and CREATE TABLE statements in multiple test files to ensure that the SQL parser correctly handles unsupported
changed return value from null to ImmutableList. of ( ) in AppleTest. java to enhance functionality by returning an empty list instead of null
updated test cases in NamedSetTest. java to include additional test cases for CruiseControl to improve test coverage for CruiseControl
added a check for websocketReconnect and modified connection handling logic to improve connection stability and ensure proper handling of websocket connections
replaced ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI _ SECURITY

added PMS configuration setup in FormatRecognitionTest. java to ensure proper handling of PMS settings during recognition
bug fix : create template on ov disk ( # 4897 )
refactor PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 annotations and simplify the test setup to improve test readability and maintainability by using JUnit
added @ Override annotations to CentralAuthenticationServiceImpl, RemoteCentralAuthenticationService, and NoOpLockingStrategy classes to ensure proper method overriding and improve code
modified SQL statements in ` AppendOnlySchemaIT. java ` and added new column names in ` view1 ` and ` metricval2 `
added a check to throw a CorruptIndexException if deletedDocs count matches the segment document count to ensure that the deleted document count does not
added getloggername ( ) and logtrace ( ) for sip communicator jain sip logger.
updated version from 0.19 to 0.19 in FilamentFactory. java to reflect the correct length requirement for staves / no starting barline
removed the default value of ` handleFileUploads ` from ` VertxPlatformHttpServerConfiguration ` and added it in ` VertxPlatformHttp
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` in ` CsrfFilterTests. java `
` ` ` ` / / / / / / / / / / / / / / / / / / / / / /
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in spelling
[ beam - 8470 ] add watermark to fileio's metadata
fix npe in sqmstatement. copy ( context )
added import statement for ResultSetMetaData in QueryCompilerTest. java to enable handling of ResultSetMetaData in query compilation
updated the argument passed to the library command from ` -- out ` to ` -- root ` to ensure the correct root path is used for library
updated the angle range for the BasicSlider component in RailButtonConfig. java to ensure proper handling of angle values in the panel
fix draw encloser ( ) and add timers. run ( )
added expressionLanguageSupported ( true ) to KerberosProperties. java to enable dynamic language support for Kerberos authentication
removed conditional checks for ` remoteMountPointComponent ` in ` ThirdPersonRemoteClientSystem. java ` to streamline the code by eliminating
updated the ` setupViews ` method to accept a ` ScrimView ` parameter and adjusted progress handling in the ` WorkspaceStateTransitionAnimation
add ` ` periodic materialize'option to enable periodic materialization.
added a private field ` value ` and its getter / setter methods to ` ProtocolParameter `, and updated ` List ` and ` ParamTag
add unit test for httpservlet. head ( )
add ` `umped : true'' and ` ` false'' to checkrouteranswer
added a Content - Type header with a value of " application / x - www - form - urlencoded " in SwitchToPostInterceptor. java
refactor EmbeddedClientConnector to improve code readability and maintainability
added logging for ignoring setFetchSize in PhoenixResultSet to improve error handling and provide visibility into setFetchSize behavior
added a new instance of AndroidNet with a null value to ensure proper initialization of the AndroidNet instance
updated method parameters to include numRowsConsumed in LLRealtimeSegmentDataManager. java to ensure correct handling of row count in the log output
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService. java ` to simplify method
removed unused PrefixTreeCodec class from TableMapReduceUtil. java to streamline code by eliminating unused imports
added inflation failure handling in DesignerActivity and made the root variable final in XMLLayoutInflater to improve user experience by preventing accidental inflation of
refactor PushbackInputStream class implementation to improve efficiency and maintainability of the code
switch to use schedule phase for lowering analysis.
updated error message format from download _ folder _ failed _ content to sync _ folder _ failed _ content to clarify the purpose of the error message
from
replaced direct calls to ` reader. getDeletedDocs ( ) ` with ` MultiFields. getDeletedDocs ( reader ) ` to ensure compatibility
replaced the call to ` super. setTransformRefresh ( ) ` with ` refreshFlags = RF _ TRANSFORM ` and added setBoundRefresh
fix safepoint insertion for cfunction.
added a callback for window size changes in LwjglWindow. java to ensure proper handling of window size changes
updated animation logic in LauncherAppTransitionManagerImpl. java to use off - screen animations instead of right - to - left animations to improve visual consistency
replaced ` NodeLiteralNode ` with ` NullLiteralNode ` and removed ` NodeLiteralNode ` from ` LiteralNode ` to improve clarity and
added a ` setLength ` method to ` FSDirectory `, ` FSDirectory `, ` IndexOutput `, and ` CompoundFileWriter ` to
updated AndroidNdkScriptGenerator and AntScriptGenerator to include memcpy _ wrap. c and modified imports in LwjglDebugStarter
camel - aws2 - s3 : use sourcebucket ( ) instead of copysource ( ) in camel - aws2s3
added permission check for " * " role in RuleBasedAuthorizationPlugin. java and updated test cases in TestRuleBasedAuthorizationPlugin. java to
updated ZookeeperClientServerRegisterRepository to handle null and empty data to improve robustness and prevent potential NullPointerExceptions
replaced ` makeDeepMock ` with ` deepStub ` in ` ReturnsDeepStubs. java ` and refactored the mocking logic to
updated method to handle cases where getCallValue ( ) is empty to ensure correct byte representation when call values are zero
fix ` ` fail to parse date'' log message
added exception handling for NoSuchAlgorithmException in PKCS12KeyStore and updated PBE _ ALGO to PBEWithSHA1AndDESede in P
tiff : use inputlength instead of length to prevent eof.
added validation for invalid job parameters in CommandLineJobRunner and created a test for it in CommandLineJobRunnerTests to ensure that invalid parameters are properly
removed the newline character from the content assertion in SmtpTests and MailTests to simplify assertions for better readability and maintainability
updated case statements in ExtendedConnectionDataSourceProxy. java to use diamond operator to improve code readability and maintainability
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for concurrent access to improve thread safety and performance of sequence ID generation
; ; ; ; ; ; ;
updated ` ShadowWifiManagerTest ` and ` WifiUsabilityStatsEntryBuilder ` to use ` maxSdk ` instead of ` minSdk `
added a new file ` Solution. java ` that implements a solution for sorting queries to check if a query fails or not in ascending order
patch by brandonwilliams, review by jbellis
refactor taskbar recreation logic in TaskbarManager. java to improve clarity and maintainability of taskbar recreation logic
refactor SyncFutureCache implementation to improve performance and maintainability of the code
updated the default DUBBO PROTOCOL version from " 2.0. 1 " to " 2.0. 2 " and changed the LOWEST _ VERSION _
fix false positive for uselessstringvalueof
added a new test method ` testEllipseNoseconeDrag ` to the ` SymmetricComponentCalcTest ` class to ensure the
added a default target max type shard size parameter to the HollowProducer class to improve flexibility and control over the maximum type shard size for better
added support for versions " 5.5. 2 - cfs " and " 5.5. 2 - nocfs " in TestBackwardsCompatibility.
[ hotfix ] fix checkstyle violation in compilationtask
updated assertions in TestSemanticAnalysis. java and modified parameter handling in DDLTask. java to improve test reliability and ensure correct handling of
added a call to execute a ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase to enable clearing of the database change log table for improved database
updated URL and version handling in RestClient and CallPath classes to improve URL generation and ensure accurate versioning based on path and version
updated exception handling and added a closed state check in PhoenixDriver. java to improve error reporting and ensure proper resource management
[ scene2d. ui ] fix checkstyle issue in scene2d.
added tests for file deletion in ConflictsResolveActivityIT and refactored FolderPickerActivityIT to extend AbstractIT and added screenshot functionality in
; ; ; ; ; ;
added a check for negative length in the StringHelper class and implemented unit tests for the removeLeadingAndEndingQuotes method to ensure robust handling
added support for " NOT CONTAINING " keyword in the JpaQueryCreator and UserRepositoryFinderTests classes to enhance functionality for querying users with
don't retry retry retry if authdurtoolong
added a call to dispatch a new P25Message instance to ensure proper handling of message processing within the message framer
added null check for the WebSocket handler in WebSocketImpl. java and implemented a test for clearing client handlers in WebsocketTest. java to ensure
[ ds - 3441 ] fix test case for claim and pool task
refactor widget padding retrieval in AppWidgetResizeFrame and Launcher classes to improve code clarity and maintainability by using a unified method for padding values
added methods to hide all apps and close overlay in multiple classes to improve user experience by preventing unintended overlays
replaced ` Thread. sleep ( ) ` with ` launcher. join ( ) ` for improved responsiveness to the launch method
updated the calculation for the zoom level in JavaSEPort. java to ensure the zoom level accurately reflects the current zoom level
fix crash when upload fails
fix for infinite loop in excessivepubliccounttest. patch by gdusbabek ; review by jbellis for cassandra - 14
hbase - 25880 addendum add retry number to hbase. client. retries. number configuration
change log level from info to debug for half offset log message
added exception handling for FileNotFoundException in ResourceUtils. java and changed logging level from debug to trace in AbstractCipherExecutor. java to improve error
added a new class ` BittrexTickersResponse ` and integrated it into ` BittrexMarketData ` and ` Bittrex
refactor enumConstants retrieval logic in EntityEntry. java to improve code readability and maintainability by reducing repeated method calls
refactor session registration and unregistering methods for improved clarity to enhance code readability and maintainability by using Object instead of Class <? >
updated character labels in FileUtils. java to include additional characters to improve clarity and accuracy of character representation
added stylesheet handling in ResourceService and updated ResourceHandler to utilize it to improve resource management and ensure the correct stylesheet is set
added a call to clearIndex ( ) in TestFiltering. java to ensure the correct index is maintained during filtering
changed the method call from ` invokevirtual ` to ` invokevirtual ` in ` X86MethodGenerator. java ` to use ` PointerParameter
updated condition to check for CockroachDatabase instead of Postgres in CreateSequenceGenerator. java to ensure compatibility with Cockroach database
removed redundant check for enum type in ObjectStreamClass. java to streamline code for better readability and maintainability
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library. java ` and added a new ` SymbolNotFoundError ` class to
added logic to conditionally use SolrReturnFields based on return fields to enhance flexibility in document retrieval based on specified criteria
added handling for PING and PONG cases in WebSocketImplBase. java and implemented a test for pausing ping in WebSocketTest. java to
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner. java to ensure proper handling of special characters in the regex
fix for http : / / issues. apache. org / jira / browse / amq - 42
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to ensure that MessagingTracing class is only used when appropriate
mondrian : fix quote identifier for db2
updated import statements in IDELanguageClientImpl. java, EditorTextActionMode. java, EditorTextActionWindow. java, and IDEEditor
added handling for'/'character in XMLLightweightParser to ensure proper handling of closing tags in the XML parser
set the visibility of the TouchCharInput view to GONE to improve user interface by removing unnecessary UI elements
added a null check for getCurrentUser ( ) before comparing the current user ID to prevent potential NullPointerException when getCurrentUser ( ) is null
refactor JSObjectLinker to conditionally set the slot and member based on the index to ensure correct handling of JSObject members and improve code clarity
replaced the ` DefaultUniqueTicketIdGenerator ` constructor with a new ` setSuffix ` method to streamline the creation of ` DefaultUniqueTicket
added a @ Deprecated annotation to the SecurityConfig class to indicate that the class is outdated and should not be used
added @ Deprecated annotation to multiple Java files to indicate that these classes are outdated and should not be used in future versions
deleted ` JoglDebugAdaptor. java ` and modified ` RocketFigure3d. java ` and ` RocketFigure3d
added ` toString ` methods to ` ExtraFieldPropagation ` and created corresponding test cases in ` ExtraFieldPropagationTest ` and ` AWSPropagation `
added PendingIntent to PendingIntent in FileDownloader and FileUploader classes to ensure proper handling of PendingIntent for content notifications
added a ` set ( ) ` method to the ` Lucene80DocValuesProducer ` class and modified the ` nextOrd ( ) ` method to
refactor DateTimeFormatter class to improve code readability and maintainability
updated the syntax for setting desktop properties in WToolkit. java to improve code readability and maintainability
added null and empty checks for ` administratorCredentials ` and ` keytab ` in ` setAdministratorCredentials ` to ensure proper handling of null
added a maximum width scaling for tablet and two - panel screens in BaseWidgetSheet. java to ensure proper display for tablet and two - panel
added rendering for the sketch window color in PSurfaceJOGL. java to ensure proper rendering of the sketch window based on its color
refactor hashing logic in Hashing. java to improve performance and maintainability of the hashing process
modified the ` accept ` method in ` FileSenderFactory ` to use ` folderPath ` and ` fileName ` instead of ` s ` to
updated UserInfoActivity to include string resources for user info icons to enhance readability and maintainability of user info display
added a null check for the type in the J class to ensure proper handling of null types and prevent potential NullPointerExceptions
reduced the ACTIVITY _ START _ DELAY value from 500 to 800 to improve responsiveness during activity transitions
added a constant WEBAPP _ HOME in SolrJettyTestBase. java and updated the path assignment in JettyWebappTest. java to
replaced the initialization of ` diameter ` with a direct assignment of ` selectedMotorSet ` to streamline the code by eliminating unnecessary null
added BufferUtil import and called clearToFill ( buffer ) method to improve buffer handling efficiency
add test for alarm trigger creation via rest api
updated references from " authorization. ldap. groupBase " to " authentication. ldap. groupBase " and " authorization. ldap. groupNaming
fix for http : / / issues. apache. org / activemq / browse / amq - 380
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
updated connection handling in PingService and ServerInfoService to improve error handling for connection failures
refactor CompositeHandlerAdapter. java to improve code readability and maintainability
refactor Quartz2Adapter class implementation to improve performance and maintainability of the code
added exception handling for IllegalStateException in SulongLibrary. java to improve robustness by catching IllegalStateException during execution
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improvements
refactor ` NameResolver ` and ` DiscoveryClientNameResolver ` to use ` Args ` instead of ` io. grpc. NameResolver. Helper
refactor annotation handling in JavacParser and add a new test class TestAnnotatedAnonClass to improve accuracy of annotation processing and ensure proper handling of
added " com. sun. naming. internal. " to CheckPackageAccess. java to ensure compatibility with internal package naming conventions
changed the default value of the strict variable from false to true to enable strict mode for data processing
refactor the ` readPartition ` method to include an ` isExhausted ` parameter and update its logic to ensure that the ` readPartition
refactor ActionResetingPool class to improve code readability and maintainability
updated the return logic in LightStateConverter to check if the color mode is not in XY mode to ensure correct handling of color modes based on
refactor CellLayout to use an array for target cells and improve folder creation logic to enhance code readability and maintainability by consolidating folder creation logic
replaced activity. showLoadingDialog ( ) with callerActivity. showLoadingDialog ( ) in FileOperationsHelper. java and OCFileListFragment.
added a null check for the uigestureFile before loading XMLLogs to prevent potential NullPointerExceptions when uigestureFile is not present
updated method calls to use ` Locale. getDefault ( ) ` instead of ` toUpperCase ( ) ` in ` FieldNamingPolicyTest. java `
added listener retrieval to the XmlSuite class to enhance the functionality of the XmlSuite class
added a new method ` loadWithNewGlobal ` and modified global handling in ` Global. java ` to enhance functionality by allowing dynamic loading of
added JSON string conversion methods to ` StarTreeIndexSpec ` and updated test assertions in ` TableConfigTest ` to improve JSON handling and ensure
updated HttpSecurity, HeadersConfigurer, OAuth2LoginConfigurer, OAuth2ResourceServerConfigurer, Saml2LogoutConfigurer, and ServerHttpSecurity
replace occurrences of " \ \ " with'/'in multiple file handle classes to ensure consistent handling of backslashes in file paths
fix npe when in ( ) be call with null
added import for FieldCache and invoked commit ( ) and purgeFieldCache ( FieldCache. DEFAULT ) in TestDistributedSearch. java to ensure
added test case for message boundary event on subprocess and inside subprocess
fix : resolve static method in programmanager
http : / / issues. apache. org / activemq / browse / amq - 2576 - add messagegrouphashbucketcount property to
refactor slot handling logic in Secmod. java to improve clarity and maintainability of slot identification logic
added alignment handling and modified the ` startRenderering ` method in ` GdxRenderer ` to improve layout management and enhance the functionality of the `
[ hotfix ] [ test ] ignore unalignedcheckpointitcase
added imports for SourceDataLine, TargetDataLine, Sequencer, and Synthesizer classes in JDK13Services. java to ensure
added a check to ensure the keyword reference does not already exist before adding it to the reference map to avoid potential null pointer exceptions
camel - 1860 : camel - core - optimize multicast eip to reduce object allocation
removed the ` getStartCount ( ) ` method from ` SegGraph `, ` SegToken `, and ` WordDictionary ` classes
fix telegraf escape ( # 644 )
allow multicast package to be broadcast to a multicast address.
rename operatormulticast to operationmulticast
updated the timeout duration from 1 to 100 milliseconds in EventBusTracerTestBase. java to improve test reliability by allowing more time for failure
added a try - finally block around the latch check in VertxTestBase. java to ensure proper resource management and prevent potential memory leaks
hhh - 147642 - fix a deadlock in sessionfactoryserviceregistryimpl. destroy ( )
danielwagnerhall : fix flaky test
[ hotfix ] [ pytorch ] add test for pytorch nDArray
added a TaskStackChangeListener to clear the INVISIBLE _ BY _ STATE _ HANDLER in RecentsView and removed the onEnterAnimationComplete method
pdfbox - 2576 : fix bug in defaultsplitcharacter. checkdatepattern ( )
camel - 14284 : camel - cxf should use source code generate configurer to avoid reflection configuration.
refactor pending animation handling into a separate method for better code organization to improve code readability and maintainability by reducing duplication
added logging for single frame duration in LauncherAnimationRunner to improve debugging and monitoring of animation durations
added a conditional check for BailoutOnException in C1XCompilation. java and introduced a new constant BailoutOnException in
replaced instances of signup and passwd with null values in Links. java and updated assertions in IdentityZoneConfigurationBootstrapTests. java to ensure proper handling
[ hotfix ] rename slotprofile # getpreviousallocations ( ) to slotprofile # getreservedallocations ( )
refactor TimeConverter to use a single format variable instead of creating a new one to improve clarity and maintainability of date formatting logic
added NoDataContainer import and modified GeoTiffReader and GeoTiffReaderTest to utilize it for rendering images to ensure proper handling of
sulong : improve error message when exception source section be null.
replace ` toString ( ) ` with ` new String ( out. toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and ` DefaultExecutionContext
fix intermittent failure in this test
refactor ArrayTypeHandler to handle null values safely to improve robustness by preventing potential NullPointerExceptions
refactor JakartaRegexpCapabilities. java to use reflection for retrieving regex patterns to improve flexibility and maintainability of the regex functionality
updated the application pick method to use Application. class instead of null to ensure compatibility with the latest application configuration
[ jbrules - 4071 ] fix npe on mutable global
replaced ` Preconditions. checkNotNull ` with ` TransactionUtil. validAssetName ( ) ` and ` TransactionUtil. validAssetDescription ( ) `
bug fix : copy paste don't work for text field
added descriptions for toast actions and updated status messages in LGWebOSUpnpDiscoveryParticipant and LGWebOSHandler to enhance user feedback
updated seed, active, and trust node assignment logic in TronNetService. java to ensure that seeds, active, and trust nodes are
updated assertion messages in BaseTokenStreamTestCase. java and modified thread handling in AnalysisThread. java to improve clarity of assertion messages and ensure proper
refactor getNextTime method to include a modulus parameter for better clarity to improve code readability and maintainability by using a unified increment method
refactor ` performItemClick ` and ` performItemContainingText ` methods in ` ShadowAdapterView ` and ` ShadowListView ` to improve code
pdfbox - 4071 : fix typo find by codespell on fossies. org
graphdecoder : dump dump graph after pe method.
refactor HttpSessionDestroyedEvent to improve attribute handling and add unit tests for HttpSessionDestroyedEvent to enhance code clarity and ensure proper functionality through unit tests
added a test to verify the change of the service name in the zipkin span to the manually provided one to ensure that the service name changes
added logging for SpoolMode in JavaInMemoryFileManager and JavacToJarStepFactory to improve traceability of SpoolMode during jar processing
rename SeparatedProjectGenerator to SeparatedProjectsGenerator and update related references to improve clarity and consistency in naming
increase timeout in the tryLock method from 4 seconds to 10 seconds to allow more time for concurrent access to the lock
updated the ` of ` methods in ` ConfluentSchemaRegistryDeserializerProvider ` to include a ` schemaRegistryCacheCapacity ` parameter to enhance flexibility
replaced the remind JCheckBox with a checkAtStartup JCheckBox in UpdateInfoDialog. java to enhance user interface by providing a configurable check - at
added methods for " strongKeys ", " weakKeys ", " weakValues ", " expireAfterAccess ", " maximumSize "
hhh - 147642 - fix cascadingactions. istransient ( ) to not throw transientexception
added constants for PROTO _ PROPERTY _ NAME and SETPROTOCHECK method handles in ScriptObject. java to enhance functionality for handling prototype properties
changed default read mode from " heap " to " mmap " in CommonConstants. java and modified ImmutableSegmentLoader. java to improve segment loading
added ByteArrayTemplate import and modified ArrayTemplateBuilder to return ByteArrayTemplate instance for byte class handling
added Hipchat configuration to the SamlServiceProviderProperties and created a new CASSamlSPHipchatConfiguration class to enhance the
changed the type of ` commandRegistryUrls ` from a ` List < URL > ` to a ` Set < URL > ` and updated its
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve clarity of warning messages and provide more context
http : / / issues. apache. org / jira / browse / amq - 4237 - allow ssh authentication to work
fix for http : / / issues. apache. org / activemq / browse / amq - 407
cloudstack : fix typo find by codespell on fossies. org
refactor Timers class implementation to improve performance and maintainability of the Timers class
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter. java ` to
removed multiple deprecated UAX29URLEmailTokenizer constructors from the UAX29URLEmailTokenizer class to streamline code by eliminating
removed ` Map < Object, Object > ` implementation from ` ScriptObject ` and updated tests accordingly to simplify the class structure and improve test accuracy
refactor EventBusMetrics class to improve code readability and maintainability
fix for npe in i18nutil. getepersonlocale ( )
updated JaversTransactionalDecorator to implement InitializingBean and refactored ensureSchema method to improve compatibility with Spring's InitializingBean implementation
removed null check for pgTypeName in TypeInfoCache. java to simplify code by eliminating unnecessary null check
added server initialization for handler0 and handler1 in ScopedHandlerTest. java to ensure proper handling of server requests in the test
add calltimeout to calltimeoutexception
updated the condition to check for non - blank username and password in RestLoginProcessingFilter. java to ensure that the username and password are only
changed permission node check from an empty string to a wildcard string in CommandMap. java to ensure proper handling of wildcard permission cases
rename ` encoding ` to ` sourceCharset ` and modify character encoding handling to improve clarity and consistency in character encoding handling
changed the type of postLogin from byte [ ] to String in HostBean and TerminalBridge classes to allow for more flexible handling of post login
refactor simulation handling in GeneralOptimizationDialog. java to improve code clarity and maintainability by using more descriptive variable names
camel - 16400 : allow to disable context reload by default.
updated logger properties in CommonTestUtils. java for consistency and clarity to improve readability and maintainability of log output
refactor PrologSizeSanityCheck class to improve code clarity and maintainability
refactor NearbyListFragment to improve code organization to enhance maintainability and readability of the code
added a conditional check for non - mark - supported input stream content type in RequestBody. java and created a corresponding test in RequestBodyTest. java
added a check for TCP port availability and improved handling of empty beans in EmbeddedNeo4jServer, DefaultBeanContext, and TypeArgument
add ` ` prefab : player'' instead of ` ` prefab : player''
modified the random method to include a half length total weight parameter and adjusted related logic to enhance randomness and prevent off - by - one errors
refactor GsonParser to simplify cache string handling and remove unnecessary validation checks to streamline code and improve readability
updated the parameters for the " gcmsort " and " gcmdir " parameters in ApacheHttpClientMediaWikiApi. java to improve sorting
replaced ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract ` and ` Session
[ iotdb - 3447 ] pipe task coordinator can be acquire by the same thread ( # 3441 )
added a conditional check for preinstrumented JARs in DefaultSdkProvider to ensure compatibility with preinstrumented JARs based on system properties
updated conditional check from `! isSilent ` to ` isSilent ` to simplify logic for silent mode
added validation for dynamic field default and required fields in IndexSchema. java and created a test for unsupported attributes in BadIndexSchemaTest. java
don't try to send a repair response if there's an error
replaced ` ImmutableSortedSet ` with ` Iterables ` for adding system include roots and added a test for includes in ` PrebuiltCxxLibraryDescription
added sensitivity checks for Subject Key Identifier and serial number in AdaptableX509CertSelector. java and ForwardBuilder. java to enhance security
use abstractappender. parse ( int, int ) instead of try / catch
added a @ Deprecated annotation to the GuiScreenEvent class to indicate that this class is outdated and should not be used in favor of an alternative
removed duplicate methods for adding and removing categories in CategoryEditSearchRecyclerViewAdapter to streamline category management and improve code clarity
# 157 - add servercachefactory. getloaded ( ) and cachebuilder. getcache ( ) ( # 157
refactor RocketComponent initialization to use a for - each iteration to improve code readability and maintainability
fix compilation cancellation issue
refactor ` MultiThreadedBuildRuleResolver ` to use a ` Supplier < V > ` for task creation to improve code clarity and maintainability by
refactored WanReplicationServiceImpl to utilize a mutex for StripedExecutor management to improve thread safety and ensure consistent shutdown behavior
added null checks for ` tPartition ` and ` table ` in ` Partition. java ` and modified driver initialization in ` DDLSemantic
refactor task pool creation in RemoteServiceRegistry to use lambda expressions to improve code readability and maintainability
added unit tests for the ` FilesTest ` class and implemented the ` delete ` method in the ` Files ` class to ensure that the `
removed unnecessary try - catch blocks in ServerSocketAdaptor and SocketAdaptor to streamline resource management by eliminating unnecessary try - catch blocks
updated class name check from " java. lang. System " to " Logger. class. getName ( ) " in SSLLogger. java to
replaced ` currentWorkingDirectoryList. clear ( ) ` with ` addWorkingDir ( f. toString ( ) ) ` in ` Project. java
added a null check for the variable'cn'in ItemInfo. java and set insets in Workspace. java to ensure proper handling of null
changed the visibility of the ` String ` variable from public to private to enhance encapsulation and restrict access to the ` String ` variable
updated URL format for CSV and JSON files in SimplePostTool. java to ensure accurate representation of JSON data for Solr updates
apps - 2693 make sure that algebraitem. issymbolicdiffers ( ) and algebraitem. issymbolicdiff
refactor client container startup and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve resource management and ensure proper shutdown
updated conditional check from `! = null && ` to ` |!! type. isPresent ( ) ` to improve clarity and correctness of type
clean up the web application context after each test
added a method to retrieve the search string from the query string and implemented a searchFun function in the DLNAResources class to enhance search functionality
updated the visibility of the neutral button in SetupEncryptionDialogFragment to improve user interface by hiding the neutral button
add count ( distinct i ) for distinct count ( distinct i )
updated SQL syntax in DDLTask. java to use single quotes for table and column descriptions to ensure compatibility with SQL standards and improve readability
added logging and exception handling for OAuth2 errors in CheckTokenEndpoint. java to improve error handling and logging for OAuth2 errors
updated multiple Java files for consistency and clarity to improve code maintainability and facilitate future updates
refactor IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use HttpEntity for setting identity zones to improve code clarity and ensure proper handling of
updated tooltip delay from 20000 to 10000 in ExtractionModelFrame. java and added new tooltip text in SQLConsole. java to improve user experience
add ` ` run _ single _ method _ disabled5'for ju5
replace generic exception handling with specific IOException handling to improve error clarity when communicating with external processes
[ hotfix ] [ core ] add experimental annotation for datastreamutils and datastreamutils
updated StreamCepstrumSource. java file to improve code clarity and maintainability
added a check to prevent index out of bounds in the List class to ensure that the index does not exceed the available items in the list
replaced instances of ` OrExpression ` with ` Parenthesis ` in ` CloneHelperTest. java ` to ensure proper handling of parentheses in expression
added confirmation parameter to the DebugPaste class to enhance user experience by allowing confirmation before executing the debug paste command
use ` orElseThrow ( ) ` instead of ` get ( ) `.
# 5245 this fix be not only a nice way of implement r41554 , but it be also necessary to fix a bug which that that changeset introduce
replaced ` Arg ` class with ` GoBinaryDescriptionArg ` and updated related method signatures to improve code clarity and maintainability by using immut
added a check for the existence of the " application. env " file in Jooby. java to ensure proper handling of application environment configuration
updated ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduced ` SecondDummyRetryListener ` class
fix ec meter registry ( # 498 )
refactor Contribution class to use final fields for email and author to improve immutability and maintainability of the code
refactor string appending logic in JUnitFormatter. java to use a do - while loop for better readability to improve code clarity and maintainability while ens
replace direct assignment of elements with a conditional assignment based on the type of the tmp variable to ensure elements are created only when it is not a
updated exception messages in StaxEventItemReader and added URL validation in StaxEventItemReaderTests to improve clarity of error messages and ensure
* testmultichatorender. testmultichatorender ( ) now work for full loop.
added null check for currentProfile in DelegatedAuthenticationClientLogoutAction. java to prevent potential NullPointerException when retrieving the current client
replaced target. addNamespaceDeclaration with newElement. addNamespaceDeclaration to streamline namespace declaration handling
added BigInteger instances for p, q, and g in KeyStoreManager. java to enhance security by supporting additional cryptographic algorithms
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape. java ` and ` Mesh
activiti - 4981 : field ` ` engineversion ' ' be sync between memory and db ( # 4497 ) ( # 4516 )
updated property names for velocityEngine in SpecificCompiler. java to improve clarity and consistency in property naming
added verification checks for current and attached threads in CEntryPointSnippets. java and VMThreads. java to improve thread management and prevent unint
refactor GenericUDFMapValues to handle null map cases and add a new test class TestGenericUDFMapValues to improve robustness of
updated test class name from " interceptors " to " handlerInterceptors " to clarify the purpose of the test
add config option to disable oil spring at the bottom of large lakes.
added logging for cleaning files in ImportContext and updated file existence checks in JobQueue and ImporterIntegrationTest to improve error handling and ensure files
use getstring ( ) instead of getstring ( ) in memoryrealm. java
removed duplicate import statements in CRLDistributionPointRevocationCheckerTests. java to streamline code and improve readability
updated constants in ZipConstants. java and added import statement in ZipEntry. java to improve clarity and functionality of the ZipEntry class
refactor ` newFileSystem ` methods to improve file validation and error handling to enhance robustness of file handling and provide clearer error messages
replaced ` Box. createHorizontalStrut ` with ` Box. createHorizontalGlue ` in ` IfControllerPanel. java ` to improve
refactor connection creation in FailoverUpdateURIsTest. java to improve code clarity and maintainability
added @ SerializedName annotations to ServiceOsSpecific. java to ensure proper serialization of ServiceOsSpecific objects
add a method to delete a database entry from the database to ensure that the database entry is deleted only if it's successful
updated multiple Java files for consistency to enhance code maintainability and readability across the project
fix an off - by - one error in the last commit.
don't start the admin console if there be an error
replaced the implementation of unregisterHandlers ( ) with direct access to binaryConsumer and textConsumer to streamline the code by eliminating unnecessary method calls
added configuration properties for device ID transformation method, enable ID table, enable _ id _ table, and enable _ id _ table _ log _
reduced the number of documents per type to 100 and updated the solr configuration while increasing the time allowed for queries to optimize test performance and allow for delayed response handling in the ExitableDirectoryReaderTest
updated the condition for checking the validity of ` mockTsp ` in ` TestSignatureInfo. java ` to ensure that the ` mockT
replaced instances of ` ScriptBuilder. data ( ) ` with ` ScriptBuilder. createP2PKHOutputScript ( key1 ) `
updated the expression to include " / schema / types / fieldType " to enhance functionality to support additional schema types
added a null completer check in the Completers class and created a new OptionCompleterTest class to improve completer handling and ensure compl
refactor object listing logic in S3Utils. java to improve readability and maintainability of the code
changed the data type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to accommodate larger data types
refactor file upload logic into a separate method for better code organization to improve code readability and maintainability by encapsulating file upload logic
updated the visibility of the reply button in TweetFragment. java to improve user interface responsiveness by adjusting visibility of the reply button
updated the expected timestamp format in AccessLogSupportTest. java to include the expected timestamp for better debugging and monitoring
fix for http : / / issues. apache. org / activemq / browse / amq - 388
removed null check for subscribers and simplified the check for the size of subscribers to streamline subscriber handling and improve code clarity
added a check for null marshaller in AbstractSamlObjectBuilder and removed unused imports in AbstractSaml10ResponseView to improve error handling and
replaced ` printStackTrace ( ) ` with ` LogUtil. warn ( t ) ` in ` DataBrowser. java ` to improve error handling by
added a condition to check if the asset directory is not in dev mode and created tests for static assets to ensure proper handling of static assets in
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend
updated the default format string from " value - tag - index " to " value - index " to ensure consistency in naming conventions
updated GraphHopper instantiation and modified hint settings in MainActivity. java to improve code clarity and maintain consistent hint settings
updated wait time from 30 seconds to 60 seconds in BesuNodeRunner. java and changed default value from false to true in multiple files
rename ` DuclsSandboxTest ` to ` SandboxTest ` and update references accordingly to improve clarity and consistency in test naming
camel - 16400 : camel - cxf - don't log warn when fail to process incoming cxf message.
changed the visibility of the forwardPropagateTree method from package - private to public to allow access to the method from other packages
updated SQL query in JDBCExample. java to remove unnecessary parentheses to streamline the query for better readability and maintainability
add warning for miss project expression in profile activation
refactor Style class to improve code readability and maintainability
added functionality to handle back navigation in ShareActivity to enhance user experience by allowing users to interact with the back navigation feature
added a conditional check to skip processing for deprecated fields in Json. java to improve code robustness by avoiding unnecessary processing for deprecated fields
added animation listeners for floating compose animations in the LauncherFragment to enhance user experience by providing smoother transitions when floating compose is enabled
refactor method call syntax in Utils. java for consistency to improve code readability and maintainability
added a Progressable parameter to the createSequenceWriter method across multiple classes to enable tracking of progress during sequence writing operations
[ hotfix ] fix typo in sourcecoordinatorprovider
remove the contribution from the panelByContribution list and update panel ordering accordingly to ensure the panel maintains the correct order of contributions
rename ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and update references accordingly to improve clarity and consistency in naming conventions
added a check to set dPath to the user's directory if it is empty to ensure that the application uses the user's directory
updated sample rate handling in DefaultAudioSink. java to ensure correct maximum supported channel count for passthrough v29
log4j2 - 1349 mapfilter. filter ( mapmessage ) should return onmatch instead of onmatch.
updated VerificationInOrderWithCallsTest. java file to improve test coverage and reliability
updated the parameter from ` axis. z ` to ` axis. x ` in the ` setFromAxis ` method to ensure the correct axis is
updated the constant value for COLLECTION _ DELIM from " colelction. delim " to " collection. delim " to reflect the
add test to ensure that the listener be connect at the start of the server.
refactor type handling logic in DocRenderer. java and add new test cases in PHPCCDocumentationTest. java to improve code clarity and ensure proper
replaced calls to SystemProperties. getBoolean ( SUPPORT _ ONE _ HANDED _ MODE, false ) with mIsOneHandedModeSupported to
added an override for onDetachedFromWindow in AppsCustomizePagedView. java and modified the hardware layer creation in createHardwareLayer (
added a dictionary parameter to the MorfologikAnalyzer and MorfologikFilter constructors to allow users to specify a dictionary for
removed redundant count increment and added an exception flag to streamline exception handling logic
removed " debug " from the initialization of the project message in GradleBuildService. java to streamline the initialization process by eliminating unnecessary debug
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for ` preventedByLocking ` and ` preventedByMVCC ` to improve
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability
increased the timeout duration for the zipkin server from 5 seconds to 10 seconds to allow more time for the server to start
deviantart ripper now accept username and password
replaced the ` KNOWN _ GOOGLE _ SIGNATURES ` array with ` GOOGLE _ PLATFORM _ KEY ` and refactored the
replaced the method ` SolutionBusiness ` with ` createSolutionBusiness ` in ` ImportDirSolveAllTurtleTest. java ` to ensure
added a method to notify window state changes in WWindowPeer. java to improve event handling for window state changes
added functionality to set the email description in EntityGroupKeyContentFormatter and TestEntityGroupKeyEmailContentFormatter to ensure that the email description is
replace ` remove ( sel ) ` with ` data. remove ( sel ) ` to ensure the correct data is returned
updated the method for retrieving the ISO3 language in Locale. java and added a test for it in LocaleTest. java to ensure the method
replaced direct instantiation of ChangeLogParser with a factory method to improve code readability and maintainability by encapsulating the parsing logic
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when screen pinning is active
added functionality to handle cases where no chart data is available to improve user experience by providing clearer text when no chart data is available
added synchronized block to check if a response has been sent in Http1xServerResponse and Http2ServerResponseImpl to ensure thread safety when
( chore ) camel - netty - http - client : don't wrap chunkedinput in a channelpipeline
added ` ` : scheme'to header limits in ` Http2TestBase ` and updated test cases accordingly
fixed - rlocalcachedmap. keySet ( ) and rlocalcachedmap. values ( ) and rlocalcachedmap. entryset (
camel - 15836 : camel - jpa - allow to configure jpa component at runtime
change the value of jumpSpeed from fallSpeed to jumpSpeed in PhysicsCharacter. java to ensure that the jumpSpeed variable reflects the
added a condition to check if reparsedFunction is null in the condition to ensure that the parser correctly handles cases where reparsedFunction is not
refactor BitstampPusherService to improve logging and order book handling to enhance code clarity and maintainability by using more descriptive variable names
added two deprecated methods ` getOldUploadSegmentHttpURI ` and ` getOldUploadSegmentHttpsURI ` in ` FileUploadDownloadClient. java `
updated the method to retrieve the tracking object based on the filter to ensure the tracking object retrieves based on the specified filter
add more juel test case a a result of this conversation : http : / / www . nabble . com / how - do - i - get - a - content - based - router - configured - in - xml - with - activemq -- tp15339501s22882p16063142 . html
added a call to boundToRange to the alpha value in RecentsView. java to ensure the alpha value is bound to the appropriate range
updated the formatting of the " Import - Package " attribute in ManifestReversion. java to improve code readability and maintain consistency in formatting
refactor DataSyncConfiguration class to improve code readability and maintainability
added initialization of JavaSnippetRepository in JavaLanguageServer. java to ensure proper handling of Java snippets in the server
added a loop to update sums based on the number of timeBuckets to ensure accurate computation of sums based on the number of time buckets
[ java ] use chromedriver. storage. googleapis. com / index. html instead of code. google. com / p / chromedriver /
camel - 15836 : camel - pgevent should use pgjdbc prepared statement to avoid connection leak
updated import statements from sun. syndication. synd to org. rometools. rome. feed. SyndFeedInput
added handling for " Content - Length " header in TransferCompletionHandler. java and modified NettyTransferAdapter initialization in NettyAsyncHttpProvider. java
refactor Dialog class implementation to improve code readability and maintainability
removed the constructor from EnhancedRuntimeException to streamline the class by eliminating unnecessary parameters
fix intermittent failure in socketappendertest
( chore ) camel - aws2 - dsl : remove unused import
updated method signatures for ` compareUnsigned ` and ` compareFallback ` in ` ByteArray. java ` to ensure compatibility with JDK 8 and improve performance
added a method to disable the input proxy during touch events in RecentsAnimationWrapper. java to improve touch event handling and prevent premature input
camel - 6770 : remove @ ignore from restletdomainservicetest due to camel - 6770
removed parameter ` currentIdx ` from ` resizeAndRehashIfNeeded ` method to simplify method signature and improve code clarity
move modulepath module from com. hazelcast. tests to com. hazelcast. test. modulepath
added ` getSourceDirs ( ) ` method to ` JavaLanguageServer ` and ` JavaServerConfiguration ` classes to enhance clarity of compiler instance creation
replaced the open web menu item with a mute hashtags menu item in TweetPager. java to streamline the user interface by eliminating
ticket ticket ticket ticket ticket ticket ticket ticket ticket
use math. max ( 0, pos. getblocky ( ) ) instead of getblocky ( ) + 2.
added PathNotExistException handling in selfCheckDataTypes method to improve error handling for non - existent measurements
updated formatting in JavaCompiler. java to improve code readability and maintainability
[ hotfix ] [ stream ] remove mailboxexecutor from abstractstreamoperatorfactory
hbase - 25801 fix authorization for set table state in meta
updated mapping method from ` meter - > meter. getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilter
fix issue with junit 4 test runner
kieserwatcher : use lasttimedata instead of remoteitems for delete operation
updated the calculation for allAppsCellWidthPx to accommodate additional padding to improve layout responsiveness for better user experience
[ hotfix ] [ core ] add log level to core option
replaced direct calls to ` doc ( ) ` with ` this. doc ( ) ` in ` BooleanScorer2. java ` to improve
added a call to writer. forceMerge ( 1 ) in TestMultiPhraseEnum. java to optimize the merging process for improved performance
changed the return type of the ` close ( ) ` method from ` Connection ` to ` void ` across multiple classes to allow for more flexible
refactor GetLocations class to improve code readability and maintainability
removed unnecessary printstacktrace call and streamlined exception handling in SchemaValidatorTask. java to streamline error handling and improve code readability
modified the catch block to ignore IOException instead of rethrowing it to improve error handling by ignoring unchecked exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features
ruby flavor : fix ruby syntax error
changed log level from warning to debug in DerbyDatabase. java and added null checks for username and password in BaseLiquibaseTask.
remove the usecaches option from the nio2endpoint
updated the ` CasGeoLocationConfiguration ` constructor to accept ` CasConfigurationProperties ` and refactored the ` readCountryDatabase `
update test case for instructorfeedbackresultspageuitest
updated ` useEncodedQualifierListOptimization ` method to include ` Scan ` parameter to ensure correct handling of encoded qualifier list optimization based on scan
removed ` public ` access modifier from several methods in ` ApprovalStore ` and ` ApprovalControllerService ` to allow access to these methods
added a flag to track if the download is started to prevent unintended downloads to improve user experience by preventing unintended downloads
replaced the method ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added a new method ` get
updated project version from 1.0. 11 to 1.0. 13 and corrected a typo in JFreeChartResources. java to ensure compatibility with the latest
replaced ` yield ( ) ` with ` Thread. yield ( ) ` in ` SyncThread. java ` to ensure consistent yield behavior across threads
refactor GsonBuilder class structure to improve maintainability and readability of the code
added null check for centerGeo before adding it to circleCenters to prevent potential NullPointerExceptions when centerGeo is null
remove -- java. espressohome from espresso. properties.
fix typo find by codespell on fossies. org
refactor DeleteSessionAction class to use a final class for better immutability to enhance code clarity and maintainability by using a consistent naming convention
renamed ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to improve clarity and consistency in exception naming
updated variable initialization and modified document set initialization in JoinQParserPlugin, SolrIndexSearcher, and TestJoin classes to improve code clarity and ensure
added the file parameter to the triggerMediaScan method call to enhance functionality by allowing media scan triggering
simplified the logic for posting test results in TestRunning. java to improve code readability and maintainability by reducing complexity
added functionality to retrieve custom G - code settings from the UI to enhance user experience by allowing access to custom G - code settings
updated import statements and changed output stream handling in AdditionalJaxbMappingProducerImpl. java to ensure proper handling of character encoding in output streams
refactor JsonElement class for improved readability to enhance maintainability and facilitate future updates
added imports for SolrTestCaseJ4 and modified exception handling in TestBadConfig. java to improve test reliability by ignoring exceptions related to system
added a method to remove fragments and action bar in GpsMainActivity to ensure proper cleanup of fragments and action bar in the UI
added " NEWLINE _ TOKEN " to the list of spanish tokens in TokenizerAnnotatorITest. java to ensure correct handling of whitespace in
replaced ` Range. asByteRange ( ) ` with ` Range. Byte ` in ` RemoteMediaHandler ` and ` RemoteRawHandler `
updated gcode file path and improved debugging output in VisualizerCanvas and GcodeParseView classes to enhance code clarity and ensure accurate rendering of
added new versions " 8.4. 0 - cfs " and " 8.4. 0 - nocfs " to the TestBackwardsCompatibility class
fix typo in assertion _ sync _ with _ instanceofassertfactories _ test
added a check to close the exchange client if the query execution is in a completed state to ensure proper resource management and prevent potential memory leaks
add a test to ensure integrity check don't refer to a file
removed unused import and added a new field for shardToClient in ChaosMonkey. java to streamline code by eliminating unused
fix npe in configurationactivator
added a check for the presence of subFolders in the NestedRepositoryTreePanel to ensure that the item is only added when there are no sub
allow extension type to be within - 128 to 127
pdfbox - 4892 : don't swallow exception
rename ` deleteOnShutdown ` to ` pushOnShutdown ` and add getter and setter methods for ` pushOnShutdown ` to improve clarity and
added trigger callback handling and error logging in ReactiveStateMachineExecutor. java to improve error handling and provide better context for trigger errors
added a new test method ` whenMultiplePythonExecutablesOnPathFirstIsUsed ` in ` BuckConfigTest. java ` to
added a default button to the root pane in InitialAccountRegistrationFrame. java to enhance user experience by allowing a custom signin button
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf
updated error logging to include the exception as a parameter to improve error reporting by providing more context about the error being logged
move fieldaccessibilitycallback and methodaccessibilitycallback to axonframework. util package
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created ` OidcId
removed the private ` center ` field from ` Circle `, ` Ellipse `, ` Polygon `, and ` Rectangle ` classes to stream
removed redundant null check for pcollection in RegisterAndProcessBundleOperation. java to simplify conditional logic for better readability
refactor SslContextFactory to improve code readability to enhance maintainability and facilitate future modifications
removed @ Ignore annotation and updated test assertions to use defaultMaxExpectations ( ) and maxLogEntries ( ) instead of 5000 to streamline test
updated return value from " access _ confirmation " to " access _ confirmation _ error " to reflect the correct error state for access confirmation
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 467 ( #
added a boolean parameter ` copyRowHeight ` and modified the ` shiftRows ` method to include its functionality to enhance row shift functionality by allowing
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods with ` setRolloverPressedIcon ` and ` setRolloverPressedIcon `
refactored grid translation handling in TaskViewUtils and TaskViewSimulator to improve code clarity and maintainability by centralizing grid translation logic
refactor Assertions class to improve code readability to enhance maintainability and facilitate future development
added null check for currentDateTimeFunction in multiple database classes to prevent potential NullPointerExceptions when accessing the current date function
added a method ` anonymousPath ` to the ` IOUtils ` class and updated ` Log4jUtils ` and ` TestIOUtils ` to
added a new parameter ` remainingTimeMs ` and ` isGroupLimit ` to the ` call ` method in ` DigitalWellBeingToast ` and
[ flink - 3441 ] [ table - planner - blink ] increase timeout when wait for meta location.
updated LineNumberTagAggregator and TestDominance classes to improve code clarity and maintainability
use stateconverterutil. defaultconversion ( state, typeclass ) instead of null.
updated BidirectionalOneToOneNPlusOneTest. java to include integrator provider and added a new test for fetching posts and details projection to
added a call to removeExtraEmptyScreen ( ) in LauncherModel. java and modified startSearchPageIndex initialization in LauncherModel. java to
updated HashMap initialization to include the size of baseDerivedRefs and simplified HashSet initialization to optimize performance by avoiding unnecessary additions to baseDerivedRefs
updated string formatting in GoogleLineChart and GooglePieChart classes to use double quotes instead of single quotes to ensure consistent formatting across chart components
updated the calculation of waitForBatches in the SendingAccountor class to ensure the correct number of wait batches and improve error handling
added a ` position ` field and a ` goto ` option to the ` WALPrettyPrinter ` class to track the position of a cell
updated the port from 1 to 0 in the NettyTransceiver constructor to allow for more flexibility in connection handling
refactor ` SimpleReport ` to sort log events before generating a report to improve event ordering and ensure consistent report generation
added a new test method ` getCsvLine _ DescriptionContainsDoubleQuote _ ReturnsCSVLineWithEscapedQuote ` in ` CSVFileLoggerTest
add coref. doscore and coref. useconstituencytree to the benchmark
don't send iq message if jids be not remote
removed the @ JniImpl annotation from VM. java to streamline code by eliminating unnecessary annotations
updated configuration settings in Fetcher2. java to use Protocol. CHECK _ BLOCKING and Protocol. CHECK _ ROBOTS to improve
added a null check for video HDR format in FFMpegVideo. java and modified various output statements in MediaInfoParser. java to
updated test cases to reflect changes from " other _ package " and " other _ package2 " to ensure the test reflects the correct package
updated diameter calculation logic in WorldBorder. java and added unit tests in WorldBorderIntegrationTest. java to improve diameter handling and ensure
hbase - 25801 : hmaster should check if master can host user region. addendum
ggb - 2852 : remove caller from web ui if login event be successful
refactor markDataResourceOnline method to use generateInstanceConfigs for instance configurations to improve clarity and maintainability of instance configuration handling
changed the visibility of the FieldAttributes class from package - private to public to allow access to FieldAttributes from other packages
add unit test to verify that maven project contain a reference
removed null checks for protoGetSwitches and protoHistory in PropertyMap. java to simplify the code logic by eliminating unnecessary checks
refactor DoorbirdInfo, ControllerConfiguration, and DoorbirdInfo to use a stream - based approach for managing relays to improve flexibility
replaced ` sessionFactory. close ( ) ` with ` session. close ( ) ` to ensure proper resource management and prevent potential memory leaks
removed conditional check for refresh token in OidcConsentApprovalViewResolver. java to simplify the condition for refresh token generation
removed debug print statement from Http2SolrClient. java to streamline the code by eliminating unnecessary logging
replaced the propagation extractor method with a NoopGetter enum to improve code readability and maintainability by using a common getter implementation
[ hotfix ] fix checkstyle violation in conditionalonenabledresourcechain
added a condition to check if the treeRoot has a non - empty child to ensure that the tree root has a valid number of child elements
replaced the method ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter. java ` to
replaced references to ` Log. p ` with ` Log. p ` for better clarity and functionality to improve code readability and maintainability by using
replaced instances of " h : mm a " with " skeleton " in ShadowICU. java and added a test for the best date picker
removed the dependency on KeyguardManager in TouchInteractionService. java to simplify the logic for checking device lock status
fix npe in case of cloud. disk. offering. id be null
refactor UtowBodyHandler to use AsynchronousFileChannel instead of FileChannel to improve performance by avoiding unnecessary file operations
removed unnecessary try - catch blocks in SigInt. java and SigIntTest. java to streamline code and improve readability
ggb - 1964 : fix text bounding box resize bug
change return value from - 1 to 0 in Asset. java to ensure correct rendering behavior
refactor compute benchmark to use a map function instead of lambda expressions
added a refresh listener to the UploadListFragment to ensure the UI reflects the updated state of the upload list
change ` ` file'' to ` ` path'' in ` bibdatabasecontext `
replaced instances of ` ParticleEmitter. items [ i ] ` with ` emitters. get ( i ) ` in ` ParticleEffect. java
refactor tomcat to use findservices ( ) instead of getservices ( ) to improve code readability and maintainability
corrected the spelling of " desired file " in multiple files to ensure consistency and accuracy in error reporting
added a check to return early if playback state is not PLAYING to improve performance by avoiding unnecessary processing when playback is in paused state
replaced ` findByPK ` with ` findById ` in ` DeleteServiceTest. java ` to simplify the retrieval of ` ServiceComponentDesiredStateEntity
refactor inner class detection logic in Java2TypeScriptTranslator and add a new test for InnerClassFieldClash in StructuralTests to improve
added support for logging and follow redirect filters in Docker client configuration to enhance flexibility in managing Docker client profiles
replaced direct calls to displayChanged ( ) with awtUnlock ( ) in XToolkit. java to ensure thread safety during display changes
hhh - 10183 : fix test for sql server2008
added a call to revert ( ) in OPCPackage. java and wrapped the verifyZipHeader method in a try - finally block to ensure
changed the visibility of the storeClassFile method from private to public to allow access to the method from other classes
added a new test class ` TestSortedSetDocValues ` and modified the handling of ` NO _ MORE _ ORDS ` in ` Singleton
updated error messages in CGIHandler. java and added a new JavaVMCallbackHandler class in JavaVM. java to improve error reporting and ensure
added additional condition to check for newline characters in LineReaderImpl. java to ensure proper handling of newline characters in the input string
replaced List < String > with Set < String > for hash codes and hash codes to improve performance by using a more efficient data structure
added a check to return early if the vertex count is zero to optimize performance by avoiding unnecessary processing when no vertex is available
added tests for verifying invocations and error handling in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest
replaced ` FileUtil. createData ( root, menuPath ). delete ( ) ` with ` FileUtil. createFolder ( root, menuPath
remove unused import to fix compilation error
refactor JsonObject class to improve code readability and maintainability
updated condition checks in SelectChannelEndPoint. java and HttpConnection. java to improve clarity and correctness of idle time validation logic
fix farmland. cansustainplant ( ) call incorrectly.
added functionality to create and validate primary key retrieval in QueryDatabaseMetaDataIT. java to ensure correct retrieval of primary keys and improve test coverage for
updated ` HttpCookie. java ` to use ` Locale. US ` for date formatting and added a new class B6791927.
removed multiple redundant calls to db. close ( ) in DbHelper. java to streamline the code by eliminating redundancy
increase timeout in batchmessagelistenerintegrationtests
add trace phase to the economy allocation stage
fix for save menu item in the code area
updated ObjectMapper initialization to use a static block to ensure consistent line endings across different operating systems
replace windows path with backslashes for paths in NativeEnvironmentRepository. java to ensure correct handling of backslashes in paths
refactored multiple test classes to use a single Application instance instead of multiple instances to improve code clarity and maintainability by reducing redundancy
[ java ] remove dead code in recordinglog. validateexistinglog ( )
fix flakey integration test ( # 2496 )
remove unused code in testfuzzoptimizations. testfuzzoptimizations
added a private boolean variable ` reverseImage ` and removed its usage from shared preferences to streamline the code by eliminating unnecessary shared preferences
refactor code for consistency and clarity to improve readability and maintainability of the code
[ dsen ] fix mdm test failure
updated JUnit 4 annotations from ` @ Before ` to ` @ BeforeEach ` in ` AuthenticationSuccessListenerTests. java ` to ensure compatibility with
mondrian : fix for http : / / code. google. com / p / mybatis / issues / detail? id =
refactor TypeUtil class for improved readability to enhance maintainability and facilitate future updates
updated triggerTime variable to use LocalDateTime for better date handling to ensure accurate representation of the date created in the context
added a method to handle abstract method exceptions in MethodHandleResolver. java to improve error handling for method overriding in subclasses
( chore ) camel - core - optimize simple expression validation
removed early return statement for empty list in AbstractParser. java to streamline code by eliminating unnecessary checks
camel - 15836 : camel - jclouds should use iohelper to copy the inputstream to the output stream.
( chore ) camel - consul : remove @ ignore due to osgi bundle not release yet
added a check for default method access flags in Check. java and created a new test class CheckACC _ STRICTFlagOnDefault
[ java ] increase timeout for channel validation test.
added a new file ` FileExtensions. java ` with constants for source and header files to facilitate the handling of file extensions in the
replaced ` ThreadLocalDateFormat ` class with a custom ` ThreadLocal < DateFormat > ` implementation to streamline date handling by eliminating the need for a
removed deprecated options for FastTLABRefill and DeferThrSuspendLoopCount in VMDeprecatedOptions. java to streamline the configuration
added displayName property to Pac4jBaseClientProperties and updated related classes to support customizable display names in the client configuration
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling for early termination scenarios
updated formatting in TraceFunctionAroundWrapper. java to improve code readability and maintain consistency
updated connection handling in HttpBindServlet and added connection consumption logic in HttpSession to improve handling of connection states and enhance connection management
fix a nullpointerexception in the capability dispatcher when the parent be null.
removed KeyCrypterException from the catch block in WalletTool. java to simplify exception handling for better clarity
added @ Deprecated annotation to AsyncCompletionService and SubmitOrderedCompletionService classes to indicate that these classes are outdated and should not be used in new
bugfix : hyphenationtree. getphenation ( string, int, int ) don't return an empty hyphenation
added a sleep delay of 200 milliseconds in IQRegisterHandler. java to improve responsiveness during processing
move resource. getresource ( string ) to the correct package
updated the description of the PARAMETER _ NEEDS _ TO _ BE _ NAMED string in ParameterBinder. java for Java 8 + to ensure
set providersChanged to false in ConfigurationManager. java to ensure proper handling of configuration changes
added a method ` quoteIdentifierTokens ( TokenRewriteStream tokenRewriteStream ) ` to handle identifier tokens to ensure proper handling of escaped characters in
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
updated type casting for ` ClassLoader ` in ` SolrResourceLoader. java ` to improve type safety and eliminate unchecked cast warnings
updated boundary checks in Window. java to ensure proper handling of child views to prevent potential null pointer exceptions
added a null check for the appManifest before retrieving target SDK version to avoid potential NullPointerExceptions when accessing target SDK version
refactor ConfigurationMetadataGenerator and related classes for improved clarity and functionality to enhance code readability and maintainability by using more descriptive method names
added userName property and its getter / setter methods to HiveSemanticAnalyzerHookContext and HiveSemanticAnalyzerHookContextImpl to allow users to specify their own
added setter for transformer file, url, inputstream, and converter in the XsltBuilder class, and updated the XsltComponent to use
added HadoopShim support to ContainerRunnerImpl, TaskRunnerCallable, TaskExecutorTestHelpers, and TestFirstInFirstOutComparator to utilize
updated expectedFileSize calculation in ShadowAssetManagerTest and removed redundant variable assignments in ShadowDownloadManagerTest and ShadowContentObserverTest to streamline test
fix npe in coyoteadapter. logaccess ( )
fix throughputlogger so it don't wait a little long
updated CompilerConfigFileWarning and ConfigFileWarning to check for debug builds instead of checking for " - XX : + UnlockExperimentalVMOptions
refactor ` DefaultLogPublisher ` to use ` Map < String, MeterDetailStatisticsModel > ` instead of ` MeterStatisticsManager. statisticsOperation
refactor logback configuration file resolution to improve clarity and maintainability of logback configuration file handling
added @ NotNull annotation to several methods in CipherExecutor, CookieRetrievingCookieGenerator, and CookieValueManager classes to enforce non - null
replaced references to Escaper. BASH _ ESCAPER with Escaper. SHELL _ ESCAPER across multiple
refactor ` AbstractWaitStrategyTest ` and ` HttpWaitStrategyTest ` to use try - with - resources for better resource management to improve code
o o o o o o o o o o o o
updated formatting in RelativeDateFormatTests. java to improve code readability and maintainability
added a method to generate shield addresses in RpcApiService to enable the retrieval of shield addresses from the wallet
changed return type of readConsoleInput from byte array to String in JansiWinSysTerminal and JnaWinSysTerminal classes to improve
updated regex patterns for presubmit and postsubmit in TestStabilityRule. java to improve the accuracy of platform detection
added a check to limit fragment limits for multi - valued fields in DefaultSolrHighlighter. java and created a corresponding test in HighlighterTest
modified the ` tryToLogin ` method to accept a ` Uri ` and a ` username ` and ` password ` parameters to enhance functionality by
refactor entity handling in ` HandlerSceneEntityDrownReq. java ` and ` PacketSceneEntityDrownRsp. java ` to improve entity
http : / / issues. apache. org / activemq / browse / amq - 407 - fix regression in camel - jms
removed the wrapCollection parameter from the update method call to simplify the return statement by eliminating unnecessary wrapping
added logging for illegal currency exceptions in BTCEAdapters. java to improve error handling and logging for invalid currency scenarios
fix for http : / / issues. apache. org / activemq / browse / amq - 2576
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
modified the ` startController ` method to accept a ` useTenantIsolation ` parameter and added multiple ` createBrokerTenant ` and ` createServer
replaced ` ImmutableMap. builder ( ) ` with ` ( Map < String, Object > ) response. getValue ( ) ` to simplify the return
added a check to ensure the size of attrs is greater than 4096 to prevent potential ArrayIndexOutOfBoundsException when accessing attributes
added abstract methods for retrieving project JDK name, type, and language level in IjProject and IjProjectConfig classes to enhance project configuration
updated the message from " Experimenal : Enable optimization to " Experimental : Enable optimization to avoid shuffling when bucket count is compatible
added unit tests for GrantedAuthorityEffectiveAclsResolver to validate behavior with user details
updated method resolution to use the resolved JavaLangObject instead of the ReflectionClassDeclaration to ensure compatibility with the current JavaLangObject implementation
added logic to limit the number of buttons used in XlibWrapper's pointer mapping to ensure that the button count does not exceed the maximum
updated import statement for assertEquals in RedefineInterfaceCall. java to ensure compatibility with the new package structure
added a new ` MessagePackFactory ` class with multiple constructors for creating ` MessagePack ` instances to facilitate the creation of ` Message
add is _ desert and is _ cave biome tag to biome tag. close # 388
rename ` present ( deltaTime ) ` to ` draw ( deltaTime ) ` across multiple screen classes to improve clarity and consistency in method naming
added handling for " GroupElement " and " ToggleButton " in ComponentGroup. java to ensure correct UIID is set based on horizontal orientation
remove redundant check for'identifier'in DOIServiceImpl. java to streamline code for better readability and maintainability
replace ` AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput. java ` and ` AndroidLocklessInput.
[ java ] remove commit position check from cluster service agent.
add test case for usersiteid and recordid class.
refactor HttpConverterRegistrar to handle URL parsing more robustly to improve robustness and error handling for invalid port formats
bug cs - 15836 : don't ignore hostid / poolid in listcapacity api response
replace ` openInput ( fileName, IOContext. DEFAULT ). close ( ) ` with ` fileLength ( fileName ) ` to ensure proper
refactor JavascriptCompiler to use a final class for better immutability to enhance code clarity and maintainability by using a more descriptive class name
removed synchronization from the store method in UISettings. java to streamline code by eliminating unnecessary synchronization
added a conditional check for native text input and changed the access level of fireDataChanged method from private to public to enhance user experience by allowing
add error message to spannerio retry on emulator
use diamond operator ( # 2 )
updated the type in ObjectInputStream from double [ ] to short [ ] and added a new CloneArray class for serialization to ensure correct handling of
replaced the method of retrieving nonce from ` idClaims. getClaim ` to ` idClaims. getStringClaim ` and added a warning
added a condition to check if the field is a relationship field in DCInputSet. java to ensure correct handling of relationship fields in the DC
added a new constant for the server slogan and updated the handling of the capabilities table to improve code clarity and maintainability by centralized
removed redundant null check for menuItem in DrawerActivity. java to streamline code for better readability and maintainability
replaced fail test with assumeNoException in SolrRequestParserTest. java to improve test reliability by ignoring tests that do not work due to
added a check to return early if there are no missing symbols to improve performance by avoiding unnecessary processing when there are no missing symbols
added new data entries for data 5 - 4 in StringHelperTest. java to enhance test coverage for data handling
added a warning log for empty data provider in Parameters. java to improve test reliability by preventing unnecessary processing of empty data providers
replace collections. empty _ list with collections. emptyList ( ) in camel - core
freeplane 1.8. 8 : update selection style to 1.4. 8
change the parameter name of setRestitution from'mass'to'restitution'to improve clarity by using a more descriptive variable name
added a new file ` AutoFtpActivity. java ` that implements ` IActionListener ` for FTP sending functionality to facilitate automated FTP
refactor logic for handling table or column types in BaseSemanticAnalyzer to improve readability and maintainability of the code
added getter and setter methods for ` imageX ` and ` imageY ` in ` ImageViewer `, ` OnOffSwitch `, ` Generic
added a new class RemoteExecutionEnabled with serialization and deserialization methods to enable and disable remote execution for improved functionality
pdfbox - 4892 : fix typo, a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` and added ` @ SuppressWarnings ( " S3551 " ) ` and ` @ Suppress
added assertion to check if shadow variables are not stale in the working score process
updated SEMIJOIN _ CONVERSION configuration from " hive. enable. semijoin. conversion " to " hive. optimize. semijoin
[ java ] ignore message content if it be an io. netty. buffer. instance be not an io. netty. buffer.
updated file removal logic and improved null handling in SynchronizeFolderOperation and FileDisplayActivity to enhance file synchronization functionality and provide feedback when the current
added assertions to check the presence and presence of a transaction hash in PollingTransactionReceiptProcessorTest. java to ensure that the transaction hash is
added a @ Deprecated annotation to ISchemaRegion. java and renamed the test method from testGetSchemaBlackList to testDeleteTimeseries in SchemaRegion
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid sampleMimeType is used to prevent runtime errors
replaced ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl. java ` and ` AbstractJdbc23PoolingDataSource.
updated @ AllArgsConstructor annotation to include an onConstructor for JSON creation to ensure proper handling of constructor arguments in JSON creation
added a check for SQLFeatureNotSupportedException in MetaDataClient. java to ensure that creating an index on a view is not supported
added a new Website class with getter and setter methods for the'name'and'uri'fields to enhance the functionality of the Website class
added a setup method to set the default locale in BSFormatterTest to ensure consistent formatting across different locales
added a check for several badly downloaded JAR files in CoreModManager. java to improve error handling for badly downloaded files
replaced ` containsString ` method with ` Matchers. equalToIgnoringCase ` for assertion in ` MultiPartParsingTest. java ` to improve readability
added logic to handle single and single variable expressions in SimpleExprGenerator to ensure correct handling of variable expressions in the analyzer
added a volatile boolean flag ` createdVertx ` and modified the conditional check to ensure that the vertx object is only created when it is
replaced ` null ` with ` node ` in ` writeAttributes ` method calls to streamline attribute handling by using ` node ` directly
updated log messages in SynchronizeFolderOperation. java and added null check for currentDir in FileDisplayActivity. java to improve logging clarity and
added an ` @ ApiProperty ( " true if the unread flag was ignored in the request ) to ensure that all entries return regardless of their
replaced the use of ` MavenTestingUtils. getTargetDir ( ). toURI ( ) ` with ` MavenPaths. targetDir ( ) `
added validation checks for URI and MetaData register DTOs in the RegisterServerConsumerExecutor and URISubscriberExecutor classes to enhance robustness by ensuring
updated the isPlaying condition in GwtMusic. java to ensure playback state is not paused when the sound is paused
added permission check for the admin area permission in MainCommand. java and defined a new permission for the admin area in Captions. java to
refactor query options handling in ServerRequestPlanVisitor. java and update test cases in QueryRunnerTest. java and QueryRunnerTestBase. java
replaced calls to ` toUri ( ). getPath ( ) ` with ` path. getFileName ( ). toString ( ) ` in multiple files to
updated assertions for attribute values to include a mix of emoji and text to improve accuracy of attribute value assertions
replaced the native method ` NMTWaitForDataMerge ` with ` NMTOverflowHashBucket ` and added a new method ` NMT
[ hotfix ] [ runtime ] migrate EitherSerializerSnapshot to JavaEitherSerializerSnapshot
updated the default value of DEFAULT _ NDOTS and DEFAULT _ NDOTS _ RESOLV _ OPTION in AddressResolverOptions. java
added a call to ` super. __ associate ` in ` RequestRockerTemplate ` and created a corresponding test in ` RequestRockerTemplate
pdfbox - 4071 : avoid npe, a suggest by valerybokov
updated references from " liquibase / parser / core / xml / dbchangelog - ext. xsd " to " liquibase / org /
move commonmimetypelocator to test package
changed the default value of ` RepositoryVersionState ` from ` INIT ` to ` NOT _ REQUIRED ` in multiple files to align with the new
updated the comparison logic in GenerateChangeLogTask. java to include additional schema comparisons to enhance the accuracy of the diff generation process
updated the import statement for the Test class from ` org. junit. Test ` to ` org. testng. annotations. Test ` to
added a new file ` ProgressiveJPEGTest. java ` to implement a demonstration of the progressive JPEG functionality
replaced setAlphaTest and setAlphaFallOff with setAlphaDiscardThreshold and modified mat name handling in MaterialLoader. java to improve clarity and
improve error message for unsupported native - image building on window
added a null check before setting text size to avoid potential NullPointerException when text is empty
updated the way the byte value is read in the Data class to ensure proper handling of larger data values in the application
made the PushUtils class final and added a private constructor to ensure immutability of the PushUtils class
simplify length calculation by directly using curConfig's length to improve code readability and maintainability
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen. java to simplify code and improve readability
updated the load method for the " datafiles / presets " file to include a conditional expression to improve flexibility in loading presets from different
added a condition to check if the app is in an app before announceing accessibility to ensure proper handling of accessibility for non - app
updated the instantiation of the homeNode to use RefreshTask instead of MyKey to streamline the node creation process by using RefreshTask instead of
pmd : add ant task to target jdk 1.5
use mockito instead of powermock
added PrintStream and errorStream initialization in TestSchemaToolCatalogOps. java to enable logging of errors during schema tool execution
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class and updated method signatures accordingly to enhance security by
updated MongoQueryMethod constructor to include RepositoryMetadata as a parameter to enhance query method functionality by incorporating RepositoryMetadata
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 46
removed duplicate import statements in MetaDataEndpointImpl. java to streamline code by eliminating redundancy
hive - 15836 : fix deadlock in txnhandler ( sergey shelukhin via ashutosh chauhan
replaced ` xl ` with ` xAxis ` in ` BarChartActivity. java ` and adjusted offset calculations in ` LineChartActivity1. java
added methods to check if a character is a printable character in FsUtils. java to ensure only valid characters are processed
rename ` ` in'' method to ` ` using'for consistency
add process plugin configuration to the project's build process.
fix double division in proxy connection manager and servertrafficcounter
[ integration test ] fix integration test
replaced the return value of " STUB " with null in ModeledConnectionRecord. java and added remote host retrieval in AuthenticatedUser.
add admin button to community list page
replaced ` ThreadPoolExecutor ` with ` AtomicInteger ` for ` longCompactions ` and ` shortCompactions ` to track the number of compaction threads
updated the method to retrieve the resource package name to ensure the correct application context is used for wallpapers
updated method to include player visibility and added a new method to retrieve players based on plot visibility to improve user experience by allowing players to see plot
updated multiple Java files including AndroidManifest, ResName, ShadowMediaPlayer, ShadowActivity, and ShadowActivity to improve code organization and maintainability
modified test cases in MlibOpsTest. java to enhance test coverage for MlibOps functionality
replaced string literals for OperatingSystemImpl with a constant in JNIRegistrationManagementExt. java to improve code readability and maintainability
updated the attribute setting for referencedContainer in SchemeGenerator and added a test for expected properties in SchemeGeneratorTest to ensure correct handling of referenced references
removed redundant null checks for key and iv in UploadFileOperation. java to streamline code by eliminating unnecessary checks
added a Stability annotation for LOCAL and PLATFORM _ POSTSUBMIT in WorkProfileTest. java to ensure compatibility with local and postsubmit platforms
removed redundant check for bucket version in TezCompiler. java to streamline code by eliminating unnecessary checks
fix setcursorposition in gwttestwrapper ( # 5522 )
move lockfree bucket to their own layout
add nodist probe to print thread pool stats
updated maxBitrate retrieval to use userPreferences instead of a hardcoded value to ensure compatibility with user preferences for bitrate handling
refactor ZipkinHttpSpanExtractor to improve conditional logic for handling missing span IDs to enhance code readability and maintainability while ensuring proper handling of
show user payment account only for non - bsq swap
remove reflection for the ` withTypeIconRightAligned ` method in ` FlutterCompletionContributor. java ` to streamline the code by
added a call to set the project in the LauncherUtils class to ensure the correct project is set for the file system
updated JsBundle and JsBundleBuilder to include ProjectFilesystem as a parameter to enhance flexibility in specifying the root path for generated files
updated multiple Java files for consistency to improve code maintainability and readability
refactor MetricsDSLContext class for improved readability to enhance maintainability and facilitate future updates
refactor VersionBuckConfig to use ImmutableSet for better immutability to enhance immutability and maintainability of the VersionBuckConfig class
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve robustness by gracefully handling potential
change visibility of validateTypes method from static to public to allow access to the method from other classes
fix : update gapic - generator - java with mock service generation fix ( # 86 )
added SLF4J logging functionality to SimulationStatus. java to enhance debugging capabilities for simulation status handling
updated VERSION _ POSITION _ Y and VERSION _ FONT values in Splash. java to align version numbers with new design specifications
refactor notification addition to run on the UI thread to ensure notifications are executed on the UI thread for better UI responsiveness
updated ReturnsElementsOf. java to replace the mock's foo ( ) method with a new mock's foo ( ) method to enhance
corrected a typo in the error message for dropping non - string partition columns to improve clarity and accuracy of the error message
added a new test method ` testLineFileDocs ` in ` BaseStoredFieldsFormatTestCase. java ` to ensure that line file documents are
added a method to retrieve the version code in MainApp and updated FeatureItem initialization in FeatureList and WhatsNewActivity to improve version handling and
camel - 16400 : camel - core - optimize bean method invocation. thanks to daniel for the patch.
replaced ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest. java ` to ensure correct
added buffer ownership logic to ` IndexBufferObject ` and ` VertexBufferObjectWithVAO ` classes to ensure proper disposal of buffers
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password change through the login
fix javadoc for jerseyclientconfiguration
[ java ] remove reference to characterstreamreadingmessagesource and characterstreamwritingmessagehandler
replaced instances of ` s ` with ` o ` in ` InstanceOfPatternMatchTest. java ` and simplified return type in ` TypeUtils
added logic to adjust column count and row count in StringDict and Table classes to ensure proper handling of empty strings and improve data integrity
added deprecation annotations to Container class and implemented AutoCloseable interface in GenericContainer to indicate that these classes are outdated and should not be used in new
updated logging level from info to error in MediaInfo. java and modified Pms configuration initialization in RendererConfigurationTest. java to improve error handling
added schemapattern option to BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance configuration options for database connectors
pdfbox - 4892 : avoid npe if there be no tls session
refactor calculations for width and height in AndroidGraphics. java to improve clarity and correctness of bitmap creation logic
refactor Base64 class to improve code readability and maintainability
[ sulong ] add fallback value to sulong global container.
danielwagnerhall : ignoring test that fail on iphone and iphone
updated FlowBuilder and FlowJobBuilderTests files to improve code clarity and maintainability
replace ` ResName ` attribute with ` int resId ` in various classes to improve resource management by using numeric identifiers instead of name - based references
don't skip tl verification when docker can't start
camel - 15836 - camel - aws2 - elasticsearch - adapt to late change in camel - core
| | | | | | | | | | | | | | | | | | | | | | | | | |
added support for logging level configuration in LoggingFlags and LoggingOptions classes to allow users to specify log level for debugging purposes
added logging statements for package removal and app icon removal in multiple Java files to improve debugging and monitoring of app icon removal events
added ` allFilesOption ( ) ` method to ` FileActivity `, ` FileDisplayActivity `, and ` PreviewImageActivity ` classes
deprecate mutationoperationgroup # hasmatching and # hasmatching
updated the calculation of numPredictiveAppCols based on device type to ensure correct number of app columns for different screen orientations
added UTF - 8 character encoding support to the StringUtils class to ensure proper handling of character encoding in the application
added RequestMatchers class and corresponding test cases for matching requests to enhance functionality for matching requests in Spring Security
don't try to select input box if it's not applet
updated calculations for the knob height and width in the ProgressBar to ensure correct positioning of the knob after the specified height and width
fix json definition path for spark native query runner
made extra variables final in BruteArgumentMoverHandle. java and added a native method to permute arguments to enhance immutability and
added a condition to check if the handler state is invalidated in the gesture handling logic to ensure gesture handling only proceeds when the handler state
updated layout calculations to use constrained dimensions instead of largest size to improve layout handling for different screen orientations
added a condition to check if the URL path contains a " / robots. txt " file in HttpRobotRulesParser. java to ensure
add warning icon to netbeans gui
fix for ` ` continue'', ` ` close'', and ` ` return''
added null check for the variable'b'in UDFOPDivide. java and created a new test class TestUDFOP
refactor error handling and formatting in FlowJob and JobExecution classes to improve code readability and maintainability
replaced ` FilterProcessesUrl ` with ` AbstractAuthenticationProcessingFilter $ FilterProcessUrlRequestMatcher ` in ` LogoutBeanDefinitionParser ` to ensure
added onDestroy ( ) method to ShareActivity and ContributionsActivity to ensure proper resource cleanup during activity destruction
corrected variable name from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity. java ` to ensure consistency with the intended
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added a call to set the request timeout in the Rpc configuration to ensure proper handling of RPC requests based on the configuration
replaced error logging with debug logging and modified resource management in TsFileResourceManager and ResourceManagerTest to improve logging clarity and enhance resource management
added system properties setting for model source and system properties in MavenModuleLoader to ensure proper handling of system properties during model source loading
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to track readiness calls
added model handler registration for animatedtorch in the BlockAnimatedTorch class to enhance modularity and improve modularity
added null check before closing the writer to prevent potential NullPointerException when closing the writer
added new method ` getHiveOnTezConfFromDir ` in ` UtilsForTest ` to retrieve Hive configuration from a specified directory
added a new link for " Muting Users " in FeaturesActivity. java to provide users with a corresponding link
added a property to set the jdk. reflect. useDirectMethodHandle to false to ensure proper handling of direct method handles in the system
` `'''''''''' ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
[ flink - 197487 ] [ yarn ] [ yarn ] only add lib and plugins directory when necessary
updated method calls from ` getPronunciations ` to ` getWord ` in ` BuildTranscriptHMM. java ` and ` Tra
updated JSON string formatting in JsonUtilsTest. java to ensure accurate representation of JSON data in tests
added ` id ` parameter to ` TimeLineCursorAdapter `, ` TimelineArrayAdapter `, and ` Compose ` classes to include the
[ hotfix ] [ network ] log a warning when a reliable topic be lose.
don't throw an exception if no class be find to analyze
replaced the import of Key with PublicKey in KeyFetcher. java to ensure compatibility with the latest security standards
updated the ` isIncompatible ` variable in ` DLNAResource. java ` to ensure compatibility with different resource types
updated the ` createAccount ` method to use ` AccountCreateContract ` instead of ` Account ` to ensure compatibility with the new contract structure
pdfbox - 4892 : avoid npe, a suggest by valerybokov
fix for http : / / issues. apache. org / activemq / browse / amq - 2576 - fix dead - lock on dl
updated the default value of ` enableOffHeapFormat ` and modified the default star tree format version to ensure correct handling of star tree formats and
modify title handling in FeedUpdateService to ensure title does not exceed 2048 characters to prevent truncation of content that may exceed 2048 characters
updated JColorChooser and BasicColorChooserUI to utilize the preview panel from ColorChooserComponentFactory to improve flexibility and maintainability of the code
changed log level from info to debug in DefaultBuildExtensionScanner. java to reduce log verbosity during extension checking
added a null check for reusableBitmap before setting inBitmap to prevent potential NullPointerException when creating a Bitmap instance
added a new method ` getLayoutParams ( ) ` to the ` FakeView ` class to provide a way to retrieve layout parameters for the view
added a check to ensure a Cursor is already closed in DefaultCursor. java and created a test for it in CursorSimpleTest. java to
pdfbox - 4071 : don't create a page tree if there be no parent
added @ Ignore annotation to the JMSClientTest class to temporarily disable the test due to known issues
added a private field ` String ts ` with getter and setter methods in ` Message. java ` to provide access to the ` ts ` property
add a common exception model to the exception mapper
change visibility of abstractexecutor from package - private to public
remove ` ` weighting'', ` ` vehicle ', and ` ` edge _ based'hint from resource
updated import statements and class visibility from public to package - private in multiple test files to improve accessibility and encapsulation of test classes
added a method to set the CSRF attribute in the PluginServlet class to ensure the CSRF attribute is set for each request
fix lombok. launch. shadowclassloader and lombok. launch. shadowclassloader to be able to load shadow class.
[ jbrules - 4071 ] add support for ` ` numeric disable'' property in xls file
changed log level from info to debug for default value logging to reduce log verbosity for better debugging
added null checks for axes and buttons in Lwjgl3Controller. java and refactored controller management in Lwjgl3ControllerManager
updated import statements for ObjectFactory from ` cucumber. api. java ` to ` io. cucumber. core. backend. ObjectFactory ` to ensure compatibility
refactor savePortForward logic in PortForwardListActivity to improve code readability and maintainability
added functionality to manage the ` shouldSnapshotData ` property in the ` GlobalConfiguration ` class to allow users to control whether Liquibase snapshot
refactor file path handling in SyncedFolderObserver. java to improve readability and maintainability of the code
refactor LocationMarshaller to improve code readability to enhance maintainability and facilitate future updates
modified condition checks for touch events in StatusBarTouchController. java and adjusted swipe logic in OtherActivityInputConsumer. java to improve touch event
refactored the ` VectorReader ` interface and removed unused imports in multiple files to streamline code and improve maintainability
replaced import of ArgumentMatchers with Matchers in multiple test classes to ensure compatibility with the latest Mockito library structure
refactor PathSourcePath methods to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` to improve clarity and consistency in
updated method signatures to use ` RecordReaderFileConfig ` instead of ` RecordReader ` and added a default transform method to enhance flexibility by allowing
added @ WithArgumentExtractor annotation to ControllerMethodInvoker. java and updated instantiation logic in Param. java and Params. java to improve annotation handling
cloudstack - 7131 : fix secondary storage limit for project and domain
fix inventory effect not be able to shift item
remove cold _ reads _ to _ omit option from compaction strategy
added a call to stop the leech in ClientTest. java to ensure proper resource management during tests
[ issue # 1868 ] remove retry check from popmessageprocessor ( # 1868 )
refactor KeyboardAddonSettingsFragment. java to improve code organization and maintainability
added a JUnit Ignore annotation to the ShadowDateUtilsTest class to mark the test as ignored for a moment
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to improve clarity
added a call to setUpgradeRequest in UpgradeConnection and implemented a test for upgrade requests in ClientConnectTest to ensure proper handling of upgrade requests
added timeout handling in AndroidImplementation. java to ensure proper connection timeout configuration
refactor getUserAccessPermissions and getTeamAccessPermissions methods to return a list of RegistrantAccessPermission based on user and team permissions to improve
added a new test method ` testQuotedCastExpression ` to ` SelectTest. java ` to validate SQL parsing for quoted cast expressions
fix for test that fail on window.
added SLF4J logging and modified thread selection logic in FixedThreadExecutor. java to enhance logging capabilities and improve thread management
added null check for the " catalogname " field in AbstractChangeGenerator. java to prevent potential NullPointerException when checking for " catalogname "
replaced ` CasEventListener ` with ` InitializingBean ` and updated import statements across multiple configuration files to ensure compatibility with the latest CAS library
refactor animation end handling into a separate method ` endAnimation ` to improve code readability and maintainability by encapsulating animation end logic
added a close method to the DeflaterOutputStream class to ensure proper resource management and prevent memory leaks
added a new file ` gsp001 . java ` implementing system property retrieval using JVMTI to facilitate testing of JVMTI GetSystemProperty at the Agent _ OnLoad phase
polish ` ` don't annotate bean with @ abstract''
* cameranode, lightnode and camerode now have a name for the name of the camera.
refactor PopupNotificationPanel to use SwingUtilities. getWindowAncestor for better window management to improve code clarity and ensure proper disposal of the popup window
replaced instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` and updated method signatures accordingly to streamline
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` variable
changed the parameter type of the ` after ` method from ` int ` to ` long ` to ensure compatibility with larger time values
added ` OnBuild ` and ` ExecutionDriver ` fields with their respective getter and setter methods in ` ContainerConfig ` and ` Info ` classes
added conditional logic to set the icon based on whether the target is not RL to ensure correct positioning of the title command based on the target
added a boolean flag ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the instantiation of ` StopFilter ` to
updated EmailsTest and SystemErrorEmailReportTest to use a new InternetAddress instance to improve code clarity and maintainability by utilizing a
added a flag ` mTryShareAgain ` initialized to false in ` FileActivity. java ` to ensure proper handling of file sharing behavior
added support for specifying TTY version in JansiNativePty. java to enhance compatibility with CLibrary properties
refactor BandwidthProcessor to use bytesSize for bandwidth cost calculations to improve clarity and maintainability of bandwidth cost calculations
replaced direct assertions with Awaitility's await mechanism in Issue410Tests. java to improve test reliability by using Awaitility
[ ecotonetemplate ] fix checkstyle violation
[ beam - 8470 ] increase read timeout for kafka integration test
replaced ` allOf ` with ` is ( itemName ) ` in ` SearchResultMatcher. java ` to improve clarity and maintainability of the code
added SSL trust management for client and server certificates in OkHttp. java to enhance security by restricting access to specific SSL certificates
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and maintainability of long click functionality
added a new file ` HyperlinkFormula. java ` and modified ` StringPtg. java ` and ` StringPtg. java `
added nullable fields for stdout and stderr in ShellStep. java and updated Escaper's escapeAsBashString method to improve null
increase timeout to 2 second for asyncappendertest
refactor ` escapeDatabaseObject ` method to accept ` catalogName `, schemaName `, and ` objectName ` as parameters to enhance flexibility in escaping database
added a boolean flag ` inputChanged ` and modified input validation logic in ` MaterialRenameDialog. java ` to ensure the dialog reflects the
added a state change test in ShadowDisplayTest and implemented state change in ShadowDisplay to ensure correct behavior of display state in different Android SDK versions
add dispatcher. invokedirect ( string, object... ) for direct invocation
[ web ] fix ` ` ^ x'' and ` ` ^ y'' for gwt keycodes
fix pg _ catalog. pg _ depend dep for postgresql 9 +
added @ Nullable annotation to the message variable to indicate that the message variable should not be null
refactor getPathsFromResource method to use getRawPath ( ) instead of getPath ( ) to improve clarity and consistency in URI handling
added handling for Jenkins nodes in the CollectorServer to enable monitoring of Jenkins nodes in the application
refactor HeadersBeanDefinitionParser to use a new method for attribute resolution to improve code readability and maintainability by encapsulating attribute resolution logic
; review for the patch.
fix shutdown of nacos registry
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor status code handling in GoAwayGenerator, GoAwayBodyParser, and GoAwayParseTest classes to improve code clarity and maintainability by
refactored AuditEvent initialization and added logging for the " BadCredentials " type in AuditEventTests. java to improve test reliability and
added checks for FLOAT _ ROUNDING _ ERROR in Interpolation. java and changed return value from a to 0 in Interpolation. java to
fix forge / forge / forgeworldedit. java
refactor code to store the DX executable path in a variable before adding it to the builder to improve readability and maintainability of the code
added multiple instances of PointRangeQuery in TestPointQueries. java to ensure correctness of PointRangeQuery instances
;
added a condition to check if the download file name equals the file name in the ReceiveFileConversationComponent to ensure that the file name is only
stop return jedisconnectionexception at the last attempt of recursion ( # 1772 )
[ hotfix ] [ table - planner - blink ] set the chainingstrategy to always
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap to improve handling of path -
added benchmarks for ` QMapReadRandomKeyBenchmark `, ` QMapReadSequentialKeyBenchmark `, and ` QMapReadRandom
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld. java to initialize the G _ SCH _ B
added a check for empty fields and refactored identifier handling in GroovyEngine. java to improve handling of empty fields and enhance functionality for retrieving
fix for ggb - 195 : draw angle in dependent number
added new configuration options for TCP keep - alive in Hive to enhance connection management by allowing configurable TCP keep - alive settings
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to clarify the purpose of the method
# 564 - remove unused import and remove unneeded code
refactor RealtimeSegmentRelocator to use lambda expressions and simplify thread creation to improve code readability and maintainability
cloudstack - 7131 : don't try to start the vpc if it fail to create a vpc
updated interpolation logic in WindowTransformSwipeHandler. java and modified condition in FloatingIconView. java to ensure proper handling of progress values and improve
updated schema declarations in SecurityNamespaceHandler. java to ensure compatibility with Spring Security 4.0 schema declarations
refactor multiple fluent assertion classes to improve code organization to enhance maintainability and readability of the codebase
[ java ] make some field final in disruptorprovidermanager and disruptorprovider
added a new file ` TestConfigureUDF. java ` and modified ` ExprNodeGenericFuncEvaluator. java ` to include a test for
updated regex pattern matching in LogMessageWaitStrategy. java and added parameterized tests in LogMessageWaitStrategyTest. java to ensure consistent matching of
removed ` final ` logger ` declaration from logger calls in ` LOG. java ` to streamline logger initialization and improve code clarity
replaced instances of ` updatePurgedShardNodes ` and ` purge _ time ` with ` deletePurgedShards ` and ` purge _ time
added support for the new Java language version " 17 " and " 17 - preview " in the JavaLanguageModule to ensure compatibility with the latest
attempt to wait for compression job to finish in case of failure.
fix volatilereadnode . simplify to simplify only when lastlocationaccess be set .
added a method ` getSteps ( ) ` to ` SimpleJob ` and made the ` getStep ( ) ` method return an unmodifiable list to
removed unused ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpcApiUtil ` and ` TronJson
refactor currency pair handling in BitstampAdapters. java to improve code readability and maintainability
use base time unit for longtasktimer measurement
[ hotfix ] [ euphoria - flink - euphoria - te ] fix reducebykeytranslator
updated handling of ListPreference in HostEditorActivity to improve flexibility and maintainability of the code
rename ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update database version handling to improve clarity and consistency in database version handling
added a maximum tweet count limit in the query execution to limit the number of tweets processed for improved user experience
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest. java to improve test reliability by allowing more
fix : get persisted byte size for fully acked tail page
fix checkstyle issue in net / protocol / glowserver. java
added a ` grow ` method to ` DataIO ` class and refactored the resizing logic in ` DataIO. java ` to improve
removed import of java. io. DataOutputStream in GdxSetup. java to streamline code by eliminating unused imports
added a method ` getSubmittedFileName ( ) ` to retrieve themitted file name from the ` Part ` object to provide access to the file
added markReadForLoad ( ) method to LauncherFragment. java to enhance functionality by enabling read marking
updated the ` main ` method to handle ` ClassNotFoundException ` and modified the ` instrumentJar ` method to handle ` NegativeArraySizeException `
added a method to check for spill possiblity in HashAggTemplate to ensure that spill possiblity is validated before proceeding
changed the variable name from ` info. getDocStoreSegment ( ) ` to ` dsName ` for consistency to improve code readability and maintainability
added a constant for the default name ID format in SamlProfileSamlNameIdBuilder. java to ensure that the name ID format is
added error handling for password change in ChangePasswordPage to improve user experience by preventing unintended password changes
added a semicolon to the end of a block in Deadlock2. java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time
deleted the FontScalingTest. java file to remove unused code that is no longer needed
added validation for filter begin and end dates in RRD4jPersistenceService. java to ensure only valid dates are processed to avoid errors
added a check to return early if there are no vectors in GenericUDAFComputeStats. java to optimize performance by avoiding unnecessary computations
test : migrate executablereftest to junit 5
added null checks before setting view and glass pane in JLayer. java and created a new bug6994419. java file to
wiretap expression in the end of the end of the end.
changed the access modifier of the setAction method from public to protected to allow subclasses to access the action for better usability
added a new option validator for topn in PlannerSettings. java and implemented the matches method in PushLimitToTopN. java to
[ java ] remove redundant aeron directory name resolution from test.
fixed - rbatch. execute ( ) method don't call batch.
replaced ` ByteArrayOutputStream ` with ` FileOutputStream ` and refactored ` getConfVarURL ` method to utilize a temporary file for configuration variables
updated the method call to use criteria. getDevice ( ) instead of defaultDevice ( ) in BaseModelLoader. java to ensure the model is
updated ` onCreateOptionsMenu ` and ` onMenuItemSelected ` methods in ` SimulationViewer. java ` to ensure proper handling of menu item selection
refactor CertificateValidator class to improve code readability and maintainability
hawtio should use ` ` hawtio. dirname'' instead of ` ` hawtio''
added a condition to return SINGLE _ SPACE when comments are empty to ensure consistent handling of empty comments in the code
changed fields in Dictionary, UserDictionary, BinaryDictionary, ResourceBinaryDictionary, and WordsSQLiteConnection from non - volatile to volatile to ensure
added printStackTrace ( ) method to ContextHandler. java to improve error handling by avoiding stack trace printing
move customitemdroptest to test / integration / regression / customitemdroptest
added functionality to handle'ifNotExists'state in the DDLTask and DDLSemanticAnalyzer classes to improve handling of not - existing
fix for http : / / issues. apache. org / activemq / browse / amq - 2677
[ java ] remove redundant control request stream id from archive context.
updated spatial operator names and added support for spatial operators in WFS to improve clarity and functionality of spatial operator handling
added LuceneTestCase. AwaitsFix annotation to BasicDistributedZkTest. java to address issue related to SOLR - 2161
refactor preface matching logic in Http11InputBuffer. java to improve clarity and maintainability of the code
[ java ] set ` isIngressExclusive ` to false in ` AeronCluster. java ` to disable the ` isIngressExclusive `
hbase storage handler should allow set hbase. offheapcache. size and hbase. bucketcache. ioengine
added running record count tracking and updated context handling in JSONRecordReader to improve tracking of record execution and ensure accurate tracking of record counts
added logic to filter out year from merged items in CategorizationFragment. java to enhance filtering functionality for items with specific year formats
replaced instances of ` 0x00000000 ` with ` 0, ` Mode. CLEAR ` in multiple files to simplify color drawing by using a
added OpenGL version check in Mesh. java to ensure compatibility with OpenGL ES 2.0
added ActionContext import and set it to null in BackgroundProcess. java to ensure proper handling of ActionContext during invocation
modified the ` getUnescapedName ` method to include a ` prependDefaultDB ` parameter and adjusted related logic to improve handling of database names and
added a connection timeout configuration in TestConnections. java and made the count variable final in StubConnection. java to improve connection stability and ensure
branch from # # # # # # # # # # # # # # # # # # # # # # #
updated DEFAULT _ IDLE _ TIMEOUT and DEFAULT _ WRITE _ TIMEOUT from Duration. ZERO to 30 seconds and modified idle timeout handling in WebSocketChannel to
updated the method to retrieve shares by using the user ’ s platform account instead of the account directly to ensure compatibility with the new user account structure
updated Inet6Address. java to use generics and improved null handling for scope _ ifname to enhance type safety and prevent potential NullPointerExceptions
refactor button enabling and disabling logic in PlaybackControlView. java to improve clarity and functionality of button state management
updated the ` isPresent ` method to accept a ` long ` sessionID instead of a ` Session ` to improve clarity and functionality by using a more
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary. java ` to ensure
change the default value of UseExceptionProbability from true to ____ to ensure consistent usage of exception probability across the application
refactor newPlateColor assignment to handle different icon states to improve visual appearance based on the icon's presence and state
guacamole - 36 : remove unused dependency from mysqluser
updated aliases in Middle. java to include " centre " to enhance clarity and consistency in alias naming
added DirectUpload injection method to CommonsApplicationComponent and made DirectUpload class public in DirectUpload to facilitate dependency injection within the CommonsApplication
added space settings for left and right axes in BarChartActivity and adjusted legend position logic in BarLineChartBase to improve chart layout and ensure
added support for Java ABI and VERIFIED source ABI flavors in AndroidLibraryDescription and JavaLibraryDescription classes to enhance functionality by allowing
added operation event status type parameter to the OnlineHubService and changed the initialization of the services list in CompositeLogService to enhance functionality by allowing
added logging for annotations in DexAnnotation. java to improve debugging by providing visibility annotations for method parameters
( chore ) camel - jms : use @ setup and @ teardown instead of @ startbundle
refactor ProcessBuilder initialization to use a variable for classpath to improve readability and maintainability of the code
updated file path handling in PackageResourceLoader to ensure correct file separator is used for Android resources
[ flink - 3447 ] [ table - runtime ] fix compile error in dataset
added JUnit Ignore annotation to WorkProfileTest. java to temporarily disable the test due to a known issue
added escapePercent method to ShouldHaveMessage and updated error message handling in ShouldHaveMessage _ create _ Test to ensure proper formatting of error messages
fixed - jcache. geturi ( ) method throw npe
added check for activiti - taskalreadyclaimed exception to log.
reformatted the instantiation of ALPNClientConnectionFactory for improved readability to enhance code clarity and maintainability
use base value instead of max value in entitypropertiesspacket.
[ smarthome ] fix warn message when sonos speaker be not initialize
increased await timeouts from 500 milliseconds to 5 seconds in ContextRegisterListenerTest and SpringMvcClientBeanPostProcessorTest to improve test reliability by allowing
changed log level from info to debug in LightThingHandler. java to provide more informative logging when the effect light type is wrong
add db. properties for db. maxactive and db. maxmaxactive in asyncjobmanager
updated formatting and improved formatting in Reporter and ReturnsSmartNulls classes to enhance code readability and maintain consistent formatting
renamed the ` Frame ` parameter to ` DataFrame ` in the ` generate ` method to improve clarity and consistency in naming conventions
updated multiple package - info and module - info. java files for consistency and clarity to enhance code readability and maintainability
added a check for empty physical column names in OrcPageSourceFactory and implemented a test for column names with an empty file in TestHiveFile
added a call to ` methCla. mixPlay ( input, amp ) ` in ` Engine. java ` to enable mixing of play
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
simplified the condition for checking the presence of leadingIncludePaths in PreprocessorDelegate. java to improve code readability and maintainability
fix null pointer exception in stringtemplate. ismatrixmultiplication ( )
add ` ` $ x'' and ` ` find'' and ` ` findAll'' to the list of element proxy
updated sample rate handling in DefaultAudioSink. java to ensure correct maximum supported channel count for passthrough v29
added getFormula ( ) and setFormula ( ) methods to XSSFName and introduced a new getFormula ( ) and setFormula ( )
updated the target value in HighDimensionsTest. java from 60000 * scaleFactor to 90000 * scaleFactor to improve the accuracy of the target
updated split condition in SimpleTypeGT. java and added a new test for the GML parser in GMLParserTest. java to ensure
added a new test class ` ClassPathXmlJobRegistryContextTests ` to validate the functionality of ` ClassPathXmlJobRegistry `
change data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector. java ` to
camel - 12320 : camel - restlet - allow to configure restlet consumer by default
camel - 15836 - camel - jbang - add showout option to the log endpoint builder
refactor the submitTraceEvent method into a new method ` writeChromeTraceMetadataEvent ` to improve code organization and maintainability by encapsulating the
added conditions to ensure limit orders are only added when their status is not CANCELED or REJECTED
added pixel offset calculations and validation for image layout in LCMSImageLayout. java to ensure proper handling of pixel data and improve layout validation
refactor timestamp handling to use ` JrubyTimestampExtLibrary. rubyTimestamp ` instead of creating a new ` Timestamp ` instance
added a condition to check if the path ends with a slash in ContextHandler. java and implemented a test for getRealPath in WebAppContextTest
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ SETTER instead of TYPE _ ERROR _ THROWER _ SETTER
replaced the calculation of scrollAmount with a new variable for clarity to improve code readability and maintainability by using more descriptive variable names
fix a null pointer exception in graphdecoder.
test : migrate sniperjavaprettyprinterjavaprettyprinter to junit5
refactor URL output stream handling in tests to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added ` @ Entity ` annotation to the ` Mail ` class to enable the use of the ` @ Entity ` annotation in the ` Mail `
modified the default value of ` includeTablespace ` from ` false ` to ` true ` and added a new command parameter ` includeTablespace
added getter methods for ` metaDataBuffer ( ) ` and ` valuesBuffer ( ) ` in ` CountersReader. java ` to provide access to
added a check for non - empty file in ScanBatch and implemented a test for it in TestJsonReader to ensure proper handling of empty JSON
added a null check for internalCustomName in StringSubject. java and updated assertions in StringTest. java to improve error handling for string equality
added a compiled regex pattern for LIB _ PATTERN in LibUtils. java and modified the conditional logic for Cuda to improve handling of specific library
change catch block from ClassNotFoundException to Error in JrtJavaBasePackages. java and PackageHelper. java to handle a broader range of
hbase - 15836 wait for fs to be in safemode.
updated error message formatting in TranslatingJavacPhaseTracer. java to improve clarity of error messages for better debugging
allow plugins to be clone from the plugin cache instead of the plugin cache.
don't fire contact status change event when the contact be already online.
remove deprecate method from servletrequestdetails. withresourceandparams ( )
added a new integration test for fetching account information in the BTCE exchange to ensure that the fetching functionality works as expected in the BTCE exchange
added mouseWheel method to VDUInput and vt320 classes and implemented mouse wheel functionality in VDUInput and vt320 to enhance functionality for
updated library path handling in Natives. java to ensure the correct library path is set based on the needJInput flag
no effective change - remove columnstore annotation
added PLAYER _ SKIN _ FLAGS handling in GlowPlayer and MetadataIndex classes, and modified MetadataIndexTest to skip processing for player
replaced RequestFieldMatcher with SLF4J Logger in LoadBalancerWithServiceTests. java to improve logging for better debugging
refactor MapService to improve readability and maintainability to enhance code clarity and facilitate future modifications
replaced ` System. getProperty ` with ` AccessController. doPrivileged ` for retrieving the OS version to improve security by using ` AccessController ` for
updated file suffix handling in TemplateEngineFreemarker. java to allow dynamic file suffix based on configuration
updated hash code calculation in SelectMessageQueueByHash. java and added multiple order IDs in SelectMessageQueueByHashTest. java to improve
added animation callback to ToolbarPanel for layout animations to enhance user experience by providing visual feedback when layout changes occur
refactor binding logic in StyledTextAreaVisual to use EasyBind. when ( hasCaret ) instead of bindConditionally ( ) to improve code clarity
added ` declaredPlatforms ` to ` PrebuiltAppleFrameworkDescription `, ` CxxBinaryDescription `, and ` CxxGenruleDescription `
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` in ` JpaCountQueryCreator ` and ` PartTreeJpaQueryExecution ` to utilize
added a null check for the passwordAttribute before setting it to prevent potential NullPointerException when the passwordAttribute is null
added handling for array types in DataUtilities and created a test for default values in DataUtilitiesTest to ensure correct handling of array types and validate
updated SSL engine creation logic to check for null address to ensure correct host name verification and avoid potential null pointer exceptions
replace assertEquals with assertTrue in TestFSTableDescriptors. java to ensure that the cachehits count does not exceed the expected range
danielwagnerhall for delete a cookie in the ie driver
added a boolean flag to track if the launcher transition has ended to ensure proper handling of launcher transitions during gesture handling
updated HTML rendering to include UTF - 8 character encoding in HTMLListWriter. java and HTMLWriter. java to ensure proper handling of character encoding
refactor methods in IndexReader. java to improve code clarity and maintainability
updated the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path handling
updated comboBox addition method in BasicComboBoxUI. java and added a new class bug6337518. java to address a bug related to
updated TestRandomAccessBuffer. java for improved functionality to enhance performance and reliability of random access operations
updated UserInfoActivity. java to improve user info handling functionality
added content URI notifications for HomeContentProvider across multiple services to ensure proper handling of content URIs in the application
added functionality to manage pressed or focused background in BubbleTextView and Launcher classes to improve user experience by ensuring the background reflects the current
updated the ` getFallbackResponse ` method signature to include an ` Throwable ` parameter across multiple policy classes to enhance error handling by providing a more
removed the condition checking for compile - only in DumpBytecode. java to simplify the code logic for better readability and maintainability
added null check for tags before accessing its length in ChannelUri. java to prevent potential NullPointerException when tags are null
updated regex pattern matching logic in RegexpUtil. java and added assertions in TestSqlPatterns. java to improve SQL pattern matching accuracy and ensure
added functionality to update the action bar title in FileActivity to ensure the action bar title reflects the current state of the activity
updated the method to retrieve the last element from ` Iterables. getOnlyElement ( convertedElements ) ` to ` Iterables. getLast ( convertedElements )
change schedule hour and minute value from " * " to " 0 " in CleaningService. java to ensure that the cleanup process starts with a
added partition validation for partitioned tables in TransactionalValidationListener. java to ensure correct handling of partitions in the Hive metastore
added an EnablePolling option to SnapPuller. java to enable polling functionality for better performance monitoring
updated the ` generatedKey ` variable type from ` int ` to ` long ` and modified SQL execution to include auto - increment functionality to ensure
refactored the proxy retrieval logic in SimpleReferenceCache. java to improve readability and maintainability of the code
sr sr sr sr sr sr sr
( chore ) camel - web - client : increase keep alive timeout to 10 second
deleted the HttpTestAccount001. java file to the test class is no longer needed for the current implementation
changed exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher. java ` and updated test assertions in ` DispatcherTest. java `
camel - 16400 : camel - cxf - allow to configure cxf message data format.
added handling for the'~'case in ClientUtils. java to ensure proper handling of the'~'character in the application
camel - 15836 - camel - slack : allow to configure a default delay of 10 second.
fix blockutil. getblockdropped ( ) to fire harvesting event
updated layout constraints and modified audio passthrough text in TranscodingTab. java to enhance layout responsiveness and improve user interface clarity
added a new file ` bug8057791. java ` to test the behavior of ` JList ` with Nimbus look and feel
updated flag assignment logic in LambdaToMethod. java and added a new class LambdaInterfaceStaticField. java to improve clarity of flag handling and
refactor RunnerBuilder to streamline subscription manager creation and add a new test for Ethereum Ethereum functionalities to improve code clarity and
updated null check from ` to. length ( ) > 0 ` to ` to ` to ` to ` to ` to is not null to
refactor ParquetFixedWidthDictionaryReaders to utilize a mutator for value reading and add a new test for bigInt with a dictionary to
updated conditional logic in PortraitPagedViewHandler. java to handle landscape orientation to improve layout responsiveness for different screen orientations
added a new annotation ` Log ` and ` LogInterceptor ` classes for logging functionality to facilitate logging functionality within the application
updated thread dump formatting to handle cases where trace length is greater than zero to improve clarity of thread dump output when trace length is zero
replaced ` Optional < ReferenceType > keyType ` and ` Optional < ReferenceType > valueType ` with ` Optional < Implementation > implementation ` across multiple
updated the calculation of the reference map to include the total frame size to ensure the reference map reflects the total frame size
refactor TypesafeConfigurator class structure to improve code readability and maintainability
camel - 15836 - camel - graphql : add karaf feature to the camel - graphql component
added two new methods ` bug1 ( ) ` and ` bug3 ( ) ` to the ` RFE2891944 ` class to
removed URL encoding for entry keys and values in HttpClientIntroductionAdvice. java to simplify URL handling and improve readability
refactored the ` UnsupportedPlatformTool ` class to implement the ` Tool ` interface to improve code organization and maintainability by encapsulating the
updated the loop count calculation in RecoveryStrategy. java to use TimeUnit for better clarity to improve code readability and maintainability by using a more des
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way
[ hotfix ] [ test ] fix npe in address manager test
updated layout specifications and component separators in VLCVideo. java to ensure consistent UI appearance across different screen orientations
fix link to bitquare / bitsquare / issues
updated the AUTHORITY string from " com. klinker. android. talon. provider " to " com. klinker
updated user configuration directory to include " /. m2 " and added a check for the existence of the user. xml file to ensure compatibility
added a call to ` Gdx. gl20. glBindBuffer ( GL20. GL _ ARRAY _ BUFFER, bufferHandle ) ` to
refactor ServerHttpSecurity implementation to improve security handling
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests. java to temporarily disable tests that are not ready for execution
added default headers management in HttpClientProperties and integrated it into CasCoreHttpConfiguration to enhance HTTP client configuration by allowing configurable default headers
improve error message for user password validation
deleted the NoOpConfigPathGetter. java file to remove unused code that is no longer needed
replaced ` Codec. base16Decode ` with ` Bytes. fromHexString ` for decoding the signing key to improve code clarity and maintainability by
replaced ` CascadedStyle ` import with ` CSSName ` import and added checks for ` none ` and ` floated ` to enhance
planning : add planningfactcollectionproperty and planningfactproperty to planner
replaced instances of ` getDefaultHeaders ( ) ` with ` defaultHeaders ( ) ` in ` RestUtils ` and ` RestUtilsTest ` to
refactor ` ProxyServer ` and ` Realm ` classes to use ` Charset ` instead of ` String ` for encoding and charset to improve clarity and
added a method ` getJobId ( ) ` to the ` StepContext ` class and a corresponding test in ` StepContextTests ` to ensure
refactor comparison logic in ExpandableUploadListAdapter and FileStorageUtils to use ` Long. compare ` instead of ` Long. valueOf ` to improve
replaced error logging with debug logging for HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity and reduce unnecessary error logging
updated import statements in LegacyAuthenticationHandlerAdapter. java to improve code clarity and maintainability
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
don't remove invalid filter from the network if it's own
move bcpginputstream. wrap ( inputstream ) from pgpkeyring to pkeyring
fix for http : / / issues. apache. org / activemq / browse / amq - 4237
added a new test method ` testSelectAllFromView ` and modified column name handling in ` HiveBaseResultSet ` to improve test coverage and
updated FocusTransitionTest. java to improve test coverage for focus transitions
ggb - 2652 : fix compile error
added a check to ensure the sourceTask is an instance of MapRedTask before retrieving counters to avoid potential ClassCastException when retrieving the job instance
replaced ` Objects. requireNonNull ( readListener ) ` with ` Objects. requireNonNull ( readListener ) ` in ` HttpInput. java ` to
added a method to change the component color in AppearancePanel. java and refactored color handling in AppearancePanel. java
updated constructor parameters in TaskHelper to use'hidden'instead of'false'to enhance flexibility by allowing the'hidden'parameter to be
fix intermittent failure in failovertimeouttest
pdfbox - 4071 : fix lock in createfromrandomaccessimpl ( )
added import statement for DefaultParameterHandler in BoundSql, SqlSource, and LanguageDriver classes to ensure proper handling of default parameter handlers in the

micronaut : fix compilation of groovy script in micronaut ast.
refactor cursor handling in PgResultSet and PgStatement to use a unified closeInternally method to improve code readability and maintainability by
changed the initialization of ` serviceAdvisorType ` from ` null ` to ` PYTHON ` to ensure the serviceAdvisorType starts with the correct Python
replaced ` ResolvingDecoder resolver ` with ` ThreadLocal < ResolvingDecoder > ` to improve thread safety and resource management
changed the parameter type of the Path constructor from Collection to List and modified the return type in PdfContentStreamProcessor and PdfCleanUpContentOperator
updated SendCoinShieldTest to use a memo value instead of a fixed size to improve test reliability by ensuring the memo value is
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to enable personalization of email addresses and distinguisher
removed redundant conditional check for'n'in CodeGenerator. java to streamline code by eliminating redundancy
removed the ` 1 ` parameter from the ` scroll ` method calls across multiple classes to simplify the method signature and improve readability
changed the visibility of the pointer variable in FlatRecordReader from private to public and added reset and resetTo methods to allow for better management of pointer
rename ContentDigestHistory to BdbContentDigestHistory across multiple files to improve clarity and consistency in naming conventions
refactor CastExpression. java to streamline type handling and improve clarity to enhance code readability and maintainability while ensuring correct handling of boolean types
replaced the use of ArrayList with a boolean flag ` acceptsAll ` and updated the condition to check for the presence of multiple accepted media types
added a new boolean parameter to the TaskView class to enhance functionality for better user experience
added ` isAutoIncrement ( ) ` method to ` CreateTableChange ` and implemented ` isAutoIncrement ( ) ` method in ` Liquibase
changed the initialization of the errorText variable to provide a meaningful error message for command execution failures due to Internal Server Error
updated imports in DeadListenerTest. java and modified JVM options in LocalManagementTest. java to utilize ProcessTools for performance testing
replace ` add ( currentStatus ) ` with ` push ( boosterStatus ) ` in ` BasicEventSimulationEngine. java ` to ensure
added support for configuring ajp connector on a specific port in GitBlitServer. java and updated build settings in BuildSettings. java to
added handling for compound types in TransTypes. java and created a new Intersection03. java file with a test for ClassCastException to ensure
rename Embeddingtest to EmbeddingITest to clarify the purpose of the test class
added a native method to start the toolkit thread to ensure that the toolkit thread is only started once
[ graalvm ] add option to compress bundle in parallel.
set visibility of surface and surface in papplet. showsurface ( )
[ hotfix ] [ test ] use class name instead of class name in unit test
added new boolean flags for full node, solidity node, and HTTP SLIDITY in CommonParameter and related classes to enable or disable
added a ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and modified the return statement in ` GoogleCloudFirestoreTicketDocument
updated method signatures in Generate. java to improve code clarity and maintainability
json _ format ( java null ) should return ` null ` instead of ` java null `
refactor BadgeRenderer to use a constant for DOTS _ ONLY and adjust width calculation accordingly to improve code readability and maintainability by using a
removed the final modifier from the getConfiguration method in FreemarkerManager. java to ensure thread safety during configuration retrieval
added a new test method ` testInvalidExcludedPackageNamePatterns ` to ` OgnlUtilTest ` to ensure that the ` setExcludedPackageNamePatterns
modified the logic for retrieving the simulator Udid based on the platform name to ensure compatibility with different operating systems and improve test reliability
updated DefaultHttpClientFilter to use ProduceProcessorManager for error handling and modified test cases in TestDefaultHttpClientFilter to improve error handling and ensure
added a null check for mScript before binding root script and modified data handling for mAllocIconIds and mInvokeResetWAR to ensure
added a conditional check for TEXT _ BURN in Utilities. java to enable shadowing for text rendering when the line count is zero
added teardown methods for dropping tables and views in TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database tables and views after
added a call to get the parser from the specified name in SecurityNamespaceHandler to ensure the parser is retrieved from the specified namespace
updated the condition for fastpath in BoundedLocalCache. java and added a new test for fastpath in BoundedLocalCacheTest. java to
added flushing functionality to ` RawConnection ` and implemented ` complete ` and ` flush ` methods in ` RawConnection ` and ` WebSocketAsync
added two new test methods to validate assertions in SoftAssertionsPerfTest. java to improve test coverage and ensure correctness of assertions
added a new constant for TEST _ FAILURES _ EXIT _ CODE and modified the execute method in PythonRunTestsStep to handle different exit codes
added conditional logic to handle glyphs in GlyphLayout. java to ensure that no glyphs are processed when markup is enabled
refactor score comparison logic to use streams for improved readability and performance to enhance code clarity and maintainability while ensuring accurate scoring results
replaced ` getEnclosingClass ( ) ` with ` getSuperclass ( ) ` in ` TypeHandlerRegistry. java ` to ensure correct handling of anonymous
remove unnecessary cast to playerconnection in playerconnection. flush ( ).
added a check to prevent multiple invocations of OnDrawListener in Launcher and LauncherAnimUtils to prevent multiple invocations of OnDrawListener for the same
refactor CheckIndex, BlockTreeTermsReader, FuzzyTermsEnum, and Builder classes to improve code organization and maintainability
updated import statements and modified the condition for matchStatus in ReplicaAssigner. java to improve code clarity and ensure matchStatus is not appLIC
updated the default return value of getBoolean for MEDIAPARSERV2 from false to true to ensure the media info parser correctly identifies media
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 567
added assertions for table existence and permission verification in FolderPermissionBase. java to ensure proper handling of table existence and permission checks
do not publish status for provider that have be register due to registration change.
updated the random number generation logic in PastelColor. java to ensure consistent color generation across different components
refactor ScriptEngineFactory to improve code organization to enhance maintainability and readability of the code
refactor image handling in HolographicViewHelper to use original and outline bitmaps to improve clarity and maintainability of the code
refactor request method handling in CloudClient. java to improve readability and maintainability of the code
add phrase tag to multistwordpreprocessor
[ hotfix ] [ test ] remove unused import
added conditional logic to retrieve the output format class based on the class name to ensure proper class loading based on the specified output format
refactor ChunkListener, AfterChunk, and BeforeChunk classes to improve code organization and maintainability
updated boundary checks in DOMBuilder. java to ensure valid input to prevent potential ArrayIndexOutOfBoundsException
updated handling of hierarchical undirected graph visibility in ClusteringCoefficient. java and modified edge retrieval in EigenvectorCentrality. java
camel - 15836 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region
; ; ; ; ; ; ;
camel - 16400 : camel - defaultkeyselector now implement camelcontextaware so you can configure a custom keyselector.
replaced instances of ` Throwable t ` with ` ThreadDeath ` in ` LogResolverBean. java ` to improve handling of ` ThreadDeath `
refactor KeyManagerFactory, TrustManagerFactory, Policy, and X509Certificate classes to improve code organization and maintainability across the security framework
update to jgit 1.1 . 0 and reverse - sort library dependency .
fix # 2496 ( # 2496 )
add a transformerparser to create a transformer with a methodinvokingadapter class.
rename BACK _ FACTOR to REWIND _ TIME and modify duration calculations to improve clarity and accuracy in duration calculations
added a ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` and implemented it in ` JavaSEPort `
updated usage string formatting in UtilityCommands. java and modified command permissions handling in DocumentationPrinter. java to improve clarity of usage instructions and streamline
updated the attribute name from " collection. map " to " collections. map " in CommunityListServlet. java to improve clarity and consistency in
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource. java and updated method calls in RewriteCrossSpaceCompactionSelector.
removed duplicate @ Override annotations in Observation. java to improve code clarity and maintainability
updated synchronization logic in ProjectPropertiesModelImpl. java to ensure proper synchronization based on project rulesets
move getfieldunsafe call out of synchronized block for phantom class.
micrometer : add naming convention for elasticsearch meter ( # 2496 )
added unit management methods to IController and updated BackendAPI to use IController instead of AbstractController to enhance functionality and maintain consistency with the new
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to verify the rendering of a huge horizontal rule with
replaced instances of System. out. println with TTY. print in TypeSystemTest. java and PartialEscapeAnalysisPhase. java to improve
updated multiple Java files for consistency and clarity to enhance code maintainability and facilitate future updates
change condition from'if ( frameLength = = 0 )'to'if ( frameLength < = 0 )'to ensure proper handling
updated return values in IntFloatMap and IntIntMap to include default values to ensure correct handling of zero values in the map
refactor ImageDownloadService to use local variables for icon and preferred sizes to improve code readability and maintainability by reducing redundancy
added a null check for the registered variable in HandlerRegistration. java to prevent potential NullPointerException when registered is null
removed the ` hasNextSibling ( ) ` method from ` AttributeNode `, ` DocumentNode `, ` ElementNode `, and ` Html
added null check for results in RedisDistributedMapCacheClientService. java to prevent potential NullPointerException when results is null
added log statements for enabling and disabling MobFileCache in MobFileCache. java to improve clarity of log output for better debugging
modified the ColConvCCMTest. java file to enhance test coverage and ensure compatibility with recent changes
replaced instances of ` Target ` and ` Source ` with their respective ` allowCovariantReturns ` and ` syntheticNameChar ` variables
pdfs : use string instead of arraylist, a suggest by valerybokov
refactor Json class to improve type handling and add a new X class for JSON serialization and deserialization to enhance code clarity and facilitate easier debugging
added a return statement in GenericFileConsumer. java to prevent potential null pointer exceptions during file processing
added EventQueue. invokeLater for thread execution in bug6638195. java to ensure UI updates occur on the Event Dispatch Thread
updated the calculation of maxSize to use maxBinaryMessageSize instead of maxTextMessageBufferSize to ensure the correct maximum buffer size is used for message processing
fix wrong calculation of steering value.
replaced ` Arrays. equals ` with ` MessageDigest. isEqual ` for password comparison to simplify the password comparison process
refactor JdbcSerDe to use LocalDate and LocalDateTime instead of direct date and timestamp conversions to improve code clarity and maintainability by using local date and
updated version number from 2 to 3 and modified metadata reading logic to ensure compatibility with newer metadata formats and improve metadata handling
updated FlywayAutoConfiguration and FlywayAutoConfigurationTests to include conditional configuration for LocalContainerEntityManagerFactoryBean and AbstractEntityManagerFactoryBean
added a call to ` sorted ( ) ` on the ` ClassesImpl ` class to ensure that the ` ClassesImpl ` class is sorted for
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and introduced a new method ` waitForLauncherCondition ( ) ` in
refactor SharedInformer class to improve code readability and maintainability
refactor memory scope handling in TestCloseScope0. java to improve compatibility with different Java versions
updated the port range from 50, 500 to 50, 5000 in AdaptServerSocket. java to allow more time for the test to run
updated CaptchaChannelProcessorTests. java to improve test coverage for Captcha channels
added logic to update the owner collection in MetadataImport. java to ensure that modifications to the owner collection do not affect the underlying collection
added retry mechanism for saving properties in AbstractRegistry to improve reliability of cache file operations
updated TrackingDirectoryWrapper initialization to use the directory instead of mergeDirectory to ensure trackingDirectoryWrapper uses the correct directory structure
fixed bug in unusedimports - it no longer report false positive
added validation for insert overwrite in Iceberg tables and implemented a test for it in IcebergTableUtil to ensure that insert overwrite queries do not
updated assertions in BootstrapTests to check for the correct number of SAML keys and modified assertions in SamlLoginServerKeyManagerTests to ensure correct
renamed the method ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and updated its logic to improve clarity and accuracy in
removed synchronization from the ` getAddressVector ` method and replaced the ` theAddressie ` variable with ` addressees ` to simplify the
removed WAITING _ FOR _ LINE _ COMMENT and WAITING _ TO _ LEAVE _ COMMENT from CommentsParser. java to streamline
added IOException handling to the release method in IndexWriter, Lock, and NativeFSLockFactory classes to improve error handling and resource management during lock release
updated package structure for DataSourceInitializer to align with the new project structure
added a check for non - unary operators in SpelExpressionTransformer, modified return logic in LiteralNode, OperatorNode, and SpelExpression
updated ByteBuddy initialization to use TypeValidation. DISABLED to disable type validation for improved performance
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` to simplify type handling and improve code clarity
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest. java and modified lock wait timeout in
refactor ` setSystemProperties ` method to remove ` LogFile ` parameter and use ` environment ` directly to simplify method signature and improve clarity in
added a method to check if a HTTP redirect status code is reached and refactored the request method to improve handling of redirects and streamline
added constants for service and version mappings in ServiceCombConstants and refactored MicroserviceFactory to use EnvironmentConfiguration for better configuration management
updated the method call from ` proc. getName ( ) ` to ` proc. getBeanName ( ) ` to ensure the correct process name is
updated DB _ PATH _ REGEX and DB _ PREFIX in BaseAndroidTestCase. java and modified database deletion logic in GeocodeHelperTest. java
updated return statement to retrieve unread count from the current account to ensure accurate retrieval of unread count for the current account
renamed ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added an ` @ DisabledForJreRange ` test to improve
added a limit parameter to the ` getAllOrder ` method in ` MarketOrderIdListCapsule ` and introduced a limit constant in ` Parameter `
added null check for the user object in HomePage. java to prevent potential NullPointerException when retrieving user settings
updated ` LocalFileSystem ` to use ` getAbsoluteFile ( ) ` instead of ` file ` and added a new test method ` testMatchRelative
added MAX _ WIDTH and MAX _ HEIGHT constants and updated bounds handling in ComponentBuilders to ensure dimensions do not exceed defined limits
added SLF4J logging and deprecated the ` setConnectionManagerTimeout ` method in ` CommonsHttpSolrServer. java ` to improve error handling
added exception handling for document creation errors in PrintController. java to improve error reporting for document creation failures
refactor file path handling in CrateType. java and add unit tests in RustBinaryIntegrationTest. java to improve code clarity and ensure
added methods to check if a string is a number or a number in SpellChecker. java and created a corresponding test in SpellChecker
updated the declaration of the MESSAGE constant in HelloWorld. java to improve clarity and consistency in the code
added methods to retrieve and display OCFileListFragment from a file to enhance functionality for managing OCFileListFragment instances
added a daemon flag to the puller in ReplicationHandler. java and wrapped logReplicationTimeAndConfFiles in a try - catch block in
updated the update method call in StoreCachedTest. java to ensure consistency in data handling
refactor StreamerLoader constructor to use MaterialHolder instead of MaterialHolder to improve clarity and maintainability of the constructor
added " Core Library for LibGDX " and " Controller / Gamepad API " in DependencyBank. java to enhance the functionality of the
added maximum recycled views for various item types in the RecyclerView's pool to enhance UI responsiveness based on device profile settings
added a new test method ` testBuilding binariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest. java ` to ensure proper functionality of
make examplebaritonecontrol more informative
added import statements for ParsedNode, ParsedNodeException, and ResourceAccessor in CreateProcedureChange. java to ensure proper handling of ParsedNode and
added null bitmap handling for null values in FilterOperatorUtils. java and created a test for range filtering in NullValueVectorReaderTest. java
removed validation for ` bootstrapMethodRef. parameterTypes ( ) ` and ` bootstrapArgs ` in ` JDynamicInvokeExpr. java ` to ensure
fix unit test on window
removed runtime options formatting from CucumberInstrumentation to streamline the execution process by eliminating unnecessary changes
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and updated
updated workspace cell padding logic in DeviceProfile. java to ensure correct visibility of workspace labels based on cell size
updated assertions in ReplicationFactorTest. java to use assertRf for consistency to improve readability and maintainability of the test code
lLVMLanguage : defer context initialization until pre - initialization be complete
removed JUnit @ Ignore annotation from ChaosMonkeyNothingIsSafeTest. java and ChaosMonkeyNothingIsSafeLeaderTest
replaced RuntimeException with JsonIOException in Gson. java to improve error handling by using a more specific exception type
replaced Integer. valueOf ( values [ 0 ] ) and Integer. valueOf ( values [ 1 ] ) with Integer. parseInt ( values [ 0
updated error messages in Copy. java for clarity and consistency to improve code readability and maintainability
refactor segment name validation logic in HLCSegmentName, LLCSegmentName, and RealtimeSegmentType classes to improve code readability and maintain
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and created corresponding test cases in ` FragmentTest ` to enhance fragment
updated date calculation in DueDateBusinessCalendar. java to ensure accurate date representation by using the current time from the clock reader
updated the return statement to include " - target " and " x86 _ 64 - none - linux - android " to provide additional configuration options
added a method to delete all account files in FileDataStorageManager and integrated it into ManageAccountsActivity and ManageAccountsActivity to improve user experience
updated command syntax from -? to - h in SchemaCrawlerCommandLine. java to improve clarity of command output
added a new method ` createSuiteDescription ` and modified ` equals ` and ` hashCode ` methods in ` Description ` to ensure unique IDs are
replaced the use of Hashtable for decoding with a direct method call to decodeBarcode to streamline code by eliminating unnecessary object creation
removed unused ` ImmutableList < String > ` parameters from the ` BuckTarget ` constructor across multiple files to streamline code by eliminating unnecessary
added unit tests for the ` getRange ` method in ` GWCZoomContextFinderTest ` to ensure that the ` getRange ` method behaves as
added support for dependency tracking in JRubyScriptEngineConfiguration and updated JRubyScriptEngineFactory to conditionally activate dependency tracking based on configuration
updated request path check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in PromptFilter. java to ensure proper handling of
patch by brandonwilliams, review by jbellis for cassandra - 1315
refactor WelcomeWindow to improve image handling and rendering to enhance performance and maintainability of image rendering
updated TunerManager and RTL2832TunerController to check if the tuner is running before resubmitting transfers
added HasTests annotation to AbstractShBinaryDescriptionArg and created a new test for sh _ binary _ with _ test in ShBinaryRuleIntegration
added a condition to set the includeString to include " db : hsqldb " in the TestFilter class to ensure proper handling of database
removed unnecessary whitespace in JavabinLoader. java to improve code readability and maintainability
trufflestacktrace : do not materialize exception stacktrace if it's empty
refactor service loading logic in GraalServices. java to improve readability and maintainability of service loading logic
add unit test for duplicate command handler resolution
[ flink - 20865 ] add fine - grained. shuffle - mode. all - blocking config option.
fix fish entity not be able to place properly. close # 3889
camel - 15836 - create an aws - ftp component base on sdk v2, regen doc
rename ` getCommandrunner ` to ` getSteprunner ` across multiple files to improve clarity and consistency in naming
renamed the variable ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` class to clarify the purpose of
added a check to return early if no items are available to improve performance by avoiding unnecessary processing when no items are available
added @ ConditionalOnMissingBean annotation for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration. java to ensure the bean is
refactored XMLLayout to use StringBuilder and added properties property handling to improve performance and maintainability of the code
added a new constant ` OMIT _ HEADER ` and implemented the ` remove ` method in ` NamedList `, ` BinaryResponseWriter `
fix for bug # 44474 - getpropertynumber ( ) should return property number
updated return statement to use Description. getBuildRuleType ( key. getSimpleName ( ) ) instead of key. getSimpleName ( ) to ensure correct retrieval
fix a bug where the hierarchy be not modify when a method be remove.
added null check for disputesPerTradeId, disputesPerDelayedPayoutTxId, and disputesPerDepositTxId
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject `, modified ` retrieveColumns ` and `
wallet : set default confidence type to not _ seen _ in _ chain
refactor argument handling in HttpClientIntroductionAdvice. java to improve readability and maintainability of the code
fix ` ` conditions'' detection for json file
hbase - 25880 addendum to catch exception in hregion. close ( )
refactor credential comparison logic to use ` Math. min ` and ` Math. max ` for clarity to improve code readability and maintainability by using
[ java ] don't check for a subscription have a correlation id.
make testjvmprocess. destroy ( ) more reliable
added support for MariaDB and Oracle database types in TestDefaults. java to ensure compatibility with additional database types
camel - 15836 : camel - mail consumer should check if the store be connect to the mail store.
added logic to check if the document is more than the last token in the query to ensure that the query does not consume any tokens from the
camel - 15836 - camel - translate : list all the available language in the enum - start with ` ` g'' complete
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the instantiation logic in ` Voice ` to enhance functionality
added emailDomain property with getter and setter methods in LdapIdentityProviderDefinition and IdentityProviderDefinition classes to allow users to set and retrieve the email
added new timeout constants and methods to retrieve request read and connection timeouts to enhance flexibility by allowing configurable timeout values
added a check to ensure that the code executes only when myDeferredConcepts and myConceptLinksToSaveLater are not empty to avoid potential
added RedisCategory import and annotation to RedisServiceRegistryTests. java to categorize tests related to Redis functionality
updated ` FindDeprecatedUsesTest ` to use ` ParameterizedTest ` and ` @ NullAndEmptySource ` annotations to improve test reliability
added a call to ` super. paintComponent ( g ) ` in ` WaterfallPanel. java ` to ensure proper rendering of the overlay
removed unused imports from multiple classes to clean up the code and improve readability
updated ` ContractEventTriggerCapsule ` and ` LogEventWrapper ` to use ` getEventSignatureFull ( ) ` and ` getEventName (
updated the file name filter to check if it ends with " _ " instead of checking if the file name ends with " _ " to ensure
replaced the clearRect method with fillRect and set the color using the g color to improve visual consistency by using the correct background color
refactor code structure to improve readability to enhance maintainability and clarity of the code
removed debug print statements from multiple Java files to clean up the code and improve readability
added a conditional check for NaN scores before assertions in TestFieldCacheSort. java to ensure tests only execute when the score is not NaN
use set. copyof ( ) instead of set. copy ( ) in devicestate
added a method to handle zero - time values in ColumnSnapshotGenerator and created a corresponding test in MySQLIntegrationTest to ensure
remove ` ` mult'' value from contract.
changed the type of ` vsContext ` and ` sortWithinGroup ` from ` Map ` to ` Map <?,? > ` across
[ drools - 5657 ] add test case for edit session model
updated the constructor of HiveMetaStoreClient to include'this'reference to ensure proper instantiation of HiveMetaStoreClient based on the specified configuration
added a conditional check to return early if mModalness equals modalness to improve performance by avoiding unnecessary processing when modalness is not available
added unit test for CodecCapabilities creation in ShadowMediaCodecListTest. java and implemented native method in ShadowMediaCodecList. java to ensure
fix # 5460 : confirm button focus be wrong when enter key use ( # 5460 )
added validation for width and height in SunVolatileImage and improved error handling in XRSurfaceDataProxy and XRPMBlitLoops
updated regex pattern from ". " to " \ u00a0 " in FormatData _ uk. java to ensure accurate representation of group
fix intermittent failure in stress test
added beta flavour support and improved visibility handling in AchievementsFragment and LeaderboardFragment to enhance user experience by providing clear
added access, name, and description from the context in SearchMethodVisitor. java to ensure accurate access and description from the context
added sleep statements in IoTDBInsertWithoutTimeIT. java and modified exception handling in IoTDBInsertWithoutTimeIT. java to
refactor duration retrieval logic in DLNAResource. java to improve code readability and maintainability
camel - 16836 : camel - core - optimize the resequencer model to be a little more generic.
refactor txn handling logic in TableReader. java to improve transaction management and error handling
refactor key manager algorithm retrieval to use a getter method to improve code readability and maintainability by centralizing the algorithm retrieval logic
replaced ` JavaIsoVisitor ` with ` TreeVisitor ` for single source applicability in ` PrimitiveWrapperClassConstructorToValueOf.
added a condition to exit the game when a tab key is pressed in Blockmania. java to ensure proper handling of tab key events in
replaced instances of AccessSpecifier. PACKAGE _ PRIVATE with AccessSpecifier. NONE across multiple files to standardize access specifications across different Java files
refactor method names and improve error handling in Check. java and add new T99153 class T9961. java to enhance code clarity
refactor stripes and stripeStats assignment logic in OrcInputFormat. java to improve clarity and maintainability of stripes and stripe statistics retrieval
added a null check for the exception in JCache. java to prevent potential NullPointerExceptions during execution
myhentaicomics ripper now use https instead of http
added functionality to display the current jar version in the application to enhance user experience by allowing users to view the current jar version
replaced ` split ` method with ` splitTokens ` in ` Sketch. java ` to improve functionality by using ` splitTokens ` instead of
added rotation handling in ConsoleActivity and refactored rotation logic in TerminalView to improve user experience by ensuring consistent rotation behavior across different keyboard
updated PriorityQueue type to extend ScoreDoc instead of HitQueue to improve type safety and eliminate unchecked cast warnings
added a null check for ownerConnectionAddress in ClientSmartListenerService. java to prevent potential null pointer exceptions when accessing the owner connection address
camel - 15836 : add support for customize headermapfactory in camel - core
updated formatting in JavaCompiler. java and Diagnostic. java to improve code readability and maintainability
int - 173 added support for create a jms outbound gateway parser.
updated the argument in the expect function from'i + 1'to'i 2'in ArrayFunctions. java to correct the logic for
fix npe in invokeloader when load script engine
added support for PostgreSQL statement types in PooledConnectionImpl and ConnectionPoolTest to enhance connection handling and improve test coverage for PostgreSQL statements
rename flushmemtables ( ) to flushmemtablesandrefreshsizeestimates ( )
changed log level from error to warn in AtomicRemainder. java to improve logging granularity for memory usage
don't include min timestamp in ttl expiration. patch by jbellis ; review by brandonwilliams for cassandra - 14
fixed - rblockingdeque. poll ( ) and rblockingdeque. poll ( ) method don't take a long timeout
removed the ` format ` parameter from the ` printMap ` method calls in ` JobInspectCommand. java ` to simplify the method signature
refactor Engine class to improve code organization to enhance maintainability and readability of the code
replaced ` Stream. of ( ) ` with ` Stream. entrySet ( ). stream ( ) ` and added sorting functionality for child entries to
[ issue # 403 ] adjust aclclient code for rocketmq ' s acl feature and ignore a unit test .
changed condition from numIndexDims to numDataDims in BKDWriter. java to ensure correct handling of dataims in the
[ hotfix ] fix npe in notebookserver
updated the instantiation of ExpressionNode to use'lt'instead of'funN'to improve clarity and functionality of the ExpressionNodeEvaluator
removed the ` public ` access modifier from the ` getNodeId ` method in ` NodeIdAccessor. java ` to allow access to the ` getNodeId `
server : improve error message when volume be attach to a vm before create snapshot policy
removed the'public'access modifier from several methods in ItemWriter. java to allow access to these methods from other classes
updated the mocked ThingImpl to include a new test identifier to enhance test coverage by providing a more relevant test scenario
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and created a test for it in ` ImageNameSubstitutorTest ` to
replaced FSDirectory with RAMDirectory in TestNorms. java to use RAMDirectory for improved performance
added a check to determine if the line height is less than the actual height of the text area to ensure that the line height does not exceed
updated method implementations in WalletAppKit. java to enhance functionality and improve performance
remove hat _ js _ nashorn from oqlengineimpl. getinitstream ( )
fix a bug with remove a JCheckBoxMenuItem from the chat transport menu.
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest `, ` Context `, and ` ContextImpl `
fix : set bsq explorer when proto be not present
added methods for managing session attributes in StandardSession . java and updated formatting for better readability to enhance session management functionality and improve code clarity
added assertions to verify the type of the plain bean in TestDbJson _ List. java to ensure the test accurately reflects the expected
updated the initialization of averages array to use initialPageCount instead of pageSize to ensure averages are initialized with the correct initial page count
updated BatchCommandLineLauncher. java to improve command line launcher functionality
added EmbeddedDatabaseBuilder and JdbcTransactionManager beans to BatchMetricsApplication to enable integration with HSQL and JDBC for batch processing
remove unauthenticatedhttpservice from glowrootloghttpservice
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
removed ` notifyAll ( ) ` method from ` DocumentsWriter ` and added segment refresh logic in ` DocumentsWriterPerThread ` to streamline synchronization
added methods to retrieve and set multiple choice options and validation constraints in UiBinding to enhance functionality for handling multiple choice options and validation constraints
updated method calls from ` setReflectively ` to ` setReflectively ` across multiple files to ensure consistency in method naming and improve
bugfix : only update the stored copy of the tree for a full save
ignore all regex pattern when parse affix.
replaced ` ArrayList < KrakenFee > ` with ` ArrayList < String > ` in ` KrakenAdaptersTest. java `
removed unnecessary import of CharTermAttribute in DefaultIndexingChain. java to streamline code by eliminating unnecessary imports
sr sr sr sr sr
added a check to throw an exception for unsupported data encoding in VectorizedPrimitiveColumnReader. java to ensure proper handling of unsupported data encodings
added SLF4J MarkerFactory import and modified log handling logic in HttpSolrCall. java to improve logging clarity and ensure proper logging behavior
added a call to destroy the metadata service proxy to ensure proper cleanup of metadata service proxy instances
added a constant for the maximum level in DefaultEntityQueryRepository and refactored the getLvlFilter method in BaseEntityServiceTest to improve
added a check for null changelog ID in HubChangeExecListener. java to improve error messaging when no changelog is available for Hub project
added a caching mechanism for the TRY _ HARDER _ HINT in AbstractBlackBoxTestCase. java to improve handling of barcode decoding
replaced ` ProcessExecutor. Result ` with ` ProcessExecutor. Result ` in ` CxxPreprocessAndCompileStep. java ` and added a
refactor event handling logic in ObjectStore. java to improve clarity and maintainability of event counting logic
removed redundant check for @ ConfigurationProperties bean constraint in ValidatedLocalValidatorFactoryBean. java to streamline validation logic for non - Spring Boot applications
clear the temporary block entity list in the aware world provider
[ gr - 177551 ] remove unnecessary check for exact type intrinsification.
remove unneeded code
replaced the implementation of ` WantedAnywhereAfterFollowingInteraction ` in ` Reporter. java ` and removed the ` WantedAnywhere
added null checks for ownerAddress and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that only valid accounts and
replaced the ` CommandComparator ` class with a ` TreeMap ` for sorting commands to improve sorting efficiency and maintain consistent command order
feat ( v2beta2 ) : migrate workflowsproto to v2beta3 ( # 352 )
replaced calls to ` addProperty ` with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder. java ` to improve code readability and maintain
updated AsmLoader instantiation to use interfaceClass's getClassLoader ( ) method to ensure compatibility with different class loader implementations
pdfbox - 2158 : be lenient / avoid npe with bad decode array ; be lenient towards font with lineto without moveto
updated output formatting for namespace and class declaration in Java2TypeScriptTranslator. java to improve clarity of namespace usage based on definition scope
replaced the EmptyServerHandler with AbstractHandler and added a new handle method to enable proper handling of requests in the Jetty server
removed the " Pause " and " Rotate " listeners from the input manager to simplify listener management by eliminating unnecessary parameters
added a check for the root path in AbstractSqmPath. java to ensure that the root path is used when it is not null
updated package structure for ReadFolderTest and RenameFileTest classes to improve organization and clarity of test files
refactor image processing logic in AwtCanvas. java to handle BYTE _ INDEXED and GRAYSCALE _ INVERT conditions to improve image
allow jvmci native library to be load from a location.
[ hotfix ] [ test ] remove dataflowportabilityapiunsupported from pardotest
chore : update sample code to set total timeout, add api client header test
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility with serialization standards
refactor CallStack class for improved readability to enhance maintainability and facilitate future updates
added a warning log for misconfigured per - node max size in EvictionChecker. java to inform users that the max size requirement is not
updated return statements to use " LST " instead of " AST " across multiple files to improve clarity and consistency in terminology
refactor scoreable job creation and improve readability to enhance code clarity and maintainability by using more descriptive variable names
replaced an AssertionError throw statement with a return statement in NetHooks. java to simplify error handling by returning null instead of throwing an AssertionError
updated method calls and formatting in ApplicationControllerFluentLeniumTest. java to improve code readability and maintainability
added ` makeString ` methods to ` ParallelIterable `, ` RichIterable `, ` AbstractSynchronizedRichIterable `, and `
replaced the usage of ` Ordered. HIGHEST _ PRECEDENCE ` with a constant ` DEFAULT _ ORDER ` in ` Oidc
added a ` Predicate < ProposedWeakAssociation > weakAssociationRule ` to ` WeakAssociationsAnalyzer ` and modified the constructor to include it
modified the Deflater class to improve compression efficiency
added error handling for IOException in Font. java to ensure proper resource management and prevent potential memory leaks
added a check for null or empty content in VersionTypeBinding to prevent potential NullPointerException when content is empty
updated the return type of ` places ` from ` List < Place > ` to ` List < Place > ` and modified the onPostExecute method to
camel - 5464 : camel - mail converter should convert content type to lowercase.
add support for openssh key format in openssh spec.
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for better control over folder name handling
replaced specific Hibernate annotations with a wildcard import and added logging for access access in InheritanceCacheTest. java to streamline the class loading process and
updated import statements in ConnectOAuth2RequestFactory. java and added getUserApprovalRequest method in TofuUserApprovalHandler. java to ensure
fix influx naming convention ( # 645 )
don't use system. out. println in quickfix test
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection. java to correct cookie handling logic
replaced the method ` classMetadataUnsupported ( ) ` with ` Platform. classMetadataUnsupported ( ) ` and added a static method ` classMetadata
added functionality to manage the visibility of the clear - all button based on user preferences to enhance user experience by allowing toggling of the clear -
updated the handling of the desired repository version in ClusterStackVersionResourceProvider. java and added a null check in HostStackVersionResourceProvider.
remove memoryleaktest from cluster
updated the URL construction in ServletTester. java to include the local host and port to ensure the correct IP address is returned based on the provided
added a check for MVDWAPI in ServerListener and modified settings for BAN _ DELETER and BAN _ DELETER
[ hotfix ] [ test ] add assert cluster size eventually test
added a singleton instance of FFIProvider and implemented JNA provider loading to enable dynamic instantiation of FFI providers based on the JNA system
tika - 5657 -- add test case for hierarchical file list
added null checks for mongoPersistentEntity and modified ID property retrieval logic to ensure robust handling of null entities and prevent potential null pointer exceptions
updated Position instantiation to use NODE _ LIST instead of 0 for directInputCount and directSuccessorCount checks to ensure accurate position handling based on
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and updated its usage in the ` Bithumb
updated log messages to include segment name in addition to segment name to enhance clarity of log output for better debugging
replaced hardcoded maximum number of parallel tasks with a constant for better maintainability
replace ArrayList with CopyOnWriteArrayList in FixedByteMutableForwardIndex. java and FixedByteSVMutableForwardIndex. java to ensure thread
fix a couple of miss license header.
added a null check for the destBuffer in FlipTransition. java to prevent potential NullPointerException when destBuffer is null
( chore ) camel - msv : remove @ ignore from camelmsvtest
change condition from'= ='to'>'in DelegationService. java to ensure correct handling of cycles in the delegation logic
updated RandomValueStringGenerator from 6 to 10 in JdbcExpiringCodeStore. java and adjusted the length check in CodeStoreEndpointsTests.
added a check for instances of UniqueConstraint in StandardObjectChangeFilter to ensure correct matching logic for unique constraints
replaced manual string splitting with a utility method for language description handling to improve code readability and maintainability while ensuring accurate language description extraction
don't log recoverable exception if it's a classcastexception
add support for ` reference ` query param in list image ( # 1941 )
camel - 14284 : camel - jms - allow to turn off bridgeerrorhandler
added conditional logic to handle cases with " # ifndef " and " # endif " in OpExclusionUtils. java to ensure proper
added multiple return statements in DatabaseCommand. java to ensure proper handling of database commands
[ honestpolitician ] fix typo in politician example
[ zeppelin - 4897 ] avoid npe in zeppelin - 4897
camel - 15836 : camel - restlet - allow to configure restlet port for restlet component.
removed redundant import statements for WALL _ SIGN in SchematicFormat. java to streamline code and improve readability
added a system property " hive. query. max. length " with a value of " 100Mb " in QTestUtil. java and removed
updated access modifiers and refactored HttpConfiguration initialization in WebServer and WebServer classes to enhance encapsulation and improve code clarity
rename method names from " writeHadoop " and " writeKafka " to " hdfsSink " and " kafkaSink " to improve clarity and
updated HiveConf to exclude " spark. app. name " from being set to " spark. app. name " to ensure the application name
# 628 : variable name change to reflect property name change from whitelisted to include .
simonstewart : don't call maximise ( ) when maximise a window
refactor ` LocalCellProviderFactory ` to replace ` getEmbeddedCellsBuckOutBaseDir ( ) ` with ` getMainCellBuckPaths ( )
added a condition to check for the presence of " entity expansions " in the exception message to ensure that the exception message accurately reflect
modify table offset and length assignments to use bitwise AND with 0x7FFFFFFF to ensure table offset and length values are correctly converted to hexadecimal
added an assertion to check if the form's customized is null to ensure that the customize method behaves as expected when customized is not set
refactor line coordinate handling in LineChartRenderer to improve clarity and correctness of coordinate checks
refactor flavor validation logic in AndroidBinaryDescription. java to ensure proper handling of non - existent flavors and improve error messaging
updated buffer assignment from ` offset ` to ` i ` in ` LwjglGL11. java ` to ensure the correct buffer is generated
; add test for property and class resolution.
added a condition to check if SHUTDOWNHOOK _ ENABLED is enabled before removing the shutdown hook to ensure that the shutdown hook is only
updated variable names and logging statements in FilterChainProxy. java to improve code clarity and maintainability by using more descriptive variable names
replaced Collections. sort with Arrays. sort and modified return logic in PercentileAggregationFunction. java to improve code readability and maintainability by using
added checks for schema loading in MetaDataBasedSQLCompletionProvider and modified mdTable assignment logic in QueryTypeAnalyser to ensure tables are only loaded
initialize baseType to null in DatabaseInfoRetriever. java and initialize literalPrefix, literalSuffix, and localizedTypeName in MutableColumnDataType. java
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
replaced instances of ` ObjectEqualEvaluator ` and ` ObjectNotEqualEvaluator ` with ` ObjectContainsEvaluator ` and ` BooleanNotEqualEvaluator `
updated references from " osx _ x86 - 64 " to " osx _ x86 _ 64 " in multiple test files to ensure
added sound effect handling in AllAppsView. java to enable or disable sound playback for improved user experience
updated the main method signature to throw IOException instead of Exception to improve error handling by providing more informative exceptions
added granularity support to the left axis in BarChartActivitySinus. java to enable granularity for data visualization
refactor version comparison logic in GdxSetup. java to improve code readability and maintainability
refactor ContextHandlerGetResourceTest to use MavenTestingUtils for file path handling to improve code clarity and maintainability by using MavenTestingUtils for
added a close ( ) method to Connection, JsonAsyncHttpPinotClientTransport, and ResultSetGroupTest classes to ensure proper resource management and
log4j2 - 1349 fix race condition in mockappender
[ beam - 4142 ] add checkstate to check if a resource be a directory
removed redundant import statements in IsometricStaggeredTiledMapRenderer. java to streamline code and improve readability
removed duplicate call to unbindHandle in ItemServiceImpl. java to streamline the code by eliminating redundancy
updated Config. java and Attribute. java files to improve code clarity and maintainability
simplified conditional logic in OtherActivityTouchConsumer. java to improve code readability and maintainability
refactor NavbarButtonsViewController to use Configuration for dark theme handling to improve code readability and maintainability by centralizing theme - related logic
replace abort with throw in PolyBenchLauncher. java to improve error handling by throwing the abort method instead of aborting it
replaced bootstrapMethodIndex, nameAndTypeIndex, and nameAndTypeIndex with memberIndex in ClassWriter. java to improve clarity and functionality of the
refactor findBox and findElementBox methods to include BlockFormattingContext parameter to enhance flexibility in handling block formatting contexts
replaced the instantiation of ` launchedProcess ` with a new method ` getStdErrorOutput ` and added error handling in ` WorkerShellStep `
added null check for the operator in CheckedListReplaceAll. java and implemented null handling in Collections. java and CheckedListReplaceAll. java
added a new ` _ testFill ` variable and modified the ` fillInterested ( ) ` method in ` SslConnectionTest. java `
added listener registration and removal methods in DeviceFlag and FeatureFlags classes to enhance functionality for managing device configuration changes
added an Ignore annotation to the GatewayRSocketIntegrationTests class to temporarily disable the test due to issue gh - 1114
removed import statement for MalformedURIException in StandardRequestHandler. java to streamline code by eliminating unused imports
[ fix # 3795 ] instructorfeedbackeditpage : focus on end date box
reordered synchronized block for ownTradesObservableSet and userTradesObservableSet in KrakenStreamingTradeService. java to improve synchronization
replaced ` System. err. println ` with ` System. out. println ` in ` ChangeableUrls. java ` to standardize logging
replaced ` RandomAccessSparseVector [ ] ` with ` Vector [ ] ` and added ` randomAccessRows ` parameter to ` SparseRowMatrix `
volume usage event : don't persist volume usage event if the volume pool id be null
refactor file input stream handling in Utilities. java to improve clarity and maintainability of file handling logic
[ beam - 8470 ] upgrade guava to v26 _ 0 _ jre to fix compile error
added a method to reset the internal state of the profilerClient and removed it from the existing method to streamline the code by eliminating redund
fix a nullpointerexception in the conference chat manager.
added a check to ensure the file is writable before proceeding with operations to prevent unintended modifications to the file
added a new ` FolderSyncActivity ` and modified ` DrawerActivity ` to handle folder synchronization to improve user experience by integrating folder synchronization functionality
[ hotfix ] [ network ] fix resource leak in sequentialchannelstatereaderimpltest
spanish tree normalizer : handle'%'instead of'% '
replace direct usage of ` reader. next ( ) ` with ` heapPointWriter. append ( i ) ` to streamline the code by
added a new LocaleRandomizer class and its corresponding test class to facilitate randomization of available locales in the application
tika - 3864 : add unit test for font printer metric
update version number from " 8.2 " to " 9.0 " in multiple files to ensure compatibility with the latest version of the software
refactor thread name setting in TCPTransport. java for improved clarity to enhance readability and maintainability of the code
updated the timeout value for the socketWrapper's read method in Http2AsyncParser. java to ensure proper handling of timeout values when reading
updated default delay value from 120 to 600 in TimelineMetricConfiguration. java to improve performance by adjusting initial delay values
updated error message to include previous name in SelectStatement. java to improve clarity of error message regarding restricted columns
added imports for DateTime and DateTimeFormatter in ThirdEyeJiraClient. java to enable custom date format handling for the issue
refactor priority generation to use a new PriorityGenerator instance to improve code clarity and maintainability by encapsulating priority generation logic
added a constant for maximum scan replacement code size and updated the condition for scalarReplace to ensure that scalarReplace is only applied when the entire class
added a new Media. DATE _ TAKEN category to the MediaColumns array and updated sorting order to include the DATE _ TAKEN category for
updated image drawing parameters in TexturePacker2. java to correct positioning to ensure correct positioning of images within specified dimensions
replaced ` FilterHolder ` with ` ServletContextHandler ` in ` JettyWebSocketServerContainer ` and related files to streamline the filter initialization process and
added shutdown calls for validateSignService, TransactionsMsgHandler, and NodePersistService to ensure proper resource management and prevent memory leaks
added ` RawJsonRequestBodyAnnotationProcessor ` class and integrated it into ` JaxrsSwaggerGeneratorContext `, ` Echo `, and
added a new method ` newTarget ( int target type, TargetExtension extension ) ` to the ` LoggerUtils ` class to facilitate
updated the constructor of BeanContainer to accept an ArrayList and added a new test class for BeanContainer functionality to enhance functionality and ensure proper functionality of
hbase - 25880 fix testmetricsregionserver. testblockcachecounthitpercent
camel - 15836 : camel - cachedoutputstream should release fileinputstream cache when exchange be complete
added device ID setting in TeltonikaProtocolDecoder to ensure proper handling of device identification
updated the method for reading the first line from ` Files. readFirstLine ( ) ` to ` Files. asCharSource ( ) `
added an override for the visitAssignop method in mmm Attr. java and created a new class mmm FailOver15. java with
added a flag to enable account handling in BaseActivity and modified onCreate method to conditionally call onCreate based on this flag to ensure proper handling of account
use heuristicallyfindmainconnectedcomponent to check if the component already contain a point.
updated DrillViewTable constructor to accept a list of paths and modified expandView method to include the path parameter to enhance flexibility in view handling by
patch by jbellis ; review by jbellis for netty.
updated the type in ObjectInputStream from double [ ] to short [ ] and added a new CloneArray class for serialization to ensure correct handling of
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE to specify the number of threads to use for low - level IO thread
fix for jdk 11 +
added validation for latitude range and longitude range in LatLonGrid. java and introduced a new test in TestLatLonGrid. java to ensure
simonstewart : implement expectedconditions. invisibilityofelementswithtext ( ).
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its implementation to include an additional parameter for purge
removed the ` SomeInnerClassReflector ` class and its associated test method from ` ReflectorTest. java ` to streamline the
updated the configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources "
updated log messages in HubChangeExecListener. java for consistency and clarity to improve readability and maintainability of log messages
added properties field with getter and setter methods to Link class and implemented corresponding tests in QuickLinksConfigurationModuleTest to enhance property handling and ensure proper
removed @ EqualsAndHashCode annotations from InitialConfig. java and added a toString ( ) method in YamlConfigFileDTO. java to streamline object
updated generic type parameters for SimpleForwardingServerCall and SimpleForwardingClientCallListener in AwaitableServerClientCallConfiguration. java to improve type
refactor class loading methods to use CallerSensitiveAdapter and improve caller class loading to enhance flexibility and maintainability of the class loading logic
replaced ` isEmptyOrNullString ( ) ` with ` is ( emptyOrNullString ( ) ) ` in ` RequestItemRepositoryIT. java `
replaced ` LinkedBlockingQueue ` and ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` and ` LinkedBlockingQueueEx ` to streamline code by using
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated imports and refactored imports in TimeStepdefs. java to improve code clarity and maintainability by using a more descriptive class name
fix spark _ isolated and spark _ recessive recipe
updated ` RestProxyFactory. createProxy ` to use ` getUri ( ) ` instead of ` ExchangeSpecification ` to ensure the correct URI is
removed redundant println statements in RecordGenerator. java to streamline code and improve readability
[ flink - 3447 ] [ connectors / kafka ] fix the auto commit behaviour of kafka consumer
removed lock release and streamlined output statements in LoggingExecutor and StandardLockService to streamline lock handling and improve code clarity
added @ SuppressWarnings ( { " unchecked ", " rawtypes " } ) annotations to AbstractAuthorizeTag and AuthorizeTagCustomGranted
patch by brandonwilliams ; review by jbellis for cassandra - 131
camel - spring - boot - auto - config - maven - plugin to resolve property from nested type
updated the currency pair from baseSymbol to counterSymbol in VirtExMarketDataService to ensure correct currency representation for the ticker
( chore ) camel - core : fix compile error
updated the method to retrieve the " testId " field to use the system's " testId " instead of a random UUID to ensure
added synchronization around date and number format parsing in DefaultJobParametersConverter. java to ensure thread safety when parsing date and number formats
updated package - info. java files for mmm and ppp packages to improve documentation clarity and maintainability
updated heightmap's heightScale from 256 to 256 to accommodate larger height values
removed instanceof check for String in SecurityConfig. java and replaced assertEquals with assertNotSame in SecurityConfigTests. java to simplify code and improve clarity in
updated the default value of dumpPartitionId from " dump - partition - id " to false to ensure that the dump - partition - id setting
added imports for TronTXOutput and TronTXOutputs in UTXOSetTest. java to enhance test coverage for TronTX
[ java ] fix false positive for unused variable in java 9
pdfbox - 4071 : avoid npe, a suggest by valerybokov
refactor JsrJobOperator to simplify parameter handling and add a new test for job restart properties to improve code clarity and ensure correct behavior of job
added a new boolean field ` disallowBatchOnCascade ` to the ` DatabasePlatform ` class to provide access to the ` disallowBatchOn
refactor principal assignment logic in JaasAuthenticationHandler. java to improve clarity and maintainability of principal creation
replaced MDCLoggingContext. clear ( ) with ExecutorUtil. newMDCAwareFixedThreadPool ( Integer. MAX _ VALUE ) to improve core
added a null check for mActionsView in RecentsView. java to ensure mActionsView visibility when fullscreenProgress is zero to avoid potential
refactor JobParameters initialization in RunIdIncrementer. java to handle null parameters safely to improve robustness by avoiding potential NullPointerExceptions
renamed BasicEntity and TestUtil classes to improve clarity and maintainability of the code
added tests for getMatchedDevices in SchemaRegionBasicTest. java to verify the expected number of matched devices for the schema region
[ 3.0 ] catch exception in metricseventbus when invoke metric event
added a new ` EigenvectorCentralityBuilder ` class and modified ` mSumChange ` calculation to handle cases where the maximum
updated registry port handling and improved string formatting to enhance code readability and maintainability
updated geometry data handling to use unsigned byte instead of int to ensure correct data type is used for geometry data generation
set the amplifier of the entity to 0 instead of 2 to ensure that the entity's amplifier is set to 0 for
refactor TubeCalc class to improve code readability and maintainability
change default value of'enabled'to false in ` HttpClientConfiguration. java ` and refactor connection handling in ` ServiceHttpClientFactory. java `
updated default group list type and refactored group validation logic to improve type safety and ensure groups are properly validated
updated bug8057791. java to reflect changes in bug 8057791. java and added a timeout in the test to address
fix # 322 : make the thread daemon to allow speedment application to exit via main method completion
remove the regex from the version string to simplify the code and improve readability
added reflection access check in JavaAdapterFactory to enhance type safety during reflection access checks
rename test to xtestjmsroutewithobjectmessage and add lazysessioncreation to the test.
updated initIOContext method to include recordReader parameter and refactored RCFileRecordReader initialization to improve handling of record readers and enhance code clarity
removed ClassLoaderHolder and LoaderManager classes to streamline code by eliminating unused classes
added a method to update workspace roots and modified file existence checks in FileStore. java ; refactored methods in ScanClassPath. java to
replaced direct calls to registerSessionCallback and unregisterSessionCallback with try - catch blocks to handle potential exceptions during session callback registration and unregistration
updated index names in TestBackwardsCompatibility. java to include " 23. cfs " instead of " src / test / org / apache /
[ hotfix ] [ runtime ] add akkarpcservicutils. createnonstart ( )
added a retry logic to set the maximum number of attempts in the TestExportSnapshot class to ensure that the export snapshot does not attempt to retry
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
added a new test class SslConnectionTest for SSL connection handling to ensure proper handling of SSL connections and prevent potential resource leaks
added validation for IPv4 and IPv6 address types in InetAddress. java and NetworkInterface. java to ensure valid IPv4 and IPv6 address
added a test for date serialization in the DefaultTypeAdaptersTest class to ensure proper handling of date formats in the collection
refactor Message class to improve code readability and maintainability
added debug logging for generated SQL in PutDatabaseRecord. java to improve traceability of SQL generation process
updated loop condition in TableOutput. java to correctly iterate over the maximum width based on the defined width
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
added priority handling for format strings in FormatStringChecker. java to improve priority management for format strings
[ java ] ignore non - final loop variable in for - each statement.
added PDF export version and full compression settings in PDFExporter. java ; updated sample path in PDFExporterTest. java ; changed background color to
added a new test class ` LdapUserDetailsMapperTests ` to validate role attribute mapping to ensure correct functionality of role attribute handling in LDAP user
make ldap connection timeout configurable
srcl ; fix license header ; add license header
refactor Pixmap, ManifoldPoint, and TextureRegion classes to improve code organization and maintainability
replaced instances of ` shouldCacheIterator ` with ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the ` shouldCacheIterator
added a condition to check if the handler state is invalidated in the gesture handling logic to ensure gesture handling only proceeds when the handler state
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex values for folder creation and old rotation Ys to improve accuracy of folder creation distance
updated import statements and modified property handling logic in OciConfigConfigSource. java to improve code clarity and ensure proper configuration handling
updated test cases in Testjsig. java to enhance test coverage for improved functionality
fix the mana not be able to be pick from the mana. close # 388
regenerate client with updated copyright year ( # 4382 )
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator. java to suppress warnings related to serialVersionUID
refactor validation logic in DataRegion. java for better clarity to improve readability and maintainability of the code
added new classes Switch21, Switch19, Switch21, Switch21, Switch20, Switch21, and Switch19 to enhance switch -
updated error message for String conversion in ComparableSubjectTest. java to improve clarity of error messages for better debugging
added standalone mode to the StreamHelper class and created a test class for standalone XML processing to ensure proper handling of standalone XML elements in the document
updated range check for ` numSets ` in ` Int2ObjectCache. java ` and added ` equals ` method in ` DoNotSub
removed duplicate sorting of security filter chain in WebSecurityConfiguration. java and added a new test in WebSecurityConfigurationTests. java to ensure that
removed TimeInForce. GTC from the OrderType parameter in BinanceTradeService. java to streamline the code by eliminating unnecessary
refactored FloatRangeRandomizer to extend AbstractRangeRandomizer and added validation for min and max values to improve flexibility in range randomization
[ hotfix ] [ rocksdb ] use \ t instead of \ 0
camel - 16400 : camel - jbang - create component documentation for camel - jms and camel - activemq
added error handling for retrieving the upper bound in SourceUtils. java and created a new TestGetBound class in SourceUtilsTest. java to
refactor LeafFilterFactory to use a new method for retrieving filter builder based on the Parquet type to improve code readability and maintainability by encapsulating
added a check to ensure ` originalArtifactName ` starts with ` SCOPED _ TARGET _ BEAN _ PREFIX ` in ` BatchPropertyBean
added a loop to read the certificate serial number and the server key in HttpsSegmentFetcher. java to improve certificate processing and enhance logging for better
updated default value handling in ` mmm Config. java ` and added a new class ` DnsFallback. java ` to improve default value handling
ww - 4672 - add exception message when write tag fails
changed the type of the ` success ` field from ` boolean ` to ` String ` in ` DepositAddress. java ` to allow for
modified the return statement in WindowsSecurity. java to include a try - finally block to ensure proper resource management and prevent potential memory leaks
removed " address " and " phone " scope from the ` CommonOAuth2Provider ` and its tests to simplify scope handling and improve test accuracy
refactor the selector update process to use CountDownLatch for thread safety to improve responsiveness and ensure thread safety during selector updates
added BigDecimal constants for hue and saturation in WLedBindingConstants and modified URL in WLedHandler to enhance color handling and improve
replaced the ` isValidCaller ` method with a ` VALID _ CALLERS ` set to improve clarity and maintainability of the validation logic
added a method ` caseJSRInst ( JSRInst i ) ` to the ` InstSwitch ` class to facilitate the handling of
add transactionmanager to subscriptionactivatingsubscriber so that it can be execute without a transaction.
refactor DBMSProcessor to use separate SQL statements for updating and inserting data to improve code readability and maintainability by reducing redundancy
contactiteminflater : contact elevation add via xml layout . contact _ list _ item : elevation value take from dimens .
refactor variable names from ` typeInformation ` to ` identifier ` for clarity to improve code readability and maintainability
refactor SandboxFileManager to use AccessController for file operations to improve security by using privileged actions instead of try - catch blocks
refactor ` GroovyParserVisitor ` and ` GroovyPrinter ` to handle ` Access ` correctly to improve handling of ` Access'expressions in Groovy parsing
updated warning message to include the exception class name to improve clarity of warning messages for better debugging
updated character handling in RecordInputStream and UnicodeString classes, and added a new test for UMLat reading and writing in TestUnicodeWorkbook to
added a test for downloading a file with non - norway characters in the name to ensure the download functionality correctly handles special characters in file names
replaced RuntimeException with CancellationException and added cancellation logic in AsyncResource and FingerprintScannerSample to improve error handling and provide better feedback
added a null check for statistics before processing the cache to avoid potential NullPointerExceptions when statistics are not initialized
added a test for removing an object from an explicit collection in MongoTemplateTests. java to ensure that the template correctly removes objects from an explicit
update copyright year for multiple Java files to reflect the latest copyright year to ensure compliance with current standards and improve code maintainability
[ hotfix ] [ table - common ] fix format error in coder. tostring ( )
added functionality to manage the visibility of the clear - all button fully revealed in RecentsView and PagedView to improve user experience by
added a new map for COMMON _ HMS _ PROPERTIES and refactored parameter handling in HiveIcebergMetaHook to improve
added a method to check if a remote address is already in use to improve error handling by checking if the address is already in use
added classpath argument to the TestNestmateAttr class to ensure the test class path is correctly set for different environments
updated the logger reference in Grep. java to use a constant for the verbose schema to improve code clarity and maintainability by using a more
add miss ` @ override ` annotation in interface method
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 43
changed fetchSize type from int to ThreadLocal < Integer > and updated its usage in QueryProcessExecutor and MemIntQpQpExecutor to
[ java ] remove backoffid strategy from embedpingpongong
[ java ] add a supplier to the return value of ` handleblockingcall ( ) `
added HDP _ VERSION handling in SliderAppsViewControllerImpl. java to ensure HDP _ VERSION is dynamically set based on configuration
added loaderClass and boolean jusl variables, and implemented close methods for ServiceLoader to ensure proper resource management and prevent potential memory leaks
added DeepCloner class and modified method signatures in ParameterizedRobolectricTestRunner, RobolectricTestRunner, and RobolectricTestRunner to
added binding for JetTY _ SHOW _ STACKTRACE property in ResourceBase. java to ensure that the JetTY _ SHOW
added a check to return null if the object type is an object to prevent potential null pointer exceptions
replaced occurrences of OopField with OopField in SystemDictionary. java to improve code clarity and maintainability by standardizing OopField
added support for RSAPublicKey and ECPublicKey in JwkKeyListView and JsonWebKeyEndpoint classes to enhance security by using Base64
useonlywritablebootimageheap instead of spawnisolates
updated MBeanServerMXBeanUnsupportedTest. java to improve test coverage for MBeanServerMXBean functionality
removed unused import for OrderClassLoaders in MavenPluginCollector. java to streamline code by eliminating unnecessary dependencies
replaced the ` Validator ( ) ` method with ` getOwnerAddress ( ) ` in multiple actuator classes to provide a way to retrieve the owner
add test case for http : / / issues. apache. org / activemq / browse / amq - 407
updated byte array handling for min and max values in BinaryClient. java to ensure correct representation of minimum and maximum values
added handling for empty index in ProtobufAnnotationSerializer. java to ensure that the node's empty index is set only when there are no edge
[ java ] remove correlation id from async command when a correlation id be already remove.
added ` saveConflict ` method calls in ` FileDataStorageManager ` and ` FileDownloader ` and ` FileUploader ` to handle file conflicts
updated Map types to use generics in ExecutionContext and related classes to enhance type safety and improve code clarity
removed unnecessary import of StrUtils in multiple filter factory classes to streamline code by eliminating unnecessary dependencies
added support for " remarksReporting ", " useInformationSchema " and " useInformationSchema " in the database driver to enable handling of
added a serialVersionUID to the mockedMethods set in SignedSupportingClassProxyFactory. java and updated the ignore annotation in PartialMocking
replaced ` Date ` with ` System. currentTimeMillis ( ) ` for timestamp handling in ` FileChangedExclusiveReadLockStrategy. java ` to
refactor ExecutionContext and LocalExecutor to use a wrapClassLoader for better type safety to enhance code clarity and maintainability by using a consistent class loader
added onBufferChanged method to TerminalView and updated buffer height calculation in TerminalTextViewOverlay to ensure proper handling of buffer changes and display new lines
added a check to ensure the pid is not empty before processing the configuration file to improve robustness of the processConfigFile method and prevent potential null
refactor freeze handling in OperationActions and OperationRegistry to support TVM freeze v2 to improve compatibility with TVM features and enhance functionality
added support for insecure tl configuration in TlsConfig and TlsUtils to enhance security by allowing users to enable or disable insecure tl connections
refactor JavadocTool to simplify location handling and add a new class T7091528 to improve code clarity and facilitate testing of source and
updated edge column handling in ExporterGDF to use edgeIdColumn instead of nodeColumn to ensure consistent handling of edge IDs across different data
added cascade option to the OneToOne annotation in DefaultUserInfo. java to ensure proper cascade behavior for the DefaultAddress entity
updated the ` hashCode ` and ` equals ` methods in ` Message ` class to use ` Arrays. equals ` for better object comparison
updated the ISO character set from "????? " to " \ u017D " in AsyncProvidersBasicTest. java to
[ hotfix ] [ rocksdb ] remove unused method in rocksdbcomparedkeybuilder
added a method to retrieve the static permissions of a ProtectionDomain and refactored the initialization of subjectPd to improve handling of static
added null checks for the recipe object in RecipeHandlerBrewery, RecipeHandlerElvenTrade, and RecipeHandlerFloatingFlowerRecipe to
refactor parsing logic in Parser. java to improve readability and maintainability of the code
added a new method ` showConnectionErrorPopup ( ) ` in ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter
added a new file ` Issue596. java ` to implement a test for handling unhandled requests in the application
updated bitwise operation from ` ~ ( 1 < < bitIndex ) ` to ` ~ ( 1L < < bitIndex ) ` to ensure
updated import logic in ImportLayoutStyle. java to improve code clarity and maintainability
added constants for TERM _ PROGRAM and MINTTY in ConsoleUIService. java and refactored input handling in ConsoleUIService
replaced the mock implementation of ` AccountManagerCallback ` with a new ` TestAccountManagerCallback ` and ` AccountManagerFuture ` to simplify the
replaced direct access to enclosingType with a call to wrapped. getEnclosingType ( ) to streamline code by directly accessing enclosingType from the
rename ` getconcatseparator ` and ` concatsuffix ` to ` concatseparator ` and ` concatsuffix `
nifi - 3672 : remove timeout from putallcallable. putall ( ) call
fix npe in mqclientinstance when consumer be empty or not
[ java ] generate source identity when send udp channel to the driver.
added a new file ` TopTabAction. java ` that implements the ` Presenter. Toolbar ` interface to provide a visual representation of the
camel - 16400 : camel - dynamic - dslouter now start the camel context if recipientmode be all _ match.
replaced TestCase with JUnit's @ Before annotation in AggregateItemReaderTests. java to ensure tests run in a clean environment
updated generic method signature for Procedure in AbstractObjectValueTypeMap. java to enhance type safety and improve code clarity
updated import statements and refactored WikidataEditCount handling in multiple Java files to improve code clarity and maintainability by using a
added a validation check for ` Short. MAX _ VALUE ` in ` OfflineSorter. java ` to ensure that ` Short. MAX _ VALUE
added an absoluteValueAccumulator to track absolute values and updated bug tracking logic to improve tracking of absolute values and ensure accurate tracking of min values
updated multiple dataset classes for consistency to improve code maintainability and readability
updated ` InvalidTopologyTemplateException ` to include acceptable values in ` ProvisionClusterRequest ` to provide clearer error messages for invalid credential types
updated random value generation in TestVectorUtil. java to improve randomness and prevent potential issues with floating - point values
changed the return type of the compareBy method from int to long and updated date comparison logic to improve accuracy of date comparison logic
added SSL handling in TestUtil and modified SSL property setting in PGPropertyTest to ensure secure connections and improve test reliability
enable safebrowsing by default for chrome
added null check before cloning the oldConfig in BaseMotorMount. java and RecoveryDevice. java to prevent potential NullPointerException when oldConfig is
added a condition to check if the transcoding is not allowed in DLNAResource. java to ensure proper handling of transcoding behavior based on
updated column retrieval logic to handle empty lists and added a test for diffing with an empty list to improve error handling and ensure that diffing
added a custom ignore tag handling in RobustJavaMethodParser to ensure proper handling of custom ignore tags in method parsing
( chore ) camel - jdbc : optimimisticlockingexception mapper should return true for optimisticlockingexception
fix npe when use @ configproperties ( ` ` parent'' )
updated PreferencesActivity to extend LimitlessIDEActivity and added onInsetsUpdated method to improve UI responsiveness and ensure proper layout during fragment loading
deleted the ` ClusterNodeInfo. java ` file to the class is no longer needed for the current implementation
corrected the return value in ShieldedTransferActuator. java to ensure correct functionality of the return statement
added debug output for Standard and Legacy ciphersuite in ServerHandshaker. java to provide clearer output for ciphersuites during the handshake process
refactor ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle single template selection to improve user experience by ens
added functionality to handle duplicate nodes with labels in ImportContainerImpl to improve error handling for duplicate node entries
added a new file R230303044ListSelection. java to implement a list selection functionality
; ; ;
added a null check for mWorkspace in Launcher. java to prevent potential NullPointerException when mWorkspace is null
added a new test method ` testCompoundPropertyTwice ` in ` StepScopePlaceholderIntegrationTests. java ` to ensure that the ` compound
[ flink - 197487 ] [ table - planner - blink ] fix row count calculation in statsrulesprocfactory
added path URL formatting and updated parameter handling in SpringBootDocBuildTemplate. java to improve URL generation and ensure correct parameter values are set
refactor notification handling to use a unified Hashtable for actions to improve code readability and maintainability by reducing repetitive code
updated DistBuildSlaveExecutor to use CachingBuildEngineDelegate and LocalCachingBuildEngineDelegate instead of DistBuildCachingEngineDelegate to enhance caching mechanism
updated RuntimeException to include a more informative error message for parsing errors to improve error handling and provide clearer feedback when parsing fails
added a conditional check for DEBUG mode before logging the filtered state of the widget tray
updated Console and Scanner classes to improve code clarity and maintainability
simplified the calculation of numTerms in SimilarityBase. java and added a test for discount overlaps in TestSimilarityBase. java to
added reflection - based checks for the " send " method in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to enhance test reli
added exit and quit methods with their respective getters to Global. java and removed them from ScriptingFunctions. java to streamline exit and quit
refactor LoanBrokerGateway and LoanBrokerSharkDetectorDemo to use a context for the LoanBrokerGateway to improve resource management and
rename methods ` getFirstUnverified ` and ` getFirstUndesiredInvocationStackTrace ` to ` findFirstUnverified ` and ` findFirstUndesired
[ vmware ] fix npe in vmwarecontext
updated assertions in ResinAcegiAuthenticatorTests to check for the first element of the authority list to ensure correct behavior of the getAuthorities
added a 32 - bit parameter to the bigIntegerToBytes method call in ECKey. java to ensure that the method correctly handles larger integer values
change default value of fml. disabledmods to fml. modstates
refactor account selection handling into a separate method to improve code readability and maintainability
update error message in CollectSink to include host and port information to improve clarity of error reporting for better debugging
added validation for unexpected empty result from validator smart contract call to improve error handling for unexpected empty result from validator smart contract calls
updated JsonValue handling in TexturePackerFileProcessor to check for null root to improve robustness by preventing null pointer exceptions
removed null check for getDataSourceJNDI ( ) in PooledConnection. java to streamline the code by eliminating unnecessary checks
updated TARGET _ MB, WINDOW, and WINDOW values in TestRefprocSanity. java and changed the buffer size in the rq loop to
added null checks for currentConsole and systemOut before writing to prevent potential NullPointerExceptions when currentConsole is null
[ hotfix ] [ kinesis ] set default credential refresh delay to 100
replaced AlertDialog instantiation with a method call to showInfoAlert to improve code readability and maintainability by reducing duplication
updated method parameters in T4501661. java to include " - package " option to enhance functionality by allowing packing for package -
updated Java version from 1.8. 0 _ 60 to 1.8. 0 _ 31 in ModulesTest. java and TestBadUseCases. java to
added a check to verify if a dependency is provided before adding it to the dependency list to enhance dependency resolution logic for plugins and shared dependencies
added functionality to manage a HashSet of ZipFileInputStream instances to ensure proper resource management and prevent memory leaks
renamed the constant DATAMATRIX to DATA _ MATRIX across multiple files to improve clarity and consistency in naming conventions
added logic to run active and idle actions based on the size of keyRanges to improve resource management and prevent potential deadlocks
renamed ` getCurrentyActiveConnections ( ) ` to ` getCurrentActiveConnections ( ) ` in ` BlobServer ` and ` BlobServerGetTest
replaced ` findAny ( ) ` method with ` findFirst ( ) ` and added a new method ` getAnnotations ( Class < T > type
added support for " ppc64 " and " ppc64le " architecture checks in Bits. java and ByteArrayAccess. java to ensure
updated RuntimeException message format in RoboMonitoringInstrumentation. java to improve clarity of error reporting for activity resolution issues
updated the waitWithDeadline method calls to use Long. MAX _ VALUE instead of MINUTES to improve reliability by limiting the timeout duration
refactor DateUtilTest to use Instant instead of Date and ZoneOffset for better compatibility to improve reliability and maintainability of date - time handling
refactor BytesRef class to improve code readability and maintainability
added a Toast message to notify users when the YouTube Player doesn't work on Lollipop yet to improve user experience by informing
added validation for unterminated dollar quotes and block comment in SQL statements to ensure proper handling of unterminated dollar quotes and improve error messaging
added a condition to check if mVibrator has a Vibrator before executing the vibration check to ensure that the vibration check
updated background color and modified arrow tail logic in DotRenderer. java to improve visual consistency and clarity for foreign key columns
added support for handling encoded Par configurations in HiveConf and SetProcessor to enhance flexibility in handling encoded Pars in the Hive configuration
pdfbox - 4892 : catch stringindexoutofboundsexception in pdfparser
refactor X509Certificate class to improve certificate validation logic
fix wavefrontconfig. geturistring ( ) ( # 3903 )
removed BitmapLruCache initialization and added new constants for loading images in NetworkedCacheableImageView to streamline image loading process and improve code
removed the ` View target ` parameter from the ` ofFloat ` method across multiple files to simplify method signature and improve code clarity
added a new constant for the controller version in DependencyBank. java and updated references in BuildScriptHelper. java and DependencyBank. java to
refactor LaunchedURLClassLoader implementation to improve code clarity and maintainability
replaced direct call to ` queryForObject ` with ` DataAccessUtils. requiredSingleResult ` and added error handling for incorrect result sets to improve
add cache - control and no - cache to admin - only filter
updated the warning message format to use English locale for consistency to ensure warnings are displayed in English locale for better user experience
modified the SolrQueryParser constructor to accept an Analyzer parameter to enhance flexibility in query handling
added copyright notice for Universal Gcode Sender ( UGS ) to ensure compliance with licensing terms and improve user experience
removed an unused semicolon from MainTest. java to streamline code for better readability
updated TypeContributions. java file to improve code clarity and maintainability
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of VoidColumnVector instances
updated method call from ` templateName ` to ` req. getName ( ) ` in ` StatementGenerator. java ` to ensure the correct request
removed the ` isTypeMatch ` method from the ` addConfiguration ` method to simplify the configuration addition process
[ java ] : add an offer method to the sessiondecorator that take a timestamp.
rename XForwardedRemoteAddressResolver methods for clarity to improve code readability and maintainability
added a new interface ` NoBootstrap ` and modified ` BootstrapInserter ` to check for the presence of ` @ NoBootstrap ` annotations to
hbase - 15836 tabledescriptorchecker should use tabledescriptorbuilder. max _ file _ size and tabledescriptorbuilder. flush _ size to
updated the calculation of ` numCommits ` to use ` requestedCommits ` instead of ` maxCommits ` to ensure accurate tracking of
added InvocationTargetException to the main method signature and replaced SwingUtilities. invokeLater with SwingUtilities. invokeAndWait to improve handling of InvocationTargetException in the main method
added a new method ` fillInOriginFromCache ` and updated references in ` CachingBuildEngine ` and ` CachingBuildEngineTest ` to
removed unnecessary imports from TransactionCapsule. java to streamline code and improve readability
removed duplicate call to markAsDone in HttpProtocol. java to streamline code by eliminating redundancy
added import for TezConfiguration and integrated it into the TezConfigurationFactory to facilitate the handling of Tez configuration in the code
added null check for keyPurposes in TimestampedSigner. java to prevent potential NullPointerException when keyPurposes is null
removed the condition check for ` mIsVisible ` in ` CustomPlaybackOverlayFragment. java ` to simplify the conditional logic for better readability
added a ` forget ` method to the ` OpenALSound ` class and modified the ` stop ` method in ` OpenALAudio ` to
added handling for discontinuity reporting in SimpleBasePlayer to ensure proper handling of discontinuity state during playback
added decimal formatting constants for various tick values in NumberAxis. java to improve precision in number formatting for better user experience
refactor TargetsCommand to streamline the creation of TargetGraphAndBuildTargets to improve code readability and maintainability
don't use ` `.'' in file name
add a config option to disable the full bounding box for ladder.
updated constructors and method calls to include compression level as a parameter in ApkBuilder and SignedJarBuilder classes to allow dynamic control of compression level during APK creation for better customization
added a test method to include static fields in the MirrorTest class to ensure that static fields are correctly included in the stub jar
added handling for BYTES data type in FieldSpec, MetricFieldSpec, Schema, SingleValueIterator, and SingleValueSet classes to improve handling of
updated formatting for error messages in multiple test files to enhance readability of error messages for better debugging
replaced ` hashCode ( ) ` method with ` Objects. hashCode ( id ) ` in ` Trade. java ` and removed unnecessary super ( )
added caching functionality to ` SpringDataJPAJoinFetchPaginationTest `, ` ForumService `, and ` SpringDataJPAJoinFetch
mary : fix for german locale
added validation for empty post body in SimpleHttp and implemented a test for null post bodies in TestHttpPlugin to ensure proper handling of null post
added dispatcher functionality to ClientSideSlb and updated ClientSideSlbTest to utilize it to improve resource management and ensure proper cleanup of client
added conditional logic to calculate v2 based on whether the texture is flipped to improve accuracy of v2 calculation based on whether the texture is
improve error message for discovery strategy factory
changed the initialization of contextPath to a default value if it is null to ensure contextPath is set to " NA " when it is null
[ jbrules - 4071 ] fix npe when load a class that have no resource
added validation for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap. java and introduced a new constant in SerializationHeader.
added functionality to check precompiled headers in the C++ source rule to enforcement of precompiled headers across different rule configurations
replaced ` WeakReference ` with ` AccWeakReference ` and added security context handling to improve security and ensure proper access control during image update operations
updated visibility of findNextIndex method in ObjectMap and OrderedMap classes, and modified return logic in OrderedSet to improve encapsulation and ensure proper removal
changed the value of isDirect from true to false in VertexBufferObject. java to ensure proper handling of direct data during rendering
remove redundant code to streamline code for better readability and maintainability
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 to allow external access to local coordinates
pdfbox 5764 : use input. limit ( ) instead of input. capacity ( ), a suggest by valerybokov
added a null check before removing the close hook from the context to prevent potential NullPointerException when the context is not initialized
updated border spacing logic in CellLayout and DeviceProfile classes to ensure proper spacing for scalable grid layouts
refactor ` ValueNumeric ` to use a custom ` ValueNumeric ` class for parsing numeric values to improve code clarity and maintainability by encapsulating
added a check for deferred authentication status in the FormAuthenticator class to ensure that deferred authentication returns _ deferred when the response is not deferred
updated command - line argument checks from " -- module - startd - ini " to " -- add - to - startd " and "
added a private variable ` HIVE _ DEFAULT _ PARTITION _ VALUE ` and modified the addition logic in ` DynamicPartitionFileRecordWriterContainer.
[ hotfix ] [ runtime ] add null check to streamnode. getoperatorfactory
updated conflict ID and group ID formatting in DefaultArtifact. java to improve clarity of conflict ID and artifact identification
camel - 16400 : camel - kafka : fix duplicate call to staterepository. getstate ( topic )
improve error message when a dependency be miss in the classpath.
fix ( jabber account registration wizard )
doc : generate sample code in the java microgenerator ( # 241 )
updated LumberjackMultiThreadTest to use a configurable concurrency level to improve test reliability by allowing more concurrent scenarios
added a check for the player's health and team is not dead in GlowPlayer. java and PlayerUpdateHandler. java to ensure
( chore ) camel - core : fix typo in javadoc
updated API key and secret key parameter descriptions in UpdateUserCmd. java to clarify the requirement for API key and secret key
replaced switch - case statements with a conditional statement in MfaProvider and IdleTimer classes to improve readability and maintainability of the code
refactor AbstractMetaDataExportMojo class for improved organization to enhance code readability and maintainability
added handling for ` SQLIntegrityConstraintViolationException ` in ` Hive. java ` to ensure that dropping tables with no materialized
corrected the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency with the current naming conventions
added a new class ` RoboExecutorService ` to the ` org. robolectric. util. concurrent ` package to indicate that the class
added subgroups to the menu when a group is root to enhance user interface by allowing subgroups to be added
updated the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check for path
patch by jbellis ; review by jbellis ; review by jbellis for cassandra
make cxxplatforms. getplatform ( ) return a ` ` flavor''
updated SQL syntax in CreateTable and CreateTableDeParser to use PlainSelect for parameter handling to enhance flexibility in SQL syntax for better handling of
set the alpha of the chat background to 64 to ensure the chat background reflects the original transparency setting
test ( ctiteratest ) : migrate ctiteratest to junit 5
added token clearing functionality in CharTokenizer, KeywordTokenizer, TokenStream, StandardTokenizer, and DocumentsWriter classes to ensure proper handling of token states and
pmd : fix bug 1379700 - astinitializer don't crash on block statement
added error handling for missing configurers in StateMachineConfiguration and StateMachineFactoryConfiguration classes to improve robustness by throwing a BeanDefinitionStoreException
danielwagnerhall for ` ` link ='' and ` ` link =''
updated maximum and minimum fraction digits for BigDecimal and added unit tests for float and decimal conversion to ensure accurate representation of float and decimal values in the
use currentscope instead of currentunitofwork in aggregatelifecyclelistener
replaced ` insetsIsTouchableRegion ` with ` TOUCHABLE _ INSETS _ REGION ` in ` TaskbarDragLayerController.
added a condition to check for the presence of tildes in the FencedCodeBlockParser to ensure that the parser correctly handles cases where the
added support for configuring socket timeouts in multiple classes to enhance connection stability by allowing configurable timeout values
added a sleep mechanism in ElementAttributeTest. java to handle potential interruptions during execution
added UTF - 8 character encoding to the BufferedReader initialization to ensure proper handling of character encoding in the input stream
refactor List class structure to improve code maintainability and readability
added constructors to ` AsyncFileImpl ` for ` Vert. xInternal ` and refactored context handling in ` AsyncFileImplTest `
added API annotation to CucumberEngineExecutionContext class and made it final in CucumberTestEngine. java to indicate that the CucumberEngineExecutionContext
return empty list instead of null when no nuage device be configure on physical network
rename ` retryUploads ` to ` retryFailedUploads ` and update related methods to improve clarity and functionality when retrying uploads
updated Java version handling in ConstantPoolTagTests. java to ensure compatibility with Java 9 and above
fix for ` ` - derror [ s ]'' and ` ` - warning [ s ]''
added a method ` removeAllHeaders ( ) ` to the ` AsyncHttpClient ` class to provide a way to clear the ` clientHeaderMap `
replaced Vector with ArrayList and updated related method calls to improve performance and simplify parameter handling
updated the default grid column from 4. 0 f to 3f to improve the visual appearance of the application
added a condition to check if ` forViewCreation ` is not true in ` CalcitePlanner. java ` to ensure that the query correctly
refactor date pattern handling in TestHS2HttpServer. java for clarity to improve readability and maintainability of the test code
bugfix : don't print exception in graphprinter
danielwagnerhall for firefox, and fix a couple of test failure.
updated the calculation of byteOffset in ByteBlockPool. java and added a test for too many allocations in TestByteBlockPool. java to
changed the visibility of ` firstEncoder ` and ` secondEncoder ` from static to instance variables and modified string formatting to use ` Locale. ENGLISH
added error handling for unexpected errors in TcpTransport to improve robustness by notifying listeners when unexpected errors occur
add @ suppresswarnings ( ` ` serial'' )
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` OcamlDebugLauncher `
added a confirmation dialog for saving and discarding changes in JabRefFrame. java to enhance user experience by allowing users to save or discard
refactor OAuth20DeviceCodeResponseTypeRequestValidator and NexmoSmsSender for improved error logging and response type validation to enhance error handling and
added a method call to check the index in DrillBuf. java to ensure that the index is valid before proceeding
added a new method ` initTableMapperJob ` in ` TableMapReduceUtil ` to handle input and output formats to enhance functionality by allowing
removed duplicate call to append in AbstractJRubyMojo. java to streamline code by eliminating redundancy
fix for nolyglot evals with no language
added deprecation warn and validate reserveCommitDuration in ReplicationHandler. java to ensure compatibility with Solr 7.1 and maintain consistent reserve commit duration handling
rename cache variable name to cache foreign key instead of cache variable name.
refactor ECKeyPairGenerator to use Object [ ] instead of long [ ] for key pair generation to improve type safety and eliminate unnecessary native method calls
[ hotfix ] [ runtime ] fix deadlock in suspend state
replaced instances of ` MainThreadInitializedObject ` with a direct instantiation of ` RotationTouchHelper ` to simplify the instantiation process and improve code
refactor port table filtering logic in UniFiControllerCache. java to improve code readability and maintainability
updated thread ID parameters from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to ensure unique thread identification
remove offer from offer list if it have already exist
don't assume tl version > = 0x1010100
added handling for Class instances in MockitoMethodInvocationControl and updated method calls in SystemClassUserTest and SystemClassUserCases to improve mock behavior
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` across multiple files to standardize exception handling across
replaced the import of DisplayUtils with a call to getIntent ( ). putExtra ( EXTRA _ FILE, ( OCFile ) null ) to stream
added error handling and improved file renaming logic in StoreDirect and StoreWAL classes to ensure proper resource management and prevent memory leaks
added a task snapshot retrieval process in AbsSwipeUpHandler. java and refactored the stopSwipePipToHome method in SystemUiProxy
added an ` hidden ` property to the ` CommandArgumentDefinition ` class and integrated it into the ` LiquibaseCommandLine ` class to allow
updated the port number from 8090 to 9092 in LoggingKafkaPluginTest. java to ensure the test connects to the correct remote address for
move catalog retrieval from styleinfoimpl to styleinfo
added permission checks for launching activities in InstallShortcutReceiver and Launcher to prevent malicious intents from being processed
added ` getId ( ) ` method to multiple tile classes and implemented it in ` TiledMapTile ` and ` TmxMapTile `
refactor Manager class structure to improve code maintainability and readability
updated JDBC connection and session initialization in JDBCExample and SessionExample to ensure compatibility with different JDBC versions and improve session management
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo. java and updated the diffOutputControl initialization to handle null values to
replaced ` putIfAbsent ` with ` put ` for ` registry ` in ` JmxRegistry. java ` to streamline the code by using a
planner benchmarker should log a warning rather than error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore. java ` to simplify the method signature
fix path to match minecraftprofile. game _ home
added tests for handling large response content in FastCGIProxyServletTest. java to improve test coverage and ensure proper handling of large response content
added a call to start the ReadInteractionsService to ensure the ReadInteractionsService can be accessed from the background thread
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader. java ` to ensure warnings are logged only when the
added logic to set a default value for the mail server port if it is null to ensure the email server port is set to a default value
added retry mechanism for SSL factory reloading in TlsUtils. java to improve reliability during SSL factory revalidation
updated date format from " yyyy - MM - dd'T'HH : mm'Z'to " yyyy - MM - dd'T
updated the assertion message in SpyingOnRealObjectsTest. java to clarify the absence of a private class due to mocking
added functionality to manage end on NL line detection in InlineBoxing and LineBox classes to improve handling of line endings based on context
updated filePathString assignment to handle null parent case to improve robustness by avoiding potential null pointer exceptions
removed unused import of DocCollection in TopicStream. java to streamline code by eliminating unnecessary dependencies
refactor NinjaServletContextTest to streamline input stream creation and add a new test for handling Windows 1250 multipart parameter to improve code readability and
updated endpoint configuration in AbstractCasEndpointTests. java to ensure proper handling of web endpoint exposure
added a check for dynamic graph in StatisticsControllerImpl. java to ensure the current graph is a dynamic graph to prevent runtime errors
fix : @ target ( { ElementType. TYPE, ElementType. METHOD } ) add default value to scope one
add option to suppress exception in jsonpath expression
replaced the instantiation of ControllerLeaderLocator with a direct call to create ( _ helixManager ) to streamline the code by eliminating redund
updated usage messages in CLHSDB and HSDB to include help information to enhance user experience by providing clearer usage instructions
refactored FaultTolerantStepFactoryBean and removed duplicate code in SimpleStepFactoryBean to streamline code and improve maintainability
[ hotfix ] [ test ] remove deprecate writefilesinkitcase
refactor ShadowAccessibilityManagerTest to initialize accessibilityManager directly and improve test clarity to streamline accessibility manager initialization and enhance test reliability
add analytics. group _ display _ id for flutter usage statistic
removed the ` SourcePathResolver ` parameter from the ` JavaSourceJar ` constructor across multiple files to streamline the code by eliminating unnecessary dependency
refactor enum data type handling in PostgreSQLDatabaseConnector to utilize a new PostgreSQLEnumDataTypeHelper class to improve code organization and maintainability by separating enum
updated the file path assertion to use ` File. separatorChar ` instead of ` logpath / spring. log ` to ensure compatibility with different operating
updated references from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in local work
added exception handling for dropping non - index tables in HiveMetaStoreClient to ensure proper handling of unsupported operations for non - index tables
added logic to update disabled flags for the overview actions view when visibility is not visible
added a specific highlighter for SH - REPL in the Repl class to ensure proper highlighting for non - Windows environments
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 458
replaced ` getRawPath ( ) ` method with ` toString ( ). toString ( ) ` for file path handling to simplify code and improve readability
removed a redundant call to getStage ( ). removeCaptureListener in SelectBox. java to streamline the listener removal process
changed the initialization of the _ metaDataComplete variable from true to false to ensure that the metadataComplete variable reflects the intended state
refactor task removal logic in RecentsAnimationController and improve bitmap creation logic in ThumbnailSearchResultView and WorkEduView to enhance code clarity and
added RELEASE flavor handling in JsBundleGenrule and corresponding tests in JsBundleGenruleDescriptionTest to ensure correct handling of release flavor in generated
updated vardefinit assignment logic for primitive types in Lower. java and added a new class T6500701. java with a test
added tests for handling crlf new lines in comments and comments in the AddImportTest class to ensure correct formatting of new lines in comments and
added a check to set the Liquibase hub mode in AbstractLiquibaseChangeLogMojo to ensure the Liquibase hub mode is
removed redundant check for'processedItem'in JsrChunkProcessor. java to streamline code for better readability and maintainability
added a check for the existence of the current linkDb before adding input path in IndexerMapReduce. java to improve robustness by preventing
updated the method for retrieving the setIndexerThreadPool in LuceneTestCase. java to ensure proper access to the specified index writer per thread
updated the SMS address format in GameCanvasImplementation. java to simplify the code and improve readability
replaced direct calls to ` executionsById ` with ` copy ` in ` MapJobExecutionDao ` and added a test for it in ` Map
added a new class DownloadTest for handling HTTP requests in the game to facilitate testing of the DownloadTest functionality in the game
fix checkstyle issue in util / format / format. java
updated error handling in GenericUDFRound. java to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and consistency in error
added a null check for selectedVersion in ManageDependencies. java to avoid potential NullPointerException when the selectedVersion is null
added multiple AntPathRequestMatcher instances in SecurityConfig. java to enhance URL matching functionality for better accessibility
added JUnit Ignore annotation to the TestConcurrentDppInserts class to temporarily disable tests that are not ready for execution
added a check for qualified class names before processing bean definitions to ensure proper handling of non - qualified class names in bean definitions
added an @ Ignore annotation to the HttpClientRedirectTest class to temporarily disable the test due to known issues
updated method names and formatting in OpenWebNetEnergyHandler and OpenWebNetThermoregulationHandler to improve code readability and maintain consistency
remove unnecessary try - catch block
deleted the SunToolkitSubclass. java file to the class is no longer needed for the current implementation
added a new method ` hasRotationOrScaling ( ) ` in ` DefaultRenderableSorter ` and updated translation logic in ` Matrix4 `
added a test for registering wrapper handlers before primitive types in TypeHandlerRegistryTest. java to address issue # 165 related to type handling in
added a method to convert alternate color space to a RGB image using a raster to ensure correct color representation for PDLab images
replaced references to ` CommonsApplication. HOME _ URL ` and ` CommonsApplication. MOBILE _ HOME _ URL ` with ` BuildConfig
camel - 16400 : camel - health - add fake health check for camel - http
added a null check for the position before retrieving the block state to prevent potential NullPointerExceptions when accessing the block position
added a new test method ` testAlterTableWithIndexesExtendPk ` in ` AlterTableWithViewsIT. java ` to verify the functionality
replaced the initialization of ` offset ` with ` off ` in ` FileFloatSource. java ` and modified assertions in ` TestFunctionQuery.
removed the ID from the fields collection in MongoRecordReader to streamline data management by eliminating unnecessary fields
added disconnect functionality in YeelightHandlerBase and DeviceBase classes, and modified connection handling in WifiConnection to ensure proper resource management and prevent
add support for ` ` auto _ increment'' and ` ` integer'type in the database schema to ensure compatibility with the InnoDB
added functionality to retrieve existing shared index informers in ` SharedInformerFactory ` and created a corresponding test in ` SharedInformer
bug cs - 15836 : fix template detail for private template
refactor ShadowBitmapFactory to use RobolectricBufferedImage for better handling of buffered images to improve code clarity and ensure proper resource management during image processing
removed deprecated constants from LauncherSettings. java to streamline code and improve maintainability
move everything from / org / drools / examples to / org / drools / examples
added legendTop variable and updated offset calculations in PieChart. java to improve legend positioning for better visual presentation
added a check to return early if the world transformation is not zero to improve performance by avoiding unnecessary processing when the world transformation is not zero
add a new class MaryScriptCreator for processing text files to facilitate the creation of text files with no space
nifi - 4672 : added restlistener. remote. source. host attribute to allow restlistener to access the remote host of the
refactor compaction logger initialization and ensure file deletion is only performed if it exists to improve resource management and prevent potential memory leaks
removed " xlink : href " from URL construction in ComponentDescription. java to simplify URL construction by removing unnecessary xlink : href
camel - 15836 - camel - aws2 - s3 : add timeout checker to stream upload producer
hbase - 25880 regionserver should log regionserver state when it be close
added null check for the span in Slf4jSpanLogger and improved log message formatting in DefaultTracer to enhance robustness by preventing
trimming of the active option string before adding it to the configuration to ensure the active option is removed from the configuration
added depth preference handling in DepthController. java to enable dynamic depth effect based on user preferences
updated the test to verify the success count of the overseer action to ensure that the overseer's statistical information is accurate
modified the return value of ` getXattrEnabled ` based on the ` majorMinorMicro ` and ` kernelVersion ` properties to ensure compatibility with
refactor methods in ExecConstants. java to improve code clarity and maintainability
removed the import and annotation for ScreenRecordRule in ThemeIconsTest. java to streamline code by eliminating unnecessary imports
added a method to set the scan attribute for paging in TableSnapshotResultIterator and integrated it in ScanUtil to enhance functionality by allowing retrieval of
updated the condition for setting lowRange in Request and RequestV2 classes to ensure lowRange is less than 100000000000L to avoid potential errors
updated cache size estimation in ` AbstractCachedSource ` and modified cache size calculation in ` AsyncWriteCache ` and ` WriteCache `
server : fix zoneid for host response
[ zeppelin - 4897 ] fix utf8 encode issue in livy interpreter
updated the filesystem removal logic to include zfs as a parameter to ensure proper handling of filesystems when removing files
replaced the ` Object obj ` variable with a ` json ` variable in ` HttpRequestBuilder. java ` to standardize JSON handling and improve code
updated polling timeout in SoftAutoCommitTest. java from 2 seconds to 5 seconds to improve test reliability by allowing more time for commit notifications
catch exception in listener. beforeevent ( ) and afterevent ( )
updated multiple Dial - related Java files to improve code organization and maintainability
updated error logging format in SyncQueue. java to improve clarity of error messages for better debugging
updated the version of the Ryuk container from 0.4. 0 to 0.5. 1 to ensure compatibility with the latest Ryuk features and
updated bootstrap path retrieval from ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` and added a new test hook
fix patchy jar path in fmlclientlaunchprovider
[ hotfix ] [ yarn ] remove yarnclient from yarnitcase
add stats per map to localmapstatsprovider
deleted the AllTests. java file which contained multiple test classes for the truth framework
added UNICODECHAR _ NONBREAKING _ HYPHEN and UNICODECHAR _ ZERO _ WIDTH _ SPACE constants in AbstractWordConverter.
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations should not star
replaced calls to ` getResultMappings ( ) ` with ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler. java ` to
added eventHandled flag to UIText. java to ensure proper handling of text input events
deleted the Controller. java file and renamed Weldby. java to WeldModule. java to streamline the codebase by eliminating unused
added a boolean flag ` monitorCaptureGroupsInEmptyCheck ` and modified conditional logic in ` TRegexBacktrackingNFAExecutorNode. java
added a protected variable ` liquibaseProLicenseKey ` and removed the retrieval of its value from ` System. getProperty ( ` LIQUIBASE
mondrian : fix bug where mondrian do not set the schemareader.
add - g option to generate debugging information
mondrian : fix typo in mondrianproperties. java
added support for retrieving friend paths in KotlinConfiguredCompilerFactory, KotlinLibraryDescription, KotlincToJarStepFactory, and KotlincToJar
added aliases for " BATK ", " BRAHMI ", " MANDAIC ", and refactored the
updated equality checks in ExecutionCommand to use `. equals ` and added a method to convert JSON string to ` ExecutionCommand ` to improve equality
updated Mockito library version to ensure compatibility with new features and bug fixes
refactor OCFile class implementation to improve code readability and maintainability
added a toString ( ) method to the SystemScope class to provide a clearer string representation of the SystemScope instance
refactor CSS parsing logic to handle percentages and percentage values more effectively to improve handling of percentage values and enhance error handling for invalid parameters
added a test for local index reverse scan in LocalIndexIT. java to ensure that the reverse scan returns all rows for the physical table
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` and updated test assertions to use ` assertEquals ` instead of ` assertTrue ` and ` assertFalse
updated toast messages to use localized strings instead of hardcoded strings to improve readability and maintainability of the code
removed redundant checks for xLow and xHigh in RendererUtilities. java and added a new test in RendererUtilitiesTests. java to streamline
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid data to improve code clarity and maintainability by using a dedicated method
added exception handling for adding a column in FileContentProvider to prevent adding the same column twice when upgrading from 24 - > 30
removed a debug print statement from AsyncServletIOTest. java to clean up the code and improve readability
refactor ConvertJoinMapJoin to use a new method for computing online data size to improve code clarity and maintainability by encapsulating online data size
modified the ` buildView ` method to accept a ` Context ` parameter and updated drawable resource handling to improve flexibility in managing view backgrounds based
added an ` assertAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : set gatewaynet to null if vpcid be null
[ flink - 10955 ] [ test ] skip flinksavepointtest on jdk 11
changed the order of ` @ ResizeMode ` and ` @ Cue. LineType ` and ` @ Cue. LineType ` to
updated loop condition to check for the index of actions before decrementing it to ensure actions are only decremented when the index is within the specified
replaced ` BaseExchange ` with ` BitmexExchange ` in ` BitmexStreamingExchange. java ` to align the codebase with the
[ ds - 3441 ] add integration test for relationshiprestrepositoryit
added null check for spatial before checking its type to prevent potential NullPointerException when spatial is null
replaced ` lastTokenFiltered ` with ` true ` in ` ConditionalTokenFilter ` and added position increment in ` FixedShingleFilter ` to
make unsafestorenode. stateafter ( ) more consistent.
replaced the superclass method from ` super. putAddress ` to ` io. putAddress ` to streamline address handling for improved performance
added an assertion to verify that the event repository is not empty to ensure that the event repository behaves as expected
removed parameter ` attributeLine ` and ` attributeCol ` from ` AuthenticationAttrProcessor. java ` to streamline attribute handling by eliminating unnecessary
added a null check for the key in MacOSXPreferences and created a new RemoveNullKeyCheck class to ensure that the key is not null
removed the ` setTypeface ` method from ` CodenameOneTextPaint ` to streamline type handling by avoiding runtime errors
added ` open ` methods to ` AzurePinotFS `, ` LocalPinotFS `, ` HadoopPinotFS `, and
simonstewart : remove deprecate fail ( ) method from webdriverrunner
removed the condition checking for item size in SolrRequestParsers. java to simplify the logic for better readability and maintainability
replaced instances of ` ResultObject ` with ` this ` in ` DefaultResultSetHandler. java ` to streamline the code by eliminating unnecessary
updated SQL syntax for creating tables in CreateTableGeneratorTest. java to ensure correct SQL syntax for foreign key constraints
refactor filtering logic in VectorizationContext. java to improve readability and maintainability of the code
updated the declaration of moveSelectorConfig in ExhaustiveSearchPhaseConfig. java to improve type safety and readability of the code
replaced the instantiation of ReorganizeTableStatement with a new modifyDataTypeStatement to streamline the code by eliminating redundancy
updated cluster name handling in SystemPropertiesUtils to use DEFAULT _ CLUSTER _ NAME instead of " defaultCluster " to improve clarity and consistency in cluster
refactor connection handling and improve error logging in PeerGroup and ClientConnectionManager to enhance error handling and provide clearer logging for connection failures
added checks for multiple style strings in Nano. java to ensure consistent styling across different input strings
use adventure nbt converter in schematicreader, fixeschematicreader and schematicreader
updated the return statement for the No # toString ( ) method in NoToStringOnStringType. java to clarify the purpose of the method for
updated the JVM version from " - Xmx64m " to " - Xmx32m " to ensure compatibility with the latest Java releases
refactor retryFailed method to return a FailureContext instead of an int and introduce DataProviderRetryAnalyzer and DataProviderRetryTest classes to improve error
updated return statement to use bandwidth instead of tokens [ 0 ] to ensure accurate retrieval of data based on the specified bandwidth
danielwagnerhall for selenium - backed selenium
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and replaced it with a call to ` getPublicKey ( ) `
updated method call from ` cancelExecution ( ) ` to ` cancelExecution ( ) ` to ensure proper handling of task execution
added checks for dialog opacity, shape, and background in Dialog and Frame classes to ensure that dialogs are only created if they are not undec
changed the ` state ` variable from non - final to final to ensure immutability of the ` state ` variable
replaced LettuceConnectionFactory instantiation with RedisStandaloneConfiguration for sentinel configuration to improve clarity and functionality when managing Redis connections
add ` ` lastSeendelayedmessage'' property to the chat room configuration.
replaced ` new Callback. Adapter ( ) ` with ` Callback. NOOP ` in the ` notifyContent ` method call to ensure that the
replaced direct calls to ` CreateShareOperation ` with ` OperationsService ` and added new constants for remote path, remote path, and UNSHA
removed unnecessary check for isInjected in BeanDefinitionInjectProcessor. java and added the @ Inject annotation in FieldPropertyInject. java to simplify
fix ` ` min plot height'' issue
added handling for NullPointerException in SmackIntegrationTestFramework to improve robustness by preventing potential NullPointerExceptions
tiff reader now support linked directory. patch by jbellis ; review by jbellis for cassandra.
added ENABLED _ LS mode handling in VersionTargetGraphMode and VersionedTargetGraphCache to improve dependency management based on version target graph mode
added checks for video format in DLNAResource. java to ensure proper handling of video formats in the renderer
refactor AutoMlClient. java for improved code organization to enhance maintainability and readability of the code
added functionality to load the PersistenceService from the LwjglNativesLoader class to enable loading of the PersistenceService from the Lwjgl
added support for escaping in CSVStrategy and enhanced exception handling for invalid encapsulators to improve handling of escaped characters and enhance error messaging for better debugging
updated ` ClientRegistrations ` and ` ClientRegistrationsTests ` to handle ` AUTHORIZATION _ CODE ` and ` OAuth2 ` grant
updated exception handling and added suppression logic in Throwable and SuppressedExceptions classes to improve error reporting and ensure proper suppression of throwable causes
added a query to test the retrieval of values in DerivedTableIT. java and modified the iterator initialization in ClientAggregatePlan. java to ensure
added support for the " RSquare " in the RegressionEvaluator and StreamExpressionTest classes to enable handling of the " RSquare " in regression
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 488
refactor SparkPlanGenerator to use a local variable for MapWork instead of casting to MapWork to improve code readability and maintainability by reducing casting
refactor image handling in PdfJndiReport and PdfSessionInformationsReport to improve code readability and maintainability by encapsulating image retrieval logic
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver. java and added a new test in JwtIssuerAuthenticationManagerResolverTests.
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test
added a boolean parameter to the ` get ` method in ` LLVMInteropType ` and updated related calls in ` CxxMethodsTest `
removed redundant sleep duration from AbstractBasicMockingIntegrationTest. java to streamline test execution by eliminating unnecessary sleep duration
added a new file ` KernCrash. java ` that implements a font rendering test to demonstrate the functionality of the ` KernCrash `
added a fail ( ) method to LinkedHashTreeMapTest. java to indicate failure in the test case
added a method ` getInterfaceAddresses ` to retrieve network interface addresses based on the presence of a prefix to enhance functionality for retrieving network interface addresses
fix housekeeping task not be cancel on shutdown
[ java ] remove redundant client address check in group transfer service.
fix typo in assert ' s javadoc ( # 1507 )
added a new test class ` Issue247Test ` to validate the functionality of the ` getTreeMap ` method to ensure that the ` getTreeMap
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and updated the ` doInBackground `
fix max age validation for today date
added new GrblLookups for alarm and error codes and improved command completion logic to enhance functionality for processing specific error codes and improve command completion
updated the method to return a dynamic label based on the number of screens to improve user experience by providing a clearer label when there are no screens
removed the ` count ` parameter from the ` getBittrexTrades ` method across multiple files to simplify method signature and eliminate unnecessary parameter handling
refactor ConsoleReader and MemoryHistory to improve handling of null prompt and buffer cursor to enhance code robustness and prevent potential NullPointerExceptions
updated the path construction for the ` jdkPath ` variable in ` JavaBuild. java ` to correct the path format for the application
replaced references to ` getDescription ( ) ` with ` getType ( ) ` in multiple files to standardize method naming and improve code readability
added a logger parameter to JFCModel constructors and methods to log warnings for better debugging and monitoring
added a validation check for the tolerance parameter in MaximumInscribedCircle. java to ensure that the tolerance parameter is non - negative to prevent
added methods to create and drop views in TestUtil. java and implemented a test for view privileges in DatabaseMetaDataTest. java to enhance functionality for
gracana do not run on aarch64.
added a new DesktopTaskbarUIController class and updated TaskbarManager to check for system features to ensure proper icon alpha for the taskbar
added task count listener to SearchModFragment and refactored ModItemAdapter to implement TaskCountListener to improve UI responsiveness and ensure proper
updated file naming conventions to improve code readability and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` to use ` Collection < ServerInterceptor > ` instead of ` Set < ServerInterceptor > `
updated DomainAwareServicesManager and ChainingServicesManager to extend ServicesManager instead of directly implementing ServicesManager
change resourcepackloader to use mod : instead of modfile /
update gapic - generator - java version to 2.1. 0 ( # 44 )
added grow ( ) and growY ( ) methods to Cell class to facilitate dynamic resizing of cells
refactor DefaultInputHandler to improve key binding handling to enhance code clarity and maintainability by using a more descriptive variable name
fix for http : / / issues. apache. org / activemq / browse / amq - 4237
replaced long array with byte array in MetricsMemoryTester. java and added memory fail count check in TestDockerMemoryMetrics. java to improve
deleted the JobParametersPrototype. java file to remove unused code that is no longer needed
added a ` securityEnabled ` boolean parameter to the ` MappingsTable ` class and updated its usage in ` TableResolverImpl ` to enable
updated references from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJC
changed the default value of the DUMP _ TO _ FILE constant from true to false to disable the dump - to - file feature for improved
use codecinfo. name instead of codecName in mediacodecrenderer
[ java ] : use logbufferdescriptor. isconnected ( ) to check if the buffer be empty.
added a check for no - info output options in BaseFormatter. java to ensure that the application correctly handles cases where no output options are present
allow ssl to be disable by default
added DOMOutputOptions to the DOMConverter class and updated the buildDOMSubtree method to include error handling for XHTML output
refactored assertions in Assert. java to improve code clarity and maintainability
[ java ] add ` ` retain'' option to publish event.
updated test case name from " FAILURE " to " Test1 " in EventSerializationTest. java to ensure the test case name reflects the
[ hotfix ] [ table - planner - blink ] fix typo in sqlgroupedwindowfunction
updated import statement for Parsed in LatexToUnicodeAdapter. java to ensure compatibility with the latest parsing standards
implement ssl _ ctx _ set _ timeout ( ) and ssl _ ctx _ set _ timeout ( )
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in AppModule. java and added a new ` Watcher `
[ calcite - 4071 ] use ansi sql dialect in sqlnodeconvertcontext
changed log level from debug to trace for no firmware update handler available for a thing with UID { }.
added tests for null date and timestamp retrieval in DateTest. java and GetObjectTest. java to ensure that null values are correctly handled and
refactor StringSubject and Subject classes to improve string concatenation to enhance readability and maintainability of the code
added unit test for retrieving repository permissions for multiple team models to ensure correct permission handling for multiple team models
introduced a new file Test7088020 . java containing a method that tests method type handling with MethodHandle to ensure proper exception handling for incorrect method type invocations
refactor audience restriction matching logic in Saml2ResponseValidator to improve clarity and correctness of audience restriction validation
refactor cache refresh logic into a separate method in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code clarity and maintainability by encapsulating
refactor StdErrLog to handle null error streams to improve robustness by avoiding potential NullPointerExceptions
added a new constant SEPARATION _ ORDER in Warning. java and integrated it into BasicEventSimulationEngine. java to track the number of
updated the parameter from'offlineTableConfig'to'realtimeTableConfig'in the queryOptimizer method call to ensure the query optimizer uses the
updated PhoenixHBaseAccessor to initialize ` hostMinuteAggregrateSql ` and added logic for enabling / disabling the ` hbase. normalizer
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added Bluetooth class handling in ShadowBluetoothDeviceTest and implemented Bluetooth class retrieval in ShadowBluetoothDevice to ensure correct Bluetooth class is set and retrieve from
fix check for whitelist match
[ flink - 2131 ] [ table - planner - blink ] fix error message for empty list
replaced the call to ` graphModel. getGraph ( ). readUnlockAll ( ) ` with ` graph. readUnlockAll ( ) `
updated coreNodeName assignment to use getCoreName ( ) instead of coreName to ensure correct core name is used for node properties
add backpressure for contact list refresh.
updated the TaggerParserPosTagCompatibilityITest. java file to improve test coverage for tag compatibility
added @ SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase. java to suppress codecs for SimpleText tests
added a check for both lastBaseTag and lastBaseTag in mmm Types. java and created a new class T7005671.
updated triangle calculations in DelaunayTriangulator. java and replaced EarClippingTriangulatorTest with DelaunayTri
refactor multiple Java classes including ArrayDeque, HashSet, LinkedHashMap, LinkedList, Set, SortedSet, and Vector to improve code clarity and maintainability
refactor JWTClaimsSet initialization to use a builder pattern to improve code readability and maintainability
refactor state management in StackOverflowCheckImpl. java to improve clarity and maintainability of state management
added shadow methods for ShadowSQLiteDatabase and ShadowContentValues in Robolectric. java and removed deprecated methods from ShadowContentValues. java to
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglCanvas. java ` and added a
replaced ` bytesPerDim ` with ` ArrayUtil. ByteArrayComparator ` in ` BKDWriter. java ` to utilize a standardized comparator for
replaced ` country ` and ` variant ` parameters with ` script ` and ` country ` and ` variant ` in ` Locale. java ` to
updated the method call from ` mIconCurrentTextAlpha ` to ` mIconLastSetTextAlpha ` to accurately reflect the last set
corrected a typo in the warning log message for clarity to improve code readability and maintainability
replaced ` LimitedModeLoginMockMvcTests ` with ` UaaJunitSuiteRunner. allSuiteClasses ( ) ` in ` Default
trim whitespace from excludedAgents and excludedPathPatterns in GzipFilter. java and GzipFilterDefaultTest. java to ensure consistent parsing of excluded
updated the assignment syntax for the _ outputType variable to improve code readability and maintainability
updated the default value of the regex implementation from JDK to JONI to ensure compatibility with the latest regex implementations
replaced ` LooperExecutor ` with ` Executor ` and refactored task handling in ` ViewCapture. java ` to improve code clarity and
fix for ticket : 51 -- ignore unknown voice style
added a check to create a parent folder if it does not exist to ensure that the parent folder is created if it does not exist
updated the IP address in the warning log message from " 0.0. 0.0 " to " 0.0. 0.0 " to " 127.0. 0.0 "
camel - jbpm : fix typo find by codespell on fossies. org
pdfbox - 4892 : remove unused code, a suggest by valerybokov
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` across multiple files to improve clarity and consistency in the codebase
updated multiple Java files for consistency and clarity to improve code maintainability and facilitate easier debugging
don't generate ` ` super'' annotation for implicit type parameter
[ hotfix ] [ runtime ] free memory in operatorcontext
updated error message formatting in QueryByExamplePredicateBuilder. java and modified replacement logic in StringQuery. java to improve clarity of error messages and
replaced ` long evictionCounter ` with ` AtomicLong evictionCounter ` and added an ` add ` method in ` ConcurrentLRUCache `
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWaitInJavaFX
fix npe in networkaddressmanagerserviceimpl when the destination be not a Inet4Address.
added RuntimeEnvironment import and set data root and source root in MainFrame. java to ensure proper handling of database data and source roots
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` constructors to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration
[ hotfix ] [ table ] fix typo in tableenvironment
refactored timeout handling in MapperBuilderAssistant and adjusted fetch size in ExecutorTestHelper to improve timeout management and prevent potential null pointer exceptions
replaced ` hangingTscTimeout ` with ` onTsTranspilationCompleted ` across multiple transpiler classes to simplify timeout handling and improve code
added imports for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration. java to enable serialization of GeoLocationRequest and
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` in ` ArtifactFilesystem. java ` and ` ArtifactFilesystemTest. java
tika - 3864 -- fix for tika - 361 and tika - 362, and add test for jxl. xls
test : prevent concurrent modification on a scriptable
don't try to write to a pipe when there be no data available.
added tests for ` hasValue ` and ` hasNamed ` methods in ` GuavaOptionalSubjectTest ` to ensure that the ` hasValue `
added VERTICAL _ SWIPE _ INDICATOR flag to BackgroundAppState and modified visibility logic in ShelfScrimView to enhance
added a null check for the nav variable in MatDefEditorlElement. java to prevent potential NullPointerException when nav is null
don't try to draw an absolute location if it's not an absolute location
updated error handling logic in ErrorOccuredInOnExceptionRoute. java to improve clarity and maintainability of error handling logic
replaced ` scheduleAtFixedRate ( ) ` with ` scheduleWithFixedDelay ( ) ` and changed log level from info to debug to improve
fix bug in singlepassandimagefunctionbasedlightinglogic. getirrunit ( ) and get pemunit ( )
added @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that are not ready for execution
updated import statements in GuiceFactoryTest. java to include specific dependencies to enhance dependency management and improve test reliability
added ` hasSystemFeature ` method to ` RobolectricPackageManager ` and implemented it in ` RobolectricPackageManagerTest ` to
added a new constant PROP _ PATH _ POSTFIX and modified the path handling logic in RCAFrameworkLoader. java to improve path handling and
removed a log statement indicating the start of the watch dog to streamline logging by eliminating unnecessary information
added a null check for enumerationValues in RADProperty. java to prevent potential NullPointerException when enumerationValues is empty
refactor inline handling logic in BoxBuilder and InlineBoxing classes to improve clarity and ensure correct handling of start and end text states
added functionality to collect and send telemetry data asynch and retrieve the public IP to enhance functionality by allowing users to interact with the my IP
refactor database type handling in UpgradeCatalog260. java to streamline code for better readability and maintainability
updated error messages in BaseTableDataManager. java to provide clearer guidance on permissions for the index directory and temp resources directory
[ hotfix ] fix typo in datasetutilities. java
added a method call to append the selector ID to the key to include the selected selector ID in the returned string
updated debug logging format and formatting in GouraudShadingContext. java to improve code readability and maintain consistency in formatting
updated visibility and alpha settings in StashedHandleViewController, TaskbarDragLayerController, and TaskbarLauncherStateController to improve visual
removed multiple instances of " SRP " from KeyExchange. java to streamline code by eliminating redundancy
added a check to ensure the connection is not an instance of JdbcConnection before executing the SQL query to prevent potential ClassCastException when the connection is
modified the logic for determining the file index in ServerMainTest. java to ensure the correct file index is used based on the configuration
added methods to retrieve media reorder MIME type in CodenameOneImplementation, MediaManager, and ImageIO classes to provide access to media recordering
changed the access modifier of the ` useShaders ` method from private to public in ` ShaderHelper ` to allow external access to shaders
druid adapter test : fix druid adapter test
swapped the order of parameters in the ZkStateReader instantiation to ensure correct handling of connection timeout configurations
removed redundant closing braces and reorganized conditional statements in XMPMetaParser. java to improve code readability and maintainability
added a new interface ClientRegistrationIdentifierStrategy with a method to provide a way to retrieve the identifier for ClientRegistration
replaced a conditional check for the presence of " < script > " in the result string to improve code readability and maintainability
corrected variable name from ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and added a new test class for
replaced null checks for BORDER _ TOP, BORDER _ BOTTOM, and BORDER _ LEFT with a new method borderIsNotSetOrBlank to improve code
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during reconnect
updated the ` attachProjectToConnection ` method to accept a ` HubRegisterResponse ` parameter to enhance functionality by allowing retrieval of project ID
replace ` ( 0xff ) & 0xff ` with ` Byte. toUnsignedInt ` across multiple classes to ensure correct handling of unsigned integer
fix checkstyle issue in opentracingtransactionproducer. java
updated the default value from CachingBuildEngine. DepFiles. ENABLED to CachingBuildEngine. DepFiles. CACHE to align with the new cache
changed the ` rangePannable ` variable from ` true ` to ` false ` to ensure that the ` rangePannable ` variable is set
refactor work mode switching logic in AllAppsContainerView. java to improve clarity and maintainability of the code
changed visibility of GLCapabilities, GcodeRenderer, FPSAnimator, and FPSAnimator fields in Visualizer2TopComponent. java to
added handling for CancellationException in FunctionTest. java to improve error handling for cancellation scenarios
changed constructors of JarFileResource from package - private to protected to allow subclass access to the JarFileResource class
refactor DefaultTrackSelector class to improve code readability and maintainability
added a sleep mechanism for unseqMerging in LevelCompactionTsFileManagement. java to ensure that unseqMerging occurs before proceeding
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest. java to ensure the test reflects the
added a new table name to the Post class and renamed test methods for clarity to improve code readability and maintainability by using a more descriptive
refactor methods in Unicode class to improve code readability and maintainability
modified the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
remove redundant call to delegate. onComplete ( ) in SendHeadersFirstPublisher. java to streamline the code by eliminating redundancy
add mixin for sseCustomerkey. builder.
added handling for BIG _ DECIMAL value in RangePredicateEvaluatorFactory to improve error messaging for unsupported value types
fix # # # # # # # # # # # # # #
removed unused import for Annotation in ParameterInfo. java to streamline code by eliminating unnecessary output
added support for acc3 streaming in PlaybackController and refactored seeking logic in VideoManager to enhance video playback functionality and improve
replaced the return statement to handle null values as a JSON response to ensure proper handling of null values in the HttpResponse
added @ SuppressWarnings ( " deprecation " ) annotations for Commons DBCP and FileUpload in DelegatingStatement and DiskFileItem classes to address
added a new test method ` testSelectInto ` to the ` IoTDBExtendTemplateIT ` class to validate the functionality of the `
refactor RTimerTree class implementation to improve performance and maintainability of the code
updated package structure from ` com. facebook. buck. rules. graphbuilder ` to ` com. facebook. buck. core. rules.
fix for issue # 335 : text with centered text don't look nice
updated client thread and scheduler initialization in ClientConnector. java to include unique names for client tasks and schedulers
refactor ViewResultsFullVisualizer to improve layout management and enhance error logging functionality
added description for phone numbers in ScimUserEndpointDocs. java to provide users with more detailed information about phone numbers
changed access modifiers of classes from public to private in DeleteFiles, IndexFiles, IndexHTML, and SearchFiles to improve encapsulation and ensure proper
added null checks for properties map and responseMap in JsonHttpPropertyRequest. java ; added error logging for HTTP responses in URLStreamProvider.
refactor SolrRequestHandler class to improve code readability and maintainability
added a condition to check if the parallel parameter is not equal to DEFAULT _ PARALLEL to ensure proper handling of parallel processing based on
cloudstack - 4131 : fix checkstyle violation
updated card handling logic in TerminalImpl. java to include SCARD _ E _ NO _ SMARTCARD to ensure proper handling of card
added SuppressSysoutChecks annotation to Test2BTerms. java to suppress system out for debugging purposes
camel - 16400 : camel - bindy to support multiple key - value pair in a single key - value pair
changed default values for " useOwner " and " useTimeStamp " from Boolean. TRUE to Boolean. FALSE to ensure default values are set to
updated the method signature of ` runAndCheckException ` from ` Runnable ` to ` ThrowingRunnable ` and modified exception handling to improve exception handling
added null checks for viaContext and viaContext in CrawlURI. java to prevent NullPointerExceptions when viaContext and viaContext are null
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws sdb
updated version number from 4.1. 1 to 4.1. 2 and refactored object retrieval methods in LiquibaseXMLTransformer to ensure compatibility with
http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 7 to 90
replaced the ` frame ` variable with ` smoothDelta ` and updated related calculations to improve clarity and accuracy of elapsed time calculations
added null check for paginator in HttpBatchReader and HttpScanBatchCreator, and introduced a new test for JSON pagination in TestPagination to
added null check for CompactionInfo client in Worker. java and implemented a test for findNextCompactRequest in TestWorker. java to handle
refactor fragment state management in ShadowFragmentActivity and add a test for onSaveInstanceState in FragmentActivityTest to ensure that onSaveInstanceState is called on fragments
updated formatting for consistency and clarity in BatchResourceFactoryBean. java to improve code readability and maintainability
added a new test method ` shouldParseSimpleAndroidColorReferences ` in ` ColorResourceLoaderTest. java ` to verify the functionality of color
added exception handling for NoResultException in AbstractJPAQuery. java and created a test for unique results in AbstractStandardTest. java to improve
refactor Community retrieval logic to use owner instead of fromCache to improve clarity and correctness when adding communities
updated the way the wallpaper depth effect is retrieved from LawnchairApp to ensure compatibility with the latest version of Lawnchair
updated import statements for ProcessTools in LocalManagementTest. java to improve code clarity and maintainability
corrected the parameter name from ` now ` to ` getHeadSlot ( ) ` in the ` updateTotalEnergyAverageUsage ` method to ensure
refactor ExtensionStack to handle null extensions gracefully and improve formatting to enhance code robustness and prevent potential NullPointerExceptions
fix observable. flatmap. hassubscribers ( ) return false when cancel.
added connection manager timeout configuration in MultiGetRequest. java and enhanced error handling in ServerTableSizeReader. java to improve connection handling and provide
reformatted code for better readability to improve code clarity and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter. java ` to align test class with the new
updated EdgeSyncCursor to include SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher, and modified inlineImage method to include tenantId parameter to
removed conditional check for uploading to cache in CachingBuildEngine. java and added a new test in CachingBuildEngineTest. java to ensure that
camel - 15836 : camel - netty - allow to turn off bytebuf by default.
updated the method call to use Warehouse's qualified name for altering partitions to ensure compatibility with different table naming conventions
updated the exception message to specify that the Vertx instance must be created with the preferNativeTransport option to ensure that the Vertx instance is
add test case for color type handler
refactor StreamEx class to improve code readability and maintainability
removed query hint for query timeout in SessionImpl. java to streamline the query execution by eliminating unnecessary timeout hints
added a new file ` StaticLoggerBinder. java ` implementing ` LoggerFactoryBinder ` to facilitate the use of ` StaticLoggerBinder `
replaced instances of ` familyMap. put ( family, list ) ` with ` familyMap. put ( family, list ) ` across multiple
added new and old orientation checks in TaskbarManager. java to ensure proper handling of different screen orientations
fix issue with jabber chatroom not escape xml.
updated the ` longStackPut ` method call in ` StoreDirect. java ` and added a new test class ` Issue265Test. java
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable instances and improve code clarity
fix executionflowcontroltest to work with java 8
updated type checks for audio and subtitle tracks in DLNAMediaInfo. java and refactored argument copying in FFMpegVideo. java
added support for unlimited write operations in NBWriteServlet to enhance functionality by allowing unlimited write operations
update total difficulty in BlockchainImpl and add a test for invalid block total difficulty in ImportLightTest to ensure that invalid block total differences are
removed redundant conditional check for current window seekability in DefaultPlaybackController. java to streamline code for better readability and maintainability
replace java. util. collections. synchronizedlist with java. util. concurrent. copyonwritearraylist
addedUniformAlloc initialization and adjusted position calculations in AllAppsView. java to ensure accurate positioning of the icon based on the defined dimensions
updated the condition to check for the presence of a colon in the key to ensure proper handling of colon - separated key values
added PrincipalResolver import and modified method signature in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration. java to utilize PrincipalResolver for principal
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse. java to improve handling of JSON data and enhance error handling
added a method to remove trailing slashes from a StringBuilder in IoUtil. java to ensure proper handling of trailing slashes in the StringBuilder
added methods to match patterns in the PatternsMatcher class and corresponding tests in PatternsMatcherTest to enhance matching functionality and ensure correctness through unit
hbase - 25880 improve error message in loadincrementalhfiles
added handling for EntityPotion and BlockFadeEvent in BlockFire. java to ensure proper block fading and event handling in the Fire
removed an unnecessary whitespace in the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintainability
refactor calculations for decreasePercent and increasePercent in ContractStateCapsule. java and adjust usage handling in ReceiptCapsule. java to improve
added checks for input and unready states in AsyncContentProducer and implemented a test for isReadyIdempotent in AsyncIOServletTest to improve
added a null check for the weightField parameter in DocumentDictionaryFactory. java to ensure that the weightField parameter is not mandatory and prevent runtime
added handling for plist variable expansion in AppleBundle. java and created a test for Info. plist substitution in AppleTestIntegrationTest. java to
fix laser turret not be able to turret
replaced instances of ` OrderCreateApiRequest. OrderCreateApiRequestBuilder ` with ` OrderCreateApiRequest. OrderCreateApiRequestBuilder ` to ensure
added a new file ` PreParseGrammarTest. java ` for testing XML schema parsing to verify the functionality of XML grammar preparser and parser
suppress doclint : missing warning in javax. swing. plaf. basic
added FontManager import and called overrideFont ( context, attrs ) in ExtendedEditText. java to enable dynamic font customization based on user preferences
added a null check for the current user in the AuthorizeTag class and implemented a test in AuthorizeTagTests to ensure that the tag
camel - 15836 : camel - aws2 - cxfrs : allow unsafe character in uri.
added an overridden method ` setUpData ( ) ` in ` JDBCGeometryTestSetup. java ` to ensure proper initialization of the ` setUpData
removed unused import statement for DumpHandler in MultipartFilterTest. java to streamline code by eliminating unused imports
[ hotfix ] [ runtime ] check if backendCloseableregistry be close before restore
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 588
use string. join for anticompact range logging. patch by jbellis
added display metrics handling in multiple test classes to ensure accurate retrieval of display metrics and improve test coverage
[ java ] : add cluster member id to service heartbeat counter.
updated the number of attributes based on the version check from 18 to 19 in TestThreadMXBean. java to ensure accurate tracking of total thread allocated
modified the calculation of ` result ` in ` CustomExpression. java ` and added handling for negative infinity, positive infinity, and NaN values to
fix for http : / / issues. apache. org / activemq / browse / amq - 407
added authentication logic to the AuthenticityController and created AuthenticityFormTest class to enhance functionality for authentication in the application
add assertion to ensure that the next node be alive before proceeding
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the client request implementation
refactor comparison logic in DefaultTrackSelector. java to improve code readability and maintainability
refactor RuntimeSerialization class structure to improve code maintainability and readability
don't crop the image if it's crop
refactored UnitOfWorkFactory implementation to improve performance and maintainability of the code
added a new variable ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated its usage in ` WidgetPreviewLoader ` and `
tika - 5657 -- fix for tika - 5652, tika - 5652 -- ensure resource name be set
updated URI construction in ThumbnailsCacheManager. java for improved clarity to enhance readability and maintainability of the code
added mark and reset logic for the input stream in the Source class to ensure proper handling of input stream marking and resetting behavior
mark AsyncProcessor, BehaviorProcessor, and BehaviorSubject as deprecated to indicate that these classes are outdated and may be removed in future versions
added functionality to control the visibility of error stacks in the error page configuration to allow users to control the visibility of error stacks for the application
bug 11000 : fix cleanup of domainid and accountid when account be delete
remove dead code from sparccompiler. emitforeigncall ( )
[ drools - 5. x api ] add support for legacy drl 5. x api
added a waitingForResult flag and modified the onRequestPurchaseResponse method to include a final modifier for clarity and ensure proper handling of purchase callback execution
[ hotfix ] [ test ] increase default timeout for unboundedsource system test
updated import statements and modified resource name qualification logic in ShadowAssetManager. java to ensure correct handling of resource names and improve resource name resolution
deleted two files MrefStat. java and MrefStat1. java to remove unused code to streamline the codebase
added a check for blank scope in DependencyInsight. java to ensure that the match's getScope ( ) is always set to " compile "
refactor error handling in BTCETradeServiceRaw. java to improve clarity and maintainability of trade history validation
use hamcrest assertion instead of junit in test
added a method to retrieve payment request URLs in BitcoinURI. java and corresponding tests in BitcoinURITest. java to enhance payment request
[ optaplanner - 383 ] improve error message for collection wrapping
removed duplicate setting of folder information in FolderPagedView. java to streamline code by eliminating redundancy
updated locking logic in JfrBufferNodeLinkedList, modified event handling in JfrChunkWriter, and removed unused methods in Target _ jdk _
replace stream. of ( values ). anyMatch ( Objects : : isNull ) with a for loop to improve readability and maintainability of the
refactor LintUtility to use InputResourceUtility for reading Linter configurations to improve code clarity and ensure proper handling of Linter configurations file
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post ( ) method to ensure UI updates run on
add miss patch to inventory. oninventorytick ( ).
added support for the OCELOT _ BABY event in PlayerEvents. java to enhance player event handling for improved gameplay
[ hotfix ] [ network ] add miss @ publicevolving annotation to state ttl config
added null check for x in PreparedStatement and adjusted index handling in Array and PreparedStatement to ensure proper handling of null values and improve code clarity
[ java ] provide more information about invalidated recordings in archive tool
replaced the escape character'\ n'with a direct newline character in StringBuilder to ensure proper formatting of newline characters in output
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest. java ` to enable JSON serialization for database snapshots
updated ` BroadTest. java ` to include a new method for removing transactions and blocks to improve test structure and ensure proper cleanup of transaction
added handling for " LensMaskOpen " and " LeLensMaskClose " channels in AmcrestHandler and DahuaHandler
removed ` NoSuchBuildTargetException ` from the method signature in ` BuckConfig. java ` and ` BuildRuleFactoryParams. java ` to simplify
refactor ChangeLogIterator constructor to accept a list of ChangeSetFilters to enhance flexibility by allowing multiple change sets to be processed
do not swallow guest exception in polyglotlauncher
use system property instead of env variable
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization and deserialization for these classes
added a condition to drop the parent until the element is a J. Annotation in SpacesVisitor. java to ensure proper handling of annotation initializers
add copy ( nearcache ) to servercacheconfiguration. copy ( )
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the hidden border behaves as expected on
updated references from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator. java ` and ` ProjectCommand. java `
replaced ` LIVE _ URI ` with ` PROD _ URI ` in ` KucoinExchange. java ` and added logging for exceptions
removed unnecessary concatenation operators in SpringResourceAccessor. java to streamline code and improve readability
added unit tests for Microgram and Microwatt units in SmartHomeUnitsTest. java and updated unit names in SmartHomeUnits.
updated the method for retrieving vertex mask from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` to ensure correct handling
deleted the Tls12SocketFactory. java file to the class is no longer needed for the current implementation
refactor texbibentryresolver to use a stream instead of a stream to improve code readability and maintainability
added a check for Robolectric version in ResourcesTest. java to ensure compatibility with Robolectric's legacy resource handling
added a check to return a new DatabaseDataType for FirebirdDatabase to ensure compatibility with Firebird database types
added null checks for ` dataSource ` and ` transactionManager ` before assigning them to avoid potential ` NullPointerException ` during initialization
add a package - info. java file to provide package - level documentation
updated test timeouts from 60, 000 milliseconds to 60, 000 milliseconds to improve test reliability and stability
no effective change - use try with resource
updated the scoring logic in TermQuery to handle cases when scores are not needed to ensure accurate scoring based on the specified scoring mode
replaced the use of ImmutableList. of ( ) with firstNonNull ( ) for metric updates in DataflowMetrics. java and DataflowMetricsTest. java
bug fix : don't deploy the vm if the vm be deploy to a vm
refactor ` DynamicPartitionPruner ` to use ` findTargetOi ` instead of ` getPrimitiveWritableObjectInspector ` to improve code clarity
added a method to remove build artifacts from an output set in ArtifactFilesystem. java and corresponding tests in ActionExecutionStep. java to ensure that
added logic to set the row selection interval for the selected row in ThrustCurveMotorSelectionPanel. java to ensure proper handling of selected
replace assertthatarraystoreexception with assertarraystoreexception in integration test
refactor PropertySource class to improve code readability and maintainability
added user agent handling in HttpClientBuilder and updated related methods to support user agent configuration to enhance flexibility in user agent management in the application
refactor MemorySessionStore to use computeIfAbsent for session creation and modification to improve code readability and maintainability by encapsulating session creation logic
updated assertions in IssueTest. java and changed the data provider's results type from HashSet to IdentityHashMap in Reporter. java to improve test
http : / / issues. apache. org / jira / browse / amq - 4237 - fix npe
add ` ` activationrequestdenied'' to character's event system
updated calculations and added @ Override annotations in GraphApplet. java to improve code clarity and ensure proper rendering of graphical elements
added a method to update the snapshot radius for task views in RecentsView. java and TaskView. java to ensure accurate snapshot radius updates
added logging for Swagger generation in StaticMicroserviceVersions. java to improve debugging and monitoring of 3rd party services
changed the return type of the put method from void to int in ArrayMap. java to ensure that the put method returns the index instead of
updated KafkaContainerCluster to use a more flexible startup timeout and improved error handling in KafkaContainer to enhance reliability and maintainability of the Kafka
( chore ) camel - defaultmq - pull : don't retry send message back if there be an error.
updated header checking logic in StaticServerHttpHeadersWriter to improve performance and correctness to ensures that headers are only added when no conflicting headers exist , preventing unintended overwrites
replaced Class. forName ( ) with ReflectUtil. checkPackageAccess ( ) in EventListenerList. java to enhance security by ensuring package access
added a custom adapter for the applications list in the ApplicationsFragment to enhance user experience by providing a custom adapter for the applications list
updated the applyIcon method to handle both instances of ` mIcon1 ` and ` mIcon2 ` to ensure that the icon view is
refactor DownloadStateCursor to use try - with - resources to ensure proper resource management and avoid potential memory leaks
refactor InsertStatement initialization and flow in BaseSqmToSqlAstConverter. java to improve code clarity and maintainability by using a more
added @ Test annotation to HibernateCursorItemReaderIntegrationTests and removed the execution context declaration in HibernateCursorItemReaderIntegrationTests
refactor DataInputStreamWithTimeout to use Future for poller handling and improve message reading logic to enhance thread safety and performance during message reading operations
added ENABLED _ TS mode to VersionTargetGraphMode and integrated ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency management
updated UpgradeCatalog150. java file to improve code organization and maintainability
r r r r r r r r r r r r r r r r r r
bugfix : update select geos when click on algebra view
refactor onboarding preferences handling in AppsDividerView. java and add nullability annotation in ActivityContext. java to improve code clarity and
replaced ` HdfsIndexOutput ` from ` IndexOutput ` to ` BufferedIndexOutput ` and added error handling for resource closure to improve resource management
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
removed redundant synchronized block in SocketChannelImpl. java to streamline the code by eliminating unnecessary synchronization
refactor ` addToRow ` method in ` TemplateTransformer ` and add a new test for multi - value transformations to improve handling of multi - value
added a method ` isWindows ( ) ` to check if the file is a Windows file and modified rename behavior to ensure compatibility with Windows systems
replaced ALPHABET _ STRING with CHECK _ DIGIT _ STRING in Code39Reader. java and Code39Writer. java to improve
refactor type handling logic in NodeGenFactory. java to improve clarity and correctness of unexpected value checks
removed redundant conditional check for stored fields in IndexingChain. java to streamline code for better readability and maintainability
fix ( sql ) : fix timestamp with nanos in where clause
[ fix ] lwjglcanvas crash when runnables be empty.
nifi - 11439 corrected checkstyle violation on gc property
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest. java ` to improve clarity and functionality of the wait mechanism
updated directory retrieval from ` null ` to ` " single ` in ` CachingDirectoryFactoryTest ` and ` RAMDirectoryFactoryTest ` to ensure
refactor UserData handling to use a filter count instead of a fixed size to improve clarity and maintainability of the code
updated FileWithTabs. java and T4994049. java to improve tab management and error handling
replaced conditional checks with a static method assumeTrue for WindowsTerminal in ConsoleReaderTest. java to simplify code and improve readability
removed the check for userInfo. isAdmin in GetFeedbackSessionsAction. java to simplify the logic by directly checking for feedback session attributes
updated the calculation for ` newSelection ` and adjusted the threshold for ` mMessageProc. mVelocity ` and ` mPosX ` to
bugfix # 222130, do not call notifyclientonresultsavailability ( ) when there be no profiled app thread
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog and modified encryption logic in DbConnectionDialog and ExportPanel to
replaced instances of ` Double ` and ` Float ` with ` String ` and ` parseFloat ` across multiple files to improve code clarity and maintainability
updated SegmentInfo instantiation and modified segment size calculation in DocumentsWriter. java ; added a new test in TestIndexWriter. java to improve segment
fix : armaturemodifier. validate ( modifierStructure, blenderContext ) fail when dvert be null.
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
replace direct instantiation of UnsupportedOperationException with a try - catch block to improve error handling by avoiding unnecessary stack traces
updated the method to return the average of the line height instead of the current height to improve accuracy of line height calculations
replaced the singleton instance of ` MainThreadInitializedObject ` with a direct instantiation of ` RotationTouchHelper ` to streamline the instantiation process
refactor quote handling logic in ` valStr ` and ` sbuffer ` to improve clarity and correctness of quote handling
replaced ` Long. valueOf ( s, 16 ) ` with ` IdConversion. convertToLong ( s ) ` and updated state tracing logic to
added a new test method ` testSmall ` and ` testBig ` in ` ServerDatagramConnectorTest. java ` to verify the functionality
updated the assertion message for the COUNTRY _ CODE _ s query in TestSqlEntityProcessorDelta. java to correct the expected output for the
refactor Cache class implementation to improve performance and maintainability of the code
rename ` ` email _ verified'' to ` ` ev'and update scope setting in ` ResourceSetRegistrationEndpoint ` to improve clarity and
removed unused imports and made seenDocIDs final in TestUnifiedHighlighterTermVec. java to streamline code and improve readability
added a new GUI for a GcodeTable with a button to add rows to the GcodeTable to facilitate the functionality of the
replaced WEBAPP _ CONNECT _ TIMEOUT constant with configuration parameter to improve flexibility in determining if the webapp URI is reachable
updated type declarations and improved error logging in multiple Java files to enhance code clarity and maintainability
updated TestMediaService. java file to improve media service functionality
removed the HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK constant from Messages. java to streamline the code by elim
add marketsprinttool to print fiat / crypto currency
added validation for component name compliance in EndpointAddressInterceptor to ensure that only valid characters and dashes are accepted to prevent runtime errors
added ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` methods to ` AccountProxy ` and ` HttpAccount ` classes to enhance
refactor ServerSpanThreadBinder implementation to improve performance and maintainability of the code
updated user pointer retrieval and adjusted padding values in the BulletPhysics and BlockItemSystem classes to improve accuracy of user pointer handling and enhance
replaced " Location " with " the _ geom " and added " number " with " the _ geom " and " number " in the builder
replaced ` callGasWord ` with ` gasCost ` in ` VM. java ` and removed unused imports in ` Program. java `
refactor methods in Parameters. java to improve code readability and maintainability
added a call to setIgnoreNullValues ( true ) in MultiplePiePlot. java to ensure that the piePlot ignores null values during plot
refactor bundle loading logic to streamline cache management to improve efficiency and readability of bundle loading process
pdfbox - 4892 : use'-'instead of'_ ', a suggest by valerybokov
fix npe in executescriptaction and accelerateableaction
added a userModified flag to the LoginSamlAuthenticationProvider class to indicate that the user has modified content
` ` null'' should be ` ` null''
replaced the ` onOpen ` method with ` setResponse ` and added a ` succeeded ` method in ` ConnectPromise ` and ` WebSocketClientConnection
added a check for SNOW tags in the BlockEventListener class to ensure SNOW tags are only present in version 1.8. 5
added a ` lastTradeId ` parameter to the ` CryptsyAdapters ` constructor and updated the ` CryptsyPublicTrade ` class to
added error handling for closing the HMS connection to ensure proper resource management and prevent potential memory leaks
glowserver : use random seed if seed string be empty
updated device profiles in DynamicGrid. java to reflect the new device profile to ensure compatibility with the Nexus 5 device
3. x : fix npe in refcount ( )
replaced direct instantiation of SynthContext with ReflectUtil's newInstance method to improve compatibility with modern Java practices
added a new constant WHITESPACE _ AROUND _ TEXTUAL _ OP and modified token checks in FormatVisitor and TokenFormatter classes to enhance formatting
added checks for file existence and file existence in SaveTask. java ; implemented tests for file deletion in SaveAndLoadTaskTest. java to
added synchronized keyword to multiple methods in MLogWriter. java to ensure thread safety during concurrent operations
http : / / issues. apache. org / activemq / browse / amq - 3802 - add support for mutable logevent
replaced ` LengthLike ` with ` NonNegativeLengthLike ` in ` PrimitivePropertyBuilders. java ` to improve handling of non - negative lengths
replaced calls to ` getUser ( headers ) ` with ` createContext ( ) ` across multiple resource files to standardize context creation across different resource
fix exception handler for jimple catch.
updated test result formatting and improved error message formatting in JUnitRunner and AndroidPlatformTarget classes to enhance clarity of test results and provide additional context for
updated the calculation of cacheSize to use maxMemory / 8 instead of maxMemory / 16 to optimize memory usage for improved performance
added a condition to check if ` start ` is zero in ` InvocationStageTrace. java ` and updated test cases in ` TestInvocationPublish
added work around for npe issue with fips keystore and empty stream .
replace hardcoded port values with a dynamic port assignment to improve flexibility and maintainability of the test code
ggb - 1953 fix for ggb - 1976 : panel dimension ben't update when drag
added checks for GL _ ARB _ compute _ shader, GL _ MAX _ MAX _ COMPUTE _ SHADER _ STORAGE _ BLOCK
refactor PopulatorContext class to improve code organization to enhance maintainability and readability of the code
don't send save notification when project be not in project data
added charset handling in ZQLJobManager to ensure proper character encoding is used when converting JSON to UTF - 8
added a check for non - empty arguments in the IkStepDefinition class to ensure that the argument is valid before proceeding
replaced string literals with static PREFIX in FakeOSSOHeaderDecoder. java to improve code maintainability and readability by using a consistent prefix
added @ Deprecated annotation to multiple Java files to indicate that the suffix strategy is outdated and should not be used
removed debug log statements related to Apache Derby driver class loading to streamline log output for better debugging
[ hotfix ] [ test ] fix flaky test in cep
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider. java to improve performance and readability of the code
added a check for the Liquibase hub mode before updating the properties file to ensure that the properties file is only updated when the Liqu
added new constants for Java VM success and failure keys in Constants. java and implemented a test method in TestDDRExtensionGeneral. java to
refactor font handling in FontFamily. java and add a new DebugFonts. java file to improve clarity of font request messages and facil
added HttpVersion import and modified dft assignment logic in NegotiatingServerConnectionFactory. java to ensure proper handling of HTTP version in
added a call to set the RateControl to NO _ RATE _ CONTROL in the SettingsBodyParser and MaxConcurrentStreamsTest classes to ensure
added a new file ` Test6741426. java ` implementing a GUI with a JComboBox and JTextField to test the behavior of the JComboBox
updated error message in CsrfAwareEntryPointAndDeniedHandlerTest to include the original error message to improve clarity of the error message for better debugging
added a null check for dbMgdPath and dbExtPath in HMSHandler. java to prevent potential NullPointerExceptions when madeManaged
added package declaration for S3CopyObjectRequest. java to ensure proper organization and access within the S3 service
replaced multiple instances of ` accentColor ` with ` preferenceCategory ` in ` SettingsActivity. java ` to streamline preference category setup and
updated error message for incorrect folder path in TemporaryFolderUsageTest. java to improve clarity of error message for better debugging
replaced occurrences of ` MAP _ TYPE _ INFORMATION ` with ` ClassTypeInformation. OBJECT ` in ` MappingMongoConverter. java ` to
added check for empty or null address in clientnetworkconfig. addaddress ( string )
added " keynectisrootca [ jdk ] " to VerifyCACerts. java to ensure proper handling of CAC certificates
change return type of compute ( ) from void to int.
added a conditional check for popup visibility in ModeToggleMenu. java to ensure menu behavior reflects the current state of the popup
pdfbox - 4071 : avoid arrayindexoutofboundsexception when read a ttf datastream
added a new file ` FinalizerInfoTest. java ` to test the ` finalize ` method of the ` MyObject ` class to ensure
camel - 16400 : camel - core - optimize rout engine to reduce object allocation
refactor BurningManService to handle custom addresses for compensation proposals to improve clarity and functionality when handling issuance requests
refactor StringSubject class implementation to improve code readability and maintainability
updated the byte array size from 1, 000, 000 to 1000, 000 and added an @ Ignore annotation in BatchValidateSignContractTest.
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in naming
updated query handling to replace " from : " with " from : " in RetweetActivity. java and Search. java to ensure correct query
removed a conditional check for forRebalance in SimulatorDiscoverer. java to streamline the code by eliminating unnecessary complexity
added a new POST endpoint for importing YubiKey accounts in YubiKeyAccountRegistryEndpoint. java and its corresponding test to enhance
refactor material parameter name from " texture " to " tex " in multiple files to improve clarity and consistency in asset handling
added null checks for ` cnt ` in ` paintOnTopLoop ` and adjusted padding in ` SideMenuBar ` to ensure proper handling of null
refactor AbiWriterProtocol class implementation to improve code maintainability and readability
added a null check for the subName before assigning the caption to avoid potential NullPointerExceptions when the subName is null
changed the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem. java to enable
added null checks for sim in CustomExpression. java and modified condition checks for custom expressions to improve code robustness and prevent potential NullPointerExceptions
[ hotfix ] remove unused method requestblindvotelistfromnetwork in votesultservice
added a new test method ` test testCase4 ` in ` PostgresTest. java ` to validate the functionality of the ` HikariDataSource `
updated substring method from double quotes to single quotes in SubtitleUtils. java and RemoteUtil. java to ensure proper handling of single quotes in
added a new constant LINE _ SEPARATORS _ RE and updated split method to use this constant to improve code readability and maintainability by using a
use atomicreferenceupdater on single implementor snapshot instead of hide the snapshot behind an atomic reference
added a null check for excludedSet in SimpleFacets. java and created a corresponding test in SimpleFacetsTest. java to ensure that
fix : ` bridgeimpl ` can not be cast to ` bridgeimpl `
replaced ` printHelp ( ) ` method with ` error ( " Unknown command : " ) ` in ` Ktab. java ` to improve
added a check for the existence of the output file in ANGLELoader. java to ensure that the output file exists before proceeding
added support for parsing date strings with'+'and'minus'characters in DateConverter to enhance date parsing functionality for better date handling
added assertions to verify the existence of a post by its Slug in SpringDataJPALockTest. java and PostRepository. java to
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related exception handling logic to
added a static import for SimpleClientHttpRequestFactory and set connection and read timeouts in ClientRegistrations. java to ensure proper handling of HTTP requests
added assertions to validate file existence and short name in SourceTest. java to ensure that the Source class accurately verifies the file's
remove usage of system property ` ` graalvm. version''
added methods to set access and refresh token validity seconds in ClientAdminBootstrap to ensure proper handling of client validity settings
update android api version check in Scene. java to ensure default SDK version reflects the current Android API version
refactored substring extraction and formatting in PropertyPlaceholderHelper. java to improve code readability and maintainability
updated the formatting of the Owner string in Resources. java to improve readability and maintainability of the code
solr - 12028 : fix flaky test in solr - 12028
removed BigInteger import and added it to simpleTypes in MongoMappingContext. java to streamline code by eliminating unnecessary imports
added a condition to check if ` buttonText ` equals ` getString ( R. string. view ) ` in ` HomeFragment. java `
added a condition to check if Mc0 and Noskip is not in sync mode to ensure proper handling of audio transcoding when
reduce the number of event loop for netty to 15
changed access modifiers of several methods in CountMin4 from abstract to protected and modified feedback handling in AdaptiveWindowTinyLfuPolicy
added external file field sorting functionality in ExternalFileField. java and created corresponding test cases in ExternalFileFieldSortTest. java to enhance functionality
updated error message from " Invalid URL " to " Connection error " to improve clarity of error reporting
updated event handling in OpenRocketSaver and added source ID handling in FlightDataBranchHandler to improve event representation and ensure proper handling of
changed the access modifier of the ` check ` method from private to protected to allow subclass access and improve encapsulation
added handling for SynchronizeFileOperation in FileActivity to improve user experience by providing feedback when synchronization fails
updated thumbnail generation to use URLEncoder for URL encoding to ensure proper handling of special characters in generated images
added a null check for the client property " cn1 $ infinite " in InfiniteContainer. java to prevent potential null pointer exceptions when the
updated the calculation of the ` total ` variable in ` IntHashSet. java ` to use a fixed value to ensure the total value reflects
added a check for locked state before updating the feed entry to ensure that the lock timeout is logged for each feed entry
refactor conditional statements for determining user principal types in SolarisAclFileAttributeView. java to improve readability and maintainability of the code
replaced the use of ArrayList with an array for edges in LatLonTree. java to improve code efficiency and readability by utilizing a sorted array
added IOUtils handling in ZkCLI. java to ensure proper resource management and prevent potential memory leaks
replace newline character with [ \ \ x0d \ \0a ] in BibtexParser. java to ensure correct formatting of comments in
added strict property handling in Main. java and corresponding tests in MainTest. java to ensure proper parsing of properties based on strict mode
micronaut : fix validation of custom constraint
camel - 16400 : camel - http4 should use http4 instead of http.
added a method call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet. java to provide a way to wait
refactor byte length validation logic in UBJsonWriter. java to streamline code for better readability and maintainability
updated test cases in ApplicationTest. java to improve test reliability and reliability
replaced String concatenation with StringBuffer to improve performance and readability of the code
replaced ` Type ` with ` RoboType ` across multiple files to standardize naming conventions and improve code clarity
[ java ] aeronarchive should return an abort action when there be no dispatch complete.
fix ( sql ) : add cachekey and cachelookup to the entityprocessor
added a new file PutfieldError. java to test the handling of IncompatibleClassChangeError to ensure proper error handling for incompatible class changes
fix npe in clientconnectionmanagerimpl # triggerconnect ( )
add log for memtables that have reach memtable _ flush _ after _ mins and memtable _ operations _ in _ millions
replaced instances of ` Collections. emptyList ( ) ` with ` Space. SINGLE _ SPACE ` across multiple files to improve consistency and maintainability by
removed an unused ` encodedLength ( ) ` method from ` Flyweight. java ` to streamline the code by eliminating redundancy
updated test cases in TestMethodResultMapBuilder. java to enhance test coverage for method result handling
added handling for " java. lang. Integer " and " java. lang / RuntimeException " in FindNullDeref. java to ensure
[ hotfix ] [ runtime ] remove unnecessary lock from tasklocalstatestoreimpl
replaced multiple instances of ` context. getResources ( ). getString ( R. string. just _ now ) ` with ` context. getResources (
added handling for DeepShortcutView in Utilities. java and FloatingIconView. java to improve drag behavior for DeepShortcutView and FloatingIconView
replaced JwtClaimValidator < String > with JwtClaimValidator < Object > and updated validation logic to handle different claim values and improve validation
rename ` buyQuickRate ` and ` sellQuickRate ` methods to ` getBuyQuickRate ` and ` getSellQuickRate `,
added CoverageConfig class and modified CoverageController to use it to improve coverage configuration and ensure correct class loading
added a check to ensure EventBus is not already registered before registering sticky event listeners to prevent potential errors when the event listener is not registered
added character validation logic to determine if the input string is ASCII - only to ensure normalization only occurs for non - ASCII input
[ hotfix ] [ coordination ] only allow migration task in jobcoordinationservice
added error handling for SQL updates in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL does not fail
( chore ) camel - test - infra - http : / / issues. apache. org / activemq / browse / camel - 2
added new attributes for OK attribute in HtmlTag. java to indicate that OK attributes are not allowed in 5
added a line to the HTML output in HtmlCoreReport. java to improve code readability and maintainability
updated the calculation of ` ramBytesUsed ` in ` DocSlice. java ` to handle null scores gracefully to improve robustness by avoiding potential
added a custom class ` StringHolder ` and updated ` CustomTypeAdaptersTest ` to utilize it for JSON serialization and deserialization to enhance the
added extraData handling in MergeCoordinator and created a corresponding test in MergeCoordinatorTest to ensure correct handling of extra data from mining parameters
added a static map of parameters for parsing file and output files and updated the method to include the number of arguments to enhance flexibility in argument handling
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and facilitate future updates
[ hotfix ] [ core ] fix checkstyle violation in migrationrulelistenertest
updated parameter names from'part'to'partOrList'in RestClientRequest and related classes to improve clarity and consistency in parameter naming
[ drools - 3441 ] fix twitter bootstrap resource name ( # 3442 )
removed the basicCategory method from SpanishTreebankLanguagePack. java to simplify category extraction logic
hhh - 147131 - fix uniqueentityloader to not call load ( )
hbase - 15836 remove cancelled element from taskpool in regionserverflushtableproceduremanager and regionserversnapshotmanager
added a check for zero dimensions in PGraphicsJava2D. java to ensure proper rendering when dimensions are zero
don't call fillpool ( ) in hikariconnection. getconnection ( )
removed the ` assureMatchVersion ( ) ` method from multiple filter factory classes and initialized it to ` LATEST ` to streamline
fix proxy generation for interface method
dRL parser : don't try to parse a comma at the end of a rule
refactor multiple subject classes for consistency to improve code maintainability and readability
added a check to throw an exception if the payload length is less than or equal to zero to ensure proper handling of invalid payloads in the
move publishsubscribechannel from'channel'to'dispatcher '.
updated execution ID from String to Long in multiple classes to ensure consistent handling of execution IDs across the application
added digests for width, height, and dimensions in ImageProcessor. java to ensure accurate digest generation for image processing
removed logging of the overlay version in SolrConfig. java and added necessary imports in SolrConfigHandler. java to streamline logging and enhance code
updated the delayUntil value in FileSyncAdapter. java from a fixed value of 24 to a dynamic delay based on the current time in the
fix checkstyle violation in segmentv1v2tsv3formatconvertertest
refactor ` addPathToMTree ` method to use a ` Path ` object instead of ` fullPath ` to improve code readability and maintainability by
updated DefaultPackageScanClassResolver to handle file paths and improved error handling for URL processing to enhance robustness of file path handling and provide clearer
[ hotfix ] [ table - planner - blink ] add timestampextractorutils
added a new class SpringSecurityAuthenticationSource to manage authentication data retrieval to provide a structured way to access the principal and credentials from the Spring Security context
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager. java to ensure compatibility with the latest Android
replaced the auto suggestion dialog with a simple form dialog to improve user experience by providing a clearer and more informative dialog
added a new test method ` testNewput ` in ` TxInputUtilTest ` and modified asset issue assertions in ` StoreAPITest `
removed the collection name parameter from the stream method in MongoTemplate. java to simplify the method signature for better readability and maintainability
updated zoom factor and added rounding logic for zoom in MapOverviewImageMouseHandler. java to improve zoom handling and ensure proper handling of zoom values
added DefaultSimilarity to KNearestNeighborClassifier and modified checkCorrectClassification method to return ClassificationResult instead of KNearestNeighborClassifier
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler. java to simplify query creation by using a constant score range query
updated method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor. java ` to ensure proper retrieval of
updated package - info. java files for mmm and ppp packages to improve documentation clarity and maintainability
added unit tests for ` requestMtu ` and modified the ` onMtuChanged ` method in ` ShadowBluetoothGatt ` to ensure
refactor TestPayloadNameRequestWrapper to use createServletOutputStream ( ) instead of directly creating ServletInputStream ( ) to improve code clarity and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService. java to improve error handling and logging for unsatisfied links
fix for http : / / issues. apache. org / activemq / browse / amq - 388
updated messages in Japanese and Chinese resource files to improve clarity and accuracy of resource descriptions
updated condition from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping. java ` and ` JDBCTypeMappingTest
added synchronized methods for adding and removing players in GenshinScene. java to ensure thread safety during player management
replaced the ` isScreenReaderActive ( ) ` method with a new instance of ` AccessibilityStateTester ` to improve code clarity and maintainability
added a new behavior check for command behavior in MenuBar. java and modified behavior checks in SideMenuBar. java to enhance user experience by allowing
removed the usage of Disposable in PoloniexManualExample. java and added disconnect handling in WampStreamingService. java to improve
added error handling for unexpected contract types in UpdateSettingForEnergyLimitContractActuator. java and updated assertion message in UpdateSettingForEnergyLimit
refactored URL handling in PostmanJsonBuilder and added protocol property in UrlBean to improve code clarity and enhance protocol management
camel - 5464 : added getter / setter for namespaceprefixref in soapjaxbdataformat
replaced direct calls to ` Range. parse ( ) ` with a new method ` isSameDay ( ) ` to improve code readability and maintainability
added a check for the Jetty Solr runner in BasicAuthIntegrationTest. java and updated security handling in ZkStateReader. java to ensure
added a price feed to the TradesChartsViewModel constructor to allow users to use a custom price feed
phoenix - 5642 : fix flaky test in phoenix
updated the handling of the ` from ` variable and the ` end ` variable in ` NativeString. java ` to improve clarity and correctness of
added file download functionality using FileDataStorageManager to enhance file handling and prevent unintended downloads
updated RandomAccessFile handling in MappedRawLog. java to ensure consistent logging behavior
added a method ` checkIfRegistryRunning ` to check if a registry is running and implemented a method ` deleteFileIfExistsWithRetry ` to
replaced calls to ` componentPresetDao. startLoading ( ) ` with ` componentPresetDao. startLoading ( ) ` across multiple
removed unused variables and added multiple @ SuppressWarnings ( " rawtypes " ) annotations in multiple Java files to improve code clarity and suppress warnings for
added a null check for instances in TraceFeignContext. java to prevent potential NullPointerException when instances are null
` ` ` ` ` ` `''''''''''') ) ) ) ) ) ) ) ) )
added transaction handling in ` AbstractStepFactoryBean ` and improved error handling in ` ItemOrientedStep ` and ` SkipLimitStepFactoryBean `
refactor CasManagementWebAppConfiguration to use DirectCasClient instead of CasClient and introduce a new CasManagementSecurityInterceptor class to
added functionality to edit the " add category " menu item in ListFragment and NavigationDrawerFragment to enhance user experience by allowing users to add a
renamed the method ` cancel ` to ` cancelMatchingOperation ` and changed the method name from ` observeDownloadWorkerState ` to ` observeWorker
pdfbox - 3017, pdfbox - 3017 : simplify code, a suggest by valerybokov
updated font size handling by replacing ` getFontSize ( ) ` with ` unusedSizeDp ` in ` TerminalView ` and ` TerminalBridge
added validation check for the fact object before modifying the frame to ensure that the fact is only modified when it is valid
updated multiple Java files for consistency to improve code maintainability and readability
replace return statement to create a new ArrayList instance to improve performance by avoiding unnecessary object creation
refactor Liquibase class to simplify lock handling and improve readability to enhance code clarity and maintainability by reducing redundancy
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to set the revision for microservice versions to ensure that the
refactor foreign key handling logic in TableRetriever. java to improve clarity and maintainability of foreign key and index handling
camel - aws2 - s3 : add uri - endpoint - override option to the aws2 - s3 component
removed unnecessary currency pair assignment in BitstampAccountService. java and added a method to retrieve user transactions in BitstampAccountServiceRaw. java
added error handling for component retrieval in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
refactor push method to return a boolean instead of void.
refactor LegacyAddress comparison logic to use BufferedReader for improved readability to enhance readability and maintainability of the code
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other packages
added a new method ` setupPushWarning ( ) ` and refactored snackbar handling in ` NotificationsActivity. java ` to improve
close channel if we can't replay the ioexception.
updated null checks for noWarnAttribute and validDaysResult in LdapPasswordPolicyEnforcer. java and removed unnecessary null checks to improve code
refactor DefaultAnnotationEngine and Stubber classes to improve code organization and maintainability
added an @ Ignore annotation to the MemoryManagerTest class to mark the test as ignored due to PHOENIX - 2840
nifi - 5657 : added timezone property to aboutdto
don't split local range if we don't split
removed exception handling for IOException during object reading to simplify code and improve readability by eliminating unnecessary try - catch blocks
remove redundant synchronized block in circuitmanagerimpl
replaced GdxRuntimeException with IllegalStateException in ShaderProgram. java to improve error handling for uniform fetch requests
[ flink - 3447 ] [ connectors / sink ] move source and sink getter / setter from sinkrunner to sourcerunner
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 558
refactor ContainerOrderFocusTraversalPolicy for improved focus traversal logic
bugfix : freehand should return an int instead of double.
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintainability
refactor connection handling in SchemaCrawlerMain and Executable classes to ensure proper resource management and improve logging clarity
bump default tl version to v1.2
corrected the spelling of " metadata " in IllegalStateException messages to ensure consistency and accuracy in error reporting
update audio playback logic to handle cases when mCurrentAudioQueuePosition is zero to ensure correct playback behavior when no audio queue is available
removed unnecessary debug log statements in HttpConnection. java to streamline code for better readability and maintainability
added support for transient fields in JpaPersistentPropertyImpl and its unit tests to ensure proper handling of transient fields in persistence
updated test assertions in UpgradeResourceProviderTest. java to validate the correct desired stack version to ensure correct behavior of the upgrade resource provider and validate
trufflevm : geteval ( ) now return an object instead of symbol
changed access modifier of ` isBinaryType ` method from private to public in ` SampleResult. java ` and modified logging statements in ` Proxy
updated the configuration key for TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE in HiveConf. java to
added priority handling for JavaProblem instances in JavaEditor. java and JavaProblem. java to ensure that the best JavaProblem instances are considered for
removed the DEFAULT _ OFFHEAP constant from DictionaryIndexType and its usage in BloomFilterHandler and DictionaryIndexType to simplify code and improve
updated line separator handling in TableWriterTest. java to ensure consistent line endings across different operating systems
refactor DebugHelper class to improve code readability and maintainability
added a boolean flag ` ownsTexture ` to the ` ParticleEffect ` class to control the behavior based on texture ownership
added new LDAP configuration properties to HiveConf. java to enhance security by allowing dynamic configuration of LDAP connections
fix checkstyle issue in util / datacatalog / datacatalog / datacatalogsearch. java ( # 487 )
refactor InputMethodManager usage in DetailActivity. java to improve code readability and maintainability
added a new test method to convert a map of primitive to map of integer to object in DataTableTypeRegistryTableConverterTest. java to ensure
updated size from 100 to 10, 50 in TestFileSystem. java to accommodate larger data sets and improve test reliability
updated error messages in ContentTypeManager. java for clarity to improve user understanding of triggering files for bug reports
refactor ` dropSequences ` method in multiple database classes to throw ` MigrationFailedException ` instead of ` MigrationFailedException `
added a null check for the status variable in MainWindow. java to prevent potential NullPointerExceptions when the status is null
updated the assignment of the variable'f'in DocumentBuilder. java to ensure the correct variable is used for creating binary fields
bugfix : node style be not apply to logical style
added a test for the ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` method in ` MongoTemplateTests. java
updated mathematical calculations in RowIndexSeekerV1, ByteBuff, ByteBuff, HFileBlockIndex, CellFlatMap, and Bounded
added stats tracking for app launches in Launcher and refactored broadcast intent handling to improve debugging and ensure broadcasts are only sent when the shortcut
added graphics rendering to the JavaSEPort class to ensure proper rendering of the graphics object
remove team member from the list of team member in instructorfeedbackresultspagedata
fix inventory. getwindowid ( ) return 0 instead of 0
added a conditional check for ` found ` in ` ConfigDescriptionRegistry. java ` to prevent potential ` NullPointerException ` when ` found ` is
updated ` ReloadableJava11ParserVisitor `, ` ReloadableJava17ParserVisitor `, ` ReloadableJava8ParserVisitor `,
added handling for blended tiles in TileMapRenderer to ensure proper initialization of blended tiles based on properties
updated class names from " SunJCE _ c " to " SunJCE _ jCE _ f " and " SunJCE _
improve getarea method , now also work on ( already ) close path
refactor lockOnSync initialization to use'this'instead of'currentThrottleRate'to improve clarity and maintainability of the code
pipe : fix ` ` super'' method of ` pipeeventbus `
updated timeout value from 1000 to TIMEOUT in ZkControllerTest. java to improve test reliability by allowing more time for the ZkController
added a test for passcode with client parameters in TokenMvcMockTests. java to ensure that the passcode functionality works correctly with client parameters
added constructors for LengthFilter, KeepWordFilter, and LengthFilter in TestRandomChains. java to ensure correct behavior of LengthFilter and
removed the JUnit Ignore import from RandomPlaneTest. java to streamline test code by eliminating unnecessary dependencies
use integer. tounsignedlong ( ) instead of integer. puti32 ( )
replaced direct calls to ` btCollisionObjectArray _ at __ SWIG _ 0 ` with ` btCollisionObject. getInstance ( gdxBulletJNI.
added a new constant for the build copyright year and updated the AboutDialog to include additional copyright information to improve copyright management and enhance the user interface
add getdistributedobjects ( ) method to jetclientinstanceimpl
added debug print statements for component and fin count in FinSet. java and updated expMOI values in MassCalculatorTest. java to
changed the value of TOTAL _ MEMORY from TOTAL _ MEMORY to MAX _ MEMORY in SmartDexingStep. java to accurately
changed catch block from MetadataException to Exception in StandaloneSchemaFetcher. java and corrected the parameter name in CreateAlignedTimeSeriesTimeSeriesPlan. java
use bsq's burningman api instead of bsq's one
updated JsonLoaderTest to use json for input and added ignoreException method to improve JSON handling and ensure proper exception handling
updated the capacity check from 1 < < 30 to 0x40000000 in ObjectSet. java to accommodate larger table sizes
added imports for CachedRow, DatabaseSnapshot, InvalidExampleException, and JdbcDatabaseSnapshot, and modified dataScale handling in ColumnSnapshotGenerator to
removed the @ AddToRuleKey annotation from several fields in AppleTest. java to streamline code by eliminating unnecessary annotations
added a try - catch block for SecurityException in FileHelper. java and TextHelper. java to handle potential SecurityException to improve robustness
added a new constant ` StyleWithMultipleAttributes ` and implemented tests for the ` resolveAttributes ` method in the ` ShadowThemeTest ` class
updated sheet name check in HSSFWorkbook and modified sheet creation logic in TestHSSFWorkbook to ensure correct handling of sheet names in the workbook
rename ` primaryColor ` to ` elementColor ` in ` ManageAccountsActivity. java ` to improve clarity by using a more descriptive method
updated DefaultEventBus to handle null replyHandler and simplified path resolver in DefaultPlatformManager to improve robustness by preventing potential null pointer exceptions
added support for binary collation in MariaDbDbmsType, MySqlDbmsType, and DbmsType classes to enhance compatibility with different
added a new method ` whenType ( Class < T > treeType ) ` that returns an ` Optional < T > ` to provide a
added a method to retrieve the user view destination and refactored navigation logic to streamline navigation handling and improve code clarity
replaced Response. ok ( Status. OK ) with Response. temporaryRedirect ( URI. create ( applicationSettingsService. get ( ). getPublic
[ hotfix ] [ kinesis ] improve error message for non - serializable deserializer
( chore ) camel - crypto : fix checkstyle warning
added a boolean flag ` created ` to manage resource cleanup in ` LeaderElectionTest. java ` to ensure proper cleanup of the `
renamed methods from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple files to clarify the purpose of
added a new method ` read ( EndPoint endPoint, Buffer buffer ) ` and updated the existing ` fill ( _ endPoint, _
replaced ` BufferUtil. allocate ` with ` ByteBuffer. allocate ` in ` ABCase1 _ 2. java ` to simplify code and improve
modified the ` prepareStreamsToUpload ` method to return a boolean value based on the presence of ` mStreamsToUpload ` to improve clarity
replaced direct method calls to ` getOrder ( ) ` with ` Integer. compare ( ) ` in ` AbstractConfigLoader. java ` to improve
added a new file PicOfDayAppWidget. java to handle widget updates to enhance user experience by providing access to widget details
cloudstack - 7131 : fix the bug in internalloadbalancervmmanagerimpl. getinternalofferingid ( )
updated import statements and modified join condition handling in HiveParserCalcitePlanner. java to ensure correct handling of non - equi conds and
add @ Deprecated annotation to multiple transformation classes to indicate that these classes are outdated and may be removed in future versions
added user credentials and password options to NodeToolCmd. java to enhance security by allowing access to remote JMX credentials
removed redundant scratch reference in Stemmer. java to streamline code by eliminating unnecessary scratch reference
modified the parameters for applyFromAppWidgetProviderInfo and applyFromResolveInfo to include mPageViewIconCache for better handling of multiple pages
ggbapplet : show 3d view if there be no 3d view
updated rotation positioning logic in GcodeRenderer. java to ensure the rotation does not exceed its defined range
added a new option for the WORKSPACE configuration in the daemon mode to allow users to specify a custom workspace directory
updated test file path from " test - classes / options. apt " to " test - classes / options. html " to ensure the test
replaced ` ScimUtilsTest ` with ` ScimUtilsTest ` and added ` PollutionPreventionExtension ` to enhance test reliability
updated the ` confimAccess ` method to accept a ` Map < String, Object > ` instead of a ` ModelAndView ` to improve flexibility
updated assertions in HibernateIT. java to include assertTrueEventually to ensure that the test accurately verifies the expected behavior of the test
refactor EventBusHook class to improve event handling efficiency
modified the MultiPaintEventTest. java file to enhance test coverage for multi - paint event functionality
removed the final modifier from the mNewScale variable to simplify code and improve readability
refactor SyncFactory class implementation to improve performance and maintainability of the code
added handling for unique key fields in LukeRequestHandler to ensure unique key fields are properly added to the finfo
added roundBorderColor attribute and updated color retrieval logic in BorderEditor, EditableResources, and Border classes to support rounded border colors in the
add @ trufflelection to make sure the exception be never part of the compilation.
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl
added logging statements for pending requests in GatewayRSocket and GatewaySocketAcceptor, and modified return values in PingPongApp to improve debugging
added menu item click listener for RecentChatFragment to improve user experience by providing a toast message when the action is under construction
changed ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
refactor symbol table operations from ` getTail ( ) ` and ` removeTail ( ) ` to ` push ( ) ` and ` pop (
updated URLs from " https : / / test. wikipedia. org / w / api. php " to " https : / common. w
refactor index generation logic into a separate method to improve code readability and maintainability
replaced ` Collections. sort (..., AnnotationAwareOrderComparator. INSTANCE ) ` with ` sort (..., AnnotationAwareOrderComparator. INSTANCE
added new DateTimePatterns array to FormatData _ HR. java to support various date and time formats in the application
added clearFocus ( ) method call to the clickedView to ensure focus is reset when the clicked view changes
updated spinner selection logic in DescriptionsAdapter and removed unnecessary checks in SpinnerLanguagesAdapter to improve user experience by ensuring the correct selected language is
updated time zone identifiers for West Samoa from WSST to WSDT across multiple language files
added native methods ` registerGlobal ` and ` accessFieldsViaHandle ` to the ` FastGetField ` class to enhance functionality for managing access
added default value handling for UNION and NULL types in ReflectData. java and TestReflect. java to ensure that null values are correctly
increase timeout for seda blockwhenfull test
added a null check before remapping the R class in ResourceMerger. java to avoid potential NullPointerException when remapping the resource class
add databaseversion constructor to hapifhirdialect
camel - 1860 : added connection close header to http producer
increased the socket timeout from 60000 ms to 120000 ms to allow more time for distributed operations to complete
added an assertion to verify the count of tickets that status'FREE'and final price'is greater than zero to ensure that the database
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter class implementation to improve code clarity and maintainability
refactor : use getfirstelementchild ( ) instead of getfirstelementchild ( )
[ optaplanner - 4071 ] fix look - up strategy for enums
[ java ] wait for node to be shut down to avoid race condition.
changed log level from warn to info for caching beans with no such field javax. el. BeanELResolver. properties to provide more informative
set the content type of the WebdavEntry to " application / octet - stream " to ensure that the WebDAV entry maintains
added ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and created unit tests for ` LazyTraceThreadPoolTaskExecutor `
added checks for minimum distance in DistanceOp. java to ensure that distance does not exceed defined minimum distance
renamed the ` required ` field to ` requiredLabel ` in ` AbstractUITag. java ` to improve clarity by using a more des
replaced the previous implementation of ` next ( ) ` with ` updateProgress ( ) ` in ` PurgingPartitionIterator. java ` to stream
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to utilize this method
added two abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide
added validation to ensure polygons contain at least 3 points to prevent ArrayIndexOutOfBoundsException when accessing vertices
replaced ` ObjectMapper ( ). new ObjectMapper ( ) ` with ` ObjectMappers. newDefaultInstance ( ) ` across multiple test files to improve
fix for can't be polynomial
updated handling of Unicode name reading logic in ExternalNameRecord. java and added a test for Unicode name reading in TestCaseRecordInputStream. java
fix typo in description
added logic to return login prompts based on the return value of the login prompt to ensure that login prompts are only included when the return value is
updated listener removal logic in AbstractController. java to ensure listeners are only removed if the specified listener matches the existing one
added a case for the toggleSpin action in PieChartActivity to enable a customizable spinning option for the chart
don't try to copy vhd to secondary storage if it fail to copy
; ; ; ; ; ; ; review
updated import statements and added a resize method for pressure in AndroidInput. java to improve code clarity and ensure proper resizing of pressure values
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and modified the existing ` @ VisibleForTesting ` annotation to improve
added JUnit Ignore annotation to ClientMapNearCacheTest. java to temporarily disable the test due to blocking PRs
fix hopperhock not be able to place item outside the bound box
added authentication dialog with username and password in SsoWebViewClient. java to enhance user experience by providing clear authentication options
added methods for deleting documents and deleting queries in TestStressIndexing2. java to enhance functionality and improve document management
[ flink - 22559 ] [ table - planner - blink ] ignore upsert kafka test
replaced direct calls to ` pg. types. get ( j ) ` with ` pg. types. computeIfAbsent ( j, k - >
added DeserializationFeature configuration to DefaultEntityMapper to enable single value as an array for JSON serialization
updated localization update messages to include " BE, UK, and SL. " to enhance localization support and improve user experience
[ bugfix ] fix default value for ` `. app. categories''
updated the ` visitExpressionInstanceOf ` method to accept ` RelExpressionInstanceOfContext ` instead of ` ExpressionInstanceOfContext ` to improve clarity and functionality
nifi - 3764 : added mime. type to the content - type attribute of the flowfile
updated ` BaseHapiFhirDao ` to use ` toProvenance ( ) ` instead of creating a new ` ResourceHistory
updated button identifiers from exit _ button to done _ button and added a searchable check in SearchBookContentsActivity to improve clarity and functionality of
[ hotfix ] fix checkstyle violation in natsconfiguration
refactor ` invalidateStalePartition ` method to accept ` List < PartitionNameWithVersion > ` instead of ` PartitionNameWithVersion ` to improve
bugfix : use buffer instead of boundedfifobuffer
replaced instances of ` ic _ group ` with ` ic _ chat _ bubble ` in ` UsersAndGroupsSearchProvider ` and ` ShareUser
replace ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver ` and its test to ensure consistency with volatile data type
updated method names and imports in MocksCreationTest. java for consistency and clarity to improve code readability and maintainability by using more descriptive
added a new constant DATA _ SOURCE _ NAME and changed the visibility of generateDetectionConfig method from package - private to public to allow external access
increased the timeout duration from 10 seconds to 30 seconds in awaiter calls to allow more time for phaser to run
removed the ` BuildSlaveFinishedStatusEvent ` class and its associated references from ` DistBuildRunCommand ` and ` DistBuildSlaveEventBus
bugfix : fix encode issue in vmwarestoragemanagerimpl. java
added test for depositing a workspace item without a workflow in WorkflowItemRestRepositoryIT. java and modified CollectionSubmitterBuilder. java to
make classloadersupportimpl. classpath ( ). stream ( ) distinct
removed the isBoxedPrimitive method from the Unbox class to streamline the code by eliminating unnecessary method
updated argument handling in SpecificCompilerTool. java and added a new test method in TestSpecificCompilerTool. java to improve argument processing and ensure
added a check for external tables and modified the directory deletion logic in HiveMetaStore. java ; added tests in TestHiveMetaStore. java to ensure
updated configuration parameters for asynchronous execution and added a new error message for busy operations to improve error handling and provide clearer feedback on asynchronous tasks
added a try - catch block around dismissing the dialog to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to improve service name and component retrieval to enhance clarity and maintainability of the code
added a variable ` diff ` to the ` OperationSetTelephonyConferencingSipImpl ` class to store the current configuration information for
add a clearentry ( ) method to flutterlogtree to clear the entire flutter tree
updated return statements in ChannelEndPoint. java to include checks for output and shutdown status to ensure proper handling of input and output shutdown scenarios
refactor SetNullableGenerator class for improved readability to enhance code maintainability and readability
( chore ) camel - reportincident : add servlet transport support to the reportincident example
refactor NettyRoutingFilter and FormIntegrationTests to use a new MediaType constant for content type handling to improve code clarity and maintainability by standardizing
added ` @ ApiOperation ` annotations to ` AbstractBaseService `, ` IBaseService `, ` MyEndpointWithInterface `, and
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window to ensure proper lifecycle management and disposal of lifecycle listeners
updated the FG _ FK color from 90, 0 to 200, 0 in UIUtil. java to improve visual quality by adjusting the color
fix npe in soundmanager. setrequired ( true )
fix fail secondaryindexmanagertest
pmd : add version to the about section of the preference page
[ hotfix ] [ test ] fix broken test in customserializationitcase
refactor MediaFormatUtil class to improve code readability and maintainability
added an overridden method ` isCellEditable ` that always returns false to provide a default behavior for cell editing
added a new method ` isOnlyPrintCommands ( ) ` in ` AbstractUnusedDependenciesFinder ` and modified message formatting in ` DefaultJavaLibrary
updated VocalTractModifier and VocalTractScalingProcessor to use a new variable for vscales and adjusted the vscales
updated import statements for BaseScalarUdfTest in BaseScalarUdfTest and TestGenericUDFConcat to ensure compatibility with the latest Hive
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison and hashing for instances of UaaAuthenticationDetails
testskeletoncontrolrefresh now use skinningcontrol instead of skeletoncontrol
rename NodeFilter to NodeCountFilter and update method names accordingly to improve clarity and consistency in naming conventions
updated the condition in NodeImpl. java to check if sync block size is less than or equal to SYNC _ FETCH _ BATCH _ NUM
updated state and type handling in DebugExpressionParser. java to improve clarity and functionality of debug expression parsing
updated dependency resolution logic in ExcludeDependency. java and Pom. java to improve accuracy of dependency resolution based on class scope
replaced ` tmp ( ) ` with ` dst2 ( t v ) ` and ` lerp ( T target, float alpha ) `
initialize the'args'array to an empty array to ensure proper initialization of the'args'array
refactor ` RustBinaryDescription ` to use ` ImmutableList ` for linker flags instead of ` List ` to improve flexibility in managing linker flags
fix test for travis and appveyor
added configuration for " hive. query. name " in HiveConf and modified logging in GenericUDTFGetSplits to enhance functionality by allowing
added import statement for ` java. io. File ` in ` TileAtlas. java ` to streamline code by eliminating unused imports
refactor EscapeProcessingOutputStream to use AtomicBoolean for closed streams and improve error handling in Gradle DaemonExecutor to enhance thread safety and ensure proper resource management during
updated the ` validateQuery ` method to accept an additional ` arguments ` parameter for error messages to enhance error handling by providing more informative error
updated INDEX _ VERSION from 1 to 2 and refactored getTree method to use RevWalk and RevCommit to improve code clarity and maintainability
[ flink - 11331 ] [ kryo ] add test that the default kryo registered class do not change.
added a null check before removing configuration type in BlueprintConfigurationProcessor to prevent potential NullPointerException when removing configuration type
updated handling of boolean values in MetaStoreDirectSql. java to utilize BooleanUtils for better compatibility to improve handling of boolean values and enhance error
added a call to hideCustomizationDrawer ( ) in Launcher. java to improve user interface by hiding the customization drawer
replaced occurrences of " warnings " with a constant TV _ KEY _ WARNINGS and refactored warning handling logic to improve code maintainability and
added logging for optimistic types and modified log level from finest to info to improve logging clarity and control over optimistic types
refactor Expect class to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created UnixSocketConfigurationStrategy class to enable Unix socket support for Docker connections
added JUnit Tag annotations to CloseableDoSFilterTest and implemented the testEvenLowRateIP method in CloseableDoSFilterTest to address fla
camel - 16400 : camel - core - add an exception for no active subscription
refactor Vectorizer to improve handling of TezTask and MapWork to enhance code clarity and maintainability by using more descriptive method names
log4j2 - 1010 : add layout parameter to stringappender and logdivertappender constructor
bug report : gui object do not get update when gui object be null
fix linkage. isweak ( ) for weak function.
updated multiple Java files for consistency to improve code maintainability and readability
add test case for defaulttransactionthreadlocal. get ( )
added a check for invalid operation handle in HiveStatement. java to improve error handling for invalid operation handles
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL to ALTER _ TABLE
camel - 15836 - create an aws secret manager component - aws secret manager component - aws secret manager
refactor methods in SimpleTree class to improve code readability and maintainability
updated the return statement to include the exception message in the UserREST response to improve clarity of error reporting for email sending
added a boolean parameter ` subTree ` to the ` fromContent ` method and updated its implementation to enable handling of nested structures in the result
updated column width calculation in HSSFSheet. java and added a test for column width in TestHSSFSheet. java to ensure correct column
updated the ` configPath ` parameter in the ` Commands. less ` method call to include ` configPath ` as a parameter to enhance functionality
replaced ` Set ` with ` Collection ` in ` DotWriter. java ` and changed the type of ` tables ` from ` Set ` to
updated the default Docker image version from " quay. io / testcontainers / sshd @ sha256 : 18aa929c65
don't allow hostid to be null in agentmanagerimpl # checkhostid ( )
refactor the handling of multi - valued columns in DefaultGroupKeyGenerator to improve clarity and maintainability of the code
renamed the test method from ` testSeekNegative ` to ` testSeekingExceptions ` and refactored the seek method to improve clarity and
fix bcsilicon recipe not be able to upgrade
rename method ` put ` to ` putObject ` in ` GraphHopperConfigMixIn. java ` to improve clarity and consistency in
modified visibility logic in CellLayout and refactored drag exit handling in Workspace to improve code clarity and maintainability by encapsulating drag exit logic
replace ` rewriteFunction ` with ` originalBody ` in ` ModifyRequestBodyGatewayFilterFactory ` and add a test for empty upstream request bodies to improve
added a check for package accessibility in multiple finder classes to ensure proper handling of package accessibility in the code
replaced logger. warn ( ) with logger. trace ( ) in LoggingHandler. java to improve logging granularity
fix #348 : handle wildcard in whitelist path
added gallery image functionality in GalleryActivity to enhance user experience by allowing users to view gallery images
added a singleton instance for MongoDBService in MongoDBServiceFactory to ensure a singleton instance is created before use to avoid potential null pointer exceptions
added tests to prevent code formatting for boolean values in InlineConstantMutatorTest. java to ensure that boolean values are replaced with true or false
added a Blackhole parameter to the decode method in RecordTest. java to enhance functionality by allowing a blackhole for deserialization
fix : update gapic - generator - java with mock service generation fix ( # 86 )
( chore ) camel - knx : fix getallunitstrings ( ) and getgroupaddress ( )
removed the call to dbManager. getWitnesses ( ). clear ( ) in ManagerTest. java to streamline the code by elim
[ hotfix ] [ jdbc ] log sql exception when abort
replaced ` getScriptStackString ` method with ` delete ` and introduced ` getStack ` and ` setStack ` functions using ` ScriptFunctionImpl `
added a check to return false if the path name starts with ". " to ensure correct handling of path names starting with ". "
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration ` to
added a call to clearIndex ( ) in BasicFunctionalityTest. java to ensure the correct index is maintained during testing
updated BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to improve readability and maintainability of the code
changed ` fThreadGroup ` to ` volatile ` and made ` fLookForStuckThread ` final in ` Timeout ` to ensure thread
removed the final modifier from the getValue ( ) and setValue ( ) methods in ValueResultData. java to streamline the code by eliminating
updated the hashCode method in FuzzyQuery to use the superclass's equals method to ensure proper comparison and hash code generation
removed debug print statement from PushedResourcesTest. java to clean up the code and improve readability
changed return type of ` removeFile ` and ` removeDirectory ` methods from ` List < SharedRandomAccessFile > ` to ` void `
updated JDBC driver version from 2.5. 1 to 2.5. 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to reflect the
updated method parameters and principal creation logic in PersonDirectoryPrincipalResolver. java to improve clarity and functionality of principal retrieval process
changed log level from info to warn for connection errors in OpenWebNetBridgeHandler. java to improve logging granularity for better troubleshooting
replaced ` intHash ` and ` longHash ` methods with ` hash ` and ` hash ` methods across multiple classes to standardize hash function
added a constructor to ThumbnailsCacheManager to initialize ThumbnailsCacheManager with a valid FileDataStorageManager and Account to ensure ThumbnailsCacheManager can handle
modified the while loop condition in GroupSelectionQuery. java to check if the number of attempts is below 5 to ensure that the loop does not
; ; _ _ _
removed unnecessary whitespace and improved formatting in MultipleSeriesProvider and Tokenizer classes to enhance code readability and maintainability
added a comment to indicate that control characters 0 - 31 are invalid and a space character is valid to improve code clarity and prevent potential issues with
added a call to requestFocus ( ) on the component to improve user experience by ensuring the component receives focus
update test data for instructorhomepageuitest
renamed ` JsonParserAsync ` and ` JsonParserAsync ` classes to ` JsonStreamParser ` and ` JsonStreamParser ` respectively to improve
updated Crouton handling in DetailFragment. java and modified activity lifecycle in MainActivity. java to improve user experience by ensuring Crouton
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` in ` IoTDBSchemaTemplateIT. java ` to
refactor Dialog class implementation to improve code readability and maintainability
replaced Runtime. getRuntime ( ). exec with ProcessBuilder and removed JAVA _ TOOL _ OPTIONS environment variable from SourceCompiler. java to streamline process
updated the way the InetAddress is reported in the HintedHandOffManager metrics to ensure correct handling of local addresses in the metrics
refactor subsystem assignment logic to use a loop for cleaner code to improve readability and maintainability of the code
added assumptions to skip tests on macOS in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed on supported Apple platforms
remove java. specification. version check from jvmciversioncheck
updated Mockito library version to ensure compatibility with new features and bug fixes
updated TestLargePageUseForAuxMemory. java file to enhance memory management functionality
updated ` BinaryParser ` and ` PlainTextParser ` to use ` ctx ` for reading bytes and added charset handling in ` ParsingExecutionContextView
added support for ` MultiPartFormDataCompliance ` in ` HttpConfiguration ` and introduced a new enum ` MultiPartFormDataCompliance ` to
added support for JDK 17 in GradleDistributionManager to ensure compatibility with JDK 17 and above
refactor ` DatabaseSnapshot ` and ` SnapshotControl ` to use a new method ` addType ` to improve code clarity and maintainability by separating
refactor Term class to improve code readability and maintainability
modify return logic to handle null or empty runWith to improve robustness by avoiding potential null pointer exceptions
fix for http : / / issues. apache. org / activemq / browse / amq - 4237
updated multiple Java files for consistency to improve code maintainability and readability
pdf417 : fix black box detection
refactor variable assignment for mSnapshotView and mIconView to improve code readability and maintainability
added sumzero. java file to implement sumzero function in gaggr
[ hotfix ] [ table - planner - blink ] remove unneeded ` ` unSIGNED _ long''
refactor getAllocationFailWarningMessage into a new method ` getAllocationFailWarningMessage ` to improve code readability and maintainability by encapsulating allocation
added a null check for propName before putting it into roleObject properties to avoid potential NullPointerExceptions when propName is null
updated access modifiers and added @ VisibleForTesting annotation in StatusBarTouchController. java, and modified task removal logic in RecentsView. java
added methods to log container logs with a stream parameter to allow users to control whether the container is open indefinitely
mvstore cache performance test
updated LONG type from " L " to " J " to reflect the correct representation of long values
changed the visibility of the delegatingApplicationListener method from instance to static to allow dynamic access to the delegatingApplicationListener instance
camel - 14284 : fixed npe in restbindingadvice when no body be send to the endpoint.
added a new file ` FileDeletingTasklet. java ` and its corresponding test class ` TaskletJobFunctionalTests. java `
add updatesizekeepdrawables ( ) to euclidianviewforplanecompanion ( )
updated variable names for clarity and consistency across multiple classes to improve code readability and maintainability
replaced occurrences of ` SWITCHED _ TO _ STATE _ MESSAGE ` with ` STATE _ ORDINAL ` in multiple classes to improve
added checks for video thumbnail requests in multiple classes to ensure proper handling of video thumbnail requests based on the renderer's context
updated error handling and highlighting logic in ErrorCheckerService. java to improve error reporting and ensure correct highlighting behavior
added conditional logic for adding buttons in SideMenuBar based on the theme constant to improve UI responsiveness based on user theme settings
added ` libskia ` to the ` preload ` variable in ` Skia. java ` and updated the ` link ` and ` preload
add support for unittests in networkparameters
added validation for format arguments in QueryCommand to ensure that only valid format arguments are accepted to prevent runtime errors
replaced instances of ` capacity ` and ` isPositionValid ` with ` length ` and ` isPositionValid ` in ` IntIterator. java
updated the ` walkRuleAndAdd ` method to include ` SourcePath ` as a parameter and added a check for ` srcTarget ` to ensure
added support for source override for module patchs in ` PatchModuleFileManager. java ` to enhance functionality by allowing users to override module names
[ java ] remove redundant check for candidate term id in election.
set single _ session _ per _ account policy to always _ new _ client for saml authentication
added null checks for ` mappedTableResource ` in ` ReadBatch ` and ` WriteBatch ` classes to ensure that ` mappedTableResource `
use a unified utility method to close the connection.
refactor AnonymousAuthenticationFilter to use a Supplier for deferred security context handling to improve clarity and maintainability of the code
modified the ` removeActor ` method to include an additional parameter for unfocusing the actor to enhance actor removal functionality by allowing unfocusing
refactor cloudConfig initialization to use a single variable for valid configurations to improve code readability and maintainability by reducing redundancy
added logging handler and modified connection handling in NettyHttpServer and RoutingInBoundHandler to enhance logging functionality and improve connection handling
updated multiple Java files for consistency and clarity to improve code maintainability and facilitate future updates
replaced direct update call with SwingUtilities. invokeLater call to ensure UI updates happen on the UI thread
( chore ) camel - groovy : fix compile error
use a HashSet instead of a List for artifact resolution to simplify code and improve performance
changed access modifiers of ProgramOptions and ProgramOptionsUtils from enum to public to allow access to these methods from other classes
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to improve
updated the handling of the storage certificate chain in HttpsMessenger. java to improve clarity and functionality of certificate chain retrieval
simonstewart : improve error message when text can not be convert to response
changed the visibility of the ` updateImage ` method from private to protected in ` ImageButton. java ` and ` ImageTextButton. java `
add dropxp hook to block. dropresources ( # 49874 )
added native methods for ` hasSpatialLocationCalculatorConfig ` and ` tryGetSpatialLocationCalculatorConfig ` in ` DataOutputQueue ` and ` depth
updated multiple Java files including CommunityDetection, ConnectedComponents, GSAConnectedComponents, GSAPageRank, GSASingleSourceShortestPaths
replaced the method ` keySet ( ). isEmpty ( ) ` with ` isEmpty ( _ root ) ` and added a new method ` isEmpty (
replaced occurrences of ` col ` with ` r `, ` g `, and ` b ` in ` AttributedStringBuilder. java `
added a conditional check for the ` solr. disableFingerprint ` system property in ` PeerSync ` and ` PeerSyncTest ` to ensure
change visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
updated MongoTemplate and MongoTemplateTests to include BeforeConvertEvent and refactored context initialization to enhance event handling and improve application context management
fix collectioncontainer. settransactiontest and collectionitem. settransactiontest
tika - 396 : fix for tika - 1421 -- close the input stream if it be null.
updated the method to use ApiException instead of ApiBag. ExceptionWithErrObject in TestCollectionAPIs. java to ensure compatibility with the latest
updated the configuration loading method in OptionsParser. java to ensure consistent configuration loading across the application
fix typo in instructorfeedbackaddactiontest
removed ` throws Exception ` from ` ExternalWorkerService ` and made fields final in ` JobServicePipelineResult ` and ` CloseableResourceTest `
removed the step parameter from the HmDatapoint class and related methods to streamline the code by eliminating unnecessary step handling
added logging statements and implemented locking mechanism in PostgreSQLReadWriteAdvisoryLocksTest. java to improve debugging and ensure concurrent access to shared locks
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl. java to streamline job scheduling process
simoniously fail test
refactor logger handling in Logger. java to use ThreadLocal for thread - safe logging to improve thread safety and ensure consistent logging behavior
replaced ` @ Mock ` with ` @ VisibleForTesting ` in ` convertToCompilationUnit ` method and replaced ` JMockit ` with ` MockitoJUnit
added handling for primitive types in type inference and created a new class T6995200 with multiple value methods to improve type safety and facil
added logic to set the orientation state for newFocusedTaskView in RecentsView. java and removed the initialization method in TaskView. java
don't flush table when flush be enable.
added logic to delete the original repository for a new contract address to ensure that changes to the original repository do not interfere with new contract details
updated balance calculations to include asset issue fee to improve accuracy of balance calculations
refactor RealisticRenderStrategy to improve cache management and resource cleanup to enhance performance and resource management during rendering
refactor raster creation and composition in Blit. java and add a new Bug7049339. java file to improve code clarity and facil
added support for unselected text styles in Label and DefaultLookAndFeel classes to enhance text selection functionality for better user experience
updated DefaultMapping initialization and refactored action list handling in multiple classes to optimize memory usage and improve code readability
removed the ` flags ` parameter from several ` queryImplicitIntentServices ` and ` queryImplicitIntentActivities ` methods to simplify method signatures by elim
refactor PingRequestHandler class to improve code readability and maintainability
add support for mp4 sample with increasing timestamps in unit test
refactor firmware check logic in TradfriGatewayHandler. java to improve clarity and maintainability of the code
simonstewart : fix typo find by codespell on fossies. org
replaced ` InlineLayout. isBlockNode ( ) ` with ` DefaultLayout. isBlockNode ( ) ` in ` BoxLayout. java `
refactor JsonDecoder logic to handle both START _ ARRAY and END _ ARRAY cases and add a test for order fields to improve code clarity and ensure
updated the releaseLocation method signature in BlockCache. java to include removalCause as a parameter to improve clarity and functionality of the listener
added JUnit Ignore annotation to SavepointTestBase. java to temporarily disable savepoint tests during development
jbrules - 2801 : add @ test annotation to drools - parser test
changed fields in ContextRegisterListener from non - final to final to ensure immutability of these fields
refactor ObjectHashSet to improve iterator initialization and initialization to enhance flexibility and maintainability of the code
added batch size validation in SparkReduceRecordHandler and updated condition checks in ReduceRecordSource to ensure batch size does not exceed defined limits
changed MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE from MODE _ WORLD _ READABLE to MODE _ PRIVATE
refactor JdbcProxyGenerator to handle the " abort " condition and improve logging for connection closure to enhance error handling and ensure proper resource management during connection
updated the workspace animation logic to include an important for accessibility to enhance accessibility handling for better user experience
; addendum to review comment
modified scope substring handling in UaaTokenServices and added a test for persisting a scope with a longer than 1000 characters to ensure that the
removed unused imports and added a toString method for AvailableJDBCDrivers to streamline code and improve logging clarity
[ kie - api ] add executablecommand for kie - api
camel - 15836 : camel - itest - remove unused class
added padding methods to CellLayout and refactored bitmap creation in Launcher to improve padding handling for different screen orientations
added a null check for the length of the candidate list before filtering to prevent potential NullPointerExceptions when the candidate list is empty
updated import statements and added null check for the flow in multiple classes to improve code robustness and prevent potential NullPointerExceptions
added a method to check open ports in LdapMockMvcTests. java to facilitate testing by verifying the number of open ports for
[ log4j2 - 1347 ] adjust executorservicedeamons. shutdown ( ) default to 0.
updated URL handling logic in Fetcher and HTMLMetaProcessor classes to improve URL filtering and enhance logging for prohibited URLs
updated the spelling query name from " * : * " to " name : samsang " and adjusted assertions accordingly to improve accuracy of spelling
refactor Console instantiation to support old and new Karaf Console API to enhance compatibility with Karaf Console API and improve code clarity
changed the visibility of the getVerticesColors method from public to private and modified the initialization of mCol to improve encapsulation and ensure compatibility with different
added EXCLUDE _ TIMESTAMPED _ REPORTS _ DIRECTORIES import and modified copyDirectory method to include EXCLUDE _ TIMEST
updated test method names and added parameterized tests in DataValidatorTest. java to improve test clarity and enhance test coverage for email validation
pdfbox - 4071 : remove unused code, a suggest by valerybokov
added a null check for bindStatus in FieldUtils. java to throw a TemplateProcessingException when bindStatus is null to ensure proper error handling
removed a debug print statement from JoglInput. java to streamline output for better readability
added a new boolean parameter ` allowExtractingPrivateFields ` to the ` FieldSupport ` class and updated the ` readField ` method to include
added a method to replace device name in WebDataHandler. java to ensure proper handling of device names during data processing
added a lookup constructor for Java 8 compatibility to ensure compatibility with Java 8 by using MethodHandles for creating instances
renamed the ` weights ` method from ` weights ` to ` weightsByDouble ` in ` ZParams ` and ` SortedSetCommandsTest ` to
updated the ` writeCustomHTML ` method across multiple classes to include ` Database ` as a parameter to ensure compatibility with the latest Liquibase
updated assertions and refactored key deserialization logic in BTreeMap. java to improve code clarity and ensure proper handling of null values
replaced ` Exception ` catch blocks with ` BalanceInsufficientException ` and added exception handling for ` InvalidProtocolBufferException ` and ` ContractExe
bugfix : don't write zero - byte array to file
refactor ChangeSet and Main classes to use ` Scope. getCurrentScope ( ). getUI ( ). sendMessage ( ) ` to improve logging
updated byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy. java and removed generic record handling in Horton
added import statements for ItemReadListener and ItemWriteListener in multiple Java files to enhance functionality by integrating ItemReadListener and ItemWriteListener
refactor code for improved readability and maintainability to enhance code clarity and facilitate future updates
removed the call to ` doc. get ( " title " ) ` in ` SearchFiles. java ` and updated the method call in `
updated Test7005594. java file to improve test coverage and reliability
updated error message formatting in ResourcesValidationProcess. java to improve clarity of error messages for better debugging
updated TopKRollupPhaseOneJob. java file to improve code organization and maintainability
cloudstack : fix npe when try to map ip address to the vm
replaced ` mModifierDigitalTriggers ` with ` mModifierAnalogTriggers ` and added a new ` MCOptionListener ` to enhance
replaced usage of ` Arrays. asList ( ) ` with ` Iterable < T > ` in ` IterableSubject. java ` and ` IterableTest
camel - 16400 : camel - http4 should only decode header if there be at least 2 byte.
added assertions to verify the behavior of the native SQL queries in ActivityHistorySQLServerStoredProcedureTest. java to ensure that the latest SQL queries
added a new ` LargeValueFormatter ` class and modified calculations in ` BarChartActivityMultiDataset `, ` BarLineChartBase `,
added support for INNOCUOS _ CHAR and INNOCUOS _ CHAR in CommentsParser. java to ensure correct handling of
added @ SuppressWarnings ( " argument. type. incompatible " ) annotation to Platform. java to suppress warnings related to incompatible argument types
modified the printLir method call in TraceLinearScanLifetimeAnalysisPhase. java to correct formatting for clarity and consistency
added TODO comment to Auto - generated method stub to improve code clarity and maintainability
added handling for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances in the build process
added system profile directory creation in PmsConfiguration and refactored DLNAMediaInfoTest setup and teardown methods in DLNAMediaInfoTest
replaced the instantiation of ` DefaultThreadFactory ` with ` createThreadFactory ( ) ` in ` TestcontainersDockerCmdExecFactory. java
updated the method for retrieving messages from ` HttpChannelOverHTTP ` and ` HttpReceiverOverHTTP ` to improve clarity and maintainability of the
added " accept " attribute to " image / * " in ImageFileInputDialog. java to allow users to select a specific image format
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and Node classes instead of NodeBuilder to improve code clarity and
updated the formatting of witnesses in ForkController. java to include additional context about the witness class and its associated type
; add test for nullpointerandemptyarray
removed the implementation of ` findConfiguredGeneratedSourcePathsUsingDeps ` in ` BaseIjModuleRule. java ` and added a test class
added support for wildcard patterns in UaaStringUtils and updated related tests to enhance flexibility in wildcard handling and improve test coverage
added validation for alias to work in Vectorizer. java to ensure that only valid aliases are processed to prevent errors
updated import statements and modified exception handling in WeatherQueryTest. java to improve code clarity and ensure proper exception handling
added error handling for setting values in TinyGFirmwareSettings. java to improve robustness by logging exceptions when setting fails
refactor ` getLangs ` method to return a set instead of an array to improve readability and maintainability of the code
updated assertions in LazyTraceScheduledThreadPoolExecutorTests. java for consistency and clarity to enhance readability and maintainability of the test code
hbase - 25836 snapshotmanager. takesnapshot ( ) should check that the table lock be present before load the snapshot.
add a new method ` createPlatformIsNullCall ` to the ` RuntimeMethods ` class and rename ` createExitSwitch ` to ` createExit
added a test method to verify the modification of the HTTP RPC endpoint in the DockerQuickstartTest to ensure that the HttpRpc endpoint behaves as
added a ` isSuspended ` flag and modified thread suspension logic to ensure proper handling of thread suspension and improve test reliability
refactor Javadoc handling in Java11JavadocVisitor, ReloadableJava8JavadocVisitor, and ReloadableJava8JavadocVisitor to improve
( chore ) camel - spring - remoting : use camelcontext. getcamelcontext ( ) instead of null check.
removed redundant ` @ Override ` annotations across multiple security classes to streamline code by eliminating unnecessary overrides
added module import handling in Java2TypeScriptAdapter and updated test assertions in EnumTests and MyComplexEnum2 to improve module management and ensure
http : / / www. w3. org / www / w3. org / 2001 / XMLSchema / xssfexporttoxml
added logic to set content description based on badges in BubbleTextView. java to improve user feedback regarding badged app content
added mouse wheel event handling in TestMouseWheelScroll. java to ensure proper handling of mouse wheel movement events
pdfbox - 407, pdfbox - 407, pdfbox - 407, pdfbox - 407, pdfbox - 40
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to
fix ( vacuum ) : use string instead of vacuumenvironment
removed unnecessary currency checks in BitfinexAdapters. java to streamline code and improve readability
replaced the implementation of ` HashSet ` with ` TreeMap ` and added a new ` alwaysOutputDefaultValueFields ` flag in the ` JsonFormat `
added handling for array and enum types in JacksonXmlFormatMapper to ensure correct serialization behavior for different Java types
; review by jbellis ; review by jbellis
updated DirectoryTaxonomyWriter and NameIntCacheLRU to use catTerm instead of categoryPath for improved clarity and functionality
refactor VetoableChangeSupport class to improve code readability and maintainability
adjusted height calculation in BrowserContentPane. java to correctly account for height adjustment
pdfbox - 4892 : remove ` ` invalidpasswordexception'from method signature
added unit tests for setting and getting short and long support messages in ShadowDevicePolicyManagerTest. java to ensure proper handling of security exceptions and
ggb - 2652 : fix ` ` close'' button on exam
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced ` Thread. sleep ( ) ` with ` ThreadHelper. waitUntil ( ) ` in ` BackendInitializerHelper. java ` and added multiple
refactored version checking logic in SwingStartup. java to improve clarity and maintainability of version handling logic
added functionality to conditionally include generated file comments in the migration process
updated command descriptions to include parentheses around player names to enhance clarity and consistency in command usage
solr - 5007, solr - 7287, solr - 7288, solr - 7287, solr - 7288, solr - 7
updated method calls from ` startCall ( ) ` to ` startCall ( " optionName ", ". " ) ` to improve clarity
added a check for parallel classes in TestNGContentHandler to ensure proper handling of parallel suites in the test suite
[ hotfix ] fix npe in routinfomanager when act master be not enable.
refactor ( ctmethodimpl ) : remove static import of enums
added serialVersionUID fields to multiple exception classes to ensure compatibility with serialization standards
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the shaBase64 method in ShibbolethCompatiblePersistentIdGenerator to include a separator parameter and added a test for it to
added null check for SYSTEM _ ACTIONS _ ENABLED in Parameters. java and changed condition in TestAction. java to improve robustness of the
added a new class ` Person ` with a private field ` name ` to facilitate easier access to the ` name ` field in the
remove redundant call to fbutilities. getlocaladdress ( )
modified the indexOf method call in AbstractClient. java to ensure case - insensitive comparison for column labels
added assertions to verify the properties of ` timeColumn ` and ` timeUnit ` in ` SegmentMetadataImplTest ` and ` SegmentMetadataImpl `
replaced ` java. awt. Color ` with ` net. sf. openrocket. util. Color ` in ` SimulationPlotPanel
added a call to disconnectEmitters. onNext ( new Object ( ) ) in NettyStreamingService. java to ensure proper handling of disconnect
changed the type of ` scopeHierarchy ` from ` List < String > ` to ` List < Class <? extends Annotation > > ` to
simonstewart : add a new test for click on an element hidden by double overflow
added a try - catch block around dismissing the dialog to handle potential exceptions during dialog dismissal
[ jbpm - 3442 ] allow jndi lookup for transaction synchronization registry.
changed the access modifier of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
added a method ` hasFunction ( String function ) ` that always returns false to indicate that the function is not present in the library
rename variable ` enabledCiphers ` to ` result ` for clarity to improve code readability and maintainability by using a more descriptive variable
[ beam - 10497 ] fix bigquery timestamp conversion for timestamp type ( # 2497 )
replaced manual null checks for buffer and user credentials with requireNonNull method in Identifiers and DatabaseConnector classes to improve code clarity and maintainability by using
refactor variable name from ` input ` to ` inputMap ` for clarity to improve code readability and maintainability by using a more descriptive variable
added bounds checking for row and column in FlightConfigurablePanel. java to ensure proper handling of row and column indices
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel. java to enhance user experience by allowing scrolling to the
[ java ] remove unnecessarylocalbeforereturn when there be no astmemberselector.
refactor script engine initialization in AbstractScriptExecutor. java to improve clarity and maintainability of the code
mahout - 2697, fix correlation to be nan
don't call sstables. executeblocking ( ) in datatracker. java
added a new relativize method to the MorePaths class to handle path normalization to ensure that the relativize method correctly handles different path formats
added handling for null column size and decimal digits in ColumnSnapshotGenerator and DataType classes to improve robustness by ensuring proper handling of null values
modified the file deletion logic in DeadLetterQueueWriterTest. java to skip the current writer head file if it does not already end with "
replaced ` ByteArray. toHexString ` with ` ByteArray. toJsonHex ` in ` TronJsonRpcImpl. java ` to improve clarity and consistency
renamed ` ErrorHandlerController ` to ` Error403Controller ` and created ` Error404Controller ` and ` ErrorHandlerControllerTest ` classes to
replaced ` TerminalFactory. resetTerminal ( this ) ` with ` TerminalFactory. resetIf ( this ) ` in ` UnixTerminal. java
bugfix : fix tiny class for java 11 +
fix for http : / / issues. apache. org / activemq / browse / amq - 388
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` across multiple classes to improve clarity and consistency in
pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 3017, pdfbox - 301
improve error message when fail to create class loader
added error handling for reader and writer exceptions in LargeStreamletTest. java to improve test reliability by ensuring exceptions are properly handled and
replaced the logic for setting extra pages in HomeFragment to allow for more flexibility in page management based on user preferences
added error handling for broken Gaussian rendering in AndroidImplementation. java to improve robustness of image processing for different Android versions
added @ SuppressSubnodes annotation to BaseParser. java and modified return statements in ImplicitActionsConverter. java to improve code clarity and ensure
refactor FDFParser instantiation to use try - with - resources to ensure proper resource management and avoid potential memory leaks
; ; ; ; ; ;
added a shell command to execute the input keyevent 82 in AbstractLauncherUiTest. java and removed an assertion in LauncherInstrumentation. java to
added JSON serialization for filenameToUrl in FileDumper. java to facilitate the conversion of URLs to JSON format
bugfix # 254373, reset profilerserver's resultified flag
refactor texture loading methods in TextureHelper. java for improved clarity to enhance code readability and maintainability by using more descriptive method names
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to ensure compatibility with the latest
removed " 9781797845008 " from test cases in RandomizersTest. java to align test with recent changes
updated the handling of notification sound settings in AlarmReceiver. java to ensure consistent handling of notification sound preferences
added a method to report a loop count in the RootNode class to ensure that the loop count is only reported when the receiver is an instance
added functionality to finalize the version of a cluster based on the upgrade type to ensure that the cluster version reflects the desired stack version for the
bug fix : listbyregionidandstatenotest. listbyregionid and listbyregionidandstatenotest.
removed redundant call to streamManager. open in ItemOrientedStep. java to stream the resource for better resource management
added a new file CountedLoopProblem. java that implements a counted loop to demonstrate the behavior of the counted loop in the code
` ` ` native _ native _ native _ method'' '
refactor ` pendingFailedSpeculationOffset ` initialization to handle both long and jlong types to improve error handling and provide clearer error messages for invalid
renamed ` KafkaStreamsTracing ` class to ` ValueTransformerWithKeySupplier ` and refactored the ` peek ` and ` mark ` methods
add'Received Points'to FeedbackConstantSumQuestionDetails and update FeedbackSessionsLogicTest to include'Received Points'to enhance data representation for
removed the call to applyToActivitiesIfAvailable ( this ) in BaseApplication. java to streamline the code by eliminating unnecessary method calls
added a method to dump all stack traces and adjusted thread join logic to improve error handling and ensure only one child thread is complete
updated return value from ` val ` to ` val. intValue ( ) ` in ` IntPointField. java ` and added assertions in `
replaced a hardcoded arcSize value with a dynamic arcSizefraction and adjusted calculations accordingly to improve the accuracy of arc representation and ensure accurate
addandscalemulticontainer : increase the max size of the image to 640.
replaced ` minifySqlEnabled ` with ` shrinkWhitespacesInSql ` in ` SqlSourceBuilder ` and its corresponding getter and setter methods to
removed the ` waitForStateTransitionToEnd ` method from ` AbstractLauncherUiTest ` and added multiple calls in ` WorkProfileTest ` to
added multiple import statements for CasCore configuration classes in multiple test files to ensure compatibility with the new configuration structure
replaced direct calls to ` raf. readLong ( ) ` with ` raf. readFully ( ) ` for reading a single byte array to improve performance
camel - 16400 : camel - http - fix the unit test error of camel - http - producer
refactor class path handling in DeclarativeHintsParser to improve clarity and maintainability of class path creation
[ smarthome ] add mediacache scope provider for automation module.
added methods to retrieve and set the layer manager in AnimComposer and updated event action handling in AnimEvent and TestJaime
added a check to return early if the queue is empty in DeferredHandler. java and removed the showDefaultScreen method from Workspace. java to
added null check for mapOp and mapWork in MapRecordProcessor. java and modified exception handling in TezProcessor. java to improve error
refactor CylinderRegion class methods for better clarity and consistency to improve code readability and maintainability by using more descriptive method names
replaced the try - catch block with a rule for handling UsageException in TestBadUseCases. java to streamline exception handling and improve test
added a null check for subparams in the sendOneQuery method call and implemented a test for multi - execute statements in StatementTest to ensure
added a conditional check for ` customizeEnvironment ( ) ` in ` Installer. java ` and modified the ` customizeEnvironment ( ) ` method
updated the ` @ GET ` annotation in ` ReviewInterface. java ` to include ` rctag = android% 20app% 20edit
updated test cases in Test. java to enhance test coverage and improve reliability
updated PBEKeySpec to use keyLength instead of blkSize to ensure correct key length is used for password generation
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
added a call to writeSectionDefinition ( ) in RtfDocumentHeader. java to ensure proper handling of section definitions in the document header
added distance calculation and logging for large jump detection in GpsLoggingService to improve accuracy of jump detection and enhance user experience
removed unnecessary debug print statements from TableCellLayout, TableLayout, TableLayout2, and TableLayout2 classes to streamline code and improve
doc : generate sample code in the java microgenerator ( # 38 )
refactor InsightFilter class to use ` Reference < Object > ` for ` rootNameFn `, ` sourceFilterFn `, and `
replaced binary search with direct addition of data and added in AllAppsList. java to simplify code and improve performance
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed ` ThemedPreferenceActivity ` class to streamline the activity
updated the value class name from " HostD " to " UsingUnresolvedD " to clarify the purpose of the generated value class
corrected the assertion for the root arc in FST. java to ensure correctness of the assertion
added an assertion to check if the security policy exists and is a file to ensure that the test accurately verifies that the security policy is
added implementation of the getConfiguration method in Olingo2Component to ensure proper configuration handling for the component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest. java to allow more time for the test to complete
removed an unnecessary parameter from the logger message in MongoPersistentEntityIndexResolver. java to streamline logging by eliminating unnecessary parameters
added functionality to publish an image by HTTP using XMPP to enhance user experience by allowing users to upload images via HTTP
camel - 16400 : camel - netty - do not try to remove the channel from the pool if it's not available.
add test for split url with invalid host name
remove the system property ` org. apache. jasper. compiler. disablejsr199 `
added handling for null values in CSVRecordReader and its configuration to enable proper handling of null values in CSV records
added LiquibaseService annotation to multiple connection classes to enable skipping of Liquibase services during connection operations
updated cursor type from CompilationUnit to JavaSourceFile in VariableNameUtils. java to ensure correct handling of Java source files
add ` ` / command'' to the ` ` event. topics'property of itemcommand and itemstatetriggerhandler
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration. java ` to correct exception handling
added deprecation for " zkCredientialsProvider " in SolrXmlConfig. java and updated test assertions in TestSolrXml. java to
fix # 1749 - mana tablets no longer lose durability in storage drawer
set the identifier collection of the call event in P25P2DecoderState. java to ensure the correct identifier collection is set for the call
removed unused imports for DictionaryCompoundWordTokenFilter in TestRandomChains. java to streamline code by eliminating unused filter
updated the executor name from " ScryptUtil : deriveKeyWithScrypt -% d " to " ScryptUtil : deriveKeyWith
updated the GeneratedCode class to improve code clarity and maintainability
updated assertion to check for null definition in TypeDefinitionRegistry to ensure that the definition is not null to avoid potential null pointer exceptions
updated import statements and added visibility for the'shareWithMeIcon'view to improve code clarity and ensure the'shareWithMeIcon '
updated the crossorigin link from " crossorigin " to " https " in multiple filter classes to ensure compatibility with the latest Bootstrap CSS standards
updated import statements and modified method parameters in RouterFilter, RouterServerListFilter, and RouterDistributorTest to improve code clarity and ensure
updated assertion message in TestIndexWriterMergePolicy. java to include additional context for better debugging
deprecate multilayer perceptron in favor of the new one
added a null check for the context in CrawlerSessionManagerValve and created a test for multiple context in TestCrawlerSessionManagerValve to
added a conditional check for security in the ` getJspApplicationContext ` method to ensure proper handling of ` JspApplicationContext ` based on the
replaced the initialization of ` l ` with ` minL ` and ` maxL ` in ` RocketComponentConfig. java ` to improve
added Scopes. SINGLETON binding to NonceService and OpenIDAuthenticationProviderModule to enhance dependency management and ensure proper handling of
updated child links in FileWrapper to include additional parameters to enhance functionality by allowing child links to be updated
removed the ` HttpMethod ` parameter from the ` doExecute ` method in ` SpringCloudPlugin. java ` to simplify method signature and improve code
updated the delay values for publishWithDelay in RetrievalBlockingMessageStoreTests from 100 to 500 to improve test reliability by allowing more time
added a boolean flag ` mShiftCodesAlwaysOverride ` to control shift code behavior in ` AnyKeyboard. java ` to allow users to control
[ hotfix ] [ runtime ] remove dead code in abstractheartbeatmonitor
removed unnecessary whitespace in NearbyActivity. java to improve code readability and maintainability
updated identity reference check from ` isReference ( ) ` to ` isReference ( ) ` in ` AbstractKerberosDescriptorContainer. java `
replaced ` AbstractCommandOptions ` with ` boolean noop ` in ` ArtifactCacheFactory ` and ` InstanceArtifactCacheFactory ` to enhance flexibility by
replaced ` Thread. sleep ( 3000 ) ` with ` Thread. sleep ( 3000 ) ` in ` TestListenTCPRecord. java ` to
[ i742 ] [ i747 ] fix for extensionmethod broken in eclipse use java8
replaced ` Map < String, RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` and modified the ` get `
added support for'apply - sequence'and'ignore - send - failures'attributes in the DefaultRouterParser and AbstractChannelNameResolving
added support for the " publishClientx509 " method in ClientKeyPublisher and JwkViewResolver classes to enhance functionality for handling X509 certificate
refactor the initialization of the readers array in QueryComponent. java to ensure the correct retrieval of the first reader from the readers array
replaced ` MaxFloatFunction ` with ` Double2Parser ` in ` ValueSourceParser. java ` to enhance functionality for handling double values in
simplified return statements in Container. java to streamline code for better readability and maintainability
removed unused variables from Highlighter, SpanGradientFormatter, and TokenSources classes to streamline code and improve readability
fix findbugs warning ( # 2596 )
updated ` CasMultifactorAuthenticationWebflowConfiguration ` to use ` @ ConditionalOnWebApplication ` and added ` @ Qualifier ` annotation
updated SQL commands and refactored connection handling in WriteJdbcPTest. java to improve clarity and maintainability of database operations
removed conditional logic for setting the look and feel in DefaultPlatform. java to streamline code for better readability and maintainability
replaced instances of ` getStateEntity ( ) ` with ` stateEntity ` and ` desiredStateEntity ` in ` ServiceComponentHostImpl. java
simplified margin calculations in FloatingTaskView. java to improve code readability and maintainability
added a conditional check for running state in RootFolder. java and updated the status line in NavigationShareTab. java to improve user experience by
removed the ` threadId ` parameter from the CPUCallGraphBuilder method call to simplify the method signature for better readability and maintainability
fix for ggb - 195 : make sure we don't get the most recent tool
updated HomekitImpl to implement NetworkAddressChangeListener and added network address change listener to enhance network address handling and improve logging clarity
hbase - 177643 testhdfseventsinkonminicluster fail on window
replaced ` Optional. absent ( SourcePath ) ` with ` Optional. absent ( ) ` for prefixHeader, linkStyle, and prefixHeader to
added a null check for the message in ExceptionHandlerRegistryFactory. java and created a corresponding test in ExceptionHandlerRegistryTest. java to ensure
updated the ` nextID ` variable to be volatile and modified the ` getSize ` method to use ` nextID ` instead of ` nextDoc
resolve intermittent failure on slow machine
updated AbstractThinArchiveArg and FileListableLinkerInputArg to implement HasSourcePath and added HasSourcePath interface to enhance functionality by
replaced StringBuffer with IllegalArgumentException for better error handling to simplify error reporting and improve code clarity
added a custom index field name to the facet fields in OrdinalMappingAtomicReader. java and updated test cases in TestOrdinalMappingAtomicReader
modified the calculation of milliseconds in ` Instant. java ` and added tests for ` sampleEpochMillis ` in ` TestInstant. java ` to
changed attribute retrieval from ` getAttribute ( ) ` to ` getAttribute ( ). name ( ) ` in ` OGLESShaderRenderer
added block update scripts functionality to the CopyPaste class to ensure proper handling of script updates based on user preferences
added a new file ` TestCMoveLimitType. java ` to test character movement limits in a buffer to ensure proper handling of character movement
replaced the method of resetting temporal attributes in ChannelState. java and refactored audio packet processing in AudioPacketWaveRecorder. java to improve
( chore ) camel - sql : fix arrayindexoutofboundsexception in camel - sql
updated vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer. java to reflect the current
refactor Console creation in Main. java and VersionCommand. java to utilize a new method for printing version to improve code organization and maintainability by
refactor token validation logic in InputStreamBinder and NextcloudRequest classes to streamline token validation process and improve code clarity
added EOFException handling in Http11InputBuffer. java to improve error handling for negative integer values
add unit test for delete member from non - existent group.
camel - 15836 : remove unused object array in camel - ftp
deleted the ` V2ReplicationProtocol. java ` file to remove unused code to streamline the codebase
replaced ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` with ` ImmutableSortedSet < SourcePath > compileTimeClasspathPaths ` across multiple Java files
added new classes ` ConstructorArgsDemo `, ` FinalDemo `, ` StrictDemo `, and ` StupidFinalDemo ` to demonstrate
[ geot - 7470 ] fix memory leak in templatefeaturecollectionfactory
account for bootstrapping pending range in replication factor assert . patch by jbellis for cassandra - 593
added a null check for the index number in ItemRowAdapter. java to prevent potential NullPointerException when the index number is null
renamed the parameter ` areAnchestorsShown ` to ` areAncestorsShown ` and introduced a new method ` returnSelfIfOther
added a check to return early if the app's width is less than 12 to prevent further processing when the app's width exceeds 12
updated comparison logic in ChangeLogParameters. java and added a new test method in ChangeLogParametersTest. java to ensure correct handling of different
changed the ` loggers ` map from static to final to ensure immutability of the ` loggers ` map
modify return statement to use getBasePlot method to ensure correct base plot is returned
( chore ) camel - rest - rest - server : don't create upload dir if it already exist
added a new boolean parameter ` sendStatus200 ` to multiple classes to control response handling based on the status of HTTP requests
added a check for empty comments in the multi - line comment handling to ensure proper handling of empty comments in multi - line comments
added file type matching logic in BuckModule. java to ensure file types are properly removed from the file system
replaced multiple specific function imports with a wildcard import in ComposedUtil. java to simplify import statements and improve code clarity
added support for RTM OS error handling in RTMGenericCommandLineOptionTest. java and TestUseRTMLockingOptionOnUnsupportedCPU
corrected formatting for ` DUMMY _ ACCOUNT _ NAME ` in ` AccountsActivityTest. java ` to improve code readability and maintain consistency
refactor Player class to improve code organization to enhance maintainability and readability of the code
added import for ChannelTypeUID in AbstractModbusOSGiTest. java to facilitate mocking of ChannelTypeUID from the package import
polyglotexceptionimpl : fix an off - by - one error
added a reset method to reset the context of FontsContract and introduced a new FontsContractReflector interface to enable resetting of the
added a ` toMillis ` method to ` TimeGranularity ` and updated time query generation in ` PinotDataSourceMaxTime ` and ` Pin
refactor control flow handling to check for null final blocks before visiting final blocks to improve robustness and prevent potential NullPointerExceptions
updated assertions in Assert. java and ArrayEqualityAssertTest. java to improve clarity of assertion messages
added default case to window click logic
fixed an off - by - one error in the index calculation logic
nifi - 7141 : remove unused'this'from standardproceschedulernchedscheduler
added handling for ResolvedJavacPluginProperties in KotlincToJarStepFactory to improve processing of resolved Javac plugin properties
updated the scroll delay value and refactored page snapping logic in DragController, PagedView, and Workspace classes to improve user experience
added functionality to refresh shortcuts based on permission to improve user experience by ensuring shortcuts are refreshed only when necessary
added case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader. java to support history search functionality
added null check for ` cname ` in ` CoreAdminHandler ` and implemented core reload functionality in ` CoreAdminHandlerTest ` to ensure robust
added marker selection functionality to the NearbyMapFragment to enhance user experience by hiding the bottom sheet when a marker is selected
added error handling for Throwable in FileSyncAdapter. java to improve debugging by providing more informative error messages
replaced direct usage of ` DockerTestUtils. dockerRunJava ( ) ` with ` OutputAnalyzer. java ` for better error handling to improve robust
refactor FeedQueues to conditionally merge feeds based on application settings to improve efficiency by conditionally merging feeds based on application settings
added playback thread verification in DefaultDrmSession and DefaultDrmSessionManager to ensure that DefaultDrmSession and DefaultDrmSessionManager
updated AndroidBinaryDescription to use Locale. US for case conversion and added a setPackageType method in AndroidBinaryBuilder to ensure consistent handling of
updated MIME type from " text / xml " to " application / xml " in multiple test files to ensure correct MIME type is used for XML
updated references from ` INSTANCE. confFile ` to ` configFile ` in ` Args. java ` to ensure consistency with the current configuration file reference
replaced " sleep 5 ; exit 1 " with " exit 1 " in the HostPortWaitStrategyTest. java file to simplify the test by
changed the data type of ` numCountDistinct ` from ` int ` to ` long ` in ` HiveExpandDistinctAggregatesRule. java
added multiple instances of ` GraphicsEnvironment. isHeadless ( ) ` to throw ` HeadlessException ` to improve error handling for headless environments
match furnace against the player's furnace, not the player's furnace.
add ` ` move thread count'' to solver log
fix : search with rev include don't select resource with same name
added a new test class ` Issue582Test ` for the ` MapDB ` framework to verify the functionality of the ` MapDB `
add test for decimal overflow
refactor LoadingCache class implementation to improve performance and maintainability of the code
added a new rule for " AvoidNonConstructorMethodsWithClassName " in NamingRulesTest. java to enhance test coverage for avoiding non - constructor
simonstewart : catch staleelementreferenceexception in expectconditions. isdisplayed ( )
added a method ` hasView ` to ` DatabaseSnapshotGenerator ` and updated exception handling in ` ViewExistsPrecondition ` and ` JdbcDatabase
refactor DOMUtil class methods for improved performance to enhance efficiency and maintainability of the code
added translation and full - screen scale logging functionality to TaskViewUtils and Utilities classes to enhance visual feedback during task view animations
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in both FeatureFlags. java and RotationHelper
added a new ` walk ` method to ` TempFSTTermsReader ` and modified ` writeVInt ` method in ` TempTermOutputs ` to
added SolrQueryRequest to the create method signatures across multiple augmenter factories to ensure compatibility with Solr's query request handling
added triggers for post content checks and announcement validation in SingleTableMySQLTriggerTest. java to ensure proper handling of null values and prevent potential
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to improve clarity and maintainability of comparator management
phoenix - 4672 : fix test case for phoenix
added Spark initialization to the RequesterTest class to ensure proper initialization of Spark during tests
added constants for total storage pool, fee, limit, storage usage, and storage usage in DynamicPropertiesStore. java to enhance storage management and
added support for streaming files from the specified source directory in AssetsController to enhance functionality for streaming files from the specified source directory
use getmapmarkkey ( ) instead of containskey ( ) to avoid npe
added ` TokenRewriteStream ` parameter to several methods in ` BaseSemanticAnalyzer ` and ` DDLSemanticAnalyzer ` to enhance functionality by
; remove unused exception from javac
updated variable name from ` fileName ` to ` fullPath ` in ` JxBrowserManager. java ` and added exception handling in ` FileUtils.
added a check for the " AppVersion " property in IOSImplementation. java and updated image format checks to use `. equals ( ) `
updated method call from ` getBridgeUID ( ). getId ( ) ` to ` getUID ( ) ` in ` SomfyTah
disable albertoaggregator test on github
refactored OpenWireConnectionTimeoutTest to use static keystores and modified trust manager initialization to improve flexibility and maintainability of the code
added logging for stack trace and nan gauge warnings in DynatraceExporterV2. java to improve error handling and provide clearer logging for NaN
added a line to remove a session identifier from the session info list to ensure that the session identifier is properly managed
added a check for null host name in the HeartBeatHandler and adjusted log messages in AlertReceivedListener to ensure proper handling of null
modified the return value of the ` all _ flushed ` variable in ` ChannelEndPoint. java ` to streamline the logic for handling empty buffers
[ hotfix ] [ test ] move kmodule. xsd to kie - api
added a test for seeking to a MediaPlayer in ShadowMediaPlayerTest. java and implemented seekTo method in ShadowMediaPlayer. java to ensure playback
rename ` createTask ` to ` createThrowingTask ` across multiple classes to clarify the purpose of the task creation method
added a border to the tab close button for AQUA _ LAF to improve visual appearance of the tabbed pane
added connection and read timeout settings in TSPTimeStampService and refactored test assertions in TestSignatureInfo to enhance connection handling and improve test
( chore ) camel - kie - maven - plugin : fix xstreamutils. createxstream ( )
added error logging for diamond application in ` Attr. java ` and introduced ` DiamondRaw. java ` with a main method to
[ hotfix ] [ table - planner - blink ] fix typo in reloptutil
updated argument validation logic in Http2Settings. java to use'&&'instead of'or'or'or'or'or '
deleted the MapInterfaceTest. java file to remove obsolete test files
[ hotfix ] [ test ] don't try to operate on disposed session even if create from a pool
added start and end methods for the FeatureCollection object in GeoJsonWMSBuilder. java to ensure proper handling of root objects in JSON output
modified the method for setting the selected index in PopupMenuButton to ensure the correct index is set based on the selected value
added checks for the ` canCurrentlyManuallyUnstash ( ) ` method in ` TaskbarStashController. java ` to ensure
camel - 1860 : camel - core - optimize route coverage
updated ` getEventMismatchMessage ` method to accept a boolean parameter for wait duration to improve event mismatch handling based on expected count
added a new file ` HeaderFixer. java ` that implements a file processing mechanism for header files to facilitate the processing of header
added functionality to send a loading complete broadcast based on user preference to enhance user experience by allowing loading
deleted the ` SuperJumperAndroid. java ` file to remove unused code that is no longer needed
modified the return value in SystemTableScan. java and refactored the test method in TestStarQueries. java to ensure correct handling of
remove keyvaluesprovideraware method from observation interface
add missblock and missitems to the missmap event.
updated calculations in AtomicIntegerArray, AtomicLongArray, and AtomicReferenceArray to cast ` i ` to ` long ` to ensure correct handling of long values
added caching mechanism for data format string retrieval in HSSFCellStyle. java to improve performance by avoiding repeated calls to getFormatString ( )
updated the query parameter format in RemoteAuthenticationEndpointTests. java to ensure correct filtering of users based on their username
replace ` def. needsInput ( ) ` with ` def. finished ( ) ` in DeflateCompressor. java to ensure proper handling of
updated getStatsLogManager ( ) method to include container information and page index to improve logging clarity for launcher interactions
chore ( deps ) : upgrade gapic - generator - java to 2.8. 0 and update gax - java to 2.18.
remove deadlocktest
added null checks for newInput and modified marker handling in BugContentProvider and BugGroup classes to improve robustness by preventing null pointer exceptions and
added a " Reopen in Browser " menu item and refactored server opening logic to improve user experience by allowing users to open the JavaScript
added a new error message for duplicate output sequences in the SemanticAnalyzer class to improve error handling for duplicate output sequences
added two runnable tests for adding an entry listener with null values to ensure that the addEntryListener method correctly handles null values gracefully
fix coordinatearray. reverse ( ) to handle empty coordinate
removed an unnecessary whitespace in the setOpen method call to streamline code for better readability and maintainability
added a variable ` first ` initialized to false in ` TestPayloads. java ` to ensure the correct initialization of the ` first ` variable
replaced mWorkspace. enterOverviewMode ( ) with showOverviewMode ( true ) in Launcher. java to streamline the overview mode display logic
camel - 15836 : fix networkroutetest to set the destination of the message dispatch.
change the return value from Integer. MIN _ VALUE to Integer. MAX _ VALUE in MessageHandlerInterceptorDefinition. java to ensure that the maximum
minor fix for amd64floatconvertnode
updated the ` addComponent ` method calls in ` HttpClientRequestImpl. java ` and modified buffer handling in ` HttpTest. java ` to improve
updated the formatting of the artifact string in GetMavenDependenciesTask. java to improve clarity and correctness of artifact replacement logic
pdfbox - 3017 : use getcosstream instead of getdictionaryobject, a suggest by valerybokov
updated substring extraction logic in ReferenceUtil. java to streamline substring extraction for better readability and performance
[ flink - 1860 ] [ schema - runtime ] fix visibility of field visibility predicate
added support for Solidity JSON RPC configuration in the CommonParameter class to enable dynamic assignment of the Solidity JSON RPC port based on
added a check to ensure the folder is an instance of DropTarget before removing it to prevent potential ClassCastException when removing drop targets
refactor StubJarTest to use a new createStubJar method for stubJar creation to improve code organization and maintainability by encapsulating stubJar
added new Feature objects for setup wizard, probing module, and workflow helper in StartPageTopComponent. java to enhance user experience by providing
remove redundant call to meteredflusher in cassandra daemon
removed unnecessary cast to Boolean in OnlineTestCase. java to simplify code and improve readability
replaced ReturnAttributes. NONE. value ( ) with ReturnAttributes. ALL _ USER. value ( ) in LdapUserGraphicalAuthenticationRepository.
refactor onIdleTimeout handling in HttpChannelState. java and add failure callback in HttpChannelTest. java to improve handling of timeout exceptions and
updated CreateEndPoint class to extend Invocable. NonBlocking instead of implementing Runnable to ensure that the CreateEndPoint class extends from Invocable
refactor TABLE _ HEADER _ SEPARATOR pattern and update its logic in TableBlockParser. java ; add new test cases in TablesTest. java to
changed return value from 32. 0 f to 31. 5 f in Camera. java to increase the quality of the camera
added a preference for " startonbootSetup " and disabled the " startOnBootSetup " feature in GpsSettingsActivity. java ;
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService. java to improve security by limiting the number of clients
updated error message in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to specify that the parameter name is not null to improve clarity of error messages
added JUnit Ignore annotation to ScheduledMethodMetricsTest. java to mark the test as ignored due to race conditions
refactor SegmentGenerationAndPushTaskExecutor to return LOCAL _ PINOT _ FS instead of LOCAL _ PINOT _ FS _ SCHEME
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistent across different locales
added MetalLookAndFeel import and set the UIManager's look and feel to ensure consistent look and feel across different operating systems
added a ` @ PreDestroy ` method and modified the ` pingAtRegularIntervals ` method to include a ` @ PreDestroy ` annotation
removed the error message from the ShenyuResultWrap error call to streamline error handling by eliminating unnecessary message retrieval
rename ` module ` to ` from ` in ` addreads ` and ` addExports ` method to improve clarity and consistency in naming conventions
added handling for CmdLineException in PinotAdministrator. java to improve error logging for better debugging
replaced ` super. equals ( o ) ` with ` isEqualTo ( o ) ` and deprecated the ` hashCode ( ) ` method in ` Subject
refactor variable names for clarity and consistency in the CustomPlaybackOverlayFragment and ImageButton classes to improve code readability and maintainability
updated zoom level settings in BasicMapViewer. java to allow for more control over map zoom levels
refactor admin user handling in DrillRoot. java to use ImpersonationUtil for improved clarity and maintainability of the code
replaced ` AccessController. checkPermission ( perm ) ` with ` sm. checkPermission ( perm ) ` in ` UnixFileSystemProvider ` and ` Windows
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated related classes to enhance functionality by allowing custom argument extraction
changed the ` defaultGroup ` variable from ` private ` to ` private final ` to ensure immutability of the ` defaultGroup ` variable
fix cache leak in tilesizechanger
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment. java and InfoLayoutHelper. java to streamline code by eliminating
refactor ` cleanEntriesForFeedsWithoutSubscriptions ( ) ` and ` cleanFeedsWithoutSubscriptions ( ) ` methods to improve code clarity and
replaced ` CoreAuthenticationTestUtils. getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests. java ` to streamline authentication handling
nifi - 5657 : fix filebasedclusternodefirewalltest to work on window
fix for conic curve with no inverse
refactor isEOF ( ) logic in RandomAccessReader. java to improve readability and maintainability of the code
added @ SuppressWarnings ( { " unchecked ", " vararg " } ) annotations to Fields. java and MockitoBeforeTestNGMethod. java
added methods for creating images from an array and modified the ` createFromImage ` method to accept a list of images to enhance image creation functionality and
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder. java ` to ensure compatibility with the latest HBase
replaced runtimeVisibleMethodOfFieldAnnotations with runtimeVisibleFieldOrMethodAnnotations in ClassParser and JavaClass classes to improve clarity and consistency in handling
( chore ) camel - maven - plugin : use java. util. objects. equals for null comparison
rename method ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and update references accordingly to improve clarity and consistency in method
added multiple test cases for default views in NinjaDefaultTest. java to ensure that the application correctly handles specific view locations
rename ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and update related calculations for scalable grid to improve clarity and functionality
updated padding values in DetailFragment and adjusted list position offset in ListFragment to improve layout responsiveness and ensure proper vertical margin
updated exception handling in ZkStateReader. java to catch both KeeperException and InterruptedException to improve error reporting for thread interruptions and
added null checks for field names and values in HttpFields. java and implemented a test for empty headers in RequestTest. java to ensure that
server : don't allow static nat rule for non - static nat network
added calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment. java to improve UI responsiveness by
added a call to removeExtraEmptyScreen in mWorkspace to ensure that extra empty screens are removed from the workspace
added a boolean variable ` fixedWidth ` and modified glyph handling logic in ` BitmapFont. java ` to allow dynamic resizing of glyphs based
removed the ` showTitle ` parameter from the ` ChangeLogFragment ` constructor and refactored the ` createFragment ` method to simplify the
added preEvent, preTransition, postTransition, and stateMachineError methods to AbstractStateMachineFactory for enhanced state machine functionality
refactor ConfigDescriptionProvider. java to improve code readability and maintainability
updated role creation in TestAuthorizationApiAuthorizer and modified StorageBasedMetastoreTestBase and TestStorageBasedMetastoreAuthorizationDrops to
refactor conditional logic in FacetComponent. java and add test cases in TestDistributedSearch. java to improve code clarity and ensure proper handling of facet
updated PropertiesExpander to use overridingProperties instead of createOverridingProperties and modified cache file path to ensure compatibility with the current project's
added logic to retrieve and stop Jetty in the DeleteInactiveReplicaTest class to improve resource management and ensure proper cleanup of Jetty resources
added a new parameter ` FILE _ NAME ` to ` FileActionsDialogFragment ` and updated the ` newInstance ` method to accept a filename to
added a new constant for INVALID _ DIRECTION and modified condition checks for previous reorder direction to ensure proper handling of previous order direction in the layout
added new fields for currency, from, and to in InnerTransferRequest. java and updated the API path in AccountAPI. java to improve
added method ` getExecutionIdForJobId ` to retrieve the execution ID for a given job to enhance functionality for job execution in tests
added a new annotation ` EnableAdminClient ` in the ` org. noear. solon. admin. client ` package to facil
replaced specific imports with a wildcard import and added visitIdentifier methods for identifier handling to streamline import statements and enhance functionality for identifier processing
added a call to set the action text color to primary dark to enhance the visual appearance of the authenticator activity
added ` find ` method to ` Manager `, ` StreamSupplierComponent `, ` AbstractManager `, ` MockManager `, and `
replaced instances of ` addTestStepsForPickleSteps ` with ` createTestStepsForBeforeHooks ` and ` createTestStepsForAfterHooks `
renamed the test method from " noArgMethodIsNotValid " to " validNoArgMethod " to clarify the purpose of the test method
added a ` cancelClient ` method to ` RpcServer ` and modified the ` startDriver ` method to handle client termination to improve error handling
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo ` and updated related classes to handle implicit pre - coercion
initialize ` lastDisplayedUser ` with an ` Optional. empty ( ) ` to ensure ` lastDisplayedUser ` is set to ` Optional.
added a new method ` findAll ` to ` QueryDslMongoRepository ` and updated the query syntax in ` QueryDslMongoRepository `
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions when stopping the consensus
added a break statement in DefaultPlannerBenchmark. java to exit the warm - up loop in case of a failure
added xread and xreadGroup methods to MultiKeyPipelineBase, MultiKeyBinaryRedisPipeline, and MultiKeyBinaryRedisPipeline classes to
removed unnecessary ` this ` keyword from ` LinkedBufferInput ` and ` StreamInput ` classes to streamline code and improve readability
added ` @ EnableWebSecurity ` annotation to ` CasWebAppSecurityConfiguration ` and modified ` configureHttpSecurity ` method in ` Cas
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` for MiniHS2 to enable testing of the ` TestJdbc
added a ` registerProviderInternal ` method to ` ShadowContentResolver ` and modified ` ContentProviderController ` to initialize ` providerInfo ` to
updated references from ` Version ` to ` ClassFile. Version ` in ` AttributeReader ` to ensure compatibility with the new package structure
added keep - alive configuration to SingleConnectionManager to enhance connection management by allowing configuration of keep - alive status
[ java ] rename context. unicastsenderflowcontrol ( ) to context. multicastsenderflowcontrolsupplier.
ggb - 2564 fix for locus with no point in 2d
added ConcurrentHashMap and ConcurrentMap imports and modified exception handling in multiple classes to improve concurrency handling and enhance error reporting for IO exceptions
added support for Selenium WebDriver selection in FileDumper. java and modified screenshot handling in HttpWebClient. java to enhance user experience by allowing
replaced assertEquals with assertThat in multiple test files to improve readability and maintainability of the test code
remove deprecate context reference from trufflelanguage
updated exception handling in StubberImpl. java and added new test classes StubbingWithBadThrowablesTest. java and UninstantiableThrowable
updated error handling in Actor and Group classes to improve clarity of error messages for ascendant and descendant actors
added location permission handling in the LocationPickerActivity to enhance user experience by allowing access to map locations
added test case for http : / / issues. apache. org / activemq / browse / amq - 4237
added CookieSpecs import and set standard cookie specification in GetHTTP. java to enhance cookie management in the HTTP client
refactor intersection logic in Intersector. java to improve readability and maintainability of the code
replaced DeemphasisFilter with NonClippingGain in P25AudioModule. java and removed log message in AirspyTuner
added monitoring URL support to the ScrollingPanel and SystemInformationsButtonsPanel classes to enhance functionality by allowing users to view and validate the
added a new configuration option for the service create timeout in KubernetesConfigOptions. java to provide a way to specify the timeout value for the service
added case handling for " landmark ", " city ", and " empty _ photo " icons in NearbyListFragment. java
added a null check for ` type. getPackage ( ) ` before processing ` packageName ` and ` allClassesByPackage ` to avoid potential `
; ; ; ; ; ; ; ; ;
refactor Javadoc parsing logic to handle nested braces correctly to improve code readability and maintainability by using a more robust approach
[ java ] remove unused field in archive test
updated EdgeDataTableModel to use edge and meta edges instead of edge data to ensure correct handling of edge data in the graph
removed unnecessary import from SpringResourceProperties. java and PasswordManagementConfiguration. java to streamline code by eliminating unnecessary dependencies
updated Timber log messages to include the playback speed format to improve clarity of log messages for better debugging
send room remove event when cluster be start
updated JSON key from'replicas'to'cores'in AutoScalingHandlerTest. java to ensure compatibility with the new data structure
added methods to set flipY, generateMips, and texture key in TextureHelper. java to enable flipping and generation of texture
refactor ` PythonDslProjectBuildFileParser ` to utilize ` EventReportingProjectBuildFileParser ` instead of ` PythonDslProject
add librarynormalizationpass to allow normalization of library.
replaced ` retrofit. nextResponseBodyConverter ( this, innerType, annotations ) ` with ` retrofit. responseBodyConverter ( innerType, annotations )
[ hotfix ] add @ visiblefortesting annotation to memorysegment
added Temporal annotation for TIMESTAMP data type in ConsoleSessionVO. java to ensure accurate representation of timestamp values in the database
added a new class Hbs for handling templates in the Jooby framework to facilitate template rendering and testing within the Jooby
updated ChatMessageAdapter to handle null or empty hint strings and adjusted visibility logic for incoming messages to improve user experience by ensuring messages are displayed
changed the iteration method from ` keySet ( ) ` to ` values ( ) ` in ` ImportCsv. java ` to ensure correct handling of
add test for waituntilalertdialogappears
added a check for the size of distinct column indices in ReduceSinkDeDuplication. java to prevent processing of duplicate column indices
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 567
regenerate client with updated copyright year ( # 4382 )
replaced occurrences of " websocket - server " and " websocket - client " with " jetty - websocket - client " and " jetty - websocket -
replaced ` Collectors. toUnmodifiableMap ` with ` Collections. unmodifiableMap ` for identity attribute handling to improve immutability and ensure immutability
added logic to check if the sketch code is not modified before repainting the header to ensure the header reflects the current state of the sketch
replaced instances of ` new Double ( x ) ` and ` new Float ( x ) ` with ` return x ` and marked methods as deprecated
updated the method call from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource. java ` to ensure the correct timestamp is used for data
fix for http : / / code. google. com / p / mybatis / issues / detail? id = 558
refactored database options handling in StorageUtils. java and enhanced logging in Manager. java to improve code clarity and ensure accurate logging of block
updated the condition check from " double " to " mutual " in ImporterGEXF. java to ensure correct handling of edge types
removed the FLAG _ SLIPPERY constant and added it to the StatusBarTouchController class to streamline the code by eliminating unnecessary
trufflelescriptor. getarraydimension ( ) should return 0 instead of 1
added functionality to retrieve and set the Google Drive folder path from preferences to enhance user experience by allowing access to the Google Drive folder
ggb - 2852 : add a way to shuffle the suggestion on the right - click
added @ Nullable annotation to assertThat methods in Truth. java to improve nullability annotations for better null safety
updated the return values for the 2 case in ArrayUtil. java to correct the logic for handling larger data sets
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to include a method to check if a constructor can be instrument
added a synchronized Multimap to track waiting for Anticompaction in StreamIn and StreamInitiateVerbHandler to improve thread safety by ensuring
added methods to manage the ` isKeyguardSecure ` flag in ` ShadowKeyguardManager ` and updated tests in ` ShadowKeyguardManager
added serialVersionUID fields to StringDialog class to ensure compatibility with serialization standards
updated string processing to replace spaces with spaces and added a check for the length of the ` overrideParts ` array to ensure proper handling of empty
corrected the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionFor
added a condition to check the drain behavior in AsyncFileImpl and implemented a test for the drain behavior in FileSystemTest to ensure that the drain
increased LIGHTS _ NUM and LIGHT _ INTESITY in HybridLightTest. java and updated shader names for clarity to improve
replaced instances of ` FakeProjectFilesystem ` with ` workspace. getProjectFileSystem ( ) ` across multiple integration test files to streamline filesystem initialization and
replaced instances of ` String ` with ` PathWithLines ` in ` RuntimeOptions. java ` and ` CucumberFeature. java ` to
refactor Gson, JsonArray, and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from TEST _ DIRS in PubRoot. java to address TODO 2022. 1
added a call to close ( ) on ParcelFileDescriptor to ensure proper resource management and prevent memory leaks
added a thread - local ` AtomicInteger ` for prefix index management in ` BasisLibrary. java ` to improve thread safety and ensure consistent prefix
added LogLevel annotation to TestDistributedStatsComponentCardinality. java to enable debug logging for distributed stats
added throwIfImmutable ( ) method to IntList. java to ensure immutability of the list
added @ NotNull annotation to onApplicationEvent and modified URL handling in GrpcServerRunner, GrpcClientBuilder, and UnitTestReadHelper
updated package structure and refactored regex command handling in Graal. java to improve code clarity and maintainability by using a Supplier for the
fix invalidate function array in insight instrument
added support for converting line endings of the manifest file on Windows to ensure proper handling of line endings in the manifest file
change priority from LOW _ PRIORITY to HIGH _ PRIORITY in FindNullDeref. java and add RFE3531161.
added nullability annotations to the ConfigDescription and ConfigDescription methods to improve null safety and prevent potential NullPointerExceptions
don't wrap cancellation exception in a try catch block
added a conditional statement to initialize the image stream based on the page's crop box to ensure the image stream is initialized correctly based on the
refactor ManagerBase class structure to improve code maintainability and readability
added a new BooleanFlag ENABLE _ ALL _ APPS _ IN _ TASKBAR to the FeatureFlags class to enable access to all apps from
replaced direct instantiation of FragmentActivity with Robolectric's ActivityController to improve test reliability by using Robolectric for activity management
renamed ` getFileCoordinates ` to ` processFileCoordinates ` and introduced ` getDecimalCoords ` method in ` ShareActivity ` to improve clarity and
rename ABCase1 _ 1. java and ABCase2. java to TestABCase1. java and TestABCase2. java
updated the parameter name from ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and added a null check in ` Manager
updated the handling of RocketChangedEventHandler in OpenRocketViewer. java to ensure proper handling of rocket changes
added a new class ` ChangeDependencyGroupIdAndArtifactId ` to update Maven dependency IDs and their artifact IDs to enhance dependency management by allowing users to
added logic to check if the input path is not a segment in the IndexingJob class to ensure that the input path is not a segment
fix checkobjectheap to use lte instead of lt ( )
refactor PreprocessorDelegate to use a Supplier for replacement paths and pathToSourcePathMap to improve code readability and maintainability by separating replacement and path
rename JsonExamples class to Examples and update package - info. java to improve clarity and consistency in naming conventions
added debug logging statements for extracting, copying, and closing streams in ViewExtractor. java to improve traceability and debugging of the code
refactor FindsByLinkText class to improve code readability and maintainability
added a new Main class in the com. facebook. buck. oop _ javac package to facilitate the hit detection of Java O
fix concurrentmodificationexception in sip registration
removed duplicate continue statements in NativeScanner. java to streamline code for better readability
changed package structure of RendererConfigurationTest from ` net. pms. test ` to ` net. pms. configuration ` to align package
refactor AndroidLibraryDescription to use a memoized supplier for exported and queried dependencies to improve code efficiency and maintainability by reducing repetitive code
replaced ` stream ( ). count ( ) ` with ` size ( ) ` in ` remoteContainsResults ` to improve performance by using the
added charset handling for content streams in ExtractingDocumentLoader. java to ensure correct character encoding is used for documents
updated SQL insert and select SQL statements to use parameterized queries to improve flexibility and maintainability of the SQL query
added a check to return early if the slot is - 1 to optimize performance by avoiding unnecessary processing when no slot is available
add cli option to ignore transitive repository
removed duplicate @ Inject annotation for backgroundJobManager in ContactsPreferenceActivity. java to streamline dependency injection for better code clarity
updated ColorsActivity to extend from AppCompatActivity instead of Activity to ensure compatibility with modern Android features
added a null check before closing the selection to prevent potential NullPointerException when selection is not initialized
added a condition to handle cases where the regex matcher does not match the end of the string to improve robustness by avoiding unnecessary processing when the
updated the @ IntegrationTest annotation to include a server. port configuration to allow integration tests to run with a specific server port
added a new UDF'reverse'to the Hive framework to enable reverse functionality in the Hive framework
replaced calls to ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` in multiple files to ensure correct handling of request context
refactor Tracer class implementation to improve performance and maintainability of the code
[ hotfix ] [ test ] ignore rocksdb state backend test
replaced multiple specific import statements with a wildcard import in XMLChangeLogParserTest. java to simplify import statements and improve code readability
added synchronization to the StarTreeRecordStoreCircularBufferImpl class and implemented a clear method in TestStarTreeRecordStoreCircularBufferImpl
updated forecastMinutes, forecastHours, and forecastDays values in OpenWeatherMapOneCallHandler. java to improve accuracy of weather forecast data
[ hotfix ] [ test ] increase timeout in abstractpagetemplatetest
updated RemoteTargetGluer and FloatingHeaderView classes to improve the handling of remote target handles and introduce animation features to enhance user experience by
renamed ` parseRerunFile ` to ` parseRerunFile ` and changed return type to ` Stream. of ( ) `
add livingwood quartz to the creative tab
swapped the expected values of optItem and retrievedOptions in TestRadioButtons. java to ensure that the test correctly verifies the expected size of
added support for file size options in RCFileCat. java and introduced a method to retrieve the number of rows in RCFile. java to
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added multiple calls to checkNDArray in JnaUtils. java to ensure proper handling of MXNet NDArray closure
[ hotfix ] [ test ] fix typo in blobserver
fixed bug 1465574 - unusedprivatemethod no longer report false positive
rename variable ` lexicalScope ` to ` lexScope ` for consistency to improve code readability and maintainability
added a test for the sftp auto - startup feature in InboundChannelAdapterParserTests. java to ensure that the sftp adapter behaves as expected
added ` getLevel ( ) ` and ` getRoot ( ) ` methods to ` Node `, ` AbstractNode `, and ` STRtreeNode
refactor version parsing logic to handle both minor and minor characters to improve accuracy in extracting version numbers from version strings
added a check for empty tags before adding them to the activeItem object to avoid potential null pointer exceptions and improve logging level
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a new ` fromDateTime ` method in `
hhh - 17100 fix npe in customtype. disassemble ( )
updated Log4j2ConfiguratorServlet. java file to improve logging functionality
replaced the instantiation of HiveException with a return of a new AuthorizationException to streamline exception handling by directly returning the original exception
updated cgo command prefix handling and added a new test for cgoLibraryWithCxxPrebuiltDepBuiltWithWrappedCpp to improve
added Buildable annotation to CustomResource. java to enable the builder for Kubernetes API builder functionality
removed the ` @ Override ` annotation from ` Only. java ` to streamline the code by eliminating unnecessary overrides
added a timeout constant for three hour in HttpClientFactory to allow for more time for connection handling
added " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse _
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 467
removed the @ Singleton annotation from ApplicationController. java to streamline the code by eliminating unnecessary dependencies
added logic to retrieve the username from OwnCloudAccount if the display name is not empty to ensure the username reflects the current display name
added BatchStatus import and implemented a test for resume paused job execution to ensure proper job execution behavior when resuming a paused job
added a null check for cacheConfig in HttpSyncDataService. java and refactored data refresh logic in DataRefreshFactory. java to improve
[ java ] make docker session public in localnode
javaparser : use default package name instead of java. lang.
pdfbox - 4892 : don't decrypt pdfs in non sequential mode
removed unnecessary import statements and simplified the instantiation of the DistributedRowMatrix to streamline code and improve readability
refactor HttpServerTestBase. java for improved test coverage to enhance reliability of HTTP server tests
fix test for portletapplicationmaptest
added tests for handling ` NestedBeanIgnoreNulls ` in ` BeanTableSchemaTest ` to ensure correct behavior of ` NestedBeanIgnoreNulls `
add redissonautoconfigurationcustomizer to spring boot starter
updated the index calculation in Indicator. java and added a new IndicatorTest. java file with unit tests to ensure correct behavior of the
added new methods ` execInContainerWithUser ` and ` execInContainerWithUser ` to ` ContainerState ` and ` ExecInContainer
refactor conditional checks for WebSocketByteListener and WebSocketTextListener in NettyWebSocket. java to improve readability and maintainability of the code
added test methods for semgrex construction in SemgrexTest. java to ensure correctness of semgrex patterns in the graph
added a broadcast intent to clear pending reads in HomeFragment to enhance user experience by preventing unintended reads
removed conditional check for pre - Gingerbread in TouchImageView. java to streamline code for better readability and maintainability
added a flush method to DefaultProfileValidationSupport and introduced a flush method in WebsocketDstu21Config to enable flushing of the Default
( chore ) camel - base - engine : fix camel - veto to not start
added Floating ActionButton functionality to ShareActivity to enhance user experience by allowing users to open and close the floating action menu
added a new ` InlineParslet ` class and modified the ` ToDateTokenizer ` to handle formatting tokens to enhance date parsing functionality to
; ; ; ; ; ; ; ;
updated error messages from " funktionstecken " to " funktionstoken " and " eller " to
added a check for server check state before binding the OperationsServiceConnection to ensure that operations are only refreshed when server is checked
replaced instances of ` getBeginColumn ( ) ` and ` getEndColumn ( ) ` with ` getBeginLine ( ) ` and ` getEnd
added waitFor ( ) method calls in CxxPreprocessAndCompileStep. java and implemented waitFor ( ) method in ManagedThread. java to ensure
added a boolean field ` requireAllRepositorySources ` in ` PrincipalAttributesProperties ` and implemented a new merge method in ` CoreAuthenticationUtils `
fix max _ size _ per _ node configuration for map store eviction
added support for enabling or disabling SSL protocols in the NettyWebServer configuration to enhance security by allowing configurable SSL protocol settings
replaced AtomicBoolean with AtomicReference in SetOnce. java and added a new trySet method in TestSetOnce. java to improve concurrency handling and ensure
updated return logic in QueryDslMongoRepository to handle null property case and added a new test in SpringDataMongodbSerializerUnitTests
updated assertion messages in RoundRectBorderTest. java for consistency to ensure correct behavior of rounded borders regardless of their original style
added a check for non - empty genesis configuration before creating a new cluster instance to ensure that the cluster is only created when there are no
remove test that run multiple web driver in parallel
updated CountDownLatch initialization and added validation for sign length in PrecompiledContracts. java to ensure correct handling of sign length and improve logging clarity
changed conditional check from " if ( windows ) " to " if (! windows ) " to ensure that the code only executes when the window
replaced the implementation of ` maxN ` with ` greatest ` and ` minN ` in the ` MoreCollectors ` class to improve clarity and
added null checks and improved WebSocket client handling in multiple classes to enhance robustness by preventing null pointer exceptions
added validation for invalid lat and lon in GeoPointField to ensure that invalid geographical coordinates do not result in errors
updated method names for creating and saving workflows in OozieProxyImpersonator. java and WorkflowFilesService. java to improve clarity and
refactor ResponderId class structure to improve code maintainability and readability
updated ` getTableDocument ` method to include a ` withDependents ` parameter to control the behavior of ` getTableDocument ` based on whether dependent
added functionality to display a confirmation dialog for consecutive uploads without coordinates to enhance user experience by allowing users to upload without coordinates
added caching mechanism for profile data in ProfileResources. java and created a new viewProfile method in ProfileResources. java to improve performance by reducing
refactor JpaMetamodelEntityInformation to handle identifier derivation and improve property value extraction to enhance type safety and support for nested entity properties
added test assertions for index creation in UpgradeIT. java and refactored bootstrapLastDDLTimestamp method in ConnectionQueryServicesImpl. java
add default exception mapper to dropwizard's exception mapper
added a boolean parameter to the method call in EntryEditor. java to provide control over the behavior of the storeFieldAction
updated the ` nativeCreateNSWindow ` method to include ` ownerPtr ` for better handling of window pointers to ensure that the window pointer is
updated database schema to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure compatibility with the new database schema
added support for the STOCK type in Tile. java and modified event handling in Tile. java to enhance the visual appearance of the STOCK
fixed - rbucket. set ( ) method throw npe if codec be null
don't report complex generic signature in typeframemodelingvisitor
refactor ` LauncherBackAnimationController ` to utilize ` BackProgressAnimator ` for handling back animations to improve animation responsiveness and ensure proper handling of
modified the calculation of ` _ initialPageNo ` in ` ContentLimitContainer. java ` to ensure that the ` _ initialPageNo `
fix crc16 checksum calculation
added comment matching logic in FormattedSqlChangeLogParser and created corresponding tests in FormattedSqlChangeLogParserTest to ensure correct handling of
fix for plexus - archiver use in maven plugin
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader. java to improve error handling by resolving the class usage file
refactor conditional statements and add multiAggregationTest method in TSServiceImpl. java and DaemonTest. java to improve code readability and enhance test coverage for
added support for handling UNSIGNED _ BYTE and ByteBuffer types in GwtGL20. java to ensure compatibility with WebGL and improve error handling
added a new test method ` testDebugInfo ` and modified method calls in ` OutputMemoryTest `, ` PrintR `, and `
replaced ` UnmodifiableClassException ` with ` Throwable ` and added exception handling for classes in ` InlineBytecodeGenerator ` to improve error handling and
add trace for class initialization.
[ hotfix ] [ broker ] fix typo in basebrokerrequesthandler
( chore ) camel - topic : use caffeine cache for load topic route
modified the ` createDataSource ` method to include a ` readOnly ` parameter and set the connection pool's read - only mode to allow for
updated the regex pattern for invalid target release in FindBuildToolFailures. java and added a new error message in FailureLogAnalyzerTest. java
updated URI generation logic in DetailFragment. java to include a check for location intent availability to improve location retrieval accuracy and ensure the correct URI is
added null check for inherited parameter contexts in StandardParameterContextDAO. java to prevent potential NullPointerException when accessing inherited parameter contexts
refactor ClassLoader implementation to improve performance and maintainability of the code
added a method to set the origin response header in ProxyRequestHelper. java and created a corresponding test in ProxyRequestHelperTests. java to
added a new ProfileSettingDrawerItem to the GpsMainActivity class to enhance user interface by providing a dedicated drawer item
added validation attribute for XML parsing in multiple classes to enable validation of XML elements in the application
danielwagnerhall for ` ` ;'' instead of ` ` ; '
added a maxRows variable and modified fetch size handling in IoTDBStatement. java to ensure that fetch size does not exceed the maximum number
refactor isCountOptimizable method to allActionsAreOptimizable in SqlStreamTerminator. java to improve clarity and maintainability of
added mouse event handling for nodes and mouse positions in StandardVizEventManager. java to enhance user interaction by allowing selection of nodes and mouse
replaced the ` setMemory ` method with a ` zeroBuffer ` method in ` ManyToOneRingBuffer. java ` to improve memory management by
refactor TerminalNode to use a local variable for the xorGroup to improve code readability and maintainability by using a dedicated method
removed the ` getHeight ( ) ` and ` getWidth ( ) ` methods from the ` LCDUIImageMonochromeBitmapSource ` class
refactor SourcePathResolver to use a new method for retrieving absolute paths to improve clarity and maintainability of the code
add a test case for xmlparser. encodeandparseidentifiertostring ( ) to ensure that the correct value be pass to the parser
modified the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and added encoded URL checks in ` WebsocketRoutingFilterTests ` to
fix ` ` gcc - compile'' file name in test suite
refactor CxxPlatform retrieval logic in HaskellBinaryDescription. java to improve code clarity and maintainability by encapsulating platform retrieval logic
added import statements for Javadoc in multiple Java files to ensure proper handling of Javadocs and improve code organization
added null check for ` current. get ( ) ` in ` ConcurrentLinkedStack ` and renamed methods in ` ConcurrentLinkedStackTest ` to
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before initializing it to prevent potential NullPointerException when mDirectories is not initialized
added a condition to check if the overview state is not enabled and not the first layout in RecentsView. java to ensure proper handling of
added multiple package - info. java files for various Lucene packages to enhance package documentation and improve organization
added a text setting for the visibility of the autoleveler panel to enhance user experience by allowing access to the visibility of the autole
added optimization handling in DirectUpdateHandler, DirectUpdateHandler2, and UpdateHandler to enable post optimization and optimize callbacks for the update handler
replaced Inflater with Inflater and Deflater in CompressionMode. java to ensure proper handling of compressed data and improve compression efficiency
removed a check for user _ data in Shaderc. java to streamline the code by eliminating unnecessary checks
added a check for local metastore in the retrying metastore client logic to ensure that retrying metastore clients respect the local metastore
updated import statements and added handling for ConnectionClosedException in HeliosSoloLogService. java to improve error handling and ensure proper handling of
refactor Subject class structure to improve code maintainability and readability
add weak reference to the ` ` typemap'' to the ` ` abstractserializationservice '
updated color distance calculations in HSSFPalette. java and added a new test method in TestHSSFPalette. java to improve accuracy of color
chore ( regen ) : update license year for generated file
) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
added a flags parameter to the registerReceiver method in ShadowApplication and ShadowContextImpl to allow for additional flags during receiver registration
refactor FFmpegTest to use InvocationOnMock for loading the " ffmpeg - version " resource to improve test reliability by ensuring the correct
added handling for previous input stream in Ogg and OggInputStream classes to ensure proper resource management and prevent memory leaks
added a new constant RESPONSE _ WAS _ NULL and updated the failure message assignment to improve clarity and maintainability of the failure message
[ te ] don't retry migration if there be no anomaly
added a showToast method in BaseActivity and modified Toast handling in DetailActivity to improve user experience by displaying toasts when the settings are enabled
updated the method in TracingFeignClient to use delegate's requestTemplate ( ) instead of a local variable to improve clarity and
added name validation and referral handling in LDAPCertStore. java to ensure proper handling of LDAP names and improve referral management
refactor the retain logic in GatewayRSocket to use a new retain method to improve code readability and maintainability by reducing redundancy
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click in ` AdapterViewTest ` to improve test clarity and ensure
[ hotfix ] [ test ] migrate checkpointfailuremanageritcase to junit5
remove genericitemuiprovider, since it be no longer use.
added getter and setter for the selected object in the SIPCommSelectorBox class to enable dynamic selection of the selected item
added a JUnit Isolated annotation to the MetaInfConfigurationTest class to indicate that the FileSystemPool access is intended for testing purposes
added a call to set the server connector's host address to ensure the server starts with the correct bind address
added handling for heart mode in DynamicClientRegistrationEndpoint to improve token validity settings for different grant types
added a CloverInstrumentationFilter class to the TestInterfaceAudienceAnnotations class and modified the condition in SplitLogCounters to ensure proper handling of
added support for Smartmi Evaporative Humidifier in MiIoDevices. java and modified output formatting in ReadmeHelper.
make plausible to break only if there be no lava
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other packages
ambari - 20819. ambari should log an error if the repository list be empty. ambari should log an error if it
modify the return condition in IntHashSet to include a check for missing values to improve the logic for handling missing values in the hash set
added Serializable interface to RuleAdministratorImpl to enable serialization of RuleAdministrator instances
add ` ` *'' origin pattern in allowedtimimaterialfilter
updated g3d file paths in BaseG3dHudTest. java and NewModelTest. java to ensure compatibility with the new
added error logging for updating the latest solidified block in Manager. java to improve stability and debugging of solidified block updates
updated value handling in ExecResult. java and modified test cases in TestServerCustomProtocol. java to improve null safety and enhance test coverage for
added a method ` hasAccess ` to check if a user has administrator access to enhance security by preventing unauthorized access to unauthorized users
refactor ClassMirror and StubJar to implement CreateStubAction for creating stub classes to improve code organization and facilitate stub class creation
added a TextView for displaying the internal link text in FileDetailSharingFragment to provide users with a clearer indication of the content they can share based on whether it ' s a file or a folder
updated the expected string format in PredictionTest to use Locale. ENGLISH to ensure accurate accuracy regardless of locale settings
updated condition to check for SATURDAY instead of SATURDAY in ModelZooTest. java to ensure correct handling of day
added functionality to hide the IME in the AllAppsContainerView and LauncherAllAppsContainerView classes to improve user experience by ensuring the IME
use embed event storage engine in test
refactor path handling in BsdFileStore. java and introduce getmntonname method in BsdNativeDispatcher. java to improve path management
add test case for issue # 1599
added support for optional parameters in the spawn command to enhance flexibility in command usage by allowing optional parameters
added MIN _ CONTENT _ DIMEN constant and methods to calculate content area dimensions to improve code readability and maintainability by centralizing content area
make graalcompilertest. compilegraph ( ) final
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` to ensure compatibility across Windows systems
added plugin check class names to pluginCheckClassNames in UpgradeCheckRegistry. java and streamlined the addColumnsToUpgradeTable method in UpgradeCatalog
refactor Environment class to improve code readability and maintainability
added import for LuceneTestCase and annotated RecoveryAfterSoftCommitTest with @ LuceneTestCase. BadApple to address issue SOLR - 7421 related
updated file system separator handling in CodenameOneImplementation. java and removed a warning message in HashtableContent. java to improve compatibility with different
rename ` FLAG _ IGNORE _ HDMV _ DTS _ STREAM ` to ` FLAG _ ENABLE _ HDMV _ DTS _
replaced ClassLoaderResourceAccessor with CompositeResourceAccessor in LiquibaseEntityResolver. java and modified XSD file handling in XMLChangeLogSAXParser.
added security property for disabled algorithms in ComHostnameVerifier and JavaxHostnameVerifier to ensure proper handling of disabled algorithms in the hostname verification process
updated ` AbstractCxxDeps ` and ` CxxLibraryDescription ` to use ` CxxDeps. of ( ) ` instead of ` CxxDeps
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` respectively to improve clarity and consistency
updated the @ DoNotSub annotation for the resizeThreshold variable in Int2ObjectHashMap. java to ensure proper handling of the resizeThreshold variable
added a check for non - empty title before setting the folder name hint to ensure that the folder name hint is set only when it is not
added " uaa " to the list of client names in UaaResetPasswordServiceTests to ensure proper handling of client names and improve test
changed access modifier of methods ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` from public to private to restrict access to these methods
updated log messages in AtomicCounter, AtomicLongPosition, and UnsafeBufferPosition to include closed status to improve clarity of log output when the counter is
refactor MimetypeIconUtil class to improve code readability and maintainability
rename ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a test for negated instanceof in UnnecessaryParenthesesTest. java and modified the return condition in UnwrapParentheses.
added a ` built ` flag and modified the ` teleport ` method in the ` Location ` class to enable dynamic assignment of the `
replaced direct calls to ` Base64. encode ` with ` Base64Utils. encodeToUrlSafeString ` in ` TokenKeyEndpoint `
updated import statements and modified statistics reporting method in TranslatorManagerHelper. java to improve code clarity and ensure accurate statistics reporting
rename ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the ` ContainerAnnotation ` interface
added a null check for the result object in ObjectIdentityImpl. java to ensure that the getId ( ) method returns a non - null value
refactor setUpRevampedTweet method to handle retweeter retrieval more effectively to improve code clarity and maintainability by separating retweeter
updated visibility logic for verified text based on user theme settings to ensure verified text reflects the user's theme for better user experience
refactor AbucoinsDigest constructor to use a private final variable instead of a static instance to improve code clarity and maintainability by using a
camel - 15836 - camel - mongo : enable autowire on mongo connection.
added a ` sourceIndex ` parameter to the ` AttributeMapping ` constructor and introduced a new constant ` LAST _ INDEX ` in multiple classes to
improve error message when alter partition statistic
added a call to UserGroupInformation. isSecurityEnabled ( ) in AuthParams. java to ensure proper handling of user authentication based on security settings
refactor ConnectivityReceiver, TerminalKeyListener, AbsTransport, and EastAsianWidth classes to improve code organization and maintainability
escape the contact email in the contact email for the home page
don't enrich reflections with subsystems in terasology
use numfeatures instead of means. length in joinmodeller
make sure that the number of input in the algebra view ben't negative
[ hotfix ] [ kafka ] add debug log for singlenode kafka resume strategy
replaced references to ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat. ACTION _ SET _ PLAYBACK _
added support for automatic separation in the MotorMountHandler and FlightConfigurationID classes to enhance functionality for managing the'launch'stage in
tika - 2906 -- fix for tika - 4892, and add unit test for msn file parser
added an @ Ignore annotation to the JdbcFrontJdbcBackJdbcBackLinqMiddleTest class to mark the test as ignored due to JDK
refactor lock file creation into a separate method in MavenDependencyResolver to improve code organization and maintainability by encapsulating lock file creation logic
updated sync and favorite notification settings in UpdateUtils. java to ensure compatibility with the latest version of the application
added a check to return null if the username equals " FEDERATION _ USER " to handle cases where the username equals " FEDERATION
don't check for truffleobject in executemethodnode. isparametrized ( )
replaced ` Collectors. toList ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWebAppTest. java
logbackvalve should not fail if the access event be deny.
refactor Collection and Map classes for improved code organization to enhance maintainability and readability of the code
removed import statement for org. apache. lucene. util. Version in CreateIndexTask. java to streamline code by eliminating unused imports
added logic to handle missing primary key changes in OracleDatabase and AbstractDb2Database to ensure correct schema handling for backing indexes and improve error handling
updated exception handling in MsckOperation and added a test for invalid partition names in Msck to improve error reporting for invalid partition names
[ hotfix ] [ kafka ] retry kafka transaction in kafkaproducer
( chore ) camel - rocketmq : add receipt handle to forward message to dlq activity
added service handling in DockerComposeContainer and created a corresponding test class to improve DockerCompose functionality and ensure proper functionality through unit tests
fix for http : / / issues. apache. org / bugzilla / show _ bug. cgi? id = 467
replaced HtmlCleaner with HtmlCleaner for XML processing to simplify XML processing and improve error handling
modified condition in Launcher. java to check for mAppsCustomizeContent instead of mAppsCustomizePagedView. DISABLE _ ALL

added a new file ` bug4150029. java ` to create temporary directories and implement file chooser functionality to ensure that the temporary directory
added a ` isSparkConfigUpdated ` flag and its getter / setter in ` HiveConf `, and implemented the ` close ` method in
added ` getLongPressIndicator ( ) ` method to ` AppIcon `, ` AppIconMenuItem `, and ` Launchable ` classes to
[ geot - 6657 ] wkbwriter. write ( wkt,... ) do nothing when wkt be empty
refactor UnflavoredBuildTarget creation and builder methods in NativeLibraryMergeEnhancer and AbstractUnflavoredBuildTarget to improve
; ; ; ; ; fix for # #
added logic to enable or disable the drawer indicator based on the current file state to improve user experience by ensuring the drawer indicator is enabled when
; review for # # # # # #
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton. java ` and ` Operations. java ` to simplify code and improve performance
dmn - improve error message when expression be not define for node
replaced instances of ` @ ContainedBy ( AC. class ) ` with ` @ Repeatable ( AC. class ) ` in multiple
added duration logging for file sending in AbstractController to enhance user feedback by including file duration in the console
replaced direct class name retrieval with package access check in OpenMBeanAttributeInfoSupport. java to improve security by ensuring package access is checked before
patch by jbellis ; review by brandonwilliams for cassandra - 1314
updated the calculation of freeSize to use roundTo16 instead of roundTo16 to ensure accurate representation of memory size in the store
fix issue with istouchesdisabled ( nativemotionEvent )
replaced instances of SslContextFactory with SslContextFactory. Server in multiple server classes to improve clarity and consistency in SSL context handling
removed the ` PrivilegedSocket ` class from the ` PG _ Stream ` class to simplify the connection process by directly creating a ` Socket ` instance
updated test cases in InputTest. java to improve test reliability and reliability
refactor ` AbsSwipeUpHandler ` to use ` null ` for ` finishRecentsAnimationOnTasksAppeared ` and update related methods
updated import statements and refactored location marker removal logic in NearbyMapFragment. java to improve code clarity and ensure proper handling of
updated the retrieval method in ClientAdminEndpoints to use client ID from clientDetailsService to ensure correct retrieval of client secrets from the client details
updated SQL query formatting in SqlSourceBuilderTest. java to improve readability and maintainability of the test code
fix for http : / / issues. apache. org / activemq / browse / amq - 2802 - wait for executor service to
added unit tests for ` SlidingGanttCategoryDataset ` to ensure proper handling of unexpected keys in ` SlidingGanttCategory
updated filtering logic in ShenyuTrieRuleListener. java and added return statements in ZookeeperSyncDataService. java to enhance code
* lightcontrol : replace spatialtolight ( ) with spatialTolight ( ), a suggest by valerybokov
added @ SuppressWarnings ( " UnusedAssignment " ) annotations and modified logic for handling stack traces to improve code clarity and ensure proper handling of
added null checks and logging for ServletContextEvent in HttpSessionEventPublisher to ensure that the application context is not null before publishing events
added a check to throw an exception if the syntax of CREATE CQ statement has changed from v0. 14 to ensure proper handling of CREATE
[ hotfix ] [ table - planner - blink ] fix typo in flinkiotdbsink
add custom simplification considered node to the canonicalizer.
updated the method call to use the context parameter instead of null to ensure the correct context is used for the file icon
updated the method to retrieve the indexOrConstraintName from a schema name to ensure the correct schema name is used for index operations
[ beam - 8470 ] add support for bigquery table with time
added implementations for ` findViewWithTag ` and ` findViewWithTag ` in ` ShadowView ` and ` ShadowViewGroup ` classes to
updated enumeration types from ` Enumeration ` to ` Enumeration < String > ` across multiple Java files to improve type safety and eliminate unchecked cast warnings
removed unused import statements from IndexToolForDeleteBeforeRebuildIT. java and MetaDataClient. java to streamline code by eliminating unnecessary
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and updated related logic in SpringBootDocBuildTemplate and JavaClassUtil to
svm : do not try to read jar from classpath if it be not a jar
updated CUDA _ R _ C _ 32F and CUDA _ R _ 32U values in cublas. java and cuda. java files to
replaced the ResourceLoader class with a new ResourceLoader class for handling layout files to streamline the resource loading process by eliminating redundancy
use simpleattachablematerialdata to get attached face for redstone torch
added support for VARBINARY data type in RelToStageConverter to enable handling of VARBINARY data in the application
removed unused import of DateHelper in NoteAdapter. java to streamline code by eliminating unnecessary dependencies
updated backup handling in ` Backup. java ` and ` Captions. java ` to include success and failure messages to improve user experience by providing
bugfix : position of eview1 element be set to relative instead of absolute
removed unnecessary file deletion check in ShadowParcelFileDescriptor. java to streamline the file creation process by eliminating unnecessary checks
replaced the use of ` poll ( ) ` with ` removeFirst ( ) ` in ` StackBasedSecurityContextHolderStrategy. java ` to
updated the rule key from " optimizations " to " controversial " in BooleanInversionTest. java to align the test with the
added unit tests for the XorNeutral reference in IntegerEqualsCanonicalizerTest. java and refactored IntegerEqualsNode. java to
replaced the declaration of STRING _ ARRAY from Type. getType ( String [ ]. class ) to Type. getType ( String [ ]. class
added a hideIme ( ) method to AllAppsContainerView and refactored logging in LauncherAllAppsContainerView and LiveSearchManager to improve
force bit density to fix network issues.
updated assertions in ` TimelineMetricCacheSizingTest. java ` and modified import statements in ` TimelineMetricCacheTest. java ` to ensure
added a new method ` getGLMaximumTextureSize ( ) ` to retrieve the maximum texture size to optimize texture size calculations for improved performance
[ java ] don't call trystoplogrecording ( ) when stop log recording.
added a check to reset startPosn to 0 if it is not in transform mode to ensure startPosn is set to zero when not in transform
replaced the method ` isStarTreeDisabled ( ) ` with ` isSkipStarTree ( ) ` across multiple files to improve clarity and functionality
added locking mechanism for nearby places and refactored progress bar visibility handling to improve responsiveness and control over progress display
add maptransformer. of ( map ) and maptransformer. bimap ( ).
updated EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added handling for null ` launcherWidgetSpanInfo ` in ` LauncherPreviewRenderer ` and introduced ` getLoadedLauncherWidgetInfo ` method in `
replaced ` ChangeEvent ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to utilize ` StateChangeListener ` instead
added ` getCallingPid ` and ` getCallingUid ` methods to ` ShadowBinder ` and implemented corresponding test cases in ` ShadowBinder `
replaced the ` AutoValue _ Expect _ ExpectationFailure ` class with a new ` ExpectationFailure ` class and added ` equals ` and
removed a warning log statement when deserializing a message with a specific name to streamline the code by eliminating unnecessary logging
updated calculations for newW and newH in ImageReplacedElement. java to ensure correct scaling of images based on their dimensions
added handling for'&# 9 ;'and'&# 32 ;'characters in MarkdownNodeRenderer and MarkdownWriter to ensure
added a neutral button to the SharePasswordDialogFragment and refactored the password handling logic to improve user experience by allowing users to delete
refactor file channel method retrieval to use reflection to improve compatibility with different file channel implementations
updated method names from ` random ( 20 ) ` to ` randomAlphanumeric ( 20 ) ` in ` AbstractAssert _ describedAs _ printed
added support for Slider AM keytab configuration in LlapOptionsProcessor. java to enhance flexibility for managing Slider keytab settings
modified ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation control in ` ExtractionModelFrame `
added handling for loading and loading tasks in the Launcher model to ensure that shortcuts are only added when the loader is active
refactor NodeManageMemoryMergeOperator, NodePathsConvertOperator, NodePathsCountOperator, and NodeManagerMemoryMergeOperator to improve code clarity and
refactor ` IssueInterface ` and ` ValidationReport ` classes to use ` messageType ` and ` identifier ` instead of ` long ` to improve clarity
added a method to safely retrieve the cipher provider name in RSAClientKeyExchange. java to improve error handling and provide a safe way to retrieve
updated references from ` getDynamicConfiguration ( ) ` to ` getFlinkConfiguration ( ) ` across multiple files to ensure consistency with the new configuration
change log level from WARNING to OFF in CCJSqlParserUtil. java to disable logging for improved performance
added a condition to append a newline character if the index is not zero to ensure proper formatting of data in the output
changed BITMAP _ HEIGHT and WIDTH from private to public in DefaultMapScaleBar. java to allow broader access to BITMAP _ WIDTH
updated the @ Ignore annotation in CovariantOverrideTest. java to indicate that it is not possible to implement it covariant override
refactor curly method to use Qtype instead of Node to improve readability and maintainability of the code
( chore ) camel - model : allow to load route definition from xml
added space settings for the X - axis in ScatterChart. java to improve visual appearance of the scatter chart
corrected the syntax for the " as INTERVAL " string in ExpressionStringBuilder. java to ensure proper handling of interval values in SQL queries
added ` shouldPreserveDataStateOnReapply ` method to multiple classes and implemented it in ` StateManager ` to ensure data state is
added a check to ensure the UTF8 key is present in the properties file to prevent runtime errors when the UTF8 key is missing
solr - 3995 : fix test to run with the new seed
added a new UI event for long - pressing on an AllApps item in StatsLogManager and integrated it into ItemLongClickListener to enhance
added null check for ` log ` in ` StoreWAL. java ` and created a new test class ` Issue112Test. java ` to
added a condition to check if ` showSectorLandInfo ` is true in ` Control. java ` and introduced a new flag in `
[ hotfix ] [ table - common ] fix unchecked cast warning
refactor Enum class implementation to improve code readability and maintainability
updated the ` buildNearbyRandom ` method to accept a ` randomSelection ` parameter and added validation for ` nearbyRandom ` to ensure
remove temporary cache from nettyplayerconnection
updated visibility settings for ` DataStoreInfo ` and ` WMSStoreInfo ` in ` NewLayerPage. java ` to improve user interface
initialize Availability _ availability to UNAVAILABLE to indicate that availability has not been set
updated epoch handling and refactored block number calculations across multiple classes to improve accuracy and maintainability of the code
update gapic - generator - java version to 2.1. 0
changed the type of ` _ freeSpaceReclaimDisabled ` from ` boolean ` to ` int ` and modified the ` freeSpaceReclaim

refactor the initialization of the JsonWriter in Json. java to ensure proper handling of the writer object to prevent potential NullPointerExceptions
rename ` mentions ` to ` favorites ` in ` ProfilePager. java ` to improve clarity and consistency in naming conventions
renamed the method ` paintBackground ` to ` paintComponentBackground ` and updated its usage in the ` Slider ` class to improve clarity and consistency in
added a method ` valueFromClassConstant ` to retrieve a value from a class constant to enhance functionality for retrieving configuration values from a specified class
( chore ) camel - test - infra - kafka : improve log when start up the service fails
changed the collection type of RESOURCES _ TO _ ALWAYS _ ACQUIRE from a Set to an ImmutableSet to allow for additional configuration options for
updated logging message to use ` channelName ` instead of ` channel ` and added channel registration for ` DefaultMessageEndpoint ` to improve clarity of
added functionality to retrieve and display the contents of a HTML document using the " keywords " property to enhance the functionality of the HTML document by allowing
updated SDK version check from S to R in FileUploader. java to ensure compatibility with newer Android versions
refactor address initialization logic in MemcachedSessionDataMapFactory. java to improve readability and maintainability of the code
replace new CorrespondenceSubclassToFactoryCall with CorrespondenceSubclassToFactoryCall. class in CorrespondenceSubclassToFactoryCallTest
refactor builder implementation to improve performance and maintainability of the code
don't show error message when isbn don't exist
polyglot api : increase keep - alive timeout to 10 second.
added a null check for the text before firing data change listeners to prevent potential NullPointerException when the text is null
add a simplified model option to the sentiment model
trim whitespace from the input string in SuffixURLFilter. java to improve readability and maintain consistent formatting
added a check to return early if the player is in godmode to optimize performance by avoiding unnecessary calls when in godmode is enabled
[ desktop ] remove redundant popup registration in checkbox creation dialog
updated constructor parameters for LinkedHashMapCache to use maximumSize instead of maximumSize to ensure consistent behavior across cache implementations
removed redundant variable assignments in ChannelEndPoint. java to streamline code for better readability and maintainability
added null check for keyIndex in FixAcidKeyIndex and modified KeyIndexBuilder initialization in OrcRecordUpdater and TestFixAcidKey
updated exception handling in DirectUpdateHandler2. java to use Locale. ROOT for better locale handling to ensure consistent error reporting across different locales
add store check guard to writenode
; ; ; ; ; ;
added ` getClassificationDisagreement ` method implementations in ` AbstractCloud `, ` DBCloud `, and ` ViewFilter ` classes to
replaced the use of ` BuildTarget. copyOf ( ) ` with ` BuildTarget. copyOf ( unstrippedTarget ) ` and added ` @ Json
refactor SqlRunner class for improved readability to enhance maintainability and facilitate future updates
changed the type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` FileStorage
replaced instances of ` knownApis ` with ` knownSdks ` and introduced a new method for retrieving known SDKs to improve code clarity
use confidence progress indicator instead of progress indicator
updated user agent check from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes to ensure correct identification
fix an issue with iterator in the builder.
added two new view types for message and noflex in the CrowdfundingChatAdapter to enhance functionality for handling multiple message types in
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary. java ` and ` MacOSXLibraryDL. java
fix for sbarq, sbarq, sbarq, sbarq
modified TexturePacker and TexturePackerTest classes to improve image insertion and rotation handling to enhance functionality and ensure proper handling of padding in pack
refactor the implementation of the getVisitors ( ) method in RefactorModule. java to improve code readability and maintainability by simplifying the
added methods ` getChildByName ` and ` getChildrenByNameRecursive ` to retrieve child elements by name to enhance functionality for retrieving child elements based on their
added " Content - Charset " header with " UTF - 8 " in HttpSolrServer and its corresponding test in BasicHttpSolrServerTest to
added ` @ SystemUiControllerFlags ` annotation and refactored UI state handling in ` TaskThumbnailView ` and ` SystemUiController `
removed the private ClientConfigurationService field from IntrospectingTokenService to streamline the code by eliminating unused variable
updated the exception message in HiveRecordSet. java to provide more context about the error being thrown to improve debugging by providing more context on the
removed the ownerId field from NodeEntry. java to streamline the code by eliminating unnecessary fields
rename snapshot. backup. rightafter to snapshot. backup. rightafter
added a score calculation to the merge method in TextFragment. java to ensure that the merge method does not exceed the specified score
removed the private ` digester ` variable from ` Md4PasswordEncoder ` to streamline the password encoding process
added a validation check for maximumUnimprovedStepCount to ensure that maximumUnimprovedStepCount is greater than or equal to
added a check to return early if currently opened editors are empty to improve performance by avoiding unnecessary processing when no currently opened editors are available
refactor verification methods in BDDMockito and add corresponding test cases in BDDMockitoTest to improve clarity and functionality of the verify method
replaced the use of ` Thread. currentThread ( ). getContextClassLoader ( ) ` with ` PathScanner. class. getClassLoader ( ) ` to
added a check for ` CodeFirstPojoClientIntf ` and modified the ` sayHi2 ` method in ` CodeFirstPojo ` to
initialize log for abstractsplitbraintesecectiontest
added null check for logout configuration in DefaultLoginPageConfigurer and ServerHttpSecurity to prevent potential NullPointerException when logout is disabled
giac now support degree ( 0 ) instead of degree ( 0 )
added logging functionality to DockerComposeContainer and created a new test class for DockerComposeLogConsumer to enhance DockerCompose functionality and ensure
updated method signature for ` testMapping ` in ` StandardJavaTypeMappingTest. java ` to clarify the purpose of the test method
removed unused import statements in AmbariMetaInfoTest. java to streamline code and improve readability
fix # # #
replace'break'statement with'return ( true )'in ConsoleActivity. java to improve flow control by returning a boolean value
added handling for Buffer in VertxPlatformHttpSupport and created a test for it in VertxPlatformHttpEngineTest to ensure proper handling of
added methods to handle platform - specific path separators in MorePaths. java and updated related tests in AarWithLibsIntegrationTest. java
added a null check for ` authorizationContext. getParams ( ) ` before processing parameters to avoid potential NullPointerException when accessing parameters
replaced the ` loadLibraryOnlyIfPresent ` parameter with ` throwExceptionIfFail ( ) ` and added a method to check if the library is
updated SDK version from " 4611349 " to " 4514284 " and added new test cases for the ` isStopped ` method in
queuetransactionlog : add hashcode and equal ( ) to transactionlogkey
added enableSqlWithoutProfile property and corresponding getter and setter methods in JdbcEnvironmentProperties and JdbcEnvironmentRepository to allow users to disable SQL without profile
added a try - finally block around the write operation in ConnectHandler. java to ensure proper resource management and prevent potential memory leaks
remove unncessary suppression for compiler generics
updated date formatting to use calendar instead of date to ensure accurate date formatting based on the calendar
updated the ` loadValue ` and ` getThreadInfo ` methods to include a ` STACK _ TRACE _ DEPTH ` parameter to improve thread
added a protected method ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest. java `
updated the FastAsyncWorldEdit version from P2 - V6 to 1. 17 in BukkitPlatform. java to ensure compatibility with the
added a null check for the input path and output directory in SegmentGeneratorConfig. java to prevent potential NullPointerException when the path is null
added a method to calculate normal vectors for vertices in ObjUtils. java and updated TriangulationHelper. java to use this method to improve
updated the ` find ` method to accept ` identityZoneId ` instead of ` IdentityzoneId ` to enhance functionality by allowing identification of
refactor SpanCollector class implementation to improve performance and maintainability of the code
added a condition to check if the current session is not null before proceeding with the authorization process
refactor TransactionIsolationLevel class to improve code readability and maintainability
rename ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController. java ` to clarify the
added thread names for forwarding to in TestSession. java to improve clarity of thread names for better debugging
refactor CookieManager class to improve code readability and maintainability
replaced the return statement to return a new ArrayList instance to simplify the code and improve readability
added a new OverviewToAllAppsTouchController to the list to enhance user interaction with the launcher
replaced the method ` scaleHotseatWithWorkspace ( Launcher launcher ) ` with ` getHotseatScaleAndTranslation ( Launcher launcher )
added a check for JUnitRule in DefaultStackTraceCleaner and created a test for it in StackTraceFilterTest to ensure correct filtering of JUnitRule
[ java ] : replace directbuffer. hasarray ( ) with directbuffer. isdirect ( ).
refactor balance listener management in DepositListItem. java to improve code clarity and ensure proper cleanup of balance listeners
modify the color conversion logic in RealisticRenderer to handle edge modes to ensure proper color handling for sticks in edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor. java to prevent potential NullPointerException when httpClientResponse is null
fix gl200 decoder
refactor playback check logic in FullDetailsActivity. java to improve clarity and functionality to enhance code readability and maintainability while ensuring accurate last playback
added handling for elliptic tokens in SpanishXMLTreeReader to ensure correct parsing of elliptic tokens
added a condition to clear the DC for empty values in InstallItem. java to ensure proper handling of empty values in the application
updated the method for overriding the scheme based on whether the service instance is secure to ensure that the override scheme is correctly set based on the response
remove duplicate call to bytebuffer. duplicate ( ) in defaultmessagestore
changed the access modifier of fullFilePathFromClassName from private to package - private to allow access to the fullFilePathFromClassName from other packages
refactor the return statement in ShadowBackupManagerTest. java to use Correspondence. from for better readability to improve code clarity and maintainability
renamed the method ` isNonUSLangSupported ` to ` isNonENLangSupported ` in ` JRELocaleProviderAdapter. java ` and
removed redundant null check for redeemData in LocalTransactionSigner. java to simplify code logic and improve readability
add forge renderer for terrain texture. close # 3553
added a return statement in TxCacheDB. java to ensure proper execution flow
replace ` com. sun. xml. internal. ws. org. objectweb. asm. * ` with ` jdk. internal. org
refactor FastDictionary class implementation to improve performance and maintainability of the code
fix for http : / / issues. apache. org / activemq / browse / amq - 4237
updated FlightEvent types for GROUND _ HIT and SIMULATION _ END in FlightEventsTest. java to improve event
[ beam - 4071 ] update protobuf from v1p26p0. com. google. protobuf to v1p26p0
replaced target. addNamespaceDeclaration with newElement. addNamespaceDeclaration to streamline namespace declaration handling
update instructorfeedbackresultspagedata to use courseid instead of email
added a shortRules list to the DefaultPasswordValidator to allow for a maximum of 20 characters in password validation
simonstewart : add a command to retrieve the last remote control log.
removed the JUnit @ Test annotation from ProxyClassSerializationTest. java to streamline test code by eliminating unnecessary dependencies
updated the ` scale ` argument format in the ` DLNAMediaInfo ` class to ensure proper formatting of the thumbnail dimensions
remove speculative guard movement phase from test.
added a check for the AUTHENTICATION _ MANAGER bean definition in AuthenticationManagerBeanDefinitionParser. java and created a test for disabling bean overrides in
added handling for forwarded host and server in ForwardedRequestCustomizer to ensure proper handling of forwarded host and server configurations
added a line to set the StringBuilder length to zero in ConsoleReader. java to ensure proper resource management and avoid potential memory leaks
change to protect to allow subclass access to allow subclass access.
updated version numbers for OpenIDE modules in the manifest and project files to ensure compatibility with the latest OpenIDE library specifications
hbase - 28029 netty ssl throughput improvement ( # 5580 )
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor FixedLengthTokenizerTests to use JUnit 4 annotations and add tests for tokenizing smaller strings with whitespace to improve test reliability and ensure
added protocol binding support in OpenSamlAuthenticationRequestFactory and created corresponding unit tests to enhance security by allowing custom protocol binding for HTTP - Redirect
refactor DepthController to use AttachedSurfaceControl for applying SurfaceControl transactions to improve performance by utilizing AttachedSurfaceControl for better rendering
updated version check from " - SNAPSHOT " to " 2.05. x " to ensure compatibility with the latest release versions
hbase - 25880 bulk load operation should be create instead of write
updated subList syntax for unSeqMergeList and adjusted measurement ID from 0 to 9 in TsFileManagement. java and MergeTaskTest.
camel - 5641 : added fileinputstream support to file converter
added a ` login ` method to ` DefaultShardManager ` and modified ` login ` method in ` ShardManager ` and ` DefaultShardManager
removed an unnecessary whitespace in DeleteGlobalRef method call to streamline code by eliminating unnecessary whitespace
updated the entity name for the RegisteredServiceImpl _ Properties table from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to reflect
added a condition to check if the completion state is marked before terminating the response to ensure that the response is only sent when the completion state is
fix feedback response check for non - authenticated user
added checks for linked profiles and improved color space handling in BMPImageReader. java to enhance security by restricting access to linked profiles for
updated location calculations for ` setSimpleCuboid ` in ` ClassicPlotManager. java ` to ensure proper placement of the plot world
added a wait message for PMD status and modified the actionPerformed method to run it on a background thread to improve user experience by ensuring P
refactor grid handling in StdGridFragment to utilize a new method for setting grid sizes to improve code readability and maintainability by encapsulating grid size
changed return values from false to true in ContributionsListFragment. java to enable functionality for the contributions list
added a new test method ` testSkipRange ` in ` DistinctPrefixFilterIT ` and modified filter logic in ` BaseResultIterators
pdfbox - 4892 : add test for acrobat checkbox property
added a method ` getFileLastModified ` to retrieve the last modified timestamp of a file to provide a way to retrieve the last modified timestamp of
added a check for the " metaTable " property in the HiveIcebergStorageHandler class to ensure that the metadata table is valid before
use combobox instead of textfield to allow user to select a currency
changed catch block from IOException to Throwable in WriteFlusher. java to handle a broader range of exceptions
added an ` mStartedEnterAnimation ` flag and modified the condition for notifying item range changes in ` IconRecentsView. java `
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to provide a way to access the ` activeKeyId ` property
updated action labels and methods in SendMailActions. java to improve clarity and functionality of email sending functionality
changed the ` isActive ` variable from ` boolean ` to ` volatile boolean ` to ensure thread - safe access to the ` isActive ` variable
http : / / code. google. com / p / mybatis / issues / detail? id = 467 : fix order by
use charsequence instead of string. tostringlhs ( )
added a condition to check if the application name is equal to " ownCloud " to ensure that the check for the " ownCloud " app
hbase - 13780 default to 700 for hdfs root dir permission for secure deployment ( enis soztutar )
updated method calls from ` getLocale ( ) ` to ` getLocale ( ) ` in ` JakartaServletWebExchange ` and ` Java
refactor Instant class to improve code readability and maintainability
changed the return type of getStateFormat from int to String across multiple files to ensure consistent handling of state formats across different test classes
updated logging format and condition checks in AbstractTicket and TicketGrantingTicket classes to improve logging clarity and ensure proper class type validation
added handling for IllegalArgumentException in PDICCBased. java to improve error handling for specific exception types
modified the condition to check if the file name ends with a slash in AbstractFileResourceSet. java to ensure the file name starts with a
refactor plugin parameter expression evaluation to use pathtranslator to improve flexibility and maintainability of the code
[ beam - 8470 ] re - enable protobuf coder by default.
updated JpaQueryParsingToken to include a false parameter and added a new test for query with signed numeric literals to ensure correct parsing of numeric literals
modified the ` generateLaunchLugFromRASAeroRailGuide ` method to include ` parentLength ` as a parameter and adjusted
removed the getNonceFactory method from BitmexStreamingExchange to streamline the code by eliminating unnecessary method
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] use default timer interval in driver conductor test.
changed the default value of ` initializeLoadedClasses ` from ` true ` to ` false ` in ` FastClasspathScanner. java ` to ensure
added a call to grabFocus ( ) in FullTextSearchPanel. java to improve focus management for the search field
replaced direct instantiation of ` connectionFactory. setNioParams ( new ` NioParams ( ) ) ` with a local variable ` nioParams `
updated the expected value in the ` getDouble ` method from a fixed value to a fixed value to ensure the test accurately reflects the intended
updated the assertion message in TestSolrConfigHandler. java to provide clearer context about the expected value being returned from the server
replaced instances of ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests. java ` to
added import for Density and updated regex patterns for drawable density handling to improve accuracy in matching drawable density values
added a private variable ` buttonUIID ` and refactored ` getComponentAt ` calls to use it to improve code clarity and maintainability
removed unnecessary density check in RecentsAnimationDeviceState. java to streamline code for better readability and maintainability
r r r r r r r r r r r r r r r r r r
added import for LuceneTestCase. AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to address a known issue
fixed - redissonexecutorservice. schedule ( ) method throw npe if schedule time be null
removed unnecessary null checks in ` FileDownloader ` and ` FileUploader ` to streamline credential update logic for better readability
refactor code to handle multiple StoreFileScanner instances safely to improve resource management and prevent potential NullPointerExceptions
replaced ` getReceivedByte ( ). get ( ) ` and ` getReceivedPackets ( ). get ( ) ` with ` getOrDefault
added nonce handling in TokenMvcMockTests to retrieve and validate claims for a token
refactor multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added width and height settings for formLayeredPane in Form. java to ensure proper layout behavior for the form pane
removed unused imports and added a method to calculate the maxY value based on the owner's height to streamline height calculation for better usability
refactor openDatabase method to return a boolean indicating the connection status to improve clarity and functionality of the openDatabase method
replaced references to ` DOCKER _ COMMAND ` with ` Platform. DOCKER _ COMMAND ` in ` DockerTestUtils. java ` and ` Platform
added a conditional check for null input stream in TestIsartorValidationFromClasspath. java to improve robustness by preventing null pointer exceptions
added a new color parameter for folder leave - behind drawing in TaskbarView and modified drawLeaveBehind method in CellLayout and PreviewBackground to
add a way to report canary incompatibility for android studio
don't try to retrieve the identity uuid if the table name be invalid
added getter and setter methods for module persist and disable lists in StartArgs. java to enhance functionality for managing module persist and disable options
updated argument length check from 1 to 0 in GeminiMarketDataService. java to ensure the correct argument is passed to the method
replaced HashSet with LinkedHashSet for questions in VerifyPasswordResetRequestAction to ensure predictable iteration order of the flow scope
add a test case to verify that the response be send to the server.
updated exclude paths in AuthCheckFilter. java to include specific setup - related Java files to enhance security by excluding specific setup files
refactored runnable execution logic in Scheduler. java and added a test for postDelayed in SchedulerTest. java to improve code clarity and ensure
changed the parameter type of ` runCommand ` from ` String [ ] ` to ` String. args ` in multiple classes to simplify argument handling
refactor XML parsing logic to handle end - of - stream cases to ensure proper handling of end - of - stream scenarios
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to handle scenarios where text overflow
added pivot properties for the arrow in DeepShortcutsContainer to improve visual alignment of the arrow based on the icon's position
replaced printStackTrace ( ) with ignored catch ( InterruptedException ) in JabRefExecutorService. java and updated iteration method in FileUpdateMonitor. java
refactor the ` AbsSwipeUpHandler ` class to include a ` refreshView ` parameter for thumbnail updates to enhance functionality by allowing refresh of the
pdfbox - 4071 : fix typo, a suggest by valerybokov
updated EmailFormatSpecifier and HostnameFormatSpecifier to check if a string is a valid hostname and added error handling for invalid domain names to improve
removed references to ` AuthenticatorActivity. this ` and ` OperationsService. this ` in multiple classes to streamline code by eliminating unnecessary
refactor ` SizeBasedDocIdSet ` and ` SizeBasedDocIdIterator ` to use ` _ maxDocId ` instead of ` _
added methods for prompting to open files with an existing file name in FileDialoger to enhance user experience by allowing users to select a file
updated ` AppsCustomizePagedView. java ` and ` AppsCustomizeTabHost. java ` to streamline widget page updates and
added handling for active instances and transformed coordinates in FlightConfiguration. java to improve accuracy of flight configuration handling
( chore ) camel - micrometer : fix test failure on window
updated DateTimeFormatter to use Locale. ROOT for consistency to ensure consistent date formatting across different locales
[ ds - 3447 ] add permission filter to dspaceobjectconverter
added a test method ` testMissingRequired ` to validate the behavior of ` StarTreeConfig ` to ensure that the ` StarTreeConfig `
camel - 1860 : camel - core - allow to configure recipient list via fluent api.
refactor InlineLayoutBox and HoverListener to improve handling of repainting information to enhance visual consistency and maintainability of the code
replaced ` DetectAuthenticationMethodOperation ` with ` OperationsService ` and integrated ` OperationsServiceBinder ` for better service management to improve service handling and
