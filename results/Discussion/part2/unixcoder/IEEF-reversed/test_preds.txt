refactor SocketAppender initialization to use setRemoteHost and setPort methods to improve clarity and encapsulation of socket configuration settings
refactor BasicAuthPlugin to use a separate method for setting prompt headers for ajax requests to improve code readability and maintainability
updated method call from ` recordDescriptor . msgLengthOffset ` to ` msgLengthOffset ` in ` ManyToOneRingBuffer . java ` to improve cl
cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
added flags to the ShadowPaint class to enable support for custom anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti anti
updated title in MassSetFieldsDialog to use localized strings for field names and content to improve internationalization support for better user experience
do n ' t fail if we ca n ' t find the eclipse class
do n ' t set x - digest - auth header for empty realm .
added a new interface ` RemoteInputListener ` and ` RemoteInputListener ` to manage the connection state of ` RemoteInput ` to provide a mechanism for
refactor conditional statements in OrcEncodedDataReader . java to improve code readability and maintainability
added a check for enabled status in HomeConnectBridgeHandler to ensure that only enabled devices are processed further
added null checks for the ` bs ` parameter to ` AuthorizeManager ` methods to avoid potential ` NullPointerException ` when ` bs ` is null
updated assertions in tests to use ` matches ` instead of ` isEqualTo ` for date and time comparisons to improve accuracy of date and time comparisons
added JSON serialization and logging for dag information in TezTask . java to enhance debugging capabilities by providing detailed dag information during execution
refactor time calculation in ComputedSummary . java and add getTagTime method in HprofHeap . java and HprofHeap . java to improve
replaced ` RxJava2Tasks ` with ` CommonsApplication ` in ` ContributionsActivity ` and removed ` RxJava2Tasks
do n ' t need to check for non - parallel read - only database
[ issue # 5674 ] optimize commitlog commit commitlog commit commit message size calculation
updated folder opening logic in Launcher . java to check if the folder is open before proceeding with operations to ensure that only open folders are processed and
added a test for sorting properties in PGPropertyTest . java to ensure that PGProperty names are sorted in ascending order to validate that the properties are processed
bugfix : remove unused constant in common
updated method signatures to use ItemInfo instead of Object to improve type safety and clarity in handling item types
updated assertion in RequestBuilderTest to use ` isIn ` instead of ` hasMessage ` to improve clarity of error message to enhance readability
refactor NearbyActivity to use NearbyListFragment and NearbyMapFragment instead of RetainedFragment to improve clarity
bugfix : clarify class name of flatprofilecontainerfree constructor
added a new configuration field ` send _ zero _ anomaly _ email ` and its getter / setter method to ` Email email email email email email email
[ flink - 21136 ] [ kafka ] [ connector / kafka ] [ connector / kafka ] fix flink kafka consumer
removed user and geofence retrieval methods from DataManager to streamline data retrieval by eliminating unnecessary database queries
added a constructor to BlockingResponseListener that accepts a maximum request length to enhance flexibility by allowing configuration of response size
[ java ] remove thread safety for member broadcast message .
replaced System . out . println with logger logging for snapshot path handling to improve logging clarity and ensure resources are closed properly
updated assertions in LoginSAMPAuthenticationFailureHandlerTest to remove trailing slashes to ensure consistency in error message formatting
refactor ConfigMetadataProviderTest class to improve code organization and readability
updated the parameter name from ` reminder ` to ` noteUpdate ` in ` SnoozeActivity . java ` to enhance clarity and
added a new ` AcceptAllFilter ` class and refactored directory stream handling to use it to improve code clarity and maintainability by
refactor JdbcTestDataSet class to improve code readability and maintainability
do n ' t throw noclassdeffounderror on noclassdeffounderror
added a new utility class ` DockerImageName ` and updated ` GenericContainer ` to validate and validate Docker image tags to improve code organization and ensure
updated error message for login failures in LoginActivity to improve user feedback by providing clearer error context
[ ds - 3952 ] add autofocus support to user form
added a test for SAML properties in SamlIDPRefreshMockMvcTests . java to ensure correct handling of SAML properties in the identity zone
added checks for non - empty lists in ComparableVersion . java and implemented a new test case in ComparableVersionTest . java to ensure
updated method calls and return values in Sheet . java and updated return values in UIManager . java to ensure proper width and height adjustments based on preferred preferred
updated package structure and imports for Robolectric tests to improve organization and clarity of test - related classes
refactor constructor creation to use a constant FACTORY _ CALL to improve code readability and maintainability by reducing redundancy
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to ensure the fill
added functionality to draw self loops in ProcessingPreview . java to enhance visual representation of self loops in the graph
replaced instances of ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 with ALLOW _ TVM _ SOLIDITY
rename method ` addManaged ` to ` manage ` in DropwizardAppRule . java to improve clarity and consistency in method naming
added translation to the drag handle indicator in AllAppsTransitionController to improve user experience during drag - and - drop operations
add some log to help diagnose
updated the configuration for pushing filters in Hive configuration to clarify the conditions under which filters are applied in the query optimization optimization to improve understanding
added an assumption in ScanningAppProviderRuntimeUpdatesTest . java to skip the test on non - OS X to address issues with finding itself on non
added Maven bundles for Jetty ALPN client and ALPN client dependencies in TestJettyOSGiAnnotationParser . java to enable
act - 767 : fix for act - 1892 : update process instance lock time on execute async job
refactor Transaction class to improve code readability and maintainability
replaced ` @ CustomFieldBehavior ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude ` Genrule execution
simonstewart : make sure firefox be launch on non - windows platform
added a check to prevent duplicate entries in colFamToDynamicColumnsMapping to ensure that only unique entries are added to the mapping
[ hotfix ] [ test ] remove rawtypes from hadoopoutputcollector
added a check for client version version and modified table creation logic in MetaDataEndpointImpl . java to ensure proper handling of view tables in view tables to
add ability to change the google id for a student in the database
updated import statements in AllXSSFTests . java to use the correct TestCellReference class to ensure compatibility with the latest version of Apache POI
fix mana piston not respect block ' s hardness
added a new file LongPointerPressTest3049 . java to implement network error handling to facilitate testing of long pointer press interactions
[ gr - 37609 ] remove unnecessary truffle compiler option .
simplified null return statements in BaseBuilder and XMLConfigBuilder classes to improve code readability and reduce redundancy
simplified the condition in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to improve code clarity and ensure proper
added a new abstract class ` AbstractOptionalAssert ` and refactored the ` OptionalAssert ` class to use it to improve code organization and
added JUnit Ignore annotation to WebfluxNotIncludedTests . java to temporarily ignore tests related to issue # 1070
[ wasm ] [ wasm ] remove unnecessary jsinterop test case .
fix checkstyle violation in test
added a check for video formats in the web subtitle configuration to ensure subtitle configuration only applies to video formats
added JDK security properties to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms for hostname verification
server : do n ' t try to assign to a local storage when it be a local storage
updated cache entry retrieval and logging messages in Driver . java and QueryResultsCache . java to improve clarity and consistency in cache entry handling to enhance
added a new method ` maybeUpdateModel ( ) ` to ` AddManagedDependency ` and modified code formatting in ` ManageDependencies ` to en
added tests for handling PendingIntent sending in ShadowActivity and ShadowActivity classes to ensure correct behavior of PendingIntent handling in tests
replaced GLJPanel instantiation with GL - enabling and GL - disabling FBO in RocketFigure3d . java to improve rendering performance and
added synchronization to the controller listeners list to ensure thread safety when modifying the list of controller listeners
added a static ` @ BeforeClass ` method to the ` TestCoreAdminApis ` class to skip tests for Java 9 compatibility with Java 9
updated the year retrieval logic in TimestampUtils to use YEAR _ OF _ ERA instead of a fixed value for BC dates and added a new DateTime
fix possible nullpointerexception when disconnect from jabber provider .
added a new variable ` cur _ ws _ commit _ id ` to the transaction log parameters to enhance clarity by specifying a more descriptive variable
refactor BufferedInputFilter to use ByteBuffer instead of ByteChunk to improve performance and memory management
added a ` toSync ` method to ` AsyncUtils ` and a corresponding test case in ` AsyncUtilsTest ` to enhance asynchronous conversion functionality to
added ActionGraphBuilder import and updated method signatures across multiple compiler factory classes to integrate action graph functionality for better rule management
danielwagnerhall : add a test case for upload upload with hidden file input
removed duplicate code for creating tables in SQLManager . java to improve code clarity and maintainability
added a check to ensure the file exists before retrieving the local Maven directory to avoid null pointer exceptions when the file does not exist
make sure algebra label be hide if hidden
fix : nullpointerexception in ctelementimpl . getmetadata ( ) when call getmetadata ( ) with null value
use addflag instead of setflags in defaulttrackoutput
do n ' t apply reordering if the entity be sort by id
update error message for missing method call in verify ( mock ) to improve clarity of error reporting
added a null check for the backupFolder before logging the expiration date to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` containing a test class ` ArrayNewInstanceOfVoid ` with a main method to demonstrate the
added ` @ AddToRuleKey ` annotation to ` toolType ` in ` ClangCompiler ` and ` GccCompiler ` classes to ensure ` toolType
replaced magic number with a constant for PINCODE _ TIMEOUT to improve code readability and maintainability
added isSampled ( ) method to PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to ensure that the isSampled
added @ Ignore ( " requires mongodb server " ) annotations to multiple test classes to ensure tests are not executed when using the required MongoDB server
resolve intermittent test failure in ci
updated the condition to check if the table is an artifical table to improve the accuracy of table name validation
updated file type checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer ` and ` LaunchMapper
added null and empty checks for session attributes in MongoDB session management to ensure proper handling of session attributes to prevent potential null pointer exceptions
replaced setFixedSize ( 320 , 240 ) with setSizeFromLayout ( ) for surfaceHolder to improve layout responsiveness
replaced direct access to ` _ stopping ` with a ` CountDownLatch ` for better readability and null safety to improve code clarity and prevent potential null pointer
removed unnecessary whitespace in the method signature to improve code readability and maintain consistency
camel - 18309 : camel - jms - remove unused stopwatch from camel - jms - camel - jms - camel - jms
refactor error handling in DelayedMonoPublisherTest to use lambda expressions to improve code readability and reduce boilerplate code
added a check for the type of exception in WebsocketTest . java to ensure that the exception is an instance of WebSocketHandshakeException to improve error handling
refactor AllAppsTransitionController to simplify layout change listener implementation to improve code readability and maintainability
refactor variable names from ' theHandler ' to ' handler ' for consistency to improve code readability and maintainability
int - 1684 add support for ' default - output - channel ' attribute on xpath router
updated cacheSeconds property to use a DurationCapable annotation to enhance configurability and flexibility in cache configuration
updated OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple test files to
removed append method call from ByteBufferPool to streamline buffer handling logic
added a check for the presence of " alt - rt . jar " in the classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath
updated test cases in JdbcScimUserProvisioningTests to use upper and lower case user names to ensure tests accurately reflect user names
updated FlightRecorderProfiler to use a list of options instead of an array to improve flexibility and compatibility with different Java versions
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and updated ` WebcamInputDialog ` to check if the stream
added a check for content view content in the HttpParser loop and implemented a test for chunked put in ProxyServletTest to ensure proper handling of
camel - atmos : fix typo in endpoint
added support for " printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf printf
added a new test class ` TestCapacityUntilGCWrapAround ` to verify that increasing metaspace capacity does not cause wraparound on 32 -
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the calculation of the end time in SamplingStatCalculator to account for stampedAtStart status to ensure accurate scheduling of sampling statistics
added unit test base on user forum issue
tmi - jpeg : fix ` ` bad sequence number ' ' error
fix terra pick animation on terra pick
added checks to ignore entries in SpringModule and JoobyExtension to ensure that only valid entries are registered , avoiding unnecessary registrations
use the container ' s parent classloader , not the thread ' s current thread .
added support for nameupdater to make it easy to update a name
update ellipsoid region selection logic to track start state to ensure proper initialization of the region selection process
replaced ` http : / / www . codenameone . com ` with ` https : / / www . codenameone . com `
[ geos - 10762 ] add validation for sort by in getfeature
updated null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to improve clarity and avoid potential NullPointerExceptions
added graphics configuration and graphics handling in DiagramGenerationTest . java to ensure compatibility between expected and actual BufferedImage rendering to improve rendering accuracy in image processing
improve error message when try to get minecraft minecraft minecraft minecraft minecraft minecraft mine minecraft minecraft minecraft minecraft
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
use asserteventually instead of sleep
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for processing and joining tokens to enhance tokenization
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5851 - return 404 instead
refactor SystemHighlighter to improve command parsing and highlighting logic to enhance code clarity and ensure correct command handling
update version to 1.0 . 1 - SNAPSHOT and prepare for release release
update buffer position method to use dimensionSize parameter to enhance clarity and accuracy in data handling
added drag - and - drop functionality to the system UI to enable interaction with drag - and - drop functionality in the user interface
log4j2 - 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127 127
added support for the " Psk - AES384 + TLSv1.2 " cipher in TestCipher . java to enhance encryption standards for
update description text to use long description instead of description to improve clarity and accuracy of displayed information
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization and deserialization of ScimGroupMember instances
updated HqlQueryRenderer to support multiple reserved words and added a new test for schema scoping to enhance query parsing capabilities and ensure
improve error message for null subscription
refactor Parser class to improve code readability and maintainability
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method and updated related calls to adjust the index based on its value
updated byte array initialization in MagicDetector . java and added additional assertions in TestMimeTypes . java to improve code clarity and ensure correct MIME type assertions
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] remove unused sqlmonotonicity method
added ` equals ` and ` toString ` methods to ` OneTimeToken ` and ` OneTimeToken ` classes to enhance object comparison and
added a condition to check if the assistant is not launched before proceeding with fling to ensure that fling only occurs when the assistant is
added a new file SolarisShortDSA . java that implements DSA key generation and verification to address a bug related to DSA key length on Solaris
added a call to toggleSearchLabel ( false ) in ListFragment . java to improve user interface responsiveness
cloudstack - 7441 : fix bug in createsnapshot to be able to create a snapshot
refactor service connection handling in FileDetailActivity to improve clarity and maintainability of the code
refactor exception handling in HttpClientTLSTest to use Atomic Atomic reference to improve clarity and maintainability to enhance code readability and ensure proper
removed the equals method from ConjunctionScorer class to simplify the class by eliminating unnecessary comparison logic
added a null check for item binding in Launcher . java to avoid potential null pointer exceptions during item binding
fix race condition when wait for leader election to finish
updated cache size validation logic to ensure it does not exceed desired size and added logging for cache size changes to improve cache management and provide informative logging
updated API endpoint from " / api / v2 " to " / api / v3 " in multiple files to align with the latest API
add empty ( ) method to freenect2
added null checks for ` readStatus ` in ` AsyncPageReader ` and introduced a new test for empty dictionary pages in ` TestDrill
refactor SerumStreamingService to improve argument validation and streamline channel name building to enhance code clarity and ensure correct data type usage
add a config option to disable the animation for a mana pool .
[ java ] improve error handling in cluster node restart test .
updated exception handling to log errors instead of ignoring them to improve error logging clarity and maintainability
make test more reliable
removed duplicate injection of dialog styles in ResourcesInjectorFull . java to streamline the code by eliminating redundancy
changed fields from String to FileResource in BaseLiquibaseTask , DBDocTask , and LiquibaseTask classes to improve type safety
fix a bug in blockworldvector ' s equal ( ) method in blockworldvector .
removed unnecessary comments from the LongConcurrentLRUMap class to improve code readability and maintainability
added regex pattern handling to resourceConfiguration to ensure proper regex formatting for resource configuration
updated cache retrieval logic in FileCredentialsCache . java and improved error handling in EmptyCC . java to enhance cache management and provide clearer error
update dbPath variable from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the correct output
chore ( peer ) : change default peer wait time from second to minute
danielwagnerhall : fixing code style issue .
do n ' t expand x and y for equal _ boolean operator
clear pending render operation when minimized
do n ' t use system . currenttimemillis in hazelcasttestsupport # sleepmillis ( ) if the deadline be not pass
fix race condition in writebehind write behind queue
added a null icon to the JLabel in GroupTreeCellRenderer . java to improve visual clarity by removing unnecessary space
updated test cases in TestBlacklistAwareRedirectResolver to ensure strict and non - strict matching behavior for redirect matches
added IO . close ( serverSocket ) in ShutdownMonitor . java and modified ShutdownMonitorTest . java to improve resource management and enhance test
updated the calculation of ` moveSize ` and refactored the logic for updating chunk fill rate in ` RandomAccessStore ` to use ` adjusted `
refactor Json serialization logic to improve field retrieval and error handling to enhance clarity and maintainability of the serialization process
[ hotfix ] [ core ] move componentclosingutils to operator . coordination package
cloudstack - 9891 : delete vm volume during error state transition
server : do n ' t set ipv6 range if ip be empty
rename ` userDetailsBeanNames ` to ` beanNames ` for consistency to improve code readability and maintainability by using a uniform naming convention
updated the retry timeout value in getLeaderRetry method from 15000 to 30000 to allow more time for leader election to complete successfully
refactor error handling in AbstractParam , BooleanParam , IntParam , LongParam , and UUIDParam classes to simplify error messages by removing unnecessary
updated drawing parameters in URLImage . java to correct positioning to ensure proper rendering of images in the application
updated field name comparison from solrDocument1 to solrDocument2 to ensure accurate comparison between Solr documents
pdfbox - 4892 : avoid arrayindexoutofboundsexception when check for zero or negative array size
[ hotfix ] [ stream ] include original exception in streamconfig exception message
fix for ` ` hashtag ' ' in preprocess .
updated the formatting of the read method in MessagePack . java to improve code readability and maintainability
added a new annotation ` Mapper ` in the ` org . apache . iatis . annotations . Mapper ` with a default implementation to provide a
do n ' t encode empty extension list
updated string handling in ` Artifact . java ` and added null checks in ` LibraryManager . java ` to enhance code robustness and prevent
add alias for node _ popup _ scripting in scriptingmenuentryvisitor
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants and added animation properties in RecentsView to
( chore ) camel - jms : fix checkstyle issue
removed unnecessary ` throws IOException ` from method signatures in multiple Java files to improve code clarity and reduce potential runtime exceptions
deleted deprecated abstract class AbstractDelegatedVerb and removed the FailureContext class to clean up the codebase by removing obsolete components
updated GzipHandlerTest to use final variables for ` __ content ` , ` __ contentETag ` , and ` __ contentETag ` ,
improve performance of repeat repeat repeat repeat repeat method in onsubscriscriscriscriscriscriscriscriscriscriscriscriscriscriscriscri
added logging functionality and improved exception handling in SpeedmentImpl . java to enhance debugging capabilities and ensure proper exception management during component installation
add dspace - config to load configuration from dspace - config file
hbase - 17826 fix npe in storescanner . testWidescanner
camel - jmx : do not enable jmx if not need .
replaced hardcoded string separator with a constant ` CANONICAL _ PACKAGE _ SEPARATOR ` in ` SourceLineAnnotation ` to improve code readability and
added methods to find and print YARN binary and application information in HiveConf . java and RemoteSparkJobMonitor . java to enhance the
added support for " mariadb " database name in the DbConnectionManager to enhance compatibility with additional database naming conventions
[ iotdb - 4225 ] fix bug in iotdb / iotdb / iotdb / iotdb / master / i
added a new test class ` ExecuteAndReturnStringTest ` to implement a UI test for handling network errors to ensure that the application correctly identifies and
added new classes ` InvokespecialInterface ` and ` InvokespecialInterface ` to demonstrate the use of ` invokeinterface `
refactor EvictingBoundedList implementation to improve code readability and maintainability
switch turn cost traversal mode to edge _ base _ 2dir if turn cost support
added a condition to check if the backgroundDisabled is non - null and validated the selection range to ensure that the selection is non - negative before proceeding
added a null check for the md variable in RpcServer . java to ensure that a valid md is provided to prevent runtime errors
updated hotseat cell size calculation in TaskbarViewController . java to incorporate cell layout adjustments to improve layout consistency and responsiveness to the device
updated the way partition value string is constructed by accessing the partition column column column column column column column column column column column column column column column column column column
updated NamedTaskDecorator and TaskDefinition classes to implement Versioned interface to ensure compatibility with versions 4.1 and above to enhance data handling and support
updated directory retrieval from ` getIndexDir ` to ` newIndexDir ` to ensure the correct directory is used for replication
updated the equality logic in DisplayModeTest . java to ensure that the equal condition accounts for both modes to enhance the accuracy of display mode comparisons
add a test for high codepoints
added handling for null values in OAIDCCrosswalk . java and Item . java to ensure non - null values are processed correctly to avoid
danielwagnerhall : make the webdriverbackedselenium selenium backedselenium more consistent with the
added clear button functionality and updated condition checks in multiple panels to enhance user experience by allowing easier interaction with multiple tables
updated URL construction in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for constructing the base URL to improve URL handling consistency and clarity
updated date assertions and error messages in SoftAssertionsTest . java to improve accuracy and consistency of date validation in tests
updated adaptOrders method to include a reverse parameter for limit orders to enhance order processing by allowing the order to be reversed
delombok now print ` ` var ' ' instead of ` ` var ' ' in pretty print
[ java ] remove unused import .
updated configuration to disable the Hive default configuration to ensure that the default Hive configuration is not overridden overridden overrides
replaced ` super . drawChildren ( ) ` with ` super . draw ( batch ) ` in ` WidgetGroup . java ` to ensure proper rendering of
added unit test base on user forum issue
use engine . getcatalinabase ( ) instead of system . getatalina _ base ( )
added tests for locale - specific date - time patterns in ShadowICUTest . java to ensure correct handling of date - time patterns for different locales
updated the way color codes are set in PlotSquared . java to improve clarity and organization of color codes
added ZuulProperties to the TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enable configuration of Zuul properties for improved
tika - 1851 -- add test for tika - 1851
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include a method to retrieve the ` buildTime
update xDist calculation in PagedView . java to ensure xDist is non - negative to prevent potential errors when calculating xDist
remove unused file that cause a test failure
updated method signatures in LazyMessage , standardSubjectBuilder , and customFailureMessageTest to use String parameters instead of String parameters to improve code clarity and
updated error message formatting in TestStream . java to improve clarity and consistency in error reporting
move templateparser to thymeleaf . templateparser . markup and move it to thymeleaf . templateparser . markup
added tests for XPath parsing in XPathTest . java to ensure correct handling of string IDs in XPath expressions
added @ Nullable annotation to FutureUtils . java to improve code clarity and indicate that the variable may be null
print warning if call - graph be not resolve during call - graph construction
updated email addresses from " gmail . com " and " myrealemail . com " to " myrealemail . com " in ContextTest .
updated HTTP encoding handling in HttpConnectionTest . java and modified URI comparison logic in URIUtil . java to improve response validation and streamline URI comparison logic
implemented the ` getColumnDataType ` method in ` AbstractResultSetResultSet ` , ` ResultSet ` , and ` ResultSet ` classes to provide a way to retrieve data
camel - 16400 : camel - aws2 - * should throw unsupportedoperationexception instead of throw unsupportedoperationexception
refactor HSSFPictureData class to improve code readability and maintainability
replaced System . currentTimeMillis ( ) with Instant for startTime and startTime to improve accuracy and precision in time handling
added version handling and logging in LibMediaInfoParser . java to improve compatibility with newer media info libraries
updated ProjectReader . java to enhance proxy creation logic for IdeaDependency and IdeaModule dependencies to improve dependency management and ensure correct proxy
added SerialHeap class to handle serialization of SerialHeap instances to facilitate the identification of SerialHeap instances in garbage collection
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types . java files to improve code clarity and reduce unnecessary compiler warnings
updated mouse wheel event handling to use Vector2i instead of Mouse . getPosition to enhance flexibility and maintainability of mouse wheel event
datamongo - 1608 - fix nullpointerexception in datamongo - 1608
[ hotfix ] [ table - common ] add support for multisettypeinfo
added a ` retrieveByIssuer ` method to ` XOAuthProviderConfigurator ` to retrieve specific identity providers based on issuer and zone ID to en
pdfbox - 4892 : avoid false positive when parse poor whitespace
refactor ContactsBackupJob to use a new OperationService for managing operations to improve code organization and ensure proper binding and unbinding of
updated type constraints in ` mmm Attr . java ` and added new classes ` T6938454a . java ` and ` Infer
added a method to check if the account configuration is hidden in the account account account account account account account account account account account account account account account account account
added a check to ensure the number of supported display bounds in DisplayController to prevent inconsistencies between two supported and old display instances to enhance
updated the schema removal method in PMetaDataImpl to use getSchemaKey ( ) instead of getSchemaName ( ) to ensure the correct key is removed
ggb - 2088 : do n ' t fire the ` ` login passive ' ' event .
added a new ` Box2DTest ` class and updated ` GDXTester ` and ` Box2DTest ` to use it to
fix npe in localbypartioner
[ hotfix ] [ hybridshuffle ] [ test ] increase buffer request timeout
chore : update java and python dependency ( # 138 )
[ openoffice ] add help button to openoffice panel
make tcp _ nodeLAY a child option for the tcp _ nodeLAY option in the tcp _ nodeLAY option
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , BinanceFundingHistoryParams , and BinanceTradeService classes to use wildcard
added a ` classRef ` variable and refactored class loading logic in ` ScanResultObject . java ` to improve efficiency by avoiding
no functional change - code cleanup
added null handling functionality to the Querydsl class and created corresponding integration tests to enhance query handling capabilities and ensure correct behavior of null handling in
added null checks for the actor in ParallelAction and SequenceAction classes to improve robustness by preventing potential NullPointerExceptions during action processing
test : fix checkstyle issue in cttypetest
added synchronization around the closing and clearing of writers in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new Java interface ` JJ ` , ` KK ` , and ` KK ` classes in the ` org . mapdb . k
added functionality to revoke existing ACR certificates in CertificateManager . java and created a corresponding test in CertGenerationTest . java to enhance certificate
added checks for non - body responses in AbstractHttpTest and a new test for writing a body in HttpServerTestBase to ensure proper handling of
updated exception handling in ScriptTransformer . java to provide clearer error messages when the script engine is not found or fails to load
added support for additional connection pooling types in HiveConf and updated exception messages in TestTxnHandlerNegative to enhance connection pooling capabilities and improve error
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to ensure consistency in
added lock and unlock file actions in FileMenuFilter and OCFileListFragment to enhance file management functionality by allowing locking and unlocking of files
refactor Version class to improve code readability and maintainability
clear the endpoint cache when update a keyspace
added a private method ` waitForState ( ) ` to improve code readability and reusability to streamline the waiting logic by consolidating waiting
updated method signatures to use ` SkylarkRuleContextAttr ` instead of ` Map < String , Object > ` for coerced attribute values to
simonstewart : refactor storage interface to extend from storage interface
fix ( sql ) : fix unnecessary or replace option in view creation
change exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by providing more specific error messages
updated query string retrieval to use rb ' s query string if it ' s null to ensure that a valid query string is retrieved before accessing parameters
added validation to check for illegal characters in headers to ensure header values comply with HTTP specification
renamed instanceSize to arrayBaseOffset and updated related methods in HybridLayout and related classes to improve clarity to enhance code readability and
[ apex ] fix compilation error in apex comment container
hhh - 15410 - add log for lazy fetch mode
refactor filters in NoGetOperationsFilter , NoUserOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter to
added database and table name assertions in TestCompactionTxnHandler and set them in TxnHandler to ensure consistency in database and table names during transaction handling
added unit test base on user forum issue
added a check before adding traces to the list to ensure only valid traces are added to the list to avoid adding duplicates
updated the condition to check for null elements in ` providers ` using ` CollectionUtils . contains ` instead of ` contains ` to ensure proper handling of null
simplified the database version check in InsertOrUpdateGeneratorPostgres . java by removing unnecessary exception handling for PostgresDatabase to improve code readability and simplify
added LocalIndexIT and BaseScannerRegionObserver classes to manage local index limits to enhance query performance and allow dynamic adjustment of scan limits
added a check to prevent adding a collection with the same name and has already been used in the past to ensure data integrity by preventing duplicate entries
updated cursor handling logic in VDUBuffer . java and vt320 . java to ensure correct cursor positioning and positioning based on screen bounds
removed the static final string USE _ RETRIES from HttpShardHandlerFactory to eliminate unused variable and improve code clarity
update version number check to support version 11.0 . 0.4
[ hotfix ] [ stream ] do n ' t execute task if there be no input gate
added unit test for message source parser
added a null check for properties in RemoteCluster . java to avoid potential NullPointerException when accessing properties
refactor IOException handling in FileSystemBlobStrategy . java to improve clarity and ensure proper exception propagation
updated error message for setting up base URLs in RepositoryVersionResourceProvider to accurately reflect the cause of stack upgrade failures
txidTextField : do n ' t update confidence if it be already set
added a constant for G1 perm generation in JmxSupport . java to enable support for G1 perm generation in the application
updated NearbyController . java to remove unused imports and streamline distance calculations to improve code clarity and reduce unnecessary dependencies
pdfbox - 4892 : make clonefornewdocument public , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to exclude home activities to ensure proper handling of home activities during swipe gestures
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update constant names for clarity to enhance code readability and maintain
updated method names and assertions in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve clarity and consistency to enhance code readability and ensure
updated UnfreezeBalanceV2Actuator to set the unfreeze amount in the ret object to ensure accurate representation of the unfreeze balance
add ` ` per match ' ' to the description
simonstewart : use fileutils . copydirectory instead of fileutils . files . copy
refactor multiple assertion classes for improved consistency to enhance maintainability and readability of the codebase
[ hotfix ] [ javadoc ] fix javadoc typo in Observable . java
refactor pushAll operation handling in Update . java and add a new test for multiple pushAll functionality in MongoTemplateTests . java to improve
added null check for UUID to ensure unique UUIDs are set to avoid potential null pointer exceptions
added hover event handling in InputConsumer and OverviewInputConsumer to improve user interaction by distinguishing hover events
updated configuration handling in CoreContainer . java to include a sleep delay for bo bostrap configuration to ensure that bo bo bo bo bo bo bo bo bo
camel - 16400 : camel - netty4 - camel - netty4 - camel - netty4 - camel - netty4 -
hbase - 16475 increase the number of client retry retry retry retry in hbasetestingclusterautostarter to 15 .
[ bugfix ] [ sourcenode ] fix source sourcenode . getsourcesnippets ( ) to work on window
make encoded graph cache test more robust .
updated query command from " customer _ count " to " all _ tables " and modified the SQL query to use " all _ tables " and modified the
added support for adapting Kraken assets to Kraken assets in KrakenAdapters to enhance currency metadata handling in the Kraken
added a ` toString ( ) ` method to the ` AnyOf ` class and created a corresponding test class ` AnyOf ` to provide a string representation
refactor email email email email email email email email email email email email email email email email email email email email email email email email email email email email
[ influxdb ] improve error message for miss measurement
rename dotransform to downcast to avoid confusion
updated address filtering logic to include unique local addresses to enhance security by ensuring only valid local addresses are processed
added a method to quote column names in DataTextFormatter to ensure column names are properly quoted to prevent SQL injection vulnerabilities
added property management methods to WrapSystem and StrUtils , and updated method names in CompileMethodEntity and CompileMethodEntity to enhance system property
added a constructor to the UpdateRequest class that accepts a URL parameter to enable proper handling of POST requests in the UpdateRequest class
changed the access modifier of the enum enum from static to package - private to allow access to the enum from other packages
added a method to ` RequestHandlerUtils . addExperimentalFormatWarning ` in ` DataImportHandler ` , ` ReplicationHandler ` , and ` Rep
updated debug logging to use a formatted list for module names to improve clarity and consistency in logging output
change row height calculation to use default label font
http : / / issues . apache . org / jira / browse / amq - 4705 - fix checkstyle issue in broker
[ minor ] fix npe in cqlinputformat
simplified conditional logic in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintainability
[ drools - 7670 ] add equal ( ) and hashcode ( ) to ruleterminalnodenodenodenodenodenodenodenodenodenode
added import for StageIDsRearranger and modified logic for resolving stage IDs in TezCompiler . java to ensure correct handling of stage IDs based on
move messagingservice mbean registration to apache cassandra - net
updated memory management logic in LotsOfOutput . java to check if the total memory exceeds the init memory allocation to ensure that the memory consumption does
added imports for org . apache . lucene . document and org . apache . lucene . document in multiple Java files to en
updated LdapAutoConfiguration and LdapProperties to ensure anonymous read - only is set correctly and improved test method names for clarity to enhance
refactor DatabaseMetaData class to improve code readability and maintainability
make example echopipelinetest package - private
added a ` finishMocking ` method to ` MockitoSession ` and modified ` DefaultMockitoSession ` to handle a ` Throwable ` parameter to improve mock
refactor dependency handling in GoTestDescription and add new test cases in GoTestIntegrationTest to improve dependency management and enhance test coverage for genrule
replaced the ` buffer ` field with ` readBuffer ` and ` writeBuffer ` fields in ` SPDYAsyncConnection ` to improve buffer management
use getflowingblock instead of getstaticblock in blocklivingwrapper .
updated ` AndroidLocationPlayServiceManager ` and ` BackgroundLocationHandler ` to use ` Uri ` for background location handling to enhance flexibility in handling
rename apr to apr for clarity
[ hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot
reduce the amount of shaped recipe from 10 to 16 . fix # 1892
[ hotfix ] [ test ] add retry logic for forced checkpoint
removed unnecessary whitespace whitespace checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a pattern to compile a specific pattern in NeuteredLinesFilter . java to enhance filtering functionality to improve filtering capabilities based on specific patterns
chore : update java microgenerator to 1.0 . 2 update proto file
added support for handling " INTERVAL " and " NCLOB " data types in DataTypeFactory and related classes to improve data type handling to ensure proper type
[ wavefront ] do not publish timer gauge if it be not publish
updated JSON handling in ShenyuClientRegisterSpringCloudServiceImpl and ShenyuClientRegisterSpringCloudServiceImpl to enable batch processing of upstream upstream
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable registration of an event listener with specified parameters
added socket exception handling and logging in SelectChannelServerSslTest . java to improve error handling and logging during SSL connection tests
camel - ignite : fix camel - ignite to work in osgi environment
updated print statements in AbstractClient . java to handle empty set cases to improve clarity of output messages when no data is available for processing
pdfbox - 2576 : do n ' t throw exception , return false instead
added unit tests for ` setDisplayHdrCapabilities ` and ` setDisplayHdrCapabilities ` methods in ` ShadowDisplayTest . java ` to ensure
added a finally block to reset classLoader to null to ensure proper resource management and avoid potential memory leaks
added detailed error messages for user - provided bloom filter entries and improved exception handling in SemanticAnalyzer and SemiJoinHint classes to enhance debugging and
added a default constructor to the Message class to enable instantiation of Message objects without requiring parameters
fix for http : / / issues . apache . org / bugzilla / show / show / bugzilla / show _ bug . cgi ?
updated PhoenixDecimalObjectInspector to utilize PrimitiveTypeInfo for better precision and handling of decimal values to enhance precision and scale handling to improve
replaced ` GZIPOutputStream ` with ` OutputStream ` in ` CompressionResponseStream ` and ` CompressionServletResponseWrapper ` to ensure the output stream is
updated method parameters in Authenticator . java to improve clarity and consistency in parameter naming
removed redundant checks for EJS file paths in DCD . java to simplify the code logic for better readability and maintainability
replaced direct access to ` thread . getThreadGroup ( ) ` with a helper method ` getThreadGroupName ( ) ` to improve code readability and
added logging functionality to MethodInvocationPrivilegeEvaluator for better debugging to improve traceability and maintainability of the code
changed package and package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch .
updated imports in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and reduce unnecessary dependencies
cloudstack - 8441 : add iso disk path to the vm when migrate vm to another storage
simplified signal handling logic in SigInt . java and improved exception handling in SigIntTest . java to enhance code readability and ensure proper
replaced static import of ` ArrayUtils ` with a direct call to ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code read
make spring - cloud - test work without spring - cloud
added multiple @ Override annotations to the ColorRGBA class to improve code clarity and maintainability
planning : remove deprecate planningentityselector . setinitializedplanningentities ( )
added a build time parameter to the ArtifactInfo builder in TwoLevelArtifactCacheDecorator and ManifestRuleKeyManager to track the build time to enhance the
updated field access methods in GroupByOperator . java to use declared fields and improved handling of numEntriesHashTable to enhance code clarity and ensure
added null check before adding blockAppearance to prevent potential NullPointerExceptions when the block is null
added support for the CNC currency in the currency system to enable trading functionality related to the CNC currency in the application
increased the skewAllowance value from 5 to 15 and updated related classes to allow dynamic adjustment of skew allowance based on service configuration
added sorting functionality for song song song song song song song song song song song song song song song song song song song song song song song song song song
added a method to read a request body from a Retrofit client to facilitate the handling of request bodies in the request processing
refactor signblock to extend legacybaseblockwrapper
refactor Iceberg branch execution to improve clarity and error handling for tag creation in Iceberg branch execution
replaced ` newArrayList ` with ` Collections . singletonList ` for setting an external group whitelist to improve code readability and simplify the code
simonstewart : move the frame number from the shader engine to the shader engine
updated password change requirement logic in IdentityProviderEndpoints . java and added logging for unsupported operations in IdentityProviderEndpointsMockMvcTests . java to improve error handling
added a call to ` notInitializedInConstructors . removeAll ( assumeReflective ) ` in ` UnreadFields . java ` to ensure that constructors are
updated exception handling in JdbcExecutor to differentiate between closed and closed connections to improve clarity and error reporting for database connection issues
added unit tests for the SpringmvcClient class to ensure correct handling of requests for missing user data and service names
updated regex patterns for user and password patterns in CredentialInjector . java to ensure correct matching of user and password patterns
added Item4 and Item3 items to the menu in ActionListenerCalledTwiceTest . java to enhance functionality by allowing the menu item to be
updated test output messages in TestCoreParser . java to include query and query results to improve clarity of test output to enhance debugging information and ensure
updated comparison logic in SimpleNode . java to use ' id ' instead of ' child ' to improve clarity and consistency in equality checks
removed the public modifier from the PopulatorContextStackItem class to enforce package - private visibility to restrict access to the class within its own package
updated ` numDocs ` handling in ` MoreLikeThis . java ` and added a new test case in ` TestMoreLikeThis . java
refactor the event trigger method in QuestManager . java to improve code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest static
updated query construction to use append method for better readability to improve code clarity and maintainability
added a new method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class with a native method ` unsafeGetLong ` to facilit
updated time zone representation from ARAST to EET in multiple Java files to ensure accurate representation of the time zone in the application
updated the id value from 90000010 to 90000011 in DeprecationLogger . java to correct the identifier for proper logging functionality
hhh - 15410 - do n ' t try to convert jdbc exception to lockoptions if not rollbackonly
do n ' t print ` ` download external file ' ' when there be no suffix
bug fix : set system property to false for mac o x
add piecewiseintegration test to make sure we do n ' t miss the piecewise integration
changed access modifier of ` STATE _ SCREENSHOT _ CAPTUREABLE ` to protected and added ` switchToScreenshot ( ) ` method in ` Base
added a modWhiteListPattern variable and a test for setting a white list configuration to ensure proper handling of white list parameters in Hive configuration
remove invalid class from entryloader
updated the method call to use player . team ( ) instead of team . sharded to ensure compatibility with the correct team reference in the method
updated cookie domain from " comp1 " to " domainHelper . getHostName ( ) " to ensure the cookie domain reflects the correct host name
added checks for nullable values in column validation to ensure columns are validated correctly based on their nullable constraints
refactor multiple security token - related classes to improve code organization and maintainability to enhance clarity and facilitate future development
added tests for querying documents in CustomCollectionTest and refactored separator variables in CompositeIdRouter to improve test coverage and enhance code cl
added snapshot handling in ExecutablePreparedStatementBase and updated PostgreSQLIntegrationTest to use a new scratch data map to improve data management for PostgreSQL
updated condition checks and formatting in DefaultServlet . java to enhance code readability and ensure proper handling of cache limits
fix ` ` open database ' ' and ` ` open database ' ' button when drag in
updated description creation and test assertions in ExecutionUnitRunner , ExecutionUnitRunnerTest , and CucumberTest classes to enhance clarity and
replace ` isEmpty ( ) ` with ` StringUtils . isNotEmpty ( myVersion ) ` for null checks to enhance code readability and maintainability
changed access modifiers of methods in TimeUtils from public to package - private to restrict access to utility methods for better encapsulation
updated security frame handling in RefectionMHTests . java to improve compatibility with different Java versions to ensure proper behavior across different Java versions
updated file extension check from " . jpg " to " . jpeg " to ensure correct file extension validation
[ gr - 25854 ] make nativeimageDebugInfoprovider . tojavaname ( ) return correct javatype
added ` getIcon ( ) ` method to multiple classes and updated ` DataTableTopComponent ` to set classDisplayed default value to ` ClassDisplayed
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi . org / show _ bug . c
modified the ` replace ` method in ` FindAndReplace ` to handle special special characters in the ` replace ` method to ensure proper replacement of special characters
fix npe in smackpacketdebugger . setconnection ( xmppconnection ) .
refactor SchemaExtractionProcessor class to improve code readability and maintainability
added a ` copyDir ` method to the ` IO ` class for copying files between source and destination directories to ensure source and destination directories are
added exception handling for unknown datum classes in JacksonUtils to improve error reporting for unknown datum types
updated the way dependencies are handled in DefaultJavaLibraryBuilder to improve the way dependencies are retrieved and added to the build rule resolver
simplified height calculation in selectbox .
added normalized identifiers for database and table to ensure consistent identifier formatting in database and table operations
refactor database schema handling in ` DbSqlSession ` to ensure proper schema retrieval and logging when using Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle Oracle
removed the log out from the Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home Home
[ hotfix ] [ test ] fix flaky test
added null check for candidates list in FastImportAction . java to ensure proper handling of null candidates list to prevent potential NullPointerExceptions during element processing
updated the condition to check if the bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean
fix typo in class name
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure proper memory management and prevent memory leaks
bugfix : nullpointerexception when get time zone
added null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueue to use a custom exception handler to improve error
deleted the Session2Token . java file to remove unused or redundant code from the project
cloudstack - 7751 : delete volume when volume creation fails
added a new ` SystemShortcut . Install ` class and integrated it into ` SystemShortcut ` and ` PopupDataProvider ` to enable support for
added a null authority populator to the LdapAuthenticationProvider class to ensure proper handling of null authorities in user details
add fallback to default version 2.5 . 1 that could not be build android .
replaced ` . buildOrThrow ( ) ` with ` . build ( ) ` in ` ShadowCamera . java ` to simplify the method call to improve
updated the ` sortLiveDocs ` method to utilize ` Bits ` instead of ` FixedBitSet ` for better handling of live documents to improve performance by
added handling for null result in JMESPathExtractor to improve robustness by preventing processing of null results
updated import statements and added null checks for authorities in AuthorizeTag . java to enhance error handling for null or empty authorities to improve code
updated URL assertions in tests to use ` java . util . Date ` instead of ` DateTimeUtils ` to improve clarity and consistency in date
cloudstack - 7338 : fix typo in exception message
updated configuration handling in RobolectricTestRunner and Config classes to use method - specific configurations to improve clarity and correctness in managing class
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to align with the updated protocol implementation
refactor partition key comparison in HiveAlterHandler to use a new helper method to improve readability and maintainability of the code
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to allow the icon to be displayed in the tex
updated the condition to check if the component is active to ensure that the component is active before proceeding with further operations
replaced ` SharedBlockingCallback ` with ` Callback . Completable ` in multiple files to improve code clarity and reduce dependency on SharedBlockingCallback
added workspace listener functionality to the PreviewControllerImpl class to enable dynamic updates based on workspace changes
updated conditional checks in Reflection Reflection to ensure proper handling of non - anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous class
refactor TransportHelper class to improve code readability and maintainability
updated file path formatting in CatalinaAcegiUserRealm . java to improve readability by removing unnecessary leading slashes to enhance code clarity and
updated logging messages in AmbariServer . java to provide clearer context about the initialization process to improve debugging and traceability of server startup processes
added null checks for node initialization and modifications in JSONWriter . java to enhance code robustness by preventing potential null pointer exceptions
updated method signatures and configurations in SliderAppsViewControllerImpl . java for improved clarity and functionality to enhance code readability and ensure proper
added a check to ensure backgroundManager is only attached if it is not already attached to prevent potential NullPointerExceptions
added functionality to set the current tab in the AllAppsTabbed , Launcher , and PagedView components to ensure consistent tab navigation and improve user
added a null check for the URL in BaseDataSource and implemented a test for PostgreSQL URL URL to ensure that a valid URL is provided and validate the
updated PebbleTemplateEngine initialization in PebbleModuleTest . java to improve readability and formatting to enhance code readability and maintainability to ensure
added EditNameDialog to handle directory creation in FileDisplayActivity to enhance user experience by allowing easy management of directory names
added functionality to toggle bar borders in multiple activities to enhance user interaction by allowing customizable bar bar borders
updated URLs in OkCoinExchange to point to the correct API endpoint for WebSocket connections to ensure compatibility with the correct API endpoints for WebSocket connections
jbrules - 2825 : fix test break by refactoring
refactor file handling to use SeekableByteChannel for improved readability to enhance code clarity and performance in file input / output operations
refactor ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` as a parameter to improve type safety and clarity in handling
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to clarify the purpose of the class and its implementation
updated conditional checks in SerializationConfigurationParser . java to ensure proper handling of serialization type keys to improve code readability and maintainability
added a dynamic heap size limit for debug devices in QuickstepProcessInitializer to optimize memory usage for debugging purposes
refactor the summation logic in Collectors . java to use a variable for improved readability to enhance code clarity and maintainability
log4j2 - 1349 remove @ ignore annotation from abstractloadbundletest
updated the handling of top - deletion time in PrecompactedRow . java to ensure correct serialization of top - deletion time to prevent unnecessary serialization of top
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added InvalidRenderIntentTest . java to ensure correct
add lifecycle support for meterregistry ( fixes # 10 )
change log level from warn to info for unexpected configuration item not find ( # 11045 )
added tests for certificate generation in CertificateFactoryTest to ensure proper handling of invalid certificate input
camel - 18418 : fix simple predicate to parse binary expression correctly .
refactor onTabUnselected method to improve focus handling in EditorActivity to ensure windows are dismissed based on focus changes to enhance user experience by
improve error message to include user name
updated file paths and matrix scaling parameters in SkeletonModelGpuSkinningTest . java and modified animation timing in SkeletonModelGpuSkinningTest .
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method in ` DefaultProjectFilesystemFactory ` to simplify the method signature
added @ Deprecated annotations to UpgradeResponse . java to indicate that the class is outdated and may be removed in future versions
added functionality to generate d . ts files alongside existing d . ts files in the JSweet transpiler to allow users to specify
added a test for Kinesis fetch timeout in StreamConfigTest . java and updated fetchTimeoutMillis in StreamConfig . java to ensure correct behavior
[ beam - 8470 ] fix streamingdataflowworker to generate html file
increased the maximum number of metastore server threads from 100 , 000 to 1000 , 000 to improve server performance and resource management
changed the return type of onTaskSnapshotChanged from void to boolean to indicate success of the snapshot change operation
updated shadow radius variable from mMaxShadowRadius to shadowRadius to ensure correct shadow radius is applied
added a test to validate the behavior of chain aggregation in a message processing chain to ensure correct handling of nested aggregation in the message processing chain
updated loop condition from ' limit ' to ' end ' in MarketSellAssetActuatorTest . java to ensure proper iteration over the loop to avoid
make polyglotcontextimpl . is interactive rather than internal .
updated the condition to check for null or equal to ensure previousCachedFilePath is both null and not equal to prevent potential null pointer exceptions
added DisplayController parameter to WindowManagerProxy instantiation to enhance functionality by integrating display management capabilities
added a check for root directory in MetalFileChooserUI and SynthFileChooserUI to determine if the current directory is a root directory to enhance user experience
updated screenSize initialization to use Toolkit ' s default toolkit to ensure consistent behavior across different operating systems
updated type parameters in the ` recognise ` method from ` List < ? extends RecognitionObject > ` to ` List < CaptionObject > `
refactor JPASQLBase to improve entity management and query handling to enhance code organization and ensure proper persistence and retrieval of entities
remove dead code in freeformfinsetconfig . java
updated moe version from " 1.1 . 2 " to " 1.2 . 0 " to reflect the latest version release
updated error message in runtime error message to clarify that the constant cannot be set due to its value
updated error messages in ElementsShouldSatisfy , ZippedElementsShouldSatisfy , and ElementsShouldSatisfyTest classes to ensure
mark the Weights class as deprecated to indicate that the class should no longer be used
refactor unsafe plugins registration logic into a separate method to improve code readability and maintainability by reducing duplication
added ` @ Hint ( isDep = false ) ` annotation to ` AndroidAppModularityDescription ` , ` AndroidGraphEnhancerArgs
changed mCenterPagesVertically from true to false in AppsCustomizePagedView . java to disable page vertical scrolling functionality
added a call to doneProcessing ( ) in MigrationRequestOperation . java to ensure that migration processing is handled correctly during the migration process
updated KonnectedBindingConstants and KonnectedUPnPServer to use base URL instead of module IP address to improve clarity
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` for better type handling in ` WSFederationClaims `
added database - specific table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to enhance database
added a new test case for handling cases with nested nested nested nested expressions in the CaseExpressionTest to ensure correct parsing of nested nested nested expressions in SQL
added mouse support for starting copy mode in ConsoleActivity to enhance functionality to allow copying text using mouse input
updated the ` writeXmlOutput ` method to use a ` Writer ` instead of a ` String ` for output generation to enhance flexibility
added unit test base on user forum issue
( chore ) camel - examples - add log for exception
changed package and import statements from ` ch . qos . logback ` to ` ch . qos . logback . classic ` in multiple Java files
[ hotfix ] [ table - common ] do n ' t assert that source / target npe
added import statement for SharedStringSource in TestXSSFRichTextString . java to enable usage of SharedStringSource in the test cases
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class that accepts an ` Environment ` and ` TraceInfo ` parameter to en
refactor multiple dataset classes to improve code organization and maintainability
[ hotfix ] [ test ] migrate Readablewritableconfigurationtest to junit 5
replaced equality checks with ` equals ` for field comparisons in ` NormUpdate ` , ` MemoryIndex ` , ` CoreDescriptor ` , and ` AnalysisRequestHandler
changed access modifier of IndexFileNameFilter from public to private to restrict instantiation to enhance encapsulation
refactor ifstatementtest to use gif instead of gif
replaced ` getPutOnlyTableHeaderRow ( ) ` with ` getTableHeaderRow ( ) ` in ` ConnectionlessQueryServicesImpl . java ` to
refactor TypeAdapter to use a null - safe method to improve code readability and maintainability by reducing redundancy
updated the expected size in BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added EXIFReader class to handle metadata processing for Exif IFD0 , Date , and Exif Thumbnail to enhance image processing
return ` ` none ' ' instead of ` ` unknown ' ' when unit be unknown
[ rhdm - 1478 ] applypmml model command to allow parameter type to be specify by the user
improve error message to be more informative
added a check to ensure bubble bar visibility before proceeding to prevent actions when the bubble bar is not visible
[ gr - 21235 ] fix aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch aarch
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java and created a test for concurrent initialization in XR
added a new method ` find ` to ` TicketCatalog ` and updated logging messages in ` DefaultTicketCatalog ` to enhance ticket retrieval
refactor SSL connection handling and improve code readability to enhance maintainability and clarity of SSL configuration logic
[ hotfix ] [ network ] fix race condition in sortresultpartition
[ beam - 8470 ] fix npe in jmsio . read ( ) and write ( )
added a new parameter ` type ` to the ` queryAllPluginHandlesByPluginId ` method and updated related classes to enhance functionality to
updated the way spans are created in DefaultSpanCreator and SleuthAdvisorConfig to ensure that spans are started in the start ( ) method to
updated IOSGraphics and IOSApplicationConfiguration to utilize configuration values for drawable formats and depth and stencil formats to enhance flexibility and
refactor login logic to use a separate method for user authentication to improve code readability and maintainability by reducing duplication
added checks for the ` real ( ) ` and ` complex ( ) ` methods in ` PtNDArray ` to ensure that the method is only called
refactor lock name retrieval in SynchronizationStatistics . java to use a do - while loop to ensure proper handling of thread interruption conditions to improve
refactor implementation of ShadowPicker to improve code clarity and maintainability
refactor HttpClientOptions initialization to use a dedicated method for creating HttpClientOptions to improve code readability and maintainability by centralizing the configuration of
added support for additional types in DynamicStruct and DynamicArray classes to enhance type handling and improve error handling in the SolidityFunctionWrapper to ensure proper
updated font property retrieval to include a default value of true to enhance flexibility in font property handling
added a constructor to the CopyStep class that initializes it with a specified source and destination path to enhance flexibility in handling different file paths for copying
fixed - rsemaphore . addpermits ( ) and addpermits ( ) method of rsemaphore .
camel - core : fix camel - core - dsl test to use next ( ) instead of next ( )
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it to improve code organization and maintainability by
changed the types of lists and methods from List < String > to List < ByteString > in WitnessScheduleStore . java to ensure proper handling of byte
added a check for non - empty resultsMeta before printing results to avoid printing empty results to improve output clarity
refactor ConcurrentLinkedQueue to improve item removal logic and add a new RemoveLeak class for testing to enhance thread safety and prevent concurrent modification
added ` addSpecialTokens ` parameter to multiple ` encode ` methods in ` HuggingFaceTokenizer ` and ` BatchEncode ` methods to
[ hotfix ] [ runtime ] [ runtime ] use ncopy instead of arraylistlist in taskmanagerservices # computeslotresourceprofile
updated chunk data handling in LoadSingleTsFileNode to include aligned data size to enhance data integrity by ensuring correct data management during data processing
added support for a new session storage context in the Duo Security multifactor web flow configuration to enhance session management functionality in the application
add a test that verify that schema validation work correctly
added a default constructor to the TypeAdapter class and updated the @ Ignore annotation to disable record support in Java 17 support to address compatibility issues with Java 17
refactor Debugger . java and SuspendedEvent . java to improve event dispatching and error handling to enhance code clarity and ensure proper
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
[ ds - 3952 ] remove null parameter from createresourcepolicy method .
added a null check before releasing the deflater entry in GzipHttpOutputInterceptor . java to prevent potential NullPointerException when closing the deflater entry
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
updated the MD5 calculation to normalize the password password password password to ensure proper handling of Unicode characters in password input
updated command handling and added null checks for completer and completer to improve command execution reliability and prevent potential NullPointerExceptions
changed the keyListener variable from non - final to final in BasicProfilerState . java and added multiple @ Override annotations in BaseAppState . java to
updated object saving logic in MongoTemplate and added a new test for saving JSON in MongoTemplateTests to ensure correct handling of JSON strings in MongoDB to
added functionality to check for multiple remote addresses in RequestUtils and created a corresponding test case to ensure proper handling of multiple remote addresses in RequestUtilsTest to
changed return types of ` getJobArgs ` and ` getJobArgs ` methods from ` String ` to ` ObjectBuilder ` in ` JsLibrary .
refactor CookieManagerTest to use a dedicated method for obtaining the host address to improve code readability and maintainability by centralizing the
updated the handling of wrapped runs in GlyphLayout . java and added a new test case in BitmapFontTest . java to ensure proper memory management and validate
[ hotfix ] [ pulsar ] [ connector / pulsar ] add support for pause and resumption of split reader
added support for retrieving the hive script operator ID from the environment to enable better management of script operator identifiers in Hive
refactor ` getListedTermCounts ` method to utilize ` SimpleImmutableEntry ` for sorted results to enhance flexibility in handling facet
added a new file ` UseSeparateStepSizeAction . java ` to implement functionality for managing separate step sizes in the Jog plugin
updated FileMenuFilter to improve file locking handling and user context management to enhance security and ensure immutability of fields
hbase - 20937 fix testtablesplit . testtablesplit to work with hbase 2 . x
updated header values in HttpClientRequestAdapter and HttpClientRequestAdapter to use " 0 " and " 1 " instead of " false " and " 3 " to
pdfbox - 2852 : use ioutils . closequietly instead of manual close quietly
added fullscreen mode handling and updated display mode logic in GwtGraphics . java to improve user experience by ensuring proper display mode is set and updated
updated WebfingerIssuerService to use a new URI class and modified parameter names for clarity to improve URI handling and enhance code readability
add unit tests for SoulApacheDubboClientConfiguration to ensure proper configuration settings for the Dubbo client
replaced Gdx . files . internal ( filename ) . pathWithoutExtension ( ) with resolve ( filename ) . pathWithoutExtension ( ) in SkinLoader .
added trace logging statements to ChainingAttributeReleasePolicy and changed log level from warn to info in OidcDefaultJsonWebKeystoreCacheLoader to info
replaced calls to ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . ALLOW . lockInterruptibly ( ) `
removed unnecessary whitespace in the package declaration to improve code readability and maintain consistency
added exception handling to the redundant comparison logic in NullDerefAndRedundantComparisonFinder . java to improve error reporting for redundant redundant redundant redundant redundant redundant
use defaulthttpdatasource to avoid npe
added a configuration property for maximum number of prepared statements per database connection in the execution scheduler to allow configuration of the maximum number of prepared statements per database connection
changed the return type of the set method from WritableConfig to Configuration to allow for better type specificity to enhance flexibility in handling configuration options
added error handling for command payload validation in AutoScalingHandler to ensure proper error reporting for invalid command payloads
refactor CombinedDataset class to improve code readability and maintainability
pdfbox - 4892 : fix typo , a suggest by valerybokov
added methods to remove cryptography restrictions in the Utilities class to enhance security by managing cryptography restrictions effectively
fix nosuchelementexception in entity . close # 1181
added a new test method ` testPageMarginsLong - text transform ` to the ` TextVisualRegressionTest ` class to ensure proper handling of long text
added a null check for ` vContext ` before initializing it to avoid potential NullPointerExceptions when ` vContext ` is null to ensure proper handling of
[ wialon ] fix speed value for wialon
hbase - 24767 change default to false for hbase - 15519 per - user metric set hbase . regionserver . user . metrics . enabled default to false ; i . e . off . ( # 2132 )
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to check if
fix crash when go back to home home
refactor multiple HTTP - related classes to improve code organization to enhance maintainability and readability of the codebase
add params to zadd method in pipelinebase .
[ ds - 3952 ] fix compilation error in test
rename testasyncmessages to testasyncmessagesPerformance
added optional handling for target nodes in VersionedTargetGraphBuilder and VersionPropagatorBuilder to improve robustness by ensuring non -istent targets
updated epoch seconds checks to use magic numbers to improve code readability and maintainability by using magic numbers
updated the return statement in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java to ensure correct calculation of
initialize row and column variables correctly in JSONParser . java to ensure proper initialization of variables
refactor type handling by replacing ` JavaType . FullyQualified ` with ` Pattern ` for better pattern matching to improve code readability and
updated DETAIL _ THIGHT and DETAIL _ THIGHT values in BaseItemDetailsFragment . java and added error handling for video
added a method to remove glyph information from the glyph information cache to improve memory management by ensuring that glyph information is removed from the cache when necessary
act - 825 : add ability to handle end event in terminate process
( chore ) camel - jaxb : use xmlRootElement if available
updated the endpoint URL in the SimpleHttpClientTests from " http : / / www . apereo . org / scottb . html " to
added command line argument - d / - prdef for reset all preference to default value
hbase - 17826 thriftmetrics should be protect instead of private
removed deprecated CHANNEL _ MANUAL _ FAN _ SPEED and its associated logic from DanfossAirUnitHandler to simplify the codebase
use hamcrest assertion instead of junit in test
removed redundant code to improve code clarity by eliminating unnecessary duplication
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to enhance robustness by preventing null pointer exceptions
server : set root disk size only if it ' s not already set
updated prediction visibility logic to conditionally display apps based on user preferences to enhance user experience by conditionally showing apps based on user preferences
[ geos - 10674 ] fix for invalid cr in bbox
added validation methods for value , position , and value shoud in LibrustzcashParam . java to ensure parameters are valid and prevent errors
deprecate ithrowableentity in favor of ithrowableentity in future future .
added randomness of x and y coordinates in NodeDataImpl to enhance the variability of node positioning
updated method names and added a new test for missing scopes in TokenValidationTest . java to ensure proper handling of missing scopes in token validation to improve test
refactor JavacStep initialization to use try - with - resources for better resource management to ensure proper initialization of variables to avoid potential memory leaks
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the release version of the software
added a condition to check for deep shortcuts in LoaderCursor . java to enhance functionality to support deep shortcuts in deep shortcuts
added hashCode ( ) method to the TimeGranularitySpec class to ensure proper comparison and hashing of TimeGranularitySpec instances
changed access modifiers of BooleanWeight and DisjunctionMaxQuery classes to protected to allow subclass access to these classes for better extensibility
added a boolean flag ` useProxyResponseCode ` to manage the use of transparent NTLM proxy responses to ensure proper handling of NTLM proxy responses
[ gr - 36436 ] aarch64 : fix aarch64 : do n ' t try to register an alias to a valid register .
server : use capacity _ type _ memory instead of host _ ids to calculate vm memory
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and included a new query in ` TestDistributedSearch
updated audio recording parameters from 220 to 44100 in AudioRecorderTest . java to ensure compatibility with high - quality audio quality requirements
updated the calculation of ` newOriginX ` in ` RocketFigure . java ` to correctly center the value based on ` subjectWidth _ m `
druid : fix nullpointerexception when no datasource be specify
added handling for the " Original Type " in the CustomProperty class and updated the regex pattern for pattern matching to enhance functionality to support additional
added a static method ` create ` to create an instance of ` IndexImpl ` to facilitate the creation of instances of ` IndexImpl ` with
modified the return statement to simplify the logic by removing an unnecessary variable to improve code readability and maintainability
updated SchemaCompatibility to include an index for merging schema compatibility and added a new test for schema compatibility to ensure correct handling of reader type mismatches to improve
added support for handling different entity path types in JPA query processing to improve the handling of entity relationships in the database
added synchronization to the spans list and updated return statements in TestSpanHandler . java to ensure thread safety when accessing and modifying the spans list to prevent potential
updated method signatures of ` getText ` from ` List < Object > ` to ` List < ? > ` across multiple classes to enhance type
updated exception handling in ViewContextImpl . java to improve error logging and provide more informative debug information to enhance debugging capabilities and provide clearer
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
improve error message when service can not process the request
added new project files for iOS data and moe resources in GdxSetup . java to enhance project structure by including additional resources
added a concurrent merge scheduler to the MockAnalyzer in TestSearcherManager to improve performance by allowing concurrent merge operations in a concurrent environment
updated condition in QTestUtil . java and modified list handling in GenericUDTFInline . java to improve session state validation and ensure safe safe safe safe safe
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
ticket # 4810 : prevent default in spreadsheet key listener
fix classnotfoundexception in osgi test
updated timeout calculation in HikariPool to use connectionTimeout instead of elapsedTimeMs to improve accuracy in timeout handling
add a non - packaged resource directory for the voice - component . xml so that it can be use by the voicecompiler
updated filename handling in Compat . java and FileOpener . java to improve file path validation to ensure proper file path resolution and enhance robustness
changed the return type of the row ( ) method from Cell < T > to void to allow for future implementation of row ( ) method
do n ' t duplicate port specify by -- p2p - port = 10 ( # 388 )
added a null mask feature to the WebSocketClient class and updated WebSocket connection handling to use it to improve handling of null values in WebSocket connections
refactor ` genUDTFPlan ` method to return a Pair of ` RowResolver ` instead of a single RowResolver ` to enhance functionality to
[ hotfix ] [ network ] add nodeselectionstats to track selected node
added a new class Person with a name property to facilitate the management of a person in the application
added a boolean variable ` hasOwnerPtr ` to track the presence of a reference to ` ownerPtr ` before executing the ` execute ` method to improve
replaced ` setupLogoFade ( ) ` with ` setupFade ( ) ` and ` startFade ( ) ` and ` onResume ( )
remove duplicate updatecomparatoroutputlevel call .
refactor exception handling in SegmentReader . java to improve error handling and provide clearer error messages when loading the SegmentReader class to enhance clarity
[ sudoku ] run firecellupdate event on the Event Dispatch Thread ( # 11428 )
replaced ` DefaultInetAddressAdapter ` and ` CollectionTypeAdapter ` with ` CollectionTypeAdapter ` and updated related method signatures to streamline type adapter
added methods to retrieve double , long , boolean , and string values in the Series class to enhance functionality to handle null values and improve error
changed the command line option for audio time stretch from " -- no - audio - time - stretch " to " -- -- audio - time - stretch "
updated boundary checks and calculations in GeoRelationUtils and GeoUtils classes to improve accuracy of geometric calculations and ensure proper handling of edge cases
cloudstack - 5339 : fix npe in getdiskoffering ( ) when vm be in stopped state
added cleanup method to HazelcastTest to ensure proper resource cleanup after each test to prevent resource leaks
blockciphertest : add test for nosuchalgorithmexception
added filter for printing operations logs in QFileClient to enhance visibility of operations logs during execution
fix : add type argument for child introspection ( # 8662 )
fix nullpointerexception when set current connection address
replaced manual addition of a request to a WebSocket connection with a utility method to improve code readability and simplify the code
refactor image output stream handling to use try - with - resources for better resource management to ensure proper resource cleanup and avoid potential memory leaks
replaced direct calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with ` SearchActivity ` in multiple activities to
refactored the ` toString ( ) ` method in ` GrepOptions ` and ` SchemaCrawlerCommandLine ` classes to improve code readability
http : / / issues . apache . org / jira / browse / amq - 4705 - add osgi configuration to web
added @ Autowired annotation to RepositoryIndexCreationIntegrationTests to enable dependency injection for the PersonRepository class
changed the exception type of the stop method from Exception to InterruptedException to improve error handling by providing a more specific exception type
fix case insensitivity in blockcactus .
refactor mouse event handling in ThemeSelector . java to use a dedicated mouse motion listener for mouse events to improve code readability and maintainability by encaps
( chore ) camel - min - multicast : extend abstract min - multicast flow control field
added a new parameter ` showToolbar and ` verticalAlignment ` to the ` editStringAt ` method in ` IOSImplementation ` and ` IO
throw an illegalargumentexception if the model file be null
added a check for distinct queries and modified query generation logic in ClusterIntegrationTestUtils and QueryGenerator to ensure proper handling of distinct queries and improve query
make jninativeLinkage # getClosestLinkage public .
update javadocs to reflect recent change
added null check for children before iterating over child elements to avoid potential NullPointerException when accessing child elements in PartitionPruner . java to enhance robustness
added tokenPosition and currentPosition fields to MessagePackParser and updated return logic in MessagePackParser to improve token location handling and enhance parsing
added locale saving functionality to AbstractSolrMorphline test to ensure consistent locale settings after tests to avoid flaky test failures
removed unnecessary conditions for determining the status bar size in LauncherFragment . java to simplify the code and ensure consistent behavior regardless of the launcher state
add unit tests for the MetricsReporter class to ensure metrics registration functionality works as expected
( chore ) camel - core : remove unused variable from service registry
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing in collections
fix kafka test for non - existent topic
updated DSAParameterGenerator to handle varying prime strength values more accurately and improved error messaging to enhance robustness and clarity
added FQDN configuration to LLAP daemon settings and updated method signatures to include JobConf parameter to control the use of FQDN for
fix flaky test in clientoutofmemoryhandlertest . testoutofmemoryhandlertest . testoutofmemoryhandlertest . testoutofmemory
added ` getCmoObjectId ( shapeId ) ` method to multiple shape classes to ensure consistent object ID generation across shape classes
added a new test method ` testWithDistinctScalarQuery ` to the ` DistinctTest ` class to verify the functionality of distinct scalar queries with distinct
updated Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravRetTask classes to improve code organization and maintainability
fix : remove extension adapter from managed kubernetes client
updated subtitle handling in DetailsDescriptionPresenter to utilize a new utility method to improve code readability and maintainability by centralizing media stream information
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager . java to
do n ' t swallow exception when generate summary
removed unnecessary parameters from intPool and bytePool reset calls to simplify code and improve readability
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated ShadowWindowManagerGlobal to handle TIRAMISU API level to ensure compatibility with TIRAMISU and introduced a new WindowSessionDelegateU
fix urlhelper to handle non - standard scheme host and port
added MSSQLDatabase support for foreign key constraint generation to ensure compatibility with MSSQL - specific database handling in relation to foreign key constraints
hbase - 26930 fix checkstyle issue in hbase - replication
fix pipe ezuli not be able to handle the sidecheck event
kristianrosenvold : make html identifier log more verbose to debug
[ hotfix ] [ hive ] fix hivelookuptablesource . getfieldDataTypes ( ) and hivelookuptablesource . getfieldDataTypes ( ) to
improve javadocs and add check for wrong thread
updated schema name construction in SequenceSnapshotGenerator to use CatalogAndSchema to ensure compatibility with different database schemas
updated color handling in SpriteBatch , SpriteCache , and LwjglDebugStarter classes to improve rendering quality and compatibility with alpha transparency
fixed - redissonconnection . getsentpromise ( ) . join ( ) method throw classcastexception . # 3850
added baseCore retrieval and validation in SolrLoggerServiceImpl . java to ensure that statistics are not added multiple times to the statistics collection
renamed ` launchTask ` method to ` launchTaskFromView ` and added ` @ NonNull ` annotation for ` Task ` parameter to
updated MorfologikFilter to accept a dictionary resource and improved import statements to enhance functionality by allowing dynamic loading of dictionary resources
updated sorting options for community community community community community community community community community community community community community community community community community community community community community community community community community community
added imports for ViewKt and ListRow , and modified ViewKt visibility logic in CustomListRowPresenter . java to enhance the visibility of the header
refactor client type handling in StressAction . java to ensure proper client initialization in a finally block to improve resource management and prevent potential resource leaks
refactor HttpClient class to improve code readability and maintainability
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ` for better type checking in ` CatalogAndSchema ` and ` AbstractDb2Database `
add serialization support for java . time
replaced ` org . apache . log4j . mdc ` with ` org . slf4j . slf4j ` in `
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver ` to ensure compatibility with updated type handling in the code
removed unnecessary import statements in CoinbaseTransaction . java to improve code readability and maintainability
added a method to retrieve build targets from BuckConfig and integrated it into ProjectCommand to enhance build target management by allowing users to
removed redundant initialization of IdleStrategy in Ping . java to streamline the code by eliminating unnecessary duplication
replaced instances of ` ContentProvider ` with ` ContentResolver ` across multiple Java files to standardize the usage of ` ContentResolver ` across the
removed redundant conditional checks for selecting components in ReportPanel . java to streamline code for improved readability and maintainability
[ hotfix ] [ test ] [ hotfix ] [ test ] add null check for slot owner
added a new file ` RemoveCallsToSystemGc . java ` that removes calls to ` System . gc ( ) ` and ` Runtime .
removed redundant super ( ) calls from multiple exception classes to streamline code by eliminating unnecessary super ( ) calls
added a setUIID method to the ScaleImageLabel class to ensure the icon is updated correctly after setting the UIID
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to streamline the update process to improve code clarity and maintain
updated command line argument handling to support both classpath and cp options to enhance flexibility in command line argument processing
avutil : fix checkstyle violation
updated initialization logic in StorageService . java to ensure proper state management during storage operations
updated Test7196045 . java file to improve test coverage and functionality
updated density and decay values in ShaderParametersLightShaft . java to improve visual quality by adjusting light effects
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and updated related methods in ` OidcRedirectActionBuilder ` to
# 161 - refactor basetable ddl to be more generic
added functionality to check if the user is a federated share option in UsersAndGroupsSearchProvider to enhance sharing capabilities based on user preferences
added an override for the ` needsDocValues ` method in ` TestBBoxStrategy ` to ensure that document values are always included in the output
updated buffer alignment error handling and improved exception message formatting in BufferAlignmentInterceptor . java and added package - info . java files to enhance clarity
added a method ` intForEach ` to ` Int2ObjectHashMap ` for processing integer values in ` IntObjConsumer ` to enhance functionality
fix scoreboard conflict with global map storage . close # 1699
changed return type of the count method from Long to long in QueryDslMongoRepository and QueryDslMongoMongoMongoMongoMongoMongoMongoMongoMongo
refactor MTree snapshot creation logic to improve clarity and structure to enhance readability and maintainability of the code
refactor dot product calculation to use a temporary variable for clarity to improve readability and maintainability of the dot product calculation logic to enhance code
added a new constant IRREVERSIBLE _ THRESHOLD and methods to retrieve and update the last confirmed block number in the DynamicPropertiesStore to
refactor locale setting logic in GpsMainActivity and MainPreferenceActivity to streamline locale handling to improve code maintainability and reduce redund
added a new method to track if a new database was created in the Launcher app to ensure proper handling of database connection to improve database connection management and
refactor the collection handling in BasicAclEntryAfterInvocationCollectionFiltering to improve readability and maintainability of the code to enhance code clarity by
added a null check for the datamodel in the condition to ensure that the is64Bit flag is set only when datamodel is not null
added a thread check for the current thread in TestIndexWriterDelete . java to ensure that operations are only performed on the correct thread
changed the visibility of the closeDatabase method from private to protected to allow subclasses to access the closeDatabase method
replaced ` apiclient . model . dto . BaseItemPerson ` with ` ModelCompat . asSdk ` in FullDetailsActivity and Base
added attribute handling in BatikSVGDrawer to ensure imported elements are set correctly for SVG rendering
added a try - catch block to handle exceptions when parsing user configuration to improve error handling and logging clarity
added a " WaitForresult " extra to the intent and modified the waitingForResult assignment in CodenameOneActivity to control the behavior of waitingForResult
refactor ` HitQueue ` , ` SpanPositionQueue ` , and ` PriorityQueue ` classes to use ` Supplier < T > `
refactor widget description handling in WidgetCell . java to improve clarity and functionality to enhance user interface by displaying widget descriptions when available
added a maximum registered attribute count check to prevent exceeding the allowed number of attributes to ensure that the application does not exceed the defined maximum registered attributes
move predicatetest . java to the correct package .
camel - 16400 : camel - core - optimize defaultheaderfilterstrategy to filter header that be case insensitive
updated InlineLayout and Breaker to correctly handle the break statement to ensure proper inline inline inline inline inline inline inline inline inline inline inline inline inline inline inline
updated ` getView ` method to accept ` @ NonNull ` and improved null safety to enhance code robustness and prevent potential null pointer
removed ` androidPackages ` and ` instrumentingExcludeList ` from the ` Setup ` class and modified the ` shouldInstrument ` method to include
added a conditional check to return the last column index based on the association ' s insert destination before source to ensure correct column index is returned when the association
updated memory limit command in ` cmdModifierTest . java ` to use a new method ` getMemoryLimitFilePath ` to improve clarity and maintainability
removed the singleton option from AbstractCxxDeps and added an EMPTY _ INSTANCE constant for empty CxxDeps and improved handling of empty dependencies to
added a null check for the rule object in JavaTestRule to improve error handling and provide clearer feedback when a specified rule is not found
do n ' t load minecraft proxy for 1.10 and 1.10 + .
remove unnecessary conditional check for atIndex to ensure atIndex is always non - negative to prevent potential logical errors
increased the timeout duration in the BuckBlockJUnit4ClassRunner from 100ms to 500ms to allow more time for test timeouts
updated TaskOverlayFactoryGo to include AssistContentRequester as a parameter to enhance functionality by allowing for better handling of assist content requests
updated the handling of witness address in VoteWitnessProcessor . java to ensure proper encoding of witness address to prevent potential null pointer exceptions
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for default method regression scenarios
updated WorkloadManagerMxBean class to improve memory management and performance
updated the import statement for KafkaException from KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests . java to align with the
added a call to close the container loader to ensure proper resource management and prevent memory leaks
added a ` clear ` method to ` ExceptionThrowingTaskletStub ` and corresponding tests in ` FaultTolerantExceptionClassesTests `
[ hotfix ] [ config ] improve error message in configbuilder
updated applyTunerConfigs method signatures to include an extraProperties parameter across multiple classes to enhance functionality by allowing additional configuration parameters to be passed
added logic to check for active segments in progress before adding them to the list of segments to ensure that segments are only added to the list when they are
added a touchable check to return null if the touchable state is disabled to prevent further processing when the touchable state is disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest ` to ensure that the build process
fix npe in abstractcacheallpartitionsrequest when cache config be null
refactor module installation logic to use a dedicated method for checking node packages to improve code clarity and maintainability by centralizing package installation checks
added @ ManagedObject and @ ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance the management capabilities of MBeanContainer and Destroyable classes to
updated the condition to check if ` settings . inAppBrowser ` is set to ` false ` in ` LongClickableSpan . java ` to ensure
updated string comparison methods in EspMilightHub and EspMilightHubHandler to use ` . equals ( " 0 " ) `
updated the condition in ` mmm Types . java ` and added new classes ` T6558559a ` and ` T6558559b `
updated player output messages in WorldEditListener to include specific position information to improve clarity and user understanding of position changes
camel - 20297 : camel - kafka - shutdown the kafka consumer to shutdown properly
removed default example method from Schema . java to streamline code by eliminating unnecessary default examples
modified thread interruption logic in AgentRunner . java to use a boolean flag to improve clarity and control flow to ensure proper termination of the loop
remove time column from dataset dimensions in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure correct handling of time data types
added a condition to check if ' shards ' is not null before proceeding with operations to ensure that operations are only performed when ' shards ' is not
replaced direct linker provider retrieval with CxxPlatforms . getParseTimeDeps in RustBinaryDescription and RustLibraryDescription to streamline dependency handling to
added ` getName ( ) ` and ` getName ( ) ` methods to ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` N
added logging statements to ` CFGPrinterObserver ` and ` IdealGraphPrinterDumpHandler ` classes to improve debugging information and traceability of printer operations
phoenix - 1892 add small scan threshold to query
updated the return statement in RetryGatewayFilterFactory to include the route ID in the filter creation to enhance clarity by providing more detailed information about the
replaced calls to ` reDisplay ( ) ` with ` callWidget ( RE DISPLAY ) ` in ` LineReaderImpl . java ` to streamline widget
replaced ` onOverviewShown ` method with ` showForOverviewIfNeeded ` in ` ActivityControlHelper ` and ` WindowTransformSwipeHandler ` to
refactor conditional checks for ` globalMinPackedValue ` and ` globalMaxPackedValue ` in ` CheckIndex . java ` and add a
updated the publish method call to use updateLastState instead of a boolean parameter to improve clarity and functionality in state management
updated string concatenation syntax in MetastoreDirectSqlUtils . java to improve clarity and consistency in string representation handling
updated the addition method in SpliteratorCollisions . java to ensure proper handling of null values
[ java ] add ` ` text ' ' and ` ` exacttextinsensitive ' ' condition to webelement
removed duplicate while loops in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
no effective change - do n ' t set fetch size for orm query request
improve error handling in httpservermultiplexchannelhandler .
pdfbox - 4892 : preallocate arraylist size , a suggest by valerybokov
added support for rounded corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner corner
replaced ` ShapeDrawable ` with ` View ` for managing background elements in ` DesktopTaskView . java ` to enhance flexibility and
updated the instantiation of UpstreamCheckService in UpstreamCheckServiceTest . java to ensure proper setup and configuration of the upstream check service
replaced warning log statements with debug log statements in AbstractSession and AbstractSessionManager classes to improve logging clarity and reduce log verbosity during development
replaced error handling with a direct return of locks to simplify the code by eliminating unnecessary exception throwing
[ hotfix ] [ doc ] fix incorrectly spell ` ` the ' ' a ` ` teh '
added custom data handling in FileTextureArrayData to ensure mip mipmap generation only occurs when custom data is not needed
updated assertions in DefaultMaskingFormatterTest to use string concatenation to enhance readability and maintain consistency in string formatting
added methods to manage and check if a list is selected to improve selection handling and prevent unintended touch events
removed a condition that checks if the value count is zero in LlapArrowBatchRecordReader to simplify the logic by eliminating unnecessary checks
added a new class ` PolicyContext ` and modified ` PolicyContext ` to handle different file separators to ensure consistent file path handling across different operating systems
changed the type of ` flatQueries ` and ` expandQueries ` from ` HashSet ` to ` ArrayList ` in ` FieldQuery . java ` to improve
refactor TLSRestrictions class to improve code readability and maintainability
http : / / code . google . com / p / mybatis / issues / detail ? id = 546 : kafkamanager
updated assertNodeStateProvider to include a string parameter for ignorable node values and modified the method signature to accept it to enhance functionality to allow for
added a lock file to release resources to ensure proper resource management and prevent memory leaks
hbase - 20909 fix test failure in minizookeepercluster
refactor response handling in RestClient to improve error handling and logging to enhance clarity and maintainability of the response retrieval process to ensure proper resource
[ hotfix ] [ runtime ] use array instead of string to avoid npe in ingestion
updated loginStudent method calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT and TEST _
added null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions during item deletion logic
increased the limit for the number of strings from 500 to 100 to 100 in TestSpecialOperations to accommodate a larger number of string operations
updated ByteArrayInStream initialization and removed hexBytes method from ByteArrayInStream to streamline byte array handling and improve code clarity
corrected the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to ensure consistency in method naming conventions
added a method to check if a transition is a direct substate in AbstractStateMachine to ensure that only direct substates are processed in the state machine to
added handling for ListMultimap and SetMultimap in MultimapSubject . java and created corresponding tests in MultimapTest . java to ensure
added JoinOperation to the PostJoinOperation class to enable support for join operations in join operations
added a new test method ` testDataIssue258 ` to the ` AdditionalPostgreSQLTest ` class to verify the functionality of the PostgreSQL database tests
http : / / issues . apache . org / jira / browse / amq - 5035 . fix amq - 5035 test failure
[ calcite - 836 ] add miss table summary for javadoc
updated MongoDbConnectionPoolProperties and MongoDbConnectionFactory to use String representations of idleTime , idleTime , and maxWaitTime to improve configuration parameters to en
use sip . getMediafactory instead of null to avoid npe .
refactor filters and domain change handling in FacetProcessor . java to improve filter and domain change processing to enhance clarity and efficiency to streamline
added support for configurable timeout handling in the ShuffleHandler to improve flexibility in timeout configuration
replaced hardcoded value for mQuickStepStartingRotation with a constant QUICKSTEP _ ROTATION _ UNINITIALIZED in OrientationTouchTransformer . java to improve code
add deprecation warn for xpathbuilder
move data - related class to data - api
[ cpd ] add test case for edge case of escape slash .
added a validation for the ' atlas ' property in AtlasTmxMapLoader to ensure that the required ' atlas ' property is present before proceeding
camel - 7999 : remove property placeholder support in camel - core
added a call to close the level database in BlockchainTest . java and removed unnecessary receive listener handling in KafkaTest . java to ensure proper resource
refactor line splitting logic into a separate method ` getLines ` to improve code readability and maintainability to enhance maintainability of the code
fix checkstyle violation in test
replaced ` ImmutableList . Builder < Object > ` with ` List < Object > ` in ` SQLBindings ` and ` AbstractSQLClause ` classes
added a check for the Java VM name to ensure compatibility with OpenJDK environments
added keepAlive option to ReactorClient configuration to ensure that connections are keep alive after configuration changes
replaced string literals for position and normal attributes with constants from ShaderProgram to improve code maintainability and readability by using defined constants
camel - 16400 : camel - core - make it possible to load property component from classpath .
updated null check for accountCapsule in UnfreezeBalanceActuator . java to ensure account existence before accessing its properties
update version number to 3.8 . 1
updated method calls to use ` unannotatedType ( ) ` instead of ` t . unannotatedType ( ) ` for improved clarity
updated assertions and configuration methods in StorageGroupProcessorTest . java to improve test coverage and ensure correct sequence and flushing behavior to enhance test reliability and
updated various classes to use " ee10 " instead of " jetty " for loading JAAS authentication services to ensure compatibility with the
added a wait before starting a video processing to improve video processing efficiency
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor to simplify constructor usage by eliminating unnecessary parameters
updated import statements and modified test methods in AccessorsTest . java to improve clarity and functionality of the test cases
add a framemap to the lirgenerator so that it can be use in the lirgen .
updated JUnit 4 annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningContinuousIntegrationCondition to improve
fix the boat item ' s y - coordinate not be correct .
updated the ` toString ( ) ` method in ` Directory . java ` and added a method ` getLockID ( ) ` in ` RAMDirectory .
replaced the ` allowExperimentalOptions ( ) ` method with a direct check for ` descriptor . getStability ( ) ` to simplify the condition to improve
added methods to handle Path and AssertDelegateTarget assertions in BDDAssertions . java to improve assertion capabilities for better test case to enhance test coverage and
replaced instances of ` hp ` with ` hostField ` in ` ForwardedRequestCustomizer ` and updated test cases in ` ForwardedRequestCustomizer
updated logging messages to indicate when multiple Kubernetes config files are not desired to improve clarity and user experience by providing guidance on how to export the
added functionality to handle file uploads in UploadListActivity to improve file management and user experience during file uploads
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use it instead of ` ProviderInstallListener ` to improve
replaced instances of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` to standardize header usage across the codebase
updated SelectFromDatabaseChangeLogStatement to use a configurable column name to enhance flexibility in selecting database change log history based on user input
hhh - 14747 - fix jpa test failure on postgresql 11
[ hotfix ] fix error in internalpartitionservicetest
updated the execution scheduling logic to check if the scheduler has already started before starting it to improve error handling and ensure the scheduler only starts if it
updated InlineBox instantiation and added a conditional check for non - null block parent block parent to improve code readability to enhance code clarity and ensure
refactor checkArgument calls in StatisticMap . java to improve readability by adjusting string concatenation to enhance code clarity and maintainability
updated the return value of getStagedRectSlideEnd method from 383 to 500 to adjust the staged rectangle slide end time from 383 to
updated button text in WaveInfoDialog and PlacementFragment to use localized strings to improve internationalization support for users
updated conditional logic in BukkitMain . java to include an additional check for owned plot area .
added tests for ` setTouchExplorationEnabled ` and refactored listener handling in ` ShadowAccessibilityManager ` to improve test coverage
pdfbox - 5328 : avoid arrayindexoutofboundsexception , add unit test
use getname ( ) instead of getpropertyasstring ( ) for good readability
replaced instances of NPOIFSFileSystem with POIFSFileSystem . create method to simplify filesystem creation and improve code readability
added imports for PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS PS
updated regex pattern for version matching in TestWebHCatE2e . java to improve accuracy in version string validation
updated the condition to check if count is greater than or equal to 1 to ensure that count does not exceed the bounds of the pickleEvents array
include clientid and clientid in kafka consumer configuration ( # 5037 )
updated import statements and added error handling in JavacCompiler . java to improve code clarity and ensure proper error reporting when execution fails
ggb - 169 make sure we do n ' t open the list if it ' s open
camel - 14538 : fix checkstyle issue in springbatchproducer
added a method ` isAnimationFinished ( float stateTime ) ` to the ` Animation ` class to determine if the animation has finished
added a test for custom favicon icon with line break to ensure proper rendering of custom favicon images in the login page
added null check for otherUrl in TimeLineCursorAdapter . java and updated refresh text in HomeFragment . java to ensure safe access to otherUrl and
[ desktop ] fix space in input box in desktop
refactor ObjectHashSet class to improve code readability and maintainability
refactor null checks and simplify array equality checks in DataUtilities . java to improve code readability and maintainability
allow for deletion of enchanted book ( mc - 12770 )
add test case for async resource ( # 2674 )
rename ` target - flat - headers ` to ` target - user - headers ` in ` ProjectGenerator . java ` to clarify the
added error handling for sending messages in MailService to improve logging clarity when sending messages fails
updated method names from ` resetTaskItemView ` to ` resetToEmptyUi ` in ` TaskHolder ` and ` TaskItemView ` classes to improve cl
added tests for ` getPartitionsByNames ` and ` getPartitionByNames ` methods in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure
refactor FileListListAdapter class to improve code readability and maintainability
changed the type of ` fileId ` and ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and updated
update child index in BubbleBarView to correct child count retrieval to ensure proper functionality
removed " org . eclipse . jetty . websocket . util . server . internal . " from the WebSocket configuration classes to streamline the configuration
changed the third parameter of S3Request from ` true ` to ` false ` for the ` expiresSeconds ` parameter to align the S3Request constructor
fix jfxradiobutton animation when timeline be null
updated the condition for handling empty splits in DeweyNumber . java and added a test for zero splits in DeweyNumberTest . java to
added a protected static variable ` categorySetString ` and modified the return statement in ` MwVolleyApi . java ` to ensure proper formatting of the
corrected the spelling of " close " to " close " in WebSocketClientTest . java to ensure consistency and accuracy in error messages
fix npe in webapploader when no classloader be specify
jbrules - 2835 : fix bug in persistentattributetransformer . addfield ( ) when the superclass be not mapped to the parent
pdfbox - 4892 : avoid classcastexception and improve error message
added a new test class TestPorterStemFilter to test the stemming filter functionality to ensure that the stemming filter behaves as expected in the
added a success parameter to the ` postBatchMutate ` method and updated its usage in the ` postBatchMutate ` method to ensure proper handling of batch
updated package name from ` org . springframework . springframework . batch . core . exlore . support ` to ` org . springframework . spring
fix synchronization in chat window .
move sys . touch ( ) to a static block in apiutil
updated HgCmdLineInterface to use " - mardu " instead of " - 0 " for untrackedFiles command and modified related test
camel - 7999 : camel - netty - make it possible to configure timer in endpoint .
added ' final ' keyword to instance variables in DirectionalLight , PointLight , PointLight , and SpotLight classes to ensure immutability of
replaced direct calls to ` target . getWidth ( ) ` and ` target . getHeight ( ) ` with ` target . getHeight ( ) ` in ` X
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a meaningful string representation of the
added annotation filtering functionality to the ClassFinder class to enhance the ability to filter annotated classes for processing
updated length calculation logic in BytesColumnVector . java to handle edge cases where newLength is negative to ensure correct handling of edge cases to prevent potential overflow
fix writebehindmapstoretest . testwritebehindmapstorewithevictions fails on slow slow slow slow slow slow slow slow slow slow slow slow
updated the method signature of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` XTextArea
[ giac ] add polyfunction . isequal ( ) to check if a poly be equal
added null check for table before retrieving column class to avoid potential NullPointerException when table is not initialized
added error handling for ClassCastException in CustomChangeWrapper to ensure robustness by preventing runtime exceptions during class loading
added getBuckConfig and getOptionalPathList methods to DistBuildConfig , DistBuildFileHashes , and RecordingFileHashLoader classes
fix export dialog for double entry
added JUnit Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a known issue
changed the return type of the doJoin method from void to boolean and updated related logic in JoinTemplate , MergeJoinBatch , and MergeJoin
removed the getAutodeps method from JavaLibraryDescription . java to streamline the code by eliminating unnecessary method
added FLAG _ ACTIVIVIVIVITY _ NEW _ TASK to the intent in LauncherTimelineCursorAdapter . java to ensure the intent does not
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable pagination pagination pagination pagination pagination pagination
updated repository URL assertions in RepositoryConventionPluginTests . java to ensure correct retrieval of Maven artifacts from multiple repositories
added a new ` AffiliationTask ` class to facilitate the management of node affiliation within the pubsub cluster
improve error reporting for invalid uri in taglib directive .
changed the access modifier of the ` buildUserProfileByClassCompleteName ` method from private to public to allow access to the method from other classes
added support for array elements in CacheKey and updated related tests to enhance cache key handling and ensure proper equality checks
replaced GnomeFileTypeDetector with FileTypeDetector across multiple file system provider implementations to improve file type detection consistency across different operating systems
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
updated ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to use ` VirtualSensorCallback ` instead of ` VirtualDeviceParams
added a check to ensure the ` contextObject ` is not removed from the ` HttpSessionSecurityContextRepository ` when executing the ` HttpSessionSecurityContextRepository `
updated variable name from ' lch ' to ' loopback ' in NetUtil . java to improve clarity and functionality to enhance code readability and
replaced hardcoded buffer size with DEFAULT _ BUFFER _ SIZE in the Zlib class to improve code maintainability and prevent potential ArrayIndexOutOfBoundsException
added secure validation and improved error handling in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem to en
added a boolean flag to track if the icon change listener is installed before adding or removing the icon change listener to ensure that the icon change listener is only
added Russian language support to the application
hhh - 15410 - fix bug in basesqmtosqlastconverter when use timeunit . nanosecond
disable frame state verification in native image
added setup and teardown methods to manage system properties in RobolectricTestRunnerTest to ensure proper configuration of test environment properties during tests
added imports for " org . slf4j . " and " org . slf4j . LoggerFactory " in ViewClassLoader and its test
updated conditional checks in ChangePackaging . java and added a new test case in ChangePackagingTest . java to ensure proper handling of " jar "
updated download file extension from " forbidden " to " txt " in FileDownloadViaHttpGetTest . java and FileDownloadViaProxyTest . java to ensure
fix demo : clear command buffer
updated unit handling in JogService and Settings classes to use preferred units instead of default units to improve clarity and consistency in unit management
updated date formatting in DatePatternConverterTest . java to use UTC timezone for date date to ensure accurate date representation of date in UTC time
updated return statement in Terminator . java to ensure proper termination of the method execution
updated exception handling in FileSystem and LocalFileSystem classes to provide clearer error messages for invalid file URIs and improved error reporting for HDFS n
use a timer instead of a single - threaded executor in jabref
( chore ) camel - ftp : use awaitility instead of sleep
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` class to utilize ` ConcurrentSkipListMap ` for impro
added methods to ignore log entries based on the log ' s ignored status to enhance logging control by notifying users when a log level is ignored
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions when accessing runningTaskView
removed unnecessary type casting for item damage to improve code clarity and prevent potential runtime errors
removed the call to GraphicsUtil . cleanImage to streamline image processing for better performance
added new ` MMapDirectoryFactory ` and ` SimpleFSDirectoryFactory ` classes for managing memory mapping in Solr to facilitate the
added null check for ` ic ` in ` PdfCleanUpProcessor ` to avoid potential ` NullPointerException ` when accessing its properties
updated the assertion in QueryEqualityTest to use field1 _ s maxDocFreq instead of field1 to ensure accurate comparison of document frequency
updated ExtendedOperatingSystemMXBeanImpl . java to enhance performance monitoring capabilities
added a new method ` installLeftCommands ` to ` SideMenuBar ` for adding buttons to the title area to enhance the user interface by
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and introduced it to ` Tweetweetweetweetweetweetweetweetweetweet
added support for SybaseDatabase in the DropPrimaryKeyGenerator logic to enhance compatibility with additional database types
refactor Client class to improve code readability and maintainability
[ java ] wait for leadership to be ready before return to leadership .
replaced ` invalidate ( ) ` method with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView ` and added ` shouldDelay
added a return statement in NearCachedClientMapProxy . java to ensure proper termination of the method execution
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to properly shutdown the HTTP server before starting it to ensure graceful shutdown of the server
camel - 16400 - camel - aws2 - s3 : fix import and code formatting
[ hotfix ] [ runtime ] fix typo in webmonitor
bug 10717 : fix for npe in 2.2 . 7 upgrade
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to handle password discrepancies to ensure
added a maxEnergyLimit field and updated energy limit assignment logic in VMActuator . java to accommodate dynamic configuration of energy limits based on
added maxInMemorySize property and its getter / setter methods to HttpClientProperties and HttpClientPluginConfiguration to allow configuration of maximum in - memory size for HTTP client
refactor Cache class to improve code readability and maintainability
added two new Cucumber - related test files , RunCucumberTest . java , RunCucumberTest . java , and StepDefinitions
updated TypeJsonUtils to handle JSON parsing exceptions when retrieving double values to ensure robustness by defaulting to a default value when parsing parsing errors occur
removed duplicate byte array append methods in Utf8StringBuilderTest . java to streamline code by eliminating redundancy
added parameter validation to ensure parameters are only appended when they are set to avoid potential errors
camel - 16400 : added max number of output for circuit breaker
updated the test case for document frequency assertions in TestIndexWriterExceptions to ensure that the reader ' s document frequency behaves as expected
replaced ` hasher . putUnencodedChars ` with ` Sha1HashCode . update ` for resource APK , primary APK , and string
added static methods ` enumValue ` , ` intValue ` , ` longValue ` , and ` longValue ` to the AsmRuntime class to en
[ biomes ] add miss mana tag ( # 9078 )
replace async image loader with a fixed thread pool
updated access modifiers and refactored segment preloading methods in BaseTableUpsertMetadataManager . java to enhance encapsulation and improve code organization
updated delimiter from " \ u0648 " to " \ u0623 " across multiple files to ensure consistency in terminology and improve code readability
replaced ` vid . getImage ( ) . equals ( ` vid ` with ` vid . hasImageEqualTo ( vid ) ` in two conditional statements to improve
camel - jbang : camel - jbang - run - run - all - all - all - all - all - all - all - all -
added handling for NaN scores in CrawlDbReader to improve robustness by preventing processing of invalid scores
added a cleanup method to reset the last modified timestamp in OnStartupTriggeringPolicyTest to ensure a clean state before each test execution
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor ` and updated focus handling in ` FindAction
[ hotfix ] [ checkpointing ] make checkpointcleaner thread - safe
added a new file ` XPathWhiteSpaceTest . java ` that uses ` XPathWhiteSpaceTest . java ` for XML schema validation to test XML parsing to ensure
added a check for empty trie log entries in BonsaiPersistedWorldState . java and updated test cases in Bonsai
refactor FilledNewArrayInstruction class to improve code readability and maintainability
make network test more reliable
updated the method for checking if the path ends with a slash to ensure proper handling of paths ending with slashes in the parentPath variable
added a print statement to indicate failure to load the skin file to improve debugging by providing feedback when skin file loading fails
added dirty state management to LgoLevel2BatchSubscription and LgoGroupedLevel2Update to enhance the handling of dirty state in batch processing
added a new constant UNDEFINED to the Result class and updated its usage in TestStep to improve clarity and consistency in handling undefined results
updated exception handling in TestTransactionCallback to check for NullPointerExceptions instead of PersistenceException to ensure proper exception management during transactional errors
make ` uploadjobmultipartoperation ` a non - blocking operation ( # 16428 )
http : / / issues . apache . org / jira / browse / am am am am am am am am am am am am am am
bug fix : do not ignore node in vertical node
replaced the ` pos ` variable with ` sizeMask ` and modified the ` ensure avail avail avail avail avail avail avail avail avail avail avail avail avail avail
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to ChaosMonkeySafeLeaderTest
simplified the logic for determining targets and endpoints in StorageProxy . java to improve code readability and maintainability by reducing unnecessary assignments to enhance
updated parameters in FileManager . java for consistency to improve code readability and maintainability
updated function type mappings to improve clarity and consistency in function type handling
added methods for ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` in ` VariableElement ` and ` getEnclosingElement ( )
updated RFC reference from " RFC3280 " to " RFC8280 " in multiple Java files to align with the latest standards and improve
update version number to 2.17 . 4 , fix class cast exception
refactor thumbnail cache initialization and replace HashMap with SparseBooleanArray to improve memory management and optimize item selection logic
reformatted conditional statements in DirectUpdateHandler2 . java to improve code readability by ensuring consistent formatting
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL checks to improve path validation and ensure correct file URL formatting
updated PreviewPositionHelper to accept a Context parameter and adjusted its initialization in TaskViewSimulator and TaskThumbnailView to enhance functionality to support multi - screen
[ java ] do n ' t publish leadershipterm when catch up .
improve error reporting in pmd test
modified the skipping logic in ByteArrayInputStream . java and added a new Skip . java file to enhance the skipping functionality and provide a demonstration of
refactor the condition for promptUpdate in UpdaterTask . java to improve readability and maintainability of the code
changed the access modifier of the MAX _ HEADERS constant from final static to public static final to allow access to MAX _ HEADERS constant from outside the
add ` ` rt . jar ' ' to standard jar for modloader .
simplified the connection handling logic in AbstractHandshakeHandler . java to improve readability and maintainability of the code
updated parameter names and added IOException handling in various classes to improve code clarity and ensure proper exception management
added a check to ensure the response is not already committed before sending errors to avoid redundant error handling
updated condition checks in HttpSession . java to handle cases where ` hold ` is negative or ` lastPoll ` is less than or equal to ` 0
updated fade - out logic in HomeGestureTutorialController and SwipeUpGestureTutorialController to support a new gesture navigation tutorial to
improve logging for unknown prefab
updated ScimGroupProvisioning logic to include " internal . superuser " and " internal . superuser " for external group sets to enhance group management
updated thirtyDays calculation in FreezeBalanceActuator . java and added validation in TransferActuator . java to ensure that a non - existent
fix test wrong file separator to pass on
refactor : remove unused code
updated GpsMainActivity and AnnotationViewFragment to utilize EventBus for event handling to enhance event - driven architecture to improve event - d
added a check for a missing PDF file before verifying the number of pages in the document to ensure that the document number of pages does not exceed the
- deprecate androidbufferallocator in favor of androidnativebufferallocator
added checks to handle cases where flag names start with " ! " to improve robustness by ensuring only valid flags are processed
added NOPMD annotation to JDBCHistoryCache . java to indicate that the query should not be executed
updated the condition in BattlePassManager to check item use op correctly to improve accuracy in handling item use operations
fix for http : / / issues . apache . org / jira / browse / amq - 4078 - queue priority element should be
bug 5892 : remove duplicate code for createAffinitygroup
added a null check for the command parameter to ensure that help help help help help help help help help help help help help help help help help help help
updated LightOutputStream initialization parameters in PropertyTypes , ByteIterableBase , and LongBinding classes to increase the size of output streams to optimize performance and reduce memory
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` and modified conditional logic in ` ClassWriter . java ` , and created a new test class ` T
added an assertion to verify the length of a person ' s sn in the Person class
added null check for the file extension in VirtualFile . java to ensure the method handles null file extensions gracefully
do n ' t return to the main menu if the right button do n ' t exist
[ hotfix ] [ runtime ] fix slotsharinggroupassignment # markcancel logic
modified the loop structure to simplify the loop for better readability and maintainability
refactor the bind method in PlainSocketImpl to improve clarity and ensure proper resource management to enhance code readability and prevent potential memory leaks
added functionality to clean up removed media items in BookmarkListRootFragment and MediaDetailPagerFragment to improve resource management and prevent duplicate entries
updated log message to reflect the correct offset from the element ' s center point to improve clarity in action handling
added a new file bug4865918 . java for testing scrollbar behavior to address bug 4865918 related to scrollbar block increment functionality
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to streamline the code by directly using the
replaced specific command imports with a wildcard import and added a case for " groupTriggers " in QuestCommand . java to streamline import statements and enhance
fix : do n ' t select select gnuCash account file .
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enable proper string representation of these events for debugging purposes
updated CloudService configuration to use a constant configuration URI to improve maintainability and clarity of the service configuration
removed redundant calls to setViewportComponent and setJScrollPane in BrowserPanel . java to streamline the code by eliminating unnecessary components
updated key handling for keyboard navigation in multiple classes to improve clarity and functionality of keyboard navigation in the application
updated MoreIndexingFilter to conditionally retrieve MIME type parts based on a configuration parameter to improve flexibility in indexing based on user - defined settings to en
added author pattern to identify the author of a comment in jsdoc .
updated constant names for database creation and partition in MetricsConstant . java to improve clarity and consistency in naming conventions
refactor HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig to improve schema management and error handling
updated oauth2LoginLinks method to accept query parameters and added error handling to enhance error reporting for OAuth2 authentication failures
updated time zone strings to use " Islamic Umm al - Qura Calendar " instead of " Hijrah - umalq
added a condition to check if the browser is not a Firefox instance to ensure compatibility with different browser implementations
[ issue # 3949 ] allow to add user - defined grpc server interceptor .
added default value to the CREATE TABLE statement in TestCompatibility . java to ensure compatibility with the default database schema
updated method calls in WriterRecordBatch and StreamingAggTemplate for consistency to improve code clarity and ensure proper resource management during batch processing
[ hotfix ] fix typo in executiongraph . java
added a ` hasFrom ` flag and related getter and setter methods in ` Delete . java ` , and modified SQL parsing logic in ` DeleteDeParser
replaced success status checks with multi status handling in SynchronizeFolderOperation . java to improve clarity and functionality in file synchronization operations
refactor code to use ` RecipeSchedulerUtils ` for applicability checks to improve code readability and reduce duplication
updated regex pattern in LogAnalyser . java to allow additional formats for log line parsing to enhance flexibility in handling different formats for log input
( chore ) camel - google - cloud : migrate integrationtest to junit5
fixed - arrayindexoutofboundsexception : arrayindexoutofboundsexception should n ' t throw arrayindexoutofboundsexception
updated the type of ` iterator ` in ` CCLicenseStep . java ` to ` Iterator < CCLicense > ` and added a
added a null check for the global ID before adding it to the guidIndex to avoid potential null pointer exceptions
updated comparison logic in OptionalAssert . java to use comparison strategy to improve accuracy of value comparison in tests
updated font size handling in multiple files to improve memory management and ensure proper sanitization of HTML content
added a new test class ` TestArrayCopyToFromObject ` to validate array copying behavior to ensure proper exception handling for non - array objects
replace ` Escaper . bashString ` with ` Escaper . escapeAsPythonString ` for path insertion to enhance compatibility with Python
fix bz 65767
deprecate findfiles in favor of visitallfiles
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark test case as unstable due to HIVE - 22621
added a null check for the doRequest ( ) method in TestInternalInputBuffer . java to ensure that a default exception is thrown if it ' s null to
modified the ` autoloadCall ` method to include a ` lowerName ` parameter and updated its implementation in ` Environment . java ` and ` SplClassLoader
added server version checks in CustomPlaybackOverlayFragment and updated user preferences handling in PlaybackController to ensure compatibility with server versions prior to 10.
updated KDC to use local host names instead of hardcoded paths to improve flexibility and maintainability of the server configuration
updated Jsr250Voter to conditionally return ACCESS _ DENIED based on the jsr250AttributeFound flag to enhance security
update mp4parser to support modern mp4 format
added a new constant for the proxy user and modified session parameters handling to ensure session parameters are properly formatted based on the proxy user ' s username
camel - 17826 : camel - zookeeper - compress should use snappy by default
added a sleep delay in HttpClientTest . java to allow time for asynchronous operations to complete before proceeding
fix xssfsheet . setcelltype ( cell . CELL _ TYPE _ BLANK )
updated glyph positioning in GlyphLayout and added a new text message in BitmapFontTest to improve layout handling and clarify text text to enhance
updated ISTIO version handling in Fabric8IstioIT . java to ensure consistent usage of the latest ISTIO version and
replaced calls to ` apiClient . reportPlaybackStartAsync ` with calls to ` TvApp . getPlaybackManager ( ) . reportPlaybackProgress `
make sure to close the input stream in case of failure
fix maploader hitting eviction on initial load
updated the return statement to include ERROR _ BIT in ResponseFlag . java to ensure proper handling of error messages in response validation
fix for ds - 3058
added SoftReference for CompositeFont instances to improve memory management and prevent memory leaks
updated prefHeight assignment logic in Tree . java to ensure correct height adjustment based on node properties
drools - 2214 : dmn dmn dmn validation ( # 2499 )
removed unused imports and simplified method calls across multiple Java files to improve code clarity and maintainability
changed method visibility of finishRunningRecentsAnimation from private to public in TaskAnimationManager and updated its usage in NavHandleLongPressInputConsumer to allow
added null checks and improved edge type validation in ElementFactoryImpl , ImporterGDF , and ImporterGDF classes to enhance
[ beam - 8470 ] fix npe in case of unknown instructionresponse .
updated the constructor of ` Bin ` in ` BinFiles . java ` and added a new test for flow file size in ` TestMergeContent . java
refactor nearest tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile
added a check to skip content length in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to optimize request handling by skipping
updated Java2TypeScriptTranslator to handle string literals and modified the transpilation logic in SyntaxTests to improve string handling and enhance test assertions for
updated filter calculations and adjusted sample sizes across multiple classes to improve code clarity and optimize performance
hbase - 17826 canary canary should not try to connect to regionserver even if allregion be specify
remove node . environment for cassandraconnector test
http : / / issues . apache . org / jira / browse / amq - 4705 - reset the order index cursor position in order
added minimum size for the call dialog to ensure the call dialog does not exceed a defined minimum size to enhance the user interface by ensuring the dialog does
fix a bug where fall block would lose the state information . ( # 8798 )
make it easy to run unit test in jenkins
added dependency injection for KerberosPrincipalHostDAO and updated entity removal logic to improve entity management and ensure proper cleanup of entities
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method call for table snapshot retrieval
improve error handling and logging .
updated the error message to include a key from the Monetization setup section in the build hint to ensure the correct key is retrieved from the build hint
updated the instantiation of ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and modified the method
[ drools - 1474 ] [ drools - 1474 ] fix kiebuilder package path for boot - inf . files ( #
added a check for compatibility with the 19 feature in CheckIndexTest . java to ensure that the test runs only on compatible features
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method in ` RemoteTargetGluer ` to simplify the method signature
refactor LeaderLatch class to improve code organization to enhance maintainability and readability of the code
added methods to retrieve and initialize ZooKeeper parameters in SolidityNodeHttpApiService to facilitate the initialization of ZooKeeper parameters
refactor transaction confidence handling to use SettableFuture for depth checks to improve code clarity and maintainability by centralizing depth setting logic
added a new method ` createMediaRecorder ` to ` CodenameOneImplementation ` , modified ` getLontitude ` and ` setLong
set default platform name to ios
pdfbox - 2576 : fix typo find by codespell on fossies . org
reformatted conditional statements in Graphics2D . java to improve code readability and maintainability
pdfbox - 3017 : fix typo find by codespell on fossies . org
added error handling for frame processing in AbstractExtension . java to improve robustness by handling potential exceptions during frame processing failures
replaced direct call to ` Caller ` with ` AccessController . doPrivileged ` for class loader retrieval to enhance security by using a privileged action to
added logic to reset parent IDs for child categories in CategoryREST to ensure a parent category is removed when necessary
updated the dialog dialog to use a more descriptive title to improve clarity and user experience by providing a more descriptive title to enhance user experience
added a vwap field to the Ticker class and updated related methods to include it to enhance the Ticker class with additional parameters for volume and
added support for a new ` TextView ` in the ` SearchAndRecommendationsScrollController ` and ` WidgetsFullSheet ` classes to en
add rendergraphapi to make it easy to add tint node to gsoc
added a method to set the primary color for the NCFirebaseMessagingService to enhance the user interface to use the current theme color
updated ShadowUsbManagerTest class to improve test coverage and reliability
[ zeppelin - 5474 ] make sure that the evaluation will be run in parallel
added a call to update the selected configuration to ensure that the selected configuration is properly updated in the rocket configuration
updated the calculation of stroke width and height in AndroidGraphics . java to ensure stroke width and stroke width to be non - negative to prevent potential negative values
[ geot - 5001 ] test fail on gt - css translationintegrationtest ( preseve vendor option order across translation )
replaced ` nativeClosureManager ` with ` ClosurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a dedicated pool for
( chore ) camel - main : migrate camel - junit4 to junit5
added new classes WebsocketIngressIntegrationatedBootstrap and WebsocketPluginTest to implement WebSocket integration testing to facilitate testing of WebSocket interactions
[ ds - 3762 ] remove the generic type set from abstractimportsourceservice
refactor authentication comparison logic in AbstractCasWebflowEventResolver to use a dedicated method for better readability and maintainability to improve code clarity and
added a conditional check to return false if jnr . ffi . compile . x86asm is set to true to ensure that the code only executes when
replaced calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` for clarity to improve code readability and
added a new annotation ` Insecure ` annotation ` to the ` MessageBuffer ` class and refactored ` MessageBuffer ` constructor to enhance security
added new configuration variables for Hive ' s managed file format and metadata metadata to Hive configuration to enhance configuration options for Hive ' s managed file format and
initialize ` scopes ` and ` policies ` as ` HashSet ` in ` ResourceSet ` and added null check in ` DefaultResourceSetService ` to ensure
lucene - 8462 : make multireader # decrefonclose final to avoid npe
refactor multiple classes related to socket handling to improve code organization and maintainability
danielwagnerhall : fix flaky test in inputfieldtest
replaced the usage of ` $ Gson $ Types . getFirstTypeArgument ( ) ` with ` getFirstTypeArgument ( type ) ` in multiple
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet ( ) and Values ( ) to improve type
added a constructor to the FlipTransition class that accepts a customizable duration parameter to allow dynamic control over the background color and animation duration
removed unnecessary logging for subtitle validity checks to streamline code by eliminating redundant checks for subtitle validity
bump version to 9.0 . 10 and bump version to 10 .
updated warning messages in StackLocator . java to use LowLevelLogUtil . log for warning logs instead of System . err . println statements to improve logging
add support for java 16 and java 16 validation
updated conditional logic in ExpansionViewHelper to adjust padding and padding based on the number of replies replies replies replies to ensure proper layout layout for replies to
[ hotfix ] [ backup / restore ] fix npe in abstractpartitionprimaryreplicaAntiEntropytask
added metadata handling in SeedUrl and SeedResource classes to support storing and retrieving additional information about seed URLs
added a null check for the declaration before creating a cloned pattern in PatternBuilder . java to avoid potential NullPointerException when the declaration is null
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
ww - 4071 : add package name to action validation validation
updated assertions in test assertions to handle null null null null null null null null null null null null null null null null null null null null null null null
added ` stream ( ) ` and ` parallelStream ( ) ` methods to ` MapIterable ` , ` PrimitiveObjectMap ` , and ` Map
return a cloned version of notifInfo to ensure the original notifInfo object is not modified externally
ticket # 2506 : use ` ` commandconstants ' ' instead of ` ` commandconstants ' '
refactor AEADBlockCipher class to improve code readability and maintainability
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap ` classes
added a check for resource names containing a period in PackageResourceTable . java and updated the default resource mode in RobolectricTestRunner . java to
added a condition to check if ` ulSize ` is zero to ensure proper handling of edge edge edge edge edge edge edge edge edge edge edge edge edge
updated SignPlugin to accept a list of HTTP message readers to enhance flexibility in handling multiple HTTP message readers
refactor Int2ObjectCache class to improve performance to optimize object retrieval efficiency
added validation for remote repository deployment in StandardMavenAuthenticationProvider to ensure proper validation before proceeding with authentication
refactor AudioNode class to improve code readability and maintainability
added SSL context setup in LinkyHandlerFactory and updated cookie handling in EnedisHttpApi to improve SSL context management to enhance security and error handling
added new imports and modified the HiveFunctionRegistry class to utilize Stream and OracleSqlOperatorTable to enhance functionality to support additional SQL functions
http : / / issues . apache . org / jira / browse / amq - 3892 - fix for amq -
renamed the method ` getBuildTargetForAlias ` to ` getBuildTargetForAlias ` and updated its handling of flavored aliases to improve clarity
camel - 18434 : camel - olingo2 - fix camel - olingo2 - do n ' t try to parse camel -
added support for multiple equivalent versions in MetaStoreSchemaInfo to enhance compatibility with different Hive versions
server : do n ' t expunge vm if expunge operation fails
mark methods in AbstractDateAssert as deprecated to indicate that these methods should no longer be used and may be removed in future versions
updated notification handling in ONDashClockExtension and AlarmReceiver to use a new method for retrieving note titles to improve code clarity and maintainability
renamed ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and updated test column names in ` GoogleAuthUserConfigTable
replaced direct calls to ` commit ( ) ` with ` apply ( ) ` across multiple classes to improve performance by avoiding synchronous commits
added a new ` TestIdleListener ` class to the ` StandardSession ` constructor to ensure proper handling of idle state changes in the session management
[ beam - 8470 ] fix bigqueryio integration test
added background resource setting and reset functionality in HotseatPredictionController and BubbleTextView to ensure the icon ' s background is properly set and reset for better
mondrian : fix typo in mondrianproperties
add test for native system query .
added logic to handle cases where no active features are found in the model to improve robustness by preventing null pointer exceptions when accessing active features
added support for command - line arguments in AppleSimulatorController and InstallCommand classes to enhance flexibility in managing command - line arguments for
refactor current paragraph positioning logic in LineSelection . java to improve code readability by reducing repetitive calls to getArea ( ) to
added a check for the availability of the pipeline and manager state in ContainerBase and StandardContext classes to ensure that the pipeline and manager state are available before
added clipping to the QSB background view ' s outline to improve visual appearance of the QSB background
added performance tracking and logging for flag processing in SQLManager . java to improve performance monitoring and enhance debugging capabilities
replaced specific GL _ DEPTH _ TEST imports with a wildcard import and modified the way GL _ DEPTH _ TEST is disabled to streamline
rename libffi . context to libffi . context _ linux .
added a propagationBehavior field to JdbcAggregateAggregate transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction
[ zeppelin - 1382 ] do n ' t set regularizationBias if it do n ' t exist
added exception handling for read / write operations to improve robustness by logging errors and preventing application crashes
changed the access modifier of the ` colorStack ` array from static to instance - private to allow multiple instances of ` GlyphLayout ` to maintain separate color
changed return values from false to true in getMappedStatement and hasStatement methods to enable the mapping of statements for improved functionality
modified BTCEDepth retrieval to be case - insensitive to ensure consistent handling of currency names regardless of casing
updated the MQTT publish value assertions in ChannelStateTests . java to ensure tests reflect the correct expected values for the channel state changes
remove versionedhashes field from enginepayloadparameter ( # 4078 )
clear trigger price before save
[ # 7705 ] studentfeedbacksubmissioneditsaveaction : redirect to home page only if not error
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 18510 hbase - server should not print debug log for non - hbase client
fix : @ manyproperty ( ) and @ manyproperty2 ( ) do n ' t clear the flush queue when one of the bean be
added a new boolean variable ` _ alwaysSaveUri ` and its getter / setter methods to control the behavior of the session attribute to ensure that the session
added methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide functionality for setting the layer
updated imports and added popup menu visibility logic in LWChoicePeer . java to improve user interaction by ensuring the popup menu is visible based on accessibility
remove duplicate code in stressprofile
replaced usage of ` scala . collection . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple files to improve code clarity
fix npes in mockserverEventLog and httpforwardobjectcallbackactionhandler
log a warning if a property file can not be find
refactor session data handling in ClientMain . java to use try - with - resources for better resource management to ensure proper closure of SessionDataSet to prevent
added a check for multicast support in the network interface configuration to ensure that network interfaces are only set to up when they support multicast support
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi . org / show _ bug . c
updated CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU CPU
added a new method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class to allow customizable invalid session strategy handling to enhance session
improve error message when serialization fails
add unit test for mapassert # containskeys ( )
refactor JdbcProxyGenerator to use DelegatorGenerator for improved method delegation to enhance compatibility with JDBC 4 temporary prepared statement methods
added a ` ensure ( ServerWebSocketContainer ) ` method to the ` ServerWebSocketContainer ` class and updated the ` DirectUpgradeTest ` class
replaced ImmutableMultimap with ImmutableListMultimap for language flags in CxxFlags . java to improve performance and reduce memory usage
pdfbox - 4892 : avoid npe , a suggest by valerybokov
replaced instances of ` new MethodHook [ 0 ] ` with ` MethodHook [ 0 ] ` in ` MethodHook ` and ` Method ` classes to
added a ` grantAccess ` boolean parameter to the ` MockAuthenticationManager ` constructor to control access granting to prevent unauthorized access to enhance security
modified the afterJob method to accept a JobExecution parameter across multiple job listener implementations to enhance job execution tracking by associating the afterJob method with
updated file writing logic to check if the file can execute before proceeding to ensure that write operations are only performed on writable files
chore : update doc : add hastimeseriesquerylanguage ( # 449 )
improve handling of sampleevent in saveservice
added new constants for battery and annotation data in BundleConstants and updated CustomUrlManager to enhance data handling in custom URL processing to improve data management and
fix a classcastexception in searchexpression
gwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwt
updated method calls in JoglGraphics and modified texture and texture handling in ProjectiveTextureTest to improve texture and texture processing to enhance texture handling
updated the ` setResourceToDelegate ` method to return a ` File ` object instead of void void void void void void void void void void void void
camel - 7999 : fixed property component to support property placeholder .
updated the condition to check if the current time is greater than or equal to the last attempt attempt attempt attempt attempt attempt to attempt attempt attempt to attempt attempt
updated dbg _ zip assignment to use " / tmp / tmp / tmp / tmp / tmp / debug _ log . zip " and added a null check
add support for hide the debug feature
reset pipe ' s gate after the pipe have be destroy
refactor TestSupplementary to use Locale for locale - specific locale handling to ensure consistent locale - specific locale settings during test execution
updated team color from 0.8 to 0.4 in Team constructor to improve visual variability in team representation
replaced ` Set < MatchedStates > ` with ` Collection < MatchedStates > ` and updated logging statements for improved readability to
updated the condition to check for null or empty annotations to ensure that the method correctly handles cases where the annotation is null or empty
updated error message in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve clarity of error messages and enhance error
refactor call tree printing logic into a separate method to improve code readability and maintainability by reducing duplication
added null checks for note and noteTmp before accessing them to improve robustness and prevent potential NullPointerExceptions
added peak task tracking and updated task loading logic in AssetManager . java to improve performance by optimizing task handling and task processing
simonstewart : enable native event by default on window
added constants for score and fetch interval in Injector . java and updated scoring logic in CrawlDatum . java to enhance scoring
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections . collections4 `
added a method ` isShareSchema ( ) ` to the ` CoreContainer ` class and implemented a method ` isShareSchema ( ) ` in `
updated size calculations to use the ` true ` parameter in multiple classes to ensure accurate size reporting across different components
updated assertions in VersioningTest . java to verify that version 1.2 . a and version 1.2 . a to ensure that version 1.
updated the SQL query to include a nullable check for non - null domain columns to ensure proper handling of non - null domain columns in database metadata
[ java ] when append new leadership term event , return false .
added a method to build the media type from the ServerWebExchange to enhance media type handling for the WebClient plugin
replaced instances of ` fillUsingLengthPrefix2 ` with ` fillSlice ` across multiple files to standardize method naming and improve clarity in
refactor AcidUtils to improve transaction handling and add a new test for compaction behavior to enhance code readability and ensure proper cleanup after
updated initialization of immutable storage scheme and qualifier encoding scheme to ensure default values are set when storageScheme and qualifierEncodingScheme are null to improve robustness by
[ scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb
updated method calls to use CACHE _ SECTION _ NAME instead of " cache " to improve clarity and consistency in configuration handling
fix bug in aes - gcm - siv
add a wooden slab to the ored dictionary . close # 356
refactor multiple session factory classes to improve code organization to enhance maintainability and readability of the session management code
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from the ` UndefinedSymbolsLinkerScript ` class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14537 - fix table name conflict in denormalizedtablephysicalexcludedtableconstrainttest
updated drawing position in HelloWorld . java to correctly center the texture based on its dimensions
updated loop structure and method calls in PlayerFunctions . java and added a toString method in PlotId . java to improve code readability to enhance cl
added a deprecated version constant for Lucene 8.5 . 0 in the Version . java file to indicate that this version should no longer be used
updated print statement formatting in SSLSocketImpl . java to improve code readability and maintainability
added a new test method for parsing and deparsing SQL with signed integers to ensure correct handling of signed integers in the SQL parser
[ core ] add support for different dependency type
refactor NoSuchBuildTargetException to simplify target description creation to improve code readability and maintainability by reducing duplication
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` TestOutOfMemory . java ` to align with updated method naming conventions
reduce block . blockslist size to 256
updated logging statements in BukkitMain . java for consistency and clarity to improve readability and maintainability of the code
added handling for PostgresQuestionMark operators in SQL statement generation to ensure proper escaping of special characters in SQL statements
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and ` Mutable
added HTML escape code handling and improved error handling for file names in BuildNavAndPDFBody . java to ensure proper formatting of file names and
updated MqttBrokerConnection constructor to include a boolean parameter to provide more control over connection behavior
refactor changeSet retrieval logic to use DatabaseChangeLog for better readability to improve code maintainability and avoid potential null pointer exceptions
[ hotfix ] fix checkstyle issue in prometheus plugin ( # 3275 )
added a database drop operation in TestHiveMetaStorePartitionSpecs and implemented logging in TestObjectStore to enhance database handling and improve logging in tests to
added currency parameter to order _ currency form parameter in BithumbAuthenticated and BithumbAccountServiceRaw classes to enhance functionality by allowing users to
remove thymeleaf / thymeleaf / thymeleaf - spring5 from thymeleaf / thymeleaf
updated JsonBuildHelper and related classes to use ` getReturns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) .
updated YAML variable name from YAML _ READER to YAML and added a new REST endpoint for listing YAML data to enhance code clarity and
removed public access modifier from equals and hashCode methods to enforce encapsulation
refactor thread factory implementation to use a lambda expression instead of an anonymous inner class to improve code readability and reduce boilerplate code
added unit tests for the PersonWithAList class and created a new PersonWithAList class to ensure correct functionality and behavior of the Person
g3d - 310 : use correct width and height for applet , not center
replaced direct visibility setting with a delayed execution for the toolbar visibility to improve user experience by allowing for smoother transitions to be executed
refactor series reader logic into separate methods for better readability to improve code maintainability and reduce duplication
server : do n ' t try to save password on router vms that fail to start
added new variables ` usingOutputStream ` , ` isWriter ` , and ` isCharacterEncodingSet ` to ` Response . java ` to ensure proper initialization
added a check to return early if assignment side effects are disabled to improve performance by avoiding unnecessary execution
refactor JSON and JSONConvertor classes to improve code organization and maintainability
corrected spacing in the if statement for icon width and height validation to improve code readability and maintain consistent formatting
refactor ` RegisteredServiceProperty ` and ` JwtTokenCipherSigningPublicKeyEndpoint ` to improve code readability and streamline public key
updated import statements and added content type checks in Basic . java to ensure proper handling and validation of user MIME types on Unix systems
disable snappy compression for now
added a method ` doesClassLoaderDescendFrom ` in ` Util . java ` and removed duplicate code in ` MethodHandles . java ` to streamline
updated the ` doConnect ` method signature in ` ChannelProvider ` and ` ProxyChannelProvider ` to remove the dependency on ` NetClientImpl ` to
added a new test method for handling empty final columns in CSV header to ensure correct behavior when processing empty final columns in CSV files
added compass gravity and margins to the NearbyMapFragment to enhance layout flexibility for nearby map functionality
added a test method ` testInterpolation ` in ` GeoPathTest . java ` to validate the behavior of the ` computeDistance ` method in
added exception handling to the getLeafFilterBuilderByType method and improved error logging in ParquetFilterPredicateConverter to enhance robustness and
added a condition to set the language for video and non - video stream types to ensure the current audio track ' s language is set correctly based on the
added a warning log for incompatible microservice version in MicroserviceRegisterTask . java to inform users that the application version is incompatible with the new version
refactor array handling to use ` addAll ` method across multiple array classes to improve code readability and reduce duplication
reformatted code for better readability to improve maintainability of the code
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository for handling client registrations to improve flexibility in managing client
added a method to reset the UI state in the SchemaUpgradeHelper class to ensure that the UI state is accurately reset before further operations
added handling for pending exceptions in JUnitReporter to improve error reporting by distinguishing between strict and non - strict scenarios
add a new playerselector class to allow custom player selection
added the Closeable interface to the Selector class to ensure proper resource management and support for closing the class
updated MaxConcurrentStreamsTest to use a customizable connection pool for concurrent connections to improve performance and resource management during testing
added multiple stringType ( ) calls to CoreOptions . java to enhance type handling capabilities in the application
updated HQL query rendering to include character and parameter checks in HQL query rendering to enhance query processing accuracy and ensure compatibility with updated context configurations
updated HttpStatus constants to use constants instead of magic numbers to improve code readability and maintainability
pdfbox - 4071 : fix typo , a suggest by valerybokov
fix test failure in hikaricpcollectortest
refactor ParquetFormatPlugin to use a new method for expanding file selection to improve code clarity and maintainability by centralizing metadata
updated Jsr199Javac to ensure successful compilation and error handling during the compilation process
added a ` TableModelListener ` to the ` DefaultSortedTableModel ` class to notify listeners when the table model changes to enhance the responsiveness of
updated the condition to allow values less than or equal to 65535 to enhance server configuration flexibility by allowing more flexible range of values
added support for document provider authority in AuthenticatorActivity , AccountRemovalJob , and AccountRemovalJob to ensure compatibility with KitKat and AccountRemoval
removed logging statement from MainApp . java to streamline logging process for better performance
updated exception handling in FilterChainProxy to incorporate ThrowableAnalyzer for better exception management to enhance robustness by ensuring proper handling of wrapped
updated the calculation of ` newSize ` and modified the ` System . arraycopy ` method to use ` this . length ` instead of ` length ` to
pdfbox - 4892 : throw iae if filterlist be empty
add a new class ` ` bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt bt
updated initialization logic in PListStore . java to ensure proper state management during the initialization process
deprecate Continuation and ContinuationFilter in favor of servlet 3.0 asynccontext
[ zeppelin - 1975 ] set the current thread ' s classloader in remoteinterpreterserver
fix miss call to getentity ( ) in forgehooks
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with newer Android versions
updated variable names and method parameters in DeadlineTimerWheel . java to improve clarity and consistency in variable naming
# 161 - enh : add beandescriptor . getname ( ) for good readability
updated JavaScript and CSS resource URLs in BasePage . java and added WroSassProvider . java to improve resource handling and introduce WroSass
added a new test method ` showLatestTimeseriesTest ` to the ` IoTDBMetadataFetchIT ` class to verify the functionality of
updated configuration parameter names from " appContextLocation " to " contextConfigLocation " across multiple files to improve clarity and consistency in parameter naming
modified exception handling to check for specific exception types before throwing a new CertPathValidatorException to improve error handling clarity and ensure proper exception propagation
add ` ` write _ output _ suite _ enabled ' ' configuration option for benchmarker
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class Issue _ 815 to verify that slice size and node size are set correctly in the SortedTableMap to address issue # 8
fix smoke shield not be able to use waterproof
mahout - 185 - fixing arrayindexoutofboundsexception in sequentialaccess sparse vector .
added handling for Shulker entities in BukkitMain . java and EntitySpawnListener . java to ensure proper management of entities in plot
added a ` getDebugLogger ( ) ` method to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the debug
added checks for maximum file name length in ` IOHelper ` and ` MultiKahaDBPersistenceAdapter ` to ensure the destination name does not exceed the
added a new method ` isSeenTag ( ) ` in ` Liquibase ` and modified ` UpToTagChangeSetFilter ` to check for
use arraylist instead of linkedlist in gearpump
refactor BrokerRoutingManager class structure to improve code readability and maintainability
changed volumePaint and upPaint from Color . gray to Color . GRAY in CandlestickRenderer . java to enhance visual clarity by using
refactor InsettableFrameLayout to improve layout parameter handling to enhance code clarity and maintainability by consolidating layout parameters
added a duration parameter and updated related test cases in BuildTargetDurationListener and BuildTargetDurationListenerTest to enhance rule duration handling and improve test coverage
added assumptions to check if the database profile is enabled in multiple integration test classes to ensure tests are only executed when the required configuration is active
added a null check for the user object before processing claims in OAuthConfirmationController . java to prevent potential NullPointerExceptions when the user object is null
added unit test base on user forum issue
use nonblockingset instead of concurrentskiplistset in cassandraconnection
bug 10994 : add source network id to listpublicipaddresses api command
added functionality to manage battery optimizations in ShadowPowerManager to enable better control over battery optimization settings for specific packages
updated the Jetty version property retrieval to use ` __ buildProperties ` instead of ` jetty . version ` to ensure the application uses the
added unit tests for verification methods in NumberOfInvocationsInOrderVerifierTest . java to ensure correct handling of invocations in order verification
tregex : do n ' t call debugforceevaluation when not need
fix for npe in newprofileextensionconnection when run in foreground mode
replaced instances of ` TimeUnit ` with ` IOUtils ` for better resource management to improve code clarity and ensure proper cleanup of executor resources
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` for ` parseFieldnames `
updated log message in CodeEditorView and added null checks in EditorTextActionWindow to improve logging clarity and ensure proper handling of null values to en
updated the handling of skipped entries in ClassFileReader and JdepsTask to improve error handling by providing more detailed error messages to enhance the clarity of
added LuceneStorage functionality and updated related methods in Fetcher and FetcherMain classes to enhance document storage capabilities and improve error handling in
updated the ` populateBubble ` method to include a nullable ` BubbleBarBubble ` parameter and modified its usage in the ` populateBubble `
[ hotfix ] [ runtime ] improve exception handle in scheduledjob
refactored method signatures in MotanServiceBeanPostProcessor , TarsServiceBeanPostProcessor , and TarsRpcExt classes to
[ java ] add delay generator for nak timeouts .
updated Gson initialization and added client secret handling in ClientInformationResponseView . java to improve client information response to enhance client information retrieval and ensure proper
added a conditional check before setting the average price in HuobiAdapters . java to ensure that the order ' s field amount is set only if
removed the ` rawExecutionReports ` method and replaced it with a direct assignment of execution reports to streamline the code by eliminating an unnecessary method
added a ` fail ( Exception ) ` method to the ` LdapTimeoutTest ` class and modified the failure handling in ` LdapTimeoutTest ` to improve
fix for ticket : 16 : jphonemiser and jphonemiser do n ' t ignore file if it do n '
updated password file handling logic in AmbariServerConfigurationHandler to store alias or credential file name to ensure the correct alias is used for password expiration
added a check to skip parsing of already parsed segments in ParseSegment . java to avoid processing duplicate segments and improve performance
[ hotfix ] [ yarn ] [ yarn ] add configuration option for application attempt failure validity interval
do n ' t unload h2 driver if it ' s not present
phoenix - 1802 add readtype configuration to snapshotinputformat
added fixedHeight and fixedWidth options to instanceLoginInfo in LoginInstanceRequest . java to allow configuration of the height and width for instance login options
added corner radius parameter to update methods across multiple classes to enhance UI responsiveness by allowing rounded rectangle calculations
[ hotfix ] [ table - planner - blink ] [ table - planner - blink planner - blink ] [ table - planner -
added retry logic for database connection pooling in TxnHandler . java to handle potential exceptions related to connection pooling to improve reliability of database connections
renamed the method ` txnEnsureReserve ` to ` txnEnsureCheckReserve ` and added a new method ` txnEnsureBackupReserve ` to enhance
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to allow the assignment of string arrays to enhance the functionality by allowing
updated DELETE ROWS statements to DELEWS CLIENT SELECT and added an ExplainPlanTextTest class to improve clarity of delete operations and
do n ' t retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry
added support for additional rapid install types in AdbHelper , RealAndroidDevice , and BuckConfig classes to enhance functionality by allowing
updated the seed pattern in SortTest . java from " - srand " to " - ? \ \ s + " to ensure correct parsing of the
refactor MultimapSubject to use generics for handling iterable values to improve type safety and readability of the code
updated the method to return the correct Y - coordinate based on the device ' s natural orientation to ensure accurate vertical positioning of the launcher component
added a ` transmux ` boolean field and updated the ` ComponentListener ` constructor to accept it to control transcoding behavior based on media item
added localization support to the Picker class to enhance user experience by ensuring consistent localization of UI components
camel - 2576 : camel - cxfrs - fix camel - cxfrs - do n ' t fail when route be not find
hhh - 17712 added support for lock acquisition in postgresql dialect
updated database query execution in TestJdbcDriver2 . java and added null check for queryId in HiveStatement . java to enhance error handling and ensure
[ beam - 8470 ] [ test ] move usesunboundedpcollections test out of test scope
replaced ` preferenceHelper . getGpsLoggerFolder ( ) ` with ` Strings . getFormattedFileName ( ) ` in the ` getText ( ) `
[ java ] remove leadershiptermid from leadershiptermid in serviceadapter .
refactor HttpSender to use a private HttpExchange instance to improve code clarity and ensure consistent access to the HttpExchange instance
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and updated its implementation to
added null check for ` tree ` in ` Recipe . java ` and refactored marker handling in ` Markers . java ` to
patch from josh from bug # 54833 - make sure we do n ' t try to round
bugfix : do n ' t wrap email if it be null
added handling for null exclusions in RawMavenResolver to ensure proper creation of GroupArtifact objects based on dependency exclusions
added null checks for DSXExchangeInfo and updated currency handling in DSXAdapters and DSXBaseService to improve error handling and ensure proper
refactor multiple test classes related to blocking and validating to improve code organization and maintainability
[ drools - 90 ] avoid incremental compilation of drools - 90
updated the initialization of ` copy ` variable and added a conditional check for ` sobj ` to ensure ` sobj ` has ` sobj ` before
camel - jax - transform - jaxb : fix javadoc warning
truffle : fix compilation error in hostfielddesc
added a method parameter for " java . util . concurrent . CompletableFuture " in DefaultNullnessAnnotations . java to indicate that the completion stage is a nullable
update mFreezeCheckPoint calculation from 9000 to 10000 in PlaybackController . java to allow for a longer duration for video playback to accommodate
updated imports and removed unnecessary imports in PowerMockRunner and AbstractCommonPowerMockRunner to streamline code to improve code clarity and reduce dependencies
updated method call to use realType ( ) instead of typeCode to ensure compatibility with the actual type context
updated TabsAndIndentsVisitor to improve indentation handling for method invocations to enhance code readability and maintain consistency in indentation formatting
updated the TestSingleTokenTokenFilter class to use JUnit ' s TestCase instead of LuceneTestCase to align with the latest testing framework standards
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 55356
refactor JdbcStepExecutionDao , MapStepExecutionDao , and SimpleJobRepository to improve execution context management to enhance code clarity
added a conditional check for hidden media folders before adding the child to the root folder to ensure that hidden media folders are not included in the hierarchy
replaced unsupported operation exceptions with illegal arguments in SplitPane . java to improve error handling and prevent runtime exceptions when using null actors
added support for handling parameterized types in the RemoveUnusedImports . java file to enhance type handling for parameterized types to improve type safety and reduce
fix npe in uniquemodlistbuilder due to empty mod list
changed logger initialization from instance to static in TicketGrantingTicketImpl . java to ensure proper logging context for each class instance
updated SQL string to specify a maximum length of the timeseries attribute to comply with database constraints and improve query performance
added a method ` isValue ( String value ) ` in ` AttrData ` and updated exception handling in ` Converter ` to improve value checking logic and
updated character input handling in CPlatformResponder . java and added methods for character modifier keys in LWCToolkit . java to enhance character recognition for
[ java ] : set publication connection timeout to a configurable value .
added a check to prevent processing of specific request URIs in GTVGFilter . java to avoid processing of specific request types
added assertions in TestUtil . java to verify that the installation of APKs is successful to ensure that the APK installation is successful to enhance test
no effective change - remove oracle test
added MultiMap mocking in TestSimpleBodyHandler . java and updated enabled secure transport protocols assertions in TestVertxTLSBuilder . java to
update Java library path references in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest version of the Java library
added a boolean flag to manage dismissal of haptic running state in TaskViewTouchController to ensure proper handling of touch events during up navigation
fix world explosion cause for projectile .
added ` setHasStableIds ( true ) ` and implemented ` getItemId ( int position ) ` method in ` SymbolInputAdapter ` to ensure stable
updated the ` getBook ` method signature to use ` QueryParam ` instead of ` @ Path ` and increased ` limit _ bids ` from 10
camel - 7999 fixed the unit test error on window
[ hotfix ] [ runtime ] add tostring ( ) method for kubernetesleaderelectiondriver to display the leader latch path
refactor SqlSessionFactoryBean for improved clarity to enhance maintainability and readability of the code
[ 3.0 ] optimize tripleinvoker to not use reflectutils . isgenericcall ( ) . ( # 11349 )
change exception handling in PolygonRegionLoader to throw GdxRuntimeException instead of using Gdx . app . error to improve clarity and specificity of error
added a static method to check if the Deadline is started and registered a timer in RawStoreProxy to ensure proper handling of the Deadline object and
added handling for closed channel exceptions in NettyRequestExecutor to improve error reporting for closed channels to provide clearer feedback on connection issues related to closed channels
updated text handling for genres in ItemListActivity to ensure text only displays when genres are present
[ flink - 30613 ] [ checkpoint ] fix race condition in checkpointcoordinator . reset
feat : add support for mappedcontainers in prefab
[ hotfix ] [ checkpointing ] [ checkpointing ] fix npe in walnode . getCURRENTwalnode . getCURRENTwal
added a test for handling callback failures in HttpClient to ensure proper behavior when a callback fails on callback failures
fix checkstyle issue with package - info . java .
added a new test class SQLServerEscapeQuestionCharacterTest for handling SQL Server escape characters to ensure proper handling of SQL Server escape characters in queries
added @ NonNull annotations to constructor parameters in CamelModule to improve null safety and prevent potential NullPointerExceptions
replaced manual synchronization with a while loop to improve readability and simplify the code
updated package structure and import paths for ParameterFlags to reflect the correct provider to ensure proper organization and access to the correct provider functionality
refactor ` finishViewSetup ` method to accept both ` CropperView ` and ` BitmapRectDecoder ` objects in ` CropperUtils
removed the ` appName ` parameter from the ` configure ` method in ` InputRC ` to simplify the method signature by eliminating unnecessary parameters
[ gr - 19808 ] add test for ignore dependency in install / uninstall command
use -- headless = chrome instead of -- headless = true for test
replaced direct value assignment with interned version of value to improve memory efficiency by reusing string representation of the value
added " MOVE " status check to the condition in mmm Connection . java to ensure proper handling of MOVE status in database operations
updated the US _ MONTH _ DAY _ YEAR2 _ TIME format in FixedDateFormat . java to ensure correct parsing and formatting of month names
updated import statements for Lists from a shaded shaded shaded shaded sh shaded sh shaded sh shaded sh shaded sh shaded
[ hotfix ] [ table - common ] [ table - common ] fix race condition in hs backend
updated permission checks in the visit instruction instruction instruction instruction instruction instruction instruction instruction instruction instruction instruction instruction instruction instruction instruction instruction instruction .
do n ' t attempt to register jabber provider if it ' s already registered
updated validation conditions in BasicURLNormalizer and added a new test method in TestBasicURLNormalizer to enhance URL normalization to ensure proper handling of special characters
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a check for zero clock rate equality in the EncodingConfiguration class to ensure that zero clock rates are handled correctly
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` , ` SeparatedProjectsGenerator ` , and ` ProjectCommand `
simplified calendar ID handling in HostLocaleProviderAdapterImpl . java to improve code readability and prevent potential index out of bounds errors
added a new file ` MSwingUtilities . java ` that utilizes ` MSwingUtilities ` for image scaling and error handling to provide a
camel - 7486 : camel - 7486 : camel - mail should support async async async async async async async async part of camel - 7486
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable dynamic configuration updates based on user preferences
added unit test base on user forum issue
added Main . java and ScriptRenderer . java files to implement script rendering functionality to facilitate the integration of the scripting engine within the
added a condition to check if the input state is __ NONE in MimeTypes . FORM _ ENCODED and created a new test for query
added checks for non - empty glyphs and improved touch focus handling in multiple classes to enhance input handling robustness and ensure proper focus management
replaced ` reportFailure ` with ` runCloseHooks ` in ` DeploymentManager . java ` and added a new test in ` DeploymentTest . java `
fix a bug in lexiconrecipemappings . tostring ( ) that cause a crash .
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to allow more time for operations to complete successfully
updated import statements in LoucHandler . java to simplify the import statements and added a check for non - blank blank blank blank blank blank blank blank
use class . getclassloader ( ) . getresource ( xmlpath ) instead of class . geturl ( )
added a new utility class FieldUtils with methods for accessing field access and manipulation to enhance functionality by providing utility methods for field access and
simplified the condition in DeferredAttr . java and added a new class DoubleStaticImport . java to demonstrate handling of static imports to improve code cl
changed the layout inflation from workspace _ custom _ content to workspace _ screen in the workspace layout to use workspace _ screen instead of workspace _ custom
added ` updateSettingsWithSaveLastAccount ` method to ` XabberAccountManager ` and updated its usage in ` AccountAddFragment `
added a method ` setvar ` to ` CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine
fix forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge forge
improve error message for invalid unsigned range
pdfbox - 3017 : add a test to verify that the bug be fix
set the application mode for the application to ensure the application uses the correct mode settings
added methods to manage build arguments and Docker file paths in ImageFromDockerfile . java and created DockerfileBuildTest . java to enhance
added a null check for threadInfos [ threadId ] before assigning threadInfos [ threadId ] to prevent potential NullPointerExceptions to ensure threadInfos [
updated condition to use a constant for better readability to improve code maintainability by avoiding magic numbers
[ hotfix ] [ checkpointing ] add additional debug information when cancel a checkpoint
added new table types in Schema . java to support additional table types for database schema definitions in the schema schema to enhance the schema configuration options for database
added minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum classes to allow customizable similarity values for fuzzy queries
rename addActionsView ( ) to setActionsView ( ) to improve method naming consistency
move immediateflush property to the enclosing appender so that subclass can customize it
added additional auto - configuration classes for the Zipkin auto configuration to enhance auto configuration options for the auto configuration
added null check for component before removing it from JLayer and created a new test case for bug 6875716 to ensure proper handling of null components to
updated imports from ` avro . shaded ` to ` com . google . common . base . Function ` in multiple Java files to ensure compatibility with
refactored block processing and unwind block handling in BciBlockMapping and GraphBuilderPhase classes to improve code clarity and maintainability by
added a null check for the icon before applying mask mask to avoid potential NullPointerExceptions when the icon is null
replaced ` intToFourBytes ` method with ` Ints . toByteArray ` for byte array conversion to simplify code and improve readability by
added a null check for mObserver before calling isSupport to prevent potential NullPointerException when mObserver is null
updated the Comparator type in Comparator . java and added a new Department class with corresponding test cases in TypeTest . java to improve type safety and ensure
refactor DocIdSet class to improve code readability and maintainability
[ te ] user rule : set end date of anomaly to current time ( # 4581 )
added exception handling for NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is thrown when parsing errors
added a class loader to the MockFactory class to ensure proper class loading in the mocking process
added a new ` OriginalFormat ` class to ` ConverterWithEnumFormat ` that overrides the ` format ` method in ` ConverterWithEnumEnumFormat `
replaced hardcoded year format with a constant pattern to improve code maintainability and readability by using a defined constant
pdfbox - 4892 : fix typo find by codespell on fossies . org
camel - 1481 - aws2 - lambda : enable autowire on the aws lambda component , regen test for aws lambda component
cloudstack - 9893 : add mac address validation and replacement for vms with empty or null
added a check for " Authorization " header in ProxyServlet to ensure proper handling of authorization header values during authentication
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to improve method execution consistency
added ` getDetails ( ) ` and ` setDetails ( ) ` methods to ` AbstractAuthenticationToken ` , ` UsernamePasswordAuthenticationToken ` , and
updated the initialization of ` randUsePoints ` to use a random value of ` randomInt ( 5 ) ` to ensure that ` randUsePoints `
bugfix : use ` ` end sentence ' ' instead of ` ` append dot ' '
updated TimeFormat to use Locale . US for formatting durations to ensure consistent behavior across different locales when formatting durations
updated import statements in GroovyParserVisitor . java and GroovyPrinter . java to simplify argument handling to enhance code readability and maintainability
added logic to adjust bottom and left insets for bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom bottom
refactor GestureState initialization to use a constant for default state to improve code readability and maintainability by avoiding repetitive object creation
replaced Joda - Time library with Java ' s Instant and DateTimeFormatter for improved date handling to enhance compatibility with modern date - time
update openblas . java and openblas _ nolapack . java files to improve functionality to enhance performance and compatibility with recent library versions
TorrentsStorage to use try - with - resources instead of IOUtils to ensure proper resource management and avoid potential resource leaks
added synchronized keyword to the initTxnMgr method to ensure thread safety when accessing the HiveTxnManager instance
updated wait time in ` AbstractDistribZkTestBase ` and ` AbstractFullDistribZkTestBase ` from ` AbstractDistribZkTestBase ` to `
added a new class SearchResults to manage search results to provide a structured way to handle search results in the application
added null check for threadsCPU before creating ThreadsCPUView to prevent potential NullPointerException when threadsCPU is null
initialized the primitives array in BytecodeNode . java to ensure that the ' primitives ' array is properly initialized before use it to prevent potential null pointer exceptions
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " and " 8.10 . 0
updated ENABLE _ TWOLINE _ ALLAPAPPS feature flag from DISABLED to TEAMFOOD to enable team team team team team team team team
added a new endpoint to retrieve tenant pools for an instance to enhance functionality by allowing tenant pools for the current instance
refactor TopFieldCollector and TestTopFieldCollectorEarlyTermination to simplify early termination logic to improve code readability and maintainability by consolid
added a ` isToString ( ) ` parameter to the method in ` InlineBytecodeGenerator ` and a new test for mock interfaces in ` InlineByte
added logging statements to CxxCompileStep and CxxPreprocessStep to improve debugging and monitoring of compilation and preprocessing processes
[ api ] add method to remove character from string ( # 2894 )
[ 3.0 ] fix the issue that metadata service protocol be not correctly set ( # 10050 )
[ drools - 7 ] add datatransformer interface ( # 22 )
changed the type of ` values ` from ` Object [ ] ` to ` Collection < Number [ ] ` in the ` DistributionGraph ` class to ensure
simplified conditional logic in FormatStringChecker . java by removing unnecessary checks for variable arguments to improve code readability and maintainability
removed unnecessary whitespace in ElectionContext . java to improve code readability and maintainability
refactor ITestDbTxnManager class to improve code readability and maintainability
refactor database connection handling to use try - with - resources for better resource management
added tests for MapModel functionality in CodeFirstPojoClient and CodeFirstPojo classes to ensure correct mapping and retrieval of user - defined
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated selection handling in ScaleDialog . java to improve null safety and ensure that scaleOffsets is set to null when selection is null
fix nullpointerexception in itemampbelt .
pdfbox - 3017 : avoid exception when no appearance stream can be create
replace TreeSet with LinkedHashSet for keys to maintain insertion order of elements
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 , modified the TIME _ BETWEEN _ TOUCH _ AND
updated preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " to ensure compatibility with the latest libraries
added a check for agent support before setting all constructors to public in MainMockTransformer and created new classes MockStaticWithPrivateCtor and StaticWithPrivateCtor
pdfbox - 4892 , pdfbox - 4892 , pdfbox - 4892 , pdfbox - 4892 , pdfbox
improve window title for jmeter
updated depth calculation in XRSurfaceData to differentiate between 32 - bit and 32 - bit pixel pixel pixel pixel pixel pixel pixel pixel pixel pixel pixel
added error handling for unsuccessful responses in OkHttpDataSource to improve error reporting for failed responses
added a static exit method to TopLogging and refactored its usage in TopThreadGroup to improve error handling and simplify the exit process
updated the logic for determining the start index in NativeRegExp to ensure the correct starting index is used based on the regex ' s global state to improve accuracy
ignore test until planner - 468 be resolve
[ hotfix ] [ runtime ] fix indexoutofboundsexception in defaultallocator
added a method to delete entries without feeds in DatabaseCleaner . java and implemented a method to delete entries without feeds in FeedEntryDAO . java to
changed the return type of the appendToLabel method from void to AtomicCounter to allow method chaining for better usability
[ java ] replace busy spin idle strategy with noop idle strategy .
added handling for non - modified HTTP status codes in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure proper header management for 304 responses to
replaced SpliceInstrumentListener and SplicedNode methods with ToolEvalNode and ToolEvalNode in InstrumentationPartialEvaluationTest . java to
added a method to paint the tab area in SynthTabbedPaneUI to ensure proper rendering of the tab area in the tabbed pane UI
refactor ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional argument for better flexibility
( chore ) camel - ftp : fix file / ftp path normalization
added a new ` build ` method to ` JavaProvenance ` and updated ` MavenProjectParser ` to utilize it to enhance
added logging for registered and non - deterministic Hive UDFs in HiveFunctionRegistry . java and implemented a test for random values in TestIn
reduced loop iterations from 100 to 200 in CloudStateUpdateTest . java to optimize performance and reduce execution time
handle unknown cell family more gracefully
updated error handling to check if the output file can be writable before proceeding to ensure that the error message is displayed when the output file is writable to
added package information retrieval in LauncherModel . java to check if the component is enabled or not to prevent crashes due to missing package information
bug cs - 16425 : fix for cloudstack - 16425 : do n ' t try to upgrade the database
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test for non - skippable exceptions to
replace ` startsWith ` with ` regionMatches ` and ` regionMatches ` methods in ` LineReaderImpl . java ` to improve string matching logic to
added imports for SourcesFileErrors and SourcesFileErrors , and modified the return statement to include global data tables to improve data table handling to enhance functionality
added import for Overview and modified task dismissal logic in TaplTestsTaskbar . java to ensure all tasks are dismissed when the overview
cloudstack - 41500 : add dbupgradechecker interface to handle db upgrade
removed unnecessary null checks for the connection variable to simplify the code logic and improve readability
refactor sequence action logic in SequenceAction . java to improve readability and maintainability of the code to enhance code clarity by reducing rep
fix npe in cassandraserver . set _ keyspace ( )
added a check to skip synthetic fields in ReflectUtils to improve performance by avoiding unnecessary processing for synthetic fields
added LoggerProvider class and integrated it into ApplicationController to enable logging functionality within the application context
updated ServerStatusCommand to use ImmutableMap < String , Object > instead of String to improve type safety and clarity in port handling
added a deprecation warning warning for the Spring context configuration to inform users about multiple configuration issues related to the spring context
added a method ` deepStart ` to the ` Startables ` class to facilitate the creation of ` Startables ` instances with a streamlined
remove deprecate method in shape . reserveprimitiveextensionarray ( )
fix the laser table not work properly .
refactor the condition for identifying reserved words in AbstractJdbcDatabase to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to improve code clarity and reduce unnecessary dependencies
fix memorylimittest failure
removed null checks for ` p ` and ` handlerName ` in ` RequestHandlers . java ` to simplify the conditionals to enhance code readability
added a trailing slash to the servlet name to ensure the servlet name is formatted correctly for proper logging output
updated Python environment variable handling to use a constant for the PYTHONPATH constant to improve code readability and maintainability by avoiding hardcoded strings
updated audio handling logic in DirectAudioDevice and Toolkit classes to improve error handling and ensure valid frame sizes are used to enhance robustness
added null check for enums in ElasticSearchStringLookupService to avoid potential NullPointerException when processing enums
improve error message for unexpected end of segment
added a policy assignment to the WebSocketSession class to ensure the WebSocket session uses the correct policy configuration
updated static field initialization logic in Java2TypeScriptTranslator to simplify static field handling to improve clarity and ensure correct initialization of static fields
updated UserService to accept a configurable web root parameter to enhance flexibility by allowing the web root to be specified
( chore ) camel - test - infra - junit : migrate test to junit5
[ netbeans - 5874 ] remove workaround for npe .
replaced calls to ` printHeaderObject ` with ` createHeader ` in multiple formatter classes to standardize header creation logic across formatter classes
replaced individual imports with a wildcard import and added a placeholder method for placing stop orders in VircurexTradeService to streamline import statements and
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer state is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is null
updated conditional checks for ` decExp ` in ` FloatingDecimal . java ` and added a new class ` toString ` in ` ToString . java ` to
updated type checking in PropertyDescriptor and added a new test class Test7189112 to ensure proper type handling and validate property setter functionality
removed the maxVersion parameter from the getVersions method call to streamline the method call to simplify the version retrieval process by eliminating unnecessary parameters
update nettyrequestfactory to use http instead of http
updated task animations in RecentsView and TaskView to utilize alpha transparency and translation logic to enhance user experience by providing smo
improved error messages for illegal field types and updated method calls in ORCRecordReader . java to enhance clarity and provide more
added new sample for clearing HLS video resources in DemoUtil . java to enhance video playback options for better media playback
removed unused imports related to HIBERNATE _ ENTITY _ MANAGER _ INTERFACE and HIBERNATE _ JPA
hbase - 17834 addendum fix log message for execrpcinvoker and WritableRpcEngine
added diagnostic handling and logging functionality in TestSpecificCompiler . java to improve error handling and provide better diagnostics during compilation
added session closure logic in WebSocketEndpoint and implemented session management in WebSocketIT to ensure proper session closure when a user is authenticated
update dao state monitoring service to be more generic
ww - 3060 update struts . properties file to match new struts . properties file
added conditional logic to stop the stream if it is not already stopped to ensure proper handling of video tracks before stopping the stream
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse ` and added
updated import statements in GQLExamples . java to replace InputStream and ListFeatureCollection with ByteArrayOutputStream and ListFeatureBuilder for improved data handling to enhance
updated method call from ` s . substream ( 200 ) ` to ` s . skip ( 200 ) ` in ` TargetType58 . java ` to
hhh - 10956 - fix identifier generation for composite identifier
rename findfulltextaction to downloadfulltextaction , not findfulltextaction
refactor URI registration logic to handle URI lists and update related services to improve registration process and ensure proper handling of URI
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code readability and maintainability
added a null check for the ` osdbHash ` in the ` getInfoFromOSDBHash ` method and improved logging logging for non -
added token transfer functionality and validation in RuntimeImpl and MUtil classes to enhance contract processing capabilities and ensure proper token validation
camel - 17810 : camel - ftp - ftp : camel - ftp - use current directory for file deletion in camel - ftp
fixed typo find by codespell on fossies . org
added validation for ` joinResult ` in ` MapJoinOperator ` and updated related conditions in ` HybridHashTableContainer ` to ensure that a
updated the ` HTTPSPDYAsyncEndPoint ` constructor to include an ` endPoint ` parameter and added its getter / setter methods to enhance
added ` tweetId ` to the intent ` intent ` in multiple ` TimeLineCursorAdapter ` , ` TimelineArrayAdapter ` , ` TimelineArrayAdapter
refactor disconnect logic in HttpURLConnection to use a new method for disconnecting the web connection to improve clarity and maintainability to enhance code read
replaced ` int ` with ` AtomicInteger ` for ` _ numChildren ` in ` TraceContext ` to enhance thread safety when accessing ` _ children
[ waf ] fix checkstyle issue ( # 940 )
updated the test annotation in ValueTypeTests . java to disable the test to prevent the test from running during the current development environment
jbrules - 2835 : move resourcechangenotifier implementation to kie - api
update predicate types in ByteNotInPredicate , CharNotInPredicate , DoubleNotInPredicate , FloatNotInPredicate , IntNotInPredicate , and LongNotInPredicate
replaced AccountUtils . AccountNotFoundException with a more general Exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to simplify error handling and
added a null check for witnessService before validating witness permission to prevent potential NullPointerException when witnessService is not initialized
refactor the construction of the tagged column string in JoinDesc . java to improve readability and maintainability of the code
added a check to ensure the Javadoc is present before setting the Java documentation to avoid null pointer exceptions
rename holderMethod to holderMetadata and update related references in CompiledICHolder . java and added a new RedefineInterfaceCall . java file to
replaced ` revalidate ( ) ` with ` revalidateWithAnimationSafety ( ) ` in ` tabs . tabs . tabs . tabs . tabs . tabs
[ hotfix ] [ connector / kafka ] return unregistered metric group instead of unsupported metric group
updated the calculation of the x and y variables in the Polygon class to ensure the correct positioning of the polygon elements
updated cache creation method to include a configuration parameter to enhance flexibility in cache configuration management
added a check for string length in the InheritanceUnsafeGetResource method and created a new test class Bug2974855 to ensure proper handling of string
refactor ShadowCookieManager for improved performance to enhance cookie management efficiency
added storage - based authorization checks for dropping external tables in Hive configuration to ensure that external tables do not interfere with storage - based authorization
added braces for better readability to improve code clarity and maintainability
[ gr - 27909 ] add platform - specific byte order to sulong .
updated the PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout "
modified the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and updated the login web view initialization logic to enhance flexibility in
corrected a typo in the exception message in CallableStatementHandler . java to ensure accurate error reporting for JDBC Type requirements
updated request parameter from ' after ' to ' after ' in AuditEventsMvcEndpoint . java and added validation in AuditEventsMvcEndpointTests . java to
rename exponentialtimer toPrecisethroughputtimer
fix memory leak in softbodytest
[ hotfix ] [ table - planner - blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink
[ zeppelin - 2087 ] update log message to be more informative
add unit test for jingle namespace .
fix nullpointerexception when redplasma be null
added support for x - http2 header in response
updated conditional checks to use ` getTrusted ( ) ` and ` getDenied ( ) ` instead of ` getMembers ( ) ` and ` removeMembers
updated delimiter values and formatting in SimpleReport . java for improved readability to enhance clarity and maintainability of the code
added a new class ` T6863746 ` and modified ` JavapTask ` and ` JavapTask ` to handle symbol file handling
rename TickerDemo class to StreamingTickerDemo and update its references to improve clarity and consistency in naming conventions
refactor exception handling in the switch statement to improve error handling clarity and provide more informative exception messages
only create 3d input if not applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw parserexception , return false instead
added @ Override annotation to the getRepositoryFactoryClassName method to ensure proper method overriding and improve code clarity
changed the return type of ` getExecutableCommand ` from ` String ` to ` List < String > ` across multiple classes to enhance the
updated references to IOSGLES20 class to improve code clarity and maintain consistency in accessing instance variables
deleted the UploadPathActivity class and its associated functionality to remove unused code to streamline the codebase
updated return statements in SimpleTextFieldsReader to handle both DOCS _ ONLY and totalTermFreq based on index options to improve accuracy in term frequency calculations
fix ( noclasspath ) : fix implicit constructor in ctclass
added a Database parameter to the ` populateValidateValidateNullableIfNeeded ` and ` populateValidateUnique ` methods in ` ColumnSnapshotGenerator ` and ` populateValidate
refactor Database class to improve code readability and maintainability
refactor SpringApplicationBuilder to improve code organization to enhance maintainability and readability of the application configuration
updated variable names in DefaultIndexingChain and PointInSetQuery for consistency to improve code clarity and maintainability
remove unneeded mapping for schematic name to schematic
added checks for non - modifiable collections in AbstractCollectionAssert to enhance functionality to prevent unmodifiable collections from being accessed
changed the visibility of the Option enum from static to non - static to allow access to the Option enum from other classes
updated Compose and ComposeActivity to conditionally show a confirmation dialog based on the character remaining text to enhance user experience by preventing
replaced the ` toggleKeepInSync ( ) ` method with ` toggleKeepInSync ( ) ` in ` FileDetailFragment . java ` and removed
replaced DatatypeConverter with Base64 . getMimeDecoder in ImageUtil . java and added a new test class ImageUtilTest . java to
added ` ControllerCounter ` and ` DBCallback ` classes to manage database operations to provide a structured way to handle database operations within the application
added the ` final ` keyword to the ` ticketId ` parameter in the ` deleteTicket ` method to ensure that the ticketId parameter is not modified
added a new file FlywayMigrationRunner . java that uses ClassPathXmlApplicationContext for managing Spring application context to facilitate migration of Spring
replaced instances of ` isEmpty ( ) ` with ` size = = 0 ` in ` HashMap . java ` and added a new class ` Not
update version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest version release
added nullability annotations and a null check for modifiers in CompressionCodec methods to improve code safety and prevent potential NullPointerExceptions
added null checks for the main class attribute in LauncherHelper . java and modified jar creation logic in Arrrghs . java to ensure robust
updated class names for consistency in formatting to improve code readability and maintainability
[ gr - 10674 ] fix compilation graph size for graal compilation .
[ bug - 662322 ] [ bug - 66232 ] [ bug - 66232 ] cellcopypolicy should n ' t clone
added a method to reset the icon load result in FloatingIconView to improve code maintainability by centralizing icon loading logic
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure correct
added orientation handling for landscape orientation in IconRecentsView to improve layout responsiveness in landscape mode
deleted the AddAdapter . java file to remove unused adapter class to streamline the codebase
fix array index issue with constructor
added a boolean parameter ` processSortCols ` to the constructor of ` OpTraitsRulesProcFactory ` to control the processing of sort columns during
refactor TestLogWatcher to improve error handling and message validation to enhance clarity and reliability of the log watcher registration process
added a print statement to Java2TypeScriptTranslator . java to enhance output formatting for better readability to improve the readability of the code
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest version of the
added conditional check for the SPRING _ AOP PROXY _ TARGET _ CLASS property in TraceEnvironmentPostProcessor to ensure that the proxy target class is
removed the singletonLock boolean from TypeCachingBytecodeGenerator to simplify the code by eliminating unnecessary locking mechanism
update documentation for callbackaction
updated the ` writeFile ` method to include an ` append ` parameter for better control over file writing to enhance flexibility in file writing
updated MavenExecutionContextView and MavenRepositoryMirror to improve mirror handling logic and added unit tests for Maven repository mirror functionality to enhance
added a ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer ` classes
updated OAuth callback logic to use match instead of equals for service redirect URI matching to improve accuracy in service client handling
refactor Annotation array handling to use AnnotationParser for consistency across multiple classes to improve code maintainability and reduce redundancy
replaced ` getBadgedDrawable ` and ` getBadgedLabel ` methods with ` getBadgedIcon ` and ` getBadgedIcon ` methods
updated default line separator in GlobalConfiguration to ensure consistent output formatting across different operating systems
fix mahout - 205
add input sanitization to the basecontroller
chore : update java and python dependency ( # 139 )
modified the ` buildFileNamesBeDifferentCrossCell ` method to include exception handling to ensure expected output correctly reflects the expected outcomes of the inter -
refactor CountersReader class to improve code readability and maintainability
refactor methods in AllAppsRecyclerView , UserEventDispatcher , and DeepShortcutsContainer to simplify code and improve clarity to enhance maintainability and
hbase - 26409 add deprecation for hbase . ipc . server . allocator . max . buffer . count and hbase .
[ native ] [ test ] update native test for window .
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types based on the presence of real and non - generic information to improve
refactor TestFSTs class to improve code readability and maintainability
ggb - 197 : fix for line width problem in latex
hbase - 16413 increase upper bound region size for small region ( addendum )
updated the model loading process in LauncherClings . java to ensure the model is loaded before starting a new page to improve user experience by ensuring the
removed unused lists and initialized lists for keys and updates in ManagedSelector . java to streamline the code to improve code clarity and ensured proper initialization
added support for exclude datasources in SpringDataSourceBeanPostProcessor to enhance flexibility by allowing specific datasource configurations
added undo / redo functionality to TableValuesView and TableValuesPanel to improve user experience by retaining undo / redo actions during deletion
refactor KinesisClient creation to use a dedicated method for creating instances to improve code readability and maintainability by centralizing client configuration logic
[ elbus ] fix a bug in the elbus sensor handler
updated test cases in LocalCacheSelectorCode , BoundedLocalCache , BoundedLocalCache , and BoundedLocalCacheTest to disable tests due to
added a test for illegal database names in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure proper database
add miss call to reset new file
updated margin handling in DeviceProfile to support both horizontal and vertical grid dimensions to improve layout responsiveness based on device orientation
reformatted code for improved readability to enhance maintainability and clarity of the CharTokenizer class
chore : update gapic - generator - java version to 2.1 . 0 ( # 6022 )
bug 7999 : correct xenserver network label for xenserver
updated libGDX version from 1.5 . 5 to 1.5 . 6 in DependencyBank . java to ensure compatibility with the latest features and
removed the ` getMetricNames ( ) ` method from ` SolrCore ` class to streamline the code by eliminating unused functionality
replaced ` URI ` with ` Path ` for handling resource paths in ` MavenManifestFactory ` to improve compatibility with modern Java file system operations
replaced direct calls to ` System . getProperty ` with a static final boolean variable ` IS _ MAC ` to improve code readability and maintainability
[ hotfix ] [ doc ] fix typo in jdbcaggregationrepository
added two new slotList elements to the slotList to ensure the slotList reflects the current state of other components
set m _ predCount to - 1 in PredicatedNodeTest . java to initialize the predicate count to indicate an uninitialized state
added a mergeProperties method to merge configuration properties in ConfigurationSpringInitializer to enhance configuration management by merging configuration properties to improve configuration handling
updated the method signature of ` setupLogging ` to accept a ` org . slf4j . logger ` instead of a specific ` Logger ` to
replace HashMap with LinkedHashMap for aliasToWork in multiple Java files to ensure predictable iteration order of the aliases
added logic to retrieve JDBC handlers from the type hierarchy to ensure proper handling of type handlers in type hierarchy to improve the robustness of type handling by
added debug logging statements to multiple item writer classes to improve traceability of write operations
updated the way the language range is parsed by removing trailing semicolons from the language range to ensure correct parsing of the language range from the input string
updated Http2ServerResponseImpl and VertxHttp2Handler to execute the closeHandler using a handler context to ensure proper handling of the close handler in a
bug 57840 : move xssftable cache from xssfworkbook to xssfevaluationworkbook where staleness be less likely to cause problem for
updated schema text level from VERBOSE to BASIC and simplified conditional checks to enhance clarity and improve code readability
updated MongoNamespaceReplicaSetTests to use MongoClientFactoryBean and MongoClientFactoryBean instead of MongoFactoryBean to improve compatibility with Spring framework and enhance
replaced HashSet with LinkedHashSet for roots and leaves to maintain insertion order in the collections
updated the cloning logic for table scan operators in SkewJoinOptimizer . java to ensure the operator tree is properly cloned before proceeding with operations to
added a null check for the client before processing the registration token in DynamicRegistrationClientConfigurationService . java and updated JsonFileRegisteredClientService .
added a clear ( ) method to the StatList class to ensure the AchievementList instance is reset before further operations
initialize variables and initialize variables in MutableDatabaseInfo and MutableJdbcDriverInfo classes to ensure default values are set to avoid null pointer exceptions and prevent null pointer
updated the parameter name from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in the ` QuickSharingPermissions
added support for reading long buffers in ByteBuffersDataInput to enhance data handling for large long arrays
updated timestamp and time precision handling in UnixFileAttributes . java to improve clarity and consistency in file time conversion logic to enhance code readability and ensure
added a new file ` TestNoE eagerReclaimOfHumongousRegions . java ` that implements a garbage collection test for humongous
added conditional logic to hide the search bar in the AllAppsContainerView based on user preferences to control the visibility of the search bar to improve user experience
[ hotfix ] [ runtime ] fix typo in envrouterfeature
added a null check for cur and next in LineChartRenderer to prevent potential NullPointerExceptions during rendering
added a new action for reloading the current page in the menu to enhance user experience by allowing users to reload the current page in the application
updated log level from info to warn for non - existent entries in SQLManager to provide a less severe logging level for non - existent entries
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest security
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to avoid runtime errors
use serviceloader to load extension point at startup
added a closeTable ( ) method in HiveHBaseTableInputFormat to ensure proper resource management to prevent potential memory leaks by ensuring the table is closed
added a method to stop the statement executor in JdbcConnector and enhanced logging in HiveViewImpl to improve resource management and enhance debugging capabilities
updated XML document feature settings and replaced ` Collections . EMPTY _ MAP ` with ` HashMap ` in multiple Java files to enhance type safety and
updated JdbStopThreadidTest to use OutputAnalyzer for exit handling to improve clarity and ensure correct exit behavior in test cases
added a ` getType ` method to ` ShadowContentResolver ` and a corresponding test in ` ContentResolverTest ` to ` ContentResolverTest ` to handle
updated future removal logic in ExpressionThreadPoolManager to improve clarity and correctness in future management
updated the property key for the HTTP port from " port " to " vertx . httpPort " in HttpTestBase . java to ensure consistency with the
replaced ` addCaptureListener ( ) ` with ` addListener ( ) ` in ` buttonTable . addCaptureListener ( ) ` to streamline listener
updated the default batch size from 10 to 3 in NewSessionQueueOptions . java to optimize resource usage based on available processors
added error handling for establishing Resource Manager connection in TaskExecutor to improve robustness by logging errors during task execution
initialized ` classFile ` to ` null ` and modified exception handling in ` LambdaRewriter ` to handle ` CannotLoadClassException ` to improve error handling
updated exception message in ProgressBar to include the minimum and maximum values to improve clarity of error messages for better debugging
updated the onMessage method signatures across multiple classes to include an owner parameter for telegram handling to enhance flexibility in handling telegram messages
added a new interface ` Cursor ` and ` Database ` for managing database operations to provide a structured way to handle database operations within the application
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of assertion logic
# 163 - enh : add setbeanid ( ) and getbeanid ( ) to enh : getbeanid ( )
updated the transformation method in RuleSetToDocs . java to use getAddToSiteDescriptorXSL instead of a hardcoded string to enhance flexibility by
added a list of request matchers in HttpSecurity to ensure consistent handling of request matchers in the request matching process
added hashCode and equals methods to ContactResource class to ensure proper comparison and hash code generation for instances of ContactResource objects
move request and response from abstract ajp processor to abstract ajp processor
updated logging messages and improved error handling in FileManager . java to enhance clarity of log output and provide more informative error reporting
added a tearDown method to the TestIndexSearcher class to ensure proper cleanup and state management during tests
added imports for LambdasWithInterfaces and LambdasWithInterfaces , and modified multiple test assertions in SyntaxTests . java to enhance
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
remove parserdecorator . getsupporttypes ( ) from parserdecorator
add check for call class in fmlsecuritymanager to make sure we do n ' t try to call a mod ' s mod that do n '
reformatted code to improve readability and maintainability of the code
updated parameter from " swap " to " rename " in TestCoreAdminApis . java and modified the rename method in CoreApiMapping . java to
added a new test method ` testJsxComment ` in ` JsLexerJsxTest ` and modified parsing logic in ` Parser ` to
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording for testing purposes
added tests to handle cases where Buck configuration is missing and updated error handling in BuildEndToEndTest and CxxEndToEndTest to improve
added memory management checks in TestStringBufferAndBuilderGrowth . java to verify that the physical memory size is sufficient to run the test
deprecate conversionservice in favor of conversionservice
added a success flag to the HiveMetaStoreClient to ensure the operation completes successfully
updated condition in ResourceReferenceInfo . java and changed the parameter in BundleBundleFactoryTest . java to use String . equals ( ) instead of equals (
updated tweet validation to include " amp . twimg . com " in addition to " vine . co / v " to enhance image
mark AreaReference class as deprecated to indicate that the class should no longer be used
refactor methods in ElementType and Target classes to improve code readability and maintainability
added assertions for refKind and refKind in MemberName . java to improve error handling and debugging information during method reference handling
updated the default value of __ submitKeyUpdates from false to true and added synchronization around the runChange method to ensure thread safety during execution
added a conditional check for MouseEvent in EditNodeTextField . java to ensure proper handling of mouse events in the event processing logic
camel - 662 : added support for bean static method to bean expression
updated multiple Java files related to benchmarking and decoding to improve code organization to enhance maintainability and readability of the codebase
reformatted exception handling in AgentRunnerTest . java to improve code readability and maintainability
added ` getDescription ( ) ` methods for various classes and updated descriptions in the pom . xml files to enhance clarity and consistency in
do n ' t load object with no normal
refactor ProcessEngine class to improve code readability and maintainability
rename reentrantlock to lock to avoid confusion
added ` mavenPackaging ` parameter to ` getBomReference ` and ` bomReference ` methods in ` PrintMavenAs
updated the back ( ) method to include the component of the event to ensure the correct component is returned in the UI response
http : / / issues . apache . org / jira / browse / amazonecraft / browse / amazonecraft / browse /
removed the ` @ Nullable ` annotation from the ` actual ` and ` that ` method signatures in ` ObjectArraySubject ` and ` that ` methods to
replaced references to ` NutchConf ` with ` getConf ` in multiple files to improve code clarity and consistency in accessing configuration values
replaced ` removeBoardsPane ( ) ` with ` deselected ( ) ` in ` SheetAssembly . java ` and refactored the assembly selection
danielwagnerhall : add getsessionid ( ) method to the remotewebdriver .
add null checks for time intervals before setting them for nodes and edges to ensure that time intervals are not overwritten unintentionally
removed the " - logLevel INFO - serverPort " command from the MockServerContainer configuration to simplify the configuration for the server port assignment
updated error logging to include the exception message to improve error reporting for better debugging
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in the ` DispositionProcessor ` class to utilize ` CrawlMetadata
ignore test for now
( chore ) camel - test - infra - spring - boot : fix the test failure
added a new method ` alternativePath ( ) ` to ` ExpectNewDemo ` that accepts a ` ByteArrayInputStreamInputStream ` to provide a fallback mechanism for creating
replaced ` input . init ( ) ` with ` input . getFirstFilter ( ) . init ( ) ` in ` LogEntryParseTester . java `
added protectionDomain parameter to the method signature in BufferAlignmentAgent . java to enhance security by restricting access to sensitive data
added dispose ( ) method to ensure proper resource cleanup and prevent memory leaks
added a new configuration option to disable semijoin optimization on external tables to optimize performance by disabling unnecessary optimization on external tables
updated the authorization header description in TokenKeyEndpointDocs . java to clarify that the authorization requirement for public keys is not required for public keys
updated wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall
updated SybaseASADatabase and SequenceSnapshotGenerator to return true for SybaseASADatabase and modified sequence creation logic to enhance sequence order handling
nifi - 2088 : fixing autocommit and rollback behavior in putesql
added a check to ensure the parent directory exists before creating a file in SnapPuller . java to enhance error handling for file creation failures
corrected the casing of " id : launcher " to " launcher : launcher " in AppTarget . Builder to ensure consistency with naming conventions
refactor frame method to accept a ` ByteBuf ` parameter instead of ` ByteBuf ` to enhance flexibility in frame handling by allowing
updated method signatures across multiple classes to include the client registration repository as a parameter to improve clarity and consistency in handling OAuth2 authorization requests
updated the delimiter handling in GenericUDFStringToMap . java to clarify how delimiters are used to improve code readability and maintainability
added imports for ChronoUnit and TemporalUnit , and modified the implementation of the formatInstance method in PlainFormatter to enhance date formatting to ensure
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS and added a retry mechanism for agent closure to improve code clarity and
hhh - 17826 remove reflection from classloadingstrategyhelper .
refactor Mockito class to improve code readability and maintainability
updated debug log message to indicate a new proto event file to improve clarity in logging output
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored due to the absence of at least one sample result
updated exception message format in GridLayout . java to improve clarity and consistency in error handling
improve code readability and maintainability
added support for ordering sheet records based on their positions in the XLS2CSVmra and BoundSheetRecord classes to enhance the functionality
updated method names and calculations for average impulse calculation in ThrustCurveMotor . java to improve clarity and accuracy of thrust effect calculations
( chore ) camel - nifty : use the provided inputmanager
refactor hashCode field setting logic to improve clarity and ensure offset validation to enhance code readability and maintainability
remove deprecate method in block .
[ hotfix ] [ yarn ] fix typo in yarnapplicationmanagerrunner
added EMPTY _ WORD _ OPTIONS option to the CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLine CommandLineOptions options to enhance
only push replica update when write commit log be true
added auto - open web button handling in CaptureActivity and defined a default button in PreferencesActivity to improve user experience by automatically opening web content when necessary
added a new test method ` testBatch batch batch batch batch batch batch batch processing to ensure batch batch batch batch batch processing in the ` JoinedTable
added handling for EntityExistsException in JpaPersistenceService to improve logging clarity in error messages when persistence persistence fails
deprecated the ` -- format ` option and updated related logic to ensure users are aware of the deprecation of the ` -- format ` option in the code
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary functionality
refactor back key event handling in ExtendedEditText . java to simplify the back key event logic to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder ` and added a new class ` Capacity ` for testing capacity behavior to ensure
replace goHome ( ) method with onNoteSaved ( noteTmp ) in DetailFragment . java to ensure proper handling of note saving functionality
added support for endnote reference in xwpf , see bugzilla 47757
added clientInfo parameter to the CasAuthenticationTransactionSuccessfulEvent to enhance event details for better tracking of authentication events
added a new test method ` testVersion ` to ` BridjOGRDataStoreTest ` that verifies the version of the Gridj library to ensure
added a new file Lifecycle . java to handle network errors in the Codename One framework to improve error handling by logging and managing network
deviantart ripper now handle 404 error gracefully
removed unused imports and simplified the import statements in RocketFigure . java to improve code readability by eliminating unnecessary dependencies and streamline the code
added support for retina rendering in the PJOGL library to improve visual quality by allowing retina effects in the rendering process
allow to set initial value for create project ( # 2321 )
replaced ` PackedInts . formatAndBits ` and ` PackedInts . fastestFormatAndBits ` with ` BlockPackedWriter `
( chore ) camel - core : use sorted set instead of collection for route in defaultroutebuilder
removed unused imports and simplified data handling in GoAwayTest . java to improve code readability and maintainability
added support for generating fluent setters in ` ReflectionUtils ` and created ` FluentSetterBean ` for testing to enhance flexibility in bean
updated the ` post ` method to return a ` ListenableFuture < HttpResponse > ` instead of a ` ListenableFuture < ? > `
updated file URL handling in FileSortByExpressionTest and FileSortByIgnoreCaseExpressionTest to use a specified folder instead of a hardcoded value to improve flex
updated logging statement to use getLastAppearedTaskID instead of mLastAppearedTaskTarget to improve clarity and accuracy of log output
add option to disable image pdf conformance and scaling
updated column handling in TSServiceImpl to incorporate aggregate function name to enhance the column metadata processing to include aggregate function details to improve clarity
updated test classes to extend AbstractNestedTests instead of LuceneTestCase and added cleanup method to improve test structure and resource management
added functionality to enable the selection of the xcap server URI based on registration status to enhance user experience by allowing dynamic configuration of the xcap server
ww - 3060 add option to handle exception in dispatch
added ` stopTextEditing ` method to ` CodenameOneImplementation ` , ` Display ` , ` TextArea ` , and ` AndroidImplementation ` classes
nifi - 975 : fix npe in controlrate . group attribute when flowfile do not exist
updated the parameter name from ` includeUndoModify ` to ` isNewComponent ` and modified the ` selectPreset ` method in ` ComponentConfigDialog
added error handling and logging in ChatAnnotation . java to ensure thread safety when sending messages to the client
added a check to ensure the test is only executed for MS Windows to avoid running the test that is not applicable
added SQL _ SERVER _ SNAPSHOT to transaction isolation level configuration to enhance performance by allowing SQL server snapshot to be used
replace direct put method with a while loop for handling new recids to ensure thread safety when adding new recids to the map
use java . nio . zip . zipfile instead of java . nio . jar . jarfile to avoid use deprecate deprecate
added a null check for the command class in RegisteredServiceSimpleFormController to ensure proper handling of service command classes to prevent potential NullPointerExceptions when
change default diskfailurepolicy to ignore
reduce visibility of rip method from public to package - private
[ java ] do n ' t try to connect to localhost in peer discovery if the local address be not localhost
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the class
updated import statements and method call to include ClusterDataCache in PinotSegmentRebalancer . java to enhance partition assignment with ClusterDataCache to improve
do n ' t delete container that do n ' t exist in docker
simonstewart : add a unit test for the selenium - backed selenium command
fix flaky test for createglossarytests
updated schema references from ` allOfRef ` and ` anyOfRef ` to use ` Components . COMPONENTS _ SCHEMA _ REF ` to
refactor EntityDeletedEvent to use JsonUtils for better type handling to improve code clarity and ensure proper serialization of the deleted event data
added support for GOP format handling in FormatConfiguration and updated related classes to enhance media parsing capabilities for GOP support
added a new file TestProfileReturnTypePrinting . java with tests for profile return type printing to facilitate testing of profile return type printing functionality
mondrian : fix concurrency issue in parseconfigutils ( # 1086 )
refactor operator handling in MinMaxValueBasedSelectionOrderByOrderByOrderByCombastateateateateateateateateateateateateateateate
danielwagnerhall : remove unneeded @ ignore in firefox test
updated the return type of getSystemBars ( ) from Map < String , String > to Map < String , Object > to Map < String , Object
do n ' t add dead bug to project stats
updated color handling for disabled text in ImportPanel based on the look and feel to ensure proper text styling for GTK and GTK devices
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check for empty recurrences in ScheduledAction . java and implemented a test for handling empty recurrences in ScheduledActionTest .
replaced the upload button with a menu item for upload functionality in ShareActivity to enhance user interaction by allowing single uploads to be upload easily
renamed multiple classes related to message security metadata to improve clarity and consistency to enhance code readability and maintainability
added a method ` loadMetaData ` in ` MeXBTExchange ` and ` RippleExchange ` classes to ` MeXBTExchange ` and `
added a custom serializers for Writable and VIntWritable in CrawlDbReader . java to enable proper serialization of Writable objects in JSON output
remove testerrequest , no longer need
updated the component annotation in MDNSDiscoveryService to include configuration for the DiscoveryService to enhance service discovery capabilities and improve service identification
added null check for messageItem before scrolling in ChatViewerFragment to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in BPIndexReorderer . java to use ForkJoinWorkerThread instead of ForkJoinPool to improve thread
updated assertions in RoleCommandOrderTest . java to check for the presence of DATANODE and NAMENODE dependencies to ensure that the tests validate
added a method ` restoreLocalInfoFromTableInfo ( ) ` and refactored the ` writeObject ` method to ` deduplication ` to improve
reformatted code to improve code readability and maintainability
added transformation and sprite batch transformation in BitmapFontTest . java to ensure proper rendering of the logo sprite in the rendering process
[ hotfix ] [ python ] exclude non - built - in Python aggregate from window aggregation
improve handling of pending echo in gossip
added a method ` getUnreachableTokenOwners ( ) ` in ` Gossiper ` to retrieve token owners from ` Gossiper ` and
[ giac ] [ giac ] do n ' t change to multiplication when in multiplication mode
refactor content type handling in FormAuthenticator and SavedRequest classes to use a cached content type to improve efficiency by avoiding repetitive content type retrieval
refactor XToolkit to improve handling of graphics environment variables to ensure proper initialization and avoid null reference issues
improve the javadoc of the abstractjob javadoc .
replaced ` Object ` with ` ReentrantReadWriteLock ` for managing read and write locks in ` EnvironmentImpl . java ` to improve concurrency management and
added a test for reading identity providers in a specified identity zone using a specified token to ensure that the identity provider correctly handles scenarios where zones are
phoenix - 546
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ hotfix ] [ hotfix ] [ rebalance ] [ hotfix ] [ hotfix ] [ hotfix ] [ hotfix ] [ hot
chore ( core ) : add support for create temporary directory in cairo
[ java ] add test to verify that there be a low follower in the cluster .
updated default label pattern in JabRefPreferences . java from " [ authors3 ] [ authors3 ] [ auth ] [ year ] " to "
updated dependency handling in DBinaryDescription , DLibraryDescription , and DLibraryDescription classes to utilize CxxPlatforms for dependency resolution to improve
refactor GoogleTTSService to manage OAuth service disposal to ensure proper resource management and prevent potential memory leaks
camel - 17826 : camel - core - optimize file consumer to reduce object allocation .
added a configuration option to control whether to re - open readers in SolrCore to allow reopening readers when re - opening readers to enhance flexibility
bug fix : add dialect attribute to mapwriter
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance
added a duplicate method ` dup ` in ` mmm Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor Condition and ItemSearchCondition classes to use lambda expressions to improve code readability and maintainability
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector to enhance scoring accuracy to improve query performance and accuracy in tests
removed unused imports from ConcurrentClassLoadingTest . java to clean up the code and improve readability by eliminating unnecessary dependencies
added a method to provide direct nearby upload preferences to the CommonsApplicationModule class to provide a way to access shared preferences for nearby uploads
added support for handling " SYSDUMMY1 " mode in database operations to enhance compatibility with different database models
refactor logging statements to improve code readability and maintainability to enhance maintainability and clarity of the logging framework
added a method to retrieve the last process ID in POIXMLProperties and updated related classes to ensure accurate identification of the last property in POIXML
[ geotiffreader ] fix npe in geotiffreader when no data be available
added error handling and improved session state management in CliDriver . java and SessionState . java to enhance robustness by ensuring proper resource closure and
replaced ` Executor ` with ` Scheduler ` for handling HTTP requests in ` MockRestAdapter ` to enhance flexibility in managing asynchronous operations
refactor ` selectByRuleIdSet ` method to utilize ` Lists . partition ` for partitioning of rule IDs to improve performance by reducing
refactor ExitStatus class to use a dedicated method for adding exit descriptions to improve code organization and maintainability by centralizing exit description logic
fix multiblock click handler not work properly
renamed columnFamily to columnFamilyColumn in SliceReadCommand . java to improve clarity and consistency in naming conventions
removed unused import of java . util . Collections in PlotConfiguration . java to clean up code and improve readability
refactor UI alert handling by replacing ` UIAlertViewDelegateAdapter ` with ` UIAlertController ` to improve code clarity and maintainability
updated the build target retrieval method in PythonUtil . java to ensure the correct build target is used from nativeLinkable instead of params
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in parameter naming
removed assertion for message retrieval in AdvServiceTest to improve test reliability
refactor key handling in MappingMongoConverter to improve readability and streamline key conversion logic
updated Timber logging statements in NearbyMapFragment . java to improve readability and consistency in logging output
( chore ) camel - core : fix checkstyle issue
updated FuzzyLikeThisQuery to use MultiFields for term retrieval and added a test for non - existing fields in FuzzyLikeThisQuery
updated the ` writeApplicationsLinks ` method to use a boolean variable for tabular list handling to improve readability and maintainability of the code to en
[ ds - 3652 ] fix npe in dspace . createmissingidentifier ( )
updated assignment methods in VectorColumnAssignFactory to use getLength ( ) instead of length to ensure consistency in byte length handling
removed the abstract method ` getDisplayScript ` from ` LocaleNameProvider ` to provide a default implementation that returns ` null `
[ grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid
pdfbox - 4071 : set initial capacity to avoid massive resizing
added synchronization to the network configuration watcher to ensure thread safety when no active interfaces are available
refactor ` getEmbeddedObjects ` method to improve handling of embedded objects in ` HSSFWorkbook ` to enhance code readability and maintainability by
remove unused import of shdr from shadernodeloaderdelegate
updated role parameter handling in AmbmbariManagementControllerImpl . java to improve clarity and consistency in parameter management
added a check for the " Symbol " base font in PDSimpleFont . java to ensure proper handling of font types
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourglass . java ` to
refactor LiveTvGuideActivity and ProgramListAdapter to use Calendar instances instead of direct Calendar instances to improve code readability and maintainability by
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test cases in ` Common
[ jvm launch ] pre - load libfreetype . so and libfontmanager . so , maybe fix rlcraft crash
kristianrosenvold : fix bug that cause unit test failure
loop safepoint elimination : avoid unnecessary safe guard check
[ hotfix ] fix bug in typeframemodelingvisitor . isinstance
added LocalizedString class and refactored related methods in Attr and Resolve classes to enhance string formatting capabilities and improve type argument handling
added a ` disableClasspathSearch ` property and its getter / setter methods to ` ServerConfig ` to control whether to disable classpath search for classpath search
use arrays . copyof instead of system . arraycopy
updated the default retries value from 0 to 2 in Reference . java and Reference . java , and corrected the test assertions in AnnotationPropertyValueAdapterTest .
added support for loading settings in TexturePacker to enhance user experience by allowing customizable settings for texture packing
updated Upload Upload Upload Upload Upload Upload Upload Upload Upload Upload Upload Upload Upload Upload Upload Upload to use AppCompatTextView for displaying uploaded images to improve user experience
added multiple calls to mockLogger for annotation processing and logging in TranslatingJavacPhaseTracerTest . java to ensure proper logging behavior during annotation processing
added a new ` CategoryInfo ` class and modified the ` MwQueryPage ` class to include a new ` CategoryInfo ` property to enhance
updated assertions in AuthzAuthenticationRequest to use named parameters instead of hardcoded strings to improve code readability and maintainability
added accessibility features and updated alarm timeout handling in TaskbarStashController to improve accessibility support for taskbar visibility in the application
added checks for ' ^ ' characters in GenericSignatureParser to ensure proper handling of special characters in signature input
updated access flag handling in ClassVisitorDriverFromElement and added new test cases in StubJarTest for interface and enum stubbing to ensure
replaced direct assignment of ' in ' with Objects . requireNonNull in IntervalFilter and added null check in LowpassIntervalsSource to ensure ' in ' is
added tests for iterator implementation in MapInterface to ensure correct behavior of iterator implementation in collections
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization and deserialization of the class
changed the method from ` createAt ` to ` createAt ` in ` ImageData . java ` to use ` Instant . ofSecond ` instead of
mondrian : make singularws work with ggb2
added key deletion for private and public accounts in AccountRemovalJob . java to ensure proper account management during account removal
use a dedicated method to set keep - alive header
fix postjoinmapoperation when interceptor list be empty
pdfbox - 2852 : remove dead code that be n ' t use
removed the ` spillEnabled ` parameter from the constructors of ` BaseHybridHashTable ` , ` BinaryHashTable ` , and ` LongHybrid
refactor environment variable retrieval to use a dedicated method and improve error handling to enhance code readability and maintainability by consolidating environment
defaulthandler : fix code style issue
added import statement for SerializableMode in Mockito and PluginSwitch classes to enable serialization support for mock objects in the Mockito framework
fix nullpointerexception in abstractbeandefinition # setfieldvalue if field injection fails
added isolation level support to SQL query parsing to enhance compatibility with different database modes
replaced references to HiveConf with static final constants for transport transport transport transport mode and HTTP transport transport transport transport transport transport transport transport transport transport transport transport transport
added a method ` isCacheable ` to ` GlobalOrdinalsWithScoreQuery ` that always returns false to ensure that caching is disabled by default
added a new file ` TestStrangeControl . java ` that includes a new file ` TestStrangeControl . java ` that includes a main method
updated file naming from " . json " to " . jsfile " in JsFile . java and JsLibrary . java to ensure correct file naming for
added methods to set and get selection indices in ShadowEditText to enable customizable selection behavior in the user interface
updated the ` startGRPCServer ( ) ` method to use ` Closeable ` and ` ExecutorService ` to improve resource management and ensure proper resource cleanup
added a new ` use ` method in ` Jooby ` and updated routing logic in ` Router ` and ` JoobyTest ` classes to
added a null check for fst in FreeTextSuggester . java to ensure that lookup functionality is not supported
updated newline handling in T4975569 . java and improved URL verification in T6729471 . java to ensure consistent line endings and
added ABI writer class loading logic in JavacInMemoryStep . java to ensure proper handling of ABI writer classes during processing
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress warnings related to BooleanMethod is always inverted
do n ' t schedule pull message if service be shut down
refactor EnergyEndpointer class to improve code readability and maintainability
refactor componentPresetChooserDialog to use a list of displayed columns instead of an array to improve flexibility in managing displayed columns based on
remove unused import to fix checkstyle error
camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadataFactory `
deleted the files Constants . java and DistanceUtils . java to remove unused files to streamline the codebase
updated key parsing logic in RandomPartitioner to improve clarity and accuracy in key handling
disable build - time initialization for jdk 22 +
add test for create ( ) method in rolebindingoperationsimpl
added debug logging statements to UaaSessionCookieConfig for session cookie configuration to improve traceability and debugging during session cookie configuration
updated the calculation of file name in HotseatFileLog . java to use the calendar calendar to ensure the file name is correctly formatted based on the calendar
fix ( blocking ) : fix wrong check in blockingblockingsubscribe .
added error handling for invalid command - line option usage in JavapTask . java and created a new T8033711 . java file to improve
refactor method calls from ` collect ( Collectors . toList ( ) ) ` to ` toList ( ) ` in multiple Java files to simplify
[ hotfix ] [ runtime ] change log level from error to warn in taskmanager
[ hotfix ] [ network ] [ network ] enable tiered storage for input gate
do n ' t check if the response status code be less than 2xx status code
updated Cuboc . java and CubocDesktop . java to enable GL20 rendering in the application
remove unnecessary type check for method return type to simplify code logic for better readability and maintainability
replaced ` DefaultSourcePathResolver ` with ` SourcePathResolver ` and added ` HumanReadableException ` to the ` OutputMacroExpander ` to
use light job instead of non - light job for log exception sql test
added a condition to prevent processing of duplicate words in MergeWordsListTask . java to ensure that duplicate words are not processed further
[ # 7569 ] instructor : instructor : instructor : fix instructorfeedbackresponsecomment load ( # 7569 )
removed redundant code formatting in Container . java to improve code readability and maintainability
added a new file ` TestEscapeThroughInvoke . java ` containing a new class ` A ` with two instances of ` A ` and ` A `
replaced stream . skip with IOUtils . read in FilePreviewService . java to improve code readability and leverage built - in IO handling
added interceptor initialization logic to the ConnectionPool class and improved error handling in DataSourceProxy to enhance connection management and provide clearer diagnostics during
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of exceptions
hbase - 17826 lrublockcache . remove ( ) should return 0 if the block do n ' t exist
removed the check for zero task count before obtaining the task count to simplify the task count retrieval logic
added instance configuration change listener to HelixBrokerStarter and increased sleep duration in HelixServerStarter from 1000ms to 5000ms to improve respons
added CoinmateMetadataServiceRaw and CoinmateStatic classes to handle exchange metadata retrieval to facilitate the integration of Coinmate
improve defaultmodelvalidator to reject $ { basedir } and $ { project . basedir } .
pdfbox - 4892 : avoid re - set key when write cosobject
[ beam - 8470 ] add support for set displaydata in ptransform
replaced instances of DefaultSubject with assertThat assertThat to improve assertion to enhance readability and ensure proper assertion behavior in tests
added a security property to disable cryptographic algorithms to enhance security by preventing the use of cryptographic algorithms
added checks for subcommands and options in OptionData . java to ensure correct handling of subcommands and options in the validation logic
updated module - info . java files to improve module dependencies and organization
added error handling and improved connection status management in IOSImplementation . java to ensure proper exception management and provide clearer error reporting
updated event tracking logic in LauncherInstrumentation and LogEventChecker to ensure proper cleanup of resources to improve resource management and prevent potential memory leaks
replaced direct exception handling with error logging and improved exception management in FileSinkOperator . java to enhance error reporting and ensure proper resource cleanup
added diagnostic information to the task execution to enhance error reporting by displaying diagnostic details
use OptiqSemanticException instead of SemanticException to improve error handling in semantic analysis
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring functionality
added a HashSet to track loaded resource paths to prevent redundant processing of the same resource path multiple times
added null check for testInstance before logging error messages in TestServiceUtil . java to improve error handling and avoid null pointer exceptions
added null check for ` o ` and updated response handling logic in ` RoutingInBoundHandler . java ` to improve robustness by preventing null
added a nullable ` natIp ` field to ` EkeyConfiguration ` and updated logging messages in ` EkeyUdpPacketReceiver ` to enhance logging
updated imports from ` io . netty . buffer . ArrowBuf ` to ` org . apache . arrow . memory . ArrowBuf `
updated CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added checks for null and empty body in HttpConnection and a new test for Expect header in RFC2616BaseTest to ensure proper handling of
refactor TimeoutSubscriber to use AtomicReference for upstream and requestedInitial subscriptions to improve thread safety and clarity in handling subscriptions
add compaction counter to keep track of overlap sstables
added @ Test annotation to TestOrcTimezone1 . java to enable test coverage for OrcTimezone1 functionality
refactor ` parseMetricAndTimerSystemProperties ` and ` parseMetricAndTimerSystemProperties ` methods to accept ` enabledMetricsSubstrings `
added error handling for JSON processing exceptions in PinotSegmentRestletResource to improve robustness by providing a clearer error message when JSON processing fails
updated JTable . java to handle null values for columnClass and added a new test class Test6888156 . java to improve robustness
added a check for the existence of the SHELL environment before adding it to the arguments list to ensure that the application can handle scenarios where the shell
changed the maximum number of deleted feeds from 10 to 1 to optimize resource usage by reducing the number of subscriptions
replaced ` List ` with ` Set ` for ` testInstances ` and updated related methods in ` MockitoExtension ` and ` JUnitJupiterTest
refactor FieldMonitor class to improve code readability and maintainability
replaced deleteFilesAfterClose ( ) and deleteFilesAfterClose ( ) with transactionDisable ( ) and fileMmapEnableIfSupported ( ) in B
updated the iterator implementation in SortedIntList . java and added a new test case in SortedIntListTest . java to enhance iterator handling and ensure
added unregister method in DefaultRemoteProxy and modified catch block in JMXHelper to handle exceptions more gracefully to improve error handling by removing unnecessary stack trace printing
[ hotfix ] [ doc ] increase default writebuffer size for rocksdb configuration
updated constructor parameters in Style class to simplify the constructor call and improve code readability
added a method to add a message without encoding to the request to ensure that the message is sent without encoding issues
[ beam - 8470 ] remove unused pipeline json graph in samza runner
* update helloAudio class to use mouse input .
[ hotfix ] [ test ] fix checkstyle violation in loopRotatebadnodeBudget
added ` convertToMongoType ` method to ` AbstractMongoConverter ` , modified ` convertToMongoType ` method in ` MappingMongoConverter ` ,
ggb - 275 : do n ' t display complex input box in input box
simonstewart : fixing sendkeytoactiveelement to return an empty string instead of an array
added a method to get a scaled instance of a BufferedImage and implemented functionality for scaling images to improve image rendering flexibility and ensure valid target sizes
added extendWrapStore and extendWrapStore methods to DBMaker . java to enhance argument validation for database operations
fix for issue # 198
removed DETECTED _ ACTIVITY constant and updated related methods to streamline activity detection handling and ensure backward compatibility
updated import statements to reflect the new package structure for WebSocket protocol to ensure proper organization and access to the correct ExtensionConfig class
removed unused import of Buildable in AaptPackageResources . java to clean up the code and improve readability
add miss javadoc to method that be unused .
enhanced error message for invalid upgrade protocol to provide clearer feedback on the expected status code
updated blockMode assignment logic in P11Cipher . java to ensure correct parsing of algorithm parts
refactor Mockito class to improve code readability and maintainability
added permission checks for plot ownership in Merge . java to ensure proper handling of plot permissions to prevent unintended actions when permissions are not granted
deprecated the ` getConversationID ` method across multiple classes and removed deprecated ` getConversationID ` method from ` HttpContentResponse ` , ` HttpRequest `
use de . dfki . lt . featureselection . featureprocessors instead of de . dfki . freetts . phoneset
refactor quote stripping logic to use PlanUtils for consistency across classes to improve code maintainability and reduce duplication
removed the Rendering class and updated updateRendering method in DLNAResource . java to simplify rendering logic and improve rendering context handling
move resolution repository from resolutiongroup to project
camel - 7999 fixed the unit test error
refactor PhysicsClient class to improve code readability and maintainability
added JUnit Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failures
added a new File object to the ZipFile class to facilitate the handling of file names in zip files
added a deprecated method handleAll ( ) to the TryType class that returns a finally block to indicate that the method should no longer be used
add a unit test for the channel constructor ( # 662 )
added StackTraceUtils class and a method to log the current thread ' s stack trace in GenericDAOImpl . java to enhance stack trace
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test execution by eliminating unnecessary tests
updated unparseList method to handle parentheses correctly based on argument length to ensure proper parsing of expressions with parentheses
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to use cluster _ id instead of a set
add support for jdk . internal . misc . innocuousthread
updated JsonTreeReader to throw an exception for unexpected peeked JSON elements to improve error handling and provide clearer feedback when encountering unexpected input
added option handling for extra arguments after the " -- " in TestCommand . java to improve command - line argument parsing for better user feedback on unexpected
added deduplication methods in SolrDeleteDuplicates and SolrIndexer classes to enable deduplication handling in Solr deduplication to improve data integrity by allowing
[ hotfix ] [ examples ] add parameter to streamsqlexample
added a call to ` clearDatabase ( ) ` in ` MssqlIntegrationTest . java ` to ensure a clean state before each test execution
updated the ` renderPercentageOnTop ` method and refactored the ` dispose ` method in ` Progress ` and ` RSSReader ` classes to improve
added a check to ensure that the parent file exists before proceeding to prevent potential errors when attempting to access a non - existent parent file
added ` write ` and ` writeAndClose ` methods to ` IOUtils ` for writing POIDocument and POIDocuments with proper resource management
updated print statements in JavaBuild . java to include line breaks for better readability to enhance output formatting for better clarity and consistency in output
changed the type of the ` _ root ` variable from ` Box ` to ` BlockBox ` and added getter methods for ` dotsPerPoint ` to
added generic user search functionality to the ` apply ` method in ` CustomQueryFilterFactory ` and updated test cases in ` TestLdapAtn
added default ports handling in NettyHttpServer and updated routing logic to utilize a list of ports to improve route management by ensuring default ports
updated SnmpTargetHandler and related tests to utilize ThingHandlerHelper for handling status updates to improve clarity and maintainability of the
[ # 7705 ] instructor : instructor : edit session submission form ( # 7705 )
added @ Incubating annotation to AvailableSettings class to indicate that the class is outdated and may be removed in future versions
refactor path handling in FileResolverImpl and add a new WarFileResolverTest class to improve code readability and ensure correct substring extraction
updated string concatenation in newFlushedSize to include docstores to improve clarity in log output for better debugging
fix : use unlocalized name instead of func _ 149739
updated whitespace handling logic in ImageProcessor . java to ensure consistent spacing between whitespace values
updated the lock initialization to use a multiply of 1000 instead of a fixed value to ensure that the lock is always in the correct range
updated the ` deserializeFrom ` method to include an ` exactSearch ` parameter in ` TsFileSequenceReader ` and added a new test for measurement chunk
no need to need to pass dateformat a parameter
added a method to set the preferred size of the pane in NavigationShareTab to ensure proper sizing of the pane based on its dimensions
refactor BeiderMorseFilter to use State instead of OffsetAttribute to improve state management and streamline token processing
refactor UpnpAudioSinkReg , UpnpHandler , UpnpServerHandler , UpnpEntryQueue classes to improve code organization and maintainability
fix sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp sp
added unit tests for the ` Json ` class and modified the ` toJson ` method in ` JsonTest ` to enhance test coverage and
refactor MutableContextDataSupplier class to improve code readability and maintainability
updated catch block to handle Throwable instead of Exception to improve error handling by logging warnings when loading LogWatcher
updated KubernetesMockServer constructor to include https parameter to enhance security by allowing secure connections to the Kubernetes server
[ jdk - 8016205 ] fix a bug in jdk . math . math . foreigncallnode creation in jdk . math
updated HTTP method handling in DefaultServlet to ensure compliance with HTTP standards and improve response status handling
tika - 2892 -- fix for tika - 289
replaced instances of throwing exceptions with returning a NOT _ FOUND error in ShowFileRequestHandler . java to improve error handling by preserving the original
added exception handling capabilities in ReflectorClassWriter . java to improve error management during reflection operations
added a clamp method to the Vector class to allow clamping vector values within specified minimum and maximum boundaries
added client details handling in ChainedTokenGranter . java to ensure requested scopes are set correctly based on the incoming token ' s scope to improve
refactor BC _ instanceof class implementation to improve code readability and maintainability
do n ' t need to set saveflags to all
test : migrate uaaurlutilstest to junit5
hhh - 16688 : fix nativequery return type for basicdomaintype
added caching for font awareness to improve performance by reducing redundant calculations for font awareness
improve performance of typedset . hashmap .
danielwagnerhall : fix the order of the ` ` return ' ' , not ` ` return ' '
refactor BrokerRequestUtils class to improve code readability and maintainability
refactor InjectorBuilderImpl to use a undetermined instance mapping to improve clarity and maintainability of instance creation logic
updated the method for obtaining the base path in ` BuildTargetToRawTargetNodeTransformer . java ` to use ` getBasePath ( ) ` instead of
fix for npe in echore ( )
add keepalive listener to jabber connection to avoid npe .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67F in IntHashSet . java to adjust the default load
added methods to retrieve data type physical variations in VectorizationContext and updated related classes to improve type handling and support for additional data types in
rename htmlassettranslator and stringsresourcetranslator to j2se
refactor conditionals in OverViewState . java for improved clarity and structure to enhance readability and maintainability of the code logic to
added @ Entity annotation to BaseActivityEventEntity . java to indicate that the entity is intended to be persisted in the database
added tracing for touch interactions in NavBarSwipeInteractionHandler and TouchInteractionService to enhance debugging and monitoring capabilities during interactions
added a new file ` InvalidOptions . java ` that tests the behavior of ` javap ` with unknown options to ensure that the program
added a check to ensure the number of supported display bounds in DisplayController to prevent inconsistencies between two supported and old display instances to enhance
refactor OAuth20UsernamePasswordAuthenticator to centralize client ID and client secret extraction into OAuth20Utils to improve code organization and maintainability by
updated the ` _ unwrapServletException ` variable to true in ` ErrorPageErrorHandler ` and ` _ unwrapServletException ` flag in ` ErrorPageErrorHandler
added logic to update the status of the shortcut in PackageUpdatedTask to ensure proper handling of shortcut information
camel - 16462 : seda component : allow a fixed queue size to be specify
added multiple batchUpdateStart and batchBatchUpdateEnd methods to the Kernel class and App classes to enable batch batch update functionality to enhance the application '
added HttpClient configuration to ThirdEyeApplication to facilitate HTTP client setup for the application
added sorting functionality to JobInstanceFetchRequest and updated JpaJobPersistenceImpl to include sorting capabilities to enhance job execution order handling by allowing specification of
added functionality to cancel cryptocurrency orders in CryptoFacilitiesTradeService to improve order handling by using a specific currency pair instead of a specific exception
ggb - 2118 fix : keyboard show when click on a click in algebra view
refactor memmove method to use native function handle instead of byte array
refactor method signatures in BindLdapAuthenticationHandler . java for improved readability and consistency to enhance code maintainability and clarity
ggb - 1252 make tooltips work in dark mode
updated DefaultDateTypeAdapter to accept customizable date and time styles to enhance flexibility in date formatting by allowing different time formats
updated the formatting of the playerSet string to improve code readability and maintainability
added a check for an empty list in the List class to ensure that a new List instance is returned when no elements are present to avoid unnecessary casting
added error handling for CommandException in ParametricCallable to improve robustness by ensuring proper exception propagation
updated the ` getLikeExpression ` method to include a boolean parameter for distinguishing between regular expressions and regular expressions to enhance flexibility in handling different
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide a standardized way to handle
updated the ` runChild ` method in ` LuceneTestCase ` to set the default locale based on available locales to ensure consistent locale handling for tests
refactor multiple Java classes to improve code organization and maintainability
refactor context handler initialization into a separate method to improve code readability and maintainability by encapsulating context handler logic
add a test case for camel - blueprint
nifi - 10862 fixed test failure in testnifi - 1086
refactor ` returnTypeSubstitutable ` method to accept a ` Warner ` parameter and simplify return type checks to enhance type - checking
added an ` ThrottleType ` enum and modified ` throttledProcessor ` processing logic to support different throttling types to enhance flexibility in processing
simplified variable assignment for argb in ColorBleedEffect . java and added a condition in SpriteBatch . java to improve code readability and
refactor Annotation and AnnotatedElement classes to improve code organization and maintainability
added a new interface ` Model ` and updated ` Sheet ` , ` Sheet ` , and ` Workbook ` classes to implement the ` Model ` interface
camel - 7999 : use camel _ filter _ pattern instead of camel _ filter _ pattern in camel - cxf
added functionality to clear the entity manager in JpaItemWriter and JpaItemWriterBuilder classes to allow configuration of entity manager behavior during item writing
added null checks for ` info ` in multiple classes to prevent ` NullPointerException ` when adding shortcuts to the model
[ hotfix ] [ core ] [ coremapnodepattern ] make coremapnodepattern trigger more flexible
updated exchange specifications to use " wexexex . nz " instead of " btc - e . nz , " Wex " instead of " btc
added null checks for columnReaders and added null checks before setting buffers in OrcEncodedDataConsumer and EncodedTreeReaderFactory to prevent NullPointerExceptions
added a null check for file existence in SegmentInfos and a test for opening a reader after deletion to ensure proper error handling when no segments are found in
fix indexoutofboundsexception in elasticsearch
updated BigDecimal conversion logic in DeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDeviceDevice
updated condition checks in RangeInputStream and RangeReader to handle non - positive limit values correctly to ensure proper handling of zero limit values
camel - core - optimize log to reduce log verbosity .
fix a typo in hl playback
replaced ` TestCase ` with ` LuceneTestCase ` in ` NumericRangeFilterBuilderTestCase ` and ` NumericRangeQueryBuilderTestCase ` to standardize test class
[ hotfix ] [ datastream api ] [ stateful ] fix npe in statefuloperatortest
removed a null check for the fill object before setting the bitmap shader shift in Area . java and added a call to set shader shift in Line . java
added dbExists ( ) method to Blockchain class to check for the existence of a blockchain before initializing it to ensure blockchain integrity by preventing
trim whitespace from the value retrieved from the matcher in SQLPlusSupport . java to ensure clean output by removing unnecessary spaces
improve performance by disable async socket
[ web ] do n ' t set divider location if not need
added health check metrics for controller health to improve monitoring and error handling for broker health checks
added a line to hide shared avatars in LocalFileListAdapter to improve user interface clarity by hiding unnecessary elements
move mow - scss and mow - scss to mow - common
[ java ] fix arrayindexoutofboundsexception when send a pong .
added logging capability to the LogInterceptor to ensure commands are only executed if the log level is not logging
replaced CountDownLatch with assertWaitUntil for span completion in EventBusTracingTestBase to simplify the test assertions to improve readability and maintainability by using a more
updated Locale handling in QueryParser to improve clarity and ensure locale initialization in the parse method to enhance code readability and prevent potential parsing errors
fix : use linkedhashmap instead of arraylist in fieldsetcomponent
jbrules - 2835 : fix rulebaseimpl to work with beta node
pdfbox - 2852 : add miss ocsp revocation check for unauthorized ocsp response
added a volatile variable ` serverState ` and modified server state handling to improve synchronization and error handling for server operations
added support for tracking open connections in the source counter to enhance monitoring capabilities by tracking the number of active connections
add ` ` fields ' ' builder to graphqlinterface interface and make it public
refactor ` createDefaultJavaPackageFinder ` method to ` getSrcRoots ` to improve clarity and encapsulation to enhance code readability by
replaced ` OutputWriter ` with ` PrintWriter ` in ` ScriptExecutable . java ` to ensure consistent output handling across different operating systems
[ hotfix ] [ test ] fix test bug in filesourcetextlinesitcase
added import for DataTable in JRubyStepDefinition . java to enable proper handling of DataTable instances in JRuby step definitions
updated visibility settings in SearchImagesRenderer . java and modified query parameters in ApacheHttpClientMediaWikiApi . java to improve code organization and enhance
doc : fix typo in read sentiment dataset example
improve error message when formula parse fails
added getter and setter methods for the bind address in the WebSocketClient class to improve socket binding functionality and enhance encapsulation
[ java ] remove duplicate call to close in consensus module harness .
simplified the size setting logic in WidgetGroup . java to improve readability and maintainability of the code
changed the type of ` sessionFixation _ MIGATION _ MIGATION _ MIGATION _ MIGATION _ MIGATION _ M
modified the switch statement in LALogicLinesFragment . java to use a switch statement for better clarity to improve code readability and maintainability
danielwagnerhall : add retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry retry
added URI template support to ClientResponseWrapper and updated related tests to enhance response handling by including HTTP method and HTTP method details
patch by jbellis ; review by jbellis for cassandra - 1462 . minor code cleanup .
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added InvalidRenderIntentTest . java to ensure correct
[ # 7495 ] contribution question : add check for isnotureallowed parameter ( # 7495 )
added multiple calls to PublicMethed . waitProduceNextBlock to ensure proper synchronization of block production processes
[ hotfix ] [ kafka ] suppress findbugs warn in kafkarecord record class
added PGConnection support in PooledConnectionImpl . java and a test for PGConnection in BaseDataSourceTest . java to enhance connection pooling functionality and
refactor PropertyTable and CloseIgnoringInputStream classes to improve code organization and maintainability
updated logging messages in TokenAuthenticationHandler . java to provide clearer information about token authentication configuration to enhance clarity and provide more informative messages
remove deprecate method from hazelcast
updated AmbariManagementControllerImpl to handle unlimited key JCE requirements and refactored command report creation in AbstractServerAction to improve
replaced ` writeStr ` method with ` writeExternString ` in ` NamedListCodec ` and added ` readIterator ` method in ` Named
fix npe in migrationcommit . patch by jbellis
added schema inclusion rules to ApiExample . java to ensure schema information is accessible for public access
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test case accurately reflect
added coordinate sequence validation and tests for polygon handling in SDO to enhance robustness and coverage of polygon creation logic
added methods to retrieve base name and dimension count in ConstantPool . java to improve functionality to enhance the handling of array elements in the constant pool
added a method to set debug output for each evaluation in HSSFFormulaEvaluator , FormulaEvaluator , SheetulaEvaluator , and SheetulaEvaluator
test : migrate refactoringtest to junit 5 ( # 4515 )
updated ExoPlayerProfile instantiation and modified playback state condition in PlaybackController to streamline player profile initialization and ensure proper handling of live TV playback
added a return statement in DynamicStyleBar . java to ensure proper termination of the method execution
added SLF4J logging statements in Utils . java to improve traceability of property property state changes to enhance debugging and monitoring capabilities
refactor ReactiveAuthorizationManager implementation to improve code readability and maintainability
updated condition in MethodEmitter to check for boolean types to ensure proper handling of boolean types
truffle : fix npe in sulong for null frame .
refactor multiple Java files for improved code organization to enhance maintainability and readability of the codebase
add test for caffeine cache manager proxy
[ add ] mesh . calculateboundingbox ( ) to calculate the bounding box of a mesh .
add -- target - hash - function option to specify target hash function
[ hotfix ] [ doc ] fix typo in defaultconfigurationproperties
added highlighter and alpha properties to ListViewMultiChartActivity and modified highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight highlight
added a mapping for tmpPg to sgPathPlanMap in ClusterPlanRouter . java to ensure proper handling of path plan mapping
camel - infinispan : fix camel - infinispan test
added functionality to clean up artifact files in MavenArtifactFetcher and MavenDependencyResolver to ensure proper resource management and prevent conflicts during artifact fetching
added a conditional check for GL ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES ES
hbase - 26902 rsgroup should use set instead of set to avoid concurrentmodificationexception
added a try - catch block to load the JSP page in TagLibConfiguration . java and changed log level from warn to debug to improve error handling
added version - aware token filtering in CustomAnalyzer and a corresponding test in TestCustomAnalyzer to ensure that the custom analyzer correctly handles version - aware
added a test method to retrieve package archive information from setPackageArchiveInfo to ensure correct retrieval of package archive information from the archive file
replaced direct method invocation with MethodUtil . invoke across multiple classes to enhance security by ensuring proper package access checks
updated import statements and added progress event handling in GradleBuildService and Main classes to improve event logging to enhance event tracking and ensure proper event
simonstewart : remove unnecessary synchronization in androidwebdriver
do n ' t set initializationfailfast to false
removed the timeOut parameter from the getResult method and added an error handling method to simplify the method signature and improve error handling
changed the visibility of the ` isNative ` field from private to transient in ` JMethodIdTable ` to ensure that the ` isNative ` field
update error message to be more specific
fix ruleenablementhandler name ( # 3125 )
no functional change - code cleanup
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve logging clarity to enhance error handling and provide clearer feedback on
updated method names from ` getBasicSourceOptions ( ) ` to ` getBasicSinkOptions ( ) ` in ` KafkaDynamicTableFactoryTest .
added a null check for the repository repository in UsersPanel . java to handle potential null repository repository to improve error handling and provide user feedback when the repository
added support for additional font file formats in SunFontManager to accommodate additional font formats
updated type comparison logic in AnnotationMatcher . java to correctly handle class qualification by replacing fully qualified class names with fully qualified class names to ensure accurate type
change the spelling of " OFF " to " SEVERE " in the Grep . java file to improve code readability and maintainability
updated logging statements to check if debug level is enabled before logging messages to improve performance by avoiding unnecessary string concatenation when debug logging is not enabled
do n ' t initialize includes / excludes list if they be empty
added methods to handle default screen movement in the home intent to ensure proper screen management when navigating to the home screen
updated the maximum bitrate from " 110 " to " 30 " in the configuration to improve the quality of the media media
removed duplicate logic for collecting unique options in CommandLineParser to simplify code and improve readability by eliminating redundancy
trim whitespace from the description returned by the method to ensure consistent formatting of the returned description
updated the output filename format in XOMParserTest . java to ensure the output file path is correctly formatted
log process name instead of process . pid ( )
added protected methods to MusicLoader and SoundLoader classes to provide access to music and sound data from their respective loaders
replaced the import of ` ClassUtils ` with ` java . util . Map ` in ` OnBeanCondition . java ` to streamline the import statements
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for test cases for debugging purposes
disable lr pause button when cpu / memory be not available
refactor preferences handling to use a single instance of PreferenceCategory to improve code readability and maintainability by reducing redundancy
fix ` ` available ' ' presence for available presence
updated StringBuilder initialization to use initial capacity based on utf length to optimize memory usage by avoiding unnecessary object creation
added " spring . metrics . export . statsd . enabled = false " to the WebEndpointsAutoConfigurationIntegrationTests to ensure metrics export is disabled for
refactor InterruptedException class to improve code readability and maintainability
refactor ServiceTicket class to improve code readability and maintainability
updated SSL connection handling logic in ConnectionCheckOperation . java to improve clarity and maintainability of the code
updated the conversion logic in ArgumentArrayMessageMapper to handle payload string " foo = foo = b = b = b = b = b = b =
[ ds - 3943 ] update ds - 3943 , ds - 3914 , ds - 3914 , ds - 3914 , ds - 39
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to the sExemptOfPasscodeActivites list in Passcode
refactor : remove deprecation from patternparameterconfigurator
changed the return type of ` beginDraggingWidget ` from ` void ` to ` boolean ` and updated the method ` beginDraggingWidget ` to ` boolean
lucene - 4488 : ignore this heapdump - producing test case for now
added a null check for the root parameter in DynamicStyle . java to prevent potential NullPointerExceptions when processing components
add the ability to write confusion matrix to the nlp file
refactor to make code more readable
added unit tests for ` getConnectedDevices ` and ` getConnectedDevices ` methods in ` ShadowBluetoothHeadsetTest . java ` to ensure
camel - 16400 : camel - core - optimize property bind with autowired
added " clone " to the set of object methods and introduced a constant for the " finalize " method to exclude the " finalize " method from triggering lazy loading and enhance method handling
added null checks for counters object in IntegrationTestBigLinkedList . java to ensure proper handling of cases where the YARN configuration configuration is insufficient or configuration
do n ' t return false for object reference that can not be retrieve .
updated the setRegisteredServiceFilter method to accept a service ID instead of a service name to enhance filtering by matching service IDs to improve the accuracy of
added a null check for the activity before running the runnable in PhotoFragment . java to avoid potential NullPointerExceptions when accessing the activity context
rename logger variable to avoid conflict
added methods to set and retrieve string type in DatabaseAdaptor and JDBCSessionDataStore classes to enhance flexibility in handling database string types
updated UIMAUpdateRequestProcessorTest to test suggested category instead of language to ensure tests accurately reflect the intended functionality of the suggested category
refactor thread name handling to use a new method ` updateThreadName ` to improve code readability and maintainability by centralizing thread name
refactor TaskletAdapter class to improve code readability and maintainability
drools - 2234 : fix nullpointerexception in decisiontableimpl . evaluate output
updated texture map creation and default setting in SplashProgress . java and SplashProgress . java to ensure proper loading of texture maps on macOS to
added tooltip text to the showCGCP checkbox in RocketPanel to improve user interface clarity by providing contextual information
replaced instances of ` owner . getTypes ( ) ` with ` owner . addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
add text and description parameter to flutterreutargetaction ( # 1469 )
refactoring : use getlabel ( ) instead of getlabelSimple ( )
changed the type of the BNESS _ FACTOR constant from int to double to improve precision in calculations by using a more appropriate data type
fix for bug # 166 : smohant history parser should n ' t parse branch name
added a new parameter ` isAdmin ` to the ` createUser ` method and implemented the ` listUsers ` method to the ` createUser ` method
added null checks for indexedWriteMethod and improved type equality checks in Introspector and PropertyDescriptor classes to enhance code robustness and
updated logging statements in DynatraceExporterV2 . java and simplified assertions in DynatraceExporterV2Test . java to improve logging
updated method parameters in Context . java and Request . java to improve parameter naming consistency to enhance code readability and maintainability
fix spongecommon . setcapabilitiesfromspongebuilder for spongecommon
updated assertion in LifecycleUtilsTest to compare execution ID between two bindings to ensure correct execution ID comparison
added contract type checks and validation for smart contract creation in Wallet . java and GetContractServlet . java to enhance contract creation logic and ensure
added package - info . java files for com . ibm . dtfj , com . ibm . lang . management , com . ibm . lang .
solrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolr
added a HashSet to track duplicate JavaFileObject instances and modified the parsing logic to prevent processing of duplicate JavaFileObject instances
updated the default value of STRIP _ IPV6 for STRIP _ IPV6 to false in HostPort . java to disable IPv IPv6 IPv6
added support for adding new user parameters to the LoginServerTokenEndpointFilter to enhance flexibility in handling OAuth token parameters during login
fix for c : c : c : c : c : c
replaced ThreadPoolExecutor with MoreExecutors in BuckEventBus and added a new MoreExecutors class to streamline thread management and improve
added cache control headers and modified response handling in FormAuthenticator and ConstraintTest to improve response management and ensure proper caching behavior
updated error logging to include exception details to improve error reporting for better debugging
updated HSSFTests and TestEmptyDocument to include additional test classes and improved data handling in tests to enhance test coverage and ensure accurate
updated FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve test coverage and ensure consistency across test cases
added null check for output before retrieving its absolute path to avoid potential NullPointerExceptions when handling file paths
added external resource control priority settings in Java2DRenderer . java to ensure proper handling of access control during resource resolution
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure that the build process does not fail on specific JDK versions
modified the ` mbean ` variable to be ` final ` and added a ` testCPUTime ` method to improve thread CPU time validation and enhance
added a check to ensure comments are not empty before processing whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace whitespace
updated assertions in TestTriggerIntegration to allow values of these values to be greater than or equal to 100.0
updated comparison logic to be case - insensitive in DatabaseChangeLog , RanChangeSet , AlreadyRanChangeSetFilter , and AlreadyR
removed the ` getString ` method from ` ShadowBundle ` to streamline the code by eliminating unused functionality
added locale - specific date formatting to the TweetActivity to ensure consistent date and time display based on the user ' s locale
nifi - 1086 : return an empty list if there be no connection to process
refactor focus handling in DetailFragment to use a dedicated method to improve code readability and maintainability by encapsulating focus request logic
add a space to the file path in the app .
make sure solve ( ) method be synchronize to avoid arrayindexoutofboundsexception
added import statement for message
updated SQL query construction to use joins for task attempts to improve readability and maintainability of the code
updated file filter handling in AquaFileChooserUI to ensure only valid file filters are selected to improve user experience by preventing selection of invalid filters
improve synchronization to avoid race condition
fix for http : / / code . google . com / p / mybatis / issues / detail / bugzilla / detail ? id = 4
updated import statements in PGtokenizerTest . java for consistency to improve readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator and update generics tests to improve type safety and ensure correct transpilation of generics
updated database schema to support auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s default sequence handling
updated byte reading logic in DataInput . java to ensure correct handling of negative byte values to avoid potential issues with negative or negative values
removed assertions for vertical and horizontal physical pixel spacing in ImageParserTest to streamline test code by eliminating unnecessary assertions
updated parent assignment in Component . java to ensure proper retrieval of parent context
reformatted code for better readability and maintainability to improve code clarity
[ pytorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorchtorch
added iteration methods and logic to handle iteration events across multiple controllers to improve event handling and ensure consistent iteration behavior
fix resource leak in file upload
added a call to deleteLogs ( ) in TestRecovery . java to facilitate the removal of logs during recovery tests
added a check for URLs containing " twitter : / / " in BrowserActivity to handle URLs containing " twitter : / / " to ensure proper
wait for host to be ready before run test
updated logResult method to include a true parameter to enable logging of list labels for better debugging visibility
updated the maximum auto retries value in RestTemplateRetryTests from 0 to 25 to improve error handling by allowing more retries for client requests
( chore ) camel - core : fix checkstyle violation
added support for fractional resource types and their conversion methods to enhance resource handling capabilities for improved data management
added a conditional check for file write success in BasicFrame . java to ensure that file operations are only performed if the file is successful
added null checks for tagGroupId and artifactId in UpgradePluginVersion . java to ensure that tagGroupId and artifactId are not null to avoid potential Null
hbase - 20945 use quotaexceedtableQuotainnamespace instead of donotretryioexception to provide good error message
refactor multiple Java classes related to token processing to improve code organization and maintainability
refactor TestFuzzPreLoop class to improve code readability and maintainability
added a check to ensure f0 is non - negative before assigning it to zero in HTSVocoder . java to prevent potential division by zero errors
added null checks for primary and foreign key columns in TableRetriever to improve error handling and prevent potential NullPointerExceptions
improve performance by reduce contention in inputbuffer
added LawnchairPreferences for managing empty screens to enhance user experience by allowing configuration of empty screens based on user preferences
add a warning log when cucumber - needle be deprecate
refactor ShadowThemeTest and ShadowArscAssetManager to use Resources . Theme and VMRuntime for theme management to improve code clarity and
updated failure messages in VerifyFast . java to use ` Arrays . toString ( Arrays . toString ( byteArray ) ` for better readability to improve clarity
no effective change
updated conditional checks and added prototype accessors in ScriptObject and Global classes to enhance functionality and ensure proper encapsulation of prototype properties
replaced ` Collections . shuffle ( readers ) ` with ` Collections . shuffle ( random ( random ( ) ) ` in ` TestFilterDirectoryReader . java
updated displayName assignment logic in UsersAndGroupsSearchProvider to handle cases where the shareWith parameter is different from the shareWith parameter to improve clarity and
updated the path string to use StringUtils . defaultIfBlank for better handling of blank values to improve robustness by preventing potential null pointer exceptions
removed redundant closing braces in multiple Java files to improve code readability and maintainability
changed the variable name from ` getBackupCount ( ) ` to ` totalBackupCount ( ) ` in ` AbstractCacheService . java ` to improve
updated comparison logic in ValidationResult . java to compare page number correctly to ensure proper handling of page page navigation
added a condition to check if the focused widget is not null before highlighting the UI element to ensure that the UI element is only highlighted when the focused widget
fix checkstyle issue
refactor ` ApplePackageDescription ` to utilize ` AppleCxxPlatformsProvider ` for retrieving Apple Cxx platform flavors to improve code
add test to ensure that the sql be correct
updated method names from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to improve clarity and consistency in method naming
fix typo in comment
added a new file ` testGetLoggerNPE . java ` that tests the behavior of logging in a multi - threaded environment to ensure that
added a data map to PathSharingContext and updated related classes to use it to improve thread safety and ensure consistent data handling across the application
[ gr - 25854 ] make sure to cast all field to object [ ] .
added regex pattern matching for " NEXT \ \ s + VALUE \ s + FOR " in NextValExpression . java and updated related classes to
improve error message for unsupported resource bundle .
updated BoundedLocalCache to optimize removal logic and added a test for pending writes in BoundedLocalCacheTest to improve cache management efficiency and
[ quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr quadr
added boundInitialization method to PropertyDescriptor and created Test7192955 . java to ensure properties are correctly bound and validated for MyBean functionality
added a callback for setting the display mode in LwjglApplicationConfiguration and updated LwjglGraphics to utilize it to improve flexibility in handling
added a check to reset buttonsAwatingRelease when it is not null to ensure proper handling of button button states in tabs
fixed line width calculation in linecell
fix typo in error message
replace HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper to maintain the insertion order of parameters in the collections
danielwagnerhall : string . format ( string , string ) return string . format ( string , string ) instead of
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56219
added support for nested joins configuration in multiple test classes to enable proper handling of nested joins in tests
server : do n ' t allow to specify admin - only account
added cache location management for JavacFileManager and modified constructor parameters in CompletionTaskProcessor and updated constructor to include a cursor parameter in CompletionTaskProcessor to ensure
added Hive authorization settings in TestMsgBusConnection . java to ensure proper authorization and authorization for the Hive authorization process
updated assertions in KuduIOIT , XmlIOTest , KuduIOIT , and KuduIO to use assertThat instead of JUnit ' s
use util . createhandler instead of new handler instance
fix ( core ) : fix offset memory calculation in symbolmapreaderimpl
removed debug print statements from TermFilterTest . java to clean up the test output and improve code readability
removed the unused ` Reflection ` class and updated the import statements in ` Jooby ` and ` TypeConverters ` files to streamline the code
refactor ThreadlessExecutor to use isFinished ( ) and setFinished ( ) methods instead of sharedExecutor to improve clarity and encapsulation
refactor DateTimeFormatter to improve error handling and add a test for null context to enhance code readability and ensure proper handling of null values
rename CHUNK _ LENGTH to CHUNK _ LENGTH _ KB for clarity to improve code readability and maintainability
added a WILDCARD case to avoid crashes and created a new class T7034495 with multiple interfaces to addresses issue 7034495 to enhance type safety and prevent runtime errors
replaced do - while loops with while loops in LotsOfEvents . java to improve code readability and maintainability
transclusiondeciderule : do n ' t break if hop character be not a valid hop character
do n ' t print micronaut version in order to make sure we do n ' t print it
added assertions to verify that the " Print _ Area " formula references the correct formulas to ensure that the formula correctly reflects the expected value
added a check to ensure the description is properly formatted before creating a new MindIcon to improve code readability and avoid potential errors when creating a new
updated onHomeIntent method to include internalStateHandled parameter to enable handling of home intent events
replaced repeated calls to ` getPreferDependencyTree ( ) ` with a single variable ` preferredDependencyTree ` to improve code readability and maintainability
added ` showDetails ` methods to ` FileDisplayActivity ` , ` FolderPickerActivity ` , ` FileDetailFragment ` , and ` OC
replaced occurrences of " $ apply " with " apply " in multiple files to standardize function naming conventions
pdfbox - 4892 : fix arrayindexoutofboundsexception in minimalencoder
updated header and parameter handling in SourceBuilder . java to include optional and required headers to enhance clarity in output formatting
added a call to ` mAdapter . notifyDataSetChanged ( ) ` in ` FolderSyncActivity . java ` to ensure the UI reflects the UI
removed the static method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to simplify the class by eliminating an unused method
updated type checking in ` RemoveJavaDependenciesAdapter . java ` and added a new assertion in ` Collections . java ` to improve type safety and ensure correct
( chore ) camel - aws2 - s3 : remove unused method
updated error message in parsertest to be more specific
include the found - content in the test failure message
fix graph building in case of a graalInternalError
mow - 377 : make sure euclidianview . setantialias be n ' t null , fix npe
refactor SQLXML class to improve code readability and maintainability
added a limit parameter to the getOrderBook method to allow users to specify a limit on the order book order book retrieval
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` and updated exception handling to ` HeapOOMEException ` to improve clarity
nifi - 1851 : use streamreadconstraints to prevent arrayindexoutofboundsexception
updated the retrieval of engines from the configuration to an empty string to ensure the lock accurately reflects the current configuration state
updated exception handling and class names in TimerWheel . java to improve code clarity and consistency in naming conventions
improve error message when generate a customized bug pattern
updated assertions in LocalChunkProviderTest to use a constant for wait chunk timeout to improve code readability and maintainability
changed the visibility of the menu item in ListFragment from true to false to disable the uncomplete checklists functionality
refactor DefaultResultSetHandler to enhance result map resolution and introduce Contract class to improve code clarity and introduce a new Contract class for handling
added null checks for defaultHome and updated receiver unregistration logic to ensure proper handling of package updates and prevent potential NullPointerExceptions
added VertxGen annotation to PumpImpl . java to enable compatibility with Vert . x code generation
removed unnecessary casting to FileDisplayActivity to simplify code and improve readability by directly using the mContainerActivity instance to enhance code clarity
added trimming of whitespace in ConfigAttributeEditor and implemented a test for removing trailing and leading spaces in ConfigAttributeEditorTests to enhance data integrity by
refactor classes related to auxiliary classes to improve code organization and maintainability
[ gr - 25800 ] fix classnotfoundexception in classloader .
modified the handling of the " r " byte case to distinguish between " pg pg pg pg pg pg pg pg pg pg pg pg pg pg pg pg
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the handling of the rqst field in ThriftHiveMetastore . java and HiveMetaStore . java to correct the exception type to ensure
added a new module - info . java file containing module exports and dependencies to the com . speedment . runtime . core package to define module dependencies for
added checks for ` _ fillState ` before setting ` _ fillState ` and modified the handling of ` fil fil fil fil fil fil fil fil fil
updated Log4j2LogDelegateFactory to implement LogManager and modified createDelegate methods for Log4j2 to enhance logging functionality and
added checks for server VM availability before executing Java commands to ensure tests only run if the server VM is available
refactor multiple MongoDB - related operations to improve code organization and maintainability
added " org . postgresql . ssl . LibPQFactory " to PGProperty . java to ensure compatibility with PostgreSQL ' s LibPQFactory
disable flaky test interprocesssemaphoreedgestest . testinterprocesssemaphoreedgestest . testinterprocesssemaphoreedgestest . testinterprocess
added sorting functionality for resource keys in EditableResources . java to ensure consistent and case - insensitivity in resource management
added a new class ` OSvTerminal ` and modified ` TerminalFactory ` to register OSV terminal flavor handling to enable support for OSV terminals
added support for additional file formats in ClassType . java to enhance compatibility with additional file formats
replace HashMap with TreeMap for combinedVectors and related collections to ensure sorted order of elements in the collections
updated loop condition in XPathEntityProcessor . java to ensure all names and values are processed correctly
refactor WebSocketPolicy class to improve code readability and maintainability
replaced static references to ` readPhoneStatePermissionGranted ` with instance variables ` readPhoneStatePermission ` and ` accessWifiStatePermission ` to
added a new parameter ` performTemplate - ` to the ` resolveMessage ` method in ` standard ` ` standard ` ` standard ` ` resolve ` `
updated ClassVisitor instantiation to use generics for ClassVisitor and ClassVisitor to enhance type safety and improve code clarity
added a new file LoggingAuditService . java that implements UaaAuditService to provide a logging mechanism for user authentication processes
added null checks for temperature unit and fahrenheit values in TadoZoneStateAdapter and updated temperature setting logic in AirConditioning
fix : do n ' t allow abstract class to be inject with @ be inject
camel - 7999 : camel - http - allow to turn off proxy by default
updated the maximum encoding version from 1.1 to 1.2 in TemplateDTO . java to incorporate the latest features and bug fixes
added a call to jdk . internal . util . staticproperty . jdkSerialFilter ( ) in System . java to utilize jdkSerial
camel - 15105 : camel - core - optimize performance by reduce object allocation
replaced calls to ` forceFinishScroller ( true ) ` with ` forceFinishScroller ( ) ` across multiple files to simplify the code by removing unnecessary parameters
updated the method parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` to improve clarity and consistency in configuration handling
added ` isError ( ) ` and ` error ( ) ` methods to ` ValidationReport ` and updated error handling in ` DisallowValidator
updated inline QSB handling in InvariantDeviceProfile . java to utilize the latest profile constants to improve code clarity and maintainability by
updated ` createClassPath ` method to include ` throws Exception ` and added URL decoding to the ` createClassPath ` method to improve error handling and
updated regex patterns in TransformSteps . java to improve clarity and accuracy of parameter matching
add a null check for the image before use it to avoid npe
replaced hardcoded timeout values with a configurable timeout duration in FaultToleranceTest . java to improve flexibility and maintainability of timeout values
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the URL in Environments . java to allow dynamic configuration of the Docker image URL
[ jbrules - 2088 ] add garbage collection to knowledgeagent test
refactor code to improve code organization and readability to enhance maintainability of the codebase
replaced the method ` createHardLink ` with ` copyFile ` and added a method ` copyFile ` to handle file copying to ensure the target file
rename ` appendToDescription ` to ` getDescription ` in multiple files to improve clarity and consistency in method naming
[ mxnet ] fix rnn op multi - gpu crash
added a check to ensure the XML is an instance of Xml . Document before processing to prevent potential ClassCastException when handling XML input
updated test classes to use AndroidJUnit4 instead of InstrumentationTestCase to improve compatibility with Android testing frameworks
added a new ` GasLimitRule ` and ` ParentGasLimitRule ` to the ` CommonConfig ` class to enhance rule configuration options for
changed the access modifier of the setupData ( ) method from public to private in multiple test classes to restrict access to the setupData ( ) method to
changed the variable ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class to reflect the correct functionality related to transaction management
[ tripleserver ] fix nullpointerexception in tripleservertream . close ( ) ( # 10385 )
[ hotfix ] [ doc ] update doc for jobmanager . restart . strategy . baseurl option
added a new test method ` testIssueProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduceProduce
refactor Common class to improve code readability and maintainability
refactor Launchable . java to improve context handling and logging to enhance clarity and ensure proper resource management during app launching
[ hotfix ] [ stream ] fix typo in deduplication comment
log error when kafka message can not be send to topic
dataes - 315 - add support for persist persist data in spring dataes - 315 .
refactor setCoord method in GeoCoordSys1d , GeoSegment3D , and GeoSegment3D classes to return a boolean indicating success to
added scrolling functionality and logging in AskGestureEventsListener . java to improve user interaction responsiveness during swipe interactions
lucene - 5979 : fix npe in NGram estimator estimator .
updated package imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` to align with the new package structure
updated method calls in StatsLogCompatManager to retrieve label and cardinality from the folder icon to enhance data retrieval from the folder icon to improve accuracy
updated server name retrieval from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
[ c2 ] add test for skeleton predicates .
added a ` setHandler ` method to the ` SelectionHighlighter ` class and modified the equals ` hashCode ` method to include a ` TransferHandler ` parameter
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` to utilize it to improve string conversion
( chore ) camel - test - infra - cdi : migrate test to camel - 19751
updated the condition in JansiWinSysTerminal to check for a specific numeric value instead of a fixed value to ensure proper handling of terminal object creation
added null checks for buffer and buffer objects in BufferUtils . java to enhance code robustness by preventing potential NullPointerExceptions
updated assertion in TestSolrDiscoveryProperties to use File . separator instead of a hardcoded string to ensure compatibility with different operating systems ' file path formats
updated OS detection from " linux " to " windows " and added support for mac mac mac mac mac mac mac mac mac mac mac mac mac mac mac
updated lock handling to use a string representation instead of a file object to improve clarity and flexibility in lock file handling
updated UI reference from " android . widget . TextView " to " apps _ view " in Overview . java to improve clarity and accuracy in referencing
updated references to ` Invocable ` to ` ClientDatagramEndPoint ` for improved clarity and consistency to enhance code readability and
changed the order of step executions from " oreder " to " order " in the GET _ STEP _ EXECUTIONS string to improve cl
updated button handling in LwjglInput to ensure proper handling of unknown input button type
[ te ] add test for task claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim claim
updated logging statements in multiple service response classes to standardize logging format to improve code readability and maintain consistency across the logging framework
updated the expiration time logic in SsoAccessTokenProvider . java and added a new test case in SsoAccessTokenProviderTest . java to ensure
fix test failure on macos
added alarm suppression handling methods to GreetResourceMockedTest and OcMetricsCDIExtensionTest classes to implement functionality for managing
reformatted code for better readability to improve code clarity and maintainability
refactor media database connection handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
replaced instances of ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to ensure proper initialization of metrics context to
refactor file and folder handling logic in OCFileListFragment . java to improve clarity and structure to enhance readability and maintainability of
camel - core : change default hash known host configuration to no
refactor SourceVersion class to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` to validate thread creation logic to ensure that the ` ThreadFactory ` functionality works correctly and handles
updated lock period retrieval logic to support dynamic properties to enhance flexibility in managing lock periods based on dynamic configuration
added a new TicketModel instance to the EditTicketPage to enhance ticket management functionality
changed the value of the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature feature to prevent dimming
updated constructors in various assertion classes to include selfType as a parameter to enhance type safety by allowing selfType to be passed as a parameter
added support for quoting tweets in TweetActivity to enhance user experience by allowing quoting tweets in the application
fix possible deadlock in jmeterthread
rename passthrough codec to decrypt - only
added a conditional check before offering failure in ServerHTTP2StreamEndPoint to ensure failure handling occurs only when necessary
updated error message from " Stling " to " Silent - Mod Modus " in XSLT error message to improve clarity and accuracy in error
make checkpointcleaner thread safe
use rx . subscribe instead of rx . subscribe for mock rest adapter
refactor exception handling in ComponentPresetManager to improve error logging to enhance clarity and maintainability of the code
added HIVE _ RESULTSET _ USE _ unique _ column _ names configuration and updated related test cases to enhance unique column name handling and
fix for ticket : 183 : do n ' t update example text if the locale change
added session validity check to ensure that only valid sessions are processed and exceptions are thrown to improve error handling and prevent invalid sessions
remove exceptionhelper , it be not use anymore
updated keyPairGenerator initialization in JceX25519Domain . java to ensure proper initialization of cryptographic parameters
added a codec setting using Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure consistent postings format handling
[ hotfix ] [ runtime ] add debug log for empty checkpoint range
added support for the " RSA / Ecb / OAEPPadding " algorithm in the OperatorHelper class to enhance algorithm parameter handling for improved
replaced ` Platform . DARWIN _ AARCH64 ` with ` Platform . MACOS _ AARCH64 ` across multiple files to ensure compatibility with
added exception handling for URI resolution in DebugSourcesResolver . java to improve error logging for security issues related to URI resolution
reordered the return statements in AbstractTest . java to improve code readability and maintainability
updated error handling in FileUploadUtils and changed controller configuration to set JERSEY _ ADMIN _ IS _ PRIMARY to true to ensure
replaced usage of ` newByteBuffer ` with ` newUnsafeByteBuffer ` across multiple classes to ensure proper memory management and avoid potential memory leaks
set use _ pipeline _ downloader to true by default
updated calendar DST offset handling in SimpleDateFormat and added a new test class for Moscow time zone formatting to ensure correct date formatting and validate m
refactor code to use local variables for iconCount and currentTopRow to improve code readability and maintainability by reducing repeated method calls
cloudstack - 7473 : do n ' t try to find the default router when the router be not find in the vm
updated StringBuffer implementation to improve performance and reduce memory usage
added a uid field to the rule object to ensure the rule ' s UID reflects the correct context
added a null check before unsubscribing the registry to avoid potential NullPointerExceptions when the listener is null
added a new property ` PRETTY _ PRINT ` and updated ` jsonString ` assignment based on its value to enable flexibility in JSON output format
make access _ table public to allow access to the access table .
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to specify that no resources are found to improve clarity and accuracy in startup failure messages to en
improve error handling in tcp transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport transport
refactor multiple Java classes related to event handling to improve code organization and maintainability
added additional parameters for ` isUpgradeSuspended ` and ` isUpgradeSuspended ` in ` AmbmbariManagementControllerImpl . java ` to enhance
simonstewart : update copyright year to 2009 ( swagle )
added a line to retrieve fields from the writer to improve the handling of field access within the resolver
updated OAuthProperties to use default encryption and signing keys to enhance security by ensuring consistent key sizes across the application
hbase - 17826 add getcolumnfamilycount ( ) method to htabledescriptor ( addendum )
replaced ` AllowedResourceAliasChecker ` with a lambda expression to simplify alias check logic to improve code readability and maintainability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , Serializable , and package - info classes to improve code organization and maintainability
added a reset method to the Cluster interface and implemented a reset method in ClusteredServiceAgent to provide a mechanism for resetting the service
updated the assignment of currentChunkID in ChunkedWriter . java to correctly increment the currentChunkID before using it to ensure the currentChunkID is
added a new abstract class ` AbstractJobExecutor ` to provide a base class for managing job executions in batch processing to provide a standardized way
replaced ` replay ( core ) ` with ` replayFuture = = null ` in ` RecoveryStrategy . java ` to ensure ` replayFuture ` is set
renamed the variable ` hugeStaticBase ` to ` staticBase ` and updated its references in ` HugeResourceTest . java ` to improve cl
added a method ` getServiceIds ( ) ` in ` AbstractConsulClient ` to return a list of service IDs based on the discovery configuration to ensure
replaced random number generation by using a SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom SecureRandom .
improve reporting of parsing failure during parse
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline time calculations by eliminating unnecessary operations
added support for mocking abstract methods in ` CallRealMethods . java ` and updated test cases in ` creatingMocksWithConstructorTest . java
refactor checkPackageAccess methods to accept Class instead of String for better type safety to enhance code readability and maintainability by reducing
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup to improve test structure and ensure proper initialization of plugin data
changed variable name from ` dtm ` to ` model ` in ` ContributionListPanel . java ` to improve code clarity and
added handling for the ` has - touch - interaction - service ` request in the ` TestInformationHandler ` and ` LauncherInstrumentation ` classes to enable
removed unnecessary try - catch block in ConnectAction . java to simplify the code structure and improve readability
updated the type of ` showRulesResult ` from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < String , ShowOptions >
[ j2kt ] add miss final modifier .
added handling for ' & ' character and updated navigation logic in the Less . java file to improve navigation functionality to enhance user experience by allowing users to
simplified the loop for retrieving connected plots by directly iterating over connected plots to improve code readability and reduce unnecessary synchronization
refactor intent creation and share intent handling in Utilities . java to improve code readability and maintainability by reducing redundancy
change constructor visibility from public to default
added basic constraints to the certificate generation process to enhance security by ensuring basic constraints are validated
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` that fails due to incorrect transformation offsets to address the issue of
updated the calculation of ` ps ` in ` TrieDateField ` and ` TrieField ` to use ` precisionStep ` instead of ` field
removed the TaskbarStateHandler class and its associated methods from BaseQuickstepLauncher to simplify the codebase by eliminating unused components
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ( ) ` and ` getDeclaredFields ( ) ` methods on
wait for the hazelcast process to destroy before run the test
replaced ` @ Singleton ` with ` @ PostConstruct ` for the ` save ` method in ` ApplicationSettingsService ` to ensure that the application settings are
[ hotfix ] [ test ] guard against negative value in safepoint
updated thread name field to use string literals instead of char arrays to improve type safety and clarity in the code
updated the DEFAULT _ RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND RAND
make sure stroke be set before use
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] refactor sqlvalidatorimpl # expanddynamic
added a method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to find interested children in a container record to enhance functionality
added import for Net . PMS and set a status code for the frame in HTTPServer to improve user feedback by indicating that the frame is no longer
use getmodifiersex ( ) instead of deprecate getmodifiers ( )
use correct cycle for node cost cost
fix ( as2 ) : fix nullpointerexception in as2clientmanager
refactor Locale class to improve code readability and maintainability
added a clear log button to the error console controller controller controller controller controller controller controller controller controller controller controller controller controller controller controller controller controller controller controller controller controller
added a null assignment for mRecentsAnimationController in RecentsView . java to ensure proper initialization of mRecentsAnimationController
updated caption handling to use LocaleHolder and improved message formatting to enhance localization support and ensure consistent message formatting
added connection pooling functionality and improved resource management in multiple test classes to enhance performance and reliability of database interactions
danielwagnerhall : add opera browser to the selenium - backed selenium - backed selenium
add error dialog when download fails
added new Lifx product entries to the product list to support additional Lifx product types in the application
added asynchronous request handling in OverseerCollectionProcessor and updated related tests in CollectionsAPIAsyncDistributedZkTest to improve replica creation process and ensure
changed the access modifier of PGSQL _ PK _ SUFFIX and PGSQL _ PK _ BYTES _ LIMIT constants from private to package - private
updated LogPanel instantiation to use repositoryId as a reference ID to ensure consistent handling of repository references across multiple pages
bugfix : use xYZYZYZYZYMYMYMYMYMYMYMYMYMYMYMYMYMYMYMYMYMYMYMYMYM
added a new method ` browserDestroy ` to the ` AndroidImplementation ` class to stop the ` browser browser browser browser browser browser browser browser browser browser browser
added a waitForActiveCollection call to the AutoScalingHandlerTest class to ensure that test violations are detected before proceeding with further operations
refactor ScreenTerminal and Tmux classes to improve attribute manipulation to enhance code readability and maintainability by using a more conc
updated the condition in SoftResetAction to include specific controller state checks to enhance the logic for determining if the backend is idle and not idle
disable on - disc stream cache for texture pack reloading
added logic to retrieve the root folder in Request . java and RequestV2 . java to ensure proper handling of the root folder in the media renderer
cloudstack - 4338 : fix typo find by findbugs
added a close method to ensure temporary files are closed properly to prevent resource leaks
added error handling for ` RestClientException ` in ` StandardGitHubRepository ` to improve robustness by catching ` RestClientException ` and logging the response to
log4j2 - 1349 added method getOriginal ( ) to MessageFactory2Adapter to MessageFactory2Adapter to retrieve the original message factory
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to
updated regex pattern in mmm Version . java and ppp Version . java to include a new version number to enhance versioning accuracy in the application
updated tooltip delay and dismissal delay settings in ExtractionModelFrame . java to enhance user experience by improving tooltip responsiveness
refactor ProjectCommand methods to utilize passedInTargetsSet for better target graph creation to improve code clarity and maintainability by reducing
added timezone assignment in TimeTest . java to ensure consistent time formatting in tests
updated MediaSessionConnector . java file to improve session management functionality
use endpoint . getsslsupport ( ) . getsslsupport ( ) to avoid npe
updated method calls in GpsLoggingService to include accuracy and imerial units to enhance logging output formatting to improve clarity and accuracy of location accuracy
added a condition to check if futures are enabled before adapting futures and open positions accordingly to ensure that futures are only processed when
continue issue 793 [ add support for create course in admin account
added a method to set the maximum worker thread queue size in ThriftHttpCLIService to improve resource management by allowing configuration of worker thread queue size
replaced ` getClass ( ) . getName ( ) ) ` with a constant ` PROPERTY _ DISABLE _ WATCHER ` in the ` PathWatcherService
http : / / issues . apache . org / jira / browse / amq - 3088 - do n ' t allow ssl scheme
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindowFunctions
replace assertion with a direct calculation of duration to simplify duration calculation by eliminating unnecessary assertion
fix : return empty javadoc for method with line comment
replaced the method ` getUnsafe ( ) ` with a new method ` isO sx ( ) ` in ` ReserveMemory . java ` and updated the
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure that region close and splitting
hbase - 18510 hbaseadmin should log the procid in case of timeout
http : / / issues . apache . org / jira / browse / jira / browse / jira / browse / jira / browse
refactor YamlChangeLogSerializer to use a container map for database change logs to improve readability and maintainability of the code
updated output formatting in SchemaPrinter . java to improve clarity and consistency in output formatting
do n ' t generate schematic for schematic without extension
replaced ` getContext ( ) ` with ` getActivity ( ) ` for initializing ` HomeFragmentNowPlayingRow ` and ` HomeFragmentFooterRow ` to ensure
added ` @ GenericGenerator ( name = " native " ) ` to multiple Java files and updated ` @ GeneratedValue ( strategy = " native
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature by eliminating unnecessary country handling
http : / / issues . apache . org / jira / browse / jira / browse / jira / browse / browse / browse /
make sure log level be set on applet , not applet
added a new constant VALUE _ TYPE _ EMPTY and modified the handling of type initialization in the Value class to improve type handling for empty values to ensure proper
updated null and equality checks for ' group ' and ' Is _ Groups ' methods to use ` equals ( ) ` method to improve code readability and
refactor Liquibase and LiquibaseDropAll classes to improve code organization to enhance maintainability and readability of the codebase
refactor SimplexNoise class to improve code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated corresponding test cases to provide a way to create a graph with
fix typo in getminrowsize ( ) and getmaxrowsize ( ) .
fix metadatacollection to not be serialize
modified the handling of the last element in the native array in the native array to prevent duplicate entries in the native array to ensure that duplicate entries are removed
updated file upload logic to set the parent ID of the current file to ensure the upload process correctly references the parent file
added a new test class UTF8ReaderBug for handling supplementary characters in XML to ensure correct parsing of supplementary characters in XML input
add a test case for the proxybuilder .
updated test assertions in BinanceIntegration . java and BinanceUsIntegration . java to include the " ethbtc @ depth " format to ensure tests are
added resetAllocation ( ) method to SimpleParallelizer and Wrapper classes to ensure proper resource allocation management
removed import of AssertTree from AmbariManagementControllerTest . java to streamline dependencies and improve code clarity
refactor system property handling to synchronize access to system properties to ensure thread safety when modifying system properties
refactor ModelUtils class to improve code readability and maintainability
refactor methods in AbstractDoubleArrayAssert to improve code readability and maintainability
updated calculations for text width and height adjustments in Legend . java to ensure proper text layout adjustments based on the length of mLabels array to improve
added delay and abort tests in ` CodeFirstSpringMvc ` and ` TestResponse ` classes to enhance test reliability by validating delay and
updated the handling of term frequency in MoreLikeThis . java to use an array instead of a single string to improve performance by avoiding the need for
replaced ` CxxLink ` with ` BuildTargetSourcePath ` in ` Omnibus ` to improve clarity and maintainability of the code
disable versioning by default .
changed filePaths from Collection to List and added numberOfFiles field to track the number of files processed in the media folder
updated command line argument handling in AidlStep . java and GenAidlTest . java to ensure correct command line arguments are passed to improve command line
add test case for issue # 979 ( # 980 )
added a comment to indicate that the test is currently disabled or not
[ hotfix ] [ runtime ] remove unused exception in embeddedleaderservice
fix bug with multiple discovery client . fix # 1654
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in method naming
[ hotfix ] [ doc ] [ doc ] update doc of jobmanager . jobmanager . jobmanager . jobmanager . jobmanager . jobmanager
replaced ` updateNoWidgetsView ` and ` updateNoWidgetsView ` methods with ` updateRecyclerViewVisibility ` in ` WidgetsFullSheet .
added class loading for WstxInputFactory and WstxOutputFactory in XmlUtil . java and updated tests in MultiVersionXmlParser
refactor test setup in AuditAliasCommandIntegrationTest to use JUnit ' s Before method to improve test initialization and ensure proper resource management
removed unnecessary log statements in WidgetsFullSheet and WidgetsRecommendationTableLayout classes to improve code clarity and reduce log clarity in logging output
( chore ) camel - cxf : disable test that do n ' t pass
added error handling for periodical refresh failures to improve robustness by logging exceptions during the refresh process
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use Lombok ' s @ RequiredArgsConstructor and improve
added a method to check default background fills in HSSFCellStyle . java and refactored color retrieval in HSSFPalette . java
refactor ZonedDateTimeFormatterBenchmark to improve code readability and maintainability
refactor ` DistributedUpdateProcessor ` to use a new method ` shouldBufferUpdate ` to improve readability and maintainability of the code
added a null check for the stage in SimulationListHandler to ensure proper handling of cases where the motor is not present
do n ' t replace a block if it do n ' t exist
updated ExtendedMasterSecretExtension class to enhance security configuration options
changed the declaration of the processor variable to be final to ensure immutability of the processor reference
added a listener to notify the process task when the end of a stream has been reached in WritableKeyProcessor to ensure proper handling of output stream termination
added " CUBE " to the MySQLDatabase class to support additional database types in the application
added a try - catch block to handle potential IOException when removing the snapDir to improve error handling and prevent application crashes
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related test class names to
replaced reflection - based field access with direct calls to ` httpClient . connectTimeoutMillis ( ) ` and ` httpClient . readTimeoutMillis ( ) ` in
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the ' os ' parameter in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
g3d - 312 : make sure avDockpanel . getparentsplitpane ( ) do n ' t return null
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and updated its usage in the ` jailerMain ` method
refactor HttpRequest class to improve code readability and maintainability
added a shared preference to store the unread item to manage user notifications effectively
fix npe in isnullnode when the object be null
updated rendering parameters and improved camera handling in Box2DTest , Pong , and PongTest classes to enhance rendering accuracy and
updated layout management for mCommentsRecyclerView in ViewPostDetailFragment . java to improve layout handling for tablet and landscape orientations
change log level from trace to warn for background operation aborted
add some debug information to help diagnose
mow - 1010 : do not invoke app . invokelater for ie10 +
updated the ` getNotificationUsers ` method to include an ` event ID ` parameter to enhance notification user retrieval to include device device device device device device
use srtm _ zip _ geo _ tiff instead of droppr .
removed unnecessary removeAll ( ) method calls in MotifFileChooserUI . java and added a new class bug 6520101 . java with a
change hollowui . handle ( ) to return true instead of void
refactor ` getRuleOptional ` and ` getRuleOptional ` methods to return ` Optional < T > ` instead of ` Optional < T
added a condition to hide the transportSpinner based on whether it ' s a success to enhance user experience by hiding it to improve user experience by ensuring
added null check for attributes _ field in mmm Attr . java and created new classes T7073477 . java and T7073477 . java
added a check to return early if the back button is pressed in multiple fragments to improve user experience by preventing further actions when the back button
added support for long view index in QueryServices , QueryServicesOptions , and MetaDataClient classes to enable or disable long view indexing based on configuration to
updated string concatenation from " V " to " v " in SDRTrunk . java to ensure consistent formatting
replaced ` getPath ( ) ` method with ` StringUtils . cleanPath ( privateKeyPath . getPath ( ) ` in ` PrivateKeyParserTests . java `
removed columnPosition parameter from the diffDropColumn method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriter configuration to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest test version
hbase - 15410 importtsv should not ignore unmatched column family
[ java ] : change the type of logRecordingChannel and logSubscriptionId to long .
replaced direct calls to ` startActivity ( intent ) ` with a safe safe safe safe safe safe safe safe safe safe safe safe safe safe safe safe safe
added a check to prevent processing of a specific JSON node in PoloniexStreamingService to avoid processing of an empty or null input
[ hotfix ] [ doc ] fix typo in procedure doc
updated resource bundle loading to use Locale and ClassLoader for better localization support to enhance localization support in the application of resource bundles
[ j2kt ] add support for normalize array creations in kotlin
updated the condition for handling term enumeration and counts in PerSegmentSingleValuedFaceting . java to improve handling of term enumeration and count management to ensure correct
fix nullpointerexception in metadata . get author ( ) ( # 9482 )
added a new test class ` OSGiTest ` and modified ` mmm module - info . java ` to include a static dependency for `
fix for http : / / issues . apache . org / jira / browse / amazonecraft / browse / amazonecraft /
hbase - 2462 hbase - 2462 addendum fix for hbase - 2462 addendum
fix : scan ( ctstatement ) should be cast to ctstatement
added hasUserData method to the SimpleFeatureImpl class and a corresponding test in SimpleFeatureImplTest to enhance functionality to check for user data availability
removed unnecessary ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` classes to simplify method signatures and improve
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the enableLogging method from JavaCompiler . java to simplify the code by eliminating unnecessary logging functionality
added a new file ` InJavaSourceSet . java ` that includes a class for handling Java source sets to facilitate the identification of Java source
updated the file path for the WFPC2u5780205r . fits file from " / test - documents / WFPC2u
added a static method ` createGetter ` to the ` ReflectionHelper ` class to facilitate getter creation for objects with specified attributes
removed the check for useExternalStorage in DirectUpload . java to simplify the conditional logic for SDK version checks
added a configuration option for indexing without commit in IndexerMapReduce and updated related classes to utilize this new setting to enhance flexibility in indexing
cloudstack - 2088 : do n ' t allow disk offering to be create without snapshot .
added a null check for ` result ` in ` ToHtml ` and updated assertions in ` BaseTestCellComment ` to ensure that ` result ` is
added null checks for ` amountToAdd ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper handling of
added a new test class ` Issue382 ` for handling different error types to ensure proper exception handling for various error scenarios in the application
replaced the ` signum ` method with a direct call to ` Integer . signum ` in ` PositionUtils . java ` to simplify the code by elimin
added a condition to hide the text field if it is not present to improve user interface clarity by hiding it when not needed
fix ( ctimport ) : fix npe in ctimportimpl # getimportkindfromreference
simonstewart : use getprofile ( ) instead of : : getprofile ( ) .
fix liquidblock not pick up liquid block ( # 8685 )
http : / / issues . apache . org / jira / browse / amq - 2902 - fix test failure
updated time zone setting from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure correct
renamed ` existingObservation ` to ` distinctObservation ` and updated related methods for clarity to improve code readability and maintainability
updated system property settings for Nightly , Weekly , Weekly , and BadApple in LuceneTestCase . java and RunListenerPrintReproduce
renamed the ` createLogger ` method to ` getOrCreateLogger ` and refactored logger initialization logic in ` SQLEditorSupport ` to improve cl
add denyaccess ( class , method , proxy ) in graalcontext .
update pgraphics2 to use raster instead of rgb
updated the method to verify transactional properties in HiveAbstractReader to ensure the correct dataset is used for processing transactional properties
updated the conditions for determining if a scroll should be scroll to optimize performance by avoiding unnecessary overlays during scroll scrolling
implement unmodifiablebatchbuilder for jdbc batch building
improve error message for unexpected input
added a test for spying on a class return value in PartialMockingRetainsStateTest . java and created a new MockWithStaticStateDemo
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing for union queries
added error handling for action execution in SecurityUtil . java to improve robustness by handling potential null pointer exceptions during action execution
refactor error handling by storing the error code in a variable before throwing an exception to improve code readability and provide more informative error messages
camel - 7999 : rename endpointhelper . reslovestringparameter to resolveparameter for clarity
updated the logic for handling unscaled values in RexNodeConverter to improve precision and scale handling to ensure correct SQL type conversion to enhance accuracy in SQL
replaced direct calls to ` getAttestationMetadata ( ) ` with ` Optional . ofNullable ` for vendor and device properties to enhance null safety
updated the assertion in WalletTestAccount003 to use Long . toString ( now ) instead of a string representation of the current time to ensure that the test
replaced ` AxialStage ` with ` RocketComponent ` and refactored selection logic in ` DesignPanel ` to improve code clarity
added a long - running time parameter to allow configuration of long running time in the application
added a new class ` Ideas _ 2012 _ 05 _ 21 ` with a new class ` Ideas _ 2012 _ 05 _ 21 ` and updated
replaced ` sun . misc . Service ` with ` java . util . Service ` and updated method signatures in ` HttpServerProvider ` , ` ScriptEngine
[ geot - 6892 ] fix gml3 encode for double
updated assertions in TestRestClientRequestImpl . java to improve readability to enhance clarity and maintainability of the test code
updated the condition in MissingUniqueConstraintChangeGenerator to check against the reference database to ensure proper handling of unique constraints based on the reference database
refactor ` addAndroidConstants ` method and streamline asset path handling in ` IjProjectTemplateDataPreparer . java ` to improve code
replace assertions with await statements in multiple test files to improve test reliability and avoid flakiness
added user _ args and timestamp to the map map in ChromeTraceBuildListener to include additional context for the build process
use modulesupport . getresourcebundle instead of resourcebundle . getbundle .
[ hotfix ] fix typo in hepplanner
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval and display of exchange metadata for Therock exchange
renamed FloatingDecimal and FormattedFloatingDecimal classes to strictfp and FormattedFloatingDecimal classes , and added a test for strictness in
removed unparseIdentifier method call from columnNamesBuilder appending to simplify column name handling
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and updated method parameters in ` BlockStatementTemplateGenerator `
do n ' t instantiate static class that be synthetic
removed projectFilesystem . getPathForRelativePath ( basePath ) from WorkspaceAndProjectGenerator . java to simplify path retrieval by directly using basePath
added handling for pending rescues in IkStepDefinition . java to manage and unregister pending rescues during execution to improve rescues management
added hashCode and equals methods to various type classes to ensure proper comparison and hashing for these types
added a new method ` getSyncLevel ` to the ` SyncLevel ` enum and updated its usage in the ` UpdateLog ` class to enhance
refactor controlcommandstest to use try - with - resources
updated condition in RecoveryStrategy . java to include a check for recovery state to ensure that recovery state is not processed during construction
fix compile error in opencv _ core . java
added SDKPath field and modified processExecutorParams to use it to ensure the process execution environment includes the SDK path for better configuration
[ hotfix ] [ runtime ] remove unused code in transientblobcleanuptask
cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code clarity and maintainability
added conversion for row type in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure proper handling of row types during replication
refactor BetterBlockPos class implementation to improve code clarity and maintainability
fix compile error due to class load issue
refactor nightly warning handling by replacing version string checks with a dedicated method to improve code readability and maintainability by centralizing version
added handling for Oracle database strings in LoggingExecutor and JdbcExecutor to ensure proper processing of trailing slashes in SQL statements
add a system property to disable null deref
make maintest pass on ci
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and SLIDER _ MARGIN constants
added a call to ` addMultifactorAuthenticationProviderBypass ( ) ` in ` DuoSecurityMultifactorProviderBypassConfiguration . java ` to
reformatted method signatures in MaxRectsPacker . java for improved readability to enhance code clarity and maintainability
jbrules - 2835 : fix some javadoc warning in kjar
added help page functionality to PMS and refactored event handling in HelpTab to enhance user experience by providing a dynamic help page and
added GeocodeProviderFactory and ConstantsBase classes to facilitate geocoding functionality in the application
updated import statements for ` CharArraySet ` in ` LuceneAnalyzerUtil . java ` and ` LuceneTokenizer . java ` to align with the
added a test method to validate exception handling in OptionTest and ResourceManagerImplTest to improve test coverage and ensure proper exception handling in tests
fix : do n ' t delete object that be not the same object id
refactor SegmentsInfoRequestHandler and CollectionsAPISolrJTest to improve document handling and configuration to enhance code clarity and ensure proper
updated the calculation of ` numPredictiveAppCols ` in ` DeviceProfile . java ` to ensure ` numPredictiveAppCols ` is set to
added a method ` hasScalarSubqueryInput ` in ` JoinUtils ` and refactored related logic in ` DrillJoinRelBase
add blockbuildcraft class to make it easy to remove block from the inventory .
updated layout parameters for drag - and - drop in DeviceProfile . java to ensure proper positioning of elements in the user interface
replaced ` run ( ) ` with ` start ( ) ` in ` YahooSession . java ` to ensure proper execution of the session management code
initialized the ` ms ` variable to ` null ` and modified error handling in ` HiveMetaStoreClient ` and ` HiveMetaStoreClient ` to ensure
updated ` getDisplayScript ` method to use ` DISPLAY ` category instead of ` getDefault ( ) ` to ensure proper handling of display locale based on the
updated references to ` ZkStateReader . BASE _ URL _ PROP ` to ` ZkStateReader . BASE _ NAME _ PROP ` in multiple
replaced ThreadLocalRandom with Random for random number generation to improve performance and reduce contention in tests
added a check for the launcher is ready before executing backup operations in LauncherBackupHelper . java to ensure that backup operations are performed only when the launcher
updated exception messages in Cell . java to include context for invalid negative negative values to improve error reporting to provide clearer error messages for better debugging information
add unit test base on user forum issue
updated variable and method names from ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming
refactor ShadowProcess class to improve code readability and maintainability
fix filemessagehistorytest failure
added debug logging statements to the Grasscutter class to improve visibility and tracking of various logging levels in the application
changed the visibility of ` highlightCnstScrRngQuery ` from instance to static and updated its usage in ` setHighlightCnstScrrng
added a check to ensure the workspace ' s state is not NORMAL before exiting overview overview overview overview overview overview overview overview overview overview overview overview overview overview overview
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
do n ' t call info . notifynewtemplate if cacheable
added new constant SCOPE _ SOLR _ CORE and updated related classes to utilize these constants to improve code readability and maintainability by
updated the SQL table creation statement to specify a primary key in the database to ensure the table structure accurately reflects the primary key for the measurement
update pantheon command to use ` -- permissions - config - file ` instead of ` -- permissions - config - path `
refactor HttpSession handling logic in HttpSessionContextIntegrationFilter . java to improve clarity and maintainability of session creation checks
added a new file ` TestIfWithDeadRegion . java ` containing a test class ` TestIfWithDeadRegion ` with a ` Supplier `
rename ud to english _ usd to english _ usd
refactor SnowflakeIdGeneratorTest to use HighResolutionTimer for concurrent access testing to improve test performance and ensure proper execution order
added a static UI feature to AppSettings and modified toastbar behavior based on settings to enhance user experience by allowing dynamic control of toast notifications
refactor the drop method in WindowsSecurity to use a try - finally block for resource cleanup to ensure proper resource management and prevent memory leaks
updated parameter handling in SamlRedirectLogoutHandler and WhitelistLogoutHandler to use setParameterIfAbsent instead of setParameter to improve clarity and
updated the ` showMessageDialog ` method in ` MEncoderVideo . java ` and ` NavigationShareTab . java ` to use ` Messages ` for
tika - 770 -- add support for xlsx format in tika - ooxml and tika - ooxml format
updated the ` join ` method in ` FixJava ` and ` FeaturePathFeatureSupplier ` classes to use ` Object ` instead of ` String
( chore ) camel - spring - xml - enricher - improve xml output
fix migration coordinator to remove version when update
added debug logging and updated audio device handling logic in DeviceConfiguration . java to improve debugging capabilities and ensure proper device management
added WebsocketConfig for managing WebSocket connections to enable configurable maximum frame size settings for WebSocket connections
fix : cache validation listener do n ' t work in parallel mode
added a check to ensure the content length is not empty before adding it to the document to avoid adding empty or null values
[ hotfix ] [ hotfix ] fix thread safety issue in defaultSolverjob
added error handling for PathAlreadyExistException when creating timeseries to improve robustness by ignoring specific exceptions for non - existent time series paths
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide a way to check the result of the ` check `
changed access modifiers of methods in ShadowActivityManager , ShadowMeasuredParagraph , ShadowSettings , and ShadowStaticLayout to protected to enhance encapsulation by restrict
server : fix npe in listpublicipaddresses api .
updated HttpParser to return an empty string instead of null and removed a test case for a specific case to simplify value handling and improve test coverage
refactored thread initialization logic into a separate method ` threadCompleteInitialization ( ) ` to improve code organization and readability by consolidating
added a method to retrieve an external storage directory and created a corresponding test class to ensure that the external storage directory is created when the type is
[ jbrules - 1086 ] add test case for mvel 2.1 . 0 coercion
updated logging configuration to use string concatenation for improved readability to enhance code clarity and maintainability
improve error message in actionnode to include exception cause
fix issue with sip teleportation with tel :
refactor shared file visibility logic in FileListListAdapter . java to improve clarity and maintainability of the code
removed the deprecated HIVEOPTSORTDYNAMICPARTITION configuration option to streamline configuration options for better clarity and maintainability
refactor ExecuteStatementOperation and Operation classes to use constants for configuration overlays to improve code readability and maintainability by avoiding magic strings
replaced ` Lists . newArrayList ` with ` Arrays . asList ` for list conversion in ` BTCMarketsWebSocketSubscriptionMessage ` and `
[ geot - 6763 ] fix test to work with orc file
added a method ` onErrorInStep ` to return null in the ` StepListenerSupport ` class to handle exceptions more effectively during step execution
refactor Wallet class to improve code readability and maintainability
camel - 7999 : camel - netty - http - make it easy to configure http encoding .
replaced System . out . println statements with log statements in TestNonBlockingAPI . java and TestNonBlockingAPITest . java to improve logging
added a check to prevent exceeding the bounds of the connection list to prevent ArrayIndexOutOfBoundsException when accessing the connection list
pmd : fix false positive with method with the same name
added functionality to retrieve and manage platform - managed objects in ManagementFactory . java and created ExtendedPlatformComponent . java to enhance the management capabilities
added calls to ` replace ( ' " " " ) ` in ` BasicQueryTest . java ` to ensure proper SQL string escaping
updated resource paths in BleutradeDtoTest , BleutradeextendedDtoTest , and BleutradeCurrenciesReturn tests
refactor TextEscapeUtils class to improve code readability and maintainability
added a filter parameter to the FunctionQuery in AbstractSpatialFieldType . java and updated its usage in TestSolr4Spatial . java to enhance query filtering
updated auto email handling in GpsLoggingService and added a post call in AutoEmailHelper to ensure the email is sent correctly after sending results
use set . iterator ( ) instead of arraylist . get ( i )
added synchronization to the stopScan method to ensure that previous results are removed before scanning
updated filter logic in HiveMetaStoreClient and TestFilterHooks to include a boolean parameter for filtering to enhance flexibility in partition retrieval based on server
updated TicketModel and TicketBasePage to include " Abandoned " status and modified list initialization in TicketModel and TicketsPage to
removed the initialization of columnAliasPrefix in multiple platform classes to simplify the code by eliminating unnecessary null assignments
replaced instances of ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` to
add nonnative videobridge support to the engine
fix a bug in pdfcopy that could lead to a nullpopo
added a daemon mode option to the OptionEnum and implemented a daemon mode feature in TerminalClient to enable the application to run in daemon mode for improved
added a new file ` FlushIndexTask . java ` that implements a ` PerfTask ` for flushing the index buffer to facilitate performance monitoring and
patch by jbellis ; review by stu hood for cassandra - 1147
added " SEASONS " to the expected output conditions in MediaLibraryFolder . java to support handling of SEASONS alongside existing
added a new file ` LocalSocketAddress . java ` to check if IPv6 is unavailable to ensure that the socket socket socket socket socket socket socket socket is
updated grid size coordinates in GridSizeMigrationTask . java to correct grid size calculations to ensure proper grid size representation during migration
replaced instances of ` getName ( ) ` and ` getName ( ) ` with ` name ` and ` name ` in ` SerializerPojo . java `
added read - only context handling to the Context class to improve transaction management and prevent operations on read - only contexts
refactor LookAndFeelCommand class to improve code readability and maintainability
updated the logic for determining the last run end in BlockBoxing . java to use ceiling instead of floor floor floor floor floor to ensure correct handling
updated assertions in GracefulStopTest to check for specific exception types to ensure proper handling of EOF and EOF exceptions to improve test reliability by verify
refactor HTTP response handling in NetJavaImpl . java to simplify lock management and improve code readability
refactor NetworkParameters class to improve code readability and maintainability
added a check for allowAccountAssetOptimization in DynamicPropertiesStore to ensure proper handling of account asset optimization settings
added a new constant J9 _ GC _ POLICY _ NOGC and defined it in VM . java to define a constant for garbage collection policy
added validation for contract contract in TransactionCapsule to ensure that only valid contract contracts are processed
[ core ] remove exceptiontype checking rule
updated resource path in HelpContent . java and improved error logging in HelpContent . java to enhance localization support and provide clearer error messages to
added a new file ProcessorInfo . java to calculate the number of Java processors based on available processors to enhance the system ' s capabilities by
added support for generate html output with a stylesheet
use jakarta dependency injection for logback xml location
added a new method ` handleUpdate ` and modified the parameter handling in ` HostLevelParamsHolder ` and ` ServiceComponentRecoveryChangedEvent ` to
updated the ` SleuthTagPropagationAutoConfiguration ` and ` SleuthTagPropagationAutoConfigurationTests ` classes to use ` @ ConditionalOnProperty
refactor rustDepType assignment to use a switch statement for better clarity to improve code readability and maintainability by consolidating related logic
updated oauth2LoginLinks method to accept query parameters and added error handling to enhance error reporting for OAuth2 authentication failures
hbase - 26943 hfilereader . getfirstkey ( ) should not seek to the end of the file if the file do not exist
hhh - 15631 deprecate generatetime . never in favor of generatetime . always
fix ( core ) : add test for layer norm
refactored ` showShareFile ` methods across multiple activities to use ` getFileOperationsHelper ` for consistency to improve code maintainability and reduce
added a new test class LiquibaseUpdateMojoExecutionTest for Liquibase update functionality to facilitate testing of Liquibase
convert proxyType to uppercase to ensure consistency in proxy type handling
add mod _ minecraftforge . java to make dungeon lod harder .
refactor JdbcDatabaseSnapshot to improve handling of table - specific column retrieval to enhance efficiency and clarity in cache retrieval logic based on
added a Container component with a border to the CSS border to enhance the styling of a dashed dashed dashed dashed dashed dash
added a new class ` RetryAutoConfiguration ` and refactored ` RetryLoadBalancerInterceptor ` to accept a ` RetryTemplate ` parameter to en
updated layout parameter from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to ensure the layout aligns correctly with its
updated task name generation to use current time instead of current time to improve accuracy in task name generation
added error handling for invalid input parsing in ServiceResourceProvider to improve robustness by gracefully handling potential exceptions during input parsing
do n ' t create a new index if the index do n ' t exist
[ giac ] [ giac ] do n ' t attempt to round x [ x ^ 2 , x ^ 2 ]
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
deprecate producertemplate . getmessage ( ) in favor of getmessage ( )
refactor JLayer class to improve code readability and maintainability
fix test which randomly fail on slow ci server
refactor : remove internal method from md5helper
refactor viewTreeObserver usage to use mTaskRecyclerView directly to improve code readability and reduce variable scope
refactor Response class to improve code readability and maintainability
use long . max _ value instead of long . min _ value to avoid overflow
fix ` ` the securitypanel be too small and can not hold the string ` ` compare with partner ' ' , report by werner dittmann
added null and empty checks for replies in TweetActivity , TimeLineCursorAdapter , and TimelineArrayAdapter to ensure replies are not null before processing to
updated the ` toString ( ) ` and ` equals ( ) ` methods in ` HitbtcBalance ` and ` HitbtcAdaptersTest ` classes
fix ( sql ) : fix for order by in ( ) and in ( ) query with in ( )
change return statement from ' s ' to ' addrs . toString ( ) ' in RetriesExhaustedWithDetailsException . java to ensure proper string representation of
do n ' t open the file after the file be open
updated imports from ` org . apache . http . impl ` to ` org . apache . http . client5 . http . client
pipe power wood : fix pipe power wo wo wo wo wo wo wo wo wo wo wo wo wo wo wo wo wo wo wo wo wo wo
added a check to delete the temporary file in SessionState . java to ensure temporary files are removed to prevent resource leaks
updated the constructor parameter name from " tid " to " id " in BitstampWebSocketTransaction . java and added unit tests in BitstampStreaming
added time limit checks in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplaySubjectTest and ReplaySubjectTest to ensure
fix checkstyle issue in citationstylegeneratortest
added a new SQL statement for inserting HDR video fields into the media table to enhance the functionality of the media table by allowing dynamic column
ggb - 3773 : add show _ only _ definition _ for _ exam exam exam exam exam exam exam exam exam exam exam exam exam exam
fix a nullpointerexception in sip comm
hbase - 17826 metareader should cache scan for scan root if scan root be enable
[ hotfix ] [ table - planner - blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to provide a debug option for enabling transient taskbar functionality
[ hotfix ] [ doc ] fix typo in access execution doc
added a condition to set the density to 3 if the scale is 3 to ensure the density is set to 3 when it is explicitly specified
renamed ` optional ` to ` vararg ` in the ` Parameter ` class and updated related methods to improve clarity to enhance code readability
[ hotfix ] [ runtime ] [ state ] do n ' t swallow exception in log message
refactor assertions in TestClusterUpgradeUtils to use a lambda expression for clarity to improve readability and maintainability of the test code
updated warning messages and improved async context handling in AsyncHttpConnection and AsyncContextTest classes to enhance clarity of logs and ensure proper
added a boolean parameter ` showArrow ` to the method signature of ` SearchUiManager ` to control the display of an arrow in the search interface
added a break statement in mmm Database . java and modified lock mode handling in mmm Database . java to ensure proper handling of lock mode in the
[ gr - 30844 ] skip big endian test on linux / amd64 platform .
added handling for Integer and StringValue input types in Scalars . java to ensure proper conversion of input types to string representations
updated validation logic in CreateTableStatement . java to handle cases where keyAliases is empty or multiple primary keys are required to improve error handling by providing cle
added conditional logic to set drawable resources based on LMP status to improve UI responsiveness for devices in land land mode
fix ( vm ) : throw an exception if no isolate is present
added new header configuration methods for content type , cache control , and HTTP strict transport security to enhance header management and security features in the application
refactor ObjectEnumerableAssert class to improve code readability and maintainability
[ grid ] rename smoke test to distributed cdp test
added type attribute to @ aggregateroot to fix test failure
added support for the inclusion of prebuilt libraries in Python binary descriptions to ensure proper management of Python libraries within the build process
updated client authentication handling in NetServerOptions and HttpServerOptions classes to improve flexibility in client authentication configuration
updated directory paths in Hive and Metastore configurations to use the current user ' s name instead of the system ' s name to ensure that the correct
refactor task view handling in RecentsView . java to improve clarity and efficiency to enhance readability and efficiency in task view management
make amqp test more stable
removed the clearAll ( ) method from DataTableTopComponent to streamline data processing by eliminating unnecessary operations
rename templateflowcontroller to flowcontroller to avoid confusion
fix ( sql ) : fix exception when consuming all child pipeline
added import statement for ClassLoaderHandler in mmm module - info . java and ppp module - info . java to utilize ClassGraph for class loading functionality
make solve ( ) return the best solution , not the best solution
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive fields in JSON output
added a null check for the throwable variable in PlotListener . java to ensure proper handling of the throwable variable to prevent potential null pointer exceptions
refactor query info retrieval to use a local variable to improve code readability and reduce redundancy
fix auto - wo n ' t do anything if there be no item .
added a null check for the parser before parsing the hdop attribute to prevent potential NullPointerException when parsing the hdop attribute in Gl200TextProtocolDecoder to
renamed time column names to incoming time column specifications to improve clarity and consistency in naming conventions
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token004 . java
added support for create a new instance of container with an external context .
use longtasktimer for ` ` active ' ' and ` ` active ' ' tag in ` ` timer ' '
updated SYNC _ DELTA _ RATE from float to double and adjusted calculation of refTime in AdaptiveFetchSchedule . java to improve precision in time calculations
deprecate unwrapped fragment expression in favor of thymeleaf one
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when accessing shared data
http : / / issues . apache . org / jira / browse / amq - 4705 - fix for http : / / issues .
added new color constants and refactored the extractInto method in ColorExtractionAlgorithm . java to improve color handling and support for dark text
added accessibility check for the data folder in SketchBuilder to ensure that only accessible data folders are included in the source folder list
updated the ` appendContent ` method to accept a boolean parameter for title inclusion to enhance flexibility in handling note content formatting
removed initialization of SessionRegistry in ConcurrentSessionControllerImpl . java to allow for dynamic configuration of SessionRegistry
added logging for reconnection handling in NettyStreamingService to improve error reporting for reconnection failures
replaced instances of ` Factory ` with ` Proxy ` in multiple test files to ensure compatibility with the internal Javassist proxying mechanism
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool ` to improve performance and reduce contention in thread pool management
refactor SocketExceptions to use String . join for message construction to improve readability and simplify error handling to enhance code clarity to enhance code
added a check to ensure the view path is under the repository directory before processing the view view to avoid processing the view view if it is below the repository
remove unused tab header section from jabrefframe
added ` - XX : + UseCompressedClassPointers ` and ` - XX : + UseCompressedClassPointers ` to multiple test files
added error logging for non - active and rePLAYing update states in PeerSync . java to ensure proper handling of update logs during synchronization
deleted the ConnectionHook . java file to remove unused code that is no longer needed in the project
solr - 12313 : do n ' t wait for replica in sync with leader in distributedupdateprocessor
( chore ) camel - swagger - java : upgrade to camel - blueprint 3.0 . 0
[ apex ] update apex support to version 48 ( spring ' 20 )
updated multiple Java files to improve code organization and maintain consistency across the project
replaced direct instantiation of AggregateEngine with IoTDBThreadPoolFactory for thread management to improve performance and resource management in the application
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory efficiency and resource management
added scrollToPositionWithOffset calls for rvThumbnails to enhance user experience by scrolling to the correct position in the layout
fix ( sql ) : fix exception when use timestamp column alias ( # 3419 )
refactored animation logic in LauncherAnimUtils and added new animation methods in LauncherStateTransitionAnimation to improve animation handling and ensure proper
added a condition to disable the default User - Agent in HttpClient if configured to enhance flexibility in HTTP requests based on user - defined
added a ` ApplicationSettingsService ` dependency and modified ` handlePubsub ` method to check if ` Pub pub pub pub pub pub pub pub pub pub
changed the visibility of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
updated the check for anonymous or synthetic classes in StubJarClassEntry . java and modified the return logic in CalculateAbiFromClassesStepTest . java
[ ds - 3088 ] add a web app to make it easy to run web ui test
added a null check for ` leftTableAlias ` in ` CalcitePlanner ` and implemented a method to retrieve the table alias in ` RowResolver `
updated identity key format in JobGenerator . java to improve clarity and consistency in key identification
updated broadcast transaction logging to use warning instead of info to improve clarity and specificity of log messages related to transaction failures
fix checkstyle violation in basicmaptest
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` fields in ` HiveClientConfig ` and ` TestHiveClientConfig `
added an ` fromString ` method to the ` TlsClientCertPolicy ` enum and refactored client certificate handling in ` GitBlitServer
removed the retry logic for handling " alert " and " failed to subscribe to authenticated feed " message in KrakenFuturesStreamingService . java to
added WebSocket protocol handling to WebsocketRoutingFilter to support customizable WebSocket protocol settings
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of query result fetch operations
updated the string formatting for dimensions to improve clarity and consistency in the representation of dimension dimensions
refactor InnerClass and InnerStaticClass handling in FinalizePrivateFieldsTest and FinalizePrivateFields to improve clarity and structure to enhance the
rename UnexpectedJobExecutionException class to improve clarity and consistency in exception handling
deleted the deprecated method ` shouldUseOpaqueButtons ( ) ` from ` AquaLookAndFeel ` and removed it from ` AquaLookAndFeel ` to streamline
updated the handling of ` maxFreq ` and ` maxCost ` in ` DrillSidewaysQuery ` and ` DrillSidewaysScorer `
added a new class ` GeoDegeneratePath ` to the ` classRegsitry ` map with a value of ` classRegsitry ` to
removed the ` preFill ` parameter from constructors in ` ParticleEffectPool ` , ` FlushablePool ` , ` Pool ` , and `
updated taskbar state management in TaskbarLauncherStateController and TaskbarStashController to ensure proper state handling when not in the launcher state
added null check before comparing style in CascadeDeleteVisitor to avoid potential NullPointerException when comparing style values
refactor ` setMaximumSize ` and ` setMaxWidth ` methods in ` GuiUtil ` and ` StatusTab ` classes to improve code readability and
refactor file icon handling in FileTreeViewHolder . java to simplify code structure and improve readability to enhance maintainability by reducing code duplication
updated assertions in ParallelUniverseTest to use ` contains ` instead of ` isEqualTo ` to improve readability and clarity of assertion checks
add synchronize access to the result map to prevent concurrent access to the result map
add test for nativeProbabilityfunctionqueries
added a shutdown thread to the ClientContainer class to ensure proper cleanup and resource management during application shutdown
hhh - 11146 - add method to drop temporary table after use in e2e dialect
danielwagnerhall : remove htmlunitdriver . asRgba ( ) in favor of htmlunitdriver . color .
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter class to improve code readability and maintainability
updated the hex string in VirtualAllocCommitUncommitRecommit . java to include " reserved 1024KB " instead of " reserved " to enhance cl
do n ' t re - initialise ad playback state if not need
added a suppression of UndefinedEquals in MultimapSubject . java to ensure the method adheres to the correct contract of Multimap . equals
use unit _ hz instead of deg _ text for wave wave wave wave wave wave wave wave wave wave wave wave wave wave wave wave wave wave wave wave
chore ( deps ) : upgrade gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap
updated TreeMap initialization to directly initialize TreeMap with includedLabelSets to improve code clarity and efficiency
added a new constant NORMAL _ 4F to the VertexLighterFlat class to improve clarity and consistency in handling vertex format elements to enhance code
added span management using Tracer for message sending in TracingClientInterceptor , ITTracingClientInterceptor , and ITTracingServerInterceptor to en
replaced ` ZoneId . of ` with ` TimeZone . getTimeZone ` in ` ScheduledTrigger ` to ` TimeZone . getTimeZone ` to improve accuracy
added ` asAsync ( ) ` method to ` Bucket4j ` , ` InMemoryExtension ` , and ` InMemoryExtension ` classes , and
updated the handling of the test class directory in resexhausted test cases to ensure the test class directory is correctly identified in test cases to improve clarity
added exception handling for interruptions in the AbstractConnector class to improve robustness by logging exceptions during host handling
refactor OngoingStubbing class implementation to improve code readability and maintainability
added support for optional web server reuse in the Main . java file to enhance flexibility in web server management based on configuration
replaced ` productConstructor ` with ` constructor ` in ` HttpClientUtil ` to improve clarity and consistency in variable naming
log an error if thread allowlist be not clear
rename method from setOutputSource to setItemWriter in TransformerWriterItemProcessorTests to improve clarity by using a more descriptive method name
[ drools - 7088 ] ignore miss hit policy in dmndn analysis
added a new test method ` testSlidingWindowsCombine ` to the ` CombineTest ` class to verify the behavior of the ` Combine `
added a conditional check for ` allAppsDirty ` in ` LauncherModel . java ` and improved logging output in ` LauncherModel . java
added a check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to ensure proper validation of the server ' s running state
reformatted the Beautiful class to enhance code readability and maintainability
refactor AquaMenuBarUI to simplify screen menu bar property retrieval to improve code readability and maintainability by reducing redundancy
fix : do n ' t set fall distance if not fall
refactor query handling in SimpleJpaRepository to use CriteriaQuery to improve query efficiency and readability to enhance code clarity and maintainability by
added timestamp , nonce , and additional fields to BlockUtil ' s difficulty and difficulty in BlockUtil . java to enhance the BlockUtil ' s difficulty
use safepointinsertionphase instead of loopsafepointinsertionphase when generate safepoints
added null and empty checks for children in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs classes to improve robustness by handling potential null values and
changed access modifiers of ` ArtifactResolver ` and ` getDependecies ` methods from package - private to public in ` ArtifactResolver ` and `
added thread termination handling in ClientConnectionHandler , BulletPhysics , and ChunkProcessingPipeline to ensure proper resource cleanup and prevent potential memory leaks
added validation to ensure maxBufferedDocs is always greater than or equal to 1 to prevent runtime errors
added handling for login state during instance state changes to ensure proper state management during instance state changes
added null check for valueExtractor and improved error handling in Pump . java to ensure proper handling of null values and enhance error reporting
updated access modifiers of several methods in HttpShardHandlerFactory and lbHttpSolrServer to improve encapsulation to enhance code readability and maintainability
updated the order in BaseAuthenticationServiceSelectionStrategy to HIGHEST _ PRECEDENCE and added unit tests for DefaultAuthenticationServiceSelectionStrategy
added server and context handler support in TestJNDI to enhance JNDI functionality to enhance server management capabilities within the application
reformatted code for improved readability and consistency in SortedDynPartitionOptimizer . java to enhance maintainability and clarity of the code
modified the return statement to always return true to simplify the logic for better readability
updated the calculation of ` numNulls ` and ` newNumNulls ` in ` StatsUtils . java ` to ensure ` newNumNulls ` is updated
camel - 18181 : camel - jbang - export should not export kamelets from camel - kamelet .
updated imports and added authorization checks in OSMJob . java to enhance authorization handling and streamline token upload process
[ gr - 10674 ] remove system . out . println in testmetaaccessprovider
added client authentication functionality to IoTDBRestServiceConfig and related classes to enhance security and control over client authentication options
updated the injection logic in PropertyAndSetterInjection . java and added a new test class ChildWithSameParentFieldInjectionTest . java to improve
updated BloomFilter64bit and BloomUriUniqFilter to use BloomFilter64bit instead of BloomFilter32bitSplit
updated cursor adapter in HomeFragment and changed refresh _ me flag in TweetPager to true in TweetPager to ensure the UI reflects the current
increase the IntermediateHeaderHeightRatio from 1f to 75f in ProfilePager . java to improve the scrolling behavior for better user experience
updated import statements and added a new RecompilationEvent class for handling recompilation events to improve event logging clarity and organization by aligning event
added handling for the " host _ sys _ prepared " configuration in multiple classes to enable the management of system prepared hosts in the application
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog ` and created a corresponding test
http : / / code . google . com / p / mybatis / issues / detail ? id = 563 . fix # 563
added entity and score functionality to StaticPipeline class to enhance the pipeline ' s configuration flexibility and improve error handling
updated file path handling in Frame . java and modified WhoopsModule . java to conditionally enable Whoops based on configuration to enhance flex
[ geos - 7674 ] fix catalogrepository . getrepository ( ) to return null if data store do not exist
refactor assertions in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added tests for multi - line text to improve test coverage and ensure
camel - 7999 fixed the unit test error of the test
refactor writeMeasurementScheams and schemas handling in TsFileWriteAlignedWithTSRecord and TsFileWriteAlignedWithTablet classes to simplify
updated loop condition in TestPromotionFromSurvivorToMinorGC . java to correctly calculate the expected memory usage to ensure accurate memory management during testing
updated logging configuration to use slf4j - reload4j instead of slf4j - log4j - reload
added a wait for the status detail assertion in HueBridgeHandlerOSGiTest to improve test reliability by ensuring the assertion completes before assertions
refactor package structure for several activities to improve organization and clarity to enhance code maintainability by grouping related activities under a dedicated activities package
[ drools - 1276 ] ignore drool test when drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that accepts a ` Stream Stream Stream Stream Stream Stream Stream Stream Stream Stream Stream Stream Stream Stream Stream
refactor AbstractExpressionPart class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix typo in taskslot
replaced instances of ` FIRE _ EXCEPTION _ ON _ FAILURE ` with ` CLOSE ` in ` NettyWebSocket ` and ` Netty
updated lock management logic in MoveTask . java to ensure that a lock is only released if it is not already released to improve robustness by handling potential
refactor JRuby property retrieval to use ResourceBundle for better resource management to improve code readability and maintainability by centralizing resource handling
replace ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY for receiveAddress assignment in Transaction . java to ensure consistent handling of null values to improve
reformatted class initialization logic in ClassGraphClassLoader . java to improve code readability and maintainability
make jobmanager startup test more resilient against failure
chore : : google - cloud : : datastream : : cloud : : datastream : : pub pub pub pub pub pub pub pub pub pub
added a ` Bundle ` parameter to the ` FileDisplayActivity ` builder to store additional configuration options for the activity
modified the loop condition in ParticleEmitter to skip processing if the particle is not null to improve performance by avoiding unnecessary iterations
updated expected cluster request counts from 4 to 3 in AmbariManagementControllerImplTest . java to reflect the correct number of clusters in the
removed the nullable attribute from the " SERVICE " column in TransientSessionTicketImpl . java and added exception handling in JpaTicketRegistry . java to
updated Bug4823811 . java file to improve code functionality and maintainability
added a path relativizer function to the arguments list in RmStep . java to improve path handling by using the project filesystem
added a parameter to the requestFullState method and modified its usage in DeconzBridgeHandler to accept an additional boolean parameter to enable or disable the
refactor ShibbolethCompatiblePersistentIdGenerator to enhance attribute handling and formatting to improve code readability and maintainability while ensuring correct
reformatted the @ Inject annotation in RequestValidationService to improve code readability and maintainability
updated the handling of hide keyboard visibility in UiThreadHelper to utilize a dedicated logging message to improve logging clarity and maintainability of the code
removed redundant calls to ` MManager . clear ( ) ` in multiple test classes to streamline code for better readability and maintainability
refactor NavigableMap and NavigableSet classes to improve code organization to enhance maintainability and readability of the codebase
add a unit test for the slurpFile function .
added @ FunctionalInterface annotation to multiple classes to improve code clarity and ensure compatibility with lambda expressions in the codebase
replaced repetitive calls to ` getSpans ( ) ` with a new method ` spanWithName ` to improve code readability and maintainability
added support for Date serialization in Hive schema conversion to enhance data handling capabilities for date types in Hive
updated regex pattern for splitting options in StyleConverter . java to improve readability and maintainability of the code
make sure input dialog do n ' t fail with invalid input
refactor column count handling in SemanticAnalyzer to improve clarity and correctness in column count mapping logic
lucene - 5674 : wandscorer . getmaxscorer ( ) should check for upto = = 0 , not upto
refactor Correspondence class to improve code readability and maintainability
updated import statements in PaintSetEnabledDeadlock . java to improve code clarity and reduce potential errors in import statements
initialized ` curPixVal ` to ` 0xFF000000 ` in ` XRSolidSrcPict . java ` and added a new test
replace listSubTypes ( ) with listSupertypes ( ) and update related logic in BiomeDictionary . java to improve clarity and
rename the variable ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and accurately reflect the variable ' s purpose
updated the ` @ Ignore ` annotation in ` TaplTestsLauncher3 ` to use ` @ Stability ( flavors = LOCAL | PLATFORM _
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure logFileSuffix is not empty before processing to avoid processing of empty log file suffixes
refactor PythonBuckConfig class to improve code readability and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of shared library names in ShadowPackageManager
add support for meiligao ( fix # 2800 )
added a null check for tile before accessing tile data to prevent potential NullPointerException when tile tile is null
added a TrimCache class to manage cache trimming functionality to improve user experience by notifying users of cache size changes
updated import statements to use ` google . common . collect . Lists ` instead of ` google . api . client . util . Lists ` to
replaced return statements with NotAuthorizedException in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and related tests to ensure proper error handling
added a new abstract method ` schedulePeriodically ` to the ` Scheduler ` class and updated method signatures to include ` @ SuppressWarnings ( "
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java ` to handle item clicks
refactor StreamUtil to handle multiple input streams based on the presence of a specified path and improve error handling to enhance robustness by selecting a more
refactor ` create _ table _ with _ environment _ context ` method to ` create _ table ` in ` SessionHiveMetaStoreClient `
added an aborted flag in the start and abort methods of FixedRateFragInsStateTracker to prevent multiple start and abort methods to ensure that the task task
updated block parsing logic to include indentation checks in multiple parser classes to enhance code readability and ensure proper handling of indentation levels
added ` NetworkWifiStatusReceiver ` and ` ChangeWifiStatusEvent ` classes to manage Wi - Fi status updates to enhance user experience by
do n ' t require the control frame to be final .
added visibility for the collapse handle in WidgetsBottomSheet to improve the user interface by ensuring the collapse handle is visible
added new files ` Issue475 . java ` and ` XSS . java ` for handling HTML and JavaScript escape functionality to address issue # 475
added a check to return early if the number of units to scroll is zero to optimize performance by avoiding unnecessary processing
update condition to check for non - single contract list size to ensure correct handling of contract lists
added ` add ` and ` put ` methods to ` JsonArray ` , ` JsonObject ` , and corresponding test cases in ` JsonObject ` , and `
added hashCode method to IPPPrintService and created TestRaceCond class to verify equality of PrintService instances to ensure consistent hashCode behavior between print services
hhh - 15626 : refactor db2 dialect to avoid duplicate method
do n ' t send connect event if the transaction do n ' t have a platform fee .
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
improve the handling of the first sample in the mediacodec .
removed the ` public ` access modifier from constructors in multiple classes to enforce package - private visibility for better encapsulation
added import for Retrofit in Part and PartMap classes to enable Retrofit functionality in the specified files
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling for better clarity and structure to enhance code readability and maintainability
added TYPE _ TASKBAR _ OVERLAY _ PROXY and TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of constants in AbstractFloating
fix : update gapic - generator - java with mock service generation fix ( # 56 )
updated alpha calculation in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to track the presence of recent activities to improve accuracy in animation
removed unnecessary parameters from the createRenderScript method call to simplify the method call for better readability
fixed typo in javadoc .
refactor : move system - bundle check into pluginmanagerActivator
reorganized import statements and improved code formatting in IntegrationTestSparkBulkLoad . java to enhance code readability and maintainability
keychaingrouptest : use low false positive rate
refactor rocket configuration handling to use a local variable for selected configuration IDs to improve code readability and maintainability by avoiding repet
fix npe when host be not find in agent
added null check before adding data to the entry set to avoid potential NullPointerException when processing values
cloudstack - 7893 : fix npe in host discovery process when add host
updated constants for NO _ NAME and NO _ VALUE in ParamAction . java to improve clarity and consistency in error message formatting
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbing classes to accept a single instance of ` InvocationContainerImpl ` to
added method to strip parameter from method name to improve parameter handling in method name resolution
updated version name and code for the GreatVoyage application to reflect the correct versioning of the application
apps - 2088 : use set instead of list to prevent duplicate
[ geot - 6751 ] use label _ all _ group constant instead of constant to avoid cce
ggb - 2118 fix for overlap dialog
updated error messages in ValidationSuite . java for consistency and clarity to improve readability and maintainability of error messages
replaced an anonymous class with a static inner class for StartingWindowListener to improve code readability and maintainability
added a comment inherited from MBeanServerConnection to improve code documentation by clarifying inheritance
updated exception handling in CheckPackageAccess . java to clarify expected exceptions related to PackageAccess and PackageDefinition
increase timeout for threadsafety test
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a null check for ` loggingEnabled ` to ensure ` logging
added @ JsonIgnore annotations to Schema class to prevent serialization of sensitive fields
increased test timeout from 5000 ms to 10000 ms in TestNonTxIndexBuilder to allow more time for tests to complete successfully
updated method signatures and variable names in SimpleNaiveBayesClassifier . java to improve clarity and consistency to enhance code readability and
renamed ` CheckHelperModule ` to ` CheckHelperControllerModule ` and added ` CheckHelperAuditModule ` to ` CheckHelperAuditModule ` to
refactor Prototype class to improve code readability and maintainability
added a check for non - transactional tables in SemanticAnalyzer to ensure accurate handling of transactional tables in the analysis process
[ java ] remove duplicate write method in recordingwriter .
make sure we do n ' t crash on invalid input
fix kairos kairosdb test failure with alias
updated currency pairs in VaultOfSatoshiBaseService to use " USD " instead of " CAD " and " DGX
hhh - 16688 fix resource leak in test
updated import statements for KafkaSender in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to align with the new package structure and package organization
added GwtBinaryIntegrationTest and A . java files for testing GWT binary integration to ensure proper build and caching behavior of GWT binaries
updated click event handling in BrowserContentPane . java and improved error handling in SQLConsole . java to enhance user experience by ensuring the loading status
updated randomization logic in EnhancedRandomImpl . java and added new test cases in EnhancedRandomImplTest . java to improve randomness
added XML _ SECURITY _ PROPERTY _ MANAGER to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to manage XML security
added a new file ` InlineDefaultMethod . java ` implementing the ` interfaceWithDefaultmethod0 ` interface with default method implementation and a concrete class ` Sub
updated regex patterns in SqliteFieldPredicateView . java to use GLOB instead of ESCAPE .
make getdmnprofiles protect to allow subclassing
fixed - redissonscript . writeallasync ( ) method throw unsupportedoperationexception . # 3822
[ espresso ] make static field volatile .
updated logging statements to use verbose instead of debug level for better clarity to improve log readability and provide more detailed information during project generation
fix memory leak with fml proxy
added a new constant for HTTP Jetty server handlers and updated thread pool configuration to allow dynamic adjustment of thread pool size based on configuration
replaced ` idsToShortcuts ` with ` removedShortcutInfos ` and added a check for non - empty ` idsToWorkspaceShortcutInfos ` to
removed unnecessary type check before conversion to String to simplify the conversion logic in DefaultHttpClientBinderRegistry . java
updated navigation logic in DetailFragment . java to improve user experience by allowing navigation to the home screen
added a condition to check if the Android market is present before including play services to ensure play services are only included when the Android market is available
refactor cell parsing logic in TableBlockParser and add a new test for handling whitespace after headers to improve code clarity and ensure proper handling
added support for bridging headers in NewNativeTargetProjectMutator and updated ProjectGenerator to utilize this new bridging header to
updated PotentiallyDeadCode . java to improve method handling and added a method to retrieve unused methods to enhance code clarity and streamline method
added support for diamond argument detection in mmm Attr . java and created new classes DiamondRedundantArgs . java and T69
replaced calls to getInvocationStageTrace ( ) . startSend ( ) with onStartSendRequest ( ) in HighwayClientFilter , RestClientSender ,
added debug logging for cachemetrics registration in SolrCacheHolder to improve traceability of cachemetrics registration process
added exception handling for AuthenticationException in LdapCtxFactory to ensure proper propagation of authentication - related exceptions
update float comparison logic in Test6796786 . java to ensure accurate handling of floating - point precision in floating - point calculations
added a local file for " logback . dev . xml " in JoobyMojo . java and included it in Main . java to ensure
added JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent handling in the application to enable tracking of authentication failure events for better security management
refactor QuickstepTransitionManager to streamline view animations by consolidating multiple views into a single list to improve code readability and maintain
updated string distance comparison logic in ConjunctionSolrSpellChecker . java and added a new test class ConjunctionSolrSpellCheckerTest . java to
changed the type of the ` fetchers ` variable from ` HashMap ` to ` Map ` to allow for more flexible data structure usage
[ hotfix ] [ runtime ] remove dead code in defaultleaderelectionservice
removed the public access modifier from the setAuthentication method to enforce encapsulation within the AuthenticationException class
cloudstack - 8873 : add a system property to set a timeout for readiness command
updated JDBC table and schema parameter handling in AbstractJDBCConnectorProvider . java to improve clarity and maintainability of the code
replaced occurrences of ` sqlUpdateAUP ` with ` sqlUpdate ` across multiple files to standardize SQL update naming conventions
replaced manual synchronization with ` Collections . synchronizedMap ` for schemaTypeCache initialization to improve thread safety and simplify the code
updated header handling logic in StaticServerHttpHeadersWriter to check for duplicate headers to improve header management and prevent unnecessary header overwrites
disable test that depend on file availability
added a call to mkdirs ( ) in TestCollector . java to ensure necessary directories are available for storing test data
set chunked streaming mode in StarTreeJobUtils to improve data transfer efficiency
added unit test for basic and single type syntax checker
hbase - 2573 addendum ( addendum )
added a new ` Node ` class and a test for ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` in ` BeanPopulatorTest `
added IOException to the getRemoteName method signature to ensure proper error handling during remote name retrieval
updated exception handling in UserAccountManagerImpl and ClientFactory classes and added HttpClient creation in ConnectivityServiceImpl to improve error handling and enhance HTTP client
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to ensure compatibility with standard Java method security practices
updated SSL connection handling to incorporate hostname verification to enhance security by allowing controlled hostname verification for SSL connections
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enhance
replaced invocation . invoke ( ) . joinInternal ( ) with invocation . invokeUrgent ( ) . joinInternal ( ) in ClientSchemaService .
updated joint handling logic in World . java to ensure proper destruction of joints to prevent memory leaks and improve performance
fix npe in server chat room search .
[ hotfix ] [ test ] move validation logic to testutils . source . reader
added null checks for document , parentFolder , and parentFolder in DocumentsStorageProvider . java to improve error handling and provide clearer feedback
added ` HookDefinition ` and ` JavaHookDefinition ` classes for managing hooks in Cucumber to enhance the system ' s capability
added a new method ` flushIfDeadlockRisk ` to encapsulate buffer flushing logic to improve code readability and maintainability by reducing
added a boolean parameter ` allowTs ` to the ` setExoOptions ` method and updated the ` setExoOptions ` method to accept a
remove tone from the identifier collection in DMRDecoderState . java to clean up unused identifiers
added a new ` INVISIBLE ` constant to the ` Color ` class and modified the ` toString ` method in ` RailButtonShapes ` class to
updated null handling logic in CountAggregationFunction . java and added a new test for NULL handling in NullHandlingIntegrationTest . java to enhance null handling
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5191
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5351 do n ' t
updated file path handling in PerfRunData , ReutersDocMaker , TrecDocMaker , and Config classes to use configurable work directory paths to
added a check for the " deprecated " attribute in RuleSetFactory and updated its value in RuleSetFactoryTest to ensure the rule is marked as deprecated
[ gr - 25844 ] [ gr - 25844 ] [ gr - 25844 ] [ gr - 25844 ] [ gr
refactor TimeRange class to use static final constants for min and max time values to improve memory management and clarity in time range handling
refactor BitDocIdSet class to improve code readability and maintainability
refactor connection handling in AbstractTimelineMetricsSink to improve code readability and maintainability by reducing duplication
updated MIME type checks in DetailFragment . java and added view touch listener in GalleryActivity . java to enhance media handling functionality and
improve ifluidcontaineritem logic , fix # 2295
refactor CsharpLibrary to handle different rule types for PrebuiltDotnetLibrary and PrebuiltDotnetLibrary to improve path resolution logic to enhance
improve iq handling in iq processing .
added a null check for runtime in IntrinsificationPhase . java to ensure runtime is not null before proceeding to prevent potential NullPointerExceptions
[ hotfix ] [ windmill ] fix npe in metric tracking code
pdfbox - 2576 : save last object id and object id in bfsearchcosobjectkey if necessary
added a new class ` LwjglApplet ` that initializes ` canvas ` and ` config ` with ` LwjglApplicationConfiguration ` and `
updated the string representation of the DockerClientConfig in EnvironmentAndSystemPropertyClientProviderStrategy . java to simplify the string representation to enhance code readability and
refactor ` doPostAuthentication ` method to utilize ` ldapPasswordPolicyConfiguration ` for handling password policies to enhance password policy application logic
refactor Int2ObjectCache class to improve performance to optimize object retrieval efficiency
added a private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize it to enhance LDAP
refactor Readable class to improve code readability and maintainability
pdfbox - 551 : use testsupport . with _ font instead of default
use ic _ menu _ share icon instead of share _ menu _ item
updated JRE _ IS _ MINIMUM _ JAVA8 constant to use JVM _ MAJOR _ VERSION and JVM _ MINOR _ VERSION constants to
improve error handling for non - jdbc41 driver
refactor GenericContainer class to improve code readability and maintainability
replaced HashSet with ArrayList for filteredSet and filteredList to improve performance by using a more appropriate data structure to enhance the data structure ' s memory efficiency
added multiple @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
updated the formatting of the ChartProvider class to improve code readability and maintainability
fix : save current working directory in bibtex db
modified the return statement in ` JavacParser . java ` and added a new test class ` ExtraSemiTest . java ` to simplify the
added case handling for " AFTER " and " BEFORE " in JpaQueryCreator and User classes , and implemented createdAt field in User
updated Test15FloatJNIArgs . java file to improve test coverage for JNI argument handling
updated import statements and modified method signatures in mmm plugin . java and ppp plugin . java to improve code organization and enhance clarity in
nifi - 6851 : fix a bug in mockprocesscontext . encrypt / decrypt ( ) that cause an arrayindexoutofboundsexception
[ java ] check for not reentrant call in aeronarchive .
modified dependency merging logic to check for null dependencies before merging to ensure that only non - null dependencies are merged , preventing potential null pointer
added a timeout annotation to the @ Test annotation in SslBytesServerTest . java to prevent test execution time out
rename peer to peer to avoid confusion
added methods for retrieving real - time index segment segment segment segment segment segment segment segment segment segment segment segment segment segment segment segment segment segment segment segment segment segment
added a null check before calling writeTo on exportedData to avoid potential NullPointerException when accessing exportedData
refactor scrolling logic in RecyclerViewFastScroller . java to improve accuracy of scroll thumb positioning based on popup visibility to enhance user experience by ensuring
added a method to check if the tool window isInstantiated before running the command to ensure that the command is only executed after restart restart restart
added a conditional check to ensure that preventSleep is only added for non - Windows platforms to prevent unintended behavior on Windows platforms
updated imports from ` javax ` to ` jakarta ` in ` HttpConfigurationAuthorityOverrideTest . java ` to align with the latest Jak
added support for vertical bar layout in QuickstepAppTransitionManagerImpl to improve layout handling for different screen orientations
added full - screen exclusive mode functionality to XWindow and XWindowPeer classes to improve user experience by allowing full - screen mode access
[ pms ] added support for played duration string .
added credential handling methods in DagUtils for processing MapWork and MapReduceWork to improve credential management and logging for better debugging and monitoring
( chore ) camel - core : reduce code duplication
http : / / issues . apache . org / jira / browse / amq - 3573 - remove trail whitespace from thread name in
updated the error message for adding a description until the next point has been logged to a file to provide clearer guidance for users regarding file access
refactor Job class to improve code readability and maintainability
added a new abstract class ` Unused ` and a method to check for unused types in the ` Unused unused ` ` Unused ` ` Unused ` ` Unused
updated HBASE _ MASTER key from " hbase _ master _ host " to " hbase _ master _ hosts " in StageUtils . java
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused or redundant code from the project
updated the ` performJoin ` method to return a list of ` GenericRecord ` instead of a generic ` GenericRecord ` to support multiple output records to
fix ( freezev2 ) : increase max _ delegate _ lock _ period for proposal
cloudcloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
remove unused constructor in cmcexchange
updated configuration handling in GossipLocalNode . java to use " seed . node . ip . list " instead of " seed . node . cfgs
add system property ` ` hazelcast . client . tpc . enabled ' ' to control if client tpc be enable ( #
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2
refactored calculations in MutableBigInteger and added a new ModInvTime class for testing modular arithmetic operations to improve performance and clarity in
refactor key assignment logic in NamedObjectList . java to improve clarity and ensure proper handling of empty names to enhance code readability and maintainability
updated cleanup methods in QueryCompactor and MmMajorQueryCompactor to use ` cleanupEmptyTableDir ` instead of ` cleanup
refactor AsyncCache and Cache classes to improve code organization and maintainability
added import for RCFileInputFormat in SerializationUtilities . java to enable serialization support for RCFileInputFormat in the application
added default methods for type and category retrieval in TypeMapperComponent to enhance type handling capabilities in the type mapping logic
added error handling for invalid host headers in Request . java and updated tests in RequestTest . java to ensure proper error reporting for invalid host headers
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to utilize ` ReflectionHelpers ` for retrieving time zones to improve compatibility with
remove method addoutgoingvalues ( value [ ] ) that be no longer need
updated variable assignments and method return values related to segment and directory handling in SegmentCoreReaders and SegmentReader to improve clarity and correctness in referencing segment information and directory
added ` hasMainThreadProfile ` method to ` AggregateDao ` and ` AggregateDao ` , and implemented it in ` TransactionCommonService ` and
added validation to enforce rule requirements for annotation definitions in Buck rules to ensure proper handling of rules without annotation requirements
updated string names to use " greekLowercase " instead of " greekLowerCase " and " irishlowercase " instead of " irishlowercase
updated HSSFSheet and Sheet classes to improve code organization and maintainability
[ ds - 2054 ] use discoveryrequestprocessor instead of lucenesearchrequestprocessor for backwards compatibility
added a list of strings in BasicDateTime . java to ensure unique identifiers for each date in addition to existing ones to avoid duplicates and improve data integrity
updated the instantiation of SurfaceSyncGroup to include the name " TaskBarController " to provide clearer context for the synchronization group
updated method calls to use ` getId ( ) ` instead of ` getObjectId ( ) ` in ` GridFsTemplate . java ` and added
added tests for retrieving total size and bytesSoFar in ShadowDownloadManager and implemented related methods in ShadowDownloadManager to enhance test coverage and ensure
refactor the insertion logic in TextField . java to use a boolean variable for clarity to improve readability and maintainability to enhance code cl
fix : do n ' t update group node when target be the same
refactor ` afterSetStatements ` method to improve statement handling in ` Block ` and ` BlockLexicalContext ` to streamline statement processing to enhance
added hashCode methods to IntervalXYDelegate and XYSeriesCollection classes to ensure consistent hashing behavior for instances of these classes
fix clientqueuDisruptiontest after cleanup
refactor CloudWatchAppender to improve code formatting and add a new CasPersonDirectoryConfiguration class to enhance code readability and ensure proper
updated the method call from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in ` Gson . java ` to
added calls to ` waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in ` HttpTestZenToken002 `
added checks for empty language tags and improved language tag handling logic to enhance robustness and correctness of language tag processing
cloudstack - 9351 : add an option to not to ssh to kvm agent on kvm agent
removed public access modifier from the Scheduler class and methods in Scheduler classes to enhance encapsulation and improve code clarity in the Scheduler class
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to streamline code by removing unnecessary package path
added a condition to check for the presence of a hyphen in the filter to ensure that the filter does not contain invalid characters
updated sorting and statistics retrieval methods in BrowserContentPane , DataBrowser , and Desktop classes to improve clarity and consistency in sorting and statistics collection
updated the copyOf method in mmm Utils . java to improve efficiency by reducing unnecessary array copying
updated the write method to use htmlEncodeButNotSpace for remoteAddr to ensure proper handling of spaces in remoteAddr
fix item state trigger for smarthome
no functional change - code cleanup
refactor file moving logic to use a separate thread pool to improve performance and avoid blocking the main thread during file operations
added a ` trigger ` method to the ` WrapTimer ` class to enable customizable timer execution based on a specified period
added support for additional SQL types in TypeStringUtils to enhance type handling for additional SQL types
added a verbose error logging option to the AbstractStatusReporter to enable more detailed error reporting based on user configuration options
updated ClickStartHandler constructors to include a ' true ' parameter to toggle menu functionality to enhance user experience by ensuring menu items when the application is in
s2s vpn : allow s2s vpn connection to be establish between same account and customer gateway
updated error handling in CursorReadingTask . java and added unit test for error handling in CursorReadingTaskUnitTests . java to improve error handling to ensure
added error logging for encrypted PDF documents in PDFBoxThumbnail and PDFFilter classes to enhance error handling for encrypted PDF documents
fix ( zookeeper ) : use a separate executor service for zk watcher
chore ( regen ) : update license year for generated file ( # 36 )
updated the implementation of the deleteItem method in HostsList . java to improve clarity and functionality of the deleteItem method to enhance the deletion
refactor methods in Java6Assertions and Conditions classes to improve code readability and maintainability
changed the return type of the ` replaceOrderBulk ` method from ` Collection < ReplaceOrderCommand > ` to ` List < BitmexPrivateOrder
refactor ` enterDefault ` method to ` enterIdentNode ` and implement ` enterFunctionNode ` method in ` Lower ` class to improve clarity
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` to include ` J9ConstantHelper `
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify multi - threaded invocation behavior to ensure correct handling of
improve roster relate to offline presence .
replaced the method ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator ` and ` PartitionDesc ` classes to
updated comment in FunctionObjectCreator . java for clarity to improve code readability and maintainability
added null check for extTypeCustomDesers in MessagePackFactory and implemented a copy method in MessagePackFactoryTest to ensure extTypeCustom
set the default log level to warn to avoid trouble trouble .
removed the @ Test annotation from AbstractRegistryFactoryTest to simplify test execution by eliminating unnecessary tests
removed the JettySolrRunner implementation from AbstractSolrMorphlineZkTestBase . java to simplify the codebase by eliminating unnecessary dependencies and impro
updated scoreMap to use a Map < String , Map < String , Float > instead of a Map < String , Map < Float , Float > >
updated comparison logic in U64 class to handle negative values correctly to ensure proper handling of negative parameter values correctly to improve robustness by preventing potential errors
fix error message in main
updated notification logic in WallpaperColorInfo . java to include a check for dark text support to ensure notifications are sent only when dark text support is
[ flink - 22847 ] [ runtime ] [ checkpoint ] fix npe in checkpointrequestdecider
updated core pool size , keep _ ALIVE _ TIME _ MIISECONDS , and keep _ ALIVE _ TIME _ MINUTES constants , and modified
updated stream matching logic in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java to simplify the condition to enhance code readability and maintainability
added tests to exclude Windows Server ' s ARM test requirements to ensure compatibility with non - ARM environments
http : / / issues . apache . org / jira / browse / amq - 4705 - fix regression in http : /
improve error message for python proxy .
added a ` @ Repeatable ` annotation and a ` @ Issue ` annotation to the ` Issue ` class to provide a mechanism for tracking issues related
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and improved
updated the connection logic in PGStream to handle scenarios where the sock sock sock sock sock sock sock sock sock sock sock sock sock sock sock sock sock sock
[ hotfix ] [ doc ] add doc for slotstatus # uniqueidentifier
remove unused import of ClassUtils from ReflectionUtils . java to clean up the code and improve readability
replace ` HashSet ` with ` LinkedHashSet ` for ` _ excludeProtocols ` , ` _ excludeCipherSuites ` , ` _ includeProtocols ` , and
added a static instance of Resources . systemResource to optimize resource handling by caching the system resource to improve performance by avoiding repeated calculations
use 16 byte instead of a fixed size of 16 .
added a test for circuit breaker fallback handling in ServerMvcIntegrationTests to ensure proper exception handling for invalid fallback URIs
added SSL connection factory to the HttpClient to enhance security by enforcing hostname verification for hostname verification
updated the method to set a size limit on the input stream to ensure that the input stream does not exceed the input stream size limit to prevent potential memory
moved the ` isPreferAES ` method from ` StandardProtectionPolicy ` to ` isPreferAES ` to ` isPreferAES ` in
( chore ) camel - opentelemetry : use log4j instead of system . out . println
[ ec2 ] remove flaky test in elbintegrationtest
rename the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity regarding the purpose of the method
added error handling for file creation in DiacriticTest . java to ensure robustness against invalid file system configurations
hhh - 14747 - fix test failure on oracle 11
refactor texture file handling and exception handling in TextureUnpacker . java to improve error handling and ensure proper file existence checks to enhance code robustness
refactor AmbariManagementControllerImpl to use a locking mechanism for managing state changes to ensure thread - safe access to shared resources during
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization to enhance maintainability and readability of the security logic
added a test to ensure that the ResultSet does not close if it is closed to improve resource management and prevent potential resource leaks
do n ' t try to mark large file in chunkingtest
added logic to remove pre - deleted databases from the schema map to ensure that only non - deleted databases are processed
added a check to remove " chunkedWriter " from the pipeline when it is not null in Http1xUpgradeToH2CHandler to ensure proper
updated item deletion logic in EnhancedBrowseFragment and added a delete confirmation in FullDetailsFragment to enhance user experience by allowing item deletion
added a new ` RuleBank ` interface and refactored ` RuleFinder ` and ` GraphicsUtil ` classes to use it to improve code
add a try - catch block to catch exception in jcatlscrypto . init ( ) .
added new classes ` TestMonomorphicObjectCall ` and ` Object ` for testing ` Object ` functionality to facilitate testing of `
replaced instances of ` removeMetaDataSource ( Session ) ` with ` toFront ( ) ` in ` DataBrowser ` and ` Desktop ` classes to ensure
phoenix - 5782 optimize memstore . shouldseek ( ) by take into account column family
[ hotfix ] [ runtime ] remove the need for a string parameter in taskmanagerservices
modified the constructor of AlterTimeSeriesStatement to accept a boolean parameter indicating whether to alter the view to enable or disable the ALTER _ TIMESERIES statement
[ selenide ] fix condition . matchtext to match entire string
added error handling for RoutingTableBuilder configuration to improve robustness by gracefully handling potential exceptions during configuration retrieval
fix # 2462 ( # 2463 )
( chore ) camel - jms : use char [ ] instead of string
bug 11105 : do n ' t call session . invalidate ( ) in recursive search
refactor ` toSortedListWithCounts ` and ` equals ` methods in ` Counters ` and ` CountersTest ` classes to improve
modified the initialize method to set warnings before returning the status to ensure that warnings are preserved during the initialization process
[ gr - 36436 ] fix compile time issue in sulong .
updated the method calls in PrettyPrinter . java to use a variable for better clarity to improve code readability and maintainability to enhance readability
fix memory leak in l LRUDictionary
refactor DatagramSocket and DatagramChannelImpl classes to improve filtering logic to enhance code readability and maintainability by using a dedicated filtering mechanism
test : migrate test to junit 5 ( # 4575 )
added a new class ` NutchServerInfo ` to encapsulate server - related properties in the ` NutchServerInfo ` class to provide
replaced specific token attribute imports with a more generic AttributeSource to streamline attribute handling for improved code
added timestamp handling in CqlInserter , ThriftInserter , and SettingsColumn classes to support timestamp management in the insertion process
updated DSAParameterGenerator to handle varying prime strength values more accurately and improved error messaging to enhance robustness and clarity
updated Numbers class to use new methods for converting and converting integer bits to integers to improve performance and readability of the code
updated the masking condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and improve test coverage for
added handling for SQL constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to improve error handling for specific SQL exceptions related to constraint violations
[ issue # 7073 ] remove setzeroifnotfound ( # 7073 )
added ` addTab ` method to ` Tabs ` class and refactored ` createTab ` method to accept a ` Font ` parameter to en
updated array allocation for HDFSFile , PartitionHandler , and related classes to improve performance by avoiding unnecessary array creation
[ hotfix ] [ hotfix ] [ runtime ] fix mockenvironmentbuilder to use taskmanagerruntimeinfo
refactored conditional checks in MavenVisitor . java to use braces for readability to improve code clarity and maintainability
updated mock names in ZookeeperDataChangedListenerTest to use " MOCK _ APP _ SECRET _ UPDATE " and " MOCK _
added a new test class FormatCheckingTest to validate Java class format errors to ensure proper handling of illegal class names in the application
updated line number handling in CodeGenerator to directly use method line number to improve clarity and avoid unnecessary method calls
added a try - catch block to handle potential exceptions when retrieving configuration properties
added methods to create toggle buttons with options in RadioButton and RadioButtonGroup to enhance button functionality for better user interaction
updated LRUCache and MetadataQuerierByFileImpl to initialize cache size to optimize memory usage and improve performance
int - 161 , int - 162 , int - 163 , int - 164
added a null check for the symbolic name to avoid potential NullPointerException when processing symbolic symbolic names
updated logging statements and added mode resource handling in ModeContribution and PApplet to improve code readability and enhance mode management functionality
[ hotfix ] [ yarn ] [ yarn integration integration integration integration integration integration integration integration integration integration integration integration integration integration test integration test integration test
replaced ` projectRoot ` with ` androidManifestPath ` in ` RobolectricTestRunner ` and ` RobolectricTestRunner ` to
added null check for notPropagatedHeaders and updated header propagation logic in AbstractMessageProducingHandler and AbstractReplyProducingMessageHandlerTests to
refactor CompareMode class to improve code readability and maintainability
added HasTests interface implementation to RustBinaryDescription and RustLibraryDescription classes to enable dependency management for test cases in the build system
updated the placeholder resource references in FileMessageVH . java to use a consistent naming convention to improve code readability and maintainability
updated OnExitTest . java file to improve test coverage for exit scenarios
added a method to recreate the taskbar when the user preference changes to ensure the taskbar is refreshed when the user preference changes
refactor HeapDump to use reflection for accessing heap dump methods to improve compatibility with different JVM environments
( chore ) camel - mybatis : close the session if commit fails .
danielwagnerhall : do n ' t close the firefox driver if we ' re in the firefox driver
updated JDK version from JDK 5 to Java 5 for - loop to ensure compatibility with Java 5 features and improve type safety
added a call to set the application ' s state to unavailable to ensure the application is in an unavailable state when needed
updated position and limit calculations in ByteBuffer and StringCharBuffer classes to improve clarity and correctness in buffer handling to enhance code readability and maintainability
replaced ` toUri ( ) ` with ` split ( ) ` for the ` moveStrSplits ` variable in ` ConditionalResolverMergeFiles . java `
updated the array handling logic in NativeArray and added setEmpty methods across various array data classes to improve array management and ensure consistent behavior across different
changed enum Protocol and Transport to public in VirtualAuthenticatorOptions . java to allow access to these enums from other classes
updated document handling in TestMultiPhraseQuery . java to use doc6 instead of doc4 to ensure correct document structure and improve test coverage
fix : do not assign offline ticket if payment form be offline
added a Thread for thread - safe invocation of onTimeout in HttpChannelState . java to ensure that the onTimeout listener is invoked on the
updated logging statements to use logger debug level instead of print stack trace to improve logging clarity and performance during debugging
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the read operation to use local consistency level based on consistencyForPaxos to ensure consistent behavior when reading rows
added a check for " Home " model name and updated conditional logic in HeosDiscoveryParticipant . java to ensure proper identification of " Denon " models
added a new ` Waiting ` class and methods to manage a ` wait ` field in ` PlainSelect ` to enhance SQL parsing capabilities by
refactor Neo4j to use AttributeController for managing node and edge attributes to improve code clarity and maintainability by centralizing
added a null check for the server name parameter in SessionManager . java to ensure that the server name is not null before proceeding with further operations
nifi - 7088 : deprecate rocksdbflowfilerepository in favor of nifi . controller . repository
updated the method to retrieve the GRANABLE value from the results object to ensure accurate retrieval of the GRANABLE value from the results object
updated conditional logic in JavascriptContext . java to ensure proper handling of JavaScript URLs in the JavaScript context
fix unit test on macosx
added logic to handle cases where a new column is added to the admin admin admin admin admin admin admin admin admin admin admin admin admin admin admin admin admin
added Disposable interface implementation to Texture class to ensure proper resource management and disposal of resources
added null checks for tldBundleLocation and updated related classes to enhance robustness by preventing potential NullPointerExceptions
support goquorum genesis file without goquorum compatibility
replaced IOException with Throwable in HttpInput to improve error handling by providing more specific error reporting
added a check for " JP " country in addition to " TH " and " PL PL PL PL PL PL PL PL PL PL PL PL PL
updated API response classes in HostService , RootServiceService , and ViewPrivilegeService to align response type with new API specifications
added a condition to check if the filter filter filter is equal to the filter filter filter to ensure that the filter filter filter is equal to the filter filter
reformatted constructor parameters in FileMenuFilter class to improve code readability and maintainability
apps - 2082 make sure data - param - show - logging be set to true in html5
added a new file Test CMSClassUnloadingDisabledHWM . java to test the behavior of CMS class unloading based on metaspace
fix nullpointerexception on forge event
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and updated related method signatures to enhance clarity and
fix slow compaction test by use identityqueryfilter
added error handling for missing ' type ' attribute in MiniAapt class to improve robustness by throwing an exception for invalid resource attributes
added support for the " SpEL " operator in the OperatorEnum and implemented a new SpELJudge class to enhance functionality by allowing
updated type check from ` type = = ` to ` type . equals ` for ` ordinalitySymbol ` in ` LocalExecutionPlanner . java ` to
use openide ' s lookup instead of sun . misc . service
refactor multiple Java files related to Conscrypt certificate handling to improve code organization to enhance maintainability and readability of the codebase
updated references in AttributeResolution9 . java and ShadowArscAssetManager9 . java to ensure proper handling of resource names to improve accuracy in attribute resolution
update source version from 1.5 to 6 in fullOptions to ensure compatibility with the latest features and bug fixes
updated access modifier of extractMetadataColumns method in DynamicSourceUtils and refactored project projection handling in PushProjectIntoTableSourceScanRule to
replaced direct calls to getLocalizedNames ( ) with a variable reference for sorted localized names to improve code readability and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
added a conditional check for live streaming before posting a delayed refresh in HomeFragment . java to ensure that the refresh refresh is only executed when live streaming
added the exception cause when creating a MappingException to improve error handling by preserving the original exception context
( chore ) camel - core : fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated generic type parameters in SchemaLoader , CompositeType , and DynamicCompositeTypeTest to use wildcard wildcard generics to enhance type safety and improve code
added a ` transports ` array and ` supportsTransport ` method to ` GitClientApplication ` , and updated ` RepositoryUrlPanel ` to
added delegation logging for " NavHandleLongPressInputConsumer " and " OneHandedModeInputConsumer " in multiple input consumer classes to
added null check for mavenMetadata before processing available versions to prevent potential NullPointerExceptions when mavenMetadata is null
added a check for " Large Page Support " in TestLargePageUseForHeap . java to ensure that " Large Page Use For Heap " output is
do n ' t copy all event if the db do n ' t exist
fix unit test failure on window
added a new test class ` TestObjectStreamClass ` and modified ` ObjectStreamClass ` to implement serialization tests for ` ObjectStreamClass `
updated null checks for ` getDataCenterInfo ( ) ` in ` ZoneAwareDiscoveryFilter . java ` to improve readability to enhance code clarity
change log level from error to warn when capture trace data fails
added a toString ( ) method to the Generator class to provide a readable string representation of registered generator instances
updated URI quoting logic in mmm URI . java and added new test cases in Test . java to enhance URI handling and improve test coverage for
added a check to throw a NoSuchResourceException when a requested resource does not exist in ClusterControllerImpl . java to ensure that a valid resource
refactor response validation logic in AccepttoApiUtils . java to handle null responses more gracefully to improve error handling and provide clearer logging for
updated byte buffer initialization logic in VertexBufferObject . java to ensure compatibility with Android version 5 and above
refactor SybaseASADatabase class to improve code readability and maintainability
added a forceProjection field to HashJoinInfo for backward compatibility to ensure backward compatibility when creating HashJoinInfo instances
added a method to retrieve string distance in SpellChecker to enhance functionality by providing access to string distance information
added FLAG _ IMMUTABLE and FLAG _ IMMUTABLE constants and modified PendingIntent creation logic in AndroidImplementation . java to improve handling of PendingIntent
refactor HiveFileFormatUtils to introduce appendReadColumnIDConf and appendReadColumnIDConf methods to enhance code readability and maintainability by
replaced instances of ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java `
added multiple calls to DisplayTemporaryToast and DisplayTemporaryToast in SavedExperiments . java to enhance user experience by providing feedback on temporary toast notifications
added a null check for the version in the ServiceModule class and implemented a new test for version resolution to ensure that the version information is set correctly when
added a new test class RawSerializationTest for Gson serialization and deserialization to ensure correct handling of primitive and object collections in Gson
refactoring seleniumserver to use sslcertificategenerator instead of seleniumserver
updated the loop structure to use a for - each loop and added padding for the last element in the list to improve code readability and ensure proper layout
increase test timeout for expiring url cache
added a new test method ` testNGramFilterPayload ` to validate the behavior of ` tokenFilterPayload ` in ` TestNGramFilters ` to
refactor AclImpl class to improve code readability and maintainability
added a test to verify that different arrays are randomized with different sizes in EasyRandomTest . java to ensure that the EasyRandom class behaves
cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
added a ThreadLocal for the write operation to prevent multiple write operations that could lead to a race condition
added a new method ` ancestorsVisible ( ) ` to the ` Actor ` class to check if the parent of the actor is visible to improve the visibility
added logging for deployment - group failure to improve debugging information during roll - update operations
[ hotfix ] [ table - planner ] [ table - planner - blink blink blink blink blink blink blink blink blink blink blink blink blink blink
added error handling for username not found exceptions in DaoAuthenticationProvider and created AuthenticationFailureUsernameNotFoundEvent to improve authentication robustness by publishing
updated AtMostXVerificationTest . java file to improve test coverage and ensure accuracy of verification functionality
updated default Qtype from " lucene " to " lucene + sort " across multiple files to improve clarity and consistency in the codebase
updated SimpleDateFormat instances to use Locale . US locale to ensure consistent date formatting across different locales
added ` isInitialized ( ) ` method to ` ILanguageServer ` and implemented the ` isInitialized ( ) ` method in ` JavaLanguageServer `
updated parameter names from ` idToken ` to ` shouldHaveIdToken ` in ` ClientAPITokenIntegrationTest . java ` to enhance clarity
make sure that the database be clean up after a successful transaction
replaced byte array handling with ByteArrayOutputStream for reading input stream to improve memory efficiency by avoiding unnecessary byte array processing to enhance efficiency in the MimeType class
do n ' t send exception message if client do n ' t receive
added a method ` isAcceptable ` to the ` AutoFormatVisitor ` class to check if a source file is an instance of ` CompilationUnit ` to
updated TestIndexWriterMergePolicy to set maximum buffered documents and RAM buffer size to 100KB to optimize memory usage during merging operations
added a clear ( ) method to the Manager class and implemented a test for updating witnesses in ManagerTest to ensure that the w
log4j2 - 1343 fix nosuchelementexception in copyonwritemap
flume : remove log4j - level parameter from flumenode
updated authentication metrics assertions and thread handling in BasicAuthIntegrationTest and DaemonStream to improve performance and reliability of authentication checks
replace HashMap with LinkedHashMap for storing graph nodes to maintain insertion order
[ jersey ] add error mapper to jersey support ( # 757 )
refactor header validation to use a new ` validateHeader ` method to improve code readability and maintainability by encapsulating the header validation logic
refactor property handling in System . java to improve clarity and maintainability to enhance code readability by reducing repetitive code
changed parameter types in ` contains ` and ` doesNotContain ` methods to accept ` CharSequence CharSequence CharSequence CharSequence CharSequence CharSequence CharSequence CharSequence CharSequence CharSequence CharSequence CharSequence CharSequence
[ gr - 36444 ] [ gr - 36444 ] [ gr - 36444 ] [ gr - 36444 ] [ gr
rename the class ` IntUtilsTest ` to ` PrimUtilsTest ` to clarify its purpose to improve code readability and maintainability
updated the datasource reference from ' ds ' to ' ds2 ' in PersistenceManagerProvider . java to ensure the correct connection factory is used for compa
refactor DeploymentOptions class to improve code readability and maintainability
replaced ` Drawable . ConstantState ` with ` Drawable . Drawable ` in the ` updateTextButtonWithDrawable ` method and updated its usage in ` update
updated resource handling to use try - with - resources for InputStream and StringReader to ensure proper resource management and avoid potential memory leaks
added support for coalesce operations in RexNodeConverter and SqlFunctionConverter to enhance functionality to handle coalesce operations
camel - 16253 fixed the unit test error
updated JavassistProxyFactoryFactory to use the current thread ' s class loader to ensure proper context class loading for proxy factory creation to avoid potential conflicts
make defaultdatetypeadapter thread - safe
reformatted method parameters in DocumentUtil . java for improved readability to enhance code clarity and maintainability
refactor HttpClientRequestBase to simplify URI handling and improve query parsing to enhance code clarity and maintainability by eliminating unnecessary state management
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to simplify the code by eliminating unnecessary filtering logic
change log level from fatal to warn in FSHLog . java to better reflect the severity of the log statement
refactor NodeMap and NodeMapIterable classes to improve readability and structure to enhance maintainability and clarity of the NodeMap implementation
rename variable ` predicate ` to ` subPredicate ` in ` DiscoveryClientRouteDefinitionLocator . java ` to improve clarity to enhance code readability
added a check for non - empty fields before adding Aggregates in MongoDB operations to avoid adding empty fields and ensure correct behavior in MongoDB queries to
if there be no admin list , return a default admin list
replaced MultiFields with SolrIndexSearcher for term retrieval in IgainTermsQParserPlugin , SignificantTermsQParserPlugin , and TextLogisticRegression
use objecthelper . get IdentityHashCode instead of object . tostring ( )
refactor GroovyParserVisitor to simplify handling of class names to improve code readability and maintainability
remove uninterruptible code for good performance
make seda test more stable
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testResources ` package to provide
update read length calculation logic in MessageUnpacker . java to ensure correct read length is calculated based on buffer size and position
updated import statement for Nullable in HttpClientTimingInstrumentationVerificationTests . java to ensure compatibility with the latest package structure
updated SQL query to include user identification in IconDB to enhance data retrieval by including user details
http : / / issues . apache . org / jira / browse / amq - 4978 - fix up the back pressure limit in
fix whitelisted resource for module - info . class
bug 10834 : add foreign key constraint for ` ` baremetal _ dhcp _ devices ' ' table
removed the IJava2DRenderer interface from the Java2DRenderer class to streamline the class by eliminating unnecessary interface implementation
added onTearDown method to DefaultAudioSink to call onOffloadBufferEmptying if the listener is not null to ensure that the listener is notified of
refactor UpstreamCacheManager to use a scheduled map for upstream tasks to improve task scheduling efficiency and maintainability
refactor StreamType class to improve code readability and maintainability
updated assertion message to include the acc value to improve clarity in test failure messages
updated import statements and added admin role checks in FilestorePage and RootPage classes to enhance security by ensuring admin users have the appropriate permissions
ignore test that fail in ci
updated the ` accept ` method to include a check for the declaring class before attempting to find the ` Lifecycle ` method to ensure that the method
updated button labels for left and right buttons in OfferBookChartView . java to accurately reflect their intended use in the market market
camel - 7999 fixed the issue of invalid url in restlet
block : remove unnecessary parameter from createnextblock ( )
removed the Serializable interface from DBNavigableSet and updated tests to use serialCloneNoCatch instead of serialization to simplify code by avoiding unnecessary serialization
improve error message when rule startup fail
refactor conditional logic in Main . java to improve code readability and maintainability
updated method to use mFiles . indexOf instead of mFilesAll . indexOf to improve code readability and maintainability
deleted the PlainVerifier . java file to remove obsolete code that is no longer needed
added functionality to close system windows when an action is triggered from the alt tab to enhance user experience by allowing quick access to system windows
updated dialog handling in DialogFragmentIT . java and OCFileListBottomSheetDialog . java to improve clarity and functionality to enhance dialog behavior to ensure
updated charset parsing in RestAdapter . java and added a sup sup sup sup sup sup sup sup sup sup sup sup sup sup sup sup sup sup sup
added a call to the superclass method to ensure proper initialization of the TextField component
replaced ObjectInputStream serialization and deserialization with TestUtilities for improved code clarity and reusability
updated time range parsing logic in LogicalGenerator and GroupByFillDataSet , and added a new test for group by fill in PhysicalPlanTest to ensure correct
updated array size validation in JAXWSExceptionBase . java to ensure proper handling of negative and positive array sizes to prevent runtime errors
test : migrate ctUnresolvedimporttest to junit 5 ( # 4575 )
increase the join duration from 10 seconds to 60 seconds to allow for longer processing time in the task execution
[ hotfix ] [ runtime ] [ test ] change default scheduler to use region - based scheduler
added ` setTitle ` methods to ` ShadowActivity ` , ` ShadowAlertDialog ` , ` ShadowDialog ` , and ` ShadowTextView ` classes , and
use poilogger instead of log
updated alarm handling logic in InstarHandler . java to replace occurrences of " / active = " with " / motionDetected " to enhance
improve performance of delete operation ( # 13430 )
refactor response status handling to use a switch statement to improve readability and maintainability of the code
refactor JavaFileManager location retrieval to include a method to find the javac location to enhance flexibility in lociability by allowing the caller to
allow to specify project name for flutter create additional setting ( # 1919 )
added a new test class DeprecatedStubbingTest to validate stubbing behavior to ensure that stubbing behavior behaves as expected and maintains
replaced the import of DispatcherType with javax . servlet . DispatcherType in ITBraveServletFilter . java to align with the current package structure
add more test case to cover more case
disable rsa key exchange by default
fix resource leak in perforce history parser
[ nest ] remove the access token when the thing be remove ( # 14940 )
updated animation interpolator from AGGRESSive _ EASE to EMPHASIZED in TaskbarEducation and TaskbarEducation to improve
added support for UpdateRegionLocation in ConfigPhysicalPlan and updated logging levels in RegionMigrateProcedure and DataNodeInternalRPCServiceImpl to improve region
added a new file ` FileDialogLeakTest . java ` that tests the ` finalize ` method of ` FileDialog ` to ensure proper resource cleanup and
hbase - 17707 addendum to fix test failure
trufflefeature : do n ' t attempt to access uninterruptible implementation .
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] remove unnecessary call to formatcontext . split
updated the condition to check if the disi is not null to ensure proper handling of cases where the disi is null
fix flakiness in fakemediasource
added JVM version checks to ensure compatibility with Java 9 and higher than 1.8 . 0
updated FileReporter instantiation to ensure proper type casting to avoid potential NullPointerException during tests
updated the check for end - to - end encryption keys from ` isFalse ( ) ` to ` isTrue ( ) ` in ` SettingsActivity .
added functionality to handle back navigation in the DirectMessageConversation to improve user experience by allowing navigation to the home button in the action bar
added GET _ USER support and updated PROTOCOL _ VERSION from 5 to 6 in RpcServlet and RpcUtils to enhance security by restricting access
added an @ EnabledIfSystemProperty annotation to the TestJdbcPluginWithMSSQL class to ensure compatibility with the specified architecture
replace direct reference to ` startClass ` with a local variable ` originalStartClass ` in ` WhiteboxImpl . java ` to improve code readability
updated error messages in DexBody . java and added local handling in TryItem . java to improve clarity of error messages and enhance local
fix test break by change in asynccontext
jbrules - 2835 : fix the look and feel in drool planner example
updated regex pattern for version string in AppPage . java to ensure correct formatting of version string in version string
refactor animation listener handling in LauncherAppTransitionManagerImpl to improve clarity and maintainability of animation logic
dumpedprivatekey : use version instead of base58
update data for new offer
modified milestoneParameters initialization to conditionally create a new instance of milestoneParameters based on the milestone status to ensure that open tickets are only
fix pipe items wood to work properly
updated the ` getStateMachineClusterInstance ` method to include ` blueprintName ` , ` blueprintRevision ` , and ` blueprintRevision ` parameters
initialize ` downgradeAllowed ` to true and add a new test for the ` isDowngradeAllowed ` method in ` UpgradePackTest ` to ensure
updated XML scan methods to use ` NameType . ELEMENTSTART ` and ` NameType . ATTRIBUTENAME ` instead of ` NameType . ATTRIBUTE
add support for emulation of system load library .
replaced occurrences of ` APP _ NAME _ COMPARATOR ` and ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ` in multiple
updated file output stream handling in DefaultPlatformManager . java and FatJarStarter . java to ensure directory creation if it doesn ' t exist to
add more information to assertion failure message
( chore ) camel - spring - xml : simplify routebuilderfinder
[ hotfix ] [ metric ] fix typo in metric doc
hbase - 2782 set dfs . support . append , dfs . heartbeat . interval , dfs . socket . retries , dfs . retry - retries
added a ` reuseAddress ` boolean to ` DatagramSocketOptions ` and updated related methods in ` DatagramSocketOptions ` to enhance socket socket
fix shutdown message in server config
[ java ] remove deprecate locatable interface from internal package
updated error messages in VersionInfo . java to clarify that the field must be non - searchable and non - retrievable conditions to improve
rename ` equalityPredicateColumns ` to ` predicateColumns ` for clarity to improve code readability by using a more descriptive variable name
updated the initialization of the channel node in HandshakeHandler . java to ensure proper disconnection logic based on the message ' s message ' s message to
fix npe in navigator ( fix # 395 )
[ hotfix ] [ core ] fix class load issue in recordreaderfactory
added case handling for GREATER _ THEN _ EQUAL and LESS _ THEN _ EQUAL in MongoQueryCreator and its corresponding unit tests to ensure
refactor group by expression handling in CalciteSqlParser to utilize a separate method for expression evaluation to improve code readability and maintainability
updated MappedByteBuffer and FileChannelLinesSpliterator classes to utilize AtomicInteger for resource management to improve memory management and prevent potential memory leaks
refactor validator retrieval to use a local variable for improved code readability to enhance code clarity and reduce repetitive method calls to improve
added a ` schedule ( ) ` method in ` CircuitBreakerImpl ` and modified ` CircuitBreakerTest ` to use ` Scheduled
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS and FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent
[ webui ] update webui . submit . upload . progressbar property to progressbar
updated display name from " Retrieve view column privileges " to " Retrieve column privileges " and disabled it to improve clarity and control over the retrieval strategy
added synchronization to the addExportedCount and getExportedCount methods to ensure thread safety when accessing shared data structures
updated import statement for IntRangeUtil from IntRangeUtil1 to IntRangeUtil to streamline dependencies and improve code clarity
updated character validation logic in HttpParser and added tests for encoded headers in HttpParserTest to enhance input validation and ensure proper handling of encoded
changed the layout resource from trends _ activity to configuration _ activity in ConfigurePagerActivity to reflect the correct design of the activity
updated log message to include the position of the SLWT text to improve clarity of log output for better debugging
solr - 12028 : add test for forceleader with tlog replica
updated Thread class implementation to improve performance and efficiency of thread management
updated the handling of remarked templates in AbstractConfigurableTemplateResolver to support multiple file suffix formats to enhance flexibility in template file resolution by
camel - 7999 : fix the cxf npe when cxf namespace attribute be miss
refactor YamlRepresenter class to improve readability and maintainability to enhance code clarity to ensure consistent formatting and maintainability of the code
updated output string formatting in ToChar . java to improve readability and maintainability of the code
added imports for ValidTxn and ValidTxnWriteIdList , and set them to ValidTxn and ValidTxnWriteIdList in GenericUDTFGetSplits . java
updated debug logging statements to improve clarity and consistency in the JsonSerDe class
fix for npe when there be no bookpath
modified the SSTDeserializer class to include a check for the next record to ensure that the deserializer does not throw an exception when attempting to
added a constant for the default grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid grid
updated error messages in ` Platform . java ` and test cases in ` ComparisonFailureWithFieldsTest . java ` to clarify line - break character
added a new field ` waitingForKeys ` to ` DecoderInputBuffer ` and updated related logic in ` ClippingMediaPeriod ` and ` SampleQueue `
updated path annotations in OkexV3 . java to remove unnecessary API references to simplify the API endpoint structure and improve code clarity
refactor the conditionals in LineUtilitiesTests to use braces for better readability to improve code clarity and maintainability to enhance readability to
added error logging for varargs and old array syntax errors in JavacParser . java and created new classes T6569633 . java and T65696
added checks for the current thread in DefaultDrmSession and DefaultDrmSessionManager to ensure that the media session is accessed on the correct
added support for handling method calls in VariableContext and corresponding tests to enhance functionality and ensure correct parsing of method calls
add test for invalid compilation unit
adjusted buffer limit calculation in Piece . java and SharingPeer . java to ensure correct buffer size is used for message processing
added response timeout configuration to NettyRoutingFilter and NettyRoutingFilter classes to allow customizable timeout settings for HTTP requests
updated NativeLinkTarget handling in CxxLibraryFactory and marked an overloaded method as deprecated in NativeLinkTargetGroup to improve clarity of link target selection and streamline method signatures for better
add a unit test base on user forum issue
added support for visiting field access in ASTConverter and refactored expression conversion in RexNodeConverter to enhance field access handling and improve type safety
replaced direct calls to query log entry values with a constant reference to improve code readability and maintainability
also relativize request uri if host be in no - host list , in addition to the no - proxy case . ( # 3442
updated PKCS12KeyStore to handle null key entries and improved certificate handling in StoreSecretKeyTest to enhance error handling and ensure proper initialization of
added reflection access checks in various classes to enhance security by enforcing reflection permissions
removed public access modifier from constructors in CollisionMap class to enforce encapsulation
deprecated the method ` getRawInputFromTransactionInput ` in ` TradeWalletService . java ` and added a null check for the input to ensure
refactor log level handling to use a switch statement to improve code readability and maintainability
server : remove region _ id parameter from cloudstack . insert
bug 60284 : add exception for old excel file that do n ' t support encryption
[ gr - 27935 ] add miss export for mx _ java _ benchmarks . py
removed unnecessary else clause for setting image visibility to simplify code logic for better readability
increased sleep duration in BatchingStateChangeUploadSchedulerTest from 10 seconds to 50 seconds to allow more time for asynchronous operations to complete successfully
updated the handling of the EXTERNAL _ FILES _ DIR directory to create a named directory if it ' s null to ensure proper directory creation and
refactor exception handling to use specific exception classes instead of a generic one to improve clarity and maintainability of exception handling logic
increase the WAIT _ TIME _ MS constant from 10 seconds to 60000 seconds in LauncherInstrumentation . java to allow for longer waiting time for UI updates
updated imports and added audience handling in ConnectOAuth2RequestFactory , ConnectTokenEnhancer , and ConnectOAuth2RequestParameters to enhance request
camel - 16400 : camel - kafka - do n ' t set default value for kafka ' s breakfirsterror option to true
added a new constant selectableItemBackground in the class to define a specific background color for selected items
replaced individual import statements for trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade trade
removed redundant assignment of event type in TxnSetOperation . java to streamline event type handling logic
add a new listener for resumable random access file that write to the underlying file
change class name from ` ` accesslogvalve ' ' to ` ` abstractaccesslogvalve ' '
[ bug - 64045 ] hssfworkbook . getformat ( ) return a fixed size of 0.0
[ hotfix ] [ kafka ] deprecate flinkkafkaproducer
updated the validation logic for compressed chunk length in CompressedInputStream . java to ensure that the checksum length does not exceed the defined maximum allowed length
camel - 16400 : camel - spring - redis - add support for idempotent redistemplate .
fix npe in containerrepair when use vanilla .
added a conditional check for the real local repository layout before processing artifacts to ensure that artifacts are only processed if the real local repository layout is different to avoid
[ hotfix ] [ runtime ] fix npe in taskmanager
add more information to the exception when deployment fails
replaced calls to ` getFileStorageUtils . getTemporalPath ( ) ` with ` FileStorageUtils . getInternalTemporalPath ( ) ` in ` File
updated imports in FeedEntryStatusDAO and added a new method to find FeedEntryStatus based on entries to improve code organization and enhance functionality
added blocking execution for blocking operations in ContextImpl . java and a corresponding test in BlockedThreadCheckerTest . java to improve thread management and ensure proper
updated ` instantiate ` method to accept a ` formatterString ` as a parameter and added a null check for the constructor argument to ensure that a valid output
updated file handling in LoadContactsTask to ensure compatibility with Android O and above to ensure correct file input stream is used based on the Android SDK version
removed setter and getter methods for remote address and hostname in Credentials . java to simplify code and improve readability by using ' this ' keyword
added a null check for the realClass parameter in Robolectric to ensure that a valid parameter is provided to prevent runtime errors
do n ' t require mutual authentication when use tl
updated import statements and added a test for handling SSL exceptions in BasicHttpTest . java to ensure proper exception handling for HTTP requests under HTTPS
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to consumer and producer components
simplified the event creation logic in PageChangeListener . java to improve code readability and maintainability
updated log warning message to reflect the absence of SMS settings to improve clarity in warning messages related to email and SMS settings
# 153 - optimise beandescriptor . draftqueryoptimise ( beandescriptor ) : improve performance
added error handling for IOException in MultipartBody . java to improve robustness by gracefully handling potential IO exceptions during file transfer
refactor : fix checkstyle issue in executablefactory and zipfilefolder ( # 1865 )
updated multiple Java files related to endpoint configuration , package - info , and SSL context parameters to improve code organization and clarity in the application
fix attach file do n ' t work if work directory do n ' t exist
added LoadOptionsBuilder configuration using SchemaInfoLevelBuilder to enhance schema crawling options to improve flexibility in schema crawling configuration
updated package structure and added a new test method for loading a legacy library to improve test coverage for legacy library functionality
removed exception throwing for unknown operation names in TestReader . java to simplify code by returning null instead of throwing an exception
added properties for name , expanded , and expand in ProjectProperty class to enhance the functionality of the ProjectProperty class
added a try - with - resources statement to ensure ConnectionInfo is properly closed to prevent resource leaks
[ hotfix ] [ doc ] fix typo in datastreamjob
updated file stream handling in TestContentProvider . java to ensure proper resource management and prevent resource leaks
camel - 7999 : camel - cxf - make it possible to load service class in a different way
added a check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure compliance with the specified protocol validation rules
refactor LambdaToMethod and related classes to improve symbol handling and parameter management to enhance clarity and maintainability of the codebase
make sure we do n ' t use ` ` where ' ' , not ` ` where ' '
updated the copyURLToFile method call in DL4JInceptionV3Net . java to include a timeout parameter to ensure that the copy URL is
added a method to set the slop in QueryParser to enhance query processing efficiency
increased sleep duration from 10ms to 100ms in LongPressMouseListenerTest . java to allow more time for the test to complete the test to
updated the default value of ` metricsServer ` from ` 8188 ` to ` 6188 ` in ` FlumeTimelineMetricsSink ` and ` H
add ` ` write screenshot ' ' to ` ` save game ' ' task
updated visibility logic for edit options in EditShareFragment to ensure edit options are displayed only when edit options are available to improve user experience by preventing visibility
updated progress calculation in DepthController . java to ensure progress does not fall below 1.1 to prevent unexpected behavior during processing
remove unused code .
added debug logging for authentication failures and refactored error handling in DelegatedAuthenticationGenerateClientsAction to improve traceability of authentication failures and en
added null check for the service object before accessing its properties in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUI
[ pantheon ] add ` ` hidden ' ' parameter to pantheoncommand .
added a doNotInstrumentClass for " androidx . room . CoroutinesRoom $panion " in AndroidConfigurer . java to prevent instrumentation
added context class loader retrieval to the isSupported method in NegotiateAuthentication . java to improve security and error handling during context class loading
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the code by eliminating unnecessary setter method
camel - 17826 : camel - core - make it easy to identify the thread that the reply consumer be be use .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added code to flush openMCBlock and closeMCBlock in PdfDocument . java to ensure proper formatting before writing to the PDF
log4j2 - 1343 added test for patternlayout
do n ' t throw unsupportedoperationexception when run test in selenium rc
added a new ` MwThankPostResponse ` class and modified the ` thank ` method in ` Service . java ` to implement a new
updated ChannelEndPoint to implement SocketBased interface and added a SocketBased interface to enhance socket handling capabilities
updated revokingStore initialization and enabling / disabling logic in Manager . java to ensure correct behavior of revokingStore management
added tests for implicit joins in HQL to ensure correct behavior of implicit joins in the query execution
updated assertions in NonVisualRegressionTest to handle line endings in assertions to ensure consistent line endings in comparison comparison to improve accuracy of expected and actual
updated IndexWriter to manage file references more effectively and added assertions for unreferenced files to improve code clarity and ensure that unreferenced files are
added @ Final annotation to several methods in BaseError . java to indicate that these methods should not be final
added validation to ensure the percent input meets the expected range of 0 to 100 to prevent runtime errors in the consumption process
added a condition to show the old login button based on a boolean resource to enhance user experience by conditionally showing the login login form if available
[ hotfix ] [ test ] fix typo in streamnetworkthroughputbenchmarktests
updated response page logic in EditTeamPage . java to ensure correct navigation to users in the user interface
updated debug logging message to include exception details to improve error reporting for better debugging
refactor server socket channel shutdown logic to ensure proper resource cleanup to improve resource management and prevent potential memory leaks
refactor Rocket class to improve code organization to enhance maintainability and readability of the code
added a new method ` createDynPartSpec ` to check for dynamic partition specifications in ` BaseSemanticAnalyzer ` to improve code readability and maintainability
fix round _ half _ up _ factor to work with scientific notation
added a ` visitDirectory ` method to ` JarDirectoryStep ` and ` visitDirectory ` methods in ` DirectoryTraversal ` to ensure that
added a new file ` JWKSetEditor . java ` that implements ` PropertyEditorSupport ` for parsing JWK files to facilitate the editing
refactor term finishing methods in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to utilize a single PendingTerm instance to improve
add a truffle boundary for trace throwable .
changed the default value of ` fetcher . threads . per . host . by . ip ` from ` true ` to ` false ` in ` fetcher .
updated conditional check for queryTimeout in StatementUtil . java to ensure correct assignment of timeToLiveOfQuery based on transactionTimeout to improve clarity and
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher to ensure proper handling of target configuration in HaskellGhci IDE IDE IDE IDE IDE IDE IDE
refactor ReplicaPosition class to improve clarity and maintainability of the code
bug 11105 : fix incorrect initial delay in network stats update task
updated animation interpolators to use a constant for FINAL _ FRAME to improve code readability and maintainability by avoiding hardcoded values
adjusted swipe length calculation to account for display density to improve UI responsiveness
added a new module - info . java file for the org . eclipse . jetty . http3 . server module to define module dependencies and
nifi - 2088 : fix npe in jsontype and jsontest
removed unnecessary parentheses in conditional statements for context initialization to improve code readability and maintainability
[ hotfix ] [ checkpoint ] do n ' t require an external checkpoint configuration
updated the parameter type of ` reportInnerClassReferences ` from ` TypeElement ` to ` Element ` in ` InnerClassesTable . java `
updated command string concatenation in TimestampCheck . java to ensure proper syntax for command execution
replaced ` FluentIterable ` with Java Streams in ` Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome Chrome
do n ' t log unregistered dubbo service at startup ( # 1010 )
improve handling of security otr mode change
added NODE _ LABEL _ OUTLINE _ SIZE , NODE _ LABEL _ OUTLINE _ TRANSPARENCY , and NODE _ LABEL _ OUTLINE
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the boolean parameter from false to true in the Win32FontManager class to enable a specific feature feature for improved font rendering functionality
added null check before visiting the visit method in TreeVisitor to ensure the cursor is set correctly when the visit method is null
use ierrorhandlingpolicy for jdtbatchcompiler error handling
added content alignment properties and corresponding getter / setter methods to LabelBlock and LabelBlockTests to enhance label rendering capabilities by allowing customizable alignment
refactor Class and Parameter classes to improve code organization and maintainability
refactor IndexReader class to improve code readability and maintainability
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added a null check for ` networkInterface ` before accessing its properties
updated ` fromRfc1123DateString ` method to accept a ` Locale ` parameter for date formatting to ensure consistent date formatting across different locales
added a file extension to the download error message in FileDownloadViaProxyTest . java to ensure the error message accurately reflects the expected file
nifi - 2088 - add output no hits property to jsonquery Elasticsearch
server : remove aggregation ratio when update quota
[ java ] add try - catch block to catch exception .
do n ' t drain watcher even if there be nothing to do
simplified the event creation logic in PageChangeListener . java to improve readability and maintainability of the code
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and ` RecordInputStream ` classes ,
added a try - catch block to log exceptions when unregistering invalidated sessions to improve error handling and logging clarity
refactor CategorizationFragment class to improve code readability and maintainability
updated the status message from " Bridge report light as reachable = false " to " Bridge report light as not reachable = false " to " Bridge report light
fix # 7303
fix million number display in block inventory
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class for testing to improve code clarity and
added tests for query handling with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure proper functionality and
added tests for serialization and deserialization of nested maps in Gson to ensure correct serialization and deserialization of nested maps in JSON
added bounds checking for x2 and y2 in GeometryUtils . java to ensure x2 and y2 are within defined bounds to prevent layout issues
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code readability and maintainability by removing unnecessary type casting
do n ' t crash if the test plan be not find
updated method names from " dbmsName " and " tableName " to " getDbmsName " and " getSchemaName " and "
added a check for null arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg arg
camel - 7999 : camel - jetty - do not use ssl - http / 1.1 by default
server : set displayvolume to true by default
updated the ` version ` method to accept a boolean parameter and modified its usage in ` JavahTask . java ` , and added a new
updated conditional logic in ChangeLogParameters . java to correctly handle global change log parameters to ensure accurate retrieval of the most recent change log entries
change log level from warn to debug
hhh - 7999 ignore setoperationtest on oracle since it cause exception
updated socket timeout handling in SSL connection setup to ensure proper timeout management during the handshake process
updated action bar size calculations in HomeFragment , DMFragment , ListFragment , MentionsFragment , and TestripFragment to account for the
make espresso class default to true
resolve http : / / issues . apache . org / jira / browse / amq - 4705
refactor JodaTimeRangeRandomizersTest to simplify test methods and improve readability to enhance code clarity and maintainability by
added conditional redirection for Jakarta EE 9 and newer resources in WebDescriptor . java to enhance compatibility with Jakarta EE
fix : readiness . isready ( ) return false for non - node node
replaced instances of ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to ensure correct endpoint references are used for processing
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the new version requirements for RPC functionality
added a security manager check for package access verification to enhance security by ensuring package access checks are performed only when a security manager is present
updated method implementations in Utils . java and modified visibility of UGSCommandCount in XLCDCommunicator . java to improve code clarity and encapsulation
updated DefaultMetricsTagProvider to use a HashMap for tag tags instead of an ImmutableMap to enhance flexibility in tag management by allowing tag tags to be
danielwagnerhall : fix checkstyle violation in clientdriversuite
update default setting from Level . OFF to Level . ERROR to improve error handling for better user experience
made several fields in IconNormalizer . java final to enforce immutability and improve code clarity to enhance thread safety and code readability
added a flag ` firstCallPrepareDo ` and modified ` invokePrefixMethod ` calls in ` PrepareInterceptor ` to allow conditional execution of the
refactor workspace and app customization logic to simplify focus handling and improve code readability
updated dependency injection in AuthWithStoreFeature and Auth classes to simplify the binding process to enhance code readability and maintainability by removing unnecessary eager binding
updated incoming associations to include an option to ignore invisible associations to enhance flexibility in association filtering based on user preferences
cloudstack - 7893 : fix the issue that remove _ capacity _ type _ private _ ip be not delete when the resource be remove .
bugfix : add a ' basic usage ' section to the basic usage page
fix : add ` ` require ' ' field to model for @ schema ( require = true )
renamed configuration classes from ` CasCoreMultifactorAuthenticationAutoConfiguration ` and ` CasCoreConfigurationWatchConfiguration ` to ` C
refactor FeatureFlags class to improve code readability and maintainability
updated UUID generation logic in ConfigStore . java and added a new unique ID in ItemUIDtoHueIDMappingTests . java to enhance
added caching functionality for images in TimeLineCursorAdapter and TimelineArrayAdapter to ensure images are updated correctly when pictures are loaded
updated error message for major compaction on full CRUD tables to clarify that compaction on insert - only tables should be disabled by default
added a null check for the storage path in the waiting process to ensure that the waiting process does not proceed if the storage path is not null
replaced ` resizeThreshold ` checks with a ` checkResize ( ) ` method for better readability to improve code clarity and maintainability by
refactor LDAP connection handling to improve code readability and maintainability
added @ Deprecated annotation and marked the class as deprecated to mark the class as outdated and discourage its use in future development
added debug tracing logs in TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to enhance debugging capabilities for better traceability during
added a condition to check for IntelliJ IDEA build to ensure compatibility with IntelliJ IDEA ' s JUnit integration
updated assertions in TestMultiSearcher to compare two hits2 and hits3 instead of hits to ensure the tests accurately reflect the intended functionality
added a new class LucenePackage to handle LucenePackage to provide a centralized way to access LucenePackage functionality
updated the addition of sizeInBytes to include - existing . sizeInBytes to ensure proper handling of memory allocation to prevent potential memory overflow issues
refactor statistical calculations and enforce immutability of BYTE _ ARRAY _ ARRAY _ 8 and BYTE _ ARRAY _ 8 variables to improve code clarity
added a null check for the drawer toggle before starting the animation animation to avoid potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to the Subject parameter in DefaultAuthenticationAdapter . java to improve code clarity by explicitly indicating that the
added logic to enable or disable module scanning based on configuration to improve flexibility in class loading behavior
includeLatex free author in bib export for corporate author
added a method to cancel core recovery for Solr cores to ensure proper handling of recovery cancellation in ZooKeeper awareness to improve resource management and
replaced System . currentTimeMillis ( ) calls with a custom currentTimeMillis ( ) method in bug5070081 . java to improve readability and maintainability
do n ' t try to click on the first item when there ' s only one point at a time
updated connection parameter messages in PGProperty . java for clarity to improve user understanding of connection parameters for better understanding and clarity
added trust resolver , role hierarchy , and permission evaluator to SecurityEvaluationContextExtension to enhance security configuration flexibility by allowing additional fields to be
added a check to initialize exponentSize if it is zero to ensure exponentSize defaults correctly for valid DH parameter generation
refactor file handling in SynchronizeFolderOperation , UploadFileOperation , and UploadFileActivity to use getUsableSpace method to improve code readability and
refactor DistinctSqlAggregation to use a for - each loop to improve code readability and maintainability
added a test method to verify post - login execution for user authentication in UserService to ensure that post - login processes are executed for successful user authentication
make spanish phrase extraction more flexible
refactor CharArraySet to simplify character handling logic and improve test coverage to enhance code readability and maintainability
improve error message for unsupported track format in mux muxer .
updated JsBundleGenrule and JsBundleGenruleDescriptionTest to use AndroidPackageable instead of JsBundleAndroid to improve compatibility with Android -
added UTF - 8 character encoding handling in PinotClientRequestServlet and refactored string lookup logic in StringDictionary to ensure proper handling of
updated case name from " LogicalAnalyzer " to " Logic Analyzer " and replaced an integer array with a tile icon for various icons to improve cl
added a singleton instance of ` instanceClassName ` and updated instance creation logic in ` AbstractVector ` to ensure ` instanceClass ` is only created if it
removed syncMetaLeader ( ) method from CMManager . java to streamline the code by eliminating unused functionality
[ # 7441 ] feedback question : fix # 7441
added TestLoggingExtension annotation to DiagramRendererTest to enable logging for debugging purposes during test execution
camel - 18410 : camel - core - optimize to avoid name clash
added support for the VIOMI electric water heater model to enhance compatibility with additional device models
refactor code to use a local variable for ssl session session session session session session session session session session session session session session session session session session session session
added a new file CreateNewSpreadsheet . java to implement a spreadsheet creation example to facilitate the creation and management of spreadsheets
changed the data types of ` ttl ` and ` timeToLive ` from ` Duration ` to ` long ` in ` CacheProperties ` and
updated content URIs in LauncherBackupHelper and LauncherModel to use CONTENT _ URI _ NO _ NOTIFICATION instead of CONTENT _ URI _
updated test group version from ' 2.14 . 0 ' to ' 2.27 . 2 ' in SwaggerResolveTest . java to reflect the latest
replaced ` lucidaFontName ` with ` this ` in synchronization to ensure thread safety by synchronizing on the current instance
added a condition to check if the variable ' c ' equals ' < ' before comparing it to ' ltLen ' in DocClassUtil . java to
removed unnecessary String . format usage in Workspace . java to simplify code and improve readability
added import for Scope and a message for missing validation errors in ValidateCommandStep . java to improve user feedback when no validation errors are found
refactor IntegrationTestContextLoader to improve resource loading and configuration to enhance resource management and ensure proper servlet context handling
updated condition checks and method calls in Component . java , Container . java , and JavaSEPort . java to use getComponentAt instead of getResponder
updated the conditional check for UUID class compatibility to ensure proper handling of UUID types in the RamlType class
added a new ` ClientStat ` class and updated related classes to use ` Map < String , Integer > ` instead of ` Map < Long
updated regex patterns in CellContentConverter . java to replace newline characters to ensure consistent formatting and improve readability of the code
simonstewart : fix the test case so that it do n ' t fail on window
mondrian : fix typo in mondrianproperties
added error handling and stack printing functionality in ProcessTools . java and improved launcher path validation in CustomLauncherTest . java to enhance debugging
added a test method ` testEmbeddedImage ` to ` TumblrRipperTest ` to ` TumblrRipperTest
added a check for slot existence before converting storeType to ensure conversion is only attempted if a slot is available
refactor extraction logic in ContainerMediaChunk and InitializationChunk for clarity and efficiency to improve code readability and maintainability by consolidating
updated BaseLockFactoryTestCase to use ByteArrayOutputStream and PrintStream for better output formatting to enhance debugging capabilities by providing detailed output of the index writer configuration
tika - 451 -- add tikaconfig . isdynamic ( ) to allow the service loader to be configure to be dynamic
updated import statements and added checks for package - info in DocLint . java to enhance error handling for unexpected package comments and improve code cl
added a check for DELTA _ IMPORT _ CMD in DataImportHandler . java and introduced a constant for IMPORT _ CMD in DataImporter . java to
added a new test method to verify the behavior of renaming inner classes based on the ` ignoreDefinition ` parameter in the ChangeType recipe to ensure that
removed unused import of android . util . Log to clean up the code and improve readability
modified the ` checkItemPlacement ` method to include a ` workspaceScreens ` parameter and updated related logic for item placement checks to enhance
simonstewart : make sure to kill the JVM when exit the web application
refactor code to improve handling of multiple transformed rows in LLRealtimeSegmentDataManager to enhance code readability and maintainability by reducing rep
added a check to skip display names containing " Teredo " in the network interface to ensure compatibility with Windows systems
added error dialog for add contact .
replaced direct registration of USER _ DETAILS _ SERVICE _ FACTORY bean with a bean component registration to improve flexibility in managing user
update drawBitmap method to handle null parameters to ensure compatibility with different rendering scenarios
updated date format in meitrack and totem protocol decoder to align with the new protocol specifications
changed method visibility from public to protected in SunFontManager and X11FontManager classes to enhance encapsulation and improve method accessibility
added multiple @ Deprecated annotations to the EnhancedRandom class to mark the class as outdated for future removal or replacement
clientmapstoretest : do n ' t swallow reach max size exception
add an option to keep empty sentence
updated the ` createArtifactSubdirectory ` method to return a boolean indicating success or failure to create the artifact subdirectory to improve error handling and provide clearer
refactor ` ReusableCompiler ` and ` JavaLanguageServer ` to use ` JavaCompilerService . NO _ MODULE _ COMPILER `
fix npe in directagentattache when resource return null
modified the sendEmail method to throw a MessagingException when a MessagingException is thrown to improve error handling for email sending fails
fix nullpointerexception in pipeitemsobsidian and pipeitemsobsidian
updated date parsing methods to accept Locale as a parameter to improve flexibility in date parsing based on different locales
added a checkbox for including decals in the storage options to allow users to customize their storage preferences by opting to include decals
modified the ` generateDocumentation ` method to include a second parameter as null to accommodate potential future enhancements that may require an optional
refactor perf object initialization and enhance performance logging in HiveProtoLoggingHook . java and TestHiveProtoLoggingHook . java to improve performance
updated log messages in various classes to improve clarity and consistency to enhance readability and maintainability of the codebase
updated the version check in ignoreRecordAttribute to use a dynamic version to ensure compatibility with different major versions of the class file version
added a new test class ` LdapPasswordAuthenticationTest ` to verify LDAP connection setup and attribute handling to ensure proper functionality and validation of LDAP password
updated import statements in TaskCompiler . java to use BasicStatsNoJobTask instead of OrcInputFormat to utilize BasicStatsNoJobTask for
fix nullpointerexception in flutterreloadmanager . saveallnotification ( ) ( # 3314 )
refactor VisibleAdvance class to improve code readability and maintainability
fix : do n ' t throw exception when reflector start fails
updated condition in EdgeDataTable and NodeDataTable to include dynamic column checks to ensure proper handling of numeric column columns in data processing
added null checks for groupId and artifactId , and improved null handling in ResolvedGroupArtifactVersion constructor to enhance code robustness by preventing potential
added a null check for apiInfo to ensure api is not null before assignment to avoid potential NullPointerException
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added lighting and shader disposal functionality in PhotoPanel and integrated shader disposal in FlameRenderer to enhance texture loading capabilities and
updated scene size from 460 to 520 in FxWindow . java and added context menu functionality in InsnListEditor . java to improve user
updated CSS parsing logic to handle edge cases with edge cases to improve robustness and prevent index out of bounds errors during CSS parsing
added a method to check if the look and feel isDecorated before setting the default look and feel in UI components to enhance user interface consistency
removed unnecessary ' this ' keyword and simplified SQL query syntax in HostRoleCommandDAO . java to improve code readability and maintainability
updated test case and command mappings in LJ1200Message . java to improve clarity and consistency in test case handling
refactor swipe handling logic in WindowTransformSwipeHandler to improve swipe swipe gesture handling to enhance clarity and ensure correct end target assignment based on swipe
replaced HostDatabase with ColorStorage in ColorsActivity to improve color management functionality
refactor String class to improve code readability and maintainability
removed unused SLF4J logger imports from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to retrieve global entries from the map to enhance functionality by allowing
added assertions to verify that the sendcoin method in MultiSign34 . java to ensure that the sendcoin method behaves as expected to enhance test reli
test : migrate to junit 5 ( # 4520 )
replaced hardcoded string concatenation with a dynamic system property to improve flexibility and maintainability of the code
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance - private to allow instance - specific access to the method without needing a
added assertions in InheritanceTest and updated field retrieval method in TestUtil to enhance test coverage and ensure correct field access in the model class
removed configuration parameter from Outlink instances in OOParser , RSSParser , and SWFParser classes to simplify Outlink construction to enhance code
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and improve
exclude lambda from typesinuse identification , and update uselambdaforfunctionalinterface to handle final modifier in anonymous class parameter and remove import after execution ( # 1844 ) ( # 1851 )
replaced appendClassSelector method with addFileSet method in TestNGAntTask . java to streamline class file handling by directly adding file sets
added debug logging for unsupported root input in HiveCardinalityPreservingJoinOptimization . java to inform users that root input is not supported
fix nullpointerexception in registryevent . getmapping ( ) .
removed duplicate assignments of x3 and y3 in Intersector . java to streamline the code by eliminating redundancy
added default methods for SBE decode length and limit in MessageDecoderFlyweight . java to indicate that SBE decoding is not yet implemented
updated ElasticsearchContainerTest to use a constant for the version to improve maintainability and readability of the test code
clone the byte array when parse peermessage .
updated cluster name and version ID handling in ClusterDefinition and related classes to improve clarity and consistency in cluster versioning
camel - 16400 : camel - ftp should use source code generate configurer to avoid reflection configuration .
[ zeppelin - 5851 ] fix zeppelin - 5851 : zeppelin - 5851
refactor local variable handling in Gen . java and add a new test class NoLocalsMustBeReservedForDCEedVarsTest . java to ensure
added a check for basic constraints in ` ForwardBuilder . java ` and created a new class ` BuildEEBasicConstraints . java ` to ensure
added a method ` initAfterFirstFirstDbConnection ` to ` JdbcPostgresqlDAO ` for initializing a JDBC step after a database connection to
updated WebSocket connection handling in SimpleEchoClient and added input buffer size validation to ensure input buffer size validation to enhance robustness by preventing negative negative
replaced boolean flags for undeleteAll and rollbackUndeleteAll with pendingDeleteCount and pendingDeleteCount in SegmentReader . java and added a
added null checks for scopes in ClientRegistration . java and updated corresponding test cases in ClientRegistrationTests . java to ensure that scopes are not null before proceed
added null checks for orderBy and orderBy to ensure that orderBy and orderBy are only added if they are not null to prevent potential NullPointerExceptions during execution
[ hotfix ] [ test ] fix checkstyle violation in clusterentrypointtest
server : do n ' t try to take snapshot when vm be in stopped state
added debug logging in HiveServer2 . java to improve traceability of initialization process
added a check for the first element in the tasks list before processing the asset to avoid unnecessary processing when there are no assets to load
improve error handling when delete a pubsub node
improve handling of null value to avoid npe
improve error message if a false positive be detect detect detect detect detect detect detect detect detect detect detect detect detect detect detect detect detect detect detect detect
replace TreeSet with LinkedHashSet for storing cipher suites to maintain insertion order
updated control characters in the Escaper class to ensure proper handling of control characters in string processing
updated SQL provider method handling to support both CharSequence and String return types to enhance flexibility in SQL provider implementation
added null check for aliasChildren in InternalMNode . java to prevent NullPointerExceptions when accessing children elements to ensure robustness by avoiding NullPointer
added a method to calculate scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll scroll
javatemplate should not print source code if autoformat be enable
added method setAccessible to WidgetInterceptor to allow access to the method from outside the class
added a condition to check if the field name " database . server . id " is not set before setting the literal initializer to ensure that the literal initializer
update ripper to support window .
added a menu item to browse to the " LooksFrame . 28 " host in the " LooksFrame . 28 " menu to enhance user experience by
refactor handleGetter to use a local variable for actualValue to improve code readability and maintainability by reducing repetition
added error handling for array index out of bounds exceptions in EncryptedSlideShow . java to improve robustness by preventing crashes due to array index out
[ hotfix ] [ checkpointing ] add log for file checkpointio
do n ' t call loadBattlePassManager before avatar postLoad to avoid null pointer exception
updated Docker image version from 1.0 . 0 to 1.1 . 0 in PortForwardingContainer . java to ensure compatibility with the latest version of
added garbage collection memory allocation to ThresholdTest . java to optimize memory usage during garbage collection
updated condition checks in StdErrLog . java and added new debug tests in StdErrLogTest . java to enhance logging functionality and improve test coverage
fixed - rremoteservice . getremoteserivce ( ) method throw classcastexception . # 3850
added methods ` isSelected ( ) ` and ` setSelected ( ) ` to the ` MultiButton ` class and ` setSelected ( ) ` methods
updated the intent URL from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to ensure the correct navigation flow in the playback playback
[ issue # 4747 ] remove redundant code in brokercontroller . setbrokerconfig ( # 4747 )
updated RedisReactiveHealthIndicator to use a Reactive Redis connection to ensure proper resource management and avoid potential memory leaks
refactor background color retrieval to use a new utility method to improve code readability and maintainability by centralizing theme color handling
renames occurrence occurrence of callparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipantparticipant
updated type adapter registration in ToolingApiLauncher . java to ensure proper instantiation of various classes in the tooling API
updated the order of parameters in TestPayloadCheckQuery . java to ensure the correct parameters are passed for payload validation
refactor ConsoleReader to improve string handling with masking to enhance readability and maintainability of the code
added user information and command line arguments to BaseCommand . java to provide users with contextual information about the user in the application
move graalvm . compiler . api . test to api . test
[ hotfix ] [ runtime ] remove unused constructor in slotsharinggroup
do n ' t try to use reflection on jdk 1.9 in jdk 1.8 .
updated texture file paths and audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio
added unregister receiver for mCloseSystemDialogsReceiver in Launcher . java to ensure proper registration and unregistration of mCloseSystemDialogsReceiver to
ambari - 19242 . ambari server hang generate task for install + start when add 600 host at a time . fix import order . ( mpapirkovskyy )
updated the ` ClientDetailsEntity ` and ` ChainedTokenGranter ` classes to introduce an ` allowIntrospection ` flag and modified
added HTML encoding for remote user and session attributes in HtmlSessionInformationsReport . java to enhance security by preventing XSS vulnerabilities
added comments for PhraseQuery , PhrasePrefixQuery , and SpanQuery in the Query . java file to improve code readability and maintainability by
updated condition checks to use ` isEmpty ( ) ` instead of ` size ( ) ` for better readability to improve code clarity and maintainability
refactor isLiteralString method to streamline string concatenation checks to improve code readability and maintainability
changed method parameter types from A to Object across multiple classes to enhance type safety and clarity in assertion methods
updated the ThrowingFunction interface to use a generic type parameter to enhance type safety and flexibility in handling different exception types
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods to use preferences directly instead of using a context reference to improve code clarity and
fix : do n ' t generate final field if there be no final field
updated BitmapDrawable initialization to use Robolectric ' s Bitmap class to ensure compatibility with Robolectric testing
renamed the methods ` isValidSEnding ` and ` isValidEnEnding ` to ` isValidEnEnding ` and added a new variable ` c ` to
update PageMarkerResources drawable reference from ic _ pageindicator _ add to ic _ pageindicator _ current to reflect the current state of the page indicator in the UI
added reinvocations to track the number of revocations in the backups completion completion message to improve clarity and tracking of the number of reactions
updated the calculation of top padding in DefaultLookAndFeel . java to ensure proper alignment alignment in the layout layout
added a break statement in a switch statement to prevent fall - through behavior in a switch case
added haptic feedback functionality to various UI components based on user preferences to enhance user experience by providing tactile feedback during app inter
refactor cell type checks in ExcelBatchReader and add a new test for text formula in TestExcelFormat to improve code clarity and ensure
fixed bug 1257840 - immutablefield no longer report false positive on anonymous inner class method
added a private String field for user agent configuration to allow dynamic configuration of user agent based on application settings
[ hotfix ] [ javadoc ] make @ xmlattribute optional
changed log level from info to debug for file not found messages to reduce log verbosity in the application
rename QueueTest to QueuedPipeTest to clarify the purpose of the test class
replaced version check with a direct check for OfflinePlayer class in BukkitMain . java to simplify version check logic and improve error handling
camel - 16400 : camel - core - optimize route collection to reduce object allocation
make pshape3d vertex color configurable
modified the ` printForeignKeys ` method to include a ` isPkColumnFiltered ` parameter and updated related logic to enhance foreign key filtering
replaced ShadowMatrix with direct matrix access to simplify code and improve readability
moved MetaRules from the api package to the parser package in MetaRules . java and removed unused imports from PythonDslProjectBuildFileParser . java
refactor class handling logic in GroovyEngine . java to simplify class definition processing to improve code readability and maintainability
chore ( branding ) : move plugin context listener to branding . plugin
updated print statement syntax in NativeCodeGenerator . java to improve code clarity and maintainability
replaced multiple calls to updateMotors ( ) with fireChangeEvent ( ) in FlightConfiguration . java to improve consistency in event handling
added tests for exception handling in ThrowableAssert _ hasCause _ Test . java to ensure proper assertion checks and improve test coverage to enhance test reliability
removed the flatten name and package names from the AutomaticDependencies class to streamline dependencies management by eliminating unnecessary attributes
updated scope validation logic in ClientDynamicRegistrationEndpoint . java to ensure allowedScopes is initialized correctly to prevent potential null pointer exceptions
add marionette test for set firefox profile .
added description property to route , and updated documentation
refactor JavacTreeMaker class to improve code readability and maintainability
added a weight parameter to the edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge edge
cloudcloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
updated SQL queries to include an additional column name " d . adrelid " in addition to a null value to enhance the accuracy of
added null check for binarized sentence in sentiment annotator
replaced direct return of the username with a string representation of the object ' s attributes to enhance readability and provide clearer context for the user '
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5851 : fix issue with
[ hotfix ] [ runtime ] fix task deployment descriptor factory
of - 2599 : move group visibility check to roster .
added a classpath reference to the project in AbstractJRubyMojo . java and removed unnecessary suppression warnings in CucumberMojo . java to
updated method signatures in MethodHandleImpl . java and added a new userMethod method in MethodHandlesTest . java to ensure compatibility with the correct method
added import for StopFilterFactory and NamedSPILoader to CommonGramsQueryFilterFactory , LegacyHTMLStripCharFilterFactory , and HTMLStripCharFilter
updated condition checks for width and height in URLImage . java to ensure proper handling of placeholder images based on their dimensions
added a condition to check if the name starts with " . class " and does not start with " META - INF / " before processing to ensure
modified the ` createImageToFileSystem ` and ` createImageToStorage ` methods to include an additional parameter and added a background task for handling
updated assertions in StackWalkerTest to use an expected version of VersionCheck to ensure compatibility with versions prior to 22 and above
changed the access modifier of the addViewportJob method from protected to public to allow broader access to the method for broader usage in other classes
[ hotfix ] [ test ] remove unused parameter from simplewordcount
updated server shutdown and system exit settings in TestDatabase . java to ensure proper server shutdown behavior and prevent abrupt termination
added null and empty checks in NodePathConvertOperator and SchemaQueryMergeOperator to ensure proper handling of null or empty blocks to prevent potential NullPointerExceptions
add total harvesting time to ice and ice udp
updated frame rates and counts in ParticleEditor . java to improve rendering performance and consistency in particle rendering
added handling for the " hadoop - env " configuration in UpgradeCatalog240 . java and updated test cases in UpgradeCatalog240Test . java
added a transparent background color to SvgViewerFactory to enhance visual appearance by providing a transparent background
removed the minimum SDK requirement from ShadowKeyguardManagerTest and ShadowKeyguardManager to streamline tests by eliminating unnecessary configurations
updated the method signature of ` containsExactly ` to accept a list of arguments instead of a single argument to simplify the method signature and improve clarity in
updated ` Bucket4jFilterFunctions ` to use ` refillGreedy ` and added a check for non - empty keys in ` AsyncBucketProxy
updated GermanAnalyzer , GermanStemmer , and WordlistLoader classes to enhance text processing capabilities for improved text handling
added hooks parameter to the Generator class and updated transformations in Optimizer and SemanticAnalyzer to enhance query processing to ensure proper handling of materialized views and
handle noclassdeffounderror gracefully
replaced instances of ` Span ` with ` SpanAndScope ` in ` TraceFilter ` and ` TraceWebFilter ` to improve clarity and
added a null check for the cause before setting the exception message in AbstractUpdateCommandStep to avoid potential NullPointerException when handling exceptions
updated exception handling to include the base URL to improve error context for SolrServerException
changed the condition for printing print setup record to set the print setup record to use a neg neg operator to ensure the print setup record is set to a
added a null check for the variable ' o ' in JavaVoidObjectInspector . java to prevent potential NullPointerException when accessing NullWritable
added validation to ensure argument names do not contain invalid characters or whitespace
added background location listener functionality to AndroidLocationPlayServiceManager to enhance location updates handling for better user experience
updated condition in MeshBuilder to check for GL _ POINTS instead of GL _ POINTS to ensure proper handling of different primitive types
trufflestring : optimize trufflestring . equals ( ) method .
added a method to set the command list in the ComboBox to enable dynamic configuration of the command list
nifi - 7078 : fix tl toolkit to escape alias file name .
updated ZkCLI to use localhost instead of hardcoded values for zkcli commands to improve flexibility and avoid potential issues with hardcoded values
updated comparison logic in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` getStatus ( ) ` instead of ` equals ( )
added a conditional check for RemoteGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpcGrpc
refactor method signatures in XYItemRenderer and CategoryItemEntity classes for consistency to improve code readability and maintainability
added entityid to tick entity to avoid npes
added a method ` getErrorString ` to return detailed error messages in ` GLSurfaceViewAPI18 . java ` to improve error handling by providing
add error message for unsupported locale
update RFC2616BaseTest to append " Host : MyHost " to the request to ensure compliance with the expected format of the expected response format
added a call to addToHelperList ( ce ) in Construction . java to enhance the utility list functionality
added a check to skip the first of the escape sequence in GlyphLayout to ensure proper handling of escape sequences in rendering
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring the correct context class loader
refactor file synchronization logic in ReceiveExternalFilesActivity to ensure proper handling of file paths to improve folder management and prevent null pointer exceptions
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is null
updated calculations in BarrowmanCalculator and TubeCalc to correct the calculation of the deltap value to ensure accurate computation of the deltapt
added a check for Node objects and updated column assignment logic in TimelineControllerImpl . java to ensure proper handling of node and edge table columns to enhance
added a method to register extra components in BaseBrokerStarter to enable dynamic configuration of broker admin application components
added a new test case for bug 4658 in MultiCfQueryExecIT . java to ensure correct handling of column sorting and order based on
peergroup : do n ' t reject peer that do n ' t support witness .
fix potential infinite loop in builder .
updated RatisClient and RatisClient to utilize a Supplier for RatisConfig to enhance flexibility in manag
updated multiple Java files to improve code organization and consistency across the project
replaced direct instantiation of JMXHelper with a conditional check for ManagedService annotation annotated annotated annotated annotated annotated annotated annotated annotated annotated annotated annotated annotated annotated annotated annotated
tika - 2978 -- upgrade to tika 1.8 . 0 and fix bug in packageparser
added a new file ` TestSplitThruPhiDivMod . java ` containing two mathematical operations to demonstrate the use of mathematical operations
added method to lookup generic types and subclasses in TemplateRegistry . java to enhance template lookup functionality for different generic types
increased the buffer size from 512 to 1028 to accommodate larger data inputs
added comments to the list of supported languages in the list of supported languages in the list of supported languages to clarify that the list of supported languages
fix for http : / / issues . apache . org / jira / browse / amq - 3088 - transfercompletionhandler . send
rename windowfocuslistener to windowdeactivated
added a null check for the source for the alias alias in SemanticAnalyzer to ensure that an error is thrown if the source alias alias is not null to
fix ( skeletalmesh ) : use correct skeletal mesh scale in skeleton rendering
added getSolrHome ( ) method to DistributedClusteringComponentTest and BaseDistributedSearchTestCase to DistributedClusteringComponentTest and BaseDistributedSearch
added @ ComponentScan annotation to SpringWebConfig to enable component scanning capabilities for the Spring application context
removed the getAccount ( ) method from UserListItem . java to streamline the code by eliminating unnecessary method
added tests for installing and managing package information in ShadowPackageManager to ensure that the installPackage method handles null package names correctly
refactor AvailableSettings class to improve code readability and maintainability
added constructors and methods to the TransactionTrace class to support initialization and finalization of TransactionCapsule instances
add ` ` shuffle member list ' ' property to client property ( # 13428 )
replaced ` Text ` with ` CrawlDatum ` in ` SegmentReader . java ` to use ` CrawlDatum ` instead of ` Text ` to
refactor JsonDeserializer to improve code readability and maintainability
updated configuration paths and refactored fetchSize initialization in QueryProcessExecutor and OverflowQueryEngine to improve thread safety and enhance performance performance
corrected the spelling of " trunc ( ) " in GenericUDFTrunc . java to improve code readability and maintainability
removed an unused import statement in TaskletStep . java to clean up the code and improve readability
initialize title to an empty string to avoid null pointer exceptions when title is null
return an empty response instead of null when no body
deprecate embed server instance in favor of new one
use reflection to register macevents in jabref frame
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated its usage to enhance clarity
updated the condition to return an enum from ` toEnum ( type , s ) ` instead of directly calling ` toEnum ( type , s ) `
made the hideUnprivilegedObjects variable final to ensure immutability of the hideUnprivilegedObjects variable
fix acoustic scorer to not fail on window
added support for saving Giphy video in Android Q devices to enhance compatibility with Android Q and improve video handling
fix : add support for variableinstanceentity in test
refactor multiple service - related classes to improve code organization and maintainability
refactor logger instance retrieval to use ` computeIfAbsent ` method to simplify code to improve code readability and reduce duplication
hbase - 16400 remove unused code from hbase - core
updated transaction IDs in TestAcidOnTez . java to correct bucket identifiers to ensure accurate data representation in tests
change log level from info to debug for enhanced class enhancement
add a default provider provider in the platform platform platform platform platform platform platform platform platform
added Captor annotation processing in MockitoBeforeTestNGMethod and MockitoBeforeTestNGMethod to enhance instance field processing to ensure proper handling of annotated
improve error message when no test case be find
updated import statements and modified prefix computation logic in GroovyAutoComplete . java to improve code clarity and ensure proper handling of empty identifiers
use osm instead of graphhopper for import
alexeibarantsev : use httpclient instead of httpclient for session .
changed the visibility of mHideSysUiScrim from final to non - final to non - final to allow modification of mHideSysUiScrim
added cancellation functionality and improved exception handling in OkHttpCall to ensure proper cancellation of calls and enhance error management
refactor swipe handling logic in WindowTransformSwipeHandler to improve swipe swipe gesture handling to enhance clarity and ensure correct end target assignment based on swipe
updated the RequestMatcher interface to extend the RequestMatcher class from the Spring Security framework to ensure compatibility with the updated Spring Security matcher implementation
added a new class ` ImplicitLambdaConsideredForApplicabilityTest ` with multiple interfaces ` A ` , ` B ` , ` C ` ,
[ j2kt ] add test for boxed constructor .
added tests to populate display metrics with default density values in DeviceConfigTest . java and updated DeviceConfig . java to set dimensions based on display
updated exception handling to throw RuntimeException instead of IOException and improved timestamp initialization in tests to enhance error handling clarity and ensure accurate timestamp creation
updated the icon used in the root cursor from a logo to a mipmap icon to improve the visual representation of the icon in the user interface
added a call to ` errorBuilder . setContentText ( content ) ` in ` FileUploader . java ` to ensure that the error message is properly displayed
refactor ConcurrentHashMap class for improved performance to enhance concurrency handling efficiency
added methods to adapt user trades from AbucoinsAdapters and AbucoinsTradeService to enhance functionality for handling Abucoins trade
updated methods in PlotSquared , Claim , Delete , and SetBlockFast _ 1 _ 8 to ensure proper handling of plot claims based on economy
simonstewart : make the htmlunit driver support the firefox browser
added support for handling VARBINARY data type in BlobType to enhance compatibility with different database types
refactor cookie version checks to use a single variable to improve code readability and maintainability
fix thread safety issue in libfficontext
updated InboundBuffer to use ContextInternal instead of Context to ensure compatibility with Vert . x ' s context management
updated LDAP connection timeout handling and added a dead server timeout test to improve test reliability and ensure proper timeout behavior
7186311 : ( prop ) ` ` unicode ' ' be misspell a ` ` uniocde ' ' in javadoc and error message
( chore ) camel - cxf : fix unit test
refactor multiple Synth - related UI classes to improve code organization and maintainability
added handling for BoosterSet instances in ComponentAssemblySaver and modified return value in BoosterSet to ensure proper processing of booster sets to enhance
added support for proxy user in jabref
corrected the spelling of " Blockchain __ FORK _ COUNT " to " blockchain _ FORK _ COUNT " across multiple classes to
replaced throwing an InternalError with returning false instead of throwing an InternalError to simplify error handling by returning false instead of throwing an exception
hbase - 26943 addendum fix test for hbase - 26943 ( addendum )
remove chunked transfer encoding from netty routing
added a call to ` clearAttributes ( ) ` in ` PatternTokenizer ` to ensure that all relevant attributes are cleared before processing new tokens
refactor VerificationAfterDelayImpl to include a pollingPeriod parameter and handle MockitoAssertionError to improve error handling and provide better control over the polling period
added authorization manager for SQL std authorization to enhance security by ensuring proper authorization checks during authorization checks
[ zeppelin - 2088 ] add support for docker interpreter in docker interpreter
hbase - 1782 addendum addendum fix hbase - server test failure
ignore partial escape analysis test for now
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , ` CombinedChartRenderer ` ,
added exception handling for XML parsing to ensure proper resource management and prevent memory leaks
added buffer release functionality to HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated references in ` JavaTypeGoat ` to ensure proper handling
added a null check for the result set before closing it to avoid potential NullPointerExceptions when closing the result set
updated driver version from - 1 to 10 in DerbyDatabase . java to reflect the latest version release
fixed bug 126978 - usestringbufferlength no longer report false positive for empty literal .
added error logging in RemoteSparkJobMonitor to improve error tracking and debugging capabilities
modified the createDb ( ) method to return a Connection object instead of void to ensure proper resource management by closing the database connection
refactor multiple Java files related to custom metrics to improve code organization and maintainability
hbase - 17826 hbase compaction should use off peak compaction by default
added JSON handling for deposit addresses in BitstampDepositAddress . java and created corresponding unit tests in BitstampDepositAddressTest . java to
replaced ` IllegalStateException ` with ` IllegalArgumentException ` in ` BufferingResponseListener . java ` to improve error handling for buffer capacity exceeded scenarios
updated link path handling in ProjectView . java to ensure correct path resolution for deleted directories
updated InvocationFinishedEvent to implement MetricsEvent instead of Event to enhance metrics tracking capabilities and improve clarity in metric handling
updated network interface handling in OptionsTest . java to check for multicast support before returning a network interface to enhance support for multicast support in network interfaces
added a loop to check for valid validations in the validations of validations in the validations of validations to ensure that only valid validations
added a clone ( ) method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to provide a standardized way to clone the IndexInput instance
replaced ` Math . sqrt ` with ` radius * radius ` in circle calculations to ensure that calculations are constrained within defined radius limits
updated frequencyBand assignment logic in P25Channel . java and added method overrides in P25ExplicitChannel . java to ensure proper handling of frequency band identifiers
renamed ` tapSquareSize ` and ` inTapSquare ` to ` tapRectangleWidth ` and ` tapRectangleHeight ` to improve cl
disable replication on write by default
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and implemented date formatting in CryptoFacilitiesAuthenticated and CryptoFacilitiesTradeServiceRaw classes
added getDelegate ( ) methods in TraceCallable and TraceRunnable classes to provide access to the original Callable and Runnable delegates for better traceability
updated error handling in FileActivity and FileDisplayActivity to use a dedicated method for fetching file details to improve code clarity and maintainability by
added methods to handle connection stream writable operations in ` ForeignIncubatorQuicheConnection ` , ` JnaQuicheConnection ` , and
added a boolean parameter to the method call to enhance functionality by allowing additional parameters
removed alignment parameters from TableCell constructor in BaseTextFormattingHelper and TableCell classes to simplify object creation and improve code readability
added TracingAutoConfiguration . java to implement tracing functionality to enhance observability and debugging capabilities in the application
updated content addition in Submissions . java to use a Para object to ensure proper handling of paragraph elements during content addition
refactor query segment handling to utilize a list of segments instead of a list of segments to improve clarity and maintainability of the code
refactor VertxBufferTest class to improve code readability and maintainability
updated date extraction logic in MessageSubmissionChunk . java and added a new test class TestMessageSubmissionChunk . java to improve date parsing accuracy and
changed access modifier of mContext from private to protected to allow subclasses to access mContext for better flexibility
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it to improve error handling related to Mongo
[ hotfix ] [ coordination ] return correct job completion future in jobcoordinatorservice
added a new method ` bytesToHumanReadable ` to ` DisplayUtils ` for converting byte arrays to human - readable strings to improve usability
removed type check for TieredMergePolicy in TestUpgradeIndexMergePolicy and added a noPathological merge in TestMergeOnFlushMergePolicy
added a check for mOverviewStateEnabled in RecentsView . java to prevent further execution to ensure code does not run when the overview state is not enabled
updated error message for binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary
modified the ` loadSettingModels ` method to accept an ` InputStream ` as a parameter to enhance flexibility by allowing the use of an input stream
added null checks for incoming fields and terms to ensure input parameters are not null to prevent NullPointerExceptions during runtime
add key size provider to jcecrmfencryptorbuilder , add test
updated exception handling in NetSocketReader and SoftEndOfStreamException to include a detailed exception message to improve error reporting by providing more informative error messages
removed unnecessary @ Inject annotations in various Java files to improve code clarity and reduce unnecessary dependencies
updated test cases in BundledDistributionTest and added assertions in PostgreSQLTest to enhance test coverage and validate database user attributes
[ hotfix ] [ stream ] support custom job name in pipelineoptions
refactor scaling logic in OverViewState . java to support two - panel layouts to improve layout scaling accommodate different screen orientations
fix ice plains biome not work correctly ( # 1865 )
removed unnecessary timezone parameter from getMinTime and getMinTime methods in DataUpdateManager . java and StorageUtils . java to simplify method signatures
[ j2kt ] add ` ` isQualified ' ' flag to ` ` thisreference ' ' to be qualify .
fix xhamster ripper to work on window
fix concurrentmodificationexception in glowworld
[ mondrian - 1230 ] fix for mondrian - 1230 ] oracle dialect to include schema in table name
fix checkstyle issue in flutterconsolefilter . java ( # 2893 )
added a ` mNumberOfAllFiles ` parameter to the ` FileMenuFilter ` constructor and updated related classes to support filtering of files based on
[ java ] : fix term offset calculation .
updated documentation for guildupdate owner event
updated in portal tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick tick
added support for compressed chart data in ClusterMonitorTileSkin to enhance the visual appearance of the chart by allowing users to choose whether to
refactor codec templates to improve code organization to enhance maintainability and readability of the codebase
updated Base64 class to use long instead of int for length calculations to ensure proper handling of larger data inputs to prevent integer overflow errors during calculations
removed null check for renderer in RendererConfiguration . java to simplify the condition for better readability
do n ' t update disk offering in case of new disk offering
updated import statements in HitbtcAdapters . java and modified the builder pattern in HitbtcAdapters . java to enhance code clarity and ensure
rename idleCount variable to concise concise consecutiveIdleCount variable to improve code readability and maintainability
updated the description URI for the JRuby scripting service from " jruby " to " judscriscriscriscriscriscriscriscriscriscri
updated the display name variable to use a local variable for the display name to improve code readability and maintainability
updated condition in ParticipateAssetIssueActuator to handle cases where preciseExchangeAmount exceeds or equal to zero to ensure that exchangeAmount does not exceed
removed a loop that checks for a limit of 10 to optimize performance by eliminating unnecessary iterations
added a test method for HDF4 file reading in HDFParser to ensure compatibility with the latest HDF4 file format
[ calcite - 6092 ] fix invalid time value in sql sql sql sql sql sql sql sql sql sql sql sql sql sql sql sql sql sql
reformatted code for better readability to improve maintainability and adhere to coding standards
added methods to quietly close a list of AutoCloseable objects to improve resource management and prevent potential NullPointerExceptions
updated the confirmation confirmation dialog dialog dialog dialog to use a common confirmation dialog to enhance user experience by providing a more user experience experience experience experience experience experience
added a check for non - zero width and height values before drawing the image in Pixmap . java to ensure that only valid dimensions are processed to avoid
replaced ` ReflectionHelpers . callInstanceMethod ` with ` java . security . ProtectionDomain ` for reflection in ` UnsafeAccess . java ` to improve
[ zeppelin - 2474 ] fix npe when parse port number in domain name
refactor conflict handling logic in CachedRowSetWriter . java to improve clarity and maintainability of the code
fix npe when no version be available ( # 5037 )
reordered case statements in ReferenceMemory . java to improve code readability and maintainability
added seed file handling and error logging in Injector . java to ensure only valid seed files are processed during input path injection
added a condition to check if hideOriginal is true before hiding the original view to ensure that the original view is not hidden when hiding the original view
updated maxNodes calculation and conditions in DefaultLoopPolicies to ensure maxNodes does not exceed the maximum allowed number of nodes to improve robustness by preventing
added a warning log for unsupported texture coordinates in combinedtexture .
do n ' t throw exception if we ca n ' t decode decode decode decode decode decode decode decode decode decode decode decode decode decode decode decode decode decode
added close method to TracingConsumer and TracingProducer classes to ensure proper resource management and prevent memory leaks
updated the handling of the ` handle ` variable in ` HandleDAOImpl . java ` and added a new parameter for the old prefix length to correct the
updated the initialization of convertedValsList to directly use an ArrayList with the collection parameter
deprecate abstracttimer constructor that have no effect
added a warning dialog for nightly builds in MainWindow . java to inform users of issues related to nightly builds to inform them to inform users
[ # 77050505 ] feedbacksessionresultsbundle : do n ' t return empty string instead of null ( # 7705 )
updated return message to remove unnecessary ` throws ` declarations to improve clarity in error reporting
deleted the CacheApplication class and updated references in CommonsApplication and ShareActivity to remove unused cache controller class to streamline the codebase by elim elim
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` Shadow shadow shadow shadow shadow shadow shadow shadow shadow
refactor StatisticsServlet class to improve code readability and maintainability
updated RuntimeEnvironment to use ResourcesManager for updating configuration to ensure compatibility with devices running KITKAT and above
added a new property ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` to the ` VersionDefinitionResourceProvider ` class and
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization to enhance maintainability and readability of the codebase
fix small bug introduce by cassandra -
added " com . sun . xml . internal . xml . internal . resolver . helpers " and " com . sun . xml . internal . xml .
renamed methods from ` save ` to ` add ` in multiple classes to improve clarity and consistency in method naming
fix graphutil . replacefirstinput with loopbegin
replaced ` RecyclerView ` with ` WidgetsRecyclerView ` in ` SearchAndRecommendationsScrollController ` and ` SearchAndRecommendationsView `
added a check to ensure terminal support is available before proceeding with operations
changed data types for ` timeAllowed ` from ` long ` to ` int ` in ` CloudExitableDirectoryReaderTest . java ` and
added a check for valid session validity in AbstractSessionCache and updated session handling in RemoveSessionTest to ensure that sessions are only flushed on response commit to
updated column name handling logic in ChangedIndexChangeGenerator . java to improve clarity and consistency in column reference and comparison handling
replaced Vector with ArrayList for managing radio buttons to improve performance and flexibility in handling action events
updated UserManagerCompat and UserManagerCompat classes to extend UserManagerCompatVM and introduced a new UserManagerCompatVm class to improve user creation
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to ` MockDatabase ` , ` AbstractDatabase ` ,
replaced ` Set ` with ` MapDifference ` for managing rule keys in ` ActionGraphCache ` to enhance clarity of mismatched
added LockDatabaseDesc and UnlockDatabaseDesc classes for managing database and unlocking states to enhance the database management capabilities within the Hive pl
updated the ` RankingTopComponent ` , ` RankingUIModel ` , and ` RankingToolbar ` classes to improve code organization and
updated logging statements in HandshakeHandler . java and NodeImpl . java to handle disconnect messages to improve clarity and accuracy in logging output
added tests for setting and deleting storage groups in IoTDBAuthorizationIT . java to ensure proper permissions are enforced for database operations
fix : add google : : cloud : : documen to documen
added type validation for variable declarations in Assertions . java and enhanced variable type checking in FindMissingTypes . java to improve type safety and ensure
added lifecycle methods to StepScopeTestExecutionListener to enhance test lifecycle management
updated import statements and method signatures in CountersManager and CountersManager classes for consistency and clarity to improve code readability and ensure proper
removed the ` toString ( ) ` method from ` MultiSteps ` and ` SendEmail ` classes and replaced it with direct calls to ` setAddress (
added a null check and cloning logic for joinKeys in JoinDesc to ensure joinKeys is properly initialized before use to prevent unintended modifications to
updated WebAuthnConfiguration to use a custom principal resolver to enhance flexibility in authentication handler registration
added searchPaths parameter to the addSettingsFromFile method in XcconfigStack . java and updated related tests in XcconfigParserTest .
made certain fields in Oracle . java final to enhance immutability to improve code safety and prevent unintended modifications to these fields
[ hotfix ] [ doc ] [ doc ] [ checkpointing ] do not advertise unaligned checkpoint option until rescaling checkpoint be complete
throw unsupportedoperationvisitor instead of nullpointerexception when function be not support ( # 16428 )
add option to compiletheworld to disable test
added a check for LocalVariable type in LambdaRewriter . java to ensure proper handling of local variable declarations to prevent runtime exceptions
added support for MySQL database types in CreateTableGenerator to ensure proper handling of NULL NULL NULL values for MySQL and MySQL to enhance compatibility with MySQL and
added context class loader management to ensure proper class loading behavior in the application context
added a condition to set ejection delay when stageNr is zero to ensure proper ejection delay behavior when no stage is provided
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated its usage to improve clarity to enhance code readability and
refactor TransactionUtil2 class to improve transaction handling efficiency
updated ` BaseTokenSigningAndEncryptionService ` , ` OAuth20TokenSigningAndEncryptionService ` , ` UmRequestingPartyTokenSigning
updated string concatenation syntax and added null check for ' coll ' to improve code clarity and handle potential null pointer exceptions
replace getStyle ( ) with getAllStyles ( ) for setting alignment to ensure alignment is applied to all styles to maintain consistent styling across all styles
added foreignDatabaseName and foreignSchemaName fields to ForeignKeyColumn and related classes to allow dynamic configuration of foreign database and schema names
[ java ] clean up electiontest . shouldvassmembersinunsuccessfulleadershipbalance .
added a shadow method ` shadowOf ` in ` ShadowActivity ` and ` ShadowBluetoothDevice ` to ` ShadowActivity ` and ` ShadowBluetoothDevice `
added handling for wildcard root paths in FileSelection . java and introduced a new test for a specific bug in TestBugFixes . java to
deprecate oninventorytick in favor of oninventorytick
fix : do n ' t generate jar for wildfly
added null check before calling invalidateOptionsMenu to prevent potential NullPointerException when accessing getSherlockActivity
updated widget binding logic in AppsCustomizePagedView and Launcher classes to utilize a unified options for binding options to enhance flexibility in
added new capability constants for air press and quality in EcobeeSensorThingHandler to enhance functionality to support additional sensor capabilities
refactor code to improve readability and maintainability
added environment variable " AAPT " and " AAPT2 " to the Genrule class and corresponding test cases to enhance functionality to support
use trufflecompileroptions . getinstrumentBranches ( ) instead of trufflecompileroptions . getinstrumentBranches ( )
added null check before disposal of message in Validator . java to prevent potential NullPointerException when message is null
added @ Getter annotation and modified initialization logic in multiple classes to improve code clarity and ensure proper initialization of the database object
updated log warning messages to indicate that log watching is not yet implemented for log4j to improve clarity on logging behavior
updated error handling by replacing printStackTrace calls with return statements to improve clarity and consistency in error reporting
updated IOSImplementation . java to improve teleportation handling and added SmallByteArrayOutputStream class to enhance code robustness and introduce a
* update j3o to use vertexbuffer instead of string
updated the connection string from " tuts : : close = true " to " tuts : : shutdown = true " in AbstractDIHJdbcTestCase
( chore ) camel - jbang : fix npe in routeinfo
added default language handling in TestHtmlTag and enhanced test cases in TestUseOption to improve code clarity and ensure accurate HTML output for
updated condition to check if the result is not incomplete and has more than 10 items to improve validation to ensure that the result is valid before proceeding
updated command line arguments in HybridClusterIntegrationTest to use time column name instead of time field specification to improve clarity and flexibility in handling time
refactor output format handling to differentiate between HTML and XML formats to improve flexibility in output generation
updated condition in DeviceProfile . java to check for non - QSB enable status to ensure proper handling of layout constraints
added ` Objects . equals ` and ` Objects . equals ` methods to ` AnimationList ` , ` SceneKey ` , and ` Glt
added a ` _ date ` variable and a method to set it in ` AbstractGenerator ` , ` Generator ` , and ` HttpConnection ` , and
replaced Adler32 with CRC32 in the Store . java file to enhance performance and reduce memory usage by using a CRC32 implementation
cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
added a constant for ZERO _ AREA _ FIN and updated warning handling in FinSetCalc to improve clarity and maintainability of warning logic
updated ElasticsearchIO to utilize Jackson ' s Serializer instead of Jackson for JSON serialization to improve compatibility and maintainability of
hhh - 14614 add trunc ( ) function to h2 and sql server dialect
added a memory pool error handling in MetricUtils to log warnings for non - existent gauge conversion to improve error reporting and clarity in error handling
make sure to return a completable future future future future future future future future future future future future future future future future future future future future future .
updated error messages in ValidationTask . java to use constants for type annotations to improve clarity and maintainability of error messages
updated the BACKFILL constant from " / generateAnomaliesInRange " to " / replay " in DetectionResourceHttpUtils . java to align
replaced instances of ` new DataWord ( new DataWord ( ( new DataWord ( ( new DataWord ( ( new DataWord ( ( 1 )
refactor the iteration over child views in AllAppsContainerView . java to improve the handling of child views to ensure proper badge application updates to enhance
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0
updated context start logic in ResourceHandlerTest . java and ResourceHandlerTest . java to ensure proper initialization of ContextHandlerCollection and ContextHandlerCollection
removed the check for WORKSPACE _ CUSTOM in the Cling class to simplify the logic for handling specific identifiers
truffle : remove assertion to avoid npe .
added @ Ignore annotation to the shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow shadow
updated import statements in ItBitDemoUtils , ItBitOrderBookDemo , ItBitTickerDemo , and ItBitTradesDemo files to
ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww
added a private constructor to Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to prevent instantiation of Utils and AsyncSocketFactory
cloudstack - 4893 : fix findbugs warning in regionionsapiutil
updated serialization and deserialization logic in Util . java to use " java . util . Hashtable " instead of " java . util . Vector " to
updated retention time logging to include table type information to improve clarity of retention time warnings for better debugging
added trimming to fragmentList length checks to ensure fragment names do not contain leading or trailing spaces
fix modfileresourcepack . getresourcepackfilenotfoundexception ( # 9518 )
refactor TransformerBuilder type handling and update button addition logic to improve code clarity and ensure proper selection behavior
modified conditional logic in RecentsView . java to simplify the condition to improve readability and maintainability of the code
updated the ` calculate ` method to return a ` BMIViewObject ` instead of a ` Map < String , String > ` to enhance
removed unnecessary comparator reference from the comparing method in QueryCommand . java to simplify the code and improve readability
fix damage calculation for hay bake entity
refactor environment variable handling to support both IBM _ JAVA _ COMMAND _ LINE andGACY _ JAVA _ COMMAND _ LINE to improve
added support for custom plugin property value in optionsparser
updated condition to check if hashTable is not empty before evaluating join type to ensure proper validation of hashTable before proceeding with join type checks
updated timestamp validation logic and renamed test methods in Timestamp . java and TimestampTest . java to improve accuracy in timestamp handling and enhance clarity to ensure
[ java ] [ java ] clone the archive context in clusteredserviceagent .
updated conditional logic in LambdaForm . java to include a check for non - compiled compilation compilation compilation compilation compilation .
added tests for image Mosaic functionality in DB2OnlineTest , DB2OnlineTest , and H2OnlineTest to ensure proper handling
updated TogglableFlag to use a new constant for launcher name and added change listener functionality to enhance code clarity and ensure proper handling
updated log messages to use parameterized logging format to improve logging clarity and consistency in log output
added a condition to return early if the current platform is not Android to prevent unnecessary processing for Android devices
replaced assertEquals with assertThat in RoutesTest . java to improve readability and maintainability of the test cases
added new interfaces BytePredicate , FloatToLongFunction , FloatToLongFunction , and ShortToLongFunction in the com . speedment . common . function package to
changed return types of ` getSubsColor ( ) ` and ` setSubsColor ( ) ` methods from ` int ` to ` String `
added a conditional check before deregistering the invocation to ensure that deregistration occurs only if the future completes successfully
replaced the flush method with a call to output . output ( null , nop , null , close . asFrame ( ) in AbstractWebSocketConnection . java
added a condition to start the WelcomeActivity based on the intent ' s state to ensure the WelcomeActivity only opens when necessary to improve user experience
added ShadowCheckedTextView to manage checked state functionality in Robolectric tests
added serialization support to the Parser and Parser classes to enable serialization for the Parser and Parser classes
8237504 : add identrustdstx3 to verifycacerts . java test
removed duplicate code for setting TEMPDIR _ CONFIGURED in WebInfConfiguration . java to improve code clarity and maintainability
of - 249 : fix npe in muc occupant occup occup occup occupant ' s nickname .
updated QuicSession and QuicConnection classes to accept a context parameter instead of using a Map for context to enhance flexibility by allowing
updated merge configuration handling in CreateIndexTask . java to utilize LogMergePolicy instead of NoMergeScheduler and ConcurrentMergeScheduler to enhance
refactor ICU4JImpl and TextPosition classes to improve code readability and consistency to enhance maintainability by standardizing variable names and
added support for ComputedDateValue and ComputedNumericValue in the AddDefaultValueChange class to enhance functionality to handle numeric input for default
refactor NbtScoreboardIoService class to improve code readability and maintainability
do n ' t store provider metadata if not writable
make ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig ig
updated HuobiAdapters . java to incorporate BigDecimal division to ensure accurate handling of order amounts in order processing
updated projection handling in ProjectionOperation and TypeBasedAggregationOperationContext to use ` fields . field ` instead of ` String ` to improve type safety
modified the condition for adding a player in FakePlayer . java to ensure player addition only occurs when the viewers are in the viewers list to improve
added ConstantState handling in FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve state management and prevent potential null pointer exceptions
refactor SPDYClient to improve connection handling to enhance code clarity and maintainability by centralizing connection management
fix nullpointerexception in protostuffobjectoutput # writeobject ( null ) ( # 1301 )
pdfbox - 4892 : improve code readability , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability and maintainability
ggb - 1375 do n ' t draw ax if they do n ' t have ax
replaced direct calls to ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` methods to enhance security
removed unnecessary whitespace in returnToWorkspace method call to improve code readability and maintain consistency
added support for HTTPS in the CustomUrlJob and created a new CustomUrlTrustEverything class to enhance security by ensuring all certificates are validated
updated encoding handling to use ` getRealUsedClockRateString ( ) ` instead of ` getEncoding ( ) ` to improve clarity and correctness in
refactor TextureAtlas class to improve code readability and maintainability
replaced ` getProductNameForBuildTargetNode ` with ` getModuleName ` in ` ProjectGenerator ` and added ` setModuleName ` method to ` AppleLibraryBuilder
http : / / issues . apache . org / jira / browse / jira / browse / jira / browse / jira / browse
add test for findids ( ) with inheritance
replaced ` closeFrame ` with ` rbuf ` in WebSocket WebSocket WebSocket WebSocket connection connection connection to improve clarity and ensure correct handling of WebSocket WebSocket WebSocket
[ wasm ] make sure to reset the reference stack when the fn type be extend .
added a ` ttl ` parameter to the query in ` ClickHouseLogCollectClient ` and implemented it in ` ClickHouseLogCollectConfig `
replaced ` SerializationType . NESTED _ OBJECT ` with ` SerializationType . NAMED _ FIELD ` in ` CustomChangeWrapper ` and updated serialization
replaced ` QueuedThreadPool ` with ` JettyServer ` for starting and stopping the server in ` DeploymentExceptionTest ` to improve server management and
added error handling for initialization in CommonsApplication and updated vectorDrawable initialization in NearbyController to improve robustness and prevent crashes due to missing drawable
modify the return statement to handle null or empty objectName gracefully to ensure that the application does not return an empty string when objectName is null or empty
improve error message when file can not be open
[ hotfix ] [ table - planner - blink ] [ refactor ] change default planner class and executor class to static final
updated variable names and logic for handling null values in KeyTool . java to improve code clarity and ensure proper handling of certificate subject names
mark RuntimeOptions as deprecated to indicate that this will be removed in future versions
replaced manual byte encoding with direct byte conversion to improve code readability and efficiency
added a new interface PermissionEvaluator to provide a mechanism for checking permissions in security evaluations
added ERASE _ LINE _ ON _ FINISH option to the LineReader and LineReaderImpl classes to enhance user experience by allowing immediate termination of
do n ' t try to connect to a server that do n ' t exist in the cluster
updated exception handling from CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR in P2pException and TronNetDelegate
make sure to close the jar file when delete a war
improve error handling in fullnettyclienthttp . fix # 2883
changed the centering of the spinner from center to centerAbsolute to ensure the spinner is centered on its absolute position
[ hotfix ] [ network ] optimize networkbufferpool # requestmemorysegments
replaced the local variable ` mbeanServer ` with a static instance variable ` newMbeanServer ` in ` TestJmxIntegration . java ` to
replaced AndroidJUnit4 with RetryTestRule in AbstractIT . java to improve test resilience against transient transient transient failures
refactor QueryStateMachine to remove autoCommit parameter and simplify transaction management to enhance code clarity and ensure consistent transaction handling
fix checkstyle issue in csv csv test
added support for " javax . net . ssl . DistinguishedNameParser " and " javax . microedition . khronos .
[ hotfix ] [ test ] remove unnecessary lambda in streamtasktimertest
refactor connection handling in Request . java and add a new test in RequestTest . java to improve null safety and enhance test coverage for
updated constants and methods related to storage point retrieval in MainApp , DataStorageProvider , and WhatsNewActivity to improve code clarity and
added methods to handle session availability and priority changes to manage session status in the session management system
added a call to ` addPackageToScan ( " liquibase . pro " ) ` in ` ServiceLocator . java ` to enable scanning for
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` to simplify the method ` deleteOtherSynced
updated the ` loadWithNewGlobal ` method to accept an additional ` Object [ ] ` parameter to enhance global context to allow for more flexible
updated condition checks for start indices in FastPathResolver . java to improve accuracy in matching relative paths
updated the weigher method to use ` toIntExact ` instead of ` length ( ) ` for obtaining the retained size to ensure accurate
updated method names from ` hasExceedRandomizationDepth ` to ` hasAlreadyRandomizedType ` across multiple classes to improve clarity and
added support for handling functions like " LEAD " , " LARG " , and " LARG " in UnsupportedOperatorsVisitor . java and
clear the headers in AbstractProxyServlet to ensure that the request headers are reset before processing new requests
added a check for SA attach availability to skip test execution if SA attach is not expected to work
added a null check for bgColor before checking its alpha value in GraphicsDevice . java and created a new TranslucentWindow . java file
updated UserInfoActivity to check for null phone , email , and webpage before displaying user information to enhance error handling and improve user interface
added a custom serialization class to PrecompiledHeaderData to prevent serialization of precompiled headers to ensure compatibility with different machine environments
[ hotfix ] [ connector / kafka ] [ table - planner - blink ] [ connector - blink ] [ table - planner - blink
added a new test class ` MultipleOutputsIntegrationTest ` to implement integration tests for named output groups in the project
added content matching in FileSettings . java to ensure the content matches the expected values before processing
[ flink - 15633 ] [ stateless ] fix compilation error in flink - runtime
replaced instances of ` new Object [ ] ] ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests ` to improve
added a persistent taskbar mode annotation to TaplTestsQuickstep . java to enable persistent taskbar functionality in the application
added new device status entries for dock and energy save mode in DeviceStatus . java to enhance device management functionality
improve error logging for blockstate location exception
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to mark the test as ignored to temporarily ignore the test case to temporarily
fix ( opengl ) : do n ' t try to set current pixel scale to 1 for 2d graphics
renamed RussianLowerCaseFilter class to improve clarity and consistency in naming conventions
updated configuration properties in CsvBulkLoadToolIT . java and simplified server connection logic in QueryUtil . java to improve code clarity and
replaced ` File . separatorChar ` and ` File . pathSeparatorChar ` with ` _ ` in ` FileDisplayActivity . java ` to ensure consistent
fixed loading of wAV file by reset the seekable stream
added a ` repeatFirstLineIndent ` parameter to the ` setIndent ` method and modified the indentation logic in the ` setIndent ` method to control the
cast the Oid object to Object type before comparison to ensure proper type handling during equality checks
do n ' t register mbeans if metric tracker be not available
fix for control flow anchor node .
fix focus issue on mac o x
updated conditional check for " backingIndex " field in DatabaseSnapshot . java to support both Primary Primary Primary key and ForeignKey instances to ensure proper handling of
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and ` AccountAPI ` classes to
[ ds - 3762 ] ensure that dc . title do n ' t contain empty metadata
do n ' t crash if there be no utterance
added unit test base on user forum issue
updated the method for retrieving and setting the number of database update threads in FeedRefreshUpdater to ensure the application uses the correct thread count for database updates
reduced the fast scroll threshold from 40 to 10 milliseconds to improve user interface responsiveness
make hotspotresolvedjavfield . getsystemclassloader ( ) non - null
hhh - 13644 procedure call should not throw npe
added null check for apiProperties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing configuration properties
added BinaryFrameGenerator and TextFrameGenerator classes for handling binary and text WebSocket frames to enhance WebSocket frame generation capabilities in the application
danielwagnerhall : fix flaky test for firefox 2 . x
updated lat and lon calculations in RandomGeo3dShapeGenerator to use random boolean parameters to enhance randomness in geospatial calculations
added keepAlive method to ResourceBundle to ensure proper resource management by preventing memory leaks
change return value from false to true in SQLiteDatabase . java to ensure successful operation operation
do n ' t report jsr166 lock monitorerent ' s priority if it ' s a utility method .
added MkdirStep to create temporary files in various classes to ensure temporary files are created if they do not exist
updated boundary checks and error messages in MeshLeveler . java to enhance clarity and maintainability of error handling logic
[ kie - maven - plugin ] do n ' t try to load jpmml libs from classpath if they be not available ( # 3
updated the condition from ` locationMode < = THERAL _ STATUS _ SHUTDOWN ` to ` thermalStatus < = THERAL _ STATUS _
updated temporary directory handling for macOS to ensure compatibility with different operating systems ' temporary directories
[ geot - 4735 ] fix memory leak on window
added validation to ensure that the plugin organization is provided in the pom . xml file
updated license header in SepPostingsWriterImpl . java to ensure compliance with licensing requirements for contributions
deleted the TerminateWebSessionListener . java file to remove unused code related to session termination
updated the method call to use the system property for the Java class path to ensure the child process executes with the correct class path configuration
replaced instances of ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` and ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` 0 ` in `
add license header test ( # 3198 )
updated LAUNCHER3 _ PHYSICS feature flag from false to true to enable launcher3 PHYSICS functionality
added a paragraph tag to the HtmlThreadInformationsReport to indicate that no print statement should not be printed in the report
updated Lucene version from 3.1 to 4.0 in Constants . java and LuceneTestCaseJ4 . java to reflect the latest version of
added ` symbolicator ` and ` task ` fields to ` BsdDebuggerLocal ` and updated conditional logic in ` PlatformInfo ` to enhance support
fix potential memory leak in network dispatcher
log muted network dispatcher exception
[ java ] : fix initialization of admin buffer in aeron client .
added a break statement in a switch statement to prevent fall - through behavior in a switch case
chore : update gapic - generator - java version to 2.1 . 0 ( # 241 )
removed unnecessary SSL filter checks and streamlined the flush logic in FeedableBodyGenerator . java to improve code clarity and maintainability by eliminating
added type - checking for " java . lang . Object " in addition to " java . lang . Object " in addition to " java . lang .
use concurrentskiplistset instead of nonblockingsetset to avoid deadlock
added null check for ` errs ` in ` MemberEnter ` and updated error checking logic in ` JavaCompiler ` to enhance error handling and improve error
changed the SWT type from NO _ BACKGROUND to NONE in the browser initialization to allow for a broader range of background color settings
replaced ` finish ( ) ` with ` cancel ( ) ` for the negative button in ` AboutActivity . java ` to ensure the dialog is closed
fix integerstamp . div ( ) to handle negative input
added a method to read a stream from an InputStream and updated image loading to use a custom readStream method to improve memory efficiency by avoiding direct URL
refactor SwitchCompiler and CaseStmtToken to improve variable handling and add scope management in expression generation to enhance code clarity and ensure proper scope handling
updated the initialization logic for the cipher provider in RSAClientKeyExchange . java to enhance error handling for unsupported cipher providers to improve robustness by
added " psapi . lib " to the " AdditionalDependencies " attribute in WinGammaPlatformVC10 . java to ensure compatibility with additional system dependencies
updated comment handling to use the system ' s line separator to ensure consistent line endings across different operating systems
added imports and configuration settings in TemplateEngineFreemarker . java , and modified HTML scripting in ApplicationController . java , and modified HTML content
refactor byte array handling in CRDGeneratorTest to improve readability and maintainability to enhance code clarity by using a clear string representation of
make hold _ samples a final field in samplesenderfactory
disable emailablereporter by default
updated command line argument handling in CommandLineBuilder . java and added a test for quotation marks in CommandLineBuilderTest . java to ensure correct quoting behavior
removed public access modifier from interfaces in multiple Java files to enforce encapsulation practices
added a method to set the number of reduce tasks in the job to ensure the job uses the correct number of reduce tasks
fix schemageneratorhelper to handle default value
bug 532077 - update file version to 532077
added support for GL _ ARB _ ARB _ Texture _ FLOAT , GL _ ARB _ Texture _ FLOAT , GL _ ARB _ Texture
make fileserver more thread - safe
added a null check for outputDirectory and jarStream before setting it to avoid potential NullPointerExceptions when outputDirectory and jarStream to ensure outputDirectory is
added performance measurement for SQLite database operations to improve monitoring and performance analysis
updated JDK tool path retrieval in JMapHProfLargeHeapTest . java and JDK tool launch launch launch launch launch launch launch launch launch launch
add a new enum resourceerrorhandling to make it easy to identify resource error handling
added a condition to check if the buffer position exceeds the buffer size in RAMInputStream . java and implemented a test for EOFException in TestRAMDirectory .
improve error message for miss resource
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag in ForkJoinPool and added AccessControlContext
updated CHECK _ EVERY _ N value and added logging for free memory checks to improve memory management efficiency and enhance debugging capabilities
hbase - 24583 fix testsplittransaction . testsplittransaction ( ) to be more correct
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
[ jetty - 9 ] add test for jetty - 977
added a condition to check if ` spanX ` equals ` spanX ` and ` spanY ` when creating a folder folder in ` CellLayout `
updated CacheOffHeap class implementation to improve performance and memory management
add a check to prevent reference later table
added a check to prevent exceeding the bounds of the current layer layer height to ensure that only valid XML values are processed and log a warning when processing
fix thread safety issue in inmemorytilecache
added a new Java class ` Solution ` that implements a solution for a specific algorithm that processes a given number of steps in addition to a given number of
added a new interface ` AddressChecker ` and updated ` TrackerRequestProcessor ` to utilize it to improve address validation logic to enhance address handling by
fix a bug in multilayermodel that cause a nullpointerexception when set the render level to transparent .
remove tag from ` ` comment ' ' and ` ` default ' ' text .
changed the data type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and ` Capability ` classes to
added a null check for recieptents before executing email email email to avoid potential NullPointerExceptions when recieptents is null
refactor isSingle logic into a separate method to improve code readability and maintainability
modified DockerClientFactory to conditionally execute command ping commands based on failFast parameter to ensure commands are only executed when successful , enhancing
added a ` ResourcesMode ` parameter to the ` AndroidMetadata ` class and updated related methods in ` RobolectricTestRunner ` and ` Robo
hhh - 1462 fix date handling in historicprocessfilequeryimpl
changed the import method from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure the correct core is used
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting and user feedback during command execution
refactor TreeMap class to improve code readability and maintainability
added option to enable async stack trace for debug
added a method to set glow color in BubbleTextView to allow customization of glow color for folder items
added styling for file row text in LinkedFilesEditor to improve user interface consistency
updated AbstractJdbc2ResultSetMetaData to return " java . lang . Short " instead of returning " java . lang . Short " and added a new test
removed error handling for file writing in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to simplify the file writing process by
added null check for _ info before checking the status of SWITCHING _ PROTOCOLS 101 to prevent potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class to allow setting a provider for the ShadowLocation class
added a check for 32 - bit devices to ensure that maxRAM does not exceed 2048 limits to prevent potential memory overflow issues
add miss statistic for no data in no map
added logging functionality to FileProfileActivator to enhance debugging and track file existence checks
update PdfWriter to use " invalid _ " instead of " noname1234 " to improve clarity and accuracy in error reporting
use set instead of list to avoid concurrentmodificationexception
updated array length checks to use the constant MAX _ NUM _ UPUPUPUPUPUPUPUPUPUPUPUPUPUPUPUPUPUP
added unit tests for the delete operation in DashboardUserMapper to ensure the delete operation works correctly and the deletion of records in the system
[ # 7569 ] instructorfeedbackresultspageui : change the parameter name from recipient to secondary
[ gr - 25854 ] fix npe when deref handle be miss .
added a method to get the buffer size in BufferedIndexOutput to provide access to the buffer size for better resource management
add usage help to terasology command .
refactor action bar title setting logic in DrawerActivity . java to improve clarity and maintainability of the code
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line argument parsing
added new animation effects for ALL _ APPS state and modified the ALL _ APPS _ CONTENT _ FADE _ MIN _ CLAMP
updated the method call to use ` javaNameFromExternal ` instead of ` javaName ` to improve clarity and consistency in handling external names
added native method ` setFrame ` and ` release ` to the ` CWrapper ` class to facilitate frame manipulation in the application
added validation for constant elements in the Checker . java file and created a new ValueTest . java class for testing to ensure that only valid constant
updated test cases in MontgomeryMultiplyTest ,MulAdd , and TestSquareToLen to improve test coverage for mathematical operations
removed null check for constructors in PojoUtils . java to simplify the code by assuming constructors are always empty
refactor JiraConfiguration class to improve code readability and maintainability
updated error message formatting in UploadBuild . java to improve clarity and consistency in error reporting
updated bounds parameters in DeviceProfile . java to include search bar offset to ensure proper layout adjustments in layout adjustments based on search bar offset to improve
[ pulseaudio ] fix npe in pulseaudio
refactor OverviewCommandHelper to run activity directly from the UI thread to improve UI responsiveness by avoiding blocking the main thread
added a new method ` getSourceGroup ` to the ` AppleSource ` class to retrieve the optional source group from a ` Pair < String , ImmutableList <
increased the timeout duration in ` triggerFiredLatch . await ` from 2 seconds to 3 seconds to allow for a longer wait for the trigger to fire
update floatstreamreader to use positioncount instead of outputpositioncount
improve performance of node cost search .
added a check to skip processing for specific component types in ResourceEditorView . java to optimize resource editing by bypassing unnecessary processing for specific components
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView ` and ` FloatingIconView ` classes to ensure compatibility with the latest
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is initialized properly to avoid potential null pointer exceptions
added unit tests and methods to retrieve IMEI and MEID for different slot indexes in ShadowTelephonyManager to enhance telephony manager functionality and ensure correct retrieval of device
added debug logging for request handling in SimpleHostRoutingFilter . java to improve traceability of request processing for debugging purposes
added resource destruction methods to various classes to ensure proper resource management and prevent memory leaks
[ hotfix ] [ test ] fix bug in normalmessagerrunandreceiveit
use standardcharsets for good performance
hbase - 17826 bulkload should not throw multipleioexception when file do n ' t exist
added a ` commission ` parameter to the constructor of ` DefaultWithdrawFundsParams ` and updated its usage in ` RippleWithdrawFundsParams
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
replaced multiple catch blocks with a consolidated catch block for SolrServerException and SolrServerException to simplify exception handling and improve code readability
added a validation check for abstract abstract methods in Java2TypeScriptTranslator . java to ensure that only valid abstract methods are invoked to avoid runtime
added logging capabilities to the FileSessionDataStore by using StacklessLogging to improve logging clarity during disk clearing operations
added serialization support to MutableColumnDataType , SqlDataType , and Entities classes , and modified their access modifiers to enhance data handling capabilities and
rename SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added null and empty check for claimRequestString before parsing to improve robustness by handling potential null values more gracefully
replaced ` FilterFactory ` with ` RelBuilderFactory ` in ` HiveFilterSetOpTransposeRule ` to utilize ` RelBuilderFactory ` for impro
updated the ` processTypeHintForNestedDocuments ` method to include a null check for the source object before processing type hints for nested documents to
replaced instances of ` mcr ` with ` coreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and ` CollectionsAPIDistributedZk
fix ( moddir ) : initialize transformers and locators to avoid npe
fix error message in abstractquerydslprocessor
improve error message to be more informative .
rename ` setOf ` methods to ` copiedSetOf ` for clarity to improve code readability and maintainability by using a more desc
( chore ) camel - mail : use identity hash code for mail
http : / / issues . apache . org / jira / browse / amq - 5652 - fix npe in prefetching for prefetch
updated the return statement to use setIsPropertyName ( ) instead of getIdentifierName ( ) to ensure proper property name handling
added WaveGeneratorActivity to manage WaveGeneratorActivity and replaced Toast display with Launch Launch Launch Launch Launch Launch Launch Launch in InstrumentsFragment to improve user experience
added logging for null values in KeyedProperties . java and improved null handling in SheetOverlaysManager . java to enhance error handling and prevent
added test for log and exec in podit
added a new method ` noWriter ( ) ` to the ` TestReplicationHandler ` class to handle cases where no index is found and create a new
do n ' t call super . dispatchmethodkernelokra if not necessary
ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww ww
refactor thread creation in XToolkit . java to use a privileged action for better encapsulation to improve code readability and maintainability
added validation and updated dropdown selection in SelectBox . java and UITest . java to ensure compatibility with Linux6 environment
replaced throwing an IllegalStateException with printing the stack trace in JobGlobalListener to improve error handling by providing more informative stack traces
refactor ` createState ` method to accept a ` SplitState ` parameter and update related logic in ` FlowBuilder ` and ` SplitState
changed the connectionState variable to be volatile to ensure thread safety when accessing the connection state
updated DEFAULT _ POLLING _ PERIOD to 1000 milliseconds to allow more time for polling polling polling polling polling polling to be polling polling polling polling polling polling
[ hotfix ] [ core ] optimize memorystack . encodeASCII and memorystack . encodeutf8
added error handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting and provide cle
pmd : fix false - positive with enums
replaced lambda expressions with method references across multiple classes to improve code readability and maintainability
added a parameter name " ssl = { 0 } " to the @ Parameterized . Parameters annotation in AbstractHttpClientServerTest . java to improve clarity
improve error message when transformation fail
changed the variable name from ` userPermission ` to ` activeConnectionPermissions ` in ` ActiveConnectionRESTService . java ` to improve clarity and consistency
updated the equality check in the Point class to use Apache Commons Lang ' s EqualsBuilder to improve code readability and leverage Apache Commons Lang
added null check for outputRoot before processing to avoid potential NullPointerException when outputRoot is null
pdfbox - 4071 : add annotationfilter to allow custom annotation to be pass to a page
updated StackTrace handling javadoc to clarify usage of stack trace methods
added content type for CSS and JavaScript files in the PluginServlet to ensure proper handling of file uploads based on the file type to improve file uploads
hhh - 14530 skip test for oracle and sybase
updated the ` upgrade ` method to use ` slotSize ` instead of ` slot ` for better clarity to improve code readability and ensure proper handling
added getStats ( ) method to AbstractDataImportHandlerTest , Context , and ContextImpl classes , and updated DocBuilder to use AtomicLong and Atomic
updated the KieClient to use an AtomicBoolean for managing the executors and added long polling functionality to enhance thread safety and control
added accessibility support and refactored gesture handling in multiple classes to improve accessibility support and streamline gesture scrolling functionality
updated unlocks initialization in UI . java and added a button to show unlocks in PausedDialog . java to improve clarity and functionality of unlock
clear the drop list of events in PlayerEventListener to ensure that the drop list is reset before new events are processed
added a new constant ` DEFAULT _ PARAM ` to the ` StreamResult ` class to provide a default parameter for processing input data
updated exception type in testNormalizeOrder method from MalformedURLException to IOException to ensure proper handling of input / output exceptions during normalization tests
updated print statement in TsFileSketchTool . java and LocalTsFileInput . java to include chunk chunk chunk type to ensure correct handling of chunk chunk
added exclusion criteria for specific header files in UmbrellaHeader . java to exclude specific headers from processing
rename onhttperror to onhttphttperror for good readability
added encode ( ) method to RequestPlugin . java to ensure proper encoding of requests in the plugin
mondrian : fix for mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon
added password validation in LdapAuthenticationProviderImpl and created TestLdapAuthenticationProviderImpl class to ensure that a valid password is provided to prevent authentication errors
pdfbox - 4071 : simplify code , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch to ensure that complexWriters is reset before processing new data
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress serialization warnings to improve code clarity and maintainability
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and updated the null check for ` classInfo ` to enhance null safety
added error handling for " _ errors " in ErrorResponseException to improve error reporting and handling of invalid location names
added a constructor to EventSourcingRepository that accepts a Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace Trace
refactor symbol handling logic in mmm Attr . java to improve code clarity and maintainability by reducing redundancy
refactor search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure consistent formatting of search text to improve readability and handle potential
[ ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra ra
tmi - tiff : change the default value of planarconfig to be chunky
added a call to close the item list in ItemListTag . java to ensure proper resource management and prevent memory leaks
move averageutil class into utils , and move it into tilebasic
added new classes ` SigInt ` and ` SigIntBarrier ` for handling int signaling to implement a mechanism for signaling int actions in a concurrent
refactor GraphModel usage to improve handling of hierarchical graphs in ExporterGEXF . java to enhance code readability and maintainability
replaced byte array with Text in TCTLSeparatedProtocol . java to improve handling of character encoding and avoid potential encoding issues
[ # 7462 ] feedbackrubricquestiondetails : fix index out of bound exception ( # 7462 )
replaced DB2Database check with a more specific case check in CatalogComparator to improve clarity and maintainability of the comparison logic
danielwagnerhall : reset the proxy after each test in the browserMobproxytest to avoid test failure
use integer . tostring ( ) instead of string . tostring ( ) in criticalerror .
replaced the call to mTextWatcher . reset ( ) in InPlaceEditView . java to ensure mTextWatcher is reset correctly to maintain the text
fix javadoc for trufflestring and internalbytearray
[ flink - 30613 ] [ gelly ] change outEdgesfunction to return tuple2 < k , v > instead of
refactor : fix javadoc warning
added a new file ` DiacriticTest . java ` that implements a test for Unicode characters on Mac OS X to ensure compatibility and
make test more robust in cluster membership test .
[ mng - 7751 ] fix mng - 7751 , mng - 7751 , mng - 7751 :
updated SSL condition in ServiceRegistryConfig and added dynamic configuration in TestServiceRegistryConfig to improve SSL handling and ensure correct port configuration in tests
refactor Mockito class to improve code readability and maintainability
removed unnecessary comma in Jdbc3Connection constructor parameters to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to ` ServletHolder ` to ensure the ` Servlet ` instance is properly initialized before accessing its instance to
added logging functionality to BinanceExchange and BinanceBaseService classes to improve traceability and debugging of server time updates
added support for non - stop servlets for JavaServer Pages in Tomcat 8.5 to enhance compatibility with JavaServer Pages
update deregister method to handle null component form to ensure proper behavior when deregistering animations
updated ` decodeResource ` and ` decodeStream ` methods to accept ` BitmapFactory . Options ` as parameters to enhance flexibility by allowing
[ java ] use a configurable number of message instead of a fixed for loop
added functionality to manage click interactions in TimelineArrayAdapter to enhance user interaction by allowing tooltips to be linked to tweets using HTML format
added " text " to the list of unmodifiable data types in PostgresDatabase and refactored related logic in NumberType and ColumnSnapshot
make test more reliable ( # 3683 )
updated the method for checking the component ' s state from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) `
[ mielecloud ] [ mielecloud ] fix npe in createbridgeservlet ( # 13434 )
make crawlserver thread - safe
replaced direct calls to ` getDisplayName ( ) ` with a local variable ` dName ` in multiple test classes to enhance null safety to prevent potential
updated SpriteBatch constructor to accept a default ShaderProgram parameter to enhance flexibility in shader management during SpriteBatch initialization
added synchronous commit option to properties in TestUtil . java to ensure synchronous commits are properly configured
added a ` elementTypeCoercer ` and refactored ` fillSortedSet ` method in ` SortedSetTypeCoercer ` to utilize
updated message handling in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality to enhance user experience by providing specific confirmation messages
added a condition to check if the index is within the bounds of the bounds of the safe array in URLPathEncoder to ensure that the safe array is
make it possible to register a fragment storage for a user in a user ' s profile profile .
updated the expected outcomes for clusters in HostResourceProviderTest to ensure that the test cases reflect the correct expected outcomes
[ hotfix ] [ yarn ] remove unused parameter from yarnentrypointutils # loadconfiguration
improve frame initialization and color setup
removed the ShadowHtml class and updated assertions in HtmlTest to simplify the codebase by eliminating unnecessary shadowing functionality
add new class StarTreeRecordStoreFactoryBlackHoleImpl implementing StarTreeRecordStoreFactory to provide a black hole implementation for StarTree record stores to handle data without storage
updated JettyLogger instances to use " org . eclipse . jetty . http3 " and " org . eclipse . jet
changed the visibility of the addListeners method from private to public to allow access to the method from other classes
refactor StateHandleStore class to improve code readability and maintainability
replaced the import of ` org . eclipse . jetty . http . security . Constraint ` with ` org . eclipse . jetty
[ # 7462 ] instructorcourseenrollpage : add parameter to studentcourseenrollresult ( # 7462 )
use try - with - resources to close resource
( chore ) camel - test - infra - cdi : fix port not available test
added ` buildTarget ` and ` libraryTarget ` parameters to ` getJarParameters ` methods and updated related logic in ` DefaultJavaLibraryRules ` to
fix typo in error message
updated getpagesizeVal method to return a default value of 100 to ensure consistent page size handling
added a new case ` CLOSED ` in ` IteratingCallback . java ` to handle the ` CLOSED ` state to ensure proper handling of callback
added authorization checks to AccessControlContext to ensure proper handling of access permissions in security context
refactor OSGiDeployer to improve handling of deployment events to ensure proper event registration and service registration for AbstractOSGiApp instances
added handling for Tiff formats in DLNAMediaInfo . java to ensure proper MIME type assignment for Tiff files
[ gr - 30844 ] optimize call target to optimize call target .
added a new file ` CubocDesktop . java ` and modified ` MapRenderer . java ` and ` ImmediateModeRenderer20 .
updated PolicyMonitor initialization to use the target directory instead of test resource paths to ensure tests run in the correct directory for test execution
added a call to ` trashbinListAdapter . removeAllFiles ( ) ` in ` TrashbinActivity . java ` to remove all files from the
replaced the import of ` org . eclipse . jdi . Bootstrap ` with ` com . sun . jdi . Bootstrap ` in ` Runner
truffle : make checkglobalvaluestoragenode a subclass of llvmnode
updated createLauncherEvent method to accept an Intent parameter to enhance event handling by associating it with the correct item context
BurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurnBurn
replaced specific imports with a wildcard import and added a new snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake . java to streamline
fix ( sql ) : use ` ` namedvalues ' ' instead of ` ` select ' ' in insert statement
updated import statements and method names in ServiceValidateControllerTests . java to improve code readability and align with updated protocol standards
modified the ` getDefaultValidFunctionName ` method to include an ` isStatement ` parameter to enhance function name validation logic to ensure proper handling of function names
refactor JarLauncher class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix compiler warning and generic usage
add a method to sendHolepunchpacket to the transportmanager .
added a test for pgobject updates in ResultSetTest . java to ensure correct functionality of pgobject updates in PostgreSQL
updated PasswordResetEndpoints to return UNPROCESSABLE _ ENTITY instead of BAD _ REQUEST and improved response handling for non - UAA origin
updated XMLUtils to retrieve the document element directly from the document to improve accuracy in obtaining the properties element
refactor Cache class to improve code readability and maintainability
use time millis instead of second for isochrone
fix lightRelay not be able to be bind correctly . close # 1656
added a ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to include a ` Chainer ` class to enhance
refactor Model class to improve code readability and maintainability
update recordedTime to include a new value of 619315200000L to ensure accurate tracking of recorded time data
added a check for Windows terminal type before resizing status to ensure proper resizing behavior for Windows terminals
updated the handling of host versions in UpdateDesiredStackAction . java and modified the state management logic in RepositoryVersionState . java to ensure that the host
move jre _ src / jre _ bundle _ deploy . jar to test _ root
[ mng - 5581 ] fix mng - 5573 ] use linkedhashset instead of hashset and linkedhashset
removed try - catch block around operation object conversion to simplify code by eliminating unnecessary exception handling
updated method call syntax in KnativeEnvironment . java to improve code readability and maintainability
updated the thread name from " commitlog _ archiver " to " commitlogArchiver " to improve clarity and consistency in naming conventions
added connection methods to CloudSolrClient and a corresponding test in TestCloudSolrClientConnections to ensure proper handling of cloud client uploads and validate
add synchronization to prevent concurrent modification exception
refactor file handling in RobolectricTestRunner and ShadowContext for improved clarity to enhance code readability and maintainability by
use linkedhashmap instead of linkedhashmap in securexstream , add test
[ drools - 4078 ] [ kie - api ] update kiehelper to support kiemodulemodel
updated block event handling to check for Farmland blocks before processing moisture and soil - dry flags to ensure that soil - dry
added a default implementation for the ` getLocalIp ( ) ` method in ` FinishedSpan ` class to provide a default implementation that always returns null
updated JdbcStepExecutionDao to deserialize OBJECT _ VAL from a binary stream and added a new test for storing integer values in JdbcStepExecution to
improve javadocs and minor code cleanup
updated resource paths and added a preload resource for Python Python Python Python Python Python libraries to enhance compatibility with the latest Python Python Python library
refactor PluginTab to improve plugin refresh functionality to enhance user experience by allowing dynamic updates to plugin data
updated log level from info to warn in DefaultHistory . java to warn for better clarity to better reflect the severity of the log messages
cloudstack - 7751 : fix npe in vmware vcenter when vm be in stopped state
camel - jbang - fix the camel - ftp test error in camel - ftp
refactor ExperimentalMockitoJUnitRunner class to improve code clarity and maintainability
updated GpsSettingsActivity and Session classes to use a new method for retrieving build serial numbers to enhance code clarity and maintainability by
rename SwapGBuffers . java file to improve clarity and consistency in naming conventions
added null checks for spatial and skeletonControl before removing them to ensure proper handling of null objects and prevent potential NullPointerExceptions
added a new method ` setSmartReplies ` to ` ShadowRankingTest ` and updated the ` ShadowRanking ` class to utilize it
[ java ] do n ' t require the directory to be a directory .
updated the initialization of ` carrot2ResourcesDir ` to use ` initParams ` instead of ` resourceLoader . configDir ` to streamline resource
added null check for testRect in WindowsTreeUI . java and created a new class bug8004298 . java to ensure proper handling of
changed the type of ` stdArgs ` and ` args ` from ` String [ ] ` to ` String [ ] ` and updated the API version from
refactor get method to throw tasteexception instead of return null
added client info to SurrogateAuthenticationEventListenerTests to enhance test cases to include client information for better test case execution
added a new boolean variable ` isUserView ` to track the user ' s view state in the class
updated method names in DiagramRenderer and GraphvizJavaExecutor for consistency and clarity to improve code readability and maintainability by standardizing
refactor metric initialization in LogDispatcherThreadMetrics . java to improve readability to enhance code clarity and maintainability
added a new module - info . java file for the SQLite module to define module dependencies and exports exports exports exports exports exports exports exports exports exports exports exports
added a sleep delay in StreamResetTest to ensure proper synchronization during tests
removed conditional check for " web . type " configuration to simplify the initialization of permissionsManager to ensure consistent handling of web type configuration
updated DateParser and TestDateParser classes to improve date parsing functionality and enhance test coverage
added a new method ` getDepth ( Context context ) ` to ` SpringLoadedState ` that returns a default value of 0.5 to provide a
replaced manual array copying with built - in array copying in BinaryDecoder . java to improve code readability and maintainability by utilizing built - in array
[ hotfix ] [ doc ] fix typo in executiongraph
removed swipe - based notification handling in NotificationActivity and removed swipe - based notification handling in NotificationRenderer to simplify the code and improve user interaction in NotificationActivity
updated exception handling logic in DefaultExceptionConverter and improved error messages in tests to enhance clarity of error messages and ensure more informat
fix miss locking in glowcontainer
replaced ` MethodHandle . findSetter ` with ` java . lang . reflect . Method ` in ` ProxyMaker . java ` to simplify the code and improve
updated the return type of bitwise operations in MathTest . java to Integer for better type handling to improve type safety and prevent potential NullPointerExceptions
updated return statements in BaseEmailContentFormatter to simplify string concatenation to improve code readability and maintainability
added a conditional to display a basic layout based on the presence of a simple panel to improve user interface flexibility by allowing dynamic layout configuration
added null check for location before checking for dead servers to improve robustness by handling potential null location cases
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a validation check for DSA key parameters to ensure key parameters are provided before processing
added a method ` shouldIgnore ` to check for ignored media types in ` MediaTypeRequestMatcher ` and implemented a corresponding test in ` MediaTypeRequestMatcherTests
updated debug logging to use task number instead of task attempt ID to improve clarity and consistency in logging output
added a property to allow bean definition overriding in Spring Boot tests to enhance test flexibility by allowing configuration of bean definition overrides
added null check before closing indexReader to prevent potential NullPointerException when indexReader is null
updated package declarations for BTCMarketsStreamingAdapters , BTCMarketsStreamingExchange , BTCMarketsStreamingMarketDataService , and BTCMarketsStreamingService classes
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to validate the rendering behavior of the code block
added a new file CompatibilityTest . java to test the compatibility of external DTD files to ensure properites are validated against expected values
added new utility classes PushUtils and SecurityUtils to manage push notifications and security standards
refactor TableRebalancer to use a loop for calculating the number of replicas and improve instance state handling to enhance code readability and maintain
bump version to 2.7 . 0 and bump version to 2.7 . 0
log4j2 - 1349 fix test to work on window
add a timeout to the ajp processor
set default values for friction , restitution , density , isSensor , isSensor , isSensorSensor , isSensorSensor , and isSensorSensor
updated method names from ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and consistency in method
added error handling for broadcast idle command to ensure robustness by logging failure to wait for broadcast idle
added tests for font and link tag attributes in ResourcesTest . java and modified the calculation of the span span span span span span span span span span span
fix npe in guistatscomponent due to miss file .
added permission checks for phone calls in Launcher . java and integrated it into Launcher . java to ensure proper handling of phone - specific
updated return value in SimulationPanel and added localization support in PlotDialog and BasicEventSimulationEngine to enhance user experience with language support and
updated GeoEncodingUtils and GeoPointDistanceQuery to use private variables for buffer size and TOLERANCE to enhance encapsulation and improve
add docker availability check to dockerclientfactory
added a new constant VPX in CodecTypes . java to support video playback in the application
added a coordinator address parameter to the DistBuildFactory and DistBuildRunCommand to allow configuration of the remote coordinator address to enhance flexibility
added file matching functionality to FsUtils and WrapTimer to enhance path matching capabilities and improve timer management
added a check for non - negative values before adding them to the labelValues collection to avoid adding empty or negative values to the labelValues collection to ensure
added null check for result in App . java and improved logging messages in App . java to enhance robustness by ensuring result is not null and
removed the @ Test annotation from TestPerfBenchMarkDriver . java to eliminate unnecessary test annotations and improve code clarity
added a method to update materialization time in ObjectStore and a corresponding test in TestObjectStore to ensure correct handling of materialization time in
added handling for UnsatisfiedLinkError in VoskSTTT service to improve error handling and logging for missing native dependencies to enhance robustness
improve the jmssampler gui to display the response code
updated break weight logic in GlyphView . java to improve clarity and correctness in break weight handling
refactor synchronization logic in RCFile . java to use a manual array copy and improve readability to enhance performance and readability of synchronization operations
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to track a known issue related to SOLR - 13028
improve toepool readability
removed the ` setToSortedDataFlavorArray ` method from ` ClipboardTransferable ` and modified the ` setToSortedDataFlavorArray `
hbase - 17832 add - infoport option for thrift server to avoid conflict
added a check for end - of - file in RegExpScanner to ensure that scanning does not proceed when the end of the file has been reached
replaced Boolean . getBoolean with a static set for enabled metrics and timers to improve performance by avoiding repeated calls to Boolean . getBoolean
fix nullpointerexception when jabber chat nickname be null .
add a check for null or empty file input and improve error message
refactor refresh token creation logic into a separate method to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve clarity in error reporting for path transformation failures
[ hotfix ] [ yarn ] remove unused code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to the ` ShadowNativeImageReaderSurfaceImage ` class to ensure thread safety when accessing the
updated BTCChinaExchange to set a secure URI for the market data service to enhance security by restricting access to the market data service
fix cpd task to work on window
added a new ` OauthController ` and ` Oauth2PluginTest ` classes to implement and test OAuth2 authorization functionality
refactor SemgrexPattern class to improve code readability and maintainability
refactor : move flatmap and flatcollection into entrystream
( chore ) camel - rest : improve error message when conversion fails
added a condition to check if the class name starts with " org . specs2 " or " org . specs2 " along with " org . specs
inverted the condition in MediaControl . java to check for non - transmitable audio tracks to ensure that non - transmitable audio tracks are handled correctly
changed the type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added a new test case in CreateTableGenerator
[ geos - 7071 ] add test for st _ gml31 and st _ gml31
added a volatile boolean variable ` wasInvoked ` and modified ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest ` to use it to track
added a check for configuration before expanding regex mapping and changed return types to unmodifiableMap and unmodifiableSet for fieldProcessorMap and feature
updated the ` splitIntoThirtyParts ` method to use ` splitIntoThirtySecondsParts ` instead of ` splitIntoThirtyParts
added XLCDCommunicator and XLCDController classes , and refactored firmware handling logic in FirmwareUtils . java to enhance command processing
kie - maven - plugin - plugin - load xsd from kie - api / kmodule . xsd in order to support
updated retry logic in EventQuery classes and added assertions for non - empty transaction messages to enhance reliability of event querying by validating retry attempts
refactor thread state handling in WorkerProcessPoolTest to use a constant for wait thread states to improve code readability and maintainability by red
added hashCode ( ) method and updated equals ( ) method in DelegatingMethod . java , along with a new test class DelegatingMethodTest
updated constants for freezing and unloading mechanisms in EnergyCost . java to improve performance and reduce resource usage to optimize resource management
modified the ` command ` method to throw ` ConfigurationException ` to ensure proper handling of configuration exceptions during command execution
deleted the ` SpringTransactionHooks . java ` file to remove unused test class ` SpringTransactionHooks ` to streamline the codebase
refactor AbstractClassAssert class to improve code readability and maintainability
add a new file ` GetUninitializedStringValue . java ` that demonstrates handling of uninitialized string values in a Java Virtual Machine
added support for handling provided dependencies in AndroidLibraryDescription and updated related tests to enhance dependency management and improve test coverage for declared dependencies
added a new flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to enable keyboard transition functionality to enhance user experience during keyboard interactions
replaced the retrieval of system anomaly message with a static boolean variable sSavedBugreport to improve code readability and maintainability by avoiding direct retrieval
added a new constant CINEPACK in FormatConfiguration . java and updated LibMediaInfoParser . java to support parsing of Cinepack format to en
added CAMERA _ BOBBING configuration and updated Player . java to incorporate camera bounce animation to enhance gameplay experience by allowing
replaced ` data . describe ( ) ` with ` b . digest . toString ( ) ` in the blob data collection to ensure the correct representation of the
deleted the HSQLDBServerFilesFilter . java file and replaced it with a custom FilenameFilter implementation in TestUtility . java to simplify the codebase
walletappkit : fix npe in walletappkit
updated the method for retrieving the latest version in MediaTableTVSeries . java to ensure proper handling of IMDB ID for title retrieval
added a method to check for existing method invocations in the ` HasTypes ` class to ensure that the method ` visitMethodInvocation ` is only called if
replaced hardcoded array sizes with a constant in AmbientCubemap . java to improve maintainability and readability of the code
profilersfeature : add option to reset the current mode
added multiple conditional checks for zero , short , and long return values in GenericUDFMask classes to ensure correct handling of zero , short , and
update unit test to use temporaryfolder for test
fix npe in itemstack . isDamageable ( ) .
fix mc - 167447 ( # 7520 )
simonstewart : set ` ` browser . startup . page ' ' to ` ` 1 ' ' for the firefox driver . fix issue
updated the condition for handling different HTTP methods in Http1xClientConnection to ensure proper handling of different HTTP methods to improve the robustness of the connection
updated task acceptance from " compile " to " process - classes " in JoobyMojo to better reflect the purpose of the task
make sure httpclient close idle connection
added a condition to check if the aggregate function suffix is missing before creating a new Metric to avoid creating a new Metric that does not contain the aggregate function
added a method to set fullscreen parameters in TaskOverlayFactory and updated how fullscreen parameters are handled in TaskView to improve code clarity and maintainability by
added a new Java class to calculate and display the number of occurrences of a given file in a given file to implement a solution that displays the number of
initialize socketchannel to null to avoid npe .
updated test cases in MutisignOperationerGodicTest . java to improve test coverage and ensure accuracy of operations
added exception handling for NoSuchElementException in StaxEventItemReader to ensure graceful handling of NoSuchElementException during fragment reading
replaced specific text imports with a wildcard import in ShadowTextView . java and added null check in TestAttributeSet . java to improve code readability and prevent potential
updated JSON imports from ` com . nimbusds . jose . shaded . json ` to ` net . minidev . json ` in
updated OS . java to handle AIX family detection and added support for AIX family in PKCS11 test cases to ensure compatibility with AIX - specific
bug 11105 : do n ' t return private ip in vr response
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` CN ` class that utilizes ` RunnableWithResultSync ` to provide a
remove useless test that be n ' t need
replaced casting to int with Math . round for rectangle dimensions to improve code readability and reduce casting overhead
fix checkstyle issue in testclusterDumper
updated return statements in KeyValue . java to improve memory allocation and alignment for better performance to enhance efficiency of the KeyValue class to optimize memory usage and optimize
camel - 14538 : camel - core - add type converter to type converter to avoid reflection .
added support for conditional task handling in SparkCrossProductCheck to enable processing of conditional tasks in addition to existing ones
added handling for ACTION _ MANAGED _ PROFILE _ REMOVED in LauncherAppState and LauncherModel to ensure proper reload actions are triggered
updated the condition in ` LoginInfoEndpoint ` to include a check for ` jsonResponse ` and added unit tests in ` LoginInfoEndpointTests
hbase - 17810 add descriptive string to the assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment assignment
rename ` message ` and ` result ` fields to ` msg ` and ` result ` in ` HuobiAccountInfo . java ` and update
added support for the " PERIOD " keyword in MariaDB ' s MariaDB database by introducing a reserved word " PERIOD "
[ beam - 8470 ] update documentation for portable worker configuration
added support for Launcher shortcuts in VersionChangeLogs to enhance compatibility with Android 7.1 features
changed the visibility of NUM _ MILLIS _ IN _ DAY from private to public in both IndexExpressionIT . java and TestUtil . java to allow
remove debug print statement from imageresourceloader . java
[ java ] check for conductor agent invoker in archive .
updated validation logic in ` mmm Attr . java ` and added a new class ` NoWarnOnImplicitParams . java ` to handle implicit lambda parameter
refactored menu item visibility logic into separate methods to improve code readability and maintainability by reducing duplication
updated the transaction history type from " withdrawal " to " BTC _ deposit " in BTCETransHistoryResult . java and corresponding test case
replaced List with Set for series and exceptions to enhance uni and prevent duplicate entries in the collections
mark the PluginLoader class as deprecated to indicate that the class should no longer be used
updated conditional logic in LastQueryExecutor . java and added a new test case in IoTDBLastIT . java to ensure correct handling of
updated string concatenation in HttpResponse . java to ensure consistent line endings for better readability
buildimagemojo : set slf4j logger on error
added a safe area area for the titlebar to enhance the visual appearance of the titlebar in the user interface
refactor loop to iterate over the list of TimeSeriesChunkMetaData to improve performance by avoiding concurrent modification issues
added SQL syntax for altering a table in AlterTest . java to ensure proper parsing and deparsing of SQL statements
make copystate ( ) public to allow override
fixed - runtundexecutorservice should return a completablefuture instead of null
add a constant for ` ` . part ' ' suffix to ` ` . part ' ' file name
[ hotfix ] [ orc ] fix checkstyle violation in orc test
[ hotfix ] [ table - planner - blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink
refactor ` reduceScopeForLimitedSpace ` method to accept a ` long expectedSize ` as a parameter and update related logic to enhance
added toString ( ) methods to SegmentTermVector , TermFreqVector , and QueryTermVector classes to enhance string representation for better debugging and logging
added a check to return early if the handler is invalidated in AbsSwipeUpHandler and null check for mLastGestureState in TaskAnimationManager to ensure proper
added ` getLockTimestamp ` and ` setLockTimestamp ` methods to ` AppPreferences ` and updated their usage in ` PassCodeManager ` to improve
updated artist retrieval logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added a null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
nifi - 1851 : fix npe in splittext when no header line match
added support for Windows key store type in HttpsConnectorFactory to ensure proper loading and handling of different key store types
increased the default check timeout from 400 to 1 , 000 in RestTemplateSenderTest and WebClientSenderTests to allow more time for tests to complete
added a check for FILE _ NOT _ FOUND status in the conditional statement to ensure handling of cases where a remote folder is not found during synchronization
added animation animation functionality to the Slider class to improve user experience by allowing customizable animation durations
updated assertions in LineSeparatorProcessorTest . java to compare line separators correctly to ensure that the tests accurately reflect the intended line separator behavior
increased maxWidth and maxHeight from 512 to 1024 to accommodate larger texture assets
added a new test for negating ternary expressions in UnnecessaryParenthesesTest . java and modified the condition in UnnecessaryParentheses . java
camel - hazelcast : fix npe in hazelcast queue consumer
added a new test class ` TextFeedbackTest ` and modified ` AllTests ` and ` TestRunner ` to include it to enhance test coverage
replace Math . round with Float . compare for score comparison to improve accuracy in score comparison logic
updated handling of DENSITY _ 560 , DENSITY _ 2HD , and DENSITY _ 4K in AddAndScale
add a method to retrieve the offset of array class element in hotspot replacements .
fix a bug in defaultlogpublisher that cause it to crash
added support for remote scm support in the application to enhance user control over remote scm settings
added support for additional states ( STATUS _ RUNNING and STATUS _ RUNNING ) in Mieieieieieieieieieieieie
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging events in ` StatsLogCompatManager . java ` to improve logging consistency and
renamed the logger variable from ' log ' to ' LOG ' for consistency to improve code readability and adhere to naming conventions
added tests for ProjectGenerationEvent and ProjectGenerationStarted events to ensure proper serialization and deserialization of project generation events
ggb - 2118 add support for preview point in selection
refactor JavaCompiler class to improve code readability and maintainability
added a check for remaining time in the IntegrationTestTimeBoundedRequestsWithRegionReplicas to ensure the test execution time is greater than zero to avoid
8169618 : [ testbug ] [ testbug ] add miss license header to test / hotspot test
updated ldflags in NdkCxxPlatform . java to include garbage collection options to enhance memory management capabilities
updated ` SpringCloudCircuitBreakerFilterFactory ` to use ` ServerWebExchangeUtils . expand ` for URI construction to enhance URI handling
danielwagnerhall : fix broken link in javadoc .
added checks for ` uri ` and ` name ` in ` ReadOnlySharedStringsTable . java ` to ensure proper handling of spreadsheet and non - spread
added a method to retrieve an account network in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to facilit
added a check for valid text input width in SwingUtilities2 . java and modified test cases in Test6635110 . java to ensure proper handling of
initialize ` flatteningIterator ` to a new instance of ` FlatteningIterator ` and streamline the instantiation of ` FlatteningIterator ` to
removed HTML tags from title and body elements in TweetLinkUtils to ensure proper display of title and body by removing HTML tags from the content
doc : generate sample code in the java microgenerator ( # 266 )
[ # 7795 ] instructorfeedback question question question question question question question question question question question question question question question question question question question question question question
updated return values in HSSFSheet . java and added assertions in BaseTestSheet . java to ensure correct handling of row indices in sheet calculations
added permission checks for launcher activities and updated related classes to enhance security by ignoring potentially malicious intents
[ java ] : rename pendingsession to pendingclustersession to avoid confusion .
implement hashCode ( ) method in AbstractParquetMapInspector class to ensure proper comparison and hashing for object equality checks
added handling for remotely closed HTTP3 connection to ensure proper resource management and prevent memory leaks
added AutoCloseable interface to SplitReader to ensure proper resource management and prevent memory leaks
added a deepCopy ( ) method to the GsonBuilder class to ensure a deep copy of GsonBuilder instances
[ llsanner ] avoid nullpointerexception in llsanner . cached = = null
removed the array of ` fileOpenFuture ` from ` RestClientRequestImpl ` and updated asynchronous file handling in ` RestClientRequestImpl `
removed unnecessary whitespace in the dispatchStatusString method call to improve code readability and maintain consistency
updated classloader handling in MockFactory and added SearchingClassLoader class to improve class loading flexibility by combining multiple class loaders
added test case for bug in j3md / scene / scene class
added a check for LEFT _ SEMI _ JOIN in the conditional statement to ensure proper handling of JOIN conditions in the constant propagation logic
refactor HttpReceiver and HttpSender to use HttpStatus instead of a boolean variable to improve code readability and handle HTTP response completion checks to enhance
use ` array _ desc _ length _ offset ` instead of ` array _ length _ offset ` .
http : / / issues . apache . org / jira / jira / browse / amq - 3573 - add a default policy
refactor multiple Java files to improve code organization and maintainability
added a check for the application context is running before stopping the application context to ensure that stopping the application context only occurs when the application context is active
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return a GlyphLayout object instead of void to allow for
refactor metrics handling in SpringmvcClient and improve error handling in CodeFirstSpringmvc to enhance metrics reporting and provide clearer exception management to ensure
removed unnecessary generic type parameter and improved code clarity in account age witness mapping logic
refactor StructureHeader and StructureReader to improve code structure and readability to enhance maintainability and clarity of the code
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated DefaultWebflowConfigurerTests to use it to enhance
add a new d Dexreturninliner to make sure we do n ' t use dead assignment elimination .
refactor ( enrichedruledto ) : make enrichedruledto extend from enrichedruledto extend from enrichedruledto
removed the ` LinkOption . NOFOLLOWLINKS ` option from the ` isDirectory ` method in ` PathResource . java ` and added a new
[ hotfix ] [ table - planner ] remove unused sql dialect from executioncontext
refactor ` AndroidBinaryGraphEnhancer ` and related classes to use ` Supplier < ImmutableSet < String > > ` for `
[ core ] add test case for deprecate package name
added configuration for minimum cross compaction unsequence file level in IoTDBDescriptor to allow dynamic adjustment based on user - defined settings
[ hotfix ] [ runtime ] move activeresourcemanager into activeresourcemanager . active package
hbase - 1715 compaction failure in scanwildcardcolumntracker . checkcolumn ; disable wrong order test in
updated ZipResource to handle URIs with spaces and added a new test for parsing feature files with spaces to improve robustness in URI construction and ensure correct parsing
updated ProgressListener initialization and improved thumbnail generation logic in ExpandableUploadListAdapter . java to enhance code readability and ensure thumbnails
refactor RobolectricTestRunner to handle parent class and method configurations correctly to ensure proper configuration merging for test classes without annotations
updated ModelLoader to filter blocks and items based on registry names to enhance data integrity by ensuring only valid registry names are processed
updated method signatures in AbstractDataChangedListener and WebsocketDataChangedListener to remove the ` abstract ` keyword and replaced ` CopyOnWriteArray
added support for enum types in JSONPojoConvertor to enable proper handling of enum types in the conversion process
deprecated the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that it will be removed in future versions
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated related methods for improved performance to
updated GyroControl to implement OrientationCorrectionListener and added orientation handling to improve responsiveness to device orientation changes in the sensor
fix arrayindexoutofboundsexception in biome dictionary
updated method calls in GetInterfaceTest . java to use print statements instead of println println statements to improve output readability and consistency in output formatting
updated the initialization of the Environment variable in FileCompilerConfig . java to ensure the correct environment is used for JDT compilation
added a new interface ByteToLongCollector in the com . speedment . common . function . collector package to provide a structured way to collect byte - to
added a preload parameter to the mapDirectory initialization to enable preloading of the map directory
added custom metrics for various components in BukkitPlatform to enhance monitoring capabilities for different components in the application
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the codebase
added aspect ratio handling in CardPresenter . java to ensure proper image rendering based on aspect ratio
[ cocoon - 3484 ] use context . getcontext ( ) . getcontext ( ) . getcontext ( ) . getcontext (
updated VectorHashKeyWrapper to handle empty values for long , double , decimal , byte , and decimal values to improve robustness by avoiding
add test for system . nanotime ( ) and system . nanotime ( )
added trimming and null check for the input line in MultiPartFilter . java and invoked a print statement in MultipartFilterTest . java to ensure
add event to drop entity in lombok .
[ openuv ] update error message to be more informative
[ beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam beam
refactor GraphEnhancementQueryEnvironment to improve handling of node nodes and dependencies to enhance functionality and support for dependency resolution in graph en
refactor Character class to improve code readability and maintainability
added a check to set the selection index of the selection option in ScaleDialog to ensure that only one rocket is selected when the entire rocket is
replaced ` Arrays . toString ( ) ` with ` bytes ` in assertions to simplify the assertion to improve code readability and maintainability by removing unnecessary array
added time boundary info retrieval for offline and realtime tables in BaseBrokerRequestHandler . java to improve handling of time boundary information for better routing management
do n ' t add socket to poll poller if not async
8muses ripper now can rip from page with both normal album and sub album and have asap rip for sub album
replaced direct calls to ` mDevice . wait ` with a new ` TestHelpers . wait ` method for consistency to improve code readability and maintainability by centralizing wait
added checks for phone devices in QuickstepLauncher to ensure proper layout behavior for phone devices
replaced ` getValue ( ) ` with ` unwrap ( QueryImpl ) ` in Hibernate query assertions to ensure compatibility with updated Hibernate query handling
replaced ` Files . readAllLines ` with ` readMatchingLines ` and added a private method ` readMatchingLines ` to improve code readability and
added dynamic check for the ` getResultStream ` method in ` JpaQueryExecution ` to ensure that the method invocation in ` JpaQueryExecution `
fix npe in physicprocess when entity be null
add test for entry processor with index on value attribute
add jitsi support for join room . patch provide by damian minkov .
updated color handling in Utils . java and modified HTML message in UtilsTest . java to enhance color management and improve HTML message formatting
disable the menu and normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal normal
updated the path for the link tree in Aapt2Link . java to ensure that the link tree structure is removed from the build process
replaced instances of ` Capture ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest ` and ` ThriftOverHttpServiceTest `
ggb - 2118 fix : do n ' t clear selected geos at all
improve error message when parse cql expression
added isCanceled ( ) method implementations across multiple classes to ensure consistent cancellation state across call classes
added default implementation of ` isAnnotationPresent ` across multiple classes to standardize annotation presence checks across implementations
added a default implementation for the removeAllWidgets method in UILayout to indicate that the default method is not yet implemented
[ hotfix ] [ test ] fix yarn test failure
opensslcipher . getoutputsizeforfinal ( ) : fix calculation of output size
added support for transcoding high - resolution content in PlaybackController to ensure proper handling of high - resolution content when using Fire TV Stick
[ beam - 8470 ] [ sql - client ] fix source translation for mock batch
updated GPS logging to use a set of listeners instead of a single boolean to enhance flexibility in managing listener preferences
changed the parameter type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` and updated related logic in ` vt
added support for BaseItemDragListener in FolderIcon to enable proper handling of drag events during drag operations
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 146 : support
removed unnecessary comments in RabbitMQ configuration files to improve code readability and maintainability
removed unnecessary calendar checks in VideoViewerActivity to simplify the video link validation logic
camel - 2856 fixed the issue that camel - ftp use camel - ftp with thanks to joe .
( chore ) camel - spring - boot : fix flaky test
rename variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability to enhance readability and maintainability
fix double plant placement for large plant . close # 386
replaced ` setFocusable ` with ` setRequestFocusEnabled ` in ` TranscodingTab . java ` to enable request focus functionality instead of focus management
vmwarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewareware
added acceptLicense ( ) method to DB2TestSystem and modified condition checks in DockerDatabaseWrapper and TableIsEmptyGenerator to ensure proper handling of DB2
changed the ` units ` field from final to non - final and added a setter method for it in ` DoubleModel . java ` , and
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading functionality in the trading system
added a check to set the number of samples in fpp if it is greater than zero to ensure that the fpp has the correct number of samples
updated test assertions in StepWithSimpleTaskJobParserTests to use consistent naming for test cases to improve clarity and maintainability of test cases
added ' final ' keyword to several variables in CentralAuthenticationServiceImplTests to improve code clarity and enforce immutability of variables
[ giac ] make sure ggbabs ( ) do n ' t return null
added multiple calls to ` addServiceOutput ( ) ` and ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` to
[ incubator - kie - issues # 941 ] support java . math . biginteger coercion
added a line to hide the JDT used by Jetty to prevent the use of the JDT in the web application context
modified the return value of useAuthCache ( ) to false to simplify the authentication cache check to ensure consistent behavior
added a capitalize function to the namespace variable to ensure the namespace is properly capitalized before use
camel - 1974 : added directconsumernotavailableexception to make it easy to know where the issue be .
added a null check for zooKeeper before accessing its state to prevent potential NullPointerException when zooKeeper is not initialized
updated progress bar step description in the Loader . java file to improve clarity and user experience during the initialization process
added a method to run on the UI helper thread in AllSetActivity to ensure vibration effects are executed on the UI helper thread to improve UI respons
added a method to update the last remote stream ID to ensure the session reflects the latest stream ID accurately
use anti - aliasing for text in editor header
[ java ] clean up the calculation of term size and position in the driver connection .
refactor : remove static import of enums in ctannotationimpl
refactor ExoPlayer class to improve code organization to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with a new method ` getRGBPixels ` in ` WRobotPeer . java ` to improve
added a new method ` newPrintStream ` to handle different output encoding configurations to improve flexibility by allowing customizable output encoding based on system properties
updated vibration feedback in TouchableMovementMethod . java to increase vibration feedback to improve user experience
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353
removed the unused executor parameter from the WebSocketClient constructor to streamline the constructor and improve code clarity
danielwagnerhall : do n ' t open the i18n test if it fail
refactor error handling from ` IncompatibleClassChangeError ` to ` handleLoadConstantException ` in multiple files to improve clarity and specific
added restoreAuthSystemState method call to XmlWorkflowServiceIT to ensure proper authentication state management during integration tests
added a ` LowercaseComparator ` to the ` CoNLLUFeatures ` class to enable case - insensitive comparison for case - insensitive handling of feature
refactor JavadocTool to streamline source file parsing and error handling to improve code readability and maintainability by consolidating duplicate parsing
danielwagnerhall : do n ' t ignore this test for firefox and firefox
added a check for the length of keys in HighestKvno . java to ensure that only valid keys are processed to avoid runtime errors
added error handling and logging when retrieving attributes in HDF5 batch processing to improve robustness by handling potential HDF5 batch processing errors
[ beam - 8470 ] fix bigqueryio . expand ( ) to return writeresult
updated entity name from " copySnippetRequestEntity " to " createTemplateRequestEntity " and added a new parameter for binary content in ProcessGroupResource to improve
added a new file TestMultiANewArray . java that tests multi - dimensional array initialization to ensure proper handling of multi - dimensional
add config option to disable secondary storage
refactor SyncBlockchainMsgHandler to use a local variable for head block ID and improve readability to enhance code clarity and maintainability to
set the theme of the preview tab in PreviewTabView to ensure the preview tab reflects user preferences for better visual consistency
added a check to close the reader object before closing it to ensure proper resource management and prevent potential memory leaks
added a test for HTTP idle time in ConnectorTimeoutTest . java to ensure proper handling of idle connection timeouts
make dictionary property configurable
replaced calls to ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added ` readTagName (
updated generic type usage in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to use diamond operator to improve code readability and
changed log level from warn to debug for child node discovery to reduce log verbosity
refactor color extraction logic to use a helper method for retrieving hotseat palette to improve code readability and maintainability by centralizing palette extraction
added methods to set default table entry and cell transformers in TypeRegistry to enhance data table handling by allowing custom transformations
removed assertion for newAvailableShared to streamline code by eliminating unnecessary assertion
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the ` isProjectGenerated ( ) ` method from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator ` to streamline the
added a check for the presence of the USER _ PROPERTY header in the authentication header to ensure that the authentication header is properly validated before proceeding with
added contact form endpoint and a new Contact class for handling contact data to enhance the application ' s functionality by allowing users to view contact details
guacamole - 641 : use objectpermissionset instead of permission for simpleuser .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version update to ensure compatibility with the latest firmware release
danielwagnerhall : fix typo in traitfactory # setmode
updated methods to use ` findWhereNameOrAliasLikeAndActive ` and ` findWhereNameOrAliasLikeAndActive ` instead of `
replaced manual closing of consumers with IOUtils . closeSafely to improve resource management and prevent potential resource leaks
refactor multiple listener classes to improve code organization and maintainability
added a click listener for the overflow button to display the menu to enhance user interaction by allowing access to the overflow button directly
updated error messages from " is null " and " is not null " to " is a non - null reference " across multiple classes to improve
improve layout and height of the help button
move protobuf util test to core . util
fix divider width in jabref frame ( # 748 )
fix : do n ' t generate bib file with crossref
geoserverfeaturestore and geoserverfeaturestore : use metadatamap instead of map < string , object >
rename the variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity to enhance code readability
fix : add meta contact avatar update event to the contact list
updated import statements from ` org . apache . sshd . server . command . Command ` to ` org . apache . sshd . server
added a test for cleaning up the audit log table post parameters by position in the AuditLogTest class to ensure that the audit log table behaves as expected
changed the method parameter type from T to Object in the inject method to ensure type safety and prevent unchecked cast warnings
added regex pattern matching for comment lines in ACLFileParser . java and updated related tests in ACLFileParserTest . java to ensure comment lines
updated ` isReadable ` method to include additional parameters for ` DrillFile ` and ` FileSystemPlugin ` to enhance flexibility in handling Drill
added ancestor dimension handling in StarTreeNodeImpl and related classes to improve the management of ancestor dimension values during dimension splitting
added user unlock state checks and refactored view closing logic across multiple classes to ensure proper handling of user unlock state and improve code organization
changed the condition to check if widthStr is not null to ensure that positionStr is not null before proceeding with further processing
refactor certificate validation logic in PKIXValidator . java to improve clarity and structure to enhance readability and maintainability of certificate validation process
[ hotfix ] [ test ] add archunit test for the test code
updated package names for AlibabaDubbo integration tests to reflect the correct package structure to ensure proper organization and clarity in test organization
vpc : do n ' t skip acl for network without domain
updated the method for retrieving the label element from a JSON element in RuntimeTypeAdapterFactoryFunctionalTest to ensure correct retrieval of the label element from the JSON
make sure undo info be store on property change
updated the retrieval of the ` grad grad cache property to use ` AccessController ` with privileged action to enhance security by enforcing access control
[ hotfix ] [ test ] make stream close test more reliable
updated the doAfterFlush method in DocFieldProcessor , DocFieldProcessor , DocFieldProcessorPerField , and TermVectorsConsumer classes to ensure consistent handling
added deprecation annotations to properties in ConfigurationMetadataGenerator and AbstractJpaProperties classes to ensure proper handling of non - case non - case - insensitive insensitive
updated capacity and mask calculations in BiInt2ObjectMap and Int2ObjectHashMap classes to ensure correct array sizes are used for performance optimization
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and modified the number of move files thread count from 25 to 15 ,
improve error handling and logging in parallel nio sender
added a null check for the context parameter in SchemeAndroidIDE . java to ensure safe instantiation to avoid potential null pointer exceptions
[ gr - 36413 ] make nativeimagegeneratorrunner . installnativeimageclassloader ( ) and installnativeimageclassloader ( )
changed the return type of ` modifyGrantedAuthorities ` from ` void ` to ` List ` in ` SwitchUserAuthorityChanger ` and
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and added new test classes ` JaxrsSpringIntegration
fix # 183 set query timeout support for jdbc 4
added data provider annotations for general and supplementary character tests in XslSubstringTest . java to enhance test coverage for substrings in
updated the ` StaxEventWriter ` to use ` delegateEventWriter ` instead of ` eventWriter ` and added a ` flush ( ) ` method
added MariaDBDatabase constructor and support for sequence support in CreateSequenceGenerator to enhance database compatibility and ensure proper sequence handling
updated error message formatting in multiple buffer classes to improve clarity and consistency in error reporting
added TableDataManagerProvider metrics tracking to multiple test classes to improve monitoring capabilities for database operations
updated SSLExtension to check for both " jsse . enableMFLNExtension " and " jsse . enableMFLNExtension " properties to
replaced ` ObjectIterator < T > ` with ` ObjectHashSetIterator ` in ` ObjectHashSet ` and added unit tests in ` ObjectHashSetInteger
updated character count logic in Compose . java and TweetFragment . java to correct the calculation of character count in Compose . java and Tweet
add ` ` kairosdb . datastore . cassandra . datapoint _ ttl ' ' to cassandra ' s writebuffer
updated ` checkForAndKillXcodeIfRunning ` method to accept an option for IDE prompt to enhance flexibility in handling Xcode process termination
added a method ` getTerrainAtCell ` to retrieve terrain data at a specified cell to enable retrieval of terrain data based on cell coordinates
added handling for default values in the Pretty . java file and created a new T6665791 . java file to demonstrate the use of
added a catch block to handle FileNotFoundException in ResourceLoader . java to improve error logging for quest key loading issues
updated push support check to account for non - push scenarios to ensure proper handling of push operations
refactor PointValue class to improve code readability and maintainability
remove sign of local witnesses in blockutil . signblock ( )
updated root retrieval logic in FileSystemView . java and added security checks in Win32ShellFolder2 . java to enhance security checks for file system access
updated row height retrieval and added row span checks in ColumnText . java and refactored copyContent method in PdfPRow . java to
refactor undo note handling in ListFragment to use a SparseArray for undo operations to improve efficiency and maintainability of note management
[ # 7462 ] [ # 7462 ] [ # 7462 ] [ # 7462 ] [ # 746
added a null check for data in getTransferData method to ensure that a non - null data does not cause runtime exceptions
no effective change
replaced the use of ` mLauncher . getPaddingForWidget ` with ` AppWidgetHostView . getDefaultPaddingForWidget ` for widget padding
refactor method handles in NashornBeansLinker for improved readability and added consStringFilter functionality to enhance code maintainability and
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
rename CountDownLatch to CountDownLatch for better clarity to improve readability and maintainability of the code
replaced calls to ` getFailure ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` in assertions to improve clarity and consistency in
changed ` currentBook ` from a thread - local to a non - thread - local instance of ` Workbook ` to a non - thread - local
added support validation to the ` vote ` method in the ` ContactSecurityVoter ` class to ensure that only valid object types are accepted
removed unused imports for GachaHandler and Tools in DataLoader . java to improve code cleanliness and reduce unnecessary dependencies
added rowAffected parameter to postUpdateLog method across multiple classes to track the number of rows affected during updates
mow - 169 fix margin calculation in euclidian view
set default values for foregroundFPS and backgroundFPS in JglfwApplicationConfiguration to ensure consistent frame rates across the application
added ObjectReleaseTracker to track and release resources in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and assertion assertion to enhance resource
replaced DefaultWebSocketFrame with ChannelFutureListener when writing WebSocket frames to improve WebSocket connection handling
updated event listener classes and added state machine error handling tests to enhance test coverage and ensure proper state machine behavior
refactor SettingsActivity to use a dedicated method for setting the background background to improve code readability and maintainability by encapsulating background background color configuration
updated import from ` org . apache . commons . lang3 ` to ` org . openhab . core . StringUtils ` and added null check
added an overloaded ` accumulate ` method to the ` WeightedAvgAccumFunctions ` class to calculate the sum of two integer values with a specified weight and
[ hotfix ] [ doc ] fix checkstyle violation in replicationsink
replaced ` Set < String > ` with ` Map < String , RegExp > ` for cache management to improve performance and efficiency in pattern compilation by using a
added a reset method to the GameThread class to ensure that the gameThread instance is properly reset to avoid memory leaks
added a login method to the DigestAuthenticator class to ensure the login process respects the realm of the authentication service
refactor parameter handling in SavedRequestAwareWrapper to support null checks for savedRequest parameters to improve robustness and prevent potential NullPointerExceptions during
updated InfoStatus messages to use local variable name instead of hidden singleton to improve clarity and consistency in error reporting
replaced the notification logic with a call to ` this . wakeup ( ) ` in ` CommitLog ` and ` HAService ` methods to streamline the
added a condition to check if the Android O version is not Android O in PhotoViewerActivity and UserAutoCompleteHelper to ensure compatibility with Android O to prevent
updated SchemaCrawlerOptions to use basic schema info level to improve clarity and consistency in schema information handling
replaced ` zipOutput ` with ` BufferedOutputStream ` in ` SaveTask . java ` and modified its usage in ` VizModel . java ` to
replaced byte array handling with UTF - 8 string conversion in TestPayloads . java to enhance character encoding support and improve test reliability
fix mc - 10351 : fix mc - 103516 ( mc - 103516 )
added two new Tomcat container adapters to the list to support additional Tomcat container configurations in the application
[ drools - 1067 ] fix multi - accumulate not work in protobuf
fix switch / cases indentation see camel - 14540
removed the public access modifier from PDFCloneUtility class to enforce encapsulation within the package package
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method handling to enhance code readability and maintainability by utilizing
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to encapsulate response creation logic
added a notification for the command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command execution during background tasks
refactor ` computePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` to improve parameter handling and prevent potential null pointer exceptions
updated the handling of character filter factories in LukeRequestHandler to use CharFilterFactory instead of TokenFilterFactory to improve the accuracy of filter
replaced null argument checks with ParamChecks for parameter validation to improve code readability and maintainability by using utility method for null checks
added verbosity control to the createSubContext method in JavacStep . java and modified the createSubContext method in ExecutionContext . java to allow users to
added schema handling for Oracle database types in DbSqlSession . java to ensure correct schema formatting for Oracle databases
log4j2 - 1349 : fix asyncloggerallthreadcontextimplementationstest to be more informative
added a new file ` TestShrinkToOneRegion . java ` containing a main method that calls ` System . gc ( ) ` to facilitate garbage
updated package splitting to use Splitter class to improve code readability and maintainability
updated AnalyzingInfixSuggester to use ` context ` instead of ` utf8ToString ( ) ` and added a new test for binary
fix for http : / / issues . apache . org / jira / browse / amq - 4810 : http : / / issues /
[ zeppelin - 2782 ] remove the output of the output from the strip annotation .
pdfbox - 2852 : remove useless null check , a suggest by valerybokov
replaced ` final static ` modifiers with regular static modifiers in multiple test classes to improve code readability and maintainability
replaced Apache Commons Logging with Java ' s built - in BigDecimal and Java ' s built - in BigDecimal in UDFRound class to enhance precision
[ jsscripting ] [ jsscripting ] fix npe in jsscriptingenginefactory ( # 12456 )
changed the access modifier of Test1 and Test2 classes from package - private to public to allow access to Test1 and Test2 from other packages
updated permission messages and variable names in PlayerEventListener . java to improve clarity and consistency in permission handling for plots
added a session parameter to the getAdditional method in ConditionAndOr and ConditionInConstantSet classes and updated the getAdditional method to include a session parameter
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` BaseNormsFormat
added dynamic body creation and circle transformations to Box2DCharacterControllerTest . java to enhance the simulation of physics behavior in the simulation
added tests for maximum buffer sizes and thread buffer sizes in FIGHT _ RECORDER _ OPTIONS to ensure correct handling of memory limits to prevent runtime errors
updated test assertions in ObjectAlignment and Options classes to ensure correct validation of output parameters
added functionality to extract the target package from the manifest file in AndroidInstrumentationTest to enhance the integration of Android instrumentation by allowing the extraction
refactor DocHelper class to improve code readability and maintainability
replaced ` Arrays . asList ( Arrays . asList ( Arrays . asList ( Arrays . asList ( Arrays . asList ( ) ) )
updated method calls in Test6987555 . java to eliminate unnecessary type casting to improve code readability and reduce redundancy
reformatted code for better readability in MessageHandler . java to improve code maintainability and adhere to coding standards
refactor inflection logic to improve code readability and maintainability
added getter and setter methods for locale in EvaluationContext to enable localization support in the evaluation context
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve readability
added a break statement in a switch statement to prevent fall - through behavior in a switch case
replaced the import of ` Criteria . where ` with a wildcard import and updated the debug log statement to use ` Query . getQueryObject ( ) ` instead
ww - 4082 add a system property to configure the loggerfactory to use
[ hotfix ] [ test ] rename adminaddpeerFailswithp2pDisabled to adminaddpeerwithp2node
add miss bean name for health check
make localpstoreprovider thread - safe
changed the visibility of the deleteFiles method from public to private to restrict access to the deleteFiles method for better encapsulation
refactor ServiceLoaderSpliterator to use ServiceProvider instead of Provider to improve clarity and consistency in service handling
refactor javainteropreflection to not throw nosuchmethodexception .
added methods to check if a toolchain should be re - created based on its creation status to ensure that the application does not attempt to re -
only remove context when context be add to the engine
replaced index checks with contains for better readability to improve code clarity and maintainability
updated linker flag handling in CxxLibrary and related classes to improve clarity and functionality of linker flag management
updated method names in AbsSwipeUpHandler and RecentsView classes to improve clarity and consistency to enhance code readability and maintainability by
updated listener checks to use wildcard generics in multiple classes to enhance type safety and prevent potential ClassCastExceptions
updated the object array to include the hash of the new block to ensure the new block has the correct header ' s hash information
http : / / issues . apache . org / jira / browse / amq - 4705 - fix typo in defaultmessagestore
fix resource leak in micrometer metric
added logic to update message count and statistics based on message status to ensure accurate tracking of message transfer and statistics during the compaction process
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
added methods to check for system UI components in AbstractLauncherUiTest to enhance functionality by verifying the presence of system UI components to improve test reli
changed the logger variable from static final to instance final in SessionRegistryImpl . java to allow multiple instances of SessionRegistryImpl to maintain a single logger instance
added a check to return false if the cookieJar is empty in InMemoryCookieStore . java to ensure that the method returns false when no cookies are
bonsai : fix nullpointerexception on empty storage
changed method parameter types from String to CharSequence in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository classes to enhance text
unignoring a test that pass in marionette
added a try - finally block to return the connection to the destination in a finally block to handle potential IOException when closing the connection
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update references accordingly to clarify the purpose
added synchronization to the heartbeat executor service to ensure thread safety during execution of heartbeat tasks
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored asynchronous handling in ` CachingBuild
added a method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to update the first line of the text area to ensure that
added temporary work work work work work work work work work work work work work work work work work work work work work work work work work work work work
refactor graphics configuration retrieval logic to improve clarity and efficiency in handling graphics configuration retrieval to enhance code readability and maintainability by consolidating
tika - 3745 -- fix oom test for cxf
( chore ) camel - pipeline : remove unused method
added functionality to parse a model file and print out basic tags
updated the method to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` in ` toString ( ) ` and added a new test
[ flink - 27916 ] [ test ] fix test failure of joersey test
[ java ] fix flaky test for startfromtruncatedrecordinglogtest .
updated arc calculation in LineBorder . java to ensure consistent rounding behavior for shape rendering
added a check for non - empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent potential NullPointerExceptions when accessing galleryImages
updated the handling of the DEPLOYMENT _ ID column in the StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator classes to ensure proper
pdfbox - 2576 : move printfields and setfield out of interactive code to interactive code
removed the ` moreColumnsOk ` parameter from the ` canUseIndex ` methods in ` AlterTableAddConstraint . java ` to simplify
added methods to manage and retrieve provisional engines in QuickfixjComponent to improve engine management and ensure proper retrieval of provisional engines
added displayZoomControls field to RoboWebSettings to enable and control the display of zoom controls
fix corporea spark not be load properly
refactor ConnectionFactory class to improve code readability and maintainability
added a method to enable disable menu items in GpsMainActivity to improve user experience by controlling menu item visibility based on application settings
updated the message in ` setMessageForEmptyList ` to use ` filter _ list ` instead of ` server _ search ` and ` server _ server
remove @ serviceregistry from entitytests to avoid conflict with h2 service registry
updated MotorMountConfigurationPanel and MotorMountTableModel to use subPanels instead of ' this ' reference to ' this ' reference to ' this '
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner . java `
added getter and setter methods for creator , subject , and creator property in POIXMLProperties to enhance property management capabilities in POIXML
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] check for empty cnc file to avoid error .
replaced ` MarkedFoo ` with ` FooCommand ` and updated method signatures in ` UnsatisfiedTypeBounds ` and ` UnsatisfiedTypeBounds
added methods to manage class paths based on JAR files to ensure proper handling of JAR files in the application
updated constructors and method signatures in TreeBackedElement , TreeBackedPackageElement , and TreeBackedPackageElement to remove dependency on PostEnterCanonical
replaced direct client ID handling with public token request parameters in Saml2TokenGranterTest and UserTokenGranterTest to improve token request
updated the method call from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure the correct array
hbase - 17878 add sync ( ) method to zookeeper watcher for zk assignment
add check for context in glutil . getcurrentcontext ( )
[ drools - 718 ] do n ' t remove ruleflow group if it be not active
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added failure assertion assertion in IoTDBPipeIT . java to improve error handling
cleanup test to fix # 3738
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl # tostring ( ) for good performance
changed the visibility of the validateInstance method from public to protected to restrict access to the validateInstance method for better encapsulation
updated GeoPointField , GeoPointTokenStream , GeoPointInBBoxQuery , GeoPointInBBoxQuery , GeoPointInPolygonQuery , GeoPointIn
added a new class FakeBuildable that extends AbstractBuildable to provide a mock implementation for testing purposes
fix # 2196196 . close # 2196196 .
renamed ` stream _ path ` to ` timeseries ` and updated related references in ` TSParser . java ` and ` SQLParserTest . java
added a check to return 0 if the velocity is negative to ensure that the method does not proceed with invalid velocity values
refactor GcsPinotFS to use the new _ storage instance for Blob creation and listing to improve code readability and maintainability by
removed duplicate code blockCloseVertxByName in TestHighwayTransport . java to improve code clarity and maintainability
# 208 - create history view for postgres
updated the expected value of the clustering engine from 2 to 3 to reflect the correct number of clusters in the test
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored due to incorrect test assignment
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand . java ` and added a new class ` ParserCache
updated object quoting strategy assignment logic in ChangeSet and DatabaseChangeLog classes to enhance flexibility by allowing dynamic configuration of object quoting strategy
updated the parsing method for Metainfo to use fromXmlStream instead of parse to improve compatibility with XML data handling
deleted the CsrfControllerAdvice . java file to remove unused code related to CSRF token handling
added a method to quote paths in the endorsed argument to ensure the endorsed directory list is properly formatted to prevent issues with invalid directory paths
added a scrim animator to manage background animations in the launcher to improve visual feedback during drag - and - drop operations
[ iotdb - 4245 ] fix wrong integer upper bound about data type inferring of timeseries ( # 7321
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added support for handling UNC paths in WindowsPathParser to ensure proper parsing and validation of UNC paths in the application
replaced the use of InetSocketAddress with a standard Multicasticasticasticasticasticasticasticasticasticasticasticasticasticasticasticasticasticasticasticast
updated writer closing logic in TestWildcard . java to ensure proper resource management and prevent potential resource leaks
return a clone of nBits to prevent unintended modifications to the returned array
changed the access modifier of the ` deriveCollectorName ` method from private to protected and added tests for different collector names in ` TestProfilerCollector ` to
refactor MappingMongoConverter to encapsulate type hint checks to improve readability and maintainability of the code logic
added performance measurement for creating a proxy factory using PerfStatsCollector
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling to include the original exception as a parameter to improve error reporting by providing more context in connection error messages
refactor reinflateWidgetsIfNecessary ( ) method to use getWorkspace ( ) instead of a local variable to improve code readability and maintainability
added a new test class ` DeleteInsideFileDialogTest ` to test file deletion functionality to ensure the right - click behavior works as expected when interact
lwjgl2 / jme3 / testsoftware / testsoftware / testsoftware / testsoftware / testsoftware / lwjglabstractdisplay .
[ # 7831 ] instructorstudentlistpageuitest : add check for file not find
added methods to filter test methods based on environment variables to enhance test execution by excluding certain test methods from execution
removed the pointer parameter from the fling method in ScrollPane to simplify the method signature for better usability
added null check for pageable in QueryDslJpaRepository to prevent potential NullPointerException when accessing pageable data
added a method ` computeMemorySize ` to ` MemoryManager ` and corresponding test cases in ` MemoryManagerTest ` to provide a way to compute memory
( chore ) camel - jms : increase test timeout to avoid false failure .
refactor SnowballAnalyzer class to improve code readability and maintainability
updated previousIndex assignment and initialization logic in StreamingAggTemplate . java to ensure correct index handling and improve batch processing efficiency
improve error message for miss receiver
added a default method ` stream ` to the ` StreamSupplierComponent ` class that accepts a ` TableIdentifier < ENTITY > ` parameter to provide a
updated logging messages and improved error handling in MediaMonitor . java to enhance clarity and provide more informative feedback on file movement failures
refactor InjectorProxy and related classes to improve method accessibility to enhance encapsulation and provide clearer instantiation process
[ hotfix ] [ python ] fix flink streaming create function
added unit tests for various SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest classes to ensure correct parsing and deparsing
replace null return with an empty immutable list to ensure the method returns an empty list instead of null
updated the description in the test case to include Quality Distribution to improve clarity and accuracy of the test case
updated WebSocket connection logic to handle both reconnection and reconnect scenarios to improve reliability and clarity in managing WebSocket connections
updated session attribute handling in AbstractProcessingFilter to use removeAttribute instead of setAttribute to improve session management by eliminating null safety to ensure proper removal of
hbase - 20685 testregionreplicanode / testregionreplicareplicanode . testregionreplicareplicanode
added configuration to the PMS configuration in FormatRecognitionTest . java to ensure proper handling of media formats
bug cs - 16215 : add event for disk template creation for ova template
updated PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 instead of CasCoreServicesConfiguration and CasPersonDirectoryConfiguration to
added @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
updated table and view statements to use the ` metricVal1 ` parameter instead of ` metricVal ` to enhance clarity and consistency in
added a check to ensure document count consistency between deleted and segment documents to improve error handling for document count mismatches
add some more logging to the sip logger
alexeibarantsev : fix filenewall to work without start barline
changed the default value of handleFileUploads from true to false in VertxPlatformHttpServerConfiguration to allow configuration of file upload behavior
added a test to verify the default behavior of the CsrfFilter to ensure that the CsrfFilter correctly handles various Csrf protection methods to enhance
refactor hotspotobjectconstantimpl to avoid static class
renamed the method ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in method naming
updated the way file metadata is retrieved by using an Instant variable to improve readability and maintainability of the code
hhh - 14527 - fix exception when copy cte definition
added import statement for ResultSetMetaData to enable support for retrieving ResultSet metadata in tests
updated command line argument in JsLibrary . java to include root path to enhance command - line argument clarity for better usability
updated slider range from 180 and 180 to Math . PI in RailButtonConfig . java to ensure proper handling of angle inputs in the slider model
fix npe in save after save .
ambari - 20612 . kerberos . kerberos . krb5 . krb5 - kerberos - krb5 - krb5 - krb
removed the check for ` remoteMountPointComponent ` before calling ` rotateDegrees ` in the ` setRemotePlayersheldItemMountPointComponent ` method to streamline
updated setupViews method to include a new ScrimView parameter and modified related animation logic to enhance the visual transition effects by incorporating
[ flink - 20536 ] [ state ] add periodic materialization configuration to changelog
added a private field ` value ` to ` ProtocolParameter ` and its getter and setter methods in ` ProtocolParameter ` , and updated ` List ` and
add a test case for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id =
cloudstack - 7773 : add isbumped flag to checkrouterresponse , and add isbumped property
added Content - Type header to the SwitchToPostInterceptor and SearchRequestUnitTest classes to ensure proper handling of HTTP form parameters in the application
refactor EmbeddedClientConnector class to improve code readability and maintainability
added logging for ignoring the setFetchSize ( row ) method to improve error handling by providing a warning instead of throwing a exception
added null assignment for AndroidNet initialization to ensure proper initialization of AndroidNet objects to prevent potential null pointer exceptions
updated parameters in LLRealtimeSegmentDataManager for consistency to improve code readability and maintainability
removed the boolean parameter ` false ` from ` getDepositAddresses ` calls in ` KrakenAccountService . java ` to simplify the method
hbase - 26462 addendum ( addendum )
added a boolean flag to handle back navigation failure to improve user experience by preventing accidental inflation failure when inflation fails
refactor PushbackInputStream class to improve code structure to enhance maintainability and readability of the code
refactor lower phase to use schedule instead of control flow graph
updated the string resource from download _ folder _ failed _ content to sync _ folder _ failed _ content to improve clarity in error reporting
fix makefiles to handle \ r \ n correctly
replaced direct retrieval of deleted documents with MultiFields to improve compatibility with Lucene ' s multistage operations
updated the refreshFlags setting in SimpleBatchNode to include RF _ TRANSFORM to ensure proper handling of refresh flags in the refresh logic
[ gr - 10674 ] do not insert safepoints for uninterruptible method .
added frame size callback functionality to the LwjglWindow class to ensure proper handling of window size changes
updated variable names and animations for better clarity to improve code readability and maintainability by using descriptive variable names
updated the implementation of ` LiteralNode ` to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` to enhance clarity and
added ` setLength ` method to ` CompoundFileWriter ` , ` FSDirectory ` , ` IndexOutput ` , and ` IndexOutput ` classes to
updated AndroidNDkScriptGenerator and AntScriptGenerator to ensure proper handling of Android manifest paths and include additional test cases to enhance functionality and
camel - 16400 : camel - aws2 - s3 : use sourcebucket instead of copysource for copy to s3
added handling for " * " role in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to ensure proper authorization checks for
updated ZookeeperClientServerRegisterRepository to improve URI registration logic based on data type to enhance code clarity and ensure proper handling of data
refactor methods in ReturnsDeepStubs for clarity and consistency to improve code readability and maintainability
added a check for empty contract object to avoid unnecessary array creation when the contract object is empty to improve robustness by handling empty contract object creation
use parameterized logging instead of string concatenation
updated PKCS12KeyStore , PBETest , and StoreSecretKeyTest to handle exceptions gracefully to improve error handling and ensure robustness in key generation logic
pdfbox - 4892 : improve error message , a suggest by valerybokov
added validation to ensure required parameters are validated in CommandLineJobRunner to improve error handling and provide clearer feedback for invalid job parameters
updated assertions in SmtpTests . java and MailTests . java to use " foo " instead of " \ r \ n " to ensure consistency in
reformatted case statements in ExtendedConnectionDataSourceProxy . java to improve code readability and conciseness
replaced the synchronized keyword ` lastSequenceId ` with ` SEQUENCE _ UPDATER ` and introduced ` AtomicLongFieldUpdater ` in ` LongSequence
added a new file ` Test . java ` containing a static method ` sum ( ) ` to provide a simple main method that calculates the sum of two
updated minSdk and maxSdk configurations in ShadowWifiManagerTest . java and modified WifiUsabilityStatsEntryBuilder . java to enhance
added a new file ` Solution . java ` that implements a solution for sorting integers based on a given number of integers to facilitate sorting based on
refactor to make cassandra more thread safe
refactor taskbar creation logic to conditionally recreate taskbar based on screen size changes to improve taskbar behavior based on device orientation changes
[ hotfix ] [ javadoc ] fix typo in syncfuturecache
updated the DUBBO protocol version from 2.0 . 1 to 2.0 . 2 and modified the LOWEST _ VERSION _ FOR _ RE
uselessstringofstringofstringwitherule : fix false positive with string literal .
added a new test method ` testEllipseNoseConeDrag ` to ` SymmetricComponentCalcTest . java ` to ensure that the nose
[ hotfix ] [ core ] add max target max type shard size to producer
added support for versions 5.5 . 2 - cfs and 5.5 . 2 - nocfs in TestBackwardsCompatibility . java to ensure compatibility
refactor CompilationTask class to improve code readability and maintainability
updated test case to check for " mydb " instead of " mydb . db " and refactored parameter handling in DDLTask
added a call to ` ExecutorService . getInstance ( ) . execute ( ` clearDatabaseChangeLogTableStatement ` ) ` in ` AbstractJdbcDatabase `
updated RestClient and CallPath classes to incorporate versioning logic to enhance the handling of call paths by incorporating versioning
updated exception message in PhoenixDriver . java and added a closed state check to improve error handling and ensure proper resource management
mow - 169 fix some javadoc warning in touch app
added tests for ` FolderPickerActivityIT ` and modified visibility settings in ` FolderPickerActivityIT ` to improve test structure and ensure proper visibility of UI
[ gr - 27930 ] do n ' t generate deoptimization graph in dev mode .
camel - 18434 : camel - core - optimize stringhelper . removeLeadingandEndingQuotes ( string ) should use string . removeLeadingandEnding
updated JpaQueryCreator to handle NOT _ CONTAINER case and improved exception handling for unsupported keywords to enhance type safety and clarity in
make sure we do n ' t push branch branch if we have too long
added dispatching of P25Message to P25MessageFramer to enhance message handling functionality
added null checks for the handler in WebSocketImpl . java and implemented a test for clearing client handlers on end in WebsocketTest . java to ensure proper
[ ds - 2058 ] [ ds - 2058 ] fix npe in discoveryit
refactor widget padding calculations to use Launcher ' s Padding class to improve consistency and maintainability of widget padding handling
added hideAllApps ( ) and hideAllApps ( ) methods to TaskbarUIController , TaskbarAllAppsController , and BaseActivityInterface to
modified the ` launch ` method to use ` launcher . join ( ) ` instead of ` Thread . sleep ( 1500 ) ` to improve responsiveness by
updated the calculation of point coordinates in JavaSEPort . java to correctly center the point to account for the canvas ' s x and y coordinates to ensure
refactor notification handling in UploadService to improve code readability and maintainability by using startForeground method instead of notificationManager notifications to enhance clarity
fixed bug 1384808 - excessivepubliccount no longer report false positive on static final field .
hbase - 17826 add retry for thrift hbase test ( addendum )
changed log level from info to debug in transactionalmessageserviceimpl .
added error handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve logging granularity for
added a new ` BittrexTickersResponse ` class and integrated it into ` BittrexMarketDataServiceRaw ` to provide market
fix classcastexception in entityentry . get enumconstants ( )
fix issue with deprecate websocketsession registration
updated the char array in FileUtils . java to include additional characters for improved character representation to enhance the readability and usability of the code
added stylesheet management to ResourceService and updated related methods in ResourceHandler and ResourceHandlerTest to enhance resource handling by allowing stylesheets to be
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is reset before further operations
changed method call from " getAddress " to " address " in X86MethodGenerator . java to align method invocation with intended functionality
updated database type check from MariaDB to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with additional database types
removed the check for isEnum in the equals method to simplify the comparison logic for String
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and added a new class SymbolNotFoundError . java to improve error handling to provide more specific
updated BinaryResponseWriter to conditionally create a new SolrDocument document based on field return values to enhance document document handling based on field return values to improve
added PING and PING handling in WebSocket implementation to ensure proper handling of PING requests in WebSocket communication
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to support the inclusion of a hyphen in the regex pattern
refactor DnsResolverProvider to use a cached DNS cache with additional parameters for improved performance to enhance efficiency by reducing the need for
added a @ ConditionalOnClass annotation to TraceMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessagingMessaging
mondrian : fix for http : / / code . google . com / p / mybatis / issues / detail ? id
updated import statements in IDELanguageClientImpl , IDETextActionMode , EditorTextActionWindow , and IDEEditor classes to ensure proper usage of
correctly handle close tag in xml .
updated visibility settings in TouchCharInput . java to improve user interface responsiveness
added null check for the current user before comparing IDs to prevent potential NullPointerException when accessing current user ' s ID
refactor JSObjectLinker to handle cases where the index is out of bounds bounds to improve clarity and ensure proper assignment of member member member member member member
updated ` DefaultUniqueTicketIdGenerator ` and ` HostNameBasedUniqueTicketIdGenerator ` to initialize ` suffix ` and ` prepareTicketSuffix
marked SecurityConfig class as deprecated to indicate that the class should no longer be used
added @ Deprecated ( forRemoval = true ) annotations to multiple classes to indicate that these classes will be removed in future versions
deleted the JoglDebugAdaptor . java file and updated the RocketFigure3d . java file to simplify the codebase by removing
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and ` AWSPropagation ` classes to improve string representation of ` ExtraFieldPropagation
added PendingIntent to FileDownloader and FileUploader classes to ensure the notification starts from the correct activity context
refactor nextOrd method to use a dedicated set method to improve code readability and maintainability by encapsulating logic in a dedicated method
refactor DateTimeFormatter class to improve code readability and maintainability
updated desktop property names for DnD auto scroll configuration to improve clarity and maintainability of the code
updated the ` setAdministratorCredentials ` method to throw ` KerberosAdminAuthenticationException ` for null or empty principal inputs to ensure that the
added MAX _ WIDTH _ SCALE _ SCALE _ FOR _ LARGE _ SCREEN value to BaseWidgetSheet . java to ensure proper scaling for large
fix ( opengl ) : call pgl . endrender with sketch window color
refactor Hashing class to improve code readability and maintainability
refactor the accept method to use a folder path instead of a file reference to improve clarity and functionality to enhance code readability and maintainability
updated the ` addToListIfNeeded ` method to accept a string resource and added a new ` contentDescriptionInt ` parameter to enhance user information
added a null check for the type variable in the J . java file to avoid potential NullPointerException when accessing type variables
increased the activity start delay from 500ms to 800ms to improve user experience by providing a smoother transition effect
added a new constant WEBAP _ HOME and updated path references in JettyWebTest to improve code clarity and maintainability by centralizing
updated motor selection logic in ThrustCurveMotorSelectionPanel . java to improve clarity and maintainability of the code
added BufferUtil import and clearToFill method to ByteBufferPool to ensure buffer is cleared before reuse
fix : rename entityid to entityid for clarity
rename authorization to authentication . ldap . groupbase and authorization . ldap . group membership membership membership membership membership membership membership membership membership membership membership membership membership membership membership
http : / / issues . apache . org / jira / browse / amqstore / browse / amq - 3088 - fix
[ hotfix ] [ hotfix ] [ test ] fix the bug in bulkslotproviderimpltest
updated connection handling in PingService and ServerInfoService to improve error handling for failed connection attempts
refactor CompositeHandlerAdapter to improve code organization to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code readability and maintainability
added error handling around the lookup execution to improve robustness by catching IllegalStateException
updated schema version from 6.2 to 6.3 in SecurityNamespaceHandler and XsdDocumentedTests to ensure compatibility with the latest schema requirements
updated ` NameResolver ` and ` DiscoveryClientNameResolver ` classes to use ` Args ` instead of ` Helper ` and added synchronization context to
updated JavacParser to handle annotations more effectively and added a new test class for annotated annotated annotated annotated classes to improve annotation processing and ensure compatibility with deprecated
added " com . sun . naming . internal . " prefix to CheckPackageAccess . java to ensure proper access control for internal package access
changed the default value of strict from false to true in StaxEventItemReader to enable strict mode by default
refactor OfflineSorter to manage exhaustion states and improve partition reading logic to enhance robustness by preventing processing over an already
refactor ActionResetingPool class to improve code readability and maintainability
[ scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene
refactor folder creation logic to utilize a target cell for better visibility calculations to improve folder creation accuracy based on target cell dimensions
added a call to ` FileDisplayActivity . showLoadingDialog ( ) ` in ` FileOperationsHelper . java ` and removed redundant calls to ` OC
added a null check for uigesturefile before initializing logging maps to avoid potential NullPointerExceptions when uigesturefile is null
updated field name comparisons to use Locale . getDefault ( ) to ensure consistent behavior across different locales
added setListeners ( ) method to XmlSuite to enable listeners for XML processing results
added a new method ` loadWithNewGlobal ` to ` Global ` and refactored related methods in ` Context ` to enhance global
added a method ` fromJsonString ` and ` toJsonString ` to ` StarTreeIndexSpec ` class and updated tests in ` TableConfigTest ` to
added import for ObjectPostProcessorConfiguration in HttpSecurity . java to enhance security configuration by integrating ObjectPostProcessorConfiguration
updated string replacement methods in AndroidFileHandle , GwtFileHandle , and FileHandle classes to replace single quotes with single quotes to improve consistency and adhere to
[ drools - 662 ] fix null pointer exception in in operator ( # 562 )
added import for FieldCache and a purge method to ensure there ' s more than one segment to prevent issues with field cache management
act - 1147 : add test for message boundary event on subprocesses
add support for static method resolution .
http : / / issues . apache . org / jira / browse / amq - 4705 - allow for hash bucket to be specify when
added constants for SLOT _ ID and FIPS _ SLOT _ ID in Secmod . java to improve code readability and maintainability by using descriptive
added alignment support to the ` add ` method in ` Layout ` and modified the ` startRenderering ` method in ` GdxRenderer ` to en
[ hotfix ] ignore unalignedcheckpointitcase until this be fix
added imports and checks for MIDI and Sequencer in JDK13Services . java to ensure proper handling of MIDI and audio functionalities in the application
added a check to ensure the keyword is not added if it is already present in the keywordToReference map to prevent duplicate entries in the keyword reference
camel - 16462 : camel - core - optimize rout engine to reduce object allocation
removed unused methods from SegGraph , SegToken , and WordDictionary classes to streamline codebase by eliminating unnecessary methods
properly escape special character in statsd flavor ( # 644 )
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 763 . add
rename ` ` operatormulticast ' ' to ` ` operationmulticast ' '
increased the send timeout duration from 1 to 100ms to 100ms in EventBusTracerTest to allow more time for sending messages to improve test reli
added a try - finally block in a try - finally block for resource cleanup to ensure resources are released even if an exception occurs during node startup failure
added a synchronized block to clear cached event listener registry to ensure thread safety during session destruction
danielwagnerhall : do n ' t open home page if no jwt token available
[ ivalueutilstest ] add miss unit test for map of tensor
added a TaskStackChangeListener to manage task stack visibility in RecentsView and removed it from BaseActivity to ensure proper handling of task stack visibility during
add a profile test for the checkdatepattern
camel - 16400 : camel - cxf : ensure factory bean be initialize before use
refactor pending animation handling into a separate method to improve code readability and maintainability
add log to debug playtime issue
added a conditional check for Bailout on exceptions in C1XCompilation . java and defined a constant BailoutOnException in C1XOptions .
updated signup and passwd variables in Links . java and tests in IdentityZoneConfigurationBootstrapTests . java to ensure default values are set to null to
[ hotfix ] [ runtime ] rename previousevaluationgraphallocations to reserveallocations
log4j2 - 1342 use string . format instead of simpledateformat to avoid npe
geototiffreader : fix for geotiff file with no data
improve error message for miss function source
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` to ensure
updated connection handling in TestPathChildrenCache . java to ensure proper synchronization with the client connection state to improve reliability of the test by verifying that
updated the ` ArrayTypeHandler ` class to include a null check for the ` array ` parameter to enhance robustness by preventing potential null
replaced ` RegexpTunnel ` with ` REProgram ` in ` JakartaRegexpCapabilities . java ` and removed ` RegexpTunnel . java
updated the method call to pick with Application . class instead of null to ensure proper handling of application context during configuration selection
[ drools - 662 ] avoid npe on mutable global context in kiecontainer
added asset name and description validation in AssetIssueActuator . java and TransactionUtil . java to ensure asset names and descriptions are valid before proceed
make sure paste do n ' t have the same parent
updated action labels and properties in LGWebOSActions , LGWebOSUpnpDiscoveryParticipant , and LGWebOSOSH
refactor node addition logic in TronNetService to streamline the process of adding multiple nodes to the configuration to improve code readability and maintainability
add a check to see if the analysis thread be finish .
added a modulus parameter to the getNextTime method in PatternProcessor and refactored related method calls in TimeBasedTriggeringPolicy to enhance
refactor ` ShadowAdapterView ` and ` ShadowListView ` to consolidate item click and text handling methods into separate methods to improve code
pdfbox - 2576 : use a local variable to avoid classcastexception
improve performance of pe graph decoding .
refactor HttpSessionDestroyedEvent to improve session destruction handling and add unit tests for security context destruction to enhance session management and ensure
added a test to verify that the service name is dynamically changed in Zipkin to ensure that the correct service name is used in the Zipkin
added logging and spool mode handling in JavaInMemoryFileManager and JavacToJarStepFactory to improve debugging capabilities and ensure correct spool mode
renamed SeparatedProjectGenerator and SeparatedProjectsGenerator classes to SeparatedProjectsGenerator and SeparatedProjectsGenerator respectively to
test : increase timeout in clientmaplocktest
updated ConfluentSchemaRegistryDeserializerProvider to include a default cache capacity parameter to enhance flexibility in schema registry deserializer by allowing specification of cache
replaced ` remind ` with ` checkAtStartup ` in the ` UpdateInfoDialog ` class to better reflect the purpose of the checkbox to improve cl
added new methods for key , value , expireAfterAccess , and weighing parameters in NodeGenerator . java to enhance node generation capabilities
hhh - 14536 - fix regression in cascadingaction . getattribute ( ) when use @ transient on a non transient entity
added prototype property handling to ScriptObject to enhance object extensibility checks using Nashorn
change default read mode from heap to mmap to improve performance
added import for ByteArrayTemplate and handled byte class case to ensure proper instantiation of ByteArrayTemplate for byte type functionality
added Hipchat support in SamlServiceProviderProperties and created a new configuration class CasSamlSPHipchatConfiguration to enhance SAML service
replaced List with Set for commandRegistryUrls and updated resource retrieval logic to support multiple resources to enhance flexibility in managing command registry URLs
updated logging message to include the current context to improve clarity of warning messages for better debugging
updated login method signature in SvnRepositoryConnector and added login check in SftpRepositoryConnector to ensure proper login functionality and track logged - in state
camel - 18585 : camel - jms - remove transactionmanager from activemqconfiguration .
vmwarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewarewareware
refactor Timers class to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to ensure the output
removed outdated token type constants from UAX29URLEmailTokenizer to clean up the codebase and improve maintainability
removed Map < Object , Object > from ScriptObject and updated related assertions in ContextTest to use ScriptObject instead of Map < Object , Object > to
updated EventBusMetrics class to improve metrics handling to enhance performance and accuracy of event tracking
[ ds - 3952 ] improve locale handling for eperson and workflow
refactor javerstransactionaldecorator to not use postconstruct
removed null check for pgTypeName before adding to _ pgNameToSQLType to simplify code as pgTypeName is always added
added multiple server assignments for handler1 and handler2 in ScopedHandlerTest . java to ensure consistent server configuration across multiple handlers
added calltimeoutexception to call - time exception in wait - notify
added check for empty password in RestLoginProcessingFilter to ensure that empty passwords do not cause errors during authentication
updated permission check from ` Objects . equals ` to ` equals ` for better readability to improve code clarity and maintainability
rename ` encoding ` to ` sourceCharset ` in ` AbstractCompiler ` and update related methods to improve clarity and maintain consistency in naming conventions
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` for ` postLogin ` and ` getPostLogin `
refactor GeneralOptimizationDialog to improve simulation handling and error reporting to enhance clarity and robustness of simulation modification logic
camel - 17826 : camel - main - allow to turn off context reload by default
added configuration properties for log4j ' s root logger and Jetty ' s Jetty ' s configuration to enhance logging configuration
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment class to improve code readability and maintainability
added a check for mark support before invoking the ` invokeSafely ` method on ` nonCloseable : : reset ` in ` RequestBody ` to
added a check for embedded settings and modified filtering logic in multiple classes to ensure that embedded settings are enabled before processing beans to enhance the robustness of
update health / health component with default value
modified the parameters of the random ` random ` method to include a ` halfLengthTotalWeight ` parameter to enhance the random ` random ` method to
refactor GsonParser and MetricsResourceTest to simplify cache string handling and improve error message validation to enhance code readability and ensure accurate
added comments to parameters in ApacheHttpClientMediaWikiApi . java to improve code readability and maintainability by clarifying the order of parameters
replace ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in multiple files to improve clarity and consistency in
updated PipeTaskCoordinator to replace ReentrantLock with PipeTaskCoordinatorLock and added a new PipeTaskCoordinatorLock class to improve thread safety and
updated DefaultSdkProvider to conditionally use pre - instrumented jars to enhance flexibility in jar dependency management based on system property configuration
modified the condition to check if the execution is silent to ensure that silent execution is handled correctly
added checks for default values and required fields in IndexSchema . java and a corresponding test case in BadIndexSchemaTest . java to ensure proper error handling
remove unnecessary conditional check for randomly read repair .
replaced ` ImmutableSortedSet ` with ` Iterables ` in ` PrebuiltCxxLibrary ` and added a test for ` includesDirs ` in ` Pre
refactor ` AdaptableX509CertSelector ` to initialize ` start ` and ` endDate ` fields in ` AdaptableX509CertSelector ` and
log4j2 - 1349 use abstractappender . parseint ( ) instead of string . parseint ( ) to avoid npe
remove deprecate in 1.16
added methods to manage category addition and removal in CategoryEditSearchRecyclerViewAdapter to improve category management functionality in the search functionality
# 163 - enh : add servercachetype parameter to create cache
updated RocketComponent to set mass and center of gravity to null when updating component properties to ensure proper handling of component properties to avoid null pointer exceptions
replaced the final modifier of ReusableCompiler and refactored synchronization tasks in JavaCompilerService , SynchronizedTask , and JavaDiagnosticProvider to
refactor Task class to use a lambda expression instead of a anonymous inner class to improve code readability and reduce boilerplate
refactor WanReplicationServiceImpl to use a mutex for executor management to improve thread safety and prevent potential concurrent modification issues
added null checks for table and table objects in Partition . java and updated Driver instantiation in DDLSemanticAnalyzer . java to enhance robustness by
updated schema handling in LocalServiceRegistryClientImpl . java and refactored task creation in RemoteServiceRegistry . java to enhance code readability and
added a new test file ` FilesTest . java ` and implemented the ` delete ` method in ` Files . java ` to ensure that file
removed unnecessary try - catch blocks around socket closing in ServerSocketAdaptor . java and SocketAdaptor . java to simplify the code by directly closing sockets sockets to
updated class name check from " java . lang . System " to " Logger . class " to ensure proper identification of logger class
refactor current working directory handling to improve clarity and maintainability of the code
added null check for the ` cn ` parameter in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
changed the access modifier of the static String variable from public to private to restrict access to the variable to enhance encapsulation within the class
updated the Java D URL in the SimplePostTool class to remove the local hosting for CSV and JSON JAR files to streamline the configuration to
apps - 2471 add symbolic toggle test
added ShutdownThread registration and deregistration in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to ensure proper cleanup of the client container lifecycle
updated condition in Linux . java to check for null type to ensure proper handling of cases where type is null
improve resource management
added search functionality to RemoteBrowseHandler and integrated it into the DLNAResource retrieval process to enhance user experience by allowing dynamic searching of
removed visibility of neutral button in SetupEncryptionDialogFragment to improve user interface clarity by removing unnecessary UI elements
[ ds - 3952 ] fix bug in itemserviceimpl . countitems ( )
updated string construction in DDLTask . java for improved readability and formatting to enhance the clarity of table creation statements
added exception handling capabilities to CheckTokenEndpoint to support OAuth2 error responses
updated multiple Java files to improve code organization and maintainability
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to adjust subdomain handling and improve response validation to enhance code clarity
updated dismiss delay from 20000 to 10000 in ExtractionModelFrame and DataBrowser , and added tooltip text in SQLConsole to improve user experience with
added support for Surefire version 2. 22 . 0 in TXT _ RUN _ Single _ METHOD to ensure compatibility with JUnit 5
replaced HumanReadableException with RuntimeException for IOException in WorkerShellStep . java to improve error handling by providing a more specific exception type
[ hotfix ] [ hotfix ] [ flink - streaming - java ] [ connector / common ] [ connector connector connector connector connector connector connector connector
fix typo in streamcstrumsource javadoc
added a check to return false if the index exceeds the bounds of the items array to ensure that the index does not exceed the bounds of the array
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct parsing and validation of Parenthesis expressions
added a confirmation flag to the DebugPaste class to ensure that the command is required for debugging purposes
use orrelsethrow instead of get
ggb - 145 , fix for ticket # 1252
replaced instances of ` Arg ` with ` GoBinaryDescriptionArg ` and updated related imports and method signatures to enhance clarity and consistency in
added null checks for " application . env " configuration in Jooby . java to ensure proper retrieval of the application environment to avoid potential NullPointerExceptions
refactor ` SimpleRetryExceptionHandler ` to implement ` RetryListener ` instead of ` RetryListenerSupport ` and introduce a new ` SecondDummyRetry
support decimal in metric name ( # 498 )
changed the ` email ` and ` author ` fields to be ` final ` and added a new ` Contribution ` class to ensure immutability
refactor string concatenation to use a while loop for improved readability to enhance clarity and maintainability of the code
added a check for LinkedList class before assigning elements to avoid unnecessary instantiation when the class is not LinkedList
updated exception messages in StaxEventItemReader to include the resource URL to improve error reporting for input resource validation
updated TestMultiRenderTarget to use PointLight arrays instead of separate sphere and light variables to improve code clarity and maintainability
updated client retrieval logic to handle potential null values and log a debug message when the current client is not found
replace target . addNamespaceDeclaration ( ) with newElement . addNamespaceDeclaration ( ) in SaajStaxWriter . java to ensure the namespace declaration
added BigInteger for cryptographic operations in KeyStoreManager . java to enhance security by incorporating additional cryptographic operations
bugfix : use getindicesaslist ( ) instead of getIndexBuffer ( )
act - 532 : set the engine version on persisted process definition
updated resource property names in SpecificCompiler . java to improve clarity and consistency in property naming conventions
add isolate thread verification to centrypoint snippet
added null check for map before adding values in GenericUDFMapValues . java and created a new test class TestGenericUDFMapValues . java
rename ` ` interceptors ' ' to ` ` handlerinterceptors ' ' to avoid confusion
added configuration for oil spouts and updated the oil generation logic
added a check for the existence of the " . clean - me " directory in ImportContext . java and updated directory checks in JobQueue . java to
improve error message when memoryrealm . readxml fails
removed unused import statements in CRLDistributionPointRevocationCheckerTests . java to clean up the code and improve code clarity
added constants for EXTID _ ZIP64 , EXTID _ EXTT , and EXTID _ FLAG _ LMT in ZipConstants64 . java and
refactor ZipFileSystemProvider to improve file existence checks and error handling to enhance robustness by ensuring only valid files are processed
updated the method of adding a verticalGlue Box in the conditionPanel to improve layout consistency to ensure proper spacing for the condition panel
added an override for the connection creation method in FailoverUpdateURIsTest . java to ensure proper handling of connection creation
added Gson annotations for baseUrl , mirrorsList , and repoId in ServiceOsSpecific . java to ensure proper serialization and deserialization of service properties
fix : do n ' t delete db entry if file deletion fails
refactor multiple Java files to improve code organization and maintainability
corrected the index calculation in AbstractAjpProcessor . java to ensure proper offset calculation for the response message processing
improve admin console plugin initialization .
fixed potential deadlock in websocket implementation
added device ID transformation and log file configuration to IoTDBDescriptor to enhance configuration flexibility for device ID table and log file management
updated the number of documents in ExitableDirectoryReaderTest and added a new DelayingSearchComponent class to accommodate a larger number of
pdfbox - 3017 : fix false positive in testsignatureinfo
refactor script creation and hashing in Transaction and TransactionTest classes to improve code clarity and consistency in script handling
updated the expression in IndexSchema . java to include " / schema / types / fieldType " to enhance schema validation for field types
added a null check for valueCompleter in Completers . java and created a new OptionCompleterTest . java file to ensure proper handling of null
fix checkstyle issue in s3utils
changed ` sourcePeerId ` and ` cacheQueueMap ` types from ` String ` to ` int ` across multiple classes to optimize memory usage by using
refactor file upload logic to handle zip files more robustly to improve robustness and error handling during file uploads
added alpha transparency to the reply button in TweetFragment to enhance the user interface by providing visual feedback on button visibility
updated the expected timestamp format in AccessLogSupportTest . java to improve clarity and accuracy of the expected output in tests
move marycachetest to temporary directory
remove redundant null check for subscribers to simplify the code logic and improve readability
updated error handling in AbstractSamlObjectBuilder and AbstractSaml10ResponseView to provide clearer exception messaging when retrieving the OpenSAML library to improve
replaced printStackTrace ( ) method calls with LogUtil . warn ( t ) in DataBrowser . java to improve error handling and logging consistency
added a check for the existence of the assetsDir in development mode and improved test cases in AssetsControllerTest to ensure proper handling of
[ hotfix ] [ state ] fix rocksdbkeyedstatebackend . put method to use writeoptions
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to improve clarity and consistency
use request hint for dijkstrabi . minprecision
bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump bump
rename the ` DuclsSandboxTest ` class to ` SandboxTest ` to improve clarity and consistency in naming conventions
camel - 1072 fixed the issue that camel - cxf do n ' t work with thanks to aki
make forwardpropagatetree public so that it can be use in test
updated the order of the count queries in the JDBCExample . java file to ensure that the count queries are executed in the correct order
improve error message when $ { project . basedir } be miss in profile activation
refactor Style class to improve code readability and maintainability
added zoom functionality to the ShareActivity to enable zoom feature in the Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share
added a check to skip processing for deprecated fields in Json . java to improve performance by avoiding unnecessary processing of deprecated fields
added animation handling for floating compose animations in LauncherFragment to enhance user experience by providing visual feedback during floating - compose animations
[ flink - 6376 ] [ yarn ] improve inline code comment relate to hdfs delegation token
added Progressable parameter to the createSequenceWriter method across multiple classes to enable tracking of compression status during sequence writing operations
[ hotfix ] [ core ] fix typo in sourcecoordinatorprovider
added methods to remove contributions and update the panel ordering and color updates to enhance the contribution management functionality in the ContributionListPanel
rename hyervisortemplateadapter to avoid confusion
added a check to ensure dPath has a default value of " user . dir " if it ' s empty to avoid potential null pointer exceptions
fix defaultaudiosink when sample rate be not specify .
log4j2 - 1343 fixed log4j2 - 1343
rename VerificationInOrderWithCallsTest . java file to improve clarity and consistency in naming conventions
changed the axis reference from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method to ensure the correct axis is
updated COLLECTION _ DELIM constant in serdeConstants . java from " colelction . delim " to " collection . delim " to improve
add a test to verify that there be no listener connect at startup
pdfbox - 5355 : add test case for issue # 4855
refactor one - handed mode checks to use a local variable for support checks to improve code readability and maintainability by reducing repeated method calls
added onDetachedFromWindow method to AppsCustomizePagedView to ensure proper cleanup of running tasks when the view is detached
added dictionary resource parameter to MorfologikAnalyzer and its usage in MorfologikFilter to enhance filtering capabilities by allowing
replaced count and exception handling in ResultSetTest . java to simplify exception handling logic to improve clarity and maintainability of exception handling
updated the initialization of the ` message ` variable to use an empty string instead of ` " debug " ` to ensure the message accurately reflects
changed ` AtomicReference < Boolean > ` to ` AtomicBoolean ` for ` preventedByLocking ` and ` preventedByMVCC `
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by consolidating tooltip application logic
increase the timeout duration in ZipkinStreamTests from 5 seconds to 10 seconds to allow more time for the zip zip zip zip zip zip zip zip zip
add deviantart username and password to deviantart ripper
replaced the KNOWN _ GOOGLE _ SIGNATURES array with a constant and updated the isGoogleSignedPackages method to improve clarity
make test more robust
added a new method ` notifyWindowStateChanged ` to handle window state changes in ` WWindowPeer . java ` to improve event handling for window state changes
added email description to template data in EntityGroupKeyContentFormatter and TestEntityGroupKeyEmailContentFormatter to enhance email management functionality
replace remove ( ) method with data . remove ( ) method to ensure proper removal of selected items from the data object
modified ` getISO3Language ( ) ` method to handle lengths of ` _ baseLocale ` to ensure it returns a valid language code to enhance
refactor ChangeLogParser usage to improve readability and maintainability of the code
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing
added support for the " No chart data available " text in the chart chart to provide users with a customizable text to improve user experience by allowing users
added synchronization to the Http1xServerResponse and Http2ServerResponse implementations to ensure thread safety when accessing shared resources
improve performance of nettyresponse . write
added support for the " : scheme " header in Http2 tests to ensure proper handling of HTTP scheme in test cases
fixed - redissonlocalcachedmap . getkey ( ) and getvalue ( ) method return wrong result if storemode = localcache
camel - 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12
bugfix : fix npe when set jump speed
added a condition to check if reparsedFunction is null in the parser logic to ensure proper handling of syntax extensions when reparsed functions are not needed
renamed ` log ` to ` logger ` and updated variable names for consistency to improve code readability and maintain uniform naming conventions
added backward compatibility for old segment segment URI handling in FileUploadDownloadClient to ensure compatibility with older segment segment URI formats
added a filter parameter to the findOne method in MongoDbTailTrackingManager to enhance filtering capabilities for better data retrieval
added assert predicate fail assertion to test .
added alpha value to RecentsView to ensure it remains within valid range
updated the formatting of the import - package string in ManifestReversion . java to improve readability to enhance code clarity and maintain consistency in the
refactor DataSyncConfiguration class to improve code readability and maintainability
added JavaSnippetRepository import and initialized it in JavaLanguageServer to ensure proper snippet handling during code generation
refactor sum update logic in StarTreeRecordStoreCircularBufferImpl . java to improve clarity and maintainability of the code
danielwagnerhall : update chromedriver test to point to the new location
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 546 : use
updated import statements and added a call to close the input stream in FeedParser . java to ensure proper resource management and prevent potential memory leaks
added content - length header to transfer completion for http / 2
refactor Dialog class to improve code readability and maintainability
removed the constructor of EnhancedRuntimeException to simplify the exception handling by eliminating unnecessary parameters
make socketappendertest thread - safe
( chore ) camel - core : remove unused class
updated exception handling and method signatures in ByteArray . java to improve error handling and clarity in comparison logic
added a method to disable input proxy in RecentsAnimationWrapper to ensure proper handling of touch events during touch interactions
added JUnit @ Ignore annotation to RestletDomainServiceTest . java to disable tests related to camel - 6770
removed the currentIdx parameter from resizeAndRehashIfNeeded method to simplify the method signature by eliminating unnecessary parameters
move module - info . java and module - info . java to test . modulepath
improve error message to include source directory
removed menu item for opening a webpage in TweetPager to streamline the user interface by eliminating unnecessary functionality
renamed ` nodeIsAncestorOfItself ` and ` nodeIsDescendantOfItself ` to ` nodeIsIsAncestorOfItself ` and
fix a potential negative y value in the world edit player .
added PathNotExistException to the selfCheckDataTypes method signature and refactored data type validation logic to improve error handling for missing measurement schemas and
updated formatting in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ runtime ] move mailboxexecutor into abstractstreamoperatorfactory
hbase - 26709 addendum fix the unauthorized check for tablestate
replaced ` meter . getId ( ) ` with method reference ` Meter : : getId ( ) ` for better readability to improve code clarity and
updated the constructor of BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure proper retrieval of the Java
[ drools - 1067 ] fix kiewatcher to use lasttimedata instead of remoteitems
adjusted calculation of allAppsCellWidthPx in DeviceProfile . java to account for additional padding to ensure proper layout spacing
[ hotfix ] [ core ] [ core ] move common logging pattern to common package
updated references from ` doc ( ) ` to ` this . doc ( ) ` in BooleanScorer2 . java to ensure consistency in referencing the correct
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the performance of the multi -
hhh - 1462 make session . close ( ) return void instead of null
refactor GetLocations class to improve code readability and maintainability
updated exception handling to check for null values instead of printing stack trace to improve error handling by avoiding unnecessary stack trace printing to enhance clarity and
do n ' t throw uncheckedioexception for ioexception in contents . getcontent ( )
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android support libraries
ruby flavor : do n ' t emit snippet when there be no output pattern
changed log level from warn to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
no need to do the caching if we do n ' t need to
updated ` CasGeoLocationConfiguration ` to use ` Resource ` instead of ` MaxmindProperties ` and refactored database reading methods to enhance
[ # 770505 ] instructorfeedbackresultspageuitest : fix typo in test
updated the ` useEncodedQualifierListOptimization ` method to accept a ` Scan ` parameter instead of a table table table table table table table table table table
removed public access modifier from multiple methods in ApprovalStore and ApprovalControllerService to enforce encapsulation by restricting method visibility
added a new boolean variable ` mStartedDownload ` to track whether the download process has started to manage the download process to ensure the download process does not
updated methods in TaskbarDragLayerController and AbstractFloatingView to use getAnyView instead of getOpenView to enhance functionality to allow retrieval of
updated project version from " 1.0 . 11 " to " 1.0 . 13 " and changed copyright year to " 1.0 . 13
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread termination handling
refactor GsonBuilder implementation to improve code readability and maintainability
added null checks for circleCenters and fixedPoints to prevent potential NullPointerExceptions when adding to circle circle circle circle circle circle circle circle circle circle circle
remove support for -- java . espressohome in graalvm .
doc : fix javadoc for ctcodeelement , ctif , cttypeinformation
changed the ` deleteSession ` class to ` final ` and modified the ` timeToDieInSeconds from ` false ` to ` final ` in ` Delete
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " in the InvalidDocumentStoreApi
updated variable initialization and modified result handling in JoinQParserPlugin and SolrIndexSearcher classes to improve clarity and correctness to enhance code readability and
added a file parameter to the triggerMediaScan method call to enhance media scan trigger functionality
removed verbosity checks and simplified test result handling in TestRunning . java to improve code clarity and reduce unnecessary conditional checks
added custom G - codes for custom G - codes in MainWindow . java to enhance user interaction with custom G - code settings
use bufferedoutputwriter to avoid leak
refactor JsonElement class to improve code readability and maintainability
added JUnit test to ignore specific exceptions in TestBadConfig . java to ensure proper exception handling during tests
added a new method ` removeFragmentAndActionBar ( ) ` to the ` GpsMainActivity ` class that removes the current fragment and action bar to
updated the list of spansish tokens in TokenizerAnnotatorITest . java to include additional token types to enhance token recognition capabilities in the tokenizer
updated Range handling in RemoteMediaHandler , RemoteRawHandler , RemoteMediaHandler , and RemoteUtil classes to ensure compatibility with byte - based range
updated the location of the G - code file and modified the conditional logic in the VisualizerCanvas and GcodeViewParse classes to enhance
added support for additional versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " in TestBackwardsCompatibility
updated assertions in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java for consistency to improve readability and maintainability of test code
added a condition to check if the output stage is not done before closing the exchange client to ensure proper resource management and avoid potential resource leaks
do n ' t expand the file directory if it do n ' t exist
added import for SolrClient in ChaosMonkey . java to facilitate the handling of Solr clients in the code
fix potential nullpointerexception on startup
reformatted code to improve readability and maintainability of the code
modified the constructor of ExtensionTypeHeader to be public and added an argument for type and length to ensure type and length are within valid range to enhance
pdfbox - 4892 : remove try / catch block , a suggest by valerybokov
renamed ` deleteOnShutdown ` and ` pushOnShutdown ` to ` pushOnShutdown ` and ` pushOnShutdown ` , and added getter and
added error handling for trigger failures in ReactiveStateMachineExecutor to improve robustness by managing state machine trigger errors effectively
added a test to verify that multiple Python executables on the specified path are correctly set on the Python executable directory to ensure that the Python executables are
added a default button to the initial account registration dialog to enhance user experience by allowing users to access the sign - in functionality
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ REDUCTION _ REDUCTION _ FOR _ MAP
include exception cause in error message
move reflectionutils to util package instead of org . axonframework . util . reflection
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created unit tests for the ` O
removed the ` center ` variable from multiple ` Circle ` , ` Ellipse , ` Polygon , ` Poly Poly Poly Poly Poly Poly Poly Poly Poly Poly
updated conditional logic in RegisterAndProcessBundleOperation . java to simplify null check for pCollection to enhance code readability and maintainability
refactor SslContextFactory to improve security handling to enhance application stability and performance
updated default maximum expectations and log entries in ConfigurationProperties and ConfigurationPropertiesTest to improve test coverage and ensure correct behavior of configuration parameters
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive error message to improve clarity
[ 3.0 ] fix classloader not set when consumer classloader be set
added a new method ` shiftRows ` to the ` HSSFSheet ` class and modified the ` shiftRows ` method to include a ` boolean
replaced instances of ` setRolloverIcon ` and ` setRolloverPressedIcon ` with ` setRolloverPressedIcon ` and ` setRollover
refactor grid translation handling in TaskViewUtils and TaskViewSimulator to improve clarity and maintainability of grid translation logic
refactor assertions to improve code readability and maintainability
added null checks for currentDateTimeFunction in multiple database classes to ensure safe access to the function to prevent potential NullPointerExceptions
added a new method ` anonymousPath ` to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling
updated the ` DigitalWellBeingToast ` and ` TaskView ` classes to include a content description for tasks to enhance user experience by providing cle
when wait for meta - server , add a default timeout of 50 second
updated LineNumberTagAggregator and TestDominance classes to improve line number handling and test coverage
fix type conversion in genericitem ( # 1892 )
updated BidirectionalOneToOneNPlusOneTest to utilize ClassImportIntegrator and added additional properties handling to enhance compatibility with Hibernate
added functionality to remove extra empty screen from mWorkspace and updated startSearchPageIndex initialization to handle empty workspace screens more effectively
refactor ` baseDerivedRefs ` and ` HashSet ` initialization to directly use ` other . baseDerivedRefs ` and ` other . baseDerivedRefsOther
updated string formatting in GoogleLineChart and GooglePieChart classes to ensure proper string representation of values in chart output
updated the handling of batch processing in the WaitingAccountor class to improve robustness by ensuring proper handling of interruptions during batch processing
[ wal ] add position option to walprettyprinter to print the position of the cell
updated the socket connection port from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to ensure that the Transceiver starts with a
sort logevents before generate a report
added a test for CSV line description containing escaped quotes in ` getCsvLine ` method to ensure correct handling of CSV lines with double quotes to validate that
add option to skip coref scorer for test
do n ' t send iq to non - remote server . jm - 648
removed the @ JniImpl annotation from VM . java to streamline code by eliminating unnecessary annotations
updated configuration settings for HTTP request handling to improve clarity and maintainability of the code
added a condition to check if the media ' s ID is not null and the renderer ' s renderer is not " dolbyvision " before processing
updated the test case to reflect the change from " other _ package " to " other _ package2 " to ensure the test case accurately reflect
fix worldborder . setdiameter ( ) and add integration test
hbase - 17815 hbase - 17878 : do n ' t do n ' t attempt to replicatelicatelicatelicatelicatelicate
mow - 358 make sure we do n ' t have to remove the caller from the view anymore after the login event
updated markDataResourceOnline method calls to use generated instance configurations to improve code readability and maintainability by centralizing configuration generation logic
changed the visibility of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add a test to check that a reference to a project do not contain a version
simplified conditional logic in PropertyMap . java to improve code readability and maintainability
refactor ` getControllerId ` and ` getControllerId ` methods in ` DoorbirdInfo ` , ` ControllerConfiguration ` , and
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper resource management by
removed the check for ` service . isGenerateRefreshToken ( ) ` when processing refresh token prompts to simplify the prompt validation logic for better readability
removed debug print statement from Http2SolrClient to clean up the code and reduce unnecessary console output
replaced a lambda expression with an enum for the extractor function in BaggagePropagation . java to improve code clarity and avoid potential null pointer exceptions
update documentation to reference webjars - locator -
added a condition to check if the treeRoot contains child nodes to ensure that the calculations are only performed for non - empty child nodes
pdfbox - 4892 : use getunfilteredstream instead of getfilteredstream , a suggest by valerybokov
updated log messages to use " CN1 " instead of " cn1 " and added intent result listener to manage session states to improve clarity in log
replaced instances of " h : mm a " with " skeleton " in ShadowICU . java and added tests for date picker behavior to ensure correct handling of
updated the condition for determining if the device is locked in TouchInteractionService . java to simplify the check for device lock status to improve code readability and
server : fix npe when delete a volume ( # 3747 )
replaced ` FileChannel ` with ` AsynchronousFileChannel ` in ` UtowBodyHandler . java ` to utilize ` AsynchronousFileChannel `
refactor SigInt and SigIntTest classes to standardize spacing and formatting to improve code readability and maintainability
g3d - 335 : make sure bound box update only when need
change return value from - 1 to 0 to indicate a successful operation in the asset processing
refactor ComputeBenchmark . java to use static final variables for valueLoader , valueLoader , and mappingFunction to improve code readability and maintainability to
added a refresh listener to the UploadListFragment to notify the UI when the fragment refreshes
fix bibdatabasecontext to return an empty path instead of null
replaced references to ` emitters . items [ i ] ` with ` emitters . get ( i ) ` for consistency and clarity to
refactor tomcat to use findservices ( ) instead of findservice ( )
updated error message formatting in BuildRuleFactoryParams and BuildRuleFactoryParams classes to enhance clarity in error messages to improve the readability of error
added a check to return early if the playback state is not PLAYING to optimize performance by avoiding unnecessary processing
updated the method of finding ServiceComponentDesiredStateEntity by using findById instead of findByPKPKPKPKPK to improve clarity and simplify the
added a check for inner class field clashes in Java2TypeScriptTranslator and created a new InnerClassFieldClashes class to enhance
[ grid ] add support for follow redirect and log
replace direct call to displayChanged ( ) with usage of awtUnlock ( ) and awtLock ( ) within a try - finally block to improve thread safety during display update handling
hhh - 10183 - fix test failure on sql server
make sure we close the input stream when close the ziphelper
changed the visibility of the ` storeClassFile ` method from private to public to allow access to the method from other classes
added a new test class ` TestSortedSetDocValues ` and modified ` Series Series Series Series Series Series Series Series Series Series Series Series Series Series Series Series
replaced specific error messages with more general ones in CGIHandler . java and added null check for Runnable in JavaVM . java to improve error message clarity and enhance null safety for improved
added support for additional line ending formats in LineReaderImpl to enhance input validation to accommodate additional text formats
updated methods to use Set instead of List for hash codes in DistBuildService and ServerContentsProvider to enhance performance and ensure uniqueness of
added a check to return early if the mesh has no vertex count to optimize performance by avoiding unnecessary processing
improve error message on verification order failure
replaced FileUtil . createData ( ) with FileUtil . createFolder ( ) in MacroService . java to create a new folder instead of using data
truffle : remove unused import of node
refactor JsonObject class to improve code readability and maintainability
added a check for non - negative max idle time in SelectChannelEndPoint . java and updated resource management in HttpConnection . java to ensure proper handling of
fix farmlandblock not be able to block with plantable state correctly . close # 699
added a CREATE TABLE statement for SALTED TABLE and modified the SQL query to include SALTED _ BUCKETS parameter to en
updated date formatting in HttpCookie . java and added a new class B6791927 . java to ensure cookies are correctly expired expired expiration expiration expiration expiration
no effective change - code cleanup
( chore ) camel - spring - batch - batch - batch - batch - batch message batch batch processing in batch batch batch processing test
[ gr - 30844 ] economy allocation stage should be trace - based .
fix : add key binding for save database
modified ObjectMapper initialization to use system line separator to ensure consistent line endings across different operating systems
[ native ] fix path handling for window .
refactored ` BaseTest ` and ` LiteFnQueryHttpFilterTest ` to use ` @ PostConstruct ` and ` @ Resource
[ java ] remove redundant code for record log validation .
chore : replace groupname with errorgroup
do n ' t run test on travis since it ' s slow
added a boolean variable ` reverseImage ` and updated its assignment in ` CameraManager ` to streamline initialization of the ` reverseImage ` preference
updated conditional checks in multiple Java files to improve clarity and consistency in string comparison logic to enhance readability and maintainability of the code
[ mdmmatchlinkservicetest ] fix mdm matchlinkservicetest ( # 2985 )
updated JUnit imports and annotations in AuthenticationSuccessListenerTests . java to migrate from JUnit 4 to JUnit 5 to JUnit 5 to ensure compatibility
improve performance of gettypes ( ) method in settypes ( )
refactor TypeUtil class to improve code readability and maintainability
updated the way trigger time is formatted by using LocalDateTime to ensure proper handling of time zone zone zone zone zone zone zone
added a method ` maybeCreateAbstractMethodErrorThrower ` in ` MethodHandleResolver . java ` to handle abstract method errors in ` MethodHandleResolver . java
camel - 13612 : camel - catalog - validate simple language should check for invalid syntax .
added a check to return an empty TargetGraph if the toExplore list is empty to improve handling of empty input cases in the parser
( chore ) camel - jclouds : use ioutils for copy copy method
camel - 19663 : camel - consul - fix the osgi test error of camel - consul
updated the conditional check in mmm Check . java and added a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java
[ java ] increase timeout for channel validation test .
added a new file ` FileExtensions . java ` that defines constants for file extensions to provide a standardized way to handle file extensions in the application
refactor ThreadLocalDateFormat to use a static final instance of ISO8601 format to improve thread safety and avoid unnecessary cloning
remove deprecated flags for specific memory options in VMDeprecatedOptions . java to clean up deprecated code and improve maintainability
added display name property to DelegatedClientIdentityProviderConfiguration and related classes to enhance flexibility in client identification across different environments
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by distinguishing early termination exceptions
removed unnecessary whitespace in the apply method call to improve code readability and maintain consistency
improve connection handling in jm - 145
fix a nullpointerexception in forgeeventfactory when the parent be null
removed KeyCrypterException from the catch block to simplify exception handling for better readability
deprecate submitorderedcompletionservice in favor of asynccompletionservice
updated the length calculation in HyphenationTree . java to ensure the correct original length is used for string processing
add a delay to register .
renames occurrence of resource to resourcemanager so that it would well reflect our new package structure .
updated the format of the constant PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to improve clarity and consistency to
added a boolean variable ` providersChanged ` to track the configuration state of providers
added a method to quote identifiers in SemanticAnalyzer . java to ensure identifiers are properly escaped in SQL queries
added a null check for ' name ' in the FileSystemFontProvider class to handle cases where ' name ' is missing and log a warning to inform users
updated type casting for the loader variable in SolrResourceLoader . java to improve type safety and reduce unnecessary type casting
modified the boundary condition in Window . java to check for ancestor ancestor ancestor ancestor ancestor ancestor to ensure proper handling of ancestor ancestor ancestor ancestor ancestor to prevent potential
added a null check for the appManifest before retrieving the target SDK version to avoid potential NullPointerExceptions when appManifest to enhance robustness by ensuring
refactor ConfigurationMetadataGenerator and CasConfigurationMetadataCatalog for improved configuration handling and serialization to enhance code clarity and maintainability while
added userName parameter to Driver and its usage in HiveSemanticAnalyzerHookContextImpl , HiveSemanticAnalyzerHookContextImpl , and SQLOperation to enable
camel - 14354 : camel - saxon should be able to set the xmlconverter on camel - saxon so you can configure the xml
added HadoopShim support to multiple classes and updated method signatures to incorporate it to enhance compatibility with Hadoop shim implementations
removed unnecessary variables from test classes to simplify code and improve readability
fix potential npe in coyoteadapter . logaccess ( ) .
[ flink - 30909 ] [ runtime ] [ runtime ] [ throughput ] fix throughput throughput logger log output to include total message
refactor VM version checks in CompilerConfigFileWarning . java and ConfigFileWarning . java and add a new VMOptionWarning . java file to
replaced usage of ` MeterStatisticsManager . statisticsOperationMap ` with a direct map of ` MeterDetailStatisticsModel ` to improve code
updated logback configuration handling in FrameworkLauncherExtended . java to ensure proper resolution of system property for logback configuration
added @ NotNull annotations to method parameters across multiple classes to enhance code robustness by ensuring required parameters are not null
replaced instances of ` BASH _ ESCAPER ` with ` SHELL _ ESCAPER ` across multiple files to ensure proper handling of shell
refactor waitUntilReadyAndSucceed and HttpWaitStrategyTest to use try - with - resources for container management to ensure proper resource management and
updated the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to reflect the new naming conventions for better clarity and organization
updated formatting in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to facilitate the generation of shield addresses in the API response
changed the return type of readConsoleInput method from byte [ ] to String in JansiWinSysTerminal and JnaWinSysTerminal classes to simplify
updated regex patterns and variable declarations in TestStabilityRule . java to improve pattern matching accuracy and consistency in test case handling
added a check for multi - valued fields in DefaultSolrHighlighter and updated the highlighter to preserve multi - valued fields in HighlighterTest to
modified the ` tryToLogin ` method to accept a ` username ` and ` password ` as parameters to enhance functionality by allowing the method to accept
updated entity handling logic in ` HandlerSceneEntityDrownReq . java ` and ` PacketSceneEntityDrownRsp . java ` to improve
( chore ) camel - jms : fix checkstyle issue
no effective change - code cleanup
added error handling for unknown currencies in BTCEAdapters . java to improve robustness by ignoring unknown currencies and logging warnings
http : / / issues . apache . org / jira / browse / amazazazazazazazazazazo / browse
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated ` startController ` method to accept a ` useTenantIsolation ` parameter and modified tenant creation methods to enhance flexibility in tenant management
simplified the return statement in HasSettings . java to improve code readability and reduce complexity
added a check for non - empty attrs size in ProjectWorkspace . java to ensure that empty attrs do not cause errors
added methods to retrieve project JDK name , type , and language level in AbstractIjProjectConfig and updated related classes to enhance project configuration
corrected the spelling of " Experimenal " to " Experimental " in HiveSessionProperties . java to improve clarity and consistency in
added unit tests for the GrantedAuthorityEffectiveAclsResolver to ensure correct resolution of ACLs based on user details
fix : use solvedjavatype . solvedjavatype ( ) instead of reflection
added functionality to manage button count based on the number of buttons in XToolkit to ensure the application correctly handles cases where no buttons are available for the X
replaced the import of ` jdk . testlibrary . Asserts ` with ` com . oracle . testlibrary . Asserts ` in ` Re
added a new ` MessagePackFactory ` class and modified ` newUnpacker ` methods in ` MessagePack ` to enhance flexibility in
add is _ cave and is _ is _ desert and is _ is _ is _ cave tag to biome tag ( #
renamed the method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
refactor layout condition checks in ComponentGroup . java to improve clarity and structure to enhance readability and maintainability of the layout management logic
simplified the matching condition for URL patterns in DOServiceImpl . java to improve code readability and maintainability
replaced ` touchHandler instanceof ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput . java ` to
[ java ] do n ' t need to check commit position if it be already close .
add ebean - example - records - user - site - to documentation ( # 1617 )
improve error handling for malformed uris in httpconverterregistrar
apiresponsehelper : do n ' t ignore storage capacity when list storage pool
replaced ` openInput ( filename , IOContext . DEFAULT ) . close ( ) ` with ` fileLength ( fileName ) ` in ` NRTCaching
updated import statements and modified class modifiers in JavascriptCompiler . java to improve code clarity and enforce immutability
added synchronization to the store method in UISettings . java to ensure thread safety when writing properties file
added a check to return early if native input is supported and text editing is available to improve performance by avoiding unnecessary input handling
[ hotfix ] [ table - planner - blink ] improve error message when the emulator be reject
replaced raw types with diamond operator to improve code readability and maintainability
updated array type check from double to short in ObjectInputStream . java and added CloneArray . java for testing to ensure correct handling of short arrays
updated nonce handling in OIDCAuthenticationFilter to use ` getStringClaim ( " nonce " ) ` instead of ` getClaim ( " nonce " )
added a condition to return true for relationship fields in the DCInputSet class to ensure proper handling of relationship fields in data processing
added support for server - slogan in the capability table and updated related methods to enhance user experience by displaying server - slogan
updated conditional logic in DrawerActivity . java to ensure proper handling of the current item in the current item in addition to the current item in the current
replaced the failure message with an explicit print statement in SolrRequestParserTest . java to improve clarity in test output and ensure the test only fails if
added a check to return early if no missing symbols are present to optimize performance by avoiding unnecessary processing
updated test cases in StringHelperTest . java to include additional data entries to enhance test coverage for string manipulation functionality
updated the ` dataProviderHolder ` variable to be ` final ` and added a warning log statement for empty data providers to improve code clarity and ensure
( chore ) camel - jbang : use ` collections . emptylist ( ) ` instead of ` collections . empty _ list ( ) `
update freeplane 1.9 . 8 to 1.9 . 8
updated parameter name from mass to restitutionitution to improve clarity and consistency in parameter naming
added a new file ` AutoFtpActivity . java ` to implement FTP - related functionalities to enable automated FTP testing for the application
refactor token type handling in BaseSemanticAnalyzer to improve code readability and maintainability to enhance clarity in token processing logic to ensure proper handling
added getter and setter methods for imageX , y , and component state in ImageViewer , OnOffSwitch , and Component classes , and updated
added a new file RemoteExecutionEnabled . java to implement custom serialization for remote execution settings to enable or disable remote execution based on configuration
pdfbox - 2852 : fix typo find by codespell on fossies . org
updated file reading methods to use InputStreamReader and UTF - 8 encoding to ensure proper handling of character encoding and improve code clarity
add assert that shadow variable be not cache
updated the configuration key for semijoin conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion "
log a debug message if datagram packet be not an io . netty . buffer . bytebuf instance .
updated the ` removeFile ` method in ` SynchronizeFolderOperation . java ` and modified the file removal logic in ` FileDisplayActivity .
added assertions to verify transaction hash presence in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is present and valid before proceeding
updated the test method name from ` testConstructSchemaBlacklist ` to ` testConstructSchema blacklisted ` testDelete timeseries ` to ` testDelete
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid format is provided to avoid runtime exceptions
replaced calls to ` this . notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23
updated @ AllArgsConstructor annotations in J . java to specify the constructor parameters to enhance object creation flexibility for JSON processing
added SQLFeatureNotSupportedException to indicate that creating an index on a view is not supported in PostgreSQL
added a new class Website with properties for name , url , and uri to facilitate the population of JavaNet types in the pop
added JUnit setup method to BSFormatterTest to ensure consistent locale handling in tests
add a ` ` . jar . zip ' ' file to the list of jar file so that we know we know we know we know how to download
updated assertions in MultiPartParsingTest to use Matchers . equalToIgnoringCase to improve test reliability and clarity in comparison
added a check for single parameters in SimpleExprGenerator to ensure proper handling of single parameters to enhance the parser ' s functionality to improve the parser '
added a volatile boolean variable ` createdVertx ` and updated conditional check for ` vertx ` to ensure ` vertx ` is only checked if it
updated writeAttributes method calls to use node object instead of null parameters to improve clarity and consistency in attribute writing logic
updated log messages in SynchronizeFolderOperation . java and added null check for currentDir in FileDisplayActivity . java to improve logging clarity and prevent
added a field ` ignoredReadStatus ` to ` Entries ` and updated ` FeedREST ` to ignore read status in ` Entries ` and ` FeedREST
replaced ` MavenTestingUtils . toUri ( ) ` with ` MavenPaths . findTestResourceDir ( ) ` in multiple test
refactor data validation logic in RegisterServerConsumerExecutor to improve data validation to ensure only valid data is processed to avoid errors
updated playback state logic in GwtMusic . java to ensure proper handling of paused state when the sound is paused
added permission for admins to plot plot plot plotting .
updated serverRequestPlanVisitor to utilize HashMap for query options and improved query option handling to enhance code readability and maintainability by
updated path comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to use the
updated assertions in ResourcesTest to include additional emoji and text values to enhance test coverage for emoji and text scenarios
added a new method ` NMSOverflowHashBucket ` and ` NMTMallocWithPseudoStack ` to the ` WhiteBox ` class to
[ hotfix ] [ serializer ] [ test ] deprecate javanserializer snapshot method in favor of new one
updated address resolver configuration to use a new constant and added rotation options to enhance flexibility in address resolution based on configuration settings
added a call to super . invoke super . invoke super . invoke super . invoke super . invoke super . invoke super . invoke super . invoke super .
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML path references from " liquibase / parser / core / xml / xml " to " www . liquibase . org / xml /
truffle : move common MIME type locator to test source / test source source source code .
changed the default value of repositoryState from INIT to NOT _ REQUIRED across multiple classes to reflect the new constant NOT _ REQUIRED to improve clarity
updated the comparison logic in GenerateChangeLogTask . java to incorporate schema comparison to enhance comparison accuracy by incorporating schema comparison to improve
updated the import statement for TestBackwardAnoamlyFunctionUtils . java to use TestNG annotations to ensure compatibility with TestNG testing framework
added a new test class ` ProgressiveJPEGTest ` to implement functionality for rendering progressive JPEGs in the application
fix a crash when load material with invalid material .
fix native - image build on x86
added a check for non - empty text before setting the preferred size to avoid potential errors when the text is not provided
updated readVarInt method to use a multiplier for decimal places to ensure accurate representation of precision in decimal representation
added a private constructor to the PushUtils and ThumbnailsCacheManager classes to enforce singleton pattern and prevent instantiation of these classes
simplified the calculation of the length by directly obtaining the length from curConfig to simplify the code and improve readability
removed unnecessary type casting in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the file path for loading presets from " . * csv " to " ( ? i ) . * csv " to ensure the correct file format
added a condition to check if the app is in the app before announceing accessibility and modified related logic to ensure accessibility announcements only occur when
updated node creation to use ` RefreshTask ` instead of ` myKey ` to ensure consistency in node ID retrieval
added test to make sure that only one jdk 1.5 jdk be target
updated unit tests in QuotaResponseBuilderImplTest to use MockitoJUnitRunner instead of PowerMock to improve test reliability and compatibility with
added output stream handling to TestSchemaToolCatalogOps to facilitate debugging by setting standard output stream to standard error
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper class to enhance the FanOutOneBlockAsyncDFS
updated MongoQueryMethod and related classes to accept RepositoryMetadata as parameters to enhance query resolution by associating query methods with specific metadata objects
add a wrapper to make it easy to replace the system id with the system id
updated import statements in MetaDataEndpointImpl . java for consistency and clarity to improve readability and maintainability of the code
updated ALLOWED _ REPEATED _ DELAYS from 5 to 10 in TxnHandler . java and added retry logic for deadlock handling to
updated variable names for clarity and consistency in BarChartActivity , LineChartActivity , and YAxisRenderer to improve code readability and maintainability
added methods to validate and filter printable characters in FsUtils . java to ensure only valid Unicode characters are processed to avoid errors
rename ` ` in ' ' to ` ` using ' ' in selenide .
add process plugin configuration to the defaultprojectbuilder .
updated return values in ProxyConnectionManager . java and ServerTrafficCounter . java to use ' d ' instead of ' 1000 ' to ensure correct conversion from
updated the resource path in ITSystemTest . java to use Files . exists instead of a hardcoded string to enhance flexibility for loading resources from a
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to return null instead of a string representation of the remote host
[ ds - 3058 ] add admin permission to community list servlet
refactor compaction thread naming to use AtomicInteger to improve readability and maintainability of thread naming conventions
replaced ` getApplication ( ) . getPackageName ( ) ` with ` resources . resourcePackageName ( ) ` in ` WallpaperChooser . java `
updated the method for retrieving players in plots by introducing ` getPlayersInPlotVisible ` to improve code readability and encapsulate player visibility
updated AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
rename MlibOpsTest . java file to improve clarity and consistency in naming conventions
replaced hardcoded string with a constant for the operating system implementation to improve maintainability and readability of the code
updated the attribute name from " referencedContainer " to " referencedContainer " in SchemeGenerator . java and added a new test case in SchemeGenerator
updated key and initialization vector handling in UploadFileOperation . java to streamline key and initialization logic to improve code clarity and reduce redundancy
added @ Stability annotation to WorkProfileTest . java to address flakiness in tests related to b / 243688989
removed conditional check for bucket version in TezCompiler . java to simplify code logic for better readability and maintainability
replaced ` setCursorPosition ` with ` input . setCursorPosition ` in ` GwtTestWrapper . java ` to ensure consistent cursor position handling
renamed ` LockFreeBucket ` to ` LockFreeBucketContendedTimeMeter ` and added ` LockFreeBucket _ FinalFields _ CacheLinePadding
added method to print thread pool stats
updated max bitrate handling in ExternalPlayerActivity and PlaybackController to incorporate user preferences for better control over bitrate settings
added methods to check for missing span IDs and span IDs in ZipkinHttpSpanExtractor to enhance debugging capabilities by ensuring only valid span IDs
do n ' t include bsq swap account when create offer
remove reflection from dartservercompletionContributor . gettypeicon ( ) . ( # 638 )
added a method to set the project in LauncherUtils to enhance functionality by allowing dynamic project configuration
updated JsBundle and related classes to utilize ProjectFilesystem for path handling to enhance flexibility in specifying the root directory for build processes
refactor multiple Java files related to data binding and context management to improve code organization and maintainability
[ hotfix ] [ doc ] fix typo in metricsdslcontext
removed the implementation of VersionBuckConfig to simplify the class structure and improve performance by eliminating unnecessary interface implementation
added error handling around shadow class binding to improve robustness by catching potential TypeNotPresentException
changed the visibility of the validateTypes method from static to public and updated the exception message to improve accessibility of the validateTypes method and clarify
fix : update gapic - generator - java with mock service generation fix ( # 241 )
added SLF4J logging to SimulationStatus class to facilitate easier debugging and monitoring of simulation status changes
updated VERSION _ POSITION _ Y and VERSION _ POSITION _ Y from 138 to 150 and 14 to improve readability of the code
updated NotificationImpl addition to run on the UI thread to ensure notifications are added on the UI thread for thread safety
updated the ReturnsElementsOf mock implementation to enhance test coverage and ensure proper mock behavior
corrected a typo in the error message to ensure clarity and accuracy in error reporting
add a test case for handling line file documents in BaseStoredFieldsFormatTestCase to ensure correct indexing of line file documents using LineFileDocs
added a method to retrieve the version code in MainApp and updated references in FeatureList to improve code clarity and maintainability by centralizing version code
camel - 7999 : fixed bean method invocation with multiple method call
updated assertions in MultiPartInputStreamTest to use getSubmittedFileName ( ) instead of getContentDispositionFilename ( ) to ensure consistency in file name validation
added buffer management functionality to IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper handling of static buffers during rendering
added a transition for the " forgotPassword " action in the PasswordManagementWebflow configuration to enhance user experience by allowing users to change the password
updated JerseyClientConfiguration to improve client configuration handling
int - 161 , int - 162 , int - 163 , int - 167
updated variable names from ' s ' to ' o ' in multiple test classes to improve code clarity and consistency in naming conventions
added methods to manage and check for empty arrays in StringDict and Table classes to improve data handling to enhance the robustness of data processing
deprecated deprecated methods and implemented custom command hooks in GenericContainer to encourage the use of AutoCloseable for better resource management
updated logging level from info to error in MediaInfo . java and improved exception handling in RendererConfigurationTest . java to enhance logging cl
added schema pattern support to BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance data source configuration flexibility by allowing specification of schema patterns
return empty id instead of null to avoid npe
refactor bitmap creation logic to use local variables for width and height calculations to improve code readability and maintainability by reducing repetitive calculations for
refactor Base64 class to improve code readability and maintainability
[ gr - 36425 ] fix an issue where an i64 - managed sulong do n ' t work .
danielwagnerhall : ignore test that fail on iwebdriver
refactor FlowBuilder and its tests to improve code organization and maintainability
replaced ` ResName ` with ` int resId ` in ` AttributeResource ` and ` OverlayResourceIndex ` classes to simplify resource ID handling
refactor docker context metadata file resolution to use a dedicated method to improve code readability and maintainability
rename test method after to avoid confusion
updated type variable handling in mmm Attr . java and added a new class T6450290 . java with generic class T6450290 . java
added logging level configuration to LoggingFlags and LoggingOptions classes to allow customizable logging levels for better log management
added logging statements to various classes to improve traceability and debugging during the uninstallation process
added ` allFilesOption ( ) ` method to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` classes to en
added deprecated methods for forEach operation in MutationOperationGroup to prepare for future removal of deprecated functionality
updated the calculation of ` numPredictiveAppCols ` in ` DeviceProfile . java ` to ensure ` numPredictiveAppCols ` is set to
added UTF - 8 character handling in StringUtils to ensure proper string processing for character encoding
added RequestMatchers class and its corresponding tests for matching request matchers to enhance security by allowing multiple request matchers to match specific criteria
ggb - 2118 fix : do n ' t hide the text field if it ' s in applet mode
updated height calculations in ProgressBar to account for the background background background background background to ensure correct positioning of the knob ' s background background to improve
[ native ] use resource instead of file
make parameter in permuteargs final to avoid npe .
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gestures when the state is invalidated
updated layout conditions in DynamicGrid and Workspace classes to improve layout handling for landscape and portrait orientations
added a condition to check for the " / robots . txt " file in addition to the existing " / robots . txt " file to ensure
[ netbeans - 3428 ] add a static resource for the warning icon .
fix a crash when go back from an infinite loop
updated the condition in UDFOPDivide to include a check for zero values to ensure that zero values are handled correctly in the evaluation logic
refactor code formatting for consistency and clarity to improve code readability and maintainability
updated filter process and authentication request matchers in FormLoginBeanDefinitionParser and LogoutFilter to enhance the flexibility and maintainability of the logout
added onDestroy ( ) method to Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share Share
updated variable names from ` thumbNail ` to ` thumbnail ` to improve clarity and consistency in referencing the thumbnail object
refactor multiple Java files related to command handling to improve code organization and maintainability
added request timeout configuration to RaftServerConfigKeys to ensure proper handling of request timeouts in the Rpc configuration
updated logging level from error to debug in TsFileResourceManager . java and modified exception handling in TsFileResourceManager . java to improve logging clarity
added a call to set system properties for modelSource in MavenModuleLoader . java to ensure the model source is properly set before use
added metrics for readiness checks in ServerMeter and updated related classes to enhance monitoring capabilities for readiness checks
fix animated torch not register properly .
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when writer is not initialized
added a new method ` getHiveOnTezConfFromDir ` to ` UtilsForTest ` for retrieving Hive site configuration from the specified directory
added a link to the " Muting Users " feature in the FeaturesActivity to provide users with direct access to users on the respective channels
added a new property " jdk . reflect . useDirectMethodHandle " to the initializedProperties to disable direct method handle usage in reflection operations
hbase - 15414 splitonLeadingVarCharcolumnspolicy should use steppingregionsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] fix yarn deployment error
use word . getSpelling ( ) instead of word . getpronunciations ( ) to avoid npe
fix jsonutilstest : remove trail whitespace
added ` id ` extra to ` Compose ` class and updated its usage in ` TimeLineCursorAdapter ` , ` TimelineArrayAdapter ` , and
add a warning log when a reliable topic be lose .
improve error message when no class find to analyze
replaced ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to utilize the correct cryptographic
removed duplicate initialization of isInCompatible variable to streamline code by eliminating redundancy
updated the method signature of createAccount to include AccountCreateContract as a parameter to enhance account creation functionality
pdfbox - 3353 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 4078 - do n ' t try to send
changed the default value of ` enableOffHeapFormat ` from ` false ` to ` true ` across multiple files to enable off - heap format
modified title handling in FeedUpdateService to restrict title length to a maximum of 2048 characters to ensure titles do not exceed database limitations
updated JColorChooser and BasicColorChooserUI to utilize a dedicated method for obtaining the preview panel to improve code clarity and maintainability by
changed log level from info to debug for extension checking to reduce log verbosity and improve performance during development
added null check for the reusable bitmap before setting bitmap options in AndroidTileBitmap to avoid potential NullPointerException when reusable bitmaps are not present
added layoutParams and getLayoutParams methods to FakeView class to enhance flexibility by allowing customizable layout parameters
added a check to throw IllegalStateException when attempting to iterate over a closed cursor cursor to ensure that an IllegalStateException is thrown when attempting to iterate over a closed cursor
pdfbox - 4892 : simplify code , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private field ` ts ` with getter and setter methods to store and manage a timestamp associated with the message
[ opengrok ] add exceptionmapperutils to log error
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
remove ` ` weighting ' ' parameter in isoschroneresource ( # 1818 )
removed public access modifier from multiple test classes to improve encapsulation by restricting access to test classes
refactor CSRF protection by encapsulating CSRF attribute handling into a separate method to improve code organization and readability of CSRF protection logic
fix : lombok . load . shadowclassloader can not be load in bootstrap mode
[ bug - 66232 ] [ bug - 66232 ] add ` ` numericdisabled ' ' flag to rulesheetlistener
updated logging condition to check if debug level is enabled before logging the default value to improve performance by avoiding unnecessary log statements
added null checks for axes and connected methods in Lwjgl3Controller . java and refactored controller management in Lwjgl3ControllerManager .
updated import statement for ObjectFactory from cucumber . api . java to cucumber . core . backend . ObjectFactory to align with the latest
added null check for host before saving port forward in PortForwardListActivity to prevent potential NullPointerExceptions when accessing host data
added configuration to control snapshot data behavior in GlobalConfiguration and related classes to allow users to choose whether to snapshot data based on configuration settings
added a null check for the file name before scheduling a job in SyncedFolderObserver . java to improve error handling and avoid unnecessary job execution
refactor LocationMarshaller class to improve code readability and maintainability
removed unnecessary trackpad motion checks to simplify touch event handling logic for better readability and maintainability
removed the ` VectorReader ` interface from ` VectorReader ` and related classes to simplify the class structure and eliminate unnecessary dependencies
replaced ArgumentMatchers with Matchers in multiple test files to align with updated Mockito API conventions
replaced ` getRelativePathName ( ) ` and ` getRelativePathName ( ) ` methods with ` getRelativePath ( ) ` across multiple classes to
updated ` completeMapAndTransformRow ` and ` completeMapAndTransformRow ` methods to accept ` RecordReaderFileConfig ` instead of `
added a null check for the ` extractor ` variable in ` ControllerMethodInvoker ` to prevent potential null pointer exceptions when accessing ` WithArgumentExtractor `
cloudstack - 10233 : fix secondary storage limit for resource limit
added potion shift event to the inventory effect renderer . close # 788
added a deprecated constant for the constant COLD _ READS _ TO _ OMIT _ KEY and removed it from uncheckedOptions to indicate that the constant
added a call to leech . stop ( ) in ClientTest . java to ensure proper termination of the leech process
[ issue # 5979 ] [ issue # 5979 ] fix npe in popmessageprocessor ( # 5979 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the codebase
added JUnit Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for execution
rename ` eventloopgroup ` to ` netty - > ` netty - > `
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to ensure proper handling of WebSocket upgrade requests and responses
added timeout support in AndroidImplementation . java to allow customizable connection timeouts in the application
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to return a list of ` RegistrantAccessPermission ` objects
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing to ensure correct handling of
added a conditional check to ensure the file is writable and writable based on the operating system ' s root directory to enhance security by restricting access to
added logging and refactored thread management in FixedThreadExecutor . java to improve thread management and enhance logging functionality
added null check for field in AbstractChangeGenerator to prevent potential NullPointerException when field is null
updated event listener classes to use ` InitializingBean ` instead of ` CasEventListener ` to enhance compatibility with newer Spring framework versions
refactor animation end handling to use a new method ` endAnimation ( ) ` to improve code readability and maintainability by encapsulating the animation end
added a close method to the DeflaterOutputStream to ensure proper resource management and prevent memory leaks
added a new file ` gsp001 . java ` that includes methods to retrieve system properties to facilitate testing of the JVMTI GetSystemProperty functionality
fix : do n ' t use annotationutils . hasStereotype ( concreteclass ) in beandefinitioninjectprocessor
* fix npe in lightnode and lightnode .
updated PopupNotificationPanel to use SwingUtilities for disposal of the popup window to improve resource management and error handling during window closure
replace instances of ` NoInstanceException ` and ` InvalidInstanceException ` with ` InferenceException ` and ` InferenceException ` to standard
added a method to retrieve the feature value to provide access to the feature value for external use
changed the parameter type of the ` after ` method from ` int ` to ` long ` in the ` after ` method from ` int ` to `
added " OnBuild " and " executionDriver " fields with their respective getter and setter methods to ContainerConfig and Info classes to enhance the configuration options
updated icon handling in Toolbar and FlowLayout classes to differentiate between rtl and left - to - left layouts
added support for enabling position increments in StopFilter to enhance filtering capabilities based on configuration
added internetAddress field to EmailsTest and SystemErrorEmailReportTest to enhance email reporting by including a specific email address
added a new variable ` mTryShareAgain ` and initialized its value to ` false ` in ` FileActivity . java ` to ensure that sharing is
added logic to determine if the Jansi terminal should be used based on the major and minor version of the Jansi library to enhance terminal
refactor BandwidthProcessor to use a consistent variable for bytes size instead of a hardcoded value to improve code readability and maintainability by red
replaced direct assertions with Awaitility . await ( ) in Issue410Tests . java to improve test reliability by deferring assertions until until until until
updated API endpoint URLs in EaseeBindingConstants . java to include a new API base URL to enhance API accessibility and streamline
updated sleep duration in KafkaIOIT . java and added startup attempt configuration in KafkaContainer . java to improve reliability of Kafka integration and
updated matchers in SearchResultMatcher to use is ( itemName ) instead of hasAnyOf to improve readability and clarity in matching logic
added SSL trust management to the OkHttp class to enhance security by ensuring that client and server certificates are validated
refactor long click handling in TaskbarButtonsViewController and TaskbarNavButtonController to use a dedicated method to improve code readability and maintain
added a new ` HyperlinkFormula ` class and updated ` StringPtg ` and ` StringPtg ` classes to handle hyperlink formula
added nullable fields for stdout and stderr in ShellStep . java to improve code safety by avoiding null pointer exceptions
increase timeout to make asyncappendertest more reliable
updated ` escapeDatabaseObject ` and ` escapeSchemaName ` methods to use ` objectName ` instead of ` tableName ` and ` schemaName `
added a boolean field ` inputChanged ` to track if the input field has changed in the ` MaterialRenameDialog ` to manage the state of the input
added state change testing in ShadowDisplayTest and implemented state change in ShadowDisplay to ensure correct handling of display state changes to verify proper functionality of state changes
[ geos - 7088 ] add directinvocationservice interface to allow direct invocation of operation
[ web ] fix x / y key for gwt
updated SQL query conditions based on server version to ensure compatibility with PostgreSQL versions below 9.0 and above
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ] fix the
refactor getPathsFromResource method to use a URI object instead of a string to improve type safety and clarity to enhance type safety to ensure
added support for monitoring of Jenkins applications in CollectorServer to enhance application monitoring capabilities
updated the handling of " disabled " and " defaults - disabled " attributes in HeadersBeanDefinitionParser and added corresponding tests in HttpHeadersConfigTests
updated exception handling in ProtobufLogReader . java to improve clarity and simplify the logic for seeking to the end of a malformed edit to en
updated destroy methods in DefaultApplicationDeployer and added cleanup logic in NacosRegistry to ensure proper resource management and prevent memory leaks
camel - mybatis fixed switch / cases indentation see camel - 14540
added support for SPDY version in GoAway and GoAwayBodyParser classes to ensure proper handling of SPDY versions when processing GoAway frames
refactor code to improve readability and ensure correct JSON serialization of the AuditEvent object
fix round error in interpolation
fix incorrect path in world edit
refactor code to store the absolute path before adding it to the builder to improve code readability and maintainability
added assertions for PointRangeQuery instances in TestPointQueries . java to ensure proper type comparison for PointRangeQuery instances
hbase - 17826 testhfilecleaner fail with npe due to hbase - 17878
added a check to ensure the download file name differs from the file transfer request to improve user experience by ensuring that the download file name to enhance user
do n ' t throw jce exception in cluster command
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] make sure chainingstrategy be always set to always
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap ` and added
refactor QMap and QMapWriteBenchmark classes to improve performance and maintainability of hash map implementations
added a new variable G _ SCH _ B in HybridPlotWorld . java to store G _ SCH _ B data to facilitate
added validation to ensure fields are not null or empty before processing to enhance code robustness by preventing potential null pointer exceptions
fix for angle dependency in ca
added TCP keep - alive configuration for TCP connection establish establish establish establish establish establish establish establish establish establish establish establish establish establish establish establish establish establish establish establish establish
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to improve method naming for clarity to enhance readability and
no effective change - code cleanup
refactor RealtimeSegmentRelocator to use lambda expressions for scheduling tasks to improve code readability and reduce boilerplate code
removed the boolean variable ' success ' from startVpc method call to simplify the code by directly starting the vpc service without an intermediate variable
updated window alpha value from ACCEL _ 1 _ 5 to Math . max ( 0 ) in WindowTransformSwipeHandler . java and modified condition in Floating
updated fatal error message for Spring Security 3.2 to ensure compatibility with Spring Security 4.0
updated multiple assertion classes to improve consistency in naming conventions to enhance clarity and maintainability of the codebase
make field in disruptorprovider to make field final
added a new UDF class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` and ` ExprNodeGenericFuncEvaluator ` to
updated regex pattern matching in LogMessageWaitStrategy . java and added parameterized tests in LogMessageWaitStrategyTest . java to improve regex pattern matching to
refactor logger initialization to use getter method instead of local variable to improve code readability and reduce redundancy
updated database operations to delete purged shards instead of updating them to ensure data integrity by preventing stale data from being deleted
added support for the new Java version 17 - preview version in the JavaLanguageModule and LanguageVersionTest to enhance compatibility with the latest version of the
add a constant for wait for compression job to finish .
do n ' t assert if lastlocationaccess be null .
added a new method ` getSteps ( ) ` and modified the formatting of the ` getStep ( ) ` method in ` SimpleJob . java `
removed fromBase58 and toBase58 fields from TronJsonRpc and updated error handling in TronJsonRpc to streamline code by elimin
refactor currency pair check to use a local variable for clarity to improve code readability and maintainability
use baseTimeUnit instead of baseunit in longtasktimer ' s duration measurement ( # 1632 )
[ hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot hot
updated color value retrieval and parsing logic in HostEditorActivity . java to improve code clarity and ensure proper handling of list preferences
renamed ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and updated related methods to improve clarity and consistency in handling database version
added a constant MAX _ TWEET _ TWEET _ TWEET _ TWEET _ TWEET to limit the number of t
increased the refresh interval for the LDAP authorization map from 1 second to 2000 seconds to allow more time for the map to refresh before timing out
[ hotfix ] [ runtime ] fix bug in queue . get persistedtailpages
fix classnotfoundexception in glowserver
refactor buffer resizing logic in DataIO . java to improve code readability and maintainability by consolidating buffer resizing operations
removed unused import of DataOutputStream from GdxSetup . java to clean up the code and improve readability
camel - 16462 : camel - jms component - make it easy to configure component and whatnot
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure the fragment is marked as read when loading
updated exception handling in JarInstrumentor . java to include ClassNotFoundException to improve error handling and provide clearer feedback when class instrumentation fails
added ` checkForSpillPossibility ` method to ` HashAggTemplate ` to ensure proper handling of partition selection during aggregation operations
updated variable names from ` info ` to ` dsName ` for consistency to improve code readability and maintainability
added a default name ID format to the list of supported name formats in SamlProfileSamlNameIdBuilder to ensure a valid name format is used
added a redirect to the password change process in ChangePasswordPage . java to improve user experience by indicating when the password change is aborted
removed an unnecessary semicolon from Deadlock2 . java to improve code readability and maintainability
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle time for
deleted the FontScalingTest . java file to remove unused or redundant code to streamline the codebase
[ rrd4j ] improve error message for date range query
added a check to return early if numVectors is less than or equal to zero to optimize performance by avoiding unnecessary processing
test : migrate to junit 5 ( # 4585 )
added null checks before setting view and glassPane to prevent potential NullPointerExceptions when view or glassPane is null
camel - 7999 : add wire - tap support for camel - spring - xml
changed the access modifier of the setAction method from public to protected to restrict access to the setAction method for better encapsulation
added a new option ` TOPN ` in ` PlannerSettings ` and implemented it in ` PushLimitToTopN ` and ` SystemOptionManager
[ java ] remove redundant resolution of aeron directory name in test .
improvement - add queued flag to redisson batch execution
replaced ` InputStream ` with ` URL ` for handling Hive configuration variables to improve resource management and simplify configuration handling
updated the device parameter from ` Device . defaultDevice ( ) ` to ` criteria . getDevice ( ) ` in the ` createModel ` method to
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to improve menu item selection handling to enhance user interaction with the application
refactor CertificateValidator class to improve code readability and maintainability
fix # 1893 - allow custom hawtio . dirname to be specify .
added a check for empty comments before returning a single space in Space . java to ensure that empty comments are handled correctly
changed the visibility of mClosed variable to volatile in multiple dictionary - related classes to ensure visibility of mClosed and mNativeDict variables across multiple classes
removed printStackTrace ( ) method from Throwable to improve error handling by avoiding stack trace printing
add integration test for custom item drop
added a ` ifNotExists ` boolean flag ` ifNotExists ` to the ` DDLTask ` and related classes related to ` DDLTask ` and
refactor byte reading logic in NfsSecondaryStorageResource . java to improve readability and streamline byte handling to enhance code clarity and efficiency
[ java ] do n ' t need to set the request stream id in echoservicenode , since it be already set in archive .
[ geos - 10762 ] add spatial operator to wfs capability
added an import statement for LuceneTestCase and annotated the BasicDistributedZkTest class with an AwaitFix annotation to address issue SOLR - 2161
use a single read for the http / 2 preface ( call fill otherwise wo n ' t work ) .
[ java ] change default value of isIngressExclusive from true to false .
updated HBase cache key handling to support multiple HBase cache keys to improve flexibility in configuration management
added functionality to track and update the running record count in JSON record handling to ensure accurate tracking of the current record number in the exception handling logic
added a check to exclude year items from merged items in CategorizationFragment to ensure only valid year items are processed
updated drawColor method calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use a fixed value of 0 to ensure consistent
added a check to prevent rendering with OpenGL ES 2.0 in Mesh . java to ensure compatibility and prevent errors when using OpenGL ES 2.0
ww - 4892 remove actioncontext from backgroundprocess
updated methods in BaseSemanticAnalyzer , QBParseInfo , SemanticAnalyzer , and SemanticAnalyzer to enhance database name handling and support custom database
added a connection timeout configuration in TestConnections . java and modified the count variable in StubConnection . java to improve connection handling and ensure thread - safety in
added multiple test cases for the approx _ percentile function in TestHiveAggregationQueries . java to enhance test coverage for percentile query functionality
updated DEFAULT _ IDLE _ TIMEOUT to DEFAULT _ IDLE _ TIMEOUT and refactored idleTimeout handling in WebSocketChannel . java to improve
updated the method for retrieving shares in FileDetailSharingFragment to ensure the correct platform account is used for sharing files
updated Inet6Address class to use generics for better type safety to enhance code clarity and prevent potential ClassCastExceptions
refactor PlaybackControlView to use setButtonEnabled methods instead of disableViews for better clarity and functionality to improve code readability and
updated method parameters in Token . java and Token . java to improve clarity and consistency to enhance code readability and maintainability by using a more
change default java library to use immediate classpath
make useexceptionprobability default to true
updated the way the new Plate color is set based on the icon ' s theme theme to improve visual consistency with the application ' s theme
guacamole - 195 : remove dependency on guacamole - auth since guacamole - 189
updated aliases from " center " to " centre " to improve clarity and consistency in the code
added a method to inject DirectUpload into CommonsApplicationComponent to facilitate dependency injection in CommonsApplicationComponent
added space adjustments for left and right axis labels in BarChartActivity and modified spacing calculations in BarLineChartBase and YAxisRenderer to improve chart
added new flavors to the ImmutableSet of flavors in AndroidLibraryDescription . java and JavaLibraryDescription . java to enhance the library library library
added a new constructor to the CompositeLogService class to ensure proper initialization of the services list and prevent unintended modifications to existing ones
add visibility annotation for method parameter that have annotation
[ beam - 8470 ] use setup ( ) and teardown ( ) instead of start ( ) .
updated the process creation of the ProcessBuilder in SortedArrayStringMapTest to include a classpath string to enhance the process to include the classpath string for better
updated the handling of resource path separators in PackageResourceLoader to ensure consistent file path formatting across different operating systems
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] remove unnecessary ' this ' keyword
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable test due to known issue b / 243855320
updated error message formatting to use escapePercent for better readability to improve clarity and prevent issues with percentage - based string formatting
fixed - jcache # close ( ) method should n ' t call cache . geturi ( ) .
change log level to info when command context close fails
added braces around the initialization of ALPNClientConnectionFactory to improve code readability and maintainability
use base value instead of a fixed value
[ sonos ] fix sonos aud audiosink . play notification for non - initialized device
updated await statements in multiple test files to use a longer timeout duration of 5 seconds instead of 500 milliseconds to improve test stability by reducing the wait
chore ( core ) : reduce log in lightthinghandler . java ( # 6879 )
cloudstack - 10010 : use a fixed thread pool for asyncjobmanager
updated imports and method names in Reporter and ReturnsSmartNulls classes for consistency and clarity to improve code readability and maintainability by standard
changed the parameter type of the method signature of the ` generate ` method from ` Frame ` to ` DataFrame ` in the ` generate ` method to ensure
updated multiple package - info . java files with consistent formatting to improve code readability and maintainability
[ hive ] fix npe when use orc with empty column name
added a call to ` methCla . mixPlay ( input , amp ) ` in ` methCla . mixPlay ( input , amp )
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated calculations in finderPatternFinder . java and refactored test cases in QRCodeBlackBox1TestCase . java and QRCodeBlackBox2TestCase
removed unnecessary checks for leadingIncludePaths to simplify the validation logic for leadingIncludePaths validation
[ giwtwt ] fix npe in stringtemplate . ismatrixmatrixmultiplication check
# getSearchCriteria ( string ) : added $ $ x , $ $ , $ all , $ all
fix defaultaudiosink when sample rate be not specify .
added methods to get and set formula value in the XSSFName class , and modified the get / set methods in XSSFName class to enhance
increased the scale factor from 60 seconds to 90000 seconds in HighDimensionsTest . java to allow for a longer scale duration to accommodate longer
[ geot - 7088 ] fix bug in simpletype gt that could lead to arrayindexoutofboundsexception
added unit tests for the ClassPathXmlJobRegistryContext in the Spring Batch framework to ensure the job registry functionality works as expected
changed the data type of mHistoricTimes from float to long in Motion Motion Motion Motion Motion Motion Motion Motion Motion Motion Motion Motion Motion Motion Motion Motion Motion
camel - 12320 : camel - restlet - deprecate the old endpoint in favor of the new one
( chore ) camel - log : remove duplicate code in logendpointbuilderfactory
refactor code into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by reducing duplication
added a check for canceled , filled , and rejected orders before adding them to the limitOrders list to ensure only valid orders are added to the list to
added pixel offset calculations and validation for image processing in LCMSImageLayout to ensure proper handling of pixel data sizes and prevent layout errors
updated timestamp handling in Event . java and refactored ruby _ timestamp method in JrubyEventExtLibrary . java to use JRubyTimestampExtLibrary
added a condition to return the correct resource if the resource path ends with a slash slash to enhance resource resource if the resource path ends with a slash
updated ScriptFunctionImpl constructor to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER to
use scrollAmount instead of amt for scroll
graphdecoder : fix npe in graphdecoder .
test : migrate sniperjavaprettyprinter to junit 5 ( # 4499 )
refactor URLOutputStream instantiation to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added @ Entity annotation to Mail class to ensure the Mail class can be persisted in the database
updated default value of includeTablespace from false to true to ensure tables are included by default to enhance functionality
added getter methods for metaDataBuffer and valuesBuffer in CountersReader to provide access to these buffer types for better encapsulation
added a check for empty file input in ScanBatch . java and a corresponding test in TestJsonReader . java to ensure proper handling of empty JSON directories to
updated failure handling in StringSubject . java and StringTest . java to improve error reporting for named equality comparisons
[ pytorch ] [ pytorch ] make sure pytorch be only execute when it be a native library
updated exception handling to catch more error types in JrtJavaBasePackages and PackageHelper to improve error handling robustness
hbase - 17832 add safe mode check for file system write
updated error message formatting in TranslatingJavacPhaseTracer to include exception details to improve clarity of error messages for better debugging context
[ mng - 7881 ] remove unused cache from defaultplugincache
fix jabber contact status update bug
refactor : remove dependency to servletrequestdetails
added a new integration test for fetching account information from the BTCE exchange to ensure that fetching account information works correctly in the BTCE exchange
added mouse wheel functionality to VDUInput and vt320 classes and updated mouse handling in TerminalView to enhance user interaction by enabling mouse wheel
updated library path handling in Natives . java to ensure correct library path is set based on the ` needJInput ` flag to enhance compatibility with
remove deprecate columnhstore annotation ( no longer use )
fix skin flag not be set on player player player player player player player player player player player player player player player player player player player player player player player
added logging for master URL in LoadBalancerWithServiceTests to improve traceability of service configuration and enhance debugging visibility
refactor mapservice code to improve readability
replaced System . getProperty with AccessController for retrieving OS version to enhance security by using privileged actions
updated file suffix handling in TemplateEngineFreemarker to support customizable suffixes to enhance flexibility in template rendering by allowing customization of file
updated hashCode calculation in SelectMessageQueueByHash and added new test cases in SelectMessageQueueByHashTest to ensure correct value calculation and enhance test coverage for
[ scene2d . ui ] use animation for drag and drop
[ scene2d . ui ] fix npe in styledtextarea when caret be lose
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , CxxGenruleDescription , and CxxBuckConfig to utilize declared
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` in ` JpaCountQueryCreator ` , ` JpaQueryExecution ` , and ` Part
added null check for passwordAttribute before setting it in ldapAuthenticator to avoid potential NullPointerException when passwordAttribute is null
added support for handling array types in DataUtilities to ensure proper initialization of array types in the application
added null check for the host name in SslContextFactory to ensure proper handling of null address input to enhance security by preventing null pointer exceptions
fix test failure on oracle
simonstewart : add a method to delete a cookie in the ie driver
added a new boolean variable ` mHasEndedLauncherTransition ` and modified the logic to check if the launcher transition transition transition transition transition transition transition transition transition
updated HTML content in HTMLListWriter . java and HTMLWriter . java to include UTF - 8 encoding to ensure proper handling of special characters in title
refactor IndexReader class to improve code readability and maintainability
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and added a new method to append the path separator to
updated the JComboBox UI implementation in BasicComboBoxUI . java and added a new class bug6337518 . java to address bug 63375
refactor TestRandomAccessBuffer class to improve code readability and maintainability
refactor UserInfoActivity class to improve code readability and maintainability
added notification for changes to the home home home home home home home home home home home home home home home home home home home home home home home home
added functionality to manage button press interactions in BubbleTextView and Launcher classes to improve user experience by managing button press states effectively
added error parameter to getFallbackResponse methods across multiple fallback policy classes to allow handling of exceptions during fallback responses
removed the check for ` _ compile _ only ` in the condition of ` env . dest _ dir ` to simplify the condition for better readability
added null checks for tags in ChannelUri . java to ensure that tags are not null before accessing their length to prevent potential NullPointerException when accessing array elements
added a period at the end of a period period in the regex pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern
added a new constant for the action bar title in FileActivity and updated its usage in FileDisplayActivity to ensure the action bar title reflects the current
updated type retrieval from ` Iterables . getOnlyElement ` to ` Iterables . getLast ` in ` PythonDslProjectBuildFileParser ` and
updated the scheduled time from a minute to " 0 " in CleaningService . java to align the scheduled time with the intended functionality
updated TransactionalValidationListener to handle partitioned and non - partitioned tables to improve data validation and error handling for table operations
updated ReplicationHandler and SnapPuller classes to enable polling functionality to enhance the performance of polling operations
changed the data type of generatedKey from int to long and updated SQL statement preparation to correctly handle auto - increment keys to ensure accurate key generation and
reformatted the return statement in SimpleReferenceCache . java for consistency to improve code readability and maintainability
improve error message for inline test failure
http : / / issues . apache . org / jira / browse / amq - 4892 - change default keep - alive
deleted the HttpTestAccount001 . java file to remove obsolete test code that is no longer needed
updated exception handling from Exception to Throwable in Dispatcher . java and removed unnecessary test cases in DispatcherTest . java to improve error logging clarity and
camel - 10663 : camel - cxf - allow to configure cxf data format . thanks to david for the patch .
added a case for the ' ~ ' character in ClientUtils . java to ensure proper handling of the ' ~ ' character in the application
camel - slack : make it easy to configure slack consumer delay .
fix blockutil . getblockdroppEdges ( ) not return any item from block .
updated layout parameters in TranscodingTab . java to improve layout and spacing to enhance layout consistency and ensure proper alignment of UI elements
added a new file bug8057791 . java that implements a custom Nimbus Look and Feel for list rendering to address bug 5
updated flag determination logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and introduce a new
fix runnerbuilder when engine api be not available ( # 3614 )
updated null check in ComposeActivity . java to ensure that ' to ' is not null to prevent potential NullPointerExceptions
refactor ParquetFixedWidthDictionaryReaders to use a dictionary for reading values to enhance flexibility in handling large datasets with dictionary support
updated layout calculations for portrait and landscape layouts to improve layout responsiveness based on device orientation
added a new annotation ` Log ` in the ` org . apache . shenyu . acp . springcloud . acp .
updated the logic for adding thread IDs in QueuedThreadPool to handle cases where trace trace trace trace trace trace trace trace trace trace trace trace trace trace trace
updated methods in CacheGenerator and CacheProvider to include an optional implementation parameter to enhance cache functionality by allowing specification of cache implementations
updated the createReferenceMap method to include totalFrameSize parameter to ensure proper handling of memory allocation based on the total frame size
refactor TypesafeConfigurator to improve code readability and maintainability
camel - 17644 : added karaf test for camel - graphql
updated method signatures and added new test cases for BigDecimal BigDecimal BigDecimal BigDecimal conversion in RFE2891944 . java to enhance testing of BigDecimal BigDecimal BigDecimal
do n ' t attempt to encode non - ur uris in http client . fix # 2674
refactor UnsupportedPlatformTool implementation to improve clarity and maintainability of the code
updated the calculation of loopCount and improved logging message formatting to enhance readability and maintainability of the recovery logic
added size ( ) method to FlightConfiguration and FlightConfigurationImpl classes to provide a way to retrieve the size of the map in the application
test : fix address manager test for random address manager
updated layout constraints in VLCVideo . java and VLCVideo . java to improve layout alignment and user interface consistency
update bisq to use bitquare instead of bisq
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker . android . tw
add . m2 extension to user . home and mboot . xml
added a call to glBindBuffer ( GL _ ARRAY _ BUFFER , bufferHandle ) in VertexBufferObjectWithVAO . java to ensure the buffer is
updated ServerHttpSecurity class implementation to enhance security measures
added JUnit @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable test execution to temporarily disable tests that are not ready for execution
added default headers to HttpClientProperties and CasCoreHttpConfiguration to enhance header management for better HTTP request handling
improve error handling for unauthorized password
deleted the NoOpConfigPathGetter . java file to the class is no longer needed in the codebase
updated signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to ensure proper conversion of keyHex to byte array format
updated import statements and added handling for float values in FloatUtil . java to improve styling consistency and error handling for float values
planner - 2053 : add miss import for planner - planner - planning
updated the ` getDefaultHeaders ` method to return a ` MultiMap ` instead of creating a new instance of ` CaseInsensitiveHeaders ` to enhance header
replaced String encoding with Charset in ProxyServer and Realm classes to improve type safety and clarity in encoding management
added a method ` getClientId ( ) ` to ` StepContext ` to retrieve the job ID from ` StepExecution ` to ensure that the job ID
updated comparison methods in ExpandableUploadListAdapter and FileStorageUtils to improve code readability and consistency in comparison logic
do n ' t log error to debug in defaultjdkblockinghttpclient
updated import statements in LegacyAuthenticationHandlerAdapter . java to ensure proper handling of named authentication handlers
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
add some more logging to avoid npe .
relate to github # 1010
replaced ` DataOutputStream ` with ` BufferedOutputStream ` and added a try - finally block around ` DataOutputStream ` flush flush flush flush flush flush flush flush
added unit tests for ` doTestSelectAll ` in ` TestJdbcDriver2 ` and refactored column name handling in ` HiveBaseResultSet `
refactor FocusTransitionTest to improve test coverage to enhance reliability of focus transition functionality
fix compile error in gwt project
added a check to ensure sourceTask is an instance of MapRedTask before retrieving counters to avoid potential ClassCastException when accessing job counters
added null check for the readListener variable to ensure that it cannot be null to prevent potential NullPointerExceptions
refactor color selection handling in AppearancePanel to use a ChangeListener for color selection to improve code readability and maintainability by encapsulating
updated TaskHelper constructor to include hidden parameter to enhance control over task execution visibility
try to fix intermittent ci failure in failovertimeouttest
pdfbox - 4071 : fix resource leak in ctittfactory
added import for DefaultParameterHandler in LanguageDriver . java to enhance functionality by integrating DefaultParameterHandler in the scripting engine
lsra spill spill spill optimization optimization for spill spill optimization .
added micronaut - ast test for groovy script
fix ( pg ) : do n ' t close cursor twice ( # 1628 )
set default value of serviceadvisortype to python to avoid npe
refactor ` getResolver ` method to use ` ThreadLocal < ResolvingDecoder > ` and ` ThreadLocal < ResolvingDecoder > `
changed the parameter type of ` Path ` from ` Collection < ? extends Subpath > ` to ` List < ? extends Subpath > `
replaced ` new byte [ 512 ] ` and ` new byte [ 512 ] ` with ` byte [ 512 ] ` and ` byte [ 512 ] `
added a method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to set personalization based on a given date and distinguisher to
removed redundant code for better readability to streamline the code for better maintainability
removed unnecessary parameters from the scroll methods in AllApps , BaseOverview , and LauncherInstrumentation to simplify method signatures and improve code readability
changed the access modifier of the pointer variable from private to public and added reset methods to FlatRecordReader to allow external access to the pointer variable and provide
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and reflect the purpose of the class related to
fix cast expression for boolean and null
replaced the initialization of ` accepts ` with a boolean variable ` acceptsAll ` and updated the logic for handling acceptance of media acceptance to improve cl
added a boolean parameter to the TaskView class to control the behavior of task execution
added a method to check for auto - increment columns in LiquibaseDataType to ensure proper handling of auto - increment columns in database operations
added a default error text to the ExceptionResponse class to provide a meaningful error message when command execution fails
updated import statements and modified command - line arguments in LocalManagementTest . java to enhance test reliability and control over VM performance usage
use push instead of add
added ajp connector and some documentation on how to use it ( issue 59 )
added a check for compound type coercion in TransTypes . java and created a new Intersection3 . java file with a test case .
rename the class ` EmbeddingTest ` to ` EmbeddingITest ` to improve clarity and better reflect the purpose of the class
added a native method ` startToolkitThread ` to prevent multiple instances of ` WToolkit ` from starting the toolkit thread if it already exists to improve
improve performance by use parallel processing
make sure surface be visible on window
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to enhance clarity and maintainability of the
added configuration options for HTTP features in CommonParameter , SolidityNode , FullNode , and FullNodeHttpApiService to allow dynamic configuration of
added ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and implemented ` countTicketsFor ` method in ` GoogleCloudFirestoreTicket
refactor Generate class to improve code readability and maintainability
removed nullable parameters from the scalar function and added tests for JSON formatting to ensure correct handling of null values in JSON formatting
updated BadgeRenderer to conditionally use DOTS _ ONLY for width calculation and improved icon handling in BadgeRenderer to enhance flexibility in
changed the access modifier of the ` getConfiguration ` method from ` final ` to ` public ` in ` freemarkerManager ` to allow for
add test for invalid exclude package name
added support for macOS specific device identification in AppleTest . java and IdbRunTestsStep . java to ensure proper handling of device UID retrieval
updated DefaultHttpClientFilter to use ProduceProcessorManager and improved response handling in TestDefaultHttpClientFilter to enhance error logging clarity and ensure
added null checks for mScript and mInvokeResetWAR in AllAppsView . java to ensure proper initialization and state saving to prevent potential null pointer exceptions
added a conditional to set the shadow layer based on the TEXT _ BURN flag to ensure the text paint does not draw under specific conditions
added teardown methods to TestColumnAccess and TestReadEntityDirect to ensure proper resource cleanup and prevent memory leaks during test execution
added a parser assignment to the SecurityNamespaceHandler class to allow dynamic retrieval of the parser based on the specified name
added a method ` fastpath ( ) ` to ` BoundedLocalCache ` and a corresponding test in ` BoundedLocalCacheTest `
updated the ` RawConnection ` interface to extend ` WebSocketConnection ` and refactored the ` complete ` method in ` WebSocketAsyncConnection `
added two test methods for all assertions in SoftAssertionsPerfTest . java to enhance test coverage for the soft assertion functionality
added a constant for test failure exit code and updated the execute method to return a successful exit code to improve error handling for test failures to ensure proper exit
refactor xAdvances handling in GlyphLayout . java for improved clarity and functionality to enhance readability and maintainability to ensure correct processing
refactor score comparison logic in TestBooleanRewrites . java to use streams for improved readability and maintainability to enhance code clarity and
updated enumClass initialization to use getSuperclass ( ) instead of getEnclosingClass ( ) to ensure correct superclass handling for anonymous classes
remove unnecessary type check for playersocketconnection
added a check to prevent multiple ` OnDrawDraw draw draw draw draw draw draw draw draw draw draw draw draw draw draw draw draw draw draw draw draw
refactor multiple Java files related to term handling to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and modified condition to check for non - applicability to improve code readability and
updated the return value of getBoolean method from false to true in RendererConfiguration . java to ensure that media info is validated by default
add support for @ be annotate with @ be annotate with @ be annotate with @ be annotate with @ be annotate with @ be annotate with @ be annotate
added permission checks for TRUNCATE TABLE TABLE TABLE operations to ensure that the TRUNCATE TABLE TABLE TABLE operations and validate that the TRUNCATE TABLE
updated handleProviderRegistered method to include a boolean parameter to manage registration state changes to enhance flexibility in handling provider registration events
updated the color calculation in PastelColor . java to use a random base value to improve variability in color generation to enhance vari
refactor ScriptEngineFactory class to improve code readability and maintainability
refactor HolographicViewHelper to use original and outline drawables instead of drawable variables to improve clarity and maintainability of the code
refactor request method handling to use HttpMethod . fromString to improve clarity and maintainability of the code
make multiwordprocessor more resilient to miss phrase
added import statement for IOException in IOChannelUtilsTest . java to ensure proper handling of IOException during testing
updated class loading logic in mmm Table . java and ppp Table . java to handle different output output classes to improve compatibility with Hive ' s pass -
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization to enhance maintainability and readability of the codebase
updated length validation logic in DOMBuilder . java to prevent index out of bounds exceptions
updated graph handling logic to improve clarity and ensure consistent naming conventions across the codebase
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , do n '
added a new interface ` PublicStaticInterfaceMethodHandling ` with static and default methods to demonstrate handling of static methods in interfaces to provide a demonstration
camel - 17826 : camel - core - defaultkeyselector should use configure property placeholder to avoid reflection .
replaced instances of ` instanceof ` with ` throw ` for throwable handling in ` LogResolverBean . java ` to simplify exception handling and improve code
refactor multiple Java files related to security management to improve code organization and maintainability
updated JGit version from 201.0 . 0 to 201109151100 and modified JGit version from 201.0 to 20110915
fix httpclient interruption when client path be miss
int - 1851 add transformer parser and unit test
updated BACK _ FACTOR and BACK _ FACTOR constants to REWIND _ TIME in ResumeObj . java to improve clarity and maintainability
added ` isScrollWheeling ` method to ` CodenameOneImplementation ` , ` Button ` , and ` JavaSEPort ` classes to control the
updated usage string formatting and improved handling of command permission annotations to enhance readability and ensure proper handling of command permission annotations
fix typo : collection . map not collection . map
updated setSeqFiles and unseqFiles methods in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to use mergeFiles instead of sequences and unseq
remove @ override in observability test
log a log message when the rule set change
improve performance of sootfieldref . getfieldunsafe ( ) .
add a naming convention to elastic meter registry ( fixes # 10 )
added controller listener and command creation methods in IController and TinyGController , and updated BackendAPI to use IController to enhance functionality and improve
added a large horizontal rule test in PathologicalTest . java to enhance test coverage for rendering functionality to ensure proper handling of large horizontal scenarios
replaced instances of ` System . out ` with ` TTY ` in ` TypeSystemTest . java ` and ` PartialEscapeAnalysisPhase . java ` to
refactor multiple Java classes to improve code organization and readability to enhance maintainability of the authentication framework
updated condition to check for negative frame length to ensure proper handling of invalid frame lengths
updated return statements in IntFloatMap and IntIntMap to use default values instead of zero values to ensure consistent behavior across map implementations
refactor image handling in ImageDownloadService to use a Runnable for asynchronous processing to improve responsiveness by avoiding blocking operations on the UI thread
added a null check for the registered variable in HandlerRegistration . java to ensure proper handling of the demand condition
simonstewart : remove unused method ` ` hasendend ' ' from node . hasendend ( )
added null check for results before accessing its methods to prevent potential NullPointerException when results is null
added logging for MobFileCache configuration to improve debugging and traceability of cache cache management
refactor ColConvCCMTest class to improve code readability and maintainability
replaced instance variable ` target ` with a local variable ` allowCovariantReturns ` and updated related method calls to improve code readability and maintainability by
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` for converting ` jsonData ` to ` String ` and added a new class
camel - 20297 : camel - aws2 - * : improve error handling in file consumer
added EventQueue . invokeLater to ensure UI updates are performed on the Event Dispatch Thread for thread safety
updated the method for calculating the maximum text message size in CompressExtension . java to ensure the correct buffer size is used for binary messages
updated steering value assignments in multiple test classes to ensure steering value calculations are consistent across test cases
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve performance and readability by using modern Java features
updated date handling in JdbcSerDe to use local date and time representations to improve accuracy and consistency in date representation
updated version number from 2 to 3 and modified metadata reading logic to handle different metadata formats to ensure compatibility with additional metadata formats
add support for jpa jpa dependency in flyway
added sorting functionality to the classes to ensure the classes are processed in a consistent order
added a method ` getCurrentStableState ( ) ` in ` LauncherStateManager ` and updated ` waitFor waitFor waitFor waitFor waitFor waitFor waitFor waitFor waitFor waitFor waitFor
refactor SharedInformer class to improve code readability and maintainability
refactor TestCloseScope0 to use different scope classes based on Java version to improve compatibility with different Java versions for resource management
increased test timeout from 500ms to 5000ms in AdaptServerSocket . java to allow more time for socket operations to complete successfully
updated CaptchaChannelProcessorTests . java file to improve test coverage for CaptchaChannelProcessor functionality
added a conditional check to set the owner of the item ' s parent collection to ensure that the item ' s parent collection when a change is detected to
added retry logic for saving registry cache file retry attempts to limit cache file save attempts to a maximum of 3 attempts to enhance reliability by preventing
replaced ` mergeDirectory ` with ` directory ` in ` TrackingDirectoryWrapper ` initialization to improve clarity by using a more descriptive variable name
fixed bug in unusedimports that could lead to false negative
added validation to ensure insert overwrite queries on bucket partitioned Iceberg tables to prevent operations on bucket partitioned tables in Hive Iceberg
updated assertions in BootstrapTests . java to ensure correct validation of SAML configuration properties
updated the method ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` to distinguish between non - static and non - static classes to
remove synchronization on the getAddressVector method to improve performance by avoiding unnecessary synchronization
remove comment from commentsparser
added IOException handling to the release method and modified lock release logic to improve error handling and ensure proper resource management
changed package declaration from ` test . jdbc . datasource ` to ` org . spring . batch . test ` in ` DataSourceInitializer . java ` to
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353 - do
added TypeValidation . DISABLED to the ByteBuddy instantiation to ensure proper type validation during bytecode generation
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` to improve type safety and clarity
make test more robust
log file should be set to system property if it be not null
refactor ServiceApiRequest to use a new isRedirect method for handling HTTP redirects to improve code readability and maintainability by centralizing redirect
added configuration constants for service and application mapping in ` ServiceCombConstants ` and ` MicroserviceFactory ` to enhance configurability and
bugfix : use getbeanname ( ) instead of getname ( )
updated DB _ PATH _ REGEX and its usage in BaseAndroidTestCase . java and modified database path handling in GeocodeHelperTest .
updated return statement to return unread count from HomeDataSource to ensure accurate tracking of unread count for the current account
renamed the test method ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPoolPreview ` to
modified the ` getAllOrder ` method to accept a limit parameter and added logic to limit the number of orders to improve flexibility and prevent exceed
added null check for user before retrieving user settings to improve robustness by preventing potential NullPointerExceptions when accessing user settings to enhance robustness by
updated file path handling in LocalFileSystem and added a new test for relative wildcard path matching to ensure correct file path matching functionality in LocalFileSystemTest to improve
added constants for width and height limits to ensure instance bounds are within defined limits to improve memory management and prevent memory leaks
added logging for default connection manager timeout in CommonsHttpSolrServer to improve debugging and encourage the use of configurable timeout settings
added exception handling for document creation failures to improve error reporting for better debugging
replaced ` Optional . of ` with ` map ( ) ` for file handling in ` CrateType . java ` and ` RustBinaryIntegrationTest
added a method to check if a word is empty and is a number in SpellChecker . java and created a corresponding test in SpellCheckerTest . java
corrected the casing of the MESSAGE constant in HelloWorld . java to improve code readability and adhere to Java naming conventions
refactor file action handling in FileDisplayActivity to use a dedicated method for fetching file fragments to improve code organization and maintainability by encapsulating
added error handling in SnapPuller to improve robustness by logging exceptions during replication process
no effective change - code cleanup
refactored the constructor of StreamerLoader to remove MaterialColumnParser from the file column list to ensure only instances of MaterialColumnParser are retained to
add ` ` core library ' ' and ` ` controller / gamepad api ' ' to dependency bank
added dynamic view recycling and optimized view recycling in AppsContainerRecyclerView to improve memory efficiency and performance by avoiding unnecessary memory allocation
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest . java ` to verify the behavior of binary
improve the baritone control to make it more stable
added imports for ParsedNode and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating parsing capabilities and handling exceptions
added null handling for null values in FilterOperatorUtils and implemented a test for range filtering in QueryOperator to enhance query processing capabilities and ensure
added validation for bootstrap method arguments in JDynamicInvokeExpr . java to ensure that the bootstrap method ' s parameter types match expected values to prevent runtime errors
fix the test which be fail on the ci server
clear runtime options in CucumberInstrumentation . java to ensure that runtime options are reset before reinitialization
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and
added conditional adjustment of workspace labels based on cell padding calculation to ensure proper visibility of workspace labels when constraints are met
[ hotfix ] [ test ] fix flakiness in replicatetransformtest
[ gr - 26725 ] make sure that context can be pre - initialized after context pre - initialization .
added JUnit @ Ignore annotation to ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to ensure tests are not
replaced RuntimeException with JsonIOException in Gson . java to better handle exceptions related to JSON serialization
replaced ` Integer . valueOf ` with ` Integer . parseInt ` for parsing input values to improve clarity and consistency in handling input values
updated error messages and improved file traversal logic to enhance clarity in error reporting and ensure proper handling of file traversal
refactor segment name checks to use a helper method for determining high - level consumer segment names to improve code readability and maintainability by cons
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure
updated date calculation to use current time instead of current time to ensure accurate date representation for accurate time representation
added " x86 _ 64 - none - linux - android " to the return list in TargetCpuType . java to specify the target architecture to ensure
added functionality to delete all account files in FileDataStorageManager and manage accounts in ManageAccountsActivity to enhance file management capabilities and improve account
updated command line option syntax in SchemaCrawlerCommandLine . java to improve clarity and consistency in command - line help output
added a new ` createSuiteDescription ` method and updated the ` Description ` constructor to accept a ` uniqueId ` parameter to enhance functionality by allowing
replaced MultiFormatReader with MultiFormatReader in SnapshotThread . java to improve code clarity and simplify the decoding process
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor and eliminate unnecessary dependencies
added tests for range past end and past start in GWCZoomContextFinderTest . java to ensure correct range calculations in the ZoomContextFinder
added a constant for dependency tracking configuration to enable conditional tracking of dependencies based on configuration settings
updated condition in PromptFilter to check servlet path instead of request URI to ensure correct handling of servlet path in authorization requests
handle already create keyspace and column family more gracefully
refactor WelcomeWindow to use BufferedImage instead of Image to improve image handling efficiency and performance
updated tuner configuration handling and added error handling for buffer transfer resubmits to improve tuner stability and ensure proper resource management
added HasTests interface to ShBinaryDescription and implemented a test for sh binary with a test case in ShBinaryRuleIntegrationTest to enhance functionality to
added a condition to specify the database connection in TestFilter . java to ensure compatibility with HSQLDB in addition to existing configurations
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : do not materialize host exception if no stack trace
[ gr - 30844 ] export jvmci provider to jdk .
add test case for duplicateCommandHandlerresolver
[ flink - 20866 ] [ runtime ] add fine - grained resource configuration to batch job
fix vanilla fif hook not work on z - fight
( chore ) camel - ftp , camel - ftp , camel - ftp , camel - sftp , camel - sftp , camel - sftp
rename ` getCommandRunner ` to ` getStepRunner ` across multiple classes to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in the ` GangliaReporter ` classes to improve clarity and consistency in
added a check for empty items in AppsContainerRecyclerView to prevent further processing when there are no items to process
added @ ConditionalOnMissingBean annotation to ZipkinAutoConfiguration to ensure a bean bean is only created if it does not already exist
update xmllayout to use stringbuilder instead of stringbuffer
added an ` OMIT _ HEADER ` parameter to the ` CommonParams ` class and implemented the ` remove ` method in ` NamedList ` and `
patch from josh from bug # 44433 - add unit test for groupshape property
updated method call to use the Description class to improve code clarity and maintainability
add a call to scene . modifyhierarchy ( ) so that it do n ' t get call twice .
do n ' t throw npe if there be no trade
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified ` retrieveColumns ( ) `
wallet : set confidence type to not _ seen _ in _ chaughtexception
do n ' t use request . header if it ' s empty
update craftinghelper to handle json condition
hbase - 17826 hregion . close ( ) should log a warning .
refactor length comparison logic in Credential . java to improve readability and maintainability of the code
[ java ] : do n ' t check image existence when check for image .
updated the ` destroy ` method in ` TestJvmProcess ` to use the ` destroyForcibly ` method directly to improve clarity and reliability
added a check for Oracle in addition to MariaDB to ensure compatibility with both MariaDB and Oracle databases
camel - 7674 : fix npe in mail consumer when try to connect to mail store .
throw a parsecancellationexception if the query have not be consume
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete complete
added a method ` getDataFileName ( ) ` to retrieve the data file name in the ` Model ` class and updated model assignment logic in ` Voice
added emailDomain field and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to support email domain management in the identity provider
added configuration constants for request read and connect timeouts in Configuration . java and updated references in ViewRegistry . java to enhance timeout management by allowing dynamic configuration
only process deferred concepts if they be not empty
added RedisCategory annotation to RedisServiceRegistryTests to categorize tests related to Redis
updated the ` noNpeWhenUsedFromDeprecatedUses ` test to use ` @ ParameterizedTest ` and added ` @ ParameterizedTest ` annotations
added a call to the superclass ' s paintComponent method in WaterfallPanel to ensure proper rendering of the waterfall component in the waterfall panel
removed unused import statements from multiple configuration classes to clean up the code and improve readability
updated event signature handling in ContractEventTriggerCapsule and added event signature handling in ContractEventTrigger to improve the accuracy of event signatures and enhance
updated filter condition in FileTestHelper . java to ensure valid file names end with an underscore to improve robustness of file path filtering
mapview should use the background color , not just the clip bounds
jbrules - 2835 : fix compilation error in packagebuilder
removed debug print statements from multiple Java files to clean up the code and improve readability
updated assertions in TestFieldCacheSort to check for NaN NaN values before assertions to ensure that NaN NaN values are handled correctly to prevent assertion failures
updated the way entity keys are retrieved by using ` Set . copyOf ` to ensure that the original set is not modified externally
added a method to handle zero time values in ColumnSnapshotGenerator and created a test for date parsing in MySQLIntegrationTest to ensure proper handling of
replaced instances of ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and `
updated type parameters in FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , and FunctionSecondPassGroupingCollector classes to use wildcard generics
[ rhdm - 312 ] add support for edit a kiesession in the kiecontainer
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' variable to ensure proper reference to the current configuration instance
added a condition to return early if mModalness equals mModalness to prevent unnecessary processing when modalness is unchanged
added a test for creating codec capabilities in ShadowMediaCodecList to ensure that the codec capabilities are correctly created based on the specified level level and profile level
fix focus issue ( # 5460 )
added validation for width and height in SunVolatileImage and implemented exception handling in XRSurfaceDataProxy to ensure parameters are non - negative and
updated group separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure correct formatting of numbers in
replaced int array with AtomicInteger in AsyncStressTest . java and StressTest . java to improve thread management and ensure proper synchronization
added beta flavour functionality to AchievementsFragment and removed it from LeaderboardFragment to enhance user experience by notifying users
updated Search and SearchMethodVisitor classes to utilize context for access and name retrieval to improve clarity and maintainability of the code
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java to ensure proper synchronization during test execution
refactor duration handling in DLNAResource . java to improve code organization to enhance readability and maintainability of the code
updated XML entity names for batch and stream resequencer configuration classes to ensure consistency in XML schema definitions
fix ( core ) : do n ' t re - reload open partition in case of exception
flume - 2782 : remove unused keymanager - type and trustmanager - type from thrift
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor ` instead of ` JavaVisitor ` to improve code readability and
fix tab and tab key not work properly .
replaced ` AccessSpecifier . PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK PACK
renamed ` unHandled ` method to ` unhandled ` and updated logging levels for better clarity to improve method naming consistency and enhance error
added conditional logic to retrieve stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe stripe
added a null check for exception handling in JCache . java to prevent potential null pointer exceptions during execution
use http instead of http
added a version argument to the App class to provide users with the current version of the application
use splittokens instead of splitsplit for export list
updated rotation logic in ConsoleActivity and added input method in TerminalView to enhance user experience by allowing customizable rotation settings
updated the type of the ` hq ` field in ` ParallelMultiSearcher ` to use ` ScoreDoc ` instead of ` HitQueue ` to improve
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when accessing ownerConnectionAddress
camel - 17826 : camel - jbang - make it easy to know which header map factory to use .
updated formatting in JavaCompiler . java and Diagnostic . java to improve code readability and maintainability
int - 1851 add support for jms inbound gateway configuration .
updated the index in the expected check from ` i + 1 ` to ` i + 2 ` in ` ArrayFunctions . java ` to correct the expected
fix npe in invokescriptedprocessor
updated proxying logic in PooledConnectionImpl and added a new test for PGStatement in ConnectionPoolTest to ensure proper handling of PostgreSQL
[ beam - 8470 ] [ beam - 8470 ] refresh mem table size estimates when test run
changed log level from error to warn in AtomicRemainder . java to provide a less severe logging level for memory limit issues
fix graceful expiration of sstables in ttl
fixed - redissonblockingqueue and redissonblockingdeque . toseconds ( ) method throw unsupportedoperationexception . # 3850
updated printMap calls in JobInspectCommand . java to remove redundant string concatenation to improve code readability and maintainability
refactor engine class to improve code readability and maintainability
replaced ` Stream . of ` with ` entrySet ` in the ` ChildHolder ` class to improve readability and maintainability of the code
[ issue # 5962 ] fix aclclient to use session credentials
updated the condition from ` numIndexDims = = 1 ` to ` numDataDims = = 1 ` in ` BKDWriter . java ` to
[ hotfix ] [ zeppelin - 4893 ] [ zeppelin - 4892 ] fix npe in zep
kristianrosenvold : fix typo in expressionnodeevaluator
removed the public access modifier from the ` verifyIdsAreStable ( ) ` and ` getNodeId ( ) ` methods in ` NodeIdAccessor . java
server : improve error message when snapshot creation fails
no effective change - code cleanup
added a test identifier to the Thing instance in the RoombaHandlerTest class to enhance test coverage for roomba functionality
added a toString ( ) method to the ImageNameSubstitutor class to provide a meaningful string representation of the class name for better debugging and logging
replaced FSDirectory with RAMDirectory in TestNorms . java to improve memory management by using a RAMDirectory instead of FSDirectory
added a static final variable ` mLineHeight ` and updated its assignment based on its value to ensure ` mDrawTextRectBuffer . height ( ) `
refactor WalletAppKit class to improve code organization to enhance maintainability and readability of the codebase
[ netbeans - 686 ] remove support for oracle nashorn in profiler engine
replace direct removal of transport menu with a dedicated menu item removal to improve code readability and maintainability by reducing redundancy
added resolve and replaceTokens methods to AbstractDataImportHandlerTest , Context , ContextImpl , and ContextImpl classes to enhance token resolution and replacement functionality
fix : set bsq block exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp exp
added methods to manage session attributes to enhance session management by allowing retrieval and removal of session attributes
added assertions to verify the properties of the ` getPlainBean ` method to ensure that the method returns expected values
updated averages initialization to use initialPageCount instead of pageSize to ensure averages accurately reflect the initial page count
refactor BatchCommandLineLauncher to improve code readability and maintainability
added DataSource and transaction manager beans for HSQLDB in BatchMetricsApplication to enable support for HSQLDB in the application configuration
change glowrootloghttpservice to implement httpservice instead of unauthenticatedhttpservice
pdf pdf / awt / pdfs : use non - stroke , not only non - stroke
removed synchronization from the ` notifyAll ( ) ` method in ` DocumentsWriter ` , ` DocumentsWriterPerThread ` , and ` IndexWriter
added methods to handle multiple choice options and validation constraints in UiBinding . java to improve user interface configuration to enhance the flexibility and usability of
updated method calls to use ` toString ( ) ` instead of ` build ( ) ` for improved readability to enhance code clarity
bugfix : do n ' t save the full tree if it ' s full
refactor Affix and Dictionary classes to enhance condition handling and pattern management to improve efficiency and maintainability of pattern matching logic
updated KrakenAdaptersTest to use diamond operator to improve code readability and maintainability
added import for CharTermAttribute in DefaultIndexingChain . java to facilitate the use of CharTermAttribute in the indexing process
refactor NBJavacTrees class to improve code readability and maintainability
added a check for unsupported data encoding in VectorizedPrimitiveColumnReader to ensure that unsupported data encodings are properly handled
updated logging statements in HttpSolrCall . java to improve logging clarity to enhance readability and maintainability of the code
added a call to destroyMetadataServiceProxy in ServiceInstanceChangedListener to ensure proper cleanup of service instances when service instances are refreshed
defaultentityqueryrepository : prevent infinite recursion due to infinite recursion
updated error message formatting in HubChangeExecListener . java to include a null check for the changelog ID to improve clarity of error messages related to
add a try harder hint to make the test more robust
updated ` CxxPreprocessAndCompileStep ` to return ` ProcessExecutor . Result ` instead of ` int exitCode ` to ensure that compilation
updated event handling logic in ObjectStore . java to streamline event processing by removing redundant checks to improve code clarity and maintainability
refactor validation logic in ValidatedLocalValidatorFactoryBean to simplify the return statements to improve code readability and maintainability
remove temporary block entity to avoid concurrent modification exception
remove unnecessary type checks in IntrinsifyArrayCopyPhase . java to improve code clarity and maintainability
no functional change - code cleanup
removed the WantedAnywhereNowFollowingInteraction class and updated stack trace assertions in multiple files to streamline exception handling and improve clarity in
added validation checks for owner and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that the owner and key addresses
use sortedmap instead of comparator
chore : [ cloud ] update protoc to v3.0 . 3 ( # 244 )
updated property handling in BaseSingleTreeBuilder to use setProperty instead of addProperty for metadata properties to improve clarity and consistency in property management
updated AsmLoader to use interface class loader for dynamic class loading to improve class loading flexibility and support for dynamic class loading
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated print statements in Java2TypeScriptTranslator to conditionally export namespace and declare declarations to enhance flexibility in exporting namespace and declare declarations to
replaced ` EmptyServerHandler ` with ` AbstractHandler ` for handling requests in ` HttpClientTest ` to improve request handling to enhance request processing by allowing
simplified listener additions in HelloInput . java to improve code readability and reduce unnecessary object creation
hhh - 14522 avoid npe in sqmpath . getlhs ( ) when there be no root
updated package structure for multiple test classes to improve organization and clarity of test code
refactor BufferedImage creation and filtering logic in AwtCanvas . java to improve handling of both BYTE _ INDEXED and GRAYSCALE _ INVERT
make libgraal more robust to native image .
[ hotfix ] [ test ] remove dataflow portability dependency from test
chore : update java and python dependency ( # 177 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
refactor CallStack class to improve code readability and maintainability
log warn about max size configuration in eviction checker
updated return statements to reflect changes from " AST " to " LST " in multiple Java files to accurately reflect the intended use of the L
updated calculations for scoreablesPerThread and nThreads in ThreadedAcousticScorer . java and modified job creation in Job .
replace AssertionError with null return in NetHooks . java to simplify error handling by returning null instead of throwing an exception
make test more reliable
added a new default ` makeString ` method across multiple iterable implementations to provide a standardized way to create string strings with specified start and end
updated the order setting in OidcServicesManagerRegisteredServiceLocator to use a constant for the order to improve code readability and maintainability by avoiding
added a ` WeakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related classes to allow for customizable weak association rules
refactor Deflater class implementation to improve performance and reduce memory usage
added a try - catch block to handle exceptions in Font . java to improve error handling by converting exceptions to IOException
added null and empty check for content in VersionTypeBinding . java to prevent potential NullPointerExceptions during version handling
updated the handling of the list of places to improve clarity and consistency in variable naming to enhance code readability and ensure correct data is passed in the asynchronous task
changed the condition to check for content type in lowercase to ensure case - insensitive matching of content types
fix openssh private key format to match the spec
updated the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for whether to update item locations based on feature flags to en
replaced specific Hibernate annotations with a wildcard import and added logging in InheritanceCacheTest . java to improve code readability and enhance logging for
updated the import statement for DefaultOAuth2RequestFactory and added a new method to handle user approval requests in TofuUserApprovalHandler to ensure
fix influx naming convention ( # 645 )
do n ' t use system . out . println in test
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to accurately reflect the intended functionality related to cookie handling
added a static method ` classMetadataUnsupported ( ) ` to the ` Platform ` class and replaced it with a static method ` classMetadataUnsupported ( )
added functionality to manage and display the clear all action button based on user preferences to enhance user experience by allowing users to clear all items in the overview
updated desired repository version handling and adjusted action timeout in ClusterStackVersionResourceProvider . java to improve code clarity and ensure proper persistence of cluster
deleted the MemoryLeakTest . java file to remove unnecessary tests related to memory leaks
updated the return statement in ServletTester to use InetAddress for better readability to enhance clarity and maintainability of the code
added a condition to check if MvdwAPI is enabled in the server configuration to ensure compatibility with MvdwAPI when MvdwAPI is
[ hotfix ] [ test ] assert cluster size eventually on test failure
added a singleton singleton instance for FFI provider to enable dynamic loading based on the JNA library configuration
add a test for hierarchical file list in batchprocesstest
added null checks for ` objectToSave ` and ` idProperty ` in ` MongoTemplate ` and introduced new test cases in ` MongoTemplateTests ` to
updated position initialization to use NODE _ LIST instead of ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO ZERO
added ` accTradeValue ` field and its getter method in ` BithumbTicker ` , ` BithumbTradeServiceRaw ` , and updated
updated logging statements to use placeholder syntax for segment names to improve readability and maintainability of log messages
changed the constant ` maxParallelThreads ` from ` 100 ` to ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor `
replaced ArrayList with CopyOnWriteArrayList for header , data , and reader lists to enhance thread - safety in multi - threaded environments
add miss license header and fix license header
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is null
fix camel - msv test which fail on slow ci server
updated conditional check in DelegationService . java to ensure correct comparison of cycle conditions to prevent potential null pointer exceptions
updated RandomValueStringGenerator instances and assertions in JdbcExpiringCodeStore , CodeStoreEndpointsTests , AutologinIT , and JdbcExpiring
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure compatibility with specific database object types
refactor description parsing logic in MediaDetailFragment . java to improve clarity and efficiency of language description handling
do n ' t swallow arrayindexoutofboundsexception .
added reference filtering functionality to ListImagesCmd and ListImagesCmdImpl classes to enhance filtering capabilities for images based on their references
camel - 7999 : camel - jms - allow to turn off bridge error handler for camel - jms and camel - jms bridge error handler
added checks for " # ifndef " , " # endif " , and " # endif " in OpExclusionUtils . java to ensure proper handling of
added multiple return statements to DatabaseCommand . java to ensure consistent behavior in database command handling
updated Politian instances in HonestPoliticianExample . java to replace instances of " blair " and " schroder "
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in beanshell interpreter
camel - 18585 : camel - restlet should use a dynamic port number instead of hard hard hard hard hard hard hard hard hard hard hard hard
updated import statements in SchematicFormat . java to remove unused imports and streamline block handling code
added a system property to set a maximum query length in QTestUtil and updated SessionState to utilize this property to improve query performance by limiting the
changed access modifiers of userName and securityMgr from public to private and refactored HttpConfiguration creation methods to improve encapsulation and simplify HttpConfiguration
[ hotfix ] [ connector / kafka ] correct sink name
updated HiveConf and HiveSparkClientFactory to correctly handle the case of " spark . app . name " to ensure proper configuration for Spark application name to
updated variable name from ` whiteName ` to ` includedName ` for clarity to improve code readability and maintainability
simonstewart : add maximisewindow to the driverservlet , a per http : / / stackoverflow . com / questions
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , and DefaultProjectFilesystemFactory to use mainCellBuckOut
added an assertion to check if the error message contains " entity expansions " in TestXMLEntityExpansion . java to ensure that the error message is correctly
replaced direct calls to ` ibuffer . get ( ) ` with bitwise operations for table offset and length with bitwise operations to ensure that offset and length are
added a customization check for the form ' s customized state to ensure that the customization state is not null to maintain data integrity
refactor line buffer allocation and coordinate checks in LineChartRenderer . java to improve clarity and maintainability of coordinate handling logic to enhance readability
refactor flavor handling in AndroidBinaryDescription to support multiple flavors to improve clarity and functionality of target resolution
updated buffer assignment in LwjglGL11 . java to use index variable ' i ' instead of ' offset ' to improve code clarity and maintain
added a new class ` PropertySuper ` and a test class ` TestClassResolutionFail ` to demonstrate the use of the ` Property ` class and its
do n ' t remove shutdown hook if shut down
updated the class name and constructor parameters in FilterChainProxy . java to improve clarity and consistency to enhance code readability and maintainability by using
updated sorting and retrieval of values in PercentileAggregationFunction . java to improve performance and efficiency in data processing
added checks for the schema ' s loaded state before loading tables in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure that tables are only
initialized baseType to null and set localizedPrefix and localizedTypeName to empty in MutableColumnDataType to ensure proper initialization and avoid null reference issues
updated link syntax in multiple Java files to improve code readability and maintainability
replaced instances of ` ObjectEqualEvaluator . getInstance ( ) ` and ` ObjectNotEqualEvaluator . INSTANCE ` with ` ObjectContainsEvaluator . INST
updated test cases to use " / config : osx _ x86 _ 64 " instead of " / config : osx _ x86
added sound effect functionality to AllAppsView by enabling sound feedback on clicks clicks clicks clicks to improve user interaction by enabling sound feedback on clicks clicks on clicks
changed the exception type of the main method from Exception to IOException in RemoveFirstPage . java to improve error handling by providing a more specific exception type
added a line to enable the granularity of the left axis in BarChartActivitySinus to improve data representation in the chart
refactor version comparison logic into a separate method to improve code readability and maintainability by centralizing version comparison logic
updated test cases in ContextHandlerGetResourceTest to use MavenTestingUtils for determining the target testing directory and added OS _ ALIAS _ SUPPORTED to improve
added close ( ) method to connection classes to ensure proper resource management and prevent potential resource leaks
improve mockappender to use a queue for event
[ hotfix ] [ hotfix ] [ hotfix ] [ test ] add a validation check for hadoopresourceid
removed unused imports from IsometricStaggeredMapRenderer . java to improve code clarity and reduce unnecessary dependencies
remove unbinding of the handle handle when the item be no longer necessary .
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
removed the condition for HIT _ TARGET _ BACK in the touch handling logic to simplify the logic for determining screen snapshot usage
replaced the way navigation buttons are handled in NavbarButtonsViewController . java to improve code readability and maintainability by using configuration properties to enhance code
[ polyBench ] do n ' t throw exception if language can not be determine
replaced local variable ` bootstrapMethodIndex ` with ` refKind ` and updated debug logging to use ` MH kind ` instead of ` nameAndTypeIndex `
added ` BlockFormattingContext ` parameter to ` findBox ` and ` findElementBox ` methods in ` BasicPanel . java ` to en
refactor WorkerProcess to improve process handling and add error output functionality to enhance error reporting and provide better diagnostics during job execution
added null checks for the operator and wrapped list in CheckedListReplaceAll . java to enhance error handling and improve robustness of list replacement logic
added conditional checks for ` _ testFill ` and ` _ writeCallback ` before calling ` fillInterested ( ) ` in ` SslConnectionTest
added listener registration and removal methods in DeviceFlag . java to manage device configuration changes effectively
added JUnit Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue # 1114
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
[ # 7705 ] instructor : instructor feedback edit page : fix instructor feedback edit page
refactor KrakenStreamingTradeService to streamline synchronization to improve code readability and maintainability
changed error message from System . err to System . out for ignoring Class - Path entries to improve clarity and consistency in output handling
[ hotfix ] [ core ] make sparserowmatrix more flexible
bug 9729 : do n ' t create volume delete event for volume that do n ' t exist
updated file input stream handling in Utilities . java to support local job configurations to enhance flexibility in input stream management for different job configurations
[ beam - 8470 ] fix dependency issue in udftestprovider
bugfix # 20907 , do n ' t register registermemoryccprovider in memorycallgraphbuilder
added handling for multichat operation set .
added file permission check in Save . java to ensure the file is writable before proceeding to prevent errors from invalid file operations
added a new ` FolderSyncActivity ` class and integrated it into ` DrawerActivity ` to enhance the user interface by providing a
[ hotfix ] [ network ] fix the leak in sequentialchannelstatereaderimpltest
add support for comma - separated token in spanish tree normalizer
replace ` PointReader ` with ` packedValueSlice ` in ` SimpleTextBKBDWriter ` to improve code readability and maintainability by using a
added LocaleRandomizer and its corresponding test class LocaleRandomizerTest to implement randomness of available locales for random data generation
tika - 2237 -- add unit test for font type detection
bugfix # 269007 , use 10.0 instead of 9.0
refactored privileged action handling in TCPTransport . java to improve code readability and maintainability
updated the read operation in Http2AsyncParser to use a non - blocking read timeout to ensure a non - blocking read timeout of 0 to enhance
updated the initial delay value from 120 to 600 milliseconds to allow for a longer initial delay for the timeline configuration
updated error message formatting in SelectStatement . java to improve clarity and consistency in error reporting
added Joda - Time support for date fields in ThirdEye Jira client to enhance date handling capabilities in the ThirdEye Jira
refactor priority handling in HeadersGenerator to use a new PriorityGenerator class to improve code clarity and maintainability by centralizing priority generation logic
added a constant MAX _ SCALAR _ REPLACE _ CODE _ SIZE and updated scalar replacement condition in ClassTransformer . java to enhance scalar replacement logic based
added DATE _ TAKEN to the projectionTest array and updated sort order statements in MediaProvider . java to include MEDIA . DATE _ TAKEN
updated drawImage method parameters in TexturePacker2 . java to correct image dimensions to ensure proper rendering of images with accurate dimensions
updated JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to use ServletContextHandler and improved context handling to enhance
added shutdown methods to ensure proper resource cleanup and prevent potential memory leaks
added RawJsonRequestBody annotation processing and corresponding test cases in JaxrsSwaggerGeneratorContext and Echo classes to enable support for raw JSON request
added a new method ` newTarget ` to the ` loggerUtils ` class to create a ` Target ` instance with specified types and extensions to enhance
updated the instantiation of ` ListBeanContainer ` to use ` ArrayList ` and added a new test case in ` BeanContainerTests ` to ensure that the
hbase - 25809 fix test metric for blockcache hit
camel - 16400 : clean up temp file when exchange be complete .
fix ( telnet ) : set deviceid to deviceid in telnet
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) ` for reading the first line in ` HybridProject
added a null check for the operator in the visitAssignop method of JCAssignOp to ensure operator is initialized before use to prevent potential NullPointer
added a boolean flag ` enableAccountHandling ` to control account handling in ` BaseActivity ` to enable or disable account handling based on user preference
fix iochrone resource to handle multi - polygon
added a ` List < String > ` parameter to the ` view ` and ` path ` constructors in ` DrillViewTable ` and updated
updated PooledByteBufAllocatorL constructor to include default configurations to enhance performance and flexibility in memory allocation management
updated array type check from double to short in ObjectInputStream . java and added CloneArray . java for testing to ensure correct handling of short arrays
added a new configuration variable LLAP _ IO _ THREADPOOL _ SIZE to allow customizable thread pool size for low - level IO thread pool size to
add sun . security . ssl . debug and ssltogger . debug for java 11 +
updated LatLonGrid . java and TestLatLonGrid . java to improve boundary checks and added a new test for polygon growth to enhance
danielwagnerhall : update expectedconditions to match the current behaviour
added ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and modified its implementation to include ` isInsertOverwrite ` parameter to enhance file
added a new test method ` getOuterClass ` to the ` ReflectorTest ` class to verify the behavior of inner class retrieval from a reflector
added " auto _ generate _ android _ facet _ sources " configuration to the BuckConfig to enable automatic generation of Android facet sources for Android integration
updated HubChangeExecListener to include author information in console notifications to enhance visibility of communication failures for better debugging
added properties field and corresponding getter / setter methods in Link . java , and implemented a corresponding test in QuickLinksConfigurationModuleTest . java to
updated the ` toString ` method in ` YamlConfigFileDTO ` to include a ` @ EqualsAndHashCode ` annotation and added a ` toString ` method to
[ hotfix ] [ test ] fix compilation error in awaitableserverclientcallconfiguration . java
refactor forName methods in mmm Class . java and ppp Class . java to include caller context for class loading to enhance class loading
updated import statements and modified token handling in RequestItemRepositoryIT . java to enhance code clarity and ensure proper authentication token retrieval
replaced ` LinkedBlockingQueue ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to ensure compatibility with the updated thread pool implementation
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
updated import statements and refactored time conversion logic in TimeStep definitions to improve code organization and enhance clarity in date handling
fix a typo in the casing of the casing of the casing in the casing of the casing of the casing of the
updated RestProxy initialization to use getUri ( ) method instead of ExchangeSpecification to ensure compatibility with updated API specifications and improve code clarity
removed redundant print statements in RecordGenerator . java to simplify the output and improve readability of generated records
camel - kafka : do n ' t commit offset when auto commit be enable
updated locking mechanism in Liquibase and LoggingExecutor classes to ensure correct locking behavior during execution
updated ` @ SuppressWarnings ` annotations in ` AbstractAuthorizeTag ` and ` AuthorizeTagCustomGrantedAuthorityTests ` to include " rawtypes " and
refactor ` closeFiles ` and ` flush ` methods to be synchronized to improve thread safety and reduce unnecessary synchronization overhead
polish ` ` resolve nested property ' ' when use spring boot
updated the currency pair used in the adaptTicker method from baseSymbol to counterSymbol to ensure the correct currency pair is used for ticker adaptation
( chore ) camel - core : fix import issue
replaced random UUID generation with a system property for testId to enhance flexibility by allowing dynamic configuration of test ID
[ hotfix ] [ table ] fix concurrency issue in defaultjobparametersconverter
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the heightScale parameter in FractalHeightMapGrid to allow dynamic adjustment of the heightScale value
updated equality check in SecurityConfig to use assertNotSame for better clarity to enhance readability and maintainability of the tests
updated the default value of ` dumpPartitionId ` to ` false ` to ensure consistent behavior when retrieving the partition ID
added unit tests for UTXOSet functionality in UTXOSetTest . java to ensure correct behavior of blockchain UTXO handling in tests
[ java ] ignore unused variable name for java 9
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new test for overriding job parameters in JsrJobOperator to ensure that previous job parameters are preserved during job execution
added a method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform ` class to provide a way to control whether to disallow batch on c
refactored principal creation logic in JaasAuthenticationHandler to ensure consistent handling of principal principal principal principal principal principal principal principal principal principal principal principal principal
replaced direct core closing with an executor for better management of Solr cores to improve resource management and error handling during core shutdown
added null check for mActionsView before setting visibility in RecentsView to ensure proper visibility of the actions view based on fullscreen fullscreen mode
updated the initialization of JobParameters in RunIdIncrementer . java to ensure proper handling of null parameters to prevent potential NullPointerExceptions when accessing parameters
refactor BasicEntity and TestUtil classes to improve code organization and maintainability
added unit tests for the ` getShowDevicesPlan ` method in ` SchemaRegion ` and ` SchemaRegionReadPlanFactory ` to ensure correct device matching
[ 3.0 ] do not swallow exception in metric event processing ( # 11536 )
added a check for ' max ' in EigenvectorCentrality and created a new builder for testing to ensure ' max ' is non - negative before calculating
updated registry creation and port handling in LookupIPv6 to use dynamic port assignment to improve flexibility and avoid port conflicts
updated geometryGenerator to use byte arrays instead of float arrays for vertex colors and indices to improve performance and memory efficiency in handling geometry data
updated Amplifier from 2 to 0 in BlockEntityBeacon . java to correct the placement of the entity in the beacon
refactor TubeCalc class to improve code readability and maintainability
disable health check by default
updated DEFAULT _ GROUPS to use generics and improved group validation logic to enhance type safety and ensure inherited classes are validated correctly
added @ key headful and a timeout for the JList selection in Nimbus Look
added a daemon thread to the ScheduledExecutorService to allow the thread to exit programmatically upon upon upon upon upon upon upon upon upon upon upon
fix lexicon version check for gradle
added reflection access check to JavaAdapterFactory to enhance security by ensuring proper access control during reflection operations
( chore ) camel - mina : enable lazy session creation by default
updated initIOContext method to accept a RecordReader parameter across multiple classes to improve flexibility in handling record readers during initialization
deleted ClassLoaderHolder . java , LoaderManager . java , and VerticleManager . java files to remove unused classes to streamline the codebase
added a new method ` configurationChanged ` to ` FileStore ` and updated checks in ` JavaLanguageServer ` and ` ScanClassPath `
added try - catch blocks around registerSessionCallback and unregisterSessionCallback methods to handle potential exceptions during callback registration and unregistration
updated index creation paths in TestBackwardsCompatibility . java to streamline directory paths to improve code readability and maintainability
[ hotfix ] [ hotfix ] [ test ] [ test ] fix compilation error in akkarpcserviceutils . java
added a retry condition to set the maximum retry attempts in TestExportSnapshot to ensure that retries are attempted on failures
pdfbox - 3990 , pdfbox - 3990 , pdfbox - 3990 , a suggest by valerybokov
added a new test class SslConnectionTest to verify SSL connection behavior to ensure proper handling of SSL connections and prevent potential SSL issues
added validation for address type and family in NetworkInterface . java to ensure that only valid IPv4 and IPv6 addresses are processed to prevent runtime errors
added a test for serializing dates in a collection using Gson to ensure correct serialization and deserialization of dates in collections using Gson
refactor Message class to improve code readability and maintainability
nifi - 2088 : fix npe in putdatabaserecord . getsql ( ) if firstkey be false
corrected the loop condition in TableOutput . java to ensure proper iteration over the run width to avoid potential out - of - bounds errors
pdfbox - 4892 , pdfbox - 4892 , pdfbox - 4892 , pdfbox - 4892 , pdfbox
use normal priority instead of normal priority
pmd : add a property to ignore for each loop variable in for - each
added PDF version 1.5 and full compression settings in PDFExporter and updated test cases to enhance PDF export functionality and ensure proper handling of node label
added unit tests for LdapUserDetailsMapper to validate role attribute mapping and retrieval to ensure correct functionality and behavior of role attributes in the LDAP user
add ldap read timeout
updated TestDescription . java files to improve code organization and maintainability
updated Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
updated variable names from ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to clarify the purpose of the variable to
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gestures when the state is invalidated
removed unused variables and updated maximum distance calculations for folder creation and folder creation in Workspace . java to improve code clarity by simplifying variable initialization
updated import statements and modified conditional checks in OtcConfigConfigSource . java to enhance configuration handling and improve clarity in property resolution
updated Testjsig . java file to improve test coverage and functionality
fix mana tablet and terra mana not work correctly
regenerate client with updated copyright year ( # 4382 )
remove unnecessary serialversionuid for p11prfgenerator
refactor file validation logic in DataRegion . java to improve clarity and handling of empty and non - existent files to enhance code readability
added two new Java files , Switch21 and Switch19 , implementing two switch - related methods for string formatting to enhance string manipulation capabilities
updated error messages in ComparableSubjectTest to remove unnecessary " reason " prefix to improve clarity of error messages related to string conversion in tests
bug : set xmlStandalone flag to true in streamhelper
updated Int2ObjectCache . java to improve array size validation and added equals method to enhance error handling and ensure proper equality checks for map
removed sorting of security filter chains in WebSecurityConfiguration and added a new test for order on bean definitions to ensure correct ordering of security filters based
updated order type from GTC to MARKET in BinanceTradeService . java to align with updated API specifications
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and simplify its initialization logic to improve code structure and enhance readability by leveraging
updated the constant KEY _ SEP from ' \ 0 ' to ' \t ' in RocksDBBuildInfoStore . java to ensure consistent handling
camel - 14538 : camel - jms component should return documentation for activemq component . thanks to jeff
added error handling for ` bound ` in ` SourceUtils ` and created new classes ` TestGetBound ` and ` TestGetBoundExtra ` to improve robustness
refactor filter builder logic to use a separate method for different primitive types to improve code readability and maintainability by reducing duplication
added checks to ensure the original artifact name starts with the required prefix to enhance robustness by preventing unnecessary substring operations
updated certificate handling in HttpsSegmentFetcher to support multiple issuer numbers to enhance security by ensuring all certificates are processed with unique identifiers
refactor configuration handling in ` Config . java ` and add ` DnsFallback . java ` for testing DNS fallback functionality to improve code clarity
ww - 4892 : include exception cause in exception message
changed the data type of the ` success ` field from ` boolean ` to ` String ` for the ` url ` field in the ` DepositAddress
refactor the drop method in WindowsSecurity to use a try - finally block for resource cleanup to ensure proper resource management and prevent memory leaks
removed the " address " parameter from the scope definition in CommonOAuth2Provider and CommonOAuth2ProviderTests to simplify the scope definition to focus only ess
replaced the direct assignment of ` _ started ` with a new ` Start ` class to encapsulate the initialization of ` _ started ` to improve code read
added a new constant for hue and saturation to the WLED color scheme to enhance color representation for better color management in the application
replaced the ` isValidCaller ( ) ` method with a set of valid ` VALID _ CALLERS ` to improve code readability and maintainability by using
add miss case for jsrinst
add transactional support to subscriptionactivatingsubscriber ( # 547 )
refactor database update handling in DBMSProcessor to improve query construction and error handling to enhance code readability and robustness against SQL exceptions
updated elevation handling in ContactItemInflater for devices running Lollipop and above to ensure consistent elevation behavior across different Android versions
rename ` typeInformation ` to ` identifier ` for clarity to improve code readability and maintainability by using a more descriptive variable name
replaced direct file access with AccessController for file operations to enhance security by restricting access to file operations
refactor GroovyParserVisitor and GroovyPrinter to improve variable initialization and formatting to enhance code readability and maintainability by simplifying
improve error message when invalidation meta data can not be fetch
updated variable names and logic in RecordInputStream , UnicodeString , and TestUnicodeWorkbook classes to improve code clarity and ensure correct handling of short values
added a test for downloading file names containing norway characters to ensure correct handling of special characters in file names
replaced RuntimeException with CancellationException in AsyncResource . java and added cancellation handling in FingerprintScannerSample . java to improve error handling by distinguishing
added null check for statistics before calling handleCache to avoid potential NullPointerException when statistics is null
added a new test method to remove an object from an explicit collection in MongoTemplateTests to enhance test coverage for the ` remove ` method functionality
updated copyright year in multiple Java files to reflect the correct copyright year in the project
updated string formatting in Coder . java to ensure proper line breaks for better readability
added functionality to manage scroll behavior in RecentsView and PagedView to ensure proper handling of scroll completion based on button revealed state
added a new constant COMMON _ HMS _ PROPERTIES and refactored parameter handling in HiveIcebergMetaHook to improve maintainability
updated exception handling to use a new method for checking address in use to improve code readability and maintainability by centralizing exception handling logic
added a test class path parameter to the argument list in TestNestmateAttr . java to ensure the test runs with the correct class path configuration
updated logging level from VERBOSE to VERBOSE in Grep . java to improve clarity and consistency in logging output
no effective change - code cleanup - remove unused import
fix : add nested use savepoint property to scope transaction
refactor fetchSize from a static integer to a ThreadLocal < Integer > in QueryProcessExecutor to improve thread safety to enhance performance by avoiding
[ java ] remove unnecessary idle strategy for embedded ping pong .
fix httpclient interruption when return null
added HDP _ VERSION configuration and logging in SliderAppsViewControllerImpl . java to ensure proper handling of HDP _ VERSION property to enhance configuration management
updated JavacProcessingEnvironment to store and manage ServiceLoader and ServiceIterator instances to improve resource management and ensure proper cleanup after processing
added a DeepCloner class and modified parameter handling in ParameterizedRobolectricTestRunner and RobolectricTestRunner to facilitate object cloning
added a bind annotation for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to control the display of stacktrace in the web application
8022598 : object . getprototypeof should return null for host object rather than throw
replaced occurrences of ` OopField ` with ` OopField ` and updated references in ` SystemDictionary . java ` to improve code cl
updated JwkKeyListView and JsonWebKeyEndpoint to use generics for RSAPublicKey and ECPublicKey to enhance type safety and
use onlywritablebootimageheap if spawnisolate option be enable .
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean functionality
removed import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies and reduce unnecessary imports
replaced the ` Validator ( ) ` method with ` validator ( ) ` in multiple actuator classes and added a ` getOwnerAddress ( )
http : / / issues . apache . org / jira / browse / amq - 4705 - add an example of how to
updated sendCommand calls to use byte arrays for minimum and maximum values in BinaryClient . java to improve handling of minimum and maximum values for range
add edge builder to handle empty index
[ java ] use remove ( ) instead of contains ( ) .
added duplicate file conflict handling in FileDataStorageManager , FileDownloader , and FileUploader to ensure that duplicate file conflicts are properly managed and managed
refactor execution context to use generics for better type safety to improve code clarity and reduce casting errors
replaced instances of ` StrUtils . StrUtils ` with ` Lucene ' s ` splitFileNames ` method across multiple factory classes to streamline
added driver property for remarksReporting and useInformationSchema in DatabaseFactory . java to enable compatibility with Oracle , MySQL , and MySQL databases
updated the initialization of MockMethodInterceptor in SignedSupportingClassProxyFactory to include a handler parameter to ensure proper serialization and deserialization of mocked mocked methods
updated time tracking logic in FileChangedExclusiveReadLockStrategy to use current time instead of a fixed time to improve accuracy in file change detection
[ hotfix ] [ table - planner - blink ] wrap class loader in executioncontext
added buffer change handling in TerminalView and TerminalTextViewOverlay to improve UI responsiveness to buffer changes
fix process config file with no extension ( e . g . . pid )
move disable tvm freeze operation to vmconfig
added ` _ insecure ` and ` setInsecure ` methods to ` TlsConfig ` , ` InsecureTrustManagerFactory ` , and ` InsecureTrust
refactored code in JavadocTool . java and added a new class T7091528 . java to improve code readability and introduce
replaced ` nodeColumns ` and ` title ` comparisons with ` edgeColumns ` in ` ExporterGDF . java ` to use ` edgeColumns `
added CascadeType . ALL to the @ OneToOne relationship in DefaultUserInfo . java to ensure related entities are automatically flushed to the database
refactor hashCode ( ) method in Message class to use Arrays . equals ( ) and Arrays . equals ( ) methods to improve equality checks to enhance
updated character encoding from ? to \ u017d
removed the isKeySerializerTypeVariableSized method from RocksDBSerializedCompositeKeyBuilder to streamline the code by eliminating unnecessary method
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` and updated ` SubjectDomainCombiner ` to utilize it to enhance security checks
fix nullpointerexception in recipe handler
nest union / intersect query with bracket could produce the wrong result if use within a subquery
added a method to show a dialog for connection errors in UploadMediaDetailFragment and updated error handling in UploadMediaPresenter to enhance user experience by providing
unhandled request must return a 404 not 415 fix #
updated bitwise operation to use ' L ' instead of ' 1 ' to ensure compatibility with long data types in bit manipulation
refactor imports in ImportLayoutStyle . java to improve code organization and readability
refactor ConsoleUIService to replace git Bash configuration with terminal - specific input handling to enhance flexibility in handling different terminal configurations and
refactor ShadowAccountManagerTest to simplify test assertions and improve clarity to enhance readability and maintainability of the test code
do n ' t reuse enclosingtype in analysistype # get enclosingtype
refactor method names for consistency and clarity to improve code readability and maintainability
removed the initial value parameter from the map setting method to simplify the key value setting process
[ rocketmq - 1060 ] : fix npe in mqclientinstance when consumer be empty or not
[ java ] add source _ ident ident for source _ ident .
added a new file ` TopTabAction . java ` that implements the ` ActionListener ` interface to provide a toolbar interface for the application
camel - 16400 : fixed dynamic router eip to work in all case
updated the ` AggregateItemReaderTests ` class to remove inheritance from ` TestCase ` and added JUnit assertions to simplify test class structure and enhance test
updated the Procedure class to use generics for improved type safety to enhance type safety and reduce the risk of ClassCastException
added functionality to display the number of edits in the wikidata API to enhance user experience by tracking the number of edits associated with the
added a check for length in OfflineSorter to ensure len is within acceptable range to prevent runtime errors
add ` ` absolute value ' ' bug report
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the dataset structure
improve error message for invalid credential type in InvalidTopologyTemplateException to provide clearer context for the exception related to credential type validation
updated the initialization of the variable ` v [ 0 ] ` to ` random ( ) . nextInt ( 1 , 100 ) ` to ensure ` v
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified time comparison logic to improve performance by avoiding
added SSL property handling in TestUtil . java and PGPropertyTest . java to enable support for SSL configuration in the test environment
danielwagnerhall : enable safe browsing for file downloads ( # 1542 )
added null checks before cloning old configuration to avoid potential NullPointerExceptions during flight configuration cloning
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding settings when transcoding is disabled
updated DataTable and TableDiffer classes to handle empty lists and return an empty list instead of a non - empty list to improve robustness by preventing
added a custom ignore tag to the Robust Java method parser to ensure that methods without a custom tag are excluded from processing
camel - 16467 : use optimisticlockingexception instead of throw a runtime exception
add parent config property to avoid reflection
refactor PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and improve toolbar layout management to enhance user interface responsiveness and ensure proper
deleted the ClusterNodeInfo . java file to the class is no longer needed for the current implementation
updated return statement in ShieldedTransferActuator . java to ensure consistent return value to maintain consistency in functionality
added debug output for ciphersuite selection in ServerHandshaker . java to improve visibility into ciphersuite selection process
refactor template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to improve clarity and maintainability of template selection handling
added a ` nodeLabelMap ` to track duplicate node IDs and updated error handling for duplicate node IDs in ` ImportContainerImpl ` to improve error reporting
added a new file R2303044ListSelection . java that implements a list selection test to facilitate testing of list item selection functionality
[ java ] use hasclienttimedout instead of check keepalivetimeout in publicationregistration .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when accessing mWorkspace
added a new test method to verify the behavior of compound properties in StepScopePlaceholderIntegrationTests to ensure correct handling of compound properties in step execution context
updated row count calculation to use a list of row counts to improve accuracy in row count handling
added path parameter handling and stream processing in SpringBootDocBuildTemplate . java to improve parameter management and streamline parameter handling in API method documentation
make logger final and remove unnecessary import
updated ` DistBuildCachingEngineDelegate ` to use ` CachingBuildEngineDelegate ` and ` LocalCachingBuildEngineDelegate ` instead of ` DistBuild
improve error message if json can not be parse
added a conditional check for the DEBUG flag before logging the log message in WidgetsModel . java to prevent unnecessary logging when debugging is not enabled
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of ` numTerms ` in ` SimilarityBase ` and added a new test for discount overlap in ` TestSimilarityBase ` to ensure
added checks for SimpleMailMessage and MimeMessage classes in SimpleMailMessageItemWriterTests and MimeMessageItemWriterTests to enhance test reli
added exit and quit methods to Global . java and removed them from ScriptingFunctions . java to streamline exit and quit functionality to improve code organization and
updated the way ` LoanBrokerGateway ` is created and closed in ` LoanBrokerSharkDetectorDemo . java ` to ensure proper resource management
renamed methods to ` findFirstUnverified ` and ` findFirstUnverified ` across multiple files to improve clarity and consistency in method
[ amazonechocontrol ] fix npe in vmware web service request context
updated authority assertions in ResinAcegiAuthenticatorTests . java to ensure correct authority retrieval for the authority and SUPERVISOR assertions
fix ( eckey ) : set the key length to 32 bits instead of 64 bits .
rename fml . disabledmodlist to fml . modstates for consistency
refactor account selection handling in ReceiveExternalFilesActivity to improve clarity and maintainability of account selection logic
improve error message when collect sink can not be close
added error handling for unexpected empty result from validator smart contract call to ensure a clear error message is thrown when there is no results from the function
updated JSON parsing in TexturePackerFileProcessor . java to handle cases where the specified file is empty or null
remove unnecessary null check in pooledconnection
updated the target memory allocation values and modified the calculation of the COUNT variable in TestRefprocSanity . java to improve memory usage and streamline the
added null checks for currentConsole and write methods in EditorConsole . java to enhance error handling and prevent potential NullPointerExceptions
added a call to setCredentialsRefreshDelay ( 100 ) in KinesisConfigUtil . java to set the refresh delay for the Kinesis client to improve
replaced ` AlertDialog . Builder ` and ` AlertDialog . Builder ` with ` showInfoAlert ` in ` SingleUploadFragment . java `
renamed variable ` private ` to ` package ` in multiple locations in the code to improve clarity and consistency in variable naming
updated Java version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 to ensure compatibility with newer Java versions in tests
fix for mng - 825 : do n ' t include shared plugin in dependency resolution
added a set to manage the collection of ZipFile inputs to ensure proper resource cleanup and prevent memory leaks
rename DATAMATRIX to DATA _ MATRIX across multiple files to improve clarity and consistency in terminology
added methods to run active and idle listeners in SequenceGeneratorSource to ensure proper handling of keyRanges during sequence generation
corrected the spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " to ensure consistency and accuracy in method naming
refactor ` AnnotatedDelegate ` and ` SyntheticAnnotated ` classes to use ` findFirst ( ) ` and ` findFirst ( ) ` methods
added support for ppc64 architecture in Bits and ByteArrayAccess classes to enhance compatibility with additional architectures
updated exception message in RoboMonitoringInstrumentation . java to provide clearer guidance on resolving activities to enhance debugging by guidance on resolving activities
replaced ` MINUTES ` with ` MILLISECONDS ` in the ` waitWithDeadline ` method calls in the ` waitWithDeadline ` method to
refactor DateUtilTest to use Instant and Offset classes for improved date handling to enhance code readability and leverage modern Java
refactor BytesRef class to improve performance to enhance efficiency in byte manipulation operations
added a Toast message when YouTube Player does not work on Lollipop yet to inform users about the upcoming update to Lollipop
added checks for unterminated string and character sequences in SQL parsing to ensure proper handling of SQL syntax errors and prevent parsing errors
check if hardware vibrator actually accessible before use it
updated table border configuration and improved column background color handling in DotRenderer . java to enhance the visual appearance of foreign key columns and
added a method to check if a configuration variable is encoded in HiveConf and updated the set processing logic in SetProcessor to handle encoded Par strings to improve
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class implementation to improve code clarity and maintainability
fix default uri implementation with proxy uri ( # 3903 )
added functionality to load images using a memory cache in NetworkedCacheableImageView and updated related classes to enhance image loading performance and support for
removed unnecessary parameters from ` ofFloat ` methods across multiple classes to simplify method signatures and improve code readability
update gdx controllers to 2.0 . 0
refactor LaunchedURLClassLoader class to improve code readability and maintainability
updated DataSourceHealthIndicator to use DataAccessUtils for querying JDBC query to improve query handling and ensure correct column count validation
add ` ` no - cache ' ' to the cache control header
updated warning message formatting to use Locale . ENGLISH to ensure consistent formatting across different locales
updated SolrQueryParser constructor to accept an analyzer parameter to enhance flexibility by allowing the constructor to accept an external analyzer as a parameter
update copyright year to 2017 to reflect the current year in the codebase changes
removed unnecessary semicolon from MainTest . java to improve code readability and maintainability
refactor TypeContributions class to improve code readability and maintainability
added handling for ` VoidColumnVector ` in ` VectorizedBatchUtil . java ` to ensure correct data processing for ` VoidColumnVector ` instances
updated parameter name from ` templateName ` to ` request ` in ` StatementGenerator . java ` to improve clarity and consistency in parameter naming
removed the method ` isTypeMatch ` from the ` addConfiguration ` method in ` AbstractConfig ` to streamline the configuration addition process to simplify the
[ java ] update the timestamp of the message when the publication be complete .
renamed the method ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` to ` trustAll ` to improve clarity and consistency in
added a new annotation ` NoBootstrap ` in ` manifold . api . host ` and updated ` BootstrapInserter ` to check for it to ensure that
hbase - 17815 tabledescriptorchecker should not fail with npe if table be not find
renamed variable ` maxCommits ` to ` requestedCommits ` for clarity and updated related calculations to improve code readability and maintainability by
added InvocationTargetException to the main method and modified the run method to throw InvocationTargetException to enhance error handling to improve robustness by preventing runtime exceptions
added a constant build _ ID and refactored CachingBuildEngine to use it to improve code clarity and maintainability by centralizing
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed redundant method call to markAsDone in HttpProtocol . java to streamline the code by eliminating unnecessary duplication
added a default configuration to TezConfigurationFactory to enhance flexibility in configuring Tez configurations
added a null check for keyPurposes before validating keyPurposes to prevent potential NullPointerException when keyPurposes is null
refactor conditional logic in CustomPlaybackOverlayFragment . java to improve readability and maintainability of the code
added a method to forget the most recent sound in OpenALAudio . java and updated its usage in OpenALSound . java to improve sound management by
do n ' t invalidate state when discontinuity report
added DecimalFormat and NumberTickUnit implementations to NumberAxis . java to improve precision and readability of number range calculations
refactor TargetsCommand to use builder pattern for creating TargetGraphAndBuildTargets instances to simplify object creation and improve code readability
removed the ` IndexFileNameFilter ` class and replaced it with a direct instance check in ` IndexFileDeleter . java ` to simplify the code
add fullboundingboxlader option for dummy container to prevent lodded block
added compression level parameter to the constructors of ApkBuilder and SignedJarBuilder classes to allow users to specify the compression level to enhance flexibility in
added a test for including static fields in the MirrorTest class to ensure that static fields are correctly included in the stub jar
added handling for BYTES data type in multiple classes and updated field size constants to improve clarity and consistency in data type handling
refactor StringBuilder initialization and improve message formatting in multiple error tests to enhance readability and ensure consistent message formatting across tests
updated hashCode method to use Objects utility to improve code readability and maintainability
added cache management functionality in SpringDataJPAJoinFetchPaginationTest , ForumService , and SpringDataJPAJoinFetchPaginationConfiguration to
use locale prefix for pronunciation
updated SimpleHttp . java to handle form body creation and added a new test for null post configuration in TestHttpPlugin . java to enhance
added dispatcher and executor service shutdown to ClientSideSlb and ClientSideSlbTest to ensure proper resource management and prevent potential memory leaks during shutdown
updated texture positioning logic in TextureRegion . java to ensure correct vertical positioning for flipped sprites
throw invalidconfigurationexception instead of hazelcastexception for unknown property
updated contextPath initialization to handle null values to ensure a default value is used when contextPath is null
[ drools - 7088 ] fix issue with kiecontainer . reinittypes ( ) and kiecontainer . reinittypes ( )
added serialization support for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and defined a constant B _ TREE _ MAP _ ROOT
added support for handling precompiled headers in the C++ source rule to ensure proper validation and enforce the inclusion of prefix and precompiled headers in
replaced WeakReference with AccWeakReference for image updates to enhance security by using privileged actions for privileged actions
changed access modifier of findNextIndex method from package - private to private in ObjectMap and OrderedMap classes to restrict access to the findNextIndex method
bugfix : set isdirect to false in vertexbufferobject
fix for http : / / issues . apache . org / jira / browse / http : / / issues . apache . org / browse
changed the return type of ` localToAscDescendantCoordinates ` and ` localToDescendantCoordinates ` method from ` void void ` to ` Vector2 `
pdfbox - 5764 : fix arrayindexoutofboundsexception in random RandomAccessReadBuffer
added a null check before removing the close hook to prevent potential NullPointerException when the context is not initialized
updated border spacing logic in CellLayout and DeviceProfile to use folderCellLayoutBorderSpacingPx instead of cellLayoutBorderSpacingPx to improve layout
refactor valueNumeric handling by introducing a new ValueNumeric class to improve clarity and encapsulation of numeric parsing logic
updated authentication logic in FormAuthenticator . java to ensure proper handling of deferred authentication scenarios
updated command - line argument checks from " -- module - startd - ini = " to " -- add - to - startd " and " --
added a default partition value to the dynamic partition value in DynamicPartitionFileRecordWriterContainer to ensure a valid default value is used when none is provided
[ hotfix ] [ runtime ] add null check for operatorfactory
updated return statements in DefaultArtifact . java to include a conditional check for classifier before constructing the conflict ID and artifact ID to improve clarity of conflict resolution
camel - 16400 : camel - kafka - fix kafka consumer rebalance issue
improve error message when annotation substitution fails
rename the property ` ` gmail _ notifications _ enabled ' ' to ` ` enable _ gmail _ notifications ' ' .
doc : [ doc ] clarify how to create cryptocurrency in create cryptocurrency
updated test cases in LumberjackMultiThreadTest to use a configurable concurrency level to improve test reliability and adapt to available processors to enhance test
do n ' t move a player if it be dead
refactor Exchange class to improve code readability and maintainability
add miss requirement for apikey and apisecretkey
replaced switch statements with if statements for better readability to improve code clarity and maintainability
[ hotfix ] [ doc ] fix typo in abstractmetadataexportmojo
added exception handling for SQL integrity constraint violations in Hive to ensure proper handling of SQL integrity constraints and provide clearer error messages to improve error reporting and
updated the property name from " githubAccessToken " to " gitHubAccessToken " to ensure consistency in property naming conventions
added a deprecated RoboExecutorService class to indicate that this class should no longer be used
fix a bug that cause group not be add to the menu when add a sub group to the group
corrected the spelling of "ServiceName " to " spanName " in the BraveClientExecutionInterceptor . java file to improve code readability and ensure
updated process argument handling in TestDynamicNumberOfGCThreads . java to improve clarity and ensure proper execution of dynamic garbage collection tests
changed the return type of ` getHostFlavorMap ` and ` getAllPossibleHostFlavors ` from ` ImmutableFlavor ` to ` ImmutableSet
updated SQL statement construction in CreateTable . java and CreateTableDeParser . java to improve clarity and ensure proper handling of create operations to enhance
added alpha transparency to the background drawable for the chat background to enhance the visual appearance of the chat background in the user interface
test : migrate ctiteratoriteratortest to junit 5 ( # 4514 )
added a call to ` token . clear ( ) ` in multiple tokenizer classes to ensure that the ` token ` instance is reset before processing new tokens to
pmd : add test to prevent crash on block statement
updated the ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to use ` @ EnableStateMachine ` with ` StateMachineConfigurer
danielwagnerhall : use testlocators . testlocators instead of testlocators . testlocators . testlocators
[ flink - 19748 ] [ table - pl ] [ table - pl ] fix conversion of float to double
return the current scope instead of the global one
updated touchable insets logic in TaskbarDragLayerController to ensure consistent handling of touchable insets
removed the check for the ' ~ ' character in FencedCodeBlockParser . java to simplify parsing logic by eliminating unnecessary complexity
added socketTimeout property and related functionality to manage socket read operations to allow configuration of socket timeouts for socket read operations
added a sleep delay in ElementAttributeTest to ensure proper handling of thread interruptions
added UTF - 8 encoding to the input stream reading to ensure proper handling of character encoding for HTTP responses
refactor List class to improve code readability and maintainability
added a constructor to AsyncFileImpl that accepts a URI and a ContextImpl parameter , and created a new test class for handling errors to improve
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine to indicate that CucumberEngineExecutionContext and CucumberTestEngine are
nuagevsp : fix npe in case hostid be null
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated related logic to improve clarity and functionality of upload
updated Java version handling in ConstantPoolTagTests . java to ensure compatibility with Java 9 features
fix : do n ' t print error message if compiler can not compile
add method to remove all header from asyncclient
replaced Vector with ArrayList and updated method calls in Main . java to improve type safety and enhance code readability
updated the default grid column from 4.0 f to 3.0 f in AppPreferencesImpl . java to improve user interface consistency
added a condition to check if the view creation is not for view creation to ensure that the view creation logic correctly handles view creation scenarios
updated date pattern and assertion in TestHS2HttpServer . java for improved clarity and consistency to enhance code readability and maintainability
added error handling for snippet invocation in GraphPrinter . java to improve robustness by gracefully handling potential exceptions during reflection
danielwagnerhall : fix test that fail with ssl certificate
refactor ByteBlockPool to use Math . addExact for adding BYTE _ BLOCK _ SIZE and add a new test case in TestByteBlockPool to
use locale . english instead of static
improve error handling for unexpected error in tcp transport .
add @ suppresswarnings ( ` ` serial ' ' ) .
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` OcamlDebugLauncher ` and ` OcamlDebugLauncher `
added option to save change .
added response type validation and error logging in OAuth20DeviceCodeResponseTypeRequestRequestValidator . java and updated log messages in NexmoSmsSender
added a check for a specific index in DrillBuf . java to ensure the index is valid before proceeding with further operations
added input format parameter to table mapper job initialization to enhance flexibility in handling different input formats during mapreduce job execution
updated append method call in AbstractJRubyMojo . java to ensure jruby classpath is appended correctly to the classpath
improve error message when language be not find .
added support for handling deprecated and incompatible commit durations in ReplicationHandler to ensure compatibility with Solr 7.1 and newer versions of the replication handler
rename ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport ` and update related references in ` TestCachedSqlEntityProcessor
refactor EC key pair generation to use ` Object [ ] ` instead of ` long ` to improve memory efficiency and reduce memory usage
added job suspension handling methods in Restarting and StateWithExecutionGraph classes to enhance job control by allowing suspension during job state transitions
updated RotationTouchHelper constructor to accept a new instance of RotationTouchHelper to improve flexibility by allowing direct instantiation of it instead of using a singleton instance
refactor port table handling in UniFiControllerCache . java to use flatMap instead of filter to improve code readability and maintainability by
renamed ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in thread ID
log a warning if the offer do n ' t exist
use constants . ssl _ protocols instead of hard cod value
updated mock handling logic to differentiate between Class and other types in MockitoMethodInvocationControl . java to enhance flexibility in mocking behavior
updated NotLoadedException constructors to include a PartialDatabaseObject parameter to improve error handling by associating the exception with specific database objects
replaced the import of DisplayUtils with a null extra for the file intent to ensure proper handling of file data in the activity
added error handling and improved file name checks in StoreDirect and StoreWAL classes to enhance robustness and provide clearer error messages when
added UI _ HELPER _ EXECUTOR to manage task snapshots and updated method calls in AbsSwipeUpHandler . java to improve task execution and ensure
added a ` hidden ` flag to the ` CommandArgumentDefinition ` to control the visibility of the command argument definition to enhance the flexibility of command
[ hotfix ] [ kafka ] [ test ] use correct ip address for logging kafka test
[ geos - 7088 ] use geoserver . getSLD ( ) instead of geoserver . getcs ( )
added permission checks for launcher activities and modified shortcut addition logic to enhance security by ignoring potentially malicious intents
added ` getid ( ) ` and ` getId ( ) ` methods to ` TiledMapTile ` , ` StaticTiledMapTile ` , and `
refactor Manager class to improve code readability and maintainability
updated JDBC connection string to include version = V _ 0 _ 13 to ensure compatibility with different database versions in the application
added schema handling in LiquibaseGenerateChangeLogMojo to enhance the change log generation process by incorporating catalog and schema information
use put instead of putifabsent to avoid npe
[ log4j2 - 3474 ] planner - benchmark : log singlebenchmarkrunnerexception instead of error
removed the ' final ' modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore ` to allow method overriding in subclasses
fix ` ` / ' ' to ` ` . ' ' in file selection
added tests for handling large response content in FastCGIProxyServletTest . java and refactored request handling in FastCGIProxyServlet
added a new service intent to the MarkReadService to enable interaction with the ReadInteractionsService in the application
added a conditional check for lintClassfile in ClassReader . java to enhance warning logging for missing annotation methods
added configuration for the email server port to ensure the email server ' s port is correctly set to a predefined value
added retry mechanism for SSL factory reloading with retry logic to improve reliability of SSL factory renewal and recovery
updated date format in ObjectMapperProvider . java to include seconds seconds in seconds seconds instead of milliseconds
updated the assertion message in SpyingOnRealObjectsTest . java to clarify the reason for the error related to mocking a private class
added functionality to handle line endings on line endings in Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline Inline
update filePathString to handle null parent to ensure proper formatting of the path string
removed unused import of DocCollection in TopicStream . java to clean up the code and improve readability
refactor NinjaServletContextTest to use a factory method for creating ServletInputStream and add a test for charset parameter to improve code readability
added a configuration property to manage web exposure settings to enhance endpoint management by allowing dynamic inclusion of web exclusions
added a check to ensure that the current graph is a dynamic graph to prevent runtime errors
disable bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean bean
jsonpath should not suppress jsonpath expression error
removed redundant instantiation of ControllerLeaderLocator in HelixServerStarter . java to streamline the code by eliminating unnecessary duplication
updated usage instructions for the CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI CLI
refactored the ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` to remove redundant implementation to streamline the
[ beam - 8470 ] [ beam - 8470 ] [ beam - 8470 ] [ beam - 8470 ] [ beam - 8470 ]
refactor ShadowAccessibilityManagerTest to use AccessibilityManager instance instead of accessing it directly to improve code clarity and ensure proper accessibility manager
add a display name for the flutter usage statistic ( # 3053 )
replaced instances of ` SourcePathResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolverWithResolver ` to simplify the class hierarchy
refactor enum data type handling into a separate helper class to improve code organization and maintainability by separating concerns
updated the file path in LogFileTests to use File . separatorChar to ensure compatibility across different operating systems
updated method names from ` getMapLocalWork ( ) ` to ` getMapRedLocalWork ( ) ` across multiple files to improve cl
added a check for index tables to ensure that dropping an index table does not throw UnsupportedOperationException unsupported unsupported operations
added a condition to update disabled flags in RecentsView based on visibility to ensure proper UI behavior when the view ' s visibility changes
added a specific highlighting for non - Windows environments to improve compatibility with non - Windows systems
add ` ` hrs _ request _ param _ to _ http _ header ' ' to ` ` hrs _ request _ param _ to
updated file path retrieval method in HadoopPinotFS . java to improve clarity and consistency in file path handling
updated the method call in SelectBox . java to remove the capture listener to ensure proper listener management for the stage
change the initialization of the _ metaDataComplete variable from true to false to ensure that metadata processing is disabled by default
refactor ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` in ` RecentsAnimationController `
added PLATFORM and RELEASE environment variable handling in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest . java to
updated type casting logic in ` mmm Lower . java ` and added a new test class ` T6500701 . java ` to improve type safety
added tests for adding imports with new line breaks in Java code to ensure correct handling of new line characters in import statements
added hub mode configuration to AbstractLiquibaseChangeLogMojo to enable customizable hub mode settings for Liquibase changelog configuration
simplified null check for processedItem in JsrFaultTolerantStepBuilder and JsrChunkProcessor to improve code readability and maintainability
added a check for the existence of a linkDb before adding it to the input path in IndexerMapReduce to ensure that the current linkDb is
updated the method for setting the ` setIndexerThreadPool ` in ` LuceneTestCase ` to use ` Class . forName ` instead of manual reflection to
updated the SMS address format in GameCanvasImplementation . java to simplify the construction of the SMS address for better readability
refactor MapJobExecutionDao to use a copy method for job executions to ensure that modifications to job executions do not affect the original
added a new file DownloadTest . java to implement a test for downloading a PNG file to verify the functionality of loading PNG files in the application
updated language handling in multiple Java files to ensure consistent language formatting across the application
replaced ` UDFArgumentException ` with ` RuntimeExceptionArgumentTypeException ` in ` GenericUDFRound . java ` to improve clarity and specificity of
added a null check for ` selectedVersion ` before processing dependencies to avoid potential NullPointerExceptions when ` selectedVersion ` is null
removed multiple AntPathRequest matchers from SecurityConfig . java to streamline security configuration to improve code clarity and reduce unnecessary complexity
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
refactor BeanDefinitionInjectProcessor to conditionally create constructors based on class type to improve performance by avoiding unnecessary object creation for specific class elements
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] fix npe in openwebnet thermoregulation handler ( # 13927 )
refactor socket event processor creation to simplify the code to improve readability and reduce complexity by eliminating unnecessary context class loader handling
deleted the SunToolkitSubclass class from the project project project project project project project project project project project project project project project project project project project project project project
updated imports and added a new method ` getTranslation ` in ` DefaultRenderableSorter ` and added a method ` hasTranslation ` in ` Matrix4 `
added a test to verify the registration of wrapper handlers in TypeHandlerRegistry to ensure proper type handlers are registered before the primitive type handler registration process
pdfbox - 3990 , pdfbox - 3990 : add a method to convert alternate color space to rgb image
updated URLs in CommonsApplication and related classes to use BuildConfig instead of CommonsApplication to enhance maintainability and consistency by centralizing
camel - 18287 : camel - health - add a test base on user forum issue
fix nullpointerexception in thorn chakram
added a test case for altering tables with primary keys in AlterTableWithViewsIT . java to ensure correct behavior of index creation and
updated offset variable to use readerContext ' s docBase instead of a fixed value to improve accuracy in handling document offsets during document processing
remove the ID field from MongoRecordReader to ensure the field is no longer needed
added disconnection methods to YeelightHandlerBase , DeviceBase , and WifiConnection classes to improve resource management and connection handling to enhance
added support for " AUTO _ INCREMENT " syntax in the SQL parser to enable proper SQL auto - increment functionality in the database
fix ( kubernetes - client - api ) : expose shareindexinformerfactory # get Existingindexindexinfo
cloudcloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
updated ShadowBitmapFactory to use RobolectricBufferedImage instead of Point for image size handling to improve compatibility with Robolectric ' s image
removed deprecated constants from LauncherSettings to clean up codebase and improve maintainability
jbrules - 3088 : move drl file into the correct location
added legendTop and legendTop properties to PieChart legend legend legend ' s legend legend ' s properties to Pie Pie Pie Pie Pie Pie Pie Pie Pie
added a check to return early if the world transform is null to optimize performance by avoiding unnecessary processing when no transformations are needed
fix for ticket : 32 : add script creation for script that have no space
nifi - 2088 added restlistener . remote . source . host attribute to listenhttpservlet
updated CompactionLogger initialization and added resource cleanup in LevelCompactionTsFileManagement . java to ensure proper resource management to improve performance and prevent resource leaks
updated link attributes to use " href " instead of " xlink : href " for license and location location location location location location location location
camel - 16400 - camel - aws2 - s3 : use unique executor name for s3 upload timeout checker
hbase - 14614 add log for regionserver . isshutdown ( ) when cluster shutdown
updated Slf4jSpanLogger to check for null spans before logging messages and improved log handling in DefaultTracer to enhance stability by prevent
trim whitespace from the active option to ensure consistent formatting by removing leading and trailing spaces
added support for enabling or disabling wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall wall
[ hotfix ] [ test ] remove redundant assertion in overseertest
removed the method ` getKernelVersion ( ) ` from the ` LinuxFileStore ` class to simplify the code by directly returning a boolean value
refactor ExecConstants class to improve code readability and maintainability
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for testing purposes
added setScanAttributeForPaging method to ScanUtil and integrated it into TableSnapshotResultIterator and TableSnapshotResultIterator to enhance scan attribute handling
added a check to ensure that ` lowRange ` is within a valid range of 100000000000L to prevent processing of invalid input
http : / / issues . apache . org / jira / browse / amq - 4705 - optimize cache size estimation
server : fix zoneid in host join response
[ zeppelin - 2782 ] [ zeppelin - 2782 ] fix encode encode issue in pyspark interpreter
updated the removal method in ZipFileSystemProvider to use a direct parameter for zfs to improve code readability and simplify the removal process
changed the type of the ` json ` field from ` Object ` to ` String ` in ` HttpRequestBuilder ` from ` Object ` to ` String `
increased the timeout duration in the hard commit process from 2 seconds to 5 seconds to allow more time for the hard commit process to complete successfully
catch exception when call listener . beforeevent and listener . afterevent ( )
renamed multiple classes related to dial functionality to improve clarity and consistency in naming conventions
[ hotfix ] [ cep ] [ cep ] fix log message in syncqueue .
updated Ryuk container version from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest features and bug fixes
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a
fix npe in fmlclientlaunchprovider when run with mcp
[ hotfix ] [ test ] fix yarn integration test
add no - data stats for miss map
deleted the AllTests . java file to remove obsolete test classes that are no longer needed in the project
added support for unicode character with non - breaking and zero - width space
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that large stack trace invocations do not starve memory
updated ` createRowKeyForMappedProperties ` method to use ` getResultMappingsForRowKey ` instead of ` getResultMappings ( rs ) ` to ensure
added event handling in UIText . java to ensure proper event processing in the application
deleted the ` Controller . java ` file and updated the class name from ` Weldby ` to ` Weldby ` in ` Weldby
ruby flavor : do n ' t monitor group in empty check
dat - 3147 reworked to add the protected member variable to handle the lb pro license
mondrian : fix for mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon mon
[ gr - 27854 ] [ gr - 27822 ] generate debug information when enable .
mondrian : fix typo in mondrianproperties
added support for retrieving friend paths in Kotlin - related classes to enhance the functionality of Kotlin compilation by allowing users to specify
added alias mappings for " BATK " , " BraHMI " , and " MANDAC " in Character . java and modified
updated equality checks in ExecutionCommand and added a new method for JSON serialization in StageUtils to improve null safety and enhance JSON serialization for execution
updated Mockito dependencies to ensure compatibility with the latest testing
refactor OCFile class to improve code readability and maintainability
added a toString ( ) method to SystemScope class to provide a readable string representation of SystemScope instances for easier debugging and logging
added support for processing percentages in the CSSParser to ensure proper handling of CSS percentage values in color functions
added a test method for local index reverse scan functionality and updated assertions to ensure that the reverse scan correctly retrieves and counts all rows in the
updated test cases to use ApplicationProvider instead of InstrumentationRegistry to improve test reliability and align with the latest testing framework standards
updated toast messages in ItemListActivity , LiveTvGuideActivity , MediaManager , and ItemListActivity to improve localization and user experience by providing
refactor conditions in RendererUtilities for better clarity and correctness to improve code readability and maintainability
replaced iterator and iterator with ArrayNode items in KrakenStreamingAdapters to improve code readability and maintainability by using more direct data structures
added a try - catch block to handle potential SQLite exceptions when adding the FILESYSTEM _ CRC32 column to prevent multiple addition of the FILESYSTEM _ CRC
removed an extraneous print statement from AsyncServletIOTest . java to clean up the code and improve readability
added a hash table load factor parameter and refactored data size calculations in ConvertJoinMapJoin . java to improve performance by calculating online data
updated the ` buildView ` method to accept a ` Context ` parameter and added background resource handling to ` trackSelectionHelper ` to enhance flexibility
added a ` assertAuthentication ` function to ` SecurityMockMvcResultMatchers ` that accepts a ` Consumer < Authentication > ` for authentication to enhance flex
vpc : do n ' t set vpcid to null when set gatewaynet to null
[ beam - 10955 ] disable savepoint test on 1.11
fix checkstyle issue
updated loop condition in Actor . java to ensure actions are processed in the correct order to improve the correctness of action processing
updated imports and class inheritance from BaseExchange to BitmexExchange to ensure compatibility with Bitmex exchange implementations
[ task 71725 ] add test for non - parent orgunit relationship
added null check for spatial parameter in LodControl . java to avoid potential NullPointerExceptions when spatial is null
modified the handling of the lastTokenFiltered variable in ConditionalTokenFilter and adjusted corresponding tests in TestConditionalTokenFilter to ensure proper token filtering behavior and maintain consistency in test assertions
make unsafestorenode . getstateafter ( ) consistent with graph
replace super . putAddress ( base + offset , value ) with io . putAddress ( base + offset , value ) in BoundedMemoryIO .
added a test to verify that ` casEventRepository . load ( ) . findAny ( ) ` does not return an empty list to ensure that the
removed unused parameters from AuthenticationAttrProcessor and AuthenticationAttrProcessor to clean up the code and improve readability
added null key check in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure the specified key is not null to prevent NullPointerExceptions
added a RuntimeException for typeface setting in CodenameOneTextPaint . java to ensure proper error handling when setting a typeface in runtime
added ` open ` method implementations for Azure and Hadoop pinotFS implementations to enhance file reading capabilities for different file systems
remove deprecate webdriverrunner . fail ( string )
simplified conditional logic in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a boolean field for constructor mappings instead of a separate ResultObject class to improve performance by avoiding unnecessary object
updated SQL statement in CreateTableGeneratorTest . java to ensure correct SQL syntax for foreign key foreign key foreign key foreign key foreign key foreign key foreign key
refactor filter logic in VectorizationContext to conditionally return null or null based on filter mode to improve handling of primitive primitive types to enhance filtering
fix a compile error in exhaustivesearchphaseconfig
replaced ` ReorganizeTableStatement ` with ` modifyDataTypeStatement ` in ` ModifyDataTypeChange . java ` to simplify data type modification logic
updated cluster name references to use constants from IoTDBStartCheck to improve code readability and maintainability by avoiding magic strings
refactor connection handling in PeerGroup and PeerGroup classes to improve error handling and logging clarity to enhance clarity and maintainability of peer connection
added handling for various style strings in Nano . java to improve styling functionality to enhance the visual appearance of graphics elements
fix datafixer . fixup to work with adventure nbt
updated return value from " Use ` String ` to " No # toString ( ) on String " in NoToStringOnStringType . java to provide clearer
updated JVM memory parameters in TestThreadFailure . java to ensure compatibility with 32 - bit systems
do n ' t return count when data provider can not fail
update return value from tokens [ 0 ] to tokens [ bandwidth ] in BucketStateIEEE754 . java to ensure correct data retrieval based on bandwidth
danielwagnerhall : add webdriverbackedselenium . selectpopup ( ) and capturenetworkTraffic ( ) method
refactor doPrintEntry method to remove the boolean parameter and simplify its logic to enhance code readability and maintainability by reducing unnecessary
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added opacity and background validation in Dialog and Frame classes to ensure the dialog ' s appearance is valid and prevent illegal state exceptions
changed the state variable to be final in DefaultProjectFilesystem . java to ensure immutability of the state variable
updated Redis connection factory to utilize RedisStandaloneConfiguration and RedisPassword to enhance configuration flexibility for Redis connections
added logic to check if a message have already be receive .
replaced instances of ` Callback . Adapter ` with ` Callback . NOOP ` in ` notifyContent ` method calls to simplify the code by using a more
refactor FileOperationsHelper to use OperationService for sharing operations to improve code organization and maintainability by centralizing share operation logic
updated BeanDefinitionInjectProcessor to remove unnecessary check for isValue and added dependency injection for FieldPropertyInject to simplify value injection logic to improve code clarity
replaced calls to ` getMinBuildHeight ( ) ` with ` yStart ` and ` yStart ` in ` ClassicPlotManager . java `
added nullpointerexception handling for nullpointerexception .
tmi - tiff : added support for read linked exif sub directory
added support for enabling or disabling the dependency - aware executor based on the version target graph mode in VersionTargetGraphCache to enhance flexibility in dependency
added a check for video formats in the parser conditionals to ensure that only video formats are processed further
doc : generate sample code in the java microgenerator ( # 419 )
added logic to load native libraries in LwjglNativesLoader to enable dynamic loading of native libraries based on the application context
added escape functionality to CSVRequestHandler and updated error handling in TestCSVLoader to enhance CSV parsing capabilities by allowing escaped characters to be properly processed
added validation for only AuthorizationCode grant types in ClientRegistrations . java and updated test methods in ClientRegistrationsTests . java to ensure only
enhanced error handling and exception messaging in Throwable and SuppressedExceptions classes to improve clarity of exceptions related to self - suppression
added a test for querying string values in DerivedTableIT . java and modified the constructor of OrderedResultIterator in ClientAggregatePlan . java to verify correct
added support for retrieving the R square value from the regression map in RegressionEvaluator and updated StreamExpressionTest to validate it to ensure accurate representation of
added handling for request headers in ThreadContextMDCServletFilter to enhance context attribute management by including request headers
refactor SparkPlanGenerator to use a local MapWork instance instead of casting to improve code readability and reduce casting overhead
refactor image retrieval logic to use a dedicated method for folder and country images to improve code readability and maintainability by centralizing image handling
updated caching logic in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuers in JwtIssuerAuthenticationManagerResolver
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test for
add a boolean parameter to interopinteroptype . get ( ) to make it easy to know if the function be a method or not .
updated sleep duration in AbstractBasicMockingIntegrationTest . java from 500ms to 500ms to ensure consistent timing behavior in mocking tests
added a new file KernCrash . java that implements a font rendering system with a Kerning effect to demonstrate the use of Kerning
added a failure assertion in LinkedHashTreeMapTest to ensure proper error handling during test execution
added a method ` getInterfaceAddresses ( boolean addPrefix ) ` to retrieve interface IP addresses based on a specified prefix to enhance network interface handling by
fix : do not cancel housekeeper task on shutdown
fixed - do n ' t include slave slave node if master slave node be not master slave node
refactor assertions in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to validate the functionality of the ` getTreeMap ` method in ` org . mapdb ` to
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
added validation to check if the person ' s year is a leap year to ensure that the person ' s year is a leap year in addition to the
added support for processing error responses in GrblController to enhance error handling by providing detailed error messages in the console
added a check for zero screens in the return statement to provide a default label when no screens are available to improve user experience by providing a more
removed the count parameter from the getTrades method and its usage in BittrexMarketDataService and BittrexMarketDataServiceRaw to simplify method signature
refactor ConsoleReader and MemoryHistory classes to improve code readability and ensure proper handling of null prompt values
updated jdkPath initialization to remove " . jdk " suffix to ensure correct file path format for proper directory resolution
replaced calls to ` input . getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` for better readability
update jfcmodel constructor to accept a logger
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is positive to prevent runtime errors
added methods to create and drop views in TestUtil to enhance database schema management by allowing dynamic view creation and deletion of views
added checks for stable floats and stability in NaNTest . java to ensure tests run correctly on non - X86 platforms
add desktop taskbar support
update searchmodfragment and moditemadapter to reflect progress change
refactor methods in Files . java to improve code readability and maintainability
refactor ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration ` to use ` Collection ` instead of ` Set `
refactor DomainAwareServicesManager to extend ServicesManager instead of DomainAwareServicesManager to simplify the interface and improve code structure
add some debug log for resourcepackloader .
fix : update gapic - generator - java version to 2.1 . 0 ( # 6022 )
added new methods ` grow ( ) ` and ` growY ( ) ` to ` Cell ` class to enhance functionality by allowing dynamic resizing of Cell
refactor bindings to use generics and simplify key binding logic to enhance type safety and improve code readability
resolve intermittent ci failure
replaced long arrays with byte arrays and added a memory fail count check in MetricsMemoryTester . java to improve memory management and prevent out - of - memory
deleted the JobParametersPrototype . java file to remove unused class to streamline the codebase
added a boolean field ` securityEnabled ` to the ` MappingsTable ` class and updated related methods to support security configuration in data connection handling
rename the constant APPLE _ SWIFT _ OBJC _ CG _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJC
changed DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable DUMP _ TO _ FILE functionality
do n ' t trigger eos propagation on a simulator simulator
[ java ] use logbufferdescriptor . isconnected instead of conditional check .
added a check for output options in BaseFormatter to ensure proper handling of cases where no output options are provided
disable ssl by default
added DOMOutputOptions and updated DOMSubtree method to use it to enhance DOM output options for better error handling
refactor assertions in Assert . java to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4705 - add ' retained ' field to
updated JSON serialization and error message formatting in EventSerializationTest . java to enhance clarity and consistency in test data representation
[ hotfix ] [ table - planner - blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink
pdfbox - 4071 : remove import that break the build
changed the visibility of ` sslCtxNativePointer ` and ` sslCtxNativePointer ` to private and added locking mechanisms to improve thread
updated conditions in AppModule . java and Watcher . java to check for non - empty cp and improved logging format to enhance code
[ flink - 20613 ] [ table - planner - blink ] [ table - planner - blink ] replace calcite - blink with
changed log level from debug to trace for firmware update handler to provide more detailed logging for debugging purposes
added unit tests for handling null values in date and timestamp in GetObjectTest . java to ensure correct handling of null values in database operations
refactor StringSubject and Subject classes to improve string handling and validation messages to enhance clarity and accuracy of error messages for better debugging and
added a test for retrieving repository permissions for multiple teams in UserModelTest . java to ensure correct handling of user repository permissions for multiple teams
added a new file ` Test7088020 . java ` that utilizes ` MethodHandles . lookup ( ) . findUnsafe ( ) `
refactor audience validation logic to use a set for audience URIs instead of a single audience restriction to improve clarity and maintainability of aud
refactor ` afterAppAuthChanged ` method to ` afterAppAuthChanged ` and update cache refresh logic in ` AbstractDataChangedListener `
updated stderr handling in StdErrLog . java to check for null values before assignment to improve robustness and avoid potential NullPointerExceptions
added a new constant SEPARATION _ ORDER and implemented stage count checks in BasicEventSimulationEngine to track the number of active stages in the simulation to
changed the parameter from offlineTableConfig to realtimeTableConfig to ensure the query optimizer uses the correct table configuration
updated PhoenixHBaseAccessor to include a host minute aggregation table split point configuration to enable or disable HBase normalization based on configuration settings
refactor SavepointV2 and FileStateHandle classes to improve code organization to enhance maintainability and readability
added Bluetooth Bluetooth class functionality to ShadowBluetoothDevice to enable testing of Bluetooth Bluetooth Bluetooth Bluetooth Bluetooth implementation
rename contains ( ) to containsprofile ( ) to avoid confusion
[ drools - 7078 ] support sum ( ) in feel function ( # 2217 )
updated method call from ` graphModel . getGraph ( ) . getUnlockAll ( ) ` to ` graph . readUnlockAll ( ) ` to
updated the construction of ` coreNodeName ` to use ` getCoreName ( ) ` instead of ` getNodeName ( ) ` to improve clarity and
add updatebackpressure to chatactivity to reduce memory usage .
refactor TaggerParserPosTagCompatibilityITest to improve clarity and structure to enhance code readability and maintainability
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to suppress tests related to SimpleText
updated condition in ` mmm Types . java ` and added new test cases in ` T7005671 . java ` to enhance type safety and
updated calculations for super triangles in DelaunayTriangulator . java and added a seed in DelaunayTriangulatorTest . java
added @ Override annotation to multiple Java classes to indicate that methods are overriding superclass methods
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability
updated the state management logic in StackOverflowCheckImpl . java to improve clarity and correctness of state transitions to ensure proper handling of yellow zone state transitions
added ` shadowOf ` and ` shadowOf ` methods to ` Robolectric ` , ` ContentValues ` , and ` SQLiteDatabase
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglCanvas ` and ` LwjglGraphics ` classes
replaced the ` bytesPerDim ` variable with a ` ArrayUtil . ByteArrayComparator ` for comparison to use ` ArrayUtil . ByteArrayComparator ` to improve
updated locale handling to include script and default locale properties to enhance localization support and ensure proper initialization of locale properties
updated the method to return the last set text alpha instead of the current text alpha to ensure the correct alpha value is returned for the last set text
corrected the spelling of " Confimap " to " ConfigMap " in the log warning message to improve clarity and accuracy of warning messages
replaced multiple test classes with a single call to ` UaaJunitTestSuiteRunner . allSuiteClasses ` to simplify the test suite by consolidating
trim whitespace from token parsing in GzipFilter and GzipFilterDefaultTest to ensure consistent formatting of token inputs
updated the initialization of the _ outputType variable to ensure consistent output type handling in response processing
updated the regex implementation from JDK to JONI to ensure compatibility with the latest regex framework requirements
replaced ` Handler ` with ` Executor ` and refactored task handling to use ` FutureTask ` instead of ` Handler ` to improve task
bugfix : ignore unknown voice value and return 0
added a check to ensure the parent directory exists before creating a folder in GitBlit . java to prevent the creation of a non - existent file in
change default bind IP from 0.0 . 0.0 to 127.0 . 0.0 to ensure compatibility with the new IP address format
fix typo in inonly camel workitem handler
pdfbox - 2852 : avoid npe , a suggest by valerybokov
updated class names and method names from WorkModeToggleContainer and WorkModeToggleContainer to WorkFooterContainer to WorkFooterContainer to improve clarity and consistency
refactor multiple Java files to improve code structure and organization to enhance maintainability and readability of the codebase
refactor : remove duplicate code in defaultjavaprettyprinter . java ( # 2130 )
added memory freeing in OperatorContext . java to ensure proper memory management and prevent memory leaks
updated string formatting in QueryByExamplePredicateBuilder . java and JpaPersistentPropertyImpl . java to improve clarity and consistency in output formatting
replaced long evictionCounter with AtomicLong evictionCounter and updated related methods to improve thread safety for eviction tracking
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWaitInJavaFXThread `
updated the condition in NetworkAddressManagerServiceImpl to check if the intended destination address is an Inet4Address to ensure correct type checking for the intended destination address
set the data and source root in the main frame ( # 241 )
added constructors to MarkedClientBootstrapConfiguration and AdminServerBootstrapConfiguration to log the enabled status of Solon Admin client and Solon Admin server
[ hotfix ] [ table ] fix typo in tableenvironment
updated statement timeout handling in MapperBuilderAssistant and MappedStatement classes to streamline timeout configuration to improve clarity and maintainability of the code
refactor hangingTscTimeout handling in JSweet transpilation classes to simplify method signatures and improve code readability to enhance maintainability by
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable proper serialization of GeoLocation requests and responses
updated Preconditions to check if the destination is a Build Artifact instead of a Source Artifact to ensure that only build and non - source artifacts are processed
tika - 3745 -- add unit test for jtl ( jtl )
[ giac ] do n ' t trigger concurrent modification in conditionals
do n ' t try to write to a pipe if there be no data available in the input stream
added a check for string equality in GuavaOptionalSubject and a corresponding test in GuavaOptionalSubjectTest to ensure that the hasValue method
updated visibility logic in BackgroundAppState and ShelfScrimView to improve UI responsiveness to enhance visual feedback during app state changes
added null check for nav parameter in MatDefEditorElement . java to prevent potential NullPointerExceptions during execution
mow - 945 : do n ' t draw pin image when not need
fix typo in errorocuredinonexception
[ astro ] use schedulewithfixeddelay instead of scheduleatfixedrate
simplified the initialization of irr and pemUnit variables in SinglePassAndImage - basedLightingLightingLightingLogic . java to improve code readability and
ignore test hang in jdbc
updated import statements in GuiceFactoryTest . java to include necessary dependencies to ensure proper functionality and error handling in the test setup
added methods to manage system features in ` RobolectricPackageManager ` to enhance functionality to support system features in tests
updated RCAFrameworkLoader to handle additional property paths and added a new test class forAugmentPathProperty to improve path property handling and ensure
added a log statement to indicate when the cancellation watchdog is started
added a null check to reset enumerationValues if it is empty to avoid potential NullPointerExceptions when handling empty enumeration values
renamed ` needInline ` to ` needStartText ` and updated related logic in ` BoxBuilder ` and ` InlineBoxing ` to
updated method name from ` collectAndSendTelemetryData ` to ` collectAndSendTelemetryDataAsynch ` and added a new method ` retrievePublicIP
removed conditional database type check before alter alter alter alter alter alter alter alter alter alter alter alter alter alter alter alter alter alter alter alter
updated error messages in BaseTableDataManager to provide clearer guidance on directory creation and permissions to improve clarity and guidance on directory creation errors
refactor DatasetUtilities class to improve code readability and maintainability
added a line to append the selector ID to the key to enhance the formatting of the selector key for better readability
corrected string concatenation syntax in GouraudShadingContext . java to improve code readability and maintain consistency in logging output
updated taskbar visibility handling in StashedHandleViewController and TaskbarDragLayerController to improve user experience by managing visibility based on device
updated the formatting of the KeyExchange class to improve code readability and maintainability
added a check for JdbcConnection before executing the version query in CockroachDatabase . java to ensure proper handling of JdbcConnection instances to
refactor file index handling in ServerMainTest . java to use a variable for file name to improve readability and maintainability of the test code
added ` getMediaRecorderingMimeType ` method to ` CodenameOneImplementation ` , ` MediaMediaMediaMediaMediaMediaMediaMedia media media media media
make shaderhelper . useshaders ( ) public instead of configs . useshaders ( ) .
[ calciteiteite ] dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr dr
updated ZkStateReader initialization in CloudSolrServer . java to improve code readability and maintainability
pdfbox - 4071 : disable external external entity in xmp meta parser
added a new interface ClientRegistrationIdentifierStrategy to provide a mechanism for retrieving client identifiers in OAuth2 client registration
replaced conditional check with while loop in UrlHelper . java to improve code readability and maintainability
renamed ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated related logic for varargs access to improve clarity
updated border property checks to use a new method ` borderIsNotSetOrBlank ` to enhance code readability and maintainability by introducing a
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager classes to reduce log verbosity and improve logging clarity
added ` HubRegisterResponse ` to the ` attachProjectToConnection ` method and updated related classes to utilize it to improve the handling of hub registration
replaced repetitive unsigned integer manipulation with Byte . toUnsignedInt in multiple Java files to ensure correct unsigned byte conversion and improve code clarity
updated the string concatenation syntax in OpenTracingTransactionProducer . java to improve code readability and maintain consistency
change caching configuration from ENABLED to CACHE to align caching behavior with caching standards
changed the ` rangePannable ` property from ` true ` to ` false ` in ` CategoryPlot . java ` to disable the range pannable feature
updated the logic for managing the current active view in AllAppsContainerView to ensure proper handling of the work mode switch to improve the user experience by
changed visibility of several fields in Visualizer2TopComponent . java to improve encapsulation and access control to enhance code clarity and maintainability by
added exception handling for CancellationException in FunctionTest . java to ensure graceful handling of CancellationException during execution
changed constructors in JarFileResource and JarResource classes to be protected to enhance access control to restrict instantiation of JarFileResource and J
[ hotfix ] [ doc ] fix typo in defaulttrackselector
added a loop to wait for unseq merging in LevelCompactionTsFileManagement to ensure proper synchronization during unseq merging operations
updated currency reference from AUD to BTC in BTCMarketsAdaptersTest . java to ensure accurate currency representation in test cases
updated import statements and modified test method names in HibernateDTOProjectionTest and JPADTOProjectionTest to enhance code clarity and ensure
refactor Unicode handling to improve code readability and maintainability
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added functionality to update Hive LLAP settings based on the service
added a call to ` delegate . onComplete ( ) ` in the ` SendHeadersFirstPublisher ` class to ensure proper completion handling of the task execution
use jackson jackson builder instead of json deserializer
added support for BIG _ DECIMAL data type in RangePredicateEvaluatorFactory to enhance type - based evaluation in data processing
refactor ` wrap ` methods to use ` javacProcessingEnvironment ` instead of ` inner ` to improve clarity and consistency in variable naming
added import for javax . lang . annotation . Annotation in ParameterInfo . java to print parameter annotations for better debugging and analysis
updated PlaybackController to include additional settings for direct playback and AC3 streaming to enhance user experience by allowing customizable playback settings and impro
added a map to return a JSON response containing the value as a JSON string to improve response handling by providing a structured JSON response
added @ SuppressWarnings ( " deprecation " ) annotation to DelegatingStatement . java and DiskFileItem . java to indicate that Commons DBCP
added a new test method ` testSelectInto ` to the ` IoTDBExtendTemplateIT ` class to verify the functionality of selecting templates
refactor RTimerTree class implementation to improve performance and readability of the code
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . buck
updated gapX calculation in mmm mmm mmm mmm mmm mmm mmm mmm mmm mmm mmm mmm m
added a new instance of QueuedThreadPool and updated the setScheduler method to include a name for the client pool and scheduler to improve clarity to en
updated visibility and layout of error logging components in ViewResultsFullVisualizer . java to improve code organization and enhance user interface clarity
added phone number fields to ScimUserEndpointDocs to enhance user documentation by including phone number information
added private constructor to prevent instantiation
added null checks for responseMap and responseMap in JsonHttpPropertyRequest . java and improved error logging in URLStreamProvider . java to enhance
refactor SolrRequestHandler class to improve code readability and maintainability
added a check for DEFAULT _ PARALLEL to the parallel condition in XmlSuite . java to ensure parallel execution only occurs when not explicitly set
bug 11105 : fix checkstyle violation in vmware test
added handling for SCARD _ E _ NO _ SMARTCARD error code in TerminalImpl . java to improve error handling for specific scenarios involving
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary logging during test execution
camel - 16400 : camel - bindy - allow to bind multiple key - value pair in the same key - value pair to bind
change the default value of useOwner and useTimeStamp from Boolean . TRUE to Boolean . FALSE in JabRefPreferences . java to disable the use of
updated method signatures to use ThrowingRunnable instead of Runnable to improve exception handling by utilizing a more specific exception type
added null checks for viaContext and pathFromSeed before hashing in CrawlURI . java to avoid potential NullPointerExceptions when viaContext and pathFrom
camel - 14868 - configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquibase
change default value of cert . validity to 90
added a new variable ` smoothDelta ` and modified return logic in ` ThreadHandler . java ` to incorporate a new variable ` smoothDelta `
added null checks for paginator and paginator in HttpBatchReader and HttpScanBatchCreator to enhance robustness by preventing potential Null
added null check for the ` ci ` client in ` Worker ` and implemented a test for ` findNextCompact ` method in ` TestWorker ` to
updated fragment state handling in ShadowFragmentActivity to ensure proper saving and restoration of instance state during fragment state changes
reformatted code for better readability to improve code clarity and maintainability
added a test for parsing simple Android color references to ensure that the color resource loader behaves as expected
added error handling for NoResultException in AbstractJPAQuery to improve robustness by logging exceptions when retrieving single results
added a null check for the owner object before adding a new community to the community community community community community community community community community community community community community community community
updated the way wallpaper depth effect is retrieved from LawnchairApp to ensure compatibility with LawnchairApp ' s application context
updated import statements in LocalManagementTest . java to ensure consistency in code formatting
updated the method signature of ` updateTotalEnergyAverageUsage ` to remove the ` now ` parameter and its usage parameter to simplify the method call to simplify
added null check for extensions and updated string concatenation logic in ExtensionStack . java to enhance robustness by preventing NullPointerExceptions during string
2 . x : fix flowable . flatmap issue ( # 4707 )
added connection timeout configuration to multiple classes to improve connection handling and error logging for better error reporting
reformatted the assignment of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to replace NewModelTest with ModelTest for better testing accuracy
replaced instances of ` SystemResourcesEdgeEventFetcher ` and ` TenantResourcesEdgeEventFetcher ` with ` TenantResourcesEdgeEventFetcher ` in `
added a test for output hash calculation when cache is not writable to ensure correct behavior when caching is not writable
camel - 18434 : camel - netty4 - use bytebuffers in camel - netty4
updated the method call to use the correct table name for altering partitions to ensure the correct table context is used for altering partitions
updated the exception message to clarify that the Vertx instance must be created with the preferred native transport option to ensure proper configuration for domain sockets
add test for colortypehandler serialization and deserialization
doc : fix javadoc typo in streamEx . java
added hints for query timeout and lock timeouts in SessionImpl . java to improve query performance by specifying timeouts for better resource management
added a new class ` StaticLoggerBinder ` to the ` org . slf4j . impl ` package to facilitate the use of a
removed redundant calls to ` familyMap . put ` in multiple classes to streamline the code by eliminating unnecessary duplication
added rotation support for window configuration changes to enhance flexibility in handling window orientation changes
fix jabber chat room not escape xml .
storedirect : add unit test for # 665
added @ SuppressWarnings ( " mutable " ) and @ SuppressWarnings ( " selfAssignment " ) annotations to multiple Java files to enhance type safety and
[ hotfix ] [ test ] fix compilation error in executionflowcontroltest
updated conditional checks in DLNAMediaInfo . java and FFMpeg . java , and improved array copying in DLNAResource . java to en
updated the ` NBWriteServlet ` and ` NBWriteListener ` constructors to accept a boolean parameter ` unlimited ` for better control over the unlimited
do n ' t update total difficulty when import light block
updated action logic in DefaultPlaybackController to simplify the handling of seek seek to seek to seek seek to the player player player player player player player player player
use copyonwritearraylist to avoid synchronization
added uniform adjustments to the bend angle calculation in AllAppsView . java to improve the visual appearance of the AllAppsView by adjusting
added a check for the presence of a colon in the key before validating the index to ensure that the index is valid before proceeding with further processing
added principal resolver to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance flexibility in multifact authentication metadata processing
replaced ObjectMapper with JSONParser for JSON handling to improve compatibility with newer JSON processing standards
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to ensure proper handling of trailing slashes in character input
added methods for pattern matching functionality in PatternsMatcher and corresponding tests in PatternsMatcherTest to enhance pattern matching capabilities and ensure correct behavior
hbase - 25854 : improve error message when bulk load fails
added block fading event for water potion ( # 1108 )
reformatted the method call in CellLayout . java for consistency to improve code readability and maintainability
updated the calculation of decreasePercent in ContractStateCapsule . java and adjusted formatting in ReceiptCapsule . java to improve code readability and maintain consistency in
added checks for readiness in AsyncContentProducer and BlockingContentProducer , and implemented a test for readiness in AsyncIOServletTest to
added a null check for the WEIGHT _ FIELD parameter in DocumentDictionaryFactory to ensure that the required parameter is provided to prevent runtime errors
added support for variable substitution for plist binary files in AppleBundle . java and a corresponding test in AppleTestIntegrationTest . java to enhance functionality to
fixed turret bullet not be able to be shoot .
added type casting for order adaptation in KucoinAdapters . java to ensure type safety and prevent potential ClassCastException during order processing
added a new file ` PreParseGrammarTest . java ` that implements a test for XML grammar parsing to validate the functionality of the XML grammar parsing
add ` ` doclint : missing ' ' to @ suppresswarnings ( ` ` doclint : missing ' ' )
added FontManager import and overridden font settings in ExtendedEditText to ensure consistent font management across the application
added null check for currentUser in AuthorizeTag . java and implemented a test case in AuthorizeTagTests . java to ensure proper handling of null
camel - 7442 fixed cxf endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint
added setUpData method to JDBCGeometryTestSetup class to implement custom data setup functionality
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ test ] do n ' t try to delete already cancelled restore task from backend restore procedure
allow the rmi registry to be create before run the test
replaced ` String . join ` with ` StringUtils . join ` for joining anticompactRanges to improve readability to enhance code clarity
updated display metrics handling and added new test cases for default qualifiers to improve accuracy of display metrics and ensure compatibility with SDK version 26
[ java ] add cluster member id to service heartbeat .
added a condition to set the number of attributes based on the major version of VersionCheck to ensure compatibility with versions 21 and above
updated the return logic in CustomExpression to handle NaN and NaN cases to ensure accurate representation of NaN and NaN values in the evaluation results
http : / / issues . apache . org / jira / browse / am am am am am am am am am am am am am am
added authentication and authorization routes to the Routes and AuthenticityController classes to enhance security and streamline authentication flow in the application
added an assertion to check if the node is alive in LoweringPhase . java and modified snippetTemplate . java to ensure node is alive before proceeding
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure correct logging context for the HttpClientRequestImpl class
[ scene2d . ui ] fix default track selection behavior in scene2d . ui
refactor RuntimeSerialization class to improve code readability and maintainability
mow - 169 : crop the image on the screen even if it be n ' t crop .
refactor UnitOfWorkFactory class to improve code organization to enhance maintainability and readability of the codebase
added a new field ` allAppsCellWidthPx ` and updated references to ` allAppsCellWidthPx ` in ` DeviceProfile ` and updated references
tika - 2250 -- fix npe in mailcontenthandler if contenttypefile be miss
updated URI construction in ThumbnailsCacheManager to use local file IDs instead of remote file paths to improve clarity and accuracy in thumbnail generation
added methods to mark and reset the input stream to ensure proper resource management and prevent potential memory leaks
added @ Deprecated annotations to multiple Java files to indicate that these classes are outdated and should not be used in new development environments
added configuration to control the visibility of error stack display on the error page to improve user experience by allowing toggling of error stack visibility
server : do n ' t delete template when delete template during domain cleanup
remove unnecessary null check in sparc tri lir generator .
[ drools - 1474 ] [ table - planner - blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink blink
refactor onPurchaseResponse method to use a Runnable for asynchronous execution to improve UI responsiveness by avoiding blocking the main thread
[ hotfix ] [ test ] increase default timeout for unboundedsourcesystemtest
replaced ` replace ` with ` if ` in ` ShadowAssetManager . java ` to ensure proper handling of resource paths to improve robustness by preventing
deleted MrefStat . java and MrefStat1 . java files to remove unused or redundant references to streamline the codebase
updated scope handling in DependencyInsight and DependencyInsight classes to ensure a default value is set when the requested scope is blank to improve robustness by
updated error handling in BTCETradeServiceRaw to use constant messages for error messages to improve code readability and maintainability
use hamcrest assertion instead of junit in test
bitcoinuri : add method to get payment protocol request url
planner - 383 : improve error message when use @ valuerange on a non - collection type
updated the method of setting folder information in FolderPagedView . java to ensure consistent handling of folder information
make jfrbuffernodenodenodenode lock acquisition more robust .
[ hotfix ] [ table - common ] [ table - common ] [ table - common ] fix nullpopopopopopopopopo
replaced NIO file handling with InputResource utility for reading linter configurations to improve compatibility with modern file I / O practices
replaced direct calls to ` updateBackgrounds ( ) ` and ` updatePaddings ( ) ` with a delayed execution in ` AppsContainerView
updated the parameters of the onInventoryTick tick method in Inventory . java to correct the order of tick tick tick tick tick tick tick tick tick tick tick
added case for OCELOT _ BABY in PlayerEvents . java to support OCELOT _ BABY functionality in the event handling
[ hotfix ] [ test ] add miss @ publice tag to state ttl config
added null checks for the variable ' x ' in PreparedStatement and PreparedStatement to ensure proper handling of null values to prevent potential null pointer exceptions
[ java ] update the archive archive archive archive archive archive archive archive archive archive archive archive archive archive archive .
corrected string concatenation syntax in StringBuilder . java to ensure proper formatting of output strings
added a new test method ` jsonSnapshot ` in ` SiteSnapshotVariationsTest . java ` to validate JSON serialization in ` SiteSnapshotVariationsTest
updated imports and refactored the test method to include cache invalidation in BroadTest . java to improve code organization and ensure proper cache invalidation
added support for enabling and disabling the LeLens mask in the IP camera handler to enhance user control over the visibility of the LeLens mask
removed NoSuchBuildTargetException from the ` getBuildTargetForFullyQualifiedTarget ` and ` resolveBuildTarget ` methods in ` BuckConfig ` and ` BuildRule
updated ChangeLogIterator to accept a list of change set filters instead of a list of change sets to enhance flexibility by allowing specification of change set
let polyglotlauncher handle guest exception .
fix : use system property instead of environment variable
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor space formatting logic in SpaceVisitor . java to improve code readability and reduce redundancy
add copy ( ) method to servercacheoptions
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to verify that a hidden border is not visible on a f
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator ` to ` TargetGraph `
replaced ` LIVE _ URI ` with ` PROD _ URI ` in ` KucoinExchange . java ` to ensure the correct URI is used
updated resource path handling in SpringResourceAccessor . java for improved clarity and consistency to enhance readability and maintainability of the code
updated unit tests for MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE _ CENT
replaced ` getMask ( ) ` method with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure the mask is
deleted the Tls12SocketFactory . java file to remove obsolete code that is no longer needed
refactor texentryresolver to avoid duplicate entry
added a method to check if the Robolectric framework is in legacy mode to ensure compatibility with Robolectric ' s runtime environment to en
added a check to return a DatabaseDataType for FirebirdDatabase instances to ensure proper handling of double precision in database operations
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553 : avoid npe
add a package - info . java file for the test package
updated ping command from " ping - c 5 www " to " ping - c : : ping - c : : ping - c : : ping -
no effective change - code cleanup
updated TermScorer instantiation to conditionally use FREQS based on score requirements to enhance flexibility in score handling based on user preferences
[ hotfix ] fix nullpointerexception in dataflowmetricstest
server : do n ' t list nics in case of host
refactor DynamicPartitionPruner to use a helper method for object inspection to improve code clarity and maintainability by centralizing object inspector
added a method to remove build artifacts for specified outputs in the ArtifactFilesystem class and corresponding tests in ActionExecutionStep and ActionExecutionStepTest to
added functionality to select a row in the table to enhance user experience by allowing dynamic selection of rows in the table
rename assertthrows to assertarraystoreexception to avoid confusion
refactor PropertySource class to improve code readability and maintainability
added environmentName and user agent support in HttpClientBuilder and HttpClientConfiguration to enhance HttpClient configuration flexibility by allowing customizable user agent handling
refactor session creation logic into a separate ` restore ` method to improve code readability and maintainability to streamline session restoration process
updated assertions in ` IssueTest . java ` and changed ` results ` type from ` HashSet ` to ` Set < Object > ` in ` Reporter
modified ByteArrayDataSource initialization to handle null content type gracefully to ensure a default content type is used when file content is null
add event handling for onActivationRequestDenied
updated graph rendering logic in GraphApplet . java to correct calculations and improve code clarity
added a method ` updateTaskViewsSnapshotRadius ( ) ` in ` RecentsView ` and updated its invocation in ` TaskView ` to ensure
[ scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb
changed return type of the put method from void to int in ArrayMap . java to enable method chaining for better usability
updated Kafka container configuration and improved error handling in KafkaContainerCluster . java and KafkaContainerClusterTest . java to enhance clarity
http : / / issues . apache . org / jira / jira / browse / amq - 4737 - do n ' t retry
updated header checking logic in StaticServerHttpHeadersWriter to handle duplicate headers correctly to ensure that headers are not written in a case - insensitive manner to improve
added package access check before adding classes to enhance security by enforcing package access
added a custom adapter for the application list in the ApplicationsFragment and created a CustomAdapter class to enhance the app ' s UI by
added null checks for task parameter in applyIcon method to enhance robustness by preventing potential null pointer exceptions during icon application
updated DownloadStateCursor to use try - with - resources for resource management to ensure proper closing of resources to prevent memory leaks
[ calcite - 1474 ] optimize sqlsql to sqlsql to sqlsql ( fix bug )
added JUnit test annotations to HibernateCursorItemReader and HibernateCursorItemReaderStatefulIntegrationTests and HibernateCursorItemReaderStatefulIntegrationTests to
refactor DataInputStreamWithTimeout to use a Poller class and improve error handling to enhance thread safety and ensure proper resource management during input stream
added ENABLED _ TS functionality to VersionTargetGraphMode and VersionTargetGraphCache to enable parallel processing of dependencies in parallel
refactor UpgradeCatalog150 class to improve code structure to enhance maintainability and readability of the code
rename networkparameters . testnet3 to networkparameters . oldtestnet
do n ' t update property view if there be no selection
updated onboarding preferences handling in AppsDividerView . java to improve readability and ensure null safety when accessing onboarding preferences
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling during resource closure to improve resource management and ensure proper resource cleanup
pdfbox - 3353 : do n ' t set a clip if the clip be already do
removed unnecessary synchronization for local address assignment in SocketChannelImpl . java to simplify the code logic to improve readability and maintainability of the code
added a new method ` addToRow ` to handle multi - valued values in ` TemplateTransformer ` and a corresponding test in ` TestTemplate
added a method ` isWindows ( ) ` to check if the operating system is Windows and modified file renaming logic to enhance compatibility with Windows file
replaced ` ALPHABET _ STRING ` with ` CHECK _ DIGIT _ STRING ` in ` Code39Reader ` and ` ASTersk _ ENCODING `
improve error handling for unrecognized types in node generation .
removed unnecessary check for stored string length in IndexingChain . java to streamline error handling for string length validation
fix ( sql ) : fix nosuchelementexception for nan in timestamp
removed the conditional check for posting runnable stack traces before adding to the runnables list to simplify the stack trace handling in the application
reformatted the description of the AbstractGCSProcessor class to improve readability to enhance code clarity and maintainability of the codebase
replaced ` assertInitialized ` method with ` waitUntil ` in ` ConnectionPoolTest ` to use ` waitUntil ` instead of ` assertInitialized ` to
updated directory parameters in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use " single " mode to ensure consistent behavior across directory retrieval methods
refactor FaultTolerantChunkProcessor to simplify data handling and improve filter count management to enhance code readability and maintainability by simplifying data
updated tabbedMethod method implementation and improved error handling in T4994049 . java to enhance code clarity and ensure proper file
refactor ConsoleReaderTest to use JUnit ' s assumeTrue method instead of a static return statement to improve code readability and reduce repetitive
remove admin check from getfeedbacksessions action
updated selection logic in AllAppsView . java to adjust the selection criteria for page page page page page page page page page
do n ' t call ` ti . initialize ( true ) ` if not need
added model list loading and refactored database connection handling in DataModelManagerDialog , DbConnectionDialog , and ExportPanel to improve data model
changed ` writeBufferSize ` to ` WRITE _ BUFFER _ SIZE ` and refactored constructor calls to use ` String . valueOf ` for better
refactor segment size calculation in DocumentsWriter . java and add a test for no documents index in TestIndexWriter . java to improve code clarity
[ blender ] fix an issue where the dvert field be n ' t work correctly .
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
avoid fill in stack trace in applyspecialization
updated the method to return an average line height instead of a fixed value to improve accuracy of label height calculations
updated RotationTouchHelper to accept a DisplayHolder as a parameter to improve flexibility in handling display - related instances
updated the loop condition in AVA . java to include a check for already quoted strings before processing to ensure proper handling of quoted strings to avoid unnecessary processing
replaced ` Long . valueOf ( s , 16 ) ` with ` IdConversion . convertToLong ( s ) ` in ` ServletHandlerInterceptor .
renamed the method ` name ( ) ` to ` testSmall ( ) ` and added a new test method ` testBig ( ) `
updated assertions in TestSqlEntityProcessorDelta . java to use the correct array index for the COUNTRY _ CODE _ S substring substring substring to ensure
refactor Cache class to improve code readability and maintainability
updated variable names and set scopes in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in variable naming conventions
updated the doBefore method to include an additional parameter and improved readability to enhance code clarity and ensure consistent handling of the counting logic
added a JTable component to display the number of rows in a JTable to enhance the user interface by allowing users to view the number
updated the WebApp connection timeout from a constant to a configurable value to enhance flexibility by allowing dynamic configuration of the connection timeout
updated various classes to enhance error handling and improve code clarity to ensure proper encoding of request paths and enhance type safety
updated TestMediaService . java file to improve test coverage and functionality
removed the static string for user GUID link in the application to streamline user authentication process by eliminating unused links
add a new file MarketsPrintTool . java for printing market currencies to standardize currency formatting and improve code organization
added hostname compliance validation for components in EndpointAddressInterceptor to ensure only valid components comply with hostname requirements and improve error handling
added methods to register and complete security keys in AccountProxy and HttpAccount classes to enhance security key registration functionality for improved authentication handling
refactor ServerSpanThreadBinder for improved clarity to enhance maintainability and readability of the code
updated userObject reference and modified block bounds calculations in BulletPhysics . java and BlockItemSystem . java to improve code clarity and ensure proper handling
feedback from andrea and fix up the tutorial text to match
replaced calls to ` callGasWord ` with ` gasCost ` in VM . java and removed unused imports in Program . java and Program . java to
refactor Parameters class to improve code readability and maintainability
added a method to ignore null values in piePlot to enhance data integrity by preventing null values from being processed
refactor resource bundle loading logic to improve clarity and structure to enhance maintainability and readability of the code
updated tag name from underscores to hyphenate to improve readability
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 453 . fix # 4
added a userModified flag to the LoginSamlAuthenticationProvider class to enable user modifications during authentication
added a new file ` TestSealedObjectNull . java ` that tests the behavior of a ` SealedObject ` to ensure that the ` Sealed
replaced ` onOpen ` method with ` setResponse ` and ` succeeded ` methods in ` ConnectPromise ` and ` succeeded ` methods in ` WebSocketClient
added SNOW support for server version 1.16 . 5 in BlockEventListener . java to ensure compatibility with server versions below 1.17 . 5
added trade ID handling to CryptsyAdapters and CryptsyPublicTrade classes to ensure trades are stored in a unique identifier
added error handling for closing HMS connection to ensure proper resource management and logging
updated seed handling in GlowServer . java to use a random seed to improve seed generation logic and handle potential NumberFormatException
updated device profiles in DynamicGrid . java to include new device profiles to enhance functionality and improve user experience
2 . x : fix reference count not be reset on disconnect ( # 4708 )
replaced direct instantiation of SynthContext with ReflectUtil ' s newInstance method to improve compatibility with reflective programming
# 4635 : add support for whitespace _ around _ binary _ oops ( # 4635 )
updated file existence and write file checks in SaveTask . java and added tests in SaveAndLoadTaskTest . java to ensure proper handling of
added synchronized keyword to multiple methods in MLogWriter to ensure thread safety during concurrent access to these methods
log4j2 - 1343 fixed add ( log4j2 . log4j2 . log4j2 . log4j2 .
replaced ` LengthLike ( ) ` with ` NonNegativeLengthLike ( ) ` for the ` PADDING ` constant in ` PrimitivePropertyBuilder ` to
replace calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( context ) ` in multiple resource classes to simplify context creation by
improve exception handling for jimple catch
updated JUnitRunner and AndroidPlatformTarget classes to utilize Joiner for string concatenation to enhance clarity in error messages to improve readability and
reduced memory size from 16 to 8 to optimize memory usage for better performance
added a condition to check if start is 0 in InvocationStageTrace . java and updated test data format in TestInvocationPublishModelFactory . java
add a try - catch block to handle potential null pointer exception
updated server socket initialization and port handling in UpstreamCheckUtilsTest to improve test reliability by using dynamic port assignment to enhance test reliability by
ggb - 2088 : fix for bug with new spreadsheet file in spreadsheet file
* add shader and tessellation shader and tessellation support to glrenderer
refactor PopulatorContext class to improve code readability and maintainability
do n ' t send save all notification if project be not change ( # 662 )
updated ZQLJob class to use IOUtils for string conversion to improve code readability and maintainability by utilizing IOUtils for better handling of character
added a check for ` args [ args [ 0 ] ] ` in ` IkStepDefinition . java ` to ensure ` args [ 0 ] `
updated header initialization to use a constant prefix to improve code maintainability and reduce hardcoding of constant values
deprecate the ` ` suffix - strategy ' ' command - line option in ` ` grad grad grad grad grad grad grad grad grad - grad grad grad
removed debug log statements from DerbyDatabase . java to clean up the code and improve logging clarity
updated test cases in CepEspTest . java and CepJavaTypeTest . java to include a timeout mechanism to improve test stability by
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance and reduce execution time
updated HubUpdater . java to use case - insensitive comparison for operation type and improved error handling to ensure consistency in operation type and enhance
added constants for coreinfo version keys and a test for the Eclipse OpenJ9 VM version to enhance code clarity and ensure correct handling of
refactor font handling in FontFamily and introduce DebugFonts class to improve clarity in logging messages and facilitate debugging of font requests
updated import statements in ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java to utilize HttpVersion . HTTP _ 1
added RateControl configuration in MaxConcurrentStreamsTest to ensure no rate control occurs during HTTP / 2 stream processing
added a new file ` Test6741426 . java ` that implements a custom ` JComboBox ` with a custom ` JTextField ` to demonstrate
updated error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest to include exception details to improve clarity of error messages for better debugging
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure directories are only created if they are not null
fix : move s3 copy request to correct package
refactor setup methods to remove accentColor dependency and use viewThemeUtils for styling to simplify code and improve maintainability by utilizing
fix temporaryfolderusagetest on window ( # 1428 )
replaced instances of ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation . LIST ` for
add check for empty or null address in client config ( # 18888 )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to include the " keynectisrootca [ j
update compute method to return the size of output batch instead of void
added a condition to check if the popup is showing before setting the menu mode to ensure menu mode is only set when the popup is not interactive
pdfbox - 4892 : fix off - by - one error , a suggest by valerybokov
added a new test class ` FinalizerInfoTest ` for testing the ` finalizer ` functionality to ensure proper handling of object finalization and
use donext instead of map to avoid concurrentmodificationexception
modify burningman service to support custom address
refactor StringSubject class to improve code readability and maintainability
increased the size of longData from 1MI to 1000MI and added an @ Ignore annotation to the BatchValidateSignContractTest class to temporarily disable
updated the method name from ` setmaxInboundMetadataSize ` to ` setmaxInboundMetadataSize ` to ensure consistency in method naming
updated query handling to replace " from : " with " from : " in RetweetActivity . java and Search . java to ensure correct search suggestions are
modified conditional logic in SimulatorDiscoverer . java to ensure proper handling of rebalance scenarios
added an import statement for YubiKeyAccount and implemented an import method in YubiKeyAccountRegistryEndpoint . java to facilitate the
refactor material parameter names from " texture " to " tex " across multiple classes to improve clarity and consistency in shader parameter naming
added null checks for ` cnt ` and ` cnt ` in ` paintOnTopLoop ` and ` SideMenuBar ` classes to prevent potential ` NullPointerException `
refactor AbiWriterProtocol class to improve code readability and maintainability
added null check for subName before assigning caption to caption to avoid potential null pointer exceptions when subName is null
change the data flag from IMMOBILE to GRAVITY in the EntityItem class to align the data flag with the intended functionality
refactor condition checks in CustomExpression . java for improved clarity and correctness to enhance code readability and prevent potential null pointer exceptions
replace the requestBlindVoteListFromNetwork method with a call to sendRepublishRequest ( missingDataRequestService . sendRepublishRequest ( )
test : add test case for postgres
updated substring logic in SubtitleUtils . java and RemoteUtil . java to improve code readability and consistency in character handling
updated line separator handling in DefaultJavaPrettyPrinter to improve code readability and maintainability by using a constant for line separator to enhance maintainability by
truffle / truffle - api / truffle - core / truffle - api - truffle - api - truffle - api - truffle
added a null check before adding to the query list in SimpleFacets . java to avoid adding duplicate entries to the query list
add bridge to the list of thing that should be include in the thumbnail
replaced printHelp ( ) method calls with error handling in Ktab . java to improve error reporting for unknown commands
added a check for the existence of the output file before returning it to avoid unnecessary processing if the output file does not exist
patch submit by thomas cassandraandraandraandraandraandraandraandraandraandraandraandraandraandraandraandraandraandraandraandraandraandra
added a method to find posts based on their UUID to enhance data retrieval capabilities in the application
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related error handling logic to improve
added a SimpleClientHttpRequestFactory to set connection and read timeout settings to improve request handling and ensure proper connection management
updated file path handling in SourceTest . java and added assertions in SourceTest . java to improve test coverage and ensure correct file path validation in tests
make graalvm . version system property configurable .
added expiration checks for access and refresh token validity to ensure proper handling of access and refresh token validity
updated the logic for determining the Android SDK version based on the Android API version to ensure compatibility with different Android API versions
updated variable names and method calls in PropertyPlaceholderHelper . java for consistency to improve code readability and maintainability
updated the formatting of certificate fingerprint strings in Resources . java to improve readability and consistency in the output format
solr - 12028 : fix race condition in zksolrclienttest
added BigInteger type to simpleTypes to enable support for BigInteger data type handling in MongoDB mapping context
added a condition to check if the button text equals the string resource to ensure toast notifications are only shown when the button text matches the expected value
added a condition to check if MEncoder is disabled and Noskip is disabled to ensure compatibility with MEncoder when MEncoder is not synchronized
reduce default event loop thread count to 15
changed access modifiers of classes and methods in CountMin4 , IncrementalResetCountMin4 , and AdaptiveWindowTinyLfuPolicy to
added sorting functionality to ExternalFileField and created a new test class ExternalFileFieldSortTest to enhance file sorting capabilities and improve test coverage
updated error handling in FetcherException to provide clearer context for connection issues
updated event handling in OpenRocketSaver to include source ID to enhance event tracking by associating events with their IDs
changed the access modifier of the check method from private to protected to allow subclass access to the check method
added synchronization handling for file operations in FileActivity to improve user experience by providing feedback on file synchronization status
updated the URI construction in ThumbnailsCacheManager to use URLEncoder for generating resized images to enhance security by preventing special characters from being processed
added a check for null client property in InfiniteContainer . java to prevent further processing when the client property is not initialized
updated the total variable from 0 to 1 and modified the addition logic in the IntHashSet class to ensure correct total value calculation and improve performance
added a lock timeout check before updating feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed feed
refactor ACE handling logic in SolarisAclFileAttributeView . java to improve code clarity and ensure proper handling of ACE - related flags to en
refactor edge handling in LatLonTree to use a sorted array to improve the efficiency and readability of the code
added IOUtils for resource closing in ZkCLI . java to ensure proper resource management and avoid potential resource leaks
fix a bug in the bibtex parser that cause it to fail to parse a comment with unicode escape
added strict property handling in Main . java and corresponding test cases in MainTest . java to ensure that unknown arguments are ignored based on strict configuration
add alwaysinvalidconstraint annotation to allow custom constraint
camel - 7999 fixed the unit test error of camel - http4
added a call to waitForThingsToLevelOut ( 30000 ) in TestCloudPivotFacet . java to wait for thread termination to ensure that the thread
removed duplicate code for writing bytes in UBJsonWriter to streamline code for better readability and maintainability
refactor ApplicationTest class to improve test readability and maintainability
replaced ` String ` with ` StringBuffer ` for managing ` details ` to improve performance and readability to enhance performance by avoiding unnecessary string concatenation
replaced instances of ` Type ` with ` RoboType ` across multiple Java files to enhance clarity and specificity regarding the type of
[ java ] : do n ' t submit submit submit submit submit submit submit submit submit submit submit submit submit submit submit submit submit submit submit submit submit submit
hhh - 16664 - fix cache issue in where clause
added a new file ` PutfieldError . java ` that demonstrates handling of ` IncompatibleClassChangeError ` with a try - catch block to
cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
add extra log for memtable flush
replaced instances of ` space . build ( ) ` with ` space . SINGLE _ SPACE ` across multiple Java files to standardize the space
removed redundant method call to encodedLength ( ) in Flyweight . java to streamline code by eliminating unnecessary duplication
refactor TestMethodResultMapBuilder class to improve code readability and maintainability
added handling for ` java . lang . Integer ` and ` java . lang . RuntimeException ` exceptions in ` FindNullDeref . java ` to improve
[ hotfix ] [ test ] remove unused constructor in tasklocalstatestoreimpl
updated return values in mmm mmm Utils . java and ppp Utils . java to return appropriate string representations to enhance clarity and
updated type checks for ` fromDeepShortcutView ` and ` FloatingIconView ` in ` Utilities . java ` and ` FloatingIconView . java `
updated JwtIssuerValidator to use Predicate < Object > instead of String for issuer validation to improve type safety and flexibility in issuer validation logic
renamed methods for buy and sell quick rate retrieval to improve clarity and consistency in naming conventions
added a new configuration class ` CoverageConfig ` and refactored ` CoverageController ` to use it to improve code organization and maintainability by centralizing
added a check to prevent adding the same instance to the event bus to ensure the same instance is registered only once
added ASCII - only checks for string normalization to ensure only valid ASCII strings are processed
[ hotfix ] [ coordination ] fix checkstyle violation in job coordination service
added error handling for SQL update in SpillableGroupByIT and NoOpStatsCollectorIT to ensure proper exception handling for SQL update failures
( chore ) camel - cometd : migrate cometd test to junit4
updated HTML tag attributes in HtmlTag . java to align with HTML5 standards in HTML5 and HTML5 to ensure compatibility with HTML5 standards
added a br tag to the HTML report to enhance the readability of the report by including additional content
updated ramBytesUsed calculation to handle null scores gracefully to avoid potential NullPointerException when scores are not provided
added Gson serialization and deserialization support for StringHolder in CustomTypeAdaptersTest . java to enhance JSON serialization and deserialization capabilities for collection elements
add extra data to mining parameter when use mining
added a static final map to track the number of arguments passed to the ` argsToProperties ` method to ensure consistent handling of argument parsing
refactor PathParamServerEndpointConfig class to improve code readability and maintainability
updated migration rule listener to use a constant for migration delay time to improve code readability and maintainability
updated parameter names from ' part ' to ' partOrList ' in multiple classes to improve clarity and consistency in parameter naming
updated resource names in TwitterBootstrapUtils . java to use " twitterbootstrap " instead of " bootstrap " to improve clarity and organization of
spanish treebank language packing : remove unused code
hhh - 11446 : deprecate entityloader . loadbyuniquekey ( ) in favor of entityloader . loadbyuniquekey ( )
hbase - 20909 [ hbase - 20909 ] [ hbase - 20909 ] [ hbase - 20909 ]
use super . setsize if width or height be zero
no functional change - code cleanup
replaced the assureMatchVersion ( ) method calls with a default value of Version . LATEST in multiple filter factory classes to ensure consistency across filter
fix ` ` abstract ' ' method not work in aop client
jbrules - 2635 : fixing drl parser to handle space properly
updated various optional subject classes to improve clarity and consistency in naming conventions
throw an exception if payload length be negative .
moved PublishSubscribeChannel and PublishSubscribeChannelParser classes from the ' channel ' package to ' org . springframework . integration . channel ' to the '
updated various classes to use Long instead of String for execution IDs to improve type consistency and ensure proper handling of execution IDs
added bitwise bitwise operations to the digest digest digest digest algorithm to enhance security by ensuring the digest digest digest algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm algorithm
added import statements and logging in SolrConfig and SolrConfigHandler to enhance logging functionality and improve logging in SolrConfig and SolrConfigHandler to ensure proper
updated delayUntil calculation in FileSyncAdapter . java to improve synchronization efficiency by adjusting time delay based on current time
updated the assignment of afterConversionTime in SegmentV1V2ToV3FormatConverterTest . java to ensure consistency in file path handling
refactor ` addPathToMTree ` and ` addTimeSeries ` methods to use ` Path ` objects instead of string concatenation to improve code clarity and
added URI handling and improved error logging in DefaultPackageScanClassResolver . java and DefaultPackageScanClassResolverTest . java to enhance
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
added a new file ` SpringSecurityAuthenticationSource . java ` to implement ` AuthenticationSource ` for handling LDAP authentication to facilitate the retrieval
refactor AbstractConcurrentArrayQueue , ManyToOneRingBuffer , and ManyToOneRingBuffer classes to improve code organization and maintainability
updated minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager to ensure compatibility with KitKat features
replaced auto - suggest dialog with a simple form dialog to improve user experience by using cached file name suggestions
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest . java `
updated the parameter order of the stream method parameter in the stream method to improve clarity and consistency in parameter usage
fix zoom scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale scale
added similarity support to KNearestNeighborClassifier and updated related test cases to enhance classification accuracy by allowing custom similarity configurations
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to simplify query parsing to enhance code readability and maintainability by using a
replace ` lowResourceCheck . toString ( ) ` with ` lowResourceCheck . getReason ( ) ` in ` LowResourceMonitor . java ` to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated ShadowBluetoothGattTest and ShadowBluetoothMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorMotorTest to
refactor the creation of ` ServletInputStream ` in ` TestPayloadNameRequestWrapper ` to use a new method ` createServletOutputStream ( ) ` to
added logging for UnsatisfiedLinkError in VoskService to improve debugging and error handling in case of UnsatisfiedLinkError
replaced HashMap with ConcurrentHashMap in ChannelProcessingManager to ensure thread - safe access to the processing chains map
updated Japanese resource strings in Resources _ ja . java to improve clarity and accuracy of localized messages
updated conditional logic in JDBCTypeMapping and JDBCTypeMappingTest classes to correct the size check to ensure correct handling of size and type mappings to
added synchronized keyword to add and remove player methods in GenshinScene . java to ensure thread safety when modifying player actions
add fix for check accessibility state on background thread and compile the regex pattern only once
updated condition checks in MenuBar . java and SideMenuBar . java to include SIDE _ NAVAVIGATION to ensure proper handling of
removed the Disposable variable and added logging in WampStreamingService to improve code clarity and enhance error handling for disconnection events
updated validation for energy limit contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract
updated PostmanJsonBuilder to utilize javaUrl for URL handling and added protocol support in UrlBean to enhance code clarity and ensure correct protocol
camel - 14284 : camel - soap - xml - dsl - add get / setters / setters for the namespaceprefixref property
updated assertions in TestRange . java to use a new utility method isSameDay for date comparison to improve code readability and maintainability by
added logic to restart the Jetty Solr server if no server is found to enhance security checks in BasicAuthIntegrationTest . java to ensure that
fix # 1478
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a local variable for replication configuration
updated variable names and logic in NativeString . java to improve clarity and ensure correct handling of the end index in search operations to enhance code read
added file download functionality to FileDownloader to enable users to download files efficiently
refactor log file handling in MappedRawLog . java to use a separate RandomAccessFile variable to improve code readability and ensure proper file length
added a method to check if a registry is running and implemented a retry logic for file deletion to enhance reliability by allowing file deletion with retries on
updated import statements in EditTest , Quick3dMain , TextureTest , and TextureTest classes to streamline component loading process to improve code clarity
removed unused variables and added suppressions in multiple Java files to improve code clarity and suppress unnecessary warnings
added a null check for instances in TraceFeignContext to prevent potential NullPointerExceptions when accessing instance data
phoenix - 4892 add transaction _ must _ be _ set _ isolation _ level error message to phoenixconnection
added transaction handling to AbstractStepFactoryBean and improved error handling in ItemOrientedStep to enhance transaction management and ensure proper rollback behavior
updated ` CasManagementWebAppConfiguration ` to use ` DirectCasClient ` instead of ` CasClient ` and refactored security
added functionality to edit the drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer drawer
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated method names in ` FileDisplayActivity
pdfbox - 2576 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve clarity and accuracy in font size retrieval to ensure the correct text size is used for
do n ' t throw illegalargumentexception if the fact be invalid .
refactor multiple Java files related to target graph handling to improve code organization and maintainability
replace return statement to return a new ArrayList instance instead of returning a null value to ensure that the returned value is immutable
removed locking mechanism and simplified database change log parsing in Liquibase . java to improve code readability and maintainability
[ scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb
updated foreign key and index handling logic in TableRetriever and AbstractRetriever classes to improve clarity and consistency in foreign key and index management
camel - 14552 - add unit test for aws2 - s3 component
removed unnecessary currency pair parameter from getUserTransactions method to simplify the method signature for better usability
added a try - catch block to handle NoSuchComponentException when retrieving component instances to improve robustness by returning null when the component instance does not exist
implement push token to enable push functionality
refactor LegacyAddressTest to use BufferedReader for testing to improve readability and maintainability of the test code
changed the visibility of findDropTargetAt method from package - private to public to allow access to findDropTargetAt from other classes
refactor Snackbar handling in NotificationsActivity and DrawerActivity to improve code organization and enhance push notification management
close the channel in case of an exception .
updated null and empty checks in LdapPasswordPolicyEnforcer . java to use StringUtils . isEmpty for better readability to improve code clarity
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability
added an @ Ignore annotation to MemoryManagerTest . java to mark the test as ignored due to an issue mentioned in PHOENIX - 28
nifi - 1478 added timezone adapter to the nifi web api
updated assertions in Splitter . java and StorageService . java to improve error handling and ensure proper range splitting based on the number of tokens
no functional change - code cleanup
added synchronization to active circuit management in CircuitManagerImpl . java to ensure thread safety when adding and notifying active circuit instances
replaced GdxRuntimeException with IllegalStateException when attempting to fetch uniform from uncompiled shader to improve error handling by providing a more specific exception
flume - 278 : move sink and source from eventdrivensourcerunner to sourcerunner
replaced error logging with info logging in FastBindLdapAuthenticationHandler to improve clarity of error messages during authentication failure
refactor ContainerOrderFocusTraversalPolicy class to improve code readability and maintainability
make getpointlength return int instead of double
formatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor database connection handling to ensure proper closure of the database connection to improve resource management and prevent potential memory leaks
update default tl protocol to support jdk 17
updated error messages for counter allocation failures in CountersManager . java to improve clarity and accuracy of error reporting
updated conditional logic in MediaManager . java to correctly handle audio queue position to ensure proper audio playback to prevent audio playback when the audio queue is empty
updated debug logging to include cancelled status to improve clarity of log output during connection upgrades
added support for JPA transient fields in JpaPersistentPropertyImpl to ensure proper handling of transient fields in persistence persistence
updated assertions in UpgradeResourceProviderTest to reflect the correct stack version to ensure tests reflect the new version of HDP - 2.1 and HDP
truffle : make eval method return object instead of symbol
make isbinarytype public instead of private
updated the configuration of TEZ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE from " hive . tez . dynamic .
remove javaparser # findproblem ( ) since it ' s not use
replaced ` DictionaryIndexConfig . DEFAULT _ OFFHEAP ` with ` DictionaryIndexConfig . DEFAULT ` in ` DictionaryIndexConfig ` and ` DictionaryIndexConfig
refactor table writer test to use system property for line separator
refactor DebugHelper class to improve code readability and maintainability
added a boolean flag ` ownsTexture ` to the ` ParticleEffect ` class to check if the texture owns the texture before proceeding to prevent further processing
added additional LDAP configurations to HiveConf to enhance authentication options for LDAP connections
updated import statements in DatacatalogLookupEntry . java , DatacatalogLookupEntrySqlResource . java , DatacatalogLookupEntrySqlResource . java , and
updated conditional logic in DetailActivity to include SHOW _ FORFORFORFORFORFORFORFORFORFORFORFORFORFORFORFORFORFORFOR
added a test for converting a data type to a map of integer - to - map of Piece to a map of string to Piece
updated the size calculation in TestFileSystem from 100 , 500 , 000 , 000 , 000 to 10 , 000 , 000 to 10 , 000 , 000 to
updated error message formatting in ContentTypeManager . java to improve clarity and accuracy of error reporting for better user experience
added ` MigrationFailedException ` to ` dropSequences ` method across multiple database classes to ensure proper exception handling during sequence drop operations
added a null check for the status variable to prevent potential NullPointerExceptions during execution
refactor the instantiation of binaryField to use a local variable f to improve code readability and maintainability
bug fix : if the node be not active , do not add it to the hierarchy
added a new test method ` findOneAfterUpsertsertsertsertsertsertsertsertsertsertsertsertsertsertsertsertsertsertsertsert
updated calculations for mid values in multiple classes to ensure correct computation of mid values to avoid potential errors
added logging functionality and refactored shortcut handling in the Launcher and Stats classes to improve tracking and management of app launches for better analy
added graphics drawing functionality and disposal in JavaSEPort . java to improve rendering performance and resource management
update instructorfeedbackresultspage to handle empty team
added a check for zero or zero values in the inventory ID handling to ensure that zero values are handled correctly in the Inventory class
added a null check for the found variable before breaking the loop to ensure that the loop does not proceed under certain conditions
updated method parameters in multiple parser visitor classes to handle null returnType values to improve robustness by preventing potential null pointer exceptions
updated initialization of tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile tile
added multiple @ Classes and sunClasses annotations to the Probe class to enhance compatibility with various Java class implementations
refactor getArea method in IfcTools2D . java to improve accuracy of area calculation and handle potential null pointer exceptions
updated the initialization of ` lockOnSync ` and ` lockOnSync ` to use ` key ` instead of ` this ` to improve clarity and
fix pipeeventbus . onactionactivate ( ) and pipeeventbus . onactionactivate ( ) .
updated ZkController initialization parameters to ensure proper timeout duration for ZkController operations
added a test for passcode with client parameters in TokenMvcMockTests . java to ensure correct handling and retrieval of passcode parameters in the
added ` brokenOffsetsConstructors ` and ` brokenOffsetsConstructors ` to ` TestRandomChains . java ` to enhance functionality to support additional text processing options
removed JUnit Ignore annotation from RandomPlaneTest . java to streamline test code by eliminating unnecessary imports
fix : use unsigned long instead of int in llvm backend
replaced direct object creation with getInstance method in btCollisionObjectArray and btRigidBody classes to improve code readability and simplify object creation logic
added a copyright year and a method to retrieve the copyright year in BuildProperties . java , updated the Openrocket URL in AboutDialog
added ` getDistributedObjects ` method to ` JetClientInstanceImpl ` and created a corresponding test class ` JetClientInstanceImplTest
added debug print statements in FinSet . java and updated test cases in MineCalculatorTest . java to improve code clarity and ensure tests reflect
updated memory constants in SmartDexingStep . java to use MAX _ MEMORY instead of TOTAL _ MEMORY to accurately reflect the maximum
[ hotfix ] [ table - common ] fix typo in standalone schema fetcher
use bisq co - founder instead of co - founder
updated JSON input handling in JsonLoaderTest . java to ensure proper parsing of JSON data
updated the condition in ObjectSet . java to check if tableSize is greater than 0 to ensure that the required capacity does not exceed a predefined threshold
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure proper handling of data scale values
removed @ AddToRuleKey annotations from several fields in AppleTest . java to simplify field access and improve code clarity
added a try - catch block to handle security exceptions in FileHelper . java and TextHelper . java to improve error handling and ensure proper content
added a new static final integer ` StyleWithMultipleAttributes ` and modified ` resolveAttributes ` method in ` ShadowThemeTest ` to enhance attribute resolution
updated the sheet name check in HSSFWorkbook . java and modified the test case in TestHSSFWorkbook . java to ensure proper handling of sheets
replaced primary color with element color in ManageAccountsActivity to enhance UI consistency by using the appropriate theme color
updated handler initialization in DefaultEventBus . java and simplified path resolver logic in DefaultPlatformManager . java to improve event handling and streamline path resolution to
added binaryCollationName configuration and SqlPredicateFragment methods to MariaDbDbmsType , MySqlDbmsType , and FilterSortedSkipOptimizer
added a new method ` whenType ` to return an ` Optional < T > ` based on the type of the tree class to enhance type safety
refactor navigation logic in ItemLauncher . java to improve code clarity and streamline navigation handling to enhance readability and maintainability by consolid
updated the return statement to return a temporary redirect instead of a successful ok response to improve user experience by redirecting to the correct endpoint
[ flink - 29802 ] [ kinesis ] [ connector / kinesis ] improve error message when deserializer be not serializable
( chore ) camel - jbang - fix checkstyle issue
refactor ZkStateReader initialization to use a try - finally block to ensure ZkClient is closed properly to prevent resource leaks
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to better reflect the method
refactor read method in ProxyHandler to use a dedicated read method to improve code readability and maintainability by centralizing read read logic to enhance
replaced instances of BufferUtil with ByteBuffer in ABCase1 _ 2 . java to improve performance and reduce memory usage to enhance memory efficiency
modified the ` prepareStreamsToUpload ` method to return a boolean indicating whether the operation was successful or not
[ scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb scb
added a new file PicOfDayAppWidget . java to implement functionality for updating app widgets in the application
cloudstack - 2893 : fix the default service offering of internal lb vm should be use if service offering be not specify .
replaced ` RelOptUtil . splitJoinCondition ` with ` HiveRelOptUtil . splitHiveJoinCondition ` in ` HiveParserCalcitePlanner `
[ hotfix ] [ hotfix ] deprecate all operator transformations in hotspot .
added user and password options to the JMX connection in NodeToolCmd . java to enable secure access to remote JMX connections
removed unnecessary instantiation of BytesRef for scratch variable to streamline code by eliminating redundancy
updated method calls to use ` mPageViewIconCache ` instead of ` isHardware acceleration acceleration acceleration acceleration in ` mPageViewIconCache ` and
make sure 3d view work with 3d view
updated rotation calculations in GcodeRenderer . java to ensure rotation coordinates are non - negative and prevent negative negative values
added a new option ` WORKSPACE ` to the ` DAEMON ` command in ` OptionEnum ` and updated its usage in ` TerminalClient `
[ hotfix ] [ test ] update cli test to use html instead of apt
updated ScimUtilsTest to use JUnit 5 annotations and improved exception handling to enhance test structure and ensure proper exception management during tests
refactor OAuthConfirmationController to use a model - based model instead of a model - based model to improve flexibility in handling OAuth authorization requests
refactor HibernateIT to use assertTrueEventually for assertions to improve test reliability and clarity in session management
refactor EventBusHook class to improve event handling logic to enhance performance and maintainability of event processing
refactor MultiPaintEventTest to improve test coverage to enhance reliability of paint event handling
changed the variable ` mNewScale ` from final to non - final in ` WorkspaceStateTransitionAnimation . java ` to allow ` mNewScale `
refactor SyncFactory class to improve code readability and maintainability
added unique key field handling in LukeRequestHandler to ensure proper identification of unique keys in the schema
added a roundBorderColor attribute and modified related methods in EditableResources and Border classes to enhance color handling in the EditableResources to support customization
truffle : fix compilation error in binaryparserexception .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder instead of slotpoolimpl
added logging for pending requests and modified the return value of ` onBackpressureDrop ` in ` GatewayPongApp . java ` to improve debugging and
added a menu item to the RecentChatFragment to allow users to click on the recent chat chat chat chat chat chat chat chat chat chat chat chat
updated InfoDropTarget to extend UninstallDropTarget and modified startDetailsActivityForInfo method to return a boolean indicating success to enhance functionality by allowing methods to
replaced instances of ` getTail ( ) ` and ` removeTail ( ) ` with ` peek ( ) ` and ` peek ( ) ` in multiple
updated API and event log URLs to point to " commons " instead of " test " to align with the new project structure
refactor index setting logic into a separate method to improve code readability and maintainability
replaced ` Collections . sort ` with direct method calls in multiple classes to simplify code and improve readability by eliminating unnecessary method calls
added date and time patterns to the FormatData _ hr _ HR . java file to provide proper formatting for date and time representations
added a call to ` clickedView . clearFocus ( ) ` in ` DetailFragment . java ` to reset focus on the clicked view to ensure
updated the handling of ` savedLanguageValue ` in ` DescriptionsAdapter ` and ` SpinnerDescriptionsAdapter ` to improve clarity and correctness in language
updated time zone names from " WSST " to " WSDT " across multiple files to reflect the correct designation for the daylight
added native methods for registering and accessing global and weak fields in FastGetField . java to enhance functionality and improve error handling for field access operations
added handling for NULL types in ReflectData . java and updated test cases in TestReflect . java to ensure correct default value behavior for UNION schema types
make seda test more stable
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerException when accessing the RClass
added constructor to hapiFhir dialect that accept the databaseversion
camel - 14583 : http producer should send connection close header if it be set to close .
increased the socket timeout duration from 60 seconds to 120000 milliseconds to allow more time for operations to complete successfully
added assertion to verify that final price ct be zero
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter class to improve code readability and maintainability
refactor : use getfirstelementchild instead of getFirstChild
planner - 241 add dataobjectenum support to lookup strategy ( add test data )
[ java ] wait for cluster instance to shut down before shut down the cluster
change log level from warn to info .
added a content type header to the WebdavEntry class to ensure correct content type is set for binary data transfers
added ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and created its implementation in ` LazyTraceThreadPoolTaskExecutorTests
add distance check to distanceop to avoid infinite loop
rename the ` required ` field to ` requiredLabel ` in ` AbstractUITag ` to improve clarity by using a more descriptive variable name
removed the next ( ) method from the PurgingPartitionIterator class to streamline the iteration process by directly calling updateProgress ( )
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated ` VectorUtil ` to utilize this method to retrieve
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to ` BaseMonochromeBitmapSource ` in ` BaseMonochromeBitmap
added validation to ensure localVertices is at least 3 points to prevent ArrayIndexOutOfBoundsException when processing polygon vertices to ensure valid input parameters
replaced instances of ` ObjectMapper ` with ` ObjectMappers ` across multiple files to standardize JSON serialization across the project
added a null check for coeff before processing in GeoImplicitCurve . java to prevent potential NullPointerExceptions when coeff is null
updated ExternalNameRecord to handle multi - byte Unicode names and added a new test case for Unicode name reading to improve data integrity and ensure correct handling of
camel - jms : fix checkstyle issue
added logic to exclude " username " and " password " from login prompts in the LoginInfoEndpoint to ensure that only non - login prompts are
replaced ` remove ` method with ` removeIf ` for listener removal in ` AbstractController ` to ensure listeners are removed only if they match the provided criteria
added a new option to toggle the spin functionality in the PieChartActivity to enhance user control over the chart ' s spin behavior
cloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloudcloud
hbase - 16413 avoid normalization of table that do not have quota
removed unused imports and added a resize method to the AndroidInput class to improve code clarity and functionality by eliminating unnecessary dependencies
added a new method ` propertyValuesOf ` to ` PropertySupport ` for retrieving property values to enhance functionality by allowing retrieval of property values from a
added @ ignore annotation to clientmapnearcachetest because it be always fail
fix hopperhock hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole hole
added authentication dialog functionality to SsoWebViewClient to enhance user experience by providing a prompt for authentication
updated TestStressIndexing2 . java to improve document deletion logic and added a method to delete documents by query to enhance search efficiency to improve document management
[ flink - 22559 ] [ test ] ignore flaky upsert kafka test
replaced ` get ` method with ` computeIfAbsent ` for initializing ` typeList ` and ` csize ` variables in ` ResTable . java ` to
fix defaultentitymapper to accept single value as an array
added " BE , SL " to the list of localized version change logs to provide clearer versioning information for users
use resourceutils to split category from app category
[ drools - 1086 ] fix instanceof check for instanceof expression ( # 2062 )
nifi - 938 : added content - type header to gethttp so that the content - type be report by the client
fix nullpopopopopopopopopopopopopopopopopopopopopopopopopopopopo
replaced exit button with done button in HelpActivity and added a check for searchable input in SearchBookContentsActivity to enhance user experience by providing a
[ hotfix ] [ doc ] fix typo in natsconfiguration
modified the ` invalidateStalePartitions ` method to accept a list of ` PartitionNameWithVersion ` instead of a single partition name to enhance
replace boundedfifobuffer with cboundedfifobuffer in viewresultfullvisualizer
updated icon references from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to improve clarity and consistency in naming conventions
[ scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene scene
updated test method names and assertions in MocksCreationTest . java to improve clarity and consistency to enhance code readability and maintainability
added a constant data source constant and made the generateDetectionConfig method public to improve code readability and accessibility of the generateDetectionConfig method
updated the wait time for a Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser Phaser
removed the ` BuildSlaveFinishedStatusEvent ` class and updated the ` publishBuildSlaveFinishedEvent ` method in ` DistBuildRunCommand `
cloudstack - 3441 : use utf - 8 encode when generate uuid for template name
[ ds - 3952 ] add workflow test for deposit workspace item
[ hotfix ] [ classloader ] avoid duplicate classpath file in classloadersupport
removed the isBoxedPrimitive method from Unbox class to streamline code by eliminating unnecessary method
refactor argument handling in SpecificCompilerTool to use indexOf for better clarity to improve code readability and maintainability
added a check to ensure the delete operation only occurs for non - external tables that are not external external tables to prevent deletion of non - external tables that
updated HIVE _ SERVER2 _ ASYNC _ EXEC _ THREADS to include a configurable keep - alive queue size and keep - alive timeout to
added a try - catch block around the dismissDialog call to handle potential exceptions when dismissing the dialog
updated UpgradeResourceProvider to use a new EXECUTE _ TASK _ ROLE constant and improved task retrieval logic to enhance code clarity
fix possible nullpointerexception when call sip with no conference name
add clearentry ( ) method to logview to clear the log tree
updated return statements in ChannelEndPoint . java to include checks for socket open and input shutdown status to ensure proper handling of socket state during shutdown
refactor SetNullableGenerator class to improve code readability and maintainability
camel - 16400 : camel - example - reportincident - add option to turn off servlet transport in generated file
replaced specific imports with a wildcard import and refactored media type handling in NettyRoutingFilter and FormIntegrationTests to simplify import statements and
added a new API operation ` hello ` to the ` MyService ` and ` MyEndpointWithInterface ` classes to provide a standardized way
replaced the ` update ` method with ` update ( ) ` in ` Lwjgl3Application ` and ` Lwjgl3Window ` to simplify
updated FG _ FK color value from 90 to 200 to improve visual appearance in the UI
do n ' t require mp3 in soundmanager
speed up secondaryindexmanagertest by remove unnecessary query execution
pmd - plugin : add version information to the resource bundle
[ hotfix ] [ test ] avoid npe in customserializationitcase
updated the MediaFormatUtil class to improve media handling functionality
added a method ` isCellEditable ` to ` GeneralTab ` that always returns false to provide a consistent interface for cell editing functionality
added an abstract method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` for conditionally printing command messages to enhance
added a temporary variable ` tmpCount ` in ` VocalTractModifier ` and updated ` vScale ` in ` VocalTractScalingProcessor
updated import statements for BaseScalarUdfTest and TestGenericUDFConcat to ensure proper usage of BaseScalarUdfTest in the codebase
added hashCode and equals methods to UaaAuthenticationDetails class to ensure proper comparison of UaaAuthenticationDetails instances
update test skeletoncontrol refresh test to use tweens
rename nodefilter to nodecountfilter to avoid confusion
updated the condition to check if Sync _ FETCH _ BATCH _ BATCH _ BATCH _ BATCH _ BATCH _ BATCH _ B
updated state and typos in DebugExpressionParser . java for improved clarity and consistency to enhance code readability and maintainability by
replaced ` isEmpty ( ) ` with ` stream . stream ( ) . any ( ) ` in ` ExcludeDependency . java ` to improve code readability
replaced the temporary variable ` tmp ( ) ` with ` dst2 ( T v ) ` and ` lerp ( T target , float target , float
[ grid ] fix npe when args be null
updated linker argument handling in RustBinaryDescription . java and added a new test for linker flags in RustLinkerIntegrationTest . java to enhance
[ travis ] check travis and appveyor before run test
added a new configuration variable ` dagName ` and improved logging in ` GenericUDTFGetSplits ` to enhance logging details for LLAP splits
remove unused import to fix build
refactor EscapeProcessingOutputStream to use AtomicBoolean for thread safety and improve handling of closed streams to enhance concurrency management and prevent potential IOExceptions
updated the ` validateQuery ` method to accept an additional ` args ` parameter to enhance error handling by providing more context in exception messages
updated LuceneExecutor to update index version from 1 to 2 and modified the getTree method to accept a RevTree parameter to enhance indexing
[ hotfix ] [ test ] add unit test for kryo registration
added null check before adding configuration types to ensure configuration types are only updated when they are not null to prevent potential NullPointerExceptions
refactor boolean handling in MetaStoreDirectSql to utilize BooleanUtils for better readability to improve code maintainability and reduce code duplication
added a call to hideCustomDrawer ( ) in the Launcher class to improve user interface behavior by hiding the custom drawer
refactor TermVectorComponent to use a constant for warning keys to improve code readability and maintainability by avoiding hard - coded values
added optimistic type check and improved logging for compile job execution to enhance logging clarity and ensure proper logging behavior
refactor Expect class to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enhance Docker configuration for Unix socket connections
added JUnit 5 ` @ Tag ` annotation to ` CloseableDoSFilterTest ` and ` testEvenLowRateIP ` methods in ` Close
camel - 16400 : camel - core - make it easy to use throw exception when no active subscription be available for a give stream .
refactor VectorizationTask validation and processing to use TezWork instead of MapRedTask to improve compatibility with Tez tasks in the vector
updated constructor calls in StringAppender and LogDivertAppender to include a boolean parameter to enable additional functionality to enhance flexibility in logging behavior
fix possible npe in jmeter tree
[ gr - 27917 ] fix linkage in sulong .
refactor multiple Java files to improve code organization and clarity to enhance maintainability and readability of the codebase
add test for defaulttransactionthreadlocaltest
added a check for invalid operation handle in HiveStatement to ensure that invalid operation handles are logged for better error handling
renamed ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL across multiple files to improve
camel - 14868
refactor SimpleTree class to improve code readability and maintainability
refactor error handling in UserREST to improve code readability and maintainability by simplifying error handling logic
modified the ` fromContent ` method to include a boolean parameter for determining if the result is a tree or not
added a new test method for calculating column width in HSSFSheet . java and modified the default column width calculation in Sheet . java to
added configPath parameter to Commands . less method to enhance functionality by allowing customizable configuration options
changed parameter types from Set to Collection in DotWriter and GraphExecutable classes to enhance flexibility in handling collections of tables
update default sshd container image to 1.0 . 0 ( # 1851 )
remove assertion that be break backward compatibility
updated the handling of single - valued columns in DefaultGroupKeyGenerator to improve clarity and correctness in key generation to enhance code readability and
make test more robust against eofexception
refactor BCSiliconRecipes to improve code clarity and structure to enhance maintainability and readability of the code
rename method from ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity and understanding of
updated visibility logic for child views in CellLayout and refactored drag exit handling in DragController to improve code readability and maintainability to enhance
updated the handling of ` ModifyRequestBodyGatewayFilterFactory ` to use ` getRewriteFunction ( ) ` and added a new ` switchIfEmpty ( )
updated accessibility checks in ConstructorFinder , FieldFinder , MethodFinder , and PackageFinder classes to ensure proper package access validation to enhance security by prevent
replaced ` logger . warn ` log statements with ` logger . trace ` log statements in ` LoggingHandler . java ` to improve logging granularity
updated prefix handling in WhiteBlackList . java and added a new test class Issue348 . java to improve prefix extraction logic and ensure correct behavior
added options menu functionality to the gallery activity to enhance user interaction by allowing quick access to gallery images
refactor MongoDBServiceFactory to use a singleton instance of MongoDBService to improve resource efficiency by avoiding unnecessary instance creation
added tests for replacing boolean false with true in InlineConstantMutatorTest . java to ensure correct behavior of code formatting in inline constant mutator tests
updated the decode method to include a Blackhole parameter in the decode method to enhance functionality by allowing the decoding process to utilize an additional parameter
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated methods to return a stream of entries instead of a single value and improved error handling in DeviceThingHandler to enhance data retrieval efficiency
added a call to dbManager . getWitnesses ( ) to clear the witnesses list to ensure that the witnesses
use debug log instead of exception
refactor stack handling in NativeError . java to use ScriptFunction for better encapsulation to improve code clarity and maintainability
added a check to prevent processing of paths that start with a period in DrillPathFilter to ensure that only valid paths are processed
renamed ` onboard ` to ` autoLoad ` in the ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration `
added a clearIndex ( ) method to BasicFunctionalityTest . java to ensure the index is reset before each test execution
updated BOLDWEIGHT _ NORMAL value from 190 to 0x190 to ensure consistency in bold weight calculations
made fThreadGroup volatile and made fLookForStuckThread non - final in Timeout class to ensure thread safety and enforce immutability of f
refactor ValueResultData constructor to be final to ensure immutability and prevent subclassing
updated hash code calculation and equality check in FuzzyQuery to use superclass equality to ensure accurate hash code generation and improve object comparison
removed debug print statements from PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed the return type of the ` removeFile ` and ` removeDirectory ` methods from ` return type of ` removeFile ` and ` removeDirectory `
updated the product version in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest from " 2.5 . 1 " to " 2.6
updated the ` retrievePersonAttributes ` method to accept zero attributes and replaced direct principal creation with a new ` buildResolvedPrincipal ` method to enhance principal
updated log level from info to warn for unconnected ZigBee USB Gateway and BUS Gateway to warn in OpenWebNetBridgeHandler . java to
replaced instances of ` intHash ` and ` longHash ` with ` hash ` and ` hash ` in multiple classes to standardize hash calculation
added a constructor to ThumbnailGenerationTask that initializes the storageManager and account to ensure that the storageManager and account are not null to prevent NullPointer
updated the loop condition in GroupSelectionQuery to include a retry mechanism to ensure robustness by allowing retries before terminating the loop based on the number of attempts
added a new file ` Bug1933922 . java ` that contains a class for managing program compilation and thread management to facilitate
refactor comparison logic and improve code readability to enhance code clarity and maintainability
added a validation check for the control character 0 - 31 in FileResolver . java to ensure that only valid control characters are accepted
added requestFocus ( ) method to Display . java to ensure the component properly receives focus when the component is displayed
updated test data file for instructor home page UI test
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
updated Crouton handling in DetailFragment and MainActivity to improve user feedback and ensure proper cancellation of crouton actions
added a test for retrieving schema templates with unrelated templates in IoTDB to ensure that the schema query correctly handles scenarios where an unrelated
refactor Dialog class to improve code readability and maintainability
replaced Runtime . getRuntime ( ) . getRuntime ( ) . getRuntime ( ) with ProcessBuilder for command execution to improve the handling of command execution
updated the method to increment the past window metric from getLocalHost ( ) to get InetAddress . getByName ( " 127.0 . 0.1 "
refactor controller handling to use a loop for setting paths to improve code readability and maintainability
added platform checks in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests only run on supported Apple platforms to avoid running tests on unsupported platforms
make jvmciversioncheck more robust against miss property
refactor Mockito class to improve code readability and maintainability
updated TestLargePageUseForAuxMemory . java file to enhance memory usage testing capabilities
added charset handling to the ParsingExecutionContextView and BinaryParser classes to support customizable character encoding in parsing operations
added a new ` MultiPartFormDataCompliance ` enum and updated ` HttpConfiguration ` to utilize it to manage multipart formation compliance to provide a default
added JDK version check to GradleDistributionManager to ensure compatibility with JDK 17
added a new method ` addType ` to ` DatabaseSnapshot ` and refactored the ` addType ` method in ` SnapshotControl ` to improve
refactor Term class to improve code readability and maintainability
modify return statement to handle null or empty values for runWith to ensure that a default value is returned when runWith is null or empty
added test case for http : / / issues . apache . org / activemq / browse / amq - 2886 . added test case for
updated multiple Java classes to improve code organization and maintainability
pdfbox - 3353 , pdfbox - 3353 , pdfbox - 3181 , pdfbox - 3181 , pdfbox - 3
updated color tinting logic in TaskView to use mTintAmount instead of amount to improve clarity and consistency in color tinting
added a new file ` SumZeroAggr . java ` that implements ` DrillAggFunc ` to provide functionality for handling aggregation functions in
phoenix - 1892 : fix test failure in phoenix - 1895
refactor getAllocationFailWarningMessage method to improve readability and structure to enhance clarity of allocation failure warning messages
added a null check for propName before putting it in roleObject to avoid potential NullPointerException when propName is null
updated visibility annotations and refactored task removal logic in multiple classes to enhance testability and improve code clarity
added methods to log a container with a stream parameter to allow for better control over whether to keep stream open indefinitely
add a test case for mvstore cache performance
updated LONG type from " L " to " J " in PrimitiveType . java to improve clarity and consistency in data representation
changed method visibility of delegatingApplicationListener from instance to static to allow the method to be called without an instance of the class
camel - 16400 : camel - rest - do not clear body on error
added ` FileDeleteTasklet ` and ` TaskletJobFunctionalTests ` classes for managing file deletion in batch processing
mow - 825 update size keep drawables only if need
updated bitwise operations in BitUtil , Int2IntCounterMap , and related classes to improve code clarity and handle index out - of -
updated methods for sending state events to test and modified parameters for swipe actions across multiple classes to enhance state tracking accuracy and improve event handling in the launcher application
added handling for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnails based on the user '
improve error handling for text selection
updated the layout condition for adding buttons to the title area based on the menu button ' s UI theme to enhance the user interface by aligning buttons
added a preload option for the Skia library to enhance functionality by allowing the Skia library to be preload
netparameters : add support for unit test
added error handling for invalid format arguments in QueryCommand . java and corresponding test cases in QueryCommandIntegrationTest . java to ensure users do not
updated calculations for position and mask handling in IntIterator . java to ensure correct position and mask calculations based on the length of values in the iterator implementation
added support for source source source source source source source source source source source source source source source source source source source source source source source source source source source
[ netbeans - 4338 ] fix patchmodulefilemanager to work with override module name
[ java ] remove unnecessary check for protocol version .
modified OwnCloudClientManagerFactory to set a single session policy based on SAML authentication status to ensure correct client behavior for SAML authentication
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure proper error handling for missing mapped table resources during batch building
fix resource leak in jms sampler
refactor AnonymousAuthenticationFilter to use a deferred context for setting authentication to improve handling of anonymous authentication scenarios
updated removeActor methods in Actor and Group classes to include a parameter for enabling or disabling actor focus management
updated the prompt construction to use a variable for valid configuration values to improve code readability and maintainability by reducing repetitive code
added logging level support to netty server configuration
refactor multiple Java classes related to data type handling to improve code organization and maintainability
replace direct call to ` update ( ) ` with ` invokeLater ( this : : update ` in ` CodeDependenciesPanel . java ` to ensure UI
camel - 17826 : camel - groovy - make it possible to load groovy script from a classpath .
use set instead of list
[ hotfix ] [ cli ] make args _ option public in cli
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` in ` TestSharedPreferences ` and added a new test class ` TestSharedPreferencesTest `
removed the storage alias from the HttpsMessenger class to streamline the process of retrieving the certificate chain from a certificate certificate
danielwagnerhall : add a try - catch block to handle classcastexception .
changed the access modifier of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to allow subclasses
[ 1.19 . x ] add block . dropresources hook ( # 8793 )
add ` spatiallocationcalculatorconfig ` instance of ` dataoutputqueue ` method for depthai ( pull # 1061 )
refactor multiple Java files to improve code organization and maintainability
replaced ` keySet ( ) ` with ` isEmpty ( _ root ) ` and added a new method ` isEmpty ( _ root ) ` in ` Tree
updated foreground and background method calls in Attributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributedtributed
updated fingerprint handling in PeerSync and PeerSyncTest to conditionally disable fingerprints based on a system property to enhance flexibility in fingerprint management based
changed the access modifier of the moveFunds method from private to public to allow access to move funds from other classes
removed redundant event emissions in MongoTemplate . java and added context management in MongoTemplateTests . java to streamline event emission process
fix thread safety issue in collectionitem
tika - 352 -- fix resource leak in tika cli
updated exception handling from ` ApiBag . ExceptionWithErrObject ` to ` ApiException ` in ` TestCollectionAPIs . java ` to improve error handling
removed unnecessary whitespace in OptionsParser . java to improve code readability and maintainability
[ # 7970 ] instructorfeedbackaddactiontest and instructorfeedbackcopyactiontest : fix typo
[ hotfix ] [ test ] remove unnecessary exception from external worker service constructor
[ hotfix ] [ table - common ] remove unused step from displaytextvirtualdatapoint
updated logging messages and added shared lock handling in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of log messages and ensure
added scheduleJobs ( ) method to BaseSchedulerServiceImpl . java to ensure proper scheduling of jobs during job execution
[ java ] fix flaky test testtextcontent . test gettextcontent .
refactor Logger to use ThreadLocal for managing Logger instances to improve thread safety and encapsulation of logger management
[ j2kt ] fix compilationunit conversion in functioninitializer
added a method ` boxedTypeOrType ` in ` Types . java ` and modified type checking in ` Infer . java ` ,
updated task view handling in RecentsView . java and removed unnecessary initialization in TaskView . java
hbase - 21658 addendum ( addendum )
added handling for contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract contract
updated token issuance fees to use dynamic properties instead of static values to improve flexibility and maintainability of fee calculations
refactor cache handling in RealisticRenderStrategy to use URI objects instead of Appearance to improve cache management and support for URI - based texture
replaced the variable ` srcRas ` with ` tmpDstRas ` and added a new class ` Bug7049339 ` with a
added handling for unselected font style in Label and related classes to improve text width retrieval logic for better UI consistency
updated ArrayList initialization and improved performance in various classes to optimize memory allocation and enhance code readability
removed the ' flags ' parameter from multiple method signatures in ShadowApplicationPackageManager . java to simplify method signatures by eliminating unnecessary ' flags
refactor PingRequestHandler class to improve code readability and maintainability
[ android ] add ` mp4 _ asset _ with _ increasing _ timestamps . mp4 ` test case
refactor firmware handling logic in TradfriGatewayHandler . java to improve clarity and maintainability of firmware version checks to enhance code readability
refactor AjaxElementLocator class to improve code readability and maintainability
updated layout checks in BoxLayout and DefaultLayout classes to include table cell support to enhance layout flexibility to accommodate additional display types
refactor JsonDecoder to improve handling of JSON array tokens and add a new test for reordering fields to enhance code readability and ensure correct behavior
updated the ` listener ` method to include a ` removalCause ` parameter in the ` RemovalListener ` to enhance cache location management by providing more
[ hotfix ] disable broken savepoint test track in flink - 22067
[ drools - 5668 ] add miss test for drool mvel parser
changed fields in ContextRegisterListener to be final to ensure immutability of fields after initialization
refactor ObjectHashSet to allow for customizable iterator initialization and reset methods to enhance flexibility in handling ObjectHashSet instances and improve test coverage
added a constant for batch size and updated batch processing logic in SparkReduceRecordHandler and ReduceRecordSource classes to ensure batch processing does not exceed a predefined
changed context mode from WORDED _ READABLE to PRIVATE in AppSettings and UpdateUtils to enhance security by restricting access to sensitive data
updated logging messages in JdbcProxyGenerator to clarify that close ( ) is called after already close ( ) ed or abort ( )
updated animation state handling in Workspace . java to improve accessibility support for accessibility features
log4j2 - 1343 fixed log level from warn to debug
updated scope substring logic in UaaTokenServices . java and added a new test case in UaaTokenServicesTests . java to ensure correct
updated import statements in SchemaRetrievalOptionsBuilderTest . java and modified logger initialization in AvailableJDBCDrivers . java to improve code clarity and
[ drools - 7 ] add executablecommand to allow execute a command with a context
( chore ) camel - jms : remove unused test class
added padding methods to CellLayout and updated bitmap scaling logic in Launcher to improve layout handling and ensure proper scaling of bitmap elements
modified the initialization of the list in LineReaderImpl . java to conditionally handle cases where the input string is empty
updated ` SamlMetadataUIParserAction ` and related classes to use ` Action ` instead of ` SamlProtocolConstants ` to enhance
added a method to check for open ports in LdapMockMvcTests . java to enhance testing capabilities by allowing dynamic port selection
log4j2 - 1349 change shutdown parameter from - 1 to - 1 to - 1 for executorservice shutdown
refactor URL handling in Fetcher . java and update refresh logic in HTMLMetaProcessor . java to improve clarity of redirect logic and ensure
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse . java to ensure
updated Console initialization logic to support older Karaf Console API to enhance compatibility with older Karaf Console API versions
[ fix ] blender shader shader shader to work with blender 3.0 . 1
updated the copyDirectory method to include EXCLUDE _ TIMESTAMPED _ REPORTS _ DIRECTORIES and modified file handling in HTMLReportGenerator
datavalidatortest : validateemail refactored use parameterized
pdfbox - 4892 : remove unused method , a suggest by valerybokov
improve error message when expression be not bind to a form
removed debug print statement from JoglInput . java to clean up the code and reduce unnecessary console output
added a flag to allow extracting private fields in FieldSupport and updated related test cases to enhance field access control and improve test coverage for field
replaced occurrences of " name " with " device . getName ( ) " in WebDataHandler . java to improve clarity and consistency in device identification
refactor Lookup instantiation to use MethodHandles for improved readability to enhance code clarity and maintainability to streamline the creation of Lookup instances
renamed the ` weights ` method to ` weightsByDouble ` and added a deprecated ` weightsByDouble ` method to improve clarity and indicate that
added a Database parameter to the writeCustomHTML method across multiple writer classes to ensure proper handling of database - specific SQL operations
updated BTreeMap . java to remove redundant type casts and streamline key deserialization process
updated exception handling to throw BalanceInsufficientException instead of Exception in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to improve error handling
[ netbeans - 5474 ] performance improvement for heap memory usage
refactor message handling to use UI components instead of print statements to improve consistency and maintainability of the code
updated buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed unnecessary zero initialization in HortonworksEncodedSchema
added imports for ` ChunkListener ` , ` ItemReadListener ` , and ` ItemWriteListener ` across multiple Java files to enhance batch
refactor code for improved readability and consistency in formatting to enhance maintainability and clarity of the code
removed unnecessary calls to ` doc . get ( " title " ) ` and ` doc . get ( " title " ) ` in multiple files to simplify
updated Test7005594 . java file to improve test coverage and address existing issues
pdfbox - 2852 : fix typo find by codespell on fossies . org
refactor TopKRollupPhaseOneJob class to improve code readability and maintainability
server : fix npe when add a vm to a vm that do not have an ip address
fix : do not trigger controller trigger when device orientation change
refactor ` iteratesOverSequence ` and ` iteratesOverSequence ` methods to use generics for better type safety to enhance code clarity
camel - 18023 : camel - http - optimize to reduce object allocation
added assertions to verify the count results of various native queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure correct counting behavior for various activities
added a LargeValueFormatter class and updated label handling in BarChartActivity to improve chart readability by using a smaller value formatter
updated character handling in CommentsParser to use a constant for the ' z ' character to improve code readability and maintainability by avoiding hardcoded strings
remove @ suppresswarnings from platform . java
[ tracera ] [ tracera ] add comment to trace linear scan interval .
added a TODO comment for auto - generated methods to improve code clarity and maintainability
added import for RuleKeyAppendable and implemented appending logic for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to enable proper handling of RuleKeyAppend
added functionality to create a system profile directory if it does not exist and refactored test setup methods in DLNAMediaInfoTest and Search
replaced the instantiation of DefaultThreadFactory with a dedicated method to improve code clarity and maintainability by centralizing thread factory creation
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to use receiver methods for message counting to improve code readability and encapsulate message counting logic to
added an attribute to the ImageFileInputDialog to accept images to enhance user interaction with image files
updated ElasticIndexWriter and TestElasticIndexWriter to use pre - built and pre - built client instances to improve code readability and simplify client initialization
updated the string representation of witnesses in ForkController . java to include the witness class name and class name to enhance debugging information to
added a new test class ` NullPointerAndEmptyArrayTest ` to validate handling of null and empty URL arrays to ensure that the ` CustomURLClassLoader
added functionality to find configured source paths using dependencies in BaseIjModuleRule . java and removed the Test class from IjProjectBuckConfig
added functionality to construct wildcard patterns with any character delimiters in UaaStringUtils to enhance flexibility in matching wildcard patterns based on user - defined
added validation checks for aliasToWork in Vectorization to ensure only valid aliases are processed to avoid validation errors
updated import statement in WeatherQueryTest . java to use MockitoJUnitRunner instead of MockitoJUnitRunner to ensure compatibility with the latest Mockito library
added error handling for setting values in Tiny firmware firmware firmware to ensure robustness by logging warnings when setting values are not correctly set
replaced the return type of ` getLangs ` method from ` String [ ] ` to ` Set < String > ` for better handling of
updated imports in LazyTraceScheduledThreadPoolExecutorTests . java for consistency and clarity to improve readability and maintainability of test assertions
hbase - 16414 add table lock to snapshotmanager
[ j2kt ] fix handling of ` ` null ' ' in try - catch block .
added a test method to verify the behavior of the explorer endpoint in Docker Quick start
added isSuspended flag to track if the thread is suspended to improve thread state management and ensure proper exception handling
updated JavadocVisitor and ReloadableJava8JavadocVisitor classes to replace Javadoc . Author and Javadoc . Since with Javadoc . Serial
camel - 7999 : added unit test for camel context injection .
removed redundant @ Override annotations from various security - related classes to improve code clarity and maintainability
added module import support in Java2TypeScriptAdapter and updated test assertions in EnumTests to use ModuleKind . commonjs to ensure proper module dependencies are
use http : / / www . w3c . org / 2001 / xmlschema instead of http : / / www . w3c .
added content description handling for badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge badge
8282716 : [ macos ] enable javax / swing / jscrollpane / testmousewheelscroll . java on macos
added a new test for positioning absolute values in VisualTester and VisualRegressionTest to ensure proper resource management and prevent memory leaks
updated currency code references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to align currency naming
updated the ` VacuumController ` , ` VacuumFrame ` , and ` VacuumView ` classes to use ` String ` instead of ` Object
removed conditional checks for currency names to simplify the code by directly returning the original currency value
updated JsonFormat . java to use ImmutableSet for default value fields and improved message printing logic to enhance code clarity and ensure default
added handling for array types in JacksonXmlFormatMapper to ensure proper serialization of byte arrays in JSON output
updated virtual thread constants and refactored thread handling logic to improve clarity and functionality of thread management
updated DirectoryTaxonomyWriter and TestDirectoryTaxonomyWriter to use new variables for term and category paths to improve code clarity and ensure consistent handling of
refactor VetoableChangeSupport class to improve code organization and maintainability
adjusted the height calculation in BrowserContentPane . java to correct the vertical positioning of the owner element based on its height
pdfbox - 2852 : remove invalid password exception from method signature
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
mow - 205
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization to enhance maintainability and readability of the codebase
updated multiple Java files to utilize ThreadHelper for controller state checks and added new test cases for G28 _ 1 and G28 _ 2
updated condition checks for handling release status in SwingStartup . java to ensure proper handling of exceptions and preferences based on release status
added a ` includeGeneratedFileComment ` property and related methods in ` DbMigrationConfig ` , and modified ` MigrationXmlWriter ` to include comments
updated command syntax to use " < player | * > " instead of " < player > " to enhance clarity in command usage instructions
deleted ` BadHdfsThreadsFilter . java ` and ` BadZookeeperThreadsFilter . java ` files to remove unused or redundant code related to thread
updated method calls to use " optionName " instead of " nameVariableName " to improve clarity and consistency in variable naming
added a check for PARALLEL _ CLASSES in TestNGContentHandler to ensure proper handling of parallel classes in XML processing
updated the logic for enablingActingMaster based on old version in RouteInfoManager . java to improve clarity and correctness in handling cases where the old
refactor ( ctelementcontainer ) : remove static import
added serialVersionUID fields to multiple exception and service classes to ensure compatibility during serialization and deserialization processes
improve javadoc for sequenced dead letter queue
updated the ` shaBase64 ` method to accept a custom separator parameter to enhance flexibility by allowing different character sets to be used when generating base
updated parameter handling in Parameters . java and TestAction . java to ensure proper null checks for system actions to improve robustness by handling potential null values and
added a new class Person in the org . apache . maven . it0074 package to establish a foundation for testing purposes
avoid use of fBUtilities . getlocaladdress ( ) in gossiper . start ( )
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 546 : fix npe
added assertions to validate the retrieval of time column and document count in SegmentMetadataImpl to ensure that time column and time units are correctly associated with their respective
replaced ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and updated the foreground color setting in
added a call to disconnectEmitters in NettyStreamingService to ensure proper handling of disconnect events
fix : use generic type instead of string
danielwagnerhall : add a test to make sure that double double double double double double double double double double double double double double
added a try - catch block around the dismissDialog call to handle potential exceptions when dismissing the dialog
jbrules - 2844 : allow to specify a custom jndi location for jta transaction transaction
changed method visibility of pickUri from public to private to restrict access to the method to enhance encapsulation
removed the hasFunction method from Library class to simplify the code by eliminating unused functionality
replaced ` enabledCiphers ` and ` enabledCipher suites ` arrays with ` result ` and ` alias ` arrays in ` JSSESocketFactory . java
[ bigquery ] extend timestamp precision to microsecond when write with beam row ( storage api ) ( # 24784
replaced null checks with requireNonNull for buffer and userCredentials parameters to improve code readability and reduce redundancy
refactor value coercion to use inputmap instead of input object name
added validation for row and column indices in FlightConfigurablePanel to prevent ArrayIndexOutOfBoundsException when accessing table ' s row and column indices
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by showing the scroll feature
[ java ] unnecessarylocalbeforereturn : fix false negative
modified the initialization of ` scriptEngineManager ` to use ` getEngineByName ` instead of ` getEngineByName ` to ensure ` scriptEngine ` is
remove redundant computation of correlation in euclidean distance scoring
do n ' t create sstable if it do n ' t exist
updated the relativize method to include a check for the presence of a dot path to ensure that both paths are not added with a dot
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator . java and DataType . java to ensure proper handling of null column sizes and decimal digits
[ hotfix ] [ test ] skip dlq writer head file in test
replaced ` ByteArray . toHexString ( ) ` with ` ByteArray . toJsonHex ( ) ` in ` TronJsonRpcImpl . java ` to
rename errorhandlercontroller to error 404
replaced calls to ` TerminalFactory . resetTerminal ` with ` TerminalFactory . resetIf ` in ` UnixTerminal . java ` and ` WindowsTerminal .
fix : tater should be enable by default
fixed - connectionpool . acquireconnection ( ) do n ' t remove entry from the pool .
updated methods to use ` getLdapDateConverter ` instead of ` getDateConverter ` to ensure compatibility with LDAP LDAP LDAP LDAP LDAP LDAP connections
pdfbox - 5100 : only warn if idtree there ; update comment with correct
improve error message when fail to create classloader
added exception variables for writer and reader exceptions in LargeStreamletTest . java to improve error handling and ensure proper exception management during reader and writer operations
update the current item in HomeFragment to include additional page types to enhance user experience by allowing dynamic adjustments based on user preferences
added error handling and improved image processing in AndroidImplementation . java to enhance robustness and prevent crashes when processing images
added @ SuppressSubnodes annotation and simplified string concatenation in BaseParser . java to improve code readability and maintainability by eliminating redundant operations
use try - with - resources to prevent resource leak
deleted the file TestDocInverterPerFieldError . java to remove obsolete test cases that are no longer needed
added a shell command for input keyevent 82 in AbstractLauncherUiTest . java and updated the phone lock assertion in LauncherInstrumentation . java to en
added a mapping for mapping filenames to their URLs in FileDumper . java to facilitate the generation of a JSON file paths to their URLs for better
do n ' t hold a lock when reset the result Notified flag
change texturehelper to use an image instead of a texture
polish application context id validation
updated test cases in RandomizersTest . java to reflect changes in test cases to ensure test cases are up - to - date with the latest version
updated the notification sound setting logic to allow for customizable ringtone options to enhance user experience by allowing flexibility in sound settings
add method to report loop count to root node .
added a condition to finalize the finalization of the cluster in FinalizeUpgradeAction . java and updated the cluster entity in ClusterImpl . java to ensure
cloudcloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud
removed redundant line of code in ItemOrientedStep . java to improve code readability and maintainability
added a new file ` CountedLoopProblem . java ` containing a test class ` CountedLoopProblem . java ` that includes a main method to
refactoring compile method to remove dependency on metaspace
[ gr - 13414 ] graalvm : : _ pending _ failed _ speculation _ offset should be set to - 1 instead of -
updated KafkaStreamsTracing class to use TracingValueTransformerWithKeySupplier instead of TransformerSupplier to enhance tracing capabilities by integrating tracing
[ # 11388 ] feedbackconstantsumquestiondetails : add ' Received Points ' to the list of point
added DynamicColors . applyToActivitiesIfAvailable ( this ) to BaseApplication . java to enable dynamic color application based on application requirements
added thread handling and stack dump functionality in CloseRace . java to improve error handling and debugging capabilities
updated return value from ` val ` to ` val . intValue ( ) ` in ` IntPointField . java ` and added assertions in ` Test
updated arcSize variable to use a fraction for width and height calculations to improve the responsiveness of button rendering based on the width and width
updated the width of the media media media media media media media media media media media media media media media media media media media media media media media media media
[ hotfix ] [ table - planner - blink ] [ table - planner - blink blink blink blink blink blink blink blink blink blink blink blink
fix flakiness in flakiness test
added imports for CasCoreHttpConfiguration , CasCoreTicketsConfiguration , and CasCoreHttpConfiguration in multiple test classes to ensure
replaced direct calls to ` raf . readLong ( ) ` with ` DataIO . getLong ( ) ` for reading long values using ` Data
( chore ) camel - http : reduce object allocation
add module boot path to ` declarativeshintparser ` ( # 1465 )
added mediastScriptScopeProvider class to manage script scope in the module
added a method to get and set a layer manager in AnimComposer and updated event action handling in AnimEvent to improve flexibility in managing
added a check to return early if there is no items in the queue and removed unnecessary screen updates to improve performance by avoiding unnecessary processing
added null check for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve error logging to enhance error handling
replaced ` center2D ` and ` center2D ` with ` center ` and ` center ` in ` CylinderRegion . java
updated exception handling in TestBadUseCases to use JUnit ' s ExpectedException to improve test clarity and maintainability by utilizing JUnit '
added a null check for subparams in the sendOneQuery method and implemented a new test for multi - execute scenarios to ensure proper handling of subqueries
do n ' t log customized security environment if it ' s not need
added a condition to the GET request in the ReviewInterface . java file to ensure that the request does not require an additional parameter to enhance security
refactor Test class to improve code readability and maintainability
updated PBEKeySpec to use keyLength parameter instead of blkSize to ensure correct key length is used for password retrieval
fix : update gapic - generator - java with mock service generation fix ( # 638 )
added a method to write section definitions in RtfDocumentHeader . java to improve the handling of section definitions in the document processing
added distance detection and logging for large jump jump jump jump jump jump jump jump jump jump jump jump jump jump jump jump jump jump jump in GpsLogging
removed unused logging statements in TableCellLayout , TableLayout , and TableLayout2 classes to improve code clarity and reduce unnecessary logging output
doc : generate sample code in the java microgenerator ( # 266 )
refactor ` InsightFilter ` to use ` Object ` instead of ` boolean ` for ` rootNameFn ` and ` sourceFilterFn
simplified the addition of new apps in AllAppsList . java by removing redundant binary search for app data to improve code efficiency by eliminating unnecessary
refactor SettingsActivity to extend PreferenceActivity instead of ThmedPreferenceActivity and remove ThemedPreferenceActivity to simplify the codebase and improve theme
updated the key in the generateValueClass method from " HostD " to " UseUnresolvedD " to enhance clarity by using a more desc
removed redundant assertions in FST . java to improve code clarity and maintainability
added an assertion to check if the security policy file exists and is a file to ensure that the security policy is valid before proceeding with further operations
camel - 14284 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for operations to complete before proceeding
removed the exception parameter from the log statement in MongoPersistentEntityIndexResolver . java to simplify the log message output
added method to publish an image via xmpp
camel - 7999 : camel - netty - fix npe in netty producer
updated regex pattern in BalancedClickhouseDataSource . java and added tests for invalid host name in BalancedClickhouseDataSourceTest . java to
add a system property to disable jsr199 in fragment activator
added support for handling null values in CSVRecordReader and CSVRecordReaderConfig to enhance CSV formatting capabilities to accommodate null values in
added @ LiquibaseService ( skip = true ) annotation to multiple connection classes to mark these classes as skipped during LiquibaseService execution to prevent
updated method parameters in ` addImportedStaticFieldNames ` and ` addImportedStaticFieldNames ` from ` J . CompilationUnit ` to ` JavaSourceFile ` to
updated event . topics and item state triggers to use a topic field instead of a single topic to improve clarity and consistency in topic matching logic
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to accurately reflect the specific
added a deprecated case for " zkCredientialsProvider " in SolrXmlConfig . java and updated related tests in TestSolrXml .
fix mana tablet not take into account the durability bar
added a copy of the identifier collection to the current call event to ensure the original identifier collection is not modified unintentionally
removed unused imports from TestRandomChains . java to clean up the code and improve readability
updated string concatenation syntax in ScryptUtil . java to improve readability to enhance code clarity and maintainability
refactor GeneratedCode class to improve code readability and maintainability
[ hotfix ] [ core ] fix typo in typedefinitionregistry
added visibility for the share with me icon in LocalFileListAdapter to improve user interface by hiding the share with me functionality
updated link links in DefaultLogoutPageGeneratingFilter , LogoutPageGeneratingWebFilter , and DefaultLogoutPageGeneratingFilter classes to enhance security by ensuring
updated RouterFilter and RouterServerListFilter to use @ NotNull for headers and changed test method names for clarity to improve null safety and enhance
enhanced assertion to include more context in the test case to improve debugging by providing more context for test failures
marked multiple classes related to multilayer perceptron functionality to indicate that these classes are outdated and should not be used in future development
fix npe in crawlingsessionmanagervalve when context be null
added a privileged action to the ` getJspApplicationContext ` method to enhance security by using a privileged action to enhance application context retrieval
updated the logic for calculating the length of components in RocketComponentConfig to handle cases where the component ' s axial offset offset and offset offsets are
added ` @ Singleton ` annotation to ` NonceService ` and ` SINGLETON ` in ` OpenIDAuthenticationProviderModule . java ` to ensure
updated FileWrapper class to include updateCompose method for child link updates to enhance functionality by allowing child link updates in addition to existing child files
refactor the ` doExecute ` method to remove the ` HttpMethod ` parameter and simplify its usage in the ` doExecute ` method to improve
http : / / issues . apache . org / jira / browse / amq / browse / amq - 4078 - fix test
added a new field ` mShiftCodesAlwaysOverride ` to control the behavior of shift codes in the ` AnyKeyboard ` class to ensure that shift codes
[ zeppelin - 5895 ] add zk leader check to cluster election
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filtering condition in AbstractKerberosDescriptorContainer to check for non - reference identities instead of starting with " / " to improve accuracy in identifying
updated method signatures in AbstractCommandRunner , ArtifactCacheFactory , and InstanceArtifactCacheFactory to replace ` AbstractCommandOptions ` with a ` boolean ` parameter
try to fix intermittent ci failure
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5851 : fix
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances to improve performance and simplify library management
int - 1851 : add support for sequence and ignore send failure .
updated ClientKeyPublisher and JwkViewResolver to support x509 publishing functionality to enhance the client key publishing capabilities for better security management
refactor reader assignment logic in QueryComponent . java to ensure proper handling of single readers to improve code clarity and maintainability
refactor ValueSourceParser to use Double2Parser for max and min value parsing to improve code readability and maintainability by separating concerns
removed unnecessary focus checks in return statements to simplify code logic for better readability and maintainability
removed unused variables and simplified method signature in TokenSources . java to improve code clarity and reduce unnecessary exception handling
cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud cloud zone zone zone zone zone zone zone zone zone zone zone
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use ObjectProvider < FlowBuilderServices > and added conditional on
refactor WriteJdbcPTest to improve connection management and query execution to enhance code clarity and ensure proper resource handling during database operations
removed conditional logic for setting the default look and feel in the DefaultPlatform class to simplify the code by assuming the look and feel is always set
simplified the retrieval of state entities in ServiceComponentHostImpl . java to improve code readability and reduce unnecessary method calls to enhance code clarity
updated margin calculation logic in FloatingTaskView . java to simplify margin handling by removing RTL support for RTL RTL RTL RTL RTL RTL RTL RTL RTL RTL RTL
added a condition to check the running state in RootFolder . java and updated the status line message in NavigationShareTab . java to ensure proper handling of
updated CPUCallGraphBuilder to increment threadId correctly to ensure proper tracking of thread IDs during CPU call analysis
g3d - 312 : do n ' t use toolbar for euclidian2d . getalltools ( ) in applet
added NetworkAddressChangeListener interface and updated logging messages in HomekitImpl . java to enhance network address handling and improve logging clarity
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use getLeaseRenewalTime instead of getLeaseManager to improve
replaced ` Optional . < SourcePath > ` with ` Optional . ( Optional . absent ( ) ) ` in ` CxxLibraryDescription . java `
added a null check for the exception message in ExceptionHandlerRegistryFactory to ensure that fatal exceptions are handled correctly when a null message is provided
modified the ` nextID ` variable to be ` volatile volatile ` and updated the ` getSize ( ) ` method to enhance thread safety and improve error
fix intermittent ci failure in vm
updated AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to implement HasSourcePath interface and added HasSourcePath interface to en
replaced StringBuffer with StringBuilder to improve performance and simplify exception handling
added a custom field name to the facetFields in OrdinalMappingAtomicReader and updated test cases in TestOrdinalMappingAtomicReader to enhance facet configuration
modified the calculation of epoch milliseconds in Instant . java and added a test for it in TestInstant . java to ensure correct handling of negative or positive nan
updated attribute retrieval from ` getBufferType ( ) ` to ` getName ( ) ` in ` OGLESShaderRenderer ` and ` Lwj
added block update scripts in CopyPaste . java to ensure block updates are blocked for better user experience
added a new file ` TestCMoveLimitType . java ` that implements a test for the ` CharBuffer ` implementation to ensure that the
removed redundant calls to ` getTemporalAttributes ( ) ` in ` ChannelState . java ` and added a method to ` RecordConfiguration . java
camel - 16400 : camel - sspt : fix parse exception when parse with thanks to john
updated vendor information from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to ensure compatibility with Oracle Corporation
refactored color handling in Main . java and refactored version command printing in VersionCommand . java to improve code organization and enhance
refactor token validation logic into a separate method ` validateToken ` to improve code readability and maintainability by reducing duplication
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 563 . cgi
added unit test for group member deletion .
( chore ) camel - irc : remove unnecessary object [ ] creation
deleted the V2ReplicationProtocol . java file to remove unused replication protocol class to streamline the codebase
updated references to ` compileTimeClasspathDeps ` and ` compileTimeClasspathDeps ` from ` BuildRule ` to ` SourcePath `
added a new demo class ` ConstructorArgsDemo ` and refactored ` StupidFinal ` and ` StrictDemo ` , along with ` Stupid
improve performance of direct template feature collection factory .
updated assertion in WriteResponseHandler to allow for a wider range of response counts to ensure that response counts do not exceed the defined replication factor
added null check for item index number in ItemRowAdapter to avoid potential NullPointerException when accessing index number
rename the parameter ` areAnchestors ` to ` isAncestorsShown ` across multiple classes to improve clarity and consistency in parameter naming
kitkat : do n ' t open a dialog if the width be less than 12
updated comparison in ChangeLogParameters to use ` . equals ( ) ` for string comparison to ensure accurate comparison of changeLog parameters
changed loggers from static to final in LogFactory . java to ensure immutability of the loggers map
updated the method to return the base plot instead of the original p object to ensure the correct base plot is returned for better functionality
[ hotfix ] [ rest ] add parameter to createuploaddir
added a ` sendStatus200 ` parameter to the ` ServerGenerator ` and ` ServerFCGIConnection ` classes to enable conditional handling of status
added a check to ensure the comment length is greater than zero before processing to avoid potential errors
add file type management logic for BuckFileType in BuckModule . java to ensure proper handling of file associations during file type
replaced specific imports with wildcard imports and updated method return types in ComposedUtil . java to improve code readability and maintainability
added error handling for unsupported RTM operating systems in ` RTMGenericCommandLineOptionTest ` and ` TestUseRTMLockingOptionOn
reformatted code for consistency and clarity in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code readability and maintainability
added a static import for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate mocking of ChannelTypeUID in tests to
fix index out of bound exception .
added context management for FontsContract in ShadowFontsContract and AndroidTestEnvironment to ensure proper context handling in tests
added a ` toMillis ` method to ` TimeGranularity ` and updated ` PinotDataSourceMaxTime ` to use it to improve time
added null checks and refactored control flow analysis logic in ControlFlow . java to enhance error handling and improve analysis accuracy for control flow
improve error message for array assertion failure
added a default case for handling unknown types in WindowClickLogic . java to improve handling of unknown types to ensure consistent behavior when dealing with unknown types
fix incorrect offset calculation in meshbuilder
nifi - 10861 : remove unnecessary ' this ' keyword in standardprocessscheduler
added support for processing Javac plugin properties in KotlincToJarStepFactory to enhance the KotlincToJarStepFactory to
updated the RESCROLL _ DELAY value from 750 to PagedView . PAGE _ SNAP _ ANIM _ DURATION to improve the responsiveness
added functionality to refresh shortcuts if the model has a host permission to ensure shortcuts are updated only when the model has the necessary permissions
added case handling for the HISTORY _ SEARCH _ BACKWARD command in ConsoleReader . java to improve command processing for search functionality
added null check for core name and updated error handling in CoreAdminHandler and CoreAdminHandlerTest to ensure proper error reporting to improve robustness and cl
added marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker marker
added exception handling to FileSyncAdapter to improve error reporting and debugging capabilities
refactor TestMemoryAwareness to use OutputAnalyzer for better error handling to improve reliability of memory usage checks to enhance robustness by
modified FeedQueues . java to adjust feed processing logic based on application settings to ensure feeds are only processed under heavy - load conditions to improve performance and
added checks for the current thread in DefaultDrmSession and DefaultDrmSessionManager to ensure that the media session is accessed on the correct
updated AndroidBinaryDescription to use Locale . US for package type conversion to ensure consistent handling of package types across different locales
change the default value of the xml mime type from ` ` text / xml ' ' to ` ` application / xml ' '
updated file initialization to use INSTANCE . confFile to ensure consistency in configuration handling
removed the sleep duration from the waitUntilReadyAndTimeout method call to simplify the test execution
updated mathematical operations in HiveExpandDistinctAggregatesRule to use LongMath ' s operations to improve precision in calculations involving group counts
added a check for headless environments in the toolkit to ensure appropriate handling of graphical operations in headless environments
[ furnace ] fix exoflame furnace handler to match the current world .
make move thread count configurable
fix bug in search with rev - include
added a new test class ` Issue582Test ` to validate the behavior of the ` pumpSource ` and ` BTreeKeySerializer
[ native ] [ table - common ] add test for decimal overflow
refactor LoadingCache class to improve performance to optimize cache retrieval efficiency
added a new rule " avoidNonConstructorMethodsWithClassName " to the rules within the NamingRulesTest class to ensure that non - constructor methods are not
danielwagnerhall : catch stale element reference in expected conditions .
updated error handling in ` ViewExistsPrecondition ` and added ` hasView ` method in ` DatabaseSnapshotGenerator ` and ` JdbcDatabaseSnapshot
refactor DOMUtil class to improve code readability and maintainability
added translation and scaling methods to TaskViewUtils and utility methods to enhance animation effects in the user interface
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false to disable fixed rotation transformation feature
added a method ` walk ` in ` TempFSTTermsReader ` to iterate through FST arcs to streamline the process of reading
added SolrQueryRequest parameter to the create method across multiple augmenters to enhance query handling capabilities in the document augmenters
add post _ content _ insert _ check and announcement _ validuntil to post _ content _ update _ check test
refactor FieldValueHitQueue to use setComparator methods to improve code clarity and maintainability by centralizing comparator management
updated string concatenation syntax in PhoenixQueryBuilderTest . java to ensure proper formatting of SQL queries to prevent SQL injection vulnerabilities
added Spark initialization in RequesterTest . java to ensure proper initialization of Spark components
added methods to manage and retrieve total storage metrics in DynamicPropertiesStore to enhance functionality for managing storage metrics in the application
added support for streaming files from a specified source directory in AssetsController to enhance the asset management functionality by allowing the application to stream files
updated the key check in MapMarksManager to use a new method for key retrieval to improve code readability and maintainability
updated the ` getDefaultValue ` method to include a ` TokenRewriteStream ` parameter to enhance the handling of token rewriting in the ` getDefaultValue
removed IOException declarations from method signatures across multiple files to simplify method signatures for better readability and maintainability
add try - catch block around jxbrowserclassloader . addurl ( ) to catch exception
updated method calls in IOSImplementation . java to use " AppVersion " instead of " format = = " to improve clarity and consistency to
replaced ` getBridgeUID ( ) . getId ( ) ` with ` getUID ( ) ` for logging in ` SomfyTahomaBridgeHandler
disable flaky test on github
improve openwire connection timeout test to use system property
added handling for NaN values in metric reporting to improve error handling and logging clarity when reporting metrics
remove session from session info when session id change
added null checks for alert names in HeartBeatHandler . java and updated log message formatting in AlertReceivedListener . java to ensure alert names are set
simplify the flush logic in the ChannelEndPoint class by simplifying the buffer flushing process to improve code readability and maintainability
resolve split - packages : move kmodule . xsd from kie - api to kmodule . xsd
added a test for seekTo mode in ShadowMediaPlayer to ensure correct behavior of seekTo functionality in the media player
change createtask with throw suppier to createtaskthrowing due to type
added border settings for the close button in the tabbed pane based on the AQUA _ LAF mode to enhance the visual appearance of
added connection and read timeout settings in TSPTimeStampService . java and improved test assertions in TestSignatureInfo . java to enhance connection
[ jbrules - 3674 ] add wildcard type permission to xstream
added error handling for non - generic parameterized class types in diamond type handling to ensure proper error reporting for non - generic generic type parameters
[ hotfix ] [ javadoc ] fix checkstyle violation
updated validation conditions for ` id ` and ` value ` in ` Http2Settings . java ` to ensure that ` id ` and ` value ` are
deleted the file MapInterfaceTest . java and Issue664Test . java to remove obsolete test cases that are no longer needed
[ hotfix ] [ test ] remove unnecessary try / catch block
[ geos - 7012 ] fix for geos - 7012 we should not include the root object in the json output
replaced the method ` setIndex ` with a direct call to ` myTable . setSelectedIndex ` for setting the selected index to simplify the code by elim
added a check to ensure that manual unstashing is only attempted when the application is not currently unstashed to prevent unstashing of unstash
camel - 7999 : camel - yaml - dsl - fix camel - yaml - dsl - dump route in xml format
modified the eventMismatchMessage method to accept a boolean parameter to control the expected event count to enhance flexibility in event handling by allowing control over event
added a new file ` HeaderFixer . java ` to handle license header files to ensure proper handling of licensing headers in the application
added functionality to send a broadcast if the first loading complete to ensure the app widget is only loaded if it is not already complete
deleted the ` SuperJumperAndroid ` class from the project to remove unused or redundant code to streamline the codebase
updated return value from ` true ` to ` isDistributed ( ) ` in ` SystemTableScan ` and modified query formatting in ` TestStarQueries `
remove * aware interface . we can think of add them back some other time ; fix gh - 3294 ( # 3295
fix memory leak due to miss resource location
updated return statements in AtomicIntegerArray , AtomicLongArray , AtomicReferenceArray , and AtomicReferenceArray classes to ensure proper handling of large integer and long
added caching for the data format format in HSSFCellStyle . java to optimize performance by avoiding repeated method calls to get data format formats
updated the query condition in RemoteAuthenticationEndpointTests to include the username in the request to enhance security by restricting requests to specific users
pdfbox - 4892 : replace def . needinput ( ) with def . finished ( ) , a suggest by valerybokov
updated logging to include container information about the current container and workspace container to improve logging clarity for better context in the launcher launcher launcher launcher launcher launcher launcher
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax deps to 2.18 . 0 (
move deadlocktest to test - suite
do n ' t add marker if they do n ' t exist
add a menu item to open the browser if the server be up to date
added a new error message for multi - output scenarios in ` ErrorMsg . java ` and refactored existing logic in ` SemanticAnalyzer .
added tests for ` addEntryListener ` method in ` BasicTest . java ` to ensure that the ` addEntryListener ` method behaves as expected and
fix coordinatearraylist . reverse ( ) when coordinate array be empty
removed unnecessary whitespace in setOpen method to improve code readability and maintain consistency in formatting
added a boolean variable ` first ` to track the first state of payloads to ensure that the state is accurately represented in the test cases
replaced the condition for entering overview mode with a direct method call to showOverviewMode to simplify code and improve readability
( chore ) camel - network : fix network route test
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE to ensure proper handling of maximum integer limits
reformatted code for better readability to improve code maintainability and clarity
update pending buffer handling in HttpClientRequestImpl . java and enhance test assertions in HttpTest . java to improve performance and reliability of buffer writing
updated the verbose level condition and modified the artifact replacement logic in GetMavenDependenciesTask . java to ensure correct filtering of artifact names to improve accuracy in
pdfbox - 4892 : simplify code , a suggest by valerybokov
removed debug print statements in ReferenceUtil . java to streamline code and improve readability
fix virtual field predicate to work with query type ( # 762 )
added ` solidityJsonRpcHttpPort ` and ` NODE _ HTTP _ JSON _ SOLIDITY _ PORT ` to ` CommonParameter `
added a check to ensure the folder is an instance of DropTarget before removing it to prevent potential ClassCastException when attempting to remove it
refactor stub jar creation logic into a separate method to improve code readability and maintainability by reducing duplication
added new features including " Setup wizard " , " Probe Module " , and " Workflow helper " to the application to enhance user experience by providing better setup guidance and project management
do n ' t use meteredflusher to avoid deadlock
simplified null check for online availability to improve code readability and reduce unnecessary type casting
changed return attributes from ALL _ USER to ALL _ USER in LdapUserGraphicalAuthenticationRepository to ensure proper attribute retrieval for all users
refactor onIdleTimeout handling in HttpChannelState . java and add failure listener handling in HttpChannelTest . java to improve error reporting to enhance
refactor CreateEndPoint to extend Invocable . NonBlocking and implement Closeable . NonBlocking to simplify class structure and enhance code readability
updated TABLE _ HEADER _ SEPARATOR regex and modified its matching logic in TableBlockParser . java , and added a new test case in Table
updated return value from 32.0 f to 31.5 f in Camera . java to improve precision in camera movement calculations
None
updated the client secret length from 128 to 512 to enhance security by restricting the client secret length
updated error messages in MySQL and PostgreSQL stored procedure procedure to ensure proper handling of null parameters to avoid potential null pointer exceptions
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to mark the test as ignored due to a race condition
refactor PinotFS handling in SegmentGenerationAndPushTaskExecutor and SegmentGenerationAndPushTaskExecutor to utilize PluginManager for better integration
added locale - specific date formatting logic to TimeLineCursorAdapter and TimelineArrayAdapter to ensure the correct date format is used based on the user ' s
added MetalLookAndFeel to the UIManager in bug8032878 . java to enhance the UI appearance of the application
added synchronization for sending messages and refactored pingTask destruction logic to improve thread safety and resource management during session destruction
replaced ` throwable . getMessage ( ) ` with a direct reference to ` throwable ` in the ` GlobalErrorHandler ` class to simplify error handling by avoiding
rename ` module ` parameter to ` from ` for consistency .
updated exception handling to use ` cmdLineException ` instead of ` Exception ` to improve error logging for command line exceptions
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added a deprecated ` hashCode ( ) ` method in ` Subject
updated variable types in CustomPlaybackOverlayFragment and ImageButton for consistency and clarity to improve code readability and maintainability
updated zoom level settings in BasicMapViewer . java to improve map view rendering by adjusting zoom limits to optimize performance and reduce memory usage
refactor admin user and group retrieval in DrillRoot . java to utilize ImpersonationUtil for retrieving process user groups to improve code
replaced instances of AccessController with Strings for permission checks across multiple classes to simplify permission handling and improve code readability
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated session store handling in DelegatedAuthenticationWebflowConfiguration to enhance flexibility in service retrieval
changed the defaultGroup variable from non - final to final to ensure immutability of the defaultGroup variable
tilesizechanger : improve performance
removed redundant calls to removeAllViews ( ) in the CustomPlaybackOverlayFragment and InfoLayoutHelper classes to improve code clarity and reduce unnecessary method calls
refactor ` cleanEntriesForFeedsWithoutSubscriptions ( ) ` method to ` cleanFeedsWithoutSubscriptions ( ) ` and update related logic
removed redundant calls to CoreAuthenticationTestUtils . getAuthentication ( ) to simplify code and improve readability
nifi - 1474 : use a temporary folder to avoid test failure
fix for theorem proving ( conic )
reformatted code to improve readability and maintainability of the RandomAccessReader class
added @ SuppressWarnings ( " unchecked " ) annotations to fields and MockitoBeforeTestNGMethod classes to improve code safety by suppressing unchecked warnings
refactor ` createFromImage ` method to ` createFromImages ` and introduce ` List < Image > ` for handling images to improve code
changed the type of ` WritableByteArrayComparable ` from ` WritableByteArrayComparable ` to ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java `
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity regarding the purpose of the
refactor : use java . util . objects . equals instead of null comparison
fix npe when canonicalname be null
added verification for NinjaProperty keys in NinjaDefaultTest . java to ensure that error handling and 404 404 404 404 404 404 404 404 404 404
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve method clarity and
updated padding calculations in DetailFragment and modified list view position offsets in ListFragment to improve layout consistency and ensure correct positioning of list elements
modified exception handling and added thread interruption in ZkStateReader . java to improve error reporting and ensure proper thread interruption handling
added null checks for header fields in HttpFields . java and created a test for empty headers in RequestTest . java to ensure proper handling of
server : do n ' t allow static nat service to be use if nat service be not available
added multiple calls to resetHeaderScrollingState ( ) in OCFileListFragment . java to ensure consistent header scrolling behavior in the UI
added functionality to remove extra empty screen from the workspace
added support for fixed width glyphs in BitmapFont to enhance glyph rendering flexibility based on the specified width
removed the ` show _ title ` parameter from the ` createFragment ` method in ` ChangeLogFragment ` to simplify the fragment creation process by
added preEvent and postTransition methods to AbstractStateMachineFactory for state machine processing to enhance event handling capabilities in the state machine framework
refactor ConfigDescriptionProvider class to improve code readability and maintainability
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf handling in StorageBasedMetastoreTestBase to ensure proper role assignment and enhance
refactor facet sorting logic to check if the count is sorted before breaking the loop early to improve performance by avoiding unnecessary iterations when sorting
updated property handling in CheckstyleReport to use a variable for overriding properties to improve code readability and maintainability by avoiding repetitive method calls
refactor DeleteInactiveReplicaTest to improve jetty handling and error messaging to enhance clarity and maintainability of the test code
added a file name parameter to the newInstance method in FileActionsDialogFragment to allow specification of the file name in the dialog creation process
updated the handling of reorder direction in CellLayout to include an invalid direction constant for better clarity to improve code readability and maintainability by using a
updated field names and paths in InnerTransferRequest and AccountAPI classes to improve clarity and consistency to enhance code readability and maintainability
wait for job to be run before assert job status ( # 16428 )
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package to provide a
added type checking for identifiers in the visitIdentifier method to enhance type safety by ensuring only valid types are processed
added action text color to AuthenticatorActivity to enhance user interface clarity by using a primary dark color
added ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes to handle foreign key constraint validation
rename methods to create test steps for hooks to improve clarity and consistency in method naming
refactor test method names for clarity to improve code readability and maintainability
added a method to cancel client connections in ` SparkClientImpl ` and implemented ` cancelClient ` in ` RpcServer ` to ensure proper handling of client
added ` getImplicitPreCoercionValue ` and ` getImplicitPreCoercionDefaultValue ` methods across multiple classes to enhance parameter coercion
initialize lastDisplayedUser with an empty Optional to ensure lastDisplayedUser has a default value to avoid null pointer exceptions
added a new method ` findAll ` to ` QueryDslMongoRepository ` and updated the method signature in ` QueryDslMongoRepository ` to
added null checks before stopping instances of SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions to ensure safe stopping of instances to avoid
[ hotfix ] [ benchmarks / benchmarks ] exit the warm - up loop in case of a failure
added xread and xreadgroup methods to the MultiKeyPipelineBase and MultiKeyBinaryRedisPipeline classes to enhance functionality for handling multiple
modified the ` incrReadByteCount ` method calls in ` LinkedBufferInput ` and ` StreamInput ` classes to correct the method call to ` incr incr
added a new ` webSecurityCustomizer ` bean and updated the ` configureHttpSecurity ` method in ` CasWebSecurityConfigurerAdapter
added a new test class ` TestJdbcWithDBTokenStoreNoAs ` that extends ` TestJdbcWithDBTokenStoreNoAs ` to
added a new method ` registerProviderInternal ` in ` ShadowContentResolver ` and implemented the ` create ` method in ` ContentProviderController `
updated method signature to use ClassFile . Version to improve type safety and clarity
added keep - alive configuration setting to SingleConnectionManager to enable keep - alive functionality for improved connection management
[ java ] rename multicast sender flow control supplier to avoid confusion .
g3d - 312 : do n ' t draw a 3d line when there be no point in 2d line
added concurrent imports and improved error handling in ChannelEndPoint , HttpServerTestBase , and WebSocketConnectionD13 classes to enhance thread safety and
[ grid ] add selenium . selenium . screenshot system property to take screenshot
replaced assertEquals with assertThat in multiple test classes to improve readability and maintainability of assertion statements
truffle : remove deprecate trufflelanguage . getcontextreference
refactored exception handling in StubberImpl and added new test classes for handling bad exceptions to improve error management and ensure proper exception handling
updated exception handling in Actor . java and Group . java to improve error reporting to enhance clarity and provide more informative error messages to ensure
added location permission functionality to the location picker activity to enhance user experience by allowing users to easily access location settings
http : / / issues . apache . org / jira / browse / amq - 1892 - add a test case for
added import for CookieSpecs and set cookie specifications in requestConfigBuilder to ensure consistent cookie handling across the application
simplified the intersection logic in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to improve audio quality and performance by using a non -Clipping gain instead of
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enhance the functionality of the ScrollingPanel
[ hotfix ] [ k8s ] remove unused k8s . service . create - timeout config option
updated icon resource handling in NearbyListFragment to differentiate between landmark and city places
added a null check for the package before processing to avoid potential NullPointerExceptions when the package is null
added a new file PrintInlining . java that prints a success message indicating a successful operation
fix ( javadoc ) : support nested brace in javadoc
[ java ] remove dead code .
updated the method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable ` to ` getEdges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve readability
added logging for playback speed in VideoManager to improve debugging and traceability of playback speed issues
added event cache for room remove event
updated the key from ' replicas ' to ' cores ' in the AutoScalingHandlerTest to accurately reflect the intended functionality of the test
updated texture key settings in TextureHelper . java to enhance texture rendering functionality and improve performance
updated PythonDslProjectBuildFileParser to use CloseRecordingProjectBuildFileParserDecorator instead of PythonDslProjectBuildFileParser to improve
[ j2cl ] add library normalization pass .
removed the ` this ` parameter from the ` nextResponseBodyConverter ` method in ` GuavaOptionalConverterFactory ` and ` GuavaOptionalConverter
[ hotfix ] [ core ] add miss @ visiblefortesting annotation to memorysegment
cloudstack - 7751 : add miss annotation to consolesessionvo to avoid npe
added a new file Hbs . java and its corresponding test class HbsTest . java to implement a template engine for handling Jooby
updated ChatMessageAdapter to handle empty hint and incoming messages more gracefully to improve user experience by ensuring appropriate visibility and visibility of message elements
[ hotfix ] [ table - common ] [ csv import ] fix bug in importcsv
added test for wait until alert dialog be present
added a check to return null if the number of distinct columns in the ReduceSinkDeDuplication class is greater than 2 to prevent further processing when the
refactor imports and error handling in MiscUtils . java to improve path processing logic and enhance error reporting
regenerate client with updated copyright year ( # 4382 )
updated WebSocket version from " org . eclipse . jetty . websocket " to " org . eclipse . jetty . websocket - client
updated return statement to return an unmodifiable map of identity attributes to enhance immutability and prevent modification of the original collections
do n ' t repaint the header if the sketch do n ' t have a saved program
replaced instances of ` new Float ` with direct return statements in multiple classes to simplify code and improve performance by eliminating unnecessary object creation
replace getDate ( ) with getTimestamp ( ) in JdbcDataSource to ensure the correct timestamp is used for data retrieval
updated class name handling in HtmlJndiTreeReport . java to include " javax . naming . Context " to ensure proper identification of JNDI
updated database option handling in StorageUtils . java and improved logging in Manager . java to enhance code clarity and provide more informative logging
updated the edgeType check from " double " to " mutual " in ImporterGEXF . java to accurately reflect the type of edges
updated FLAG _ SLIPPERY in StatusBarTouchController . java to use FLAG _ SLIPPERY to improve code readability and maintainability
truffle : fix truffleconstantfieldprovider to handle array of array
added functionality to manage and customize the Google Drive folder path in the application to enhance user experience by allowing users to customize the folder structure for
ggb - 2118 shuffle suggestion in av
added @ Nullable annotations to method signatures in Truth . java to improve null safety and clarify that the target parameter can be null
updated array manipulation logic in ArrayUtil . java to ensure correct transformation of new size values
added a new test class ` ApiExceptionTest ` and modified the constructor instrumentation logic in ` ClassInstrumentor ` to ensure that the ` constructor
added functionality to manage ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack ack
added ` isKeyguardSecure ` and ` setIsKeyguardSecure ` methods to ` ShadowKeyguardManager ` for secure keyguard handling
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization of the class
updated the parsing logic in GrblUtils . java to handle cases where overrideParts may be empty or null to ensure proper handling of empty or null values
[ hotfix ] [ test ] fix typo in multiplefailureexceptiontest
refactor ` checkDrained ( ) ` in ` AsyncFileImpl ` and add a new test for ` drainNotCalledAfterClose ( ) `
updated LIGHTS _ NUM and LIGHT _ INTESITY constants and modified shader configuration parameters in HybridLightTest . java to improve light intensity and
replaced ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple test files to streamline filesystem initialization and improve code consistency
updated variable types from String to PathWithLines in RuntimeOptions and CucumberFeature classes to improve type safety and enhance code clarity
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from the TEST _ DIRS array in PubRoot . java to simplify the code by eliminating unnecessary null checks
added a call to close the ParcelFileDescriptor instance to ensure proper resource management and prevent memory leaks
added thread - local support for managing prefix indices in BasisLibrary to improve thread safety and avoid contention in multi - threaded scenarios
added a debug log level annotation to TestDistributedStatsComponentCardinality to facilitate easier troubleshooting during development development
added multiple calls to throwIfImmutable ( ) in IntList . java to ensure that modifications are not made to immutable instances of IntList
added ` @ NotNull ` annotation to ` onApplicationEvent ` method and updated ` GrpcClientBuilder ` to use ` @ NotNull ` for
make graal demo easy to use
only invalidate function array when necessary .
added platform - specific handling for the manifest file output to ensure compatibility with different operating systems
updated priority from NORMAL _ PRIORITY to HIGH _ PRIORITY in FindNullDeref . java and added a new class RFE3531161 to
updated ` getConfigDescription ` method to return a nullable ` ConfigDescription ` object to improve null safety and prevent potential null pointer exceptions
do n ' t throw cancellationexception on masterjobcontext # createancellationexception ( )
pdfbox - 4892 : avoid npe , a suggest by valerybokov
rename managerbase to managerbase for clarity
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to allow access to All Apps from the
refactor FragmentTestUtil to use Robolectric for activity lifecycle management to improve test stability and readability by utilizing Robolectric '
renamed ` fileCoordinates ` to ` processFileCoordinates ` and added a method ` getDecimalCoords ` in ` FileProcessor ` to improve clarity
changed class names from ` ABCase1 _ 1 ` to ` TestABCase1 _ 1 ` and ` ABCase2 ` to ` ABCase
renamed the parameter ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and updated its usage in ` saveEnergyPriceHistoryDone
refactor the handling of rocket change events in OpenRocketViewer to improve readability and maintainability of the code
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe for renaming old and new dependencies to facilit
refactored directory handling in IndexingJob . java and added validation in SegmentChecker . java to ensure only valid segment paths are added to segments to
updated address comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure correct
refactor PreprocessorDelegate to use memoized Supplier for replacement and path mapping to improve error handling and reduce code complexity
updated class name from JsonExamples to examples in JsonExamples . java to improve clarity and consistency in naming conventions
added debug logging statements to ViewExtractor . java to improve traceability of input and output stream operations
refactor FindsByLinkText class to improve code readability and maintainability
added a new file ` Main . java ` that prints the Java oop entry point hit to indicate that the Java oop entry point is hit
fix a problem where we do n ' t have access to the sip account header .
removed multiple lines of code in NativeScanner . java to improve code readability and maintainability
changed package and import statements in RendererConfigurationTest . java to align test structure with the correct package organization
replaced ImmutableSet with Supplier for resolving dependencies in AndroidLibraryDescription . java to improve performance and reduce memory usage when resolving dependencies
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` for better readability to improve code clarity and maintainability
added charset handling in ExtractingDocumentLoader to ensure metadata accurately reflects the content type being processed
updated SQL insert statement to use ` ? ` instead of single quotes for ` username ` and ` domainName ` to enhance flexibility in SQL statement
added a null check for the slot in WindowListener . java to prevent potential null pointer exceptions in PlayerInventory and WindowListener . java
add ` ` ignore - transitive - repositories ' ' option to allow maven to specify which repository to ignore .
removed an unused reference to BackgroundJobManager in ContactsPreferenceActivity . java to improve code clarity and maintainability
updated imports in ColorsActivity to use AppCompatActivity instead of Activity to ensure compatibility with newer Android versions
add a null check before closing the selection in NIOTransport . java to prevent potential NullPointerException when closing the selection
added a condition to break early if the matcher ' s start and end indices match to optimize performance by avoiding unnecessary processing
added a server port configuration to the integration test to ensure the test runs without affecting the server port
added a reverse function to the UDF that implements the reverse operation in Hive to support reverse traversal in Hive queries
updated method calls to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` across multiple classes to ensure consistency in
refactor Tracer class to improve code readability to enhance maintainability and ease of understanding for future developers
[ hotfix ] [ test ] ignore the rocksdb state backend test
replaced specific JUnit assertions with wildcard imports in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization to the buffer implementation to ensure thread safety during record management operations
updated forecast minutes , hours , and days values in OpenWeatherMapOneCallHandler . java to accommodate new data structure requirements
added timeout annotations to multiple test classes and updated fetch request time logic to improve test reliability and clarify fetch request timing behavior
updated RemoteTargetGluer and FloatingHeaderView to improve handling of remote target handles and add content animation functionality to enhance user experience by providing smooth
replace ` splitAndMap ` with ` splitAndThenFlatMap ` and return a ` Collection < Collection < FeatureWithLines > > `
add item for botania creative tab to the creative tab .
updated assertions in TestRadioButtons to check for expected sizes instead of expected sizes to ensure tests accurately reflect the correct number of options
added support for a file size parameter in RCFileCat to enhance data processing by allowing users to choose between compressed and uncompressed file sizes
refactor multiple Java files related to clustering algorithms to improve code organization and maintainability
improve error message when try to access a non - exist anymore .
refactor BlobServer class to improve code readability and maintainability
fixed bug issue with unused static inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner inner
rename variable ` lexicalScope ` to ` lexScope ` in ` Global . java ` to improve clarity and consistency to enhance code readability by
added a new test method ` testAutoStartup ` to the ` InboundChannelAdapterParserTests ` class to ensure that the ` SourcePollingChannelAdapter
added ` getLevel ( ) ` method to ` Node ` , ` Quadtree ` , and ` AbstractSTRtree ` classes , and
updated version number parsing logic to handle minor version number correctly to ensure proper extraction of version numbers from version numbers
added a check for non - empty tags before adding tags for items in ItemRegistryImpl to ensure tags are only added when they are not empty to avoid
added methods to parse date and time strings into epoch milliseconds to enhance date and time handling capabilities in the DateTime framework
hhh - 17100 - fix wrong disassembly of custom type .
refactor Log4j2ConfiguratorServlet to improve code organization and maintainability
simplified exception handling in StorageBasedAuthorizationProvider to improve code readability and reduce unnecessary variable scope
updated Cgo compilation step to use String . join for command prefix and added a new test for C++ prebuilt dependencies to improve code readability and
fix : mark builder a buildable
removed the @ Override annotation from mmm and ppp classes to streamline code by eliminating unnecessary overrides
added a timeout value of three hours to HttpConnectionParams to improve connection handling by limiting the timeout duration
added pipeline configuration parameters to PerBuildStateFactory and RawTargetNodeToTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevelTopLevel
simonstewart : add support for ` ` enable / disable trace ' ' constraint in selenium server
added @ Singleton annotation to ApplicationController class to ensure the bean instance is created only once
updated username retrieval logic to handle OwnCloudAccount instances and fallback to a default username if display name is unavailable
added BatchStatus import and a test for resumed paused job execution in SimpleJobLauncher to ensure proper handling of job executions in batch processing
added null check for cacheConfig before accessing cacheConfig to avoid potential NullPointerException when cacheConfig is null
danielwagnerhall : make localnode public
fix compilation unit test : do n ' t use ` ` java . lang . ' ' a the package name
pdfbox - 4892 : use nonsevere pdfdfdocument constructor to avoid npe
mahout - 1865 : fix checkstyle error in testdistributedLanczossolvercli
refactor HttpServerTestBase class for improved readability to enhance maintainability and facilitate future development
refactor assertions in PortletApplicationMapTest to use a set for key sets to improve readability and maintainability of the test code
added tests for handling ` NestedBeanIgnoreNulls ` in ` NestedBeanIgnoreNulls ` to ensure correct behavior of ` NestedBeanIgnoreNulls `
feature - add support for spring spring spring spring spring spring spring spring spring spring spring spring spring spring spring spring spring spring configuration
fix indexoutofboundsexception in indicator . todouble ( )
added new method ` execInContainerWithUser ` to ` ContainerState ` and ` ExecInContainerPattern ` classes to enhance container execution
removed redundant checks for WebSocketByteMessages and WebSocketTextListener in NettyWebSocket class to simplify the logic for interestedInByteMessages and interestedInTextMessages
[ semgrex ] add test for negated attribute
added a broadcast for clearing the pull unreading action in HomeFragment . java to enable users to reset the pull unreading state in the application
fix lint : remove sdk < 14
add flush method to avoid leak
( chore ) camel - jbang : fix npe in abstractcamelcontext when try to start camelcontext .
added FloatingActionButton handling for the main FAB and main FAB in ShareActivity to enhance user interaction by allowing easy access to additional
added a new ` InlineParslet ` class and modified ` ToDateTokenizer ` to support inline date formatting to enhance date parsing capabilities
refactor TestAnonymousClassUnloading class to improve code readability and maintainability
updated Swedish language resource files to correct terminology to improve clarity and accuracy of error messages
added a check to ensure the operation service is only bind once to improve user experience by preventing multiple bind attempts when the server is connected
updated method calls to use node ' s beginLine and endLine instead of node to ensure accurate positioning of nodes based on their line number
added waitFor method in CxxPreprocessAndCompileStep . java and ManagedThread . java to ensure proper synchronization and error handling during processing
added support for " all " repository sources in PrincipalAttributesProperties , CoreAuthenticationUtils , and created PrincipalAttributeRepositoryFetcherTests to en
mapstoreevictiontest : wait for cluster to be ready
added support for ssl protocols in Netty web server configuration to enhance security by allowing configuration of SSL protocols
replaced AtomicBoolean with AtomicReference for the set variable to improve thread safety and encapsulation in the code
modify getKeyForPath method to handle null properties in QueryDslMongoRepository to improve functionality by ensuring a fallback mechanism when no property is
updated assertions in RoundRectBorderTest . java to improve clarity and specificity of border comparisons to enhance readability and provide more informative
added a check for empty genesis configuration and updated related test cases to ensure that an empty cluster does not cause errors during validation
remove paralleltest a it ' s heavy and quite pointless
updated CountDownLatch and futures initialization to use ' min ' instead of ' cnt ' and added a validation check for the ' sign ' array length to ensure
changed the condition from ' windows ' to ' ! windows ' in ProcessInformationsPanel . java to check for non - Windows windows to ensure proper
refactor MoreCollectors methods to improve clarity and functionality to enhance code readability and maintainability by consolidating collector methods
added null checks for services and improved WebSocket handling in BitmexStreaming classes to enhance robustness by preventing null pointer exceptions and
added validation checks for lat and lon in GeoPointField . java to ensure only valid lat and lon values are accepted to improve error handling and provide clear
refactor workflow file handling methods to improve clarity and consistency to enhance code maintainability and ensure proper file naming conventions
refactor ResponderId class to improve code structure to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to include a ` withDependents ` parameter for better control over table document retrieval to enhance flexibility in handling
added a confirmation dialog for users regarding the absence of consecutive uploads without coordinated coordinates in UploadActivity to enhance user experience by informing
added caching functionality and a new method to view profiles with specific data to improve performance by reducing redundant serialization of profile data
refactor JpaMetamodelEntityInformation to improve handling of identifierderivation and type checks to enhance code clarity and ensure proper
added index creation and validation for the last DDL timestamp in UpgradeIT . java and updated method names in UpgradeUtil . java to enhance
add default exception mapper to dropwizard resource
added a new parameter ` false ` to the method signature of ` EntryEditor . java ` to control the behavior of the ` storeFieldAction ` to
added an owner parameter to the nativeCreateNSWindow method and updated its usage in the nativeCreateNSWindow method to allow for better handling of the owner
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to improve clarity and accuracy in the database schema
fixed bug relate to average which affect
fixed - commandasyncservice . readasync ( ) and commandasyncservice . writeasync ( ) throw nullpointerexception if codec be null .
add detection for unrelated generic type in genericcontainer
refactor back animation handling in LauncherBackAnimationController to utilize BackProgressAnimator for improved animation management to enhance the responsiveness
changed the ` _ initialPageNo ` from ` _ initialPageNo ` to ` _ initialPageNo ` and added a check for ` _ initial
fix crc calculation in jedisclustercrc16
added comment handling in ParsedSqlChangeLogParser and a corresponding test case in DatabaseChangeLogParserTest to ensure comments are correctly processed in the change log
fix maven archiver initialization to avoid npe
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling for class usage file loading failures
refactor aggregation logic in TSServiceImpl . java and add a multiAggregationTest method in DaemonTest . java to improve code readability and
added support for reading from a ByteBuffer in GwtGL20 . java to ensure proper handling of unsigned pixel data in GWT rendering
added a new test method ` testDebugInfo ( ) ` in ` OutputMemoryTest . java ` and updated method calls in ` PrintR . java `
replaced ` UnmodifiableClassException ` with ` Throwable ` and added error handling for bytecode instrumentation in ` InlineBytecodeGenerator ` to improve error reporting
[ gr - 3670 ] add trace for class initialization .
http : fix typo in basebrokerrequesthandler ( # 11349 )
updated imports and refactored TopicRouteService to use CaffeineCacheLoader and Caffeine for cache loading to improve cache management and
make mbtiles data source read - only by default
updated INVALID _ SOURCE _ TARGET _ RELEASE regex pattern in FindBuildToolFailures . java and added fatal error handling in FailureLogAnalyzerTest .
updated the URI construction in DetailFragment . java to include a check for availability and if the location is available to enhance functionality to ensure the URI
added null check for inherited parameter contexts in StandardParameterContextDAO to avoid potential NullPointerException when accessing inherited parameter contexts
refactor ClassLoader class to improve code readability and maintainability
added a method to set the origin response header in ProxyRequestHelper and implemented a corresponding test in ProxyRequestHelperTests to ensure proper handling of HTTP headers
added a new ProfileSettingDrawerItem to the GpsMainActivity to enhance the user interface with a profile setting functionality
allow to turn off jasper xml validation by default
danielwagnerhall : fixing firefox driver to work with javascript
added support for maximum rows in IoTDB statement to enhance query performance and prevent exceeding fetch size limits
replaced isCountOptimizable ( ) with allOptimizable ( ) and allActionsAreOptimizable ( ) methods in SqlStreamTerminator . java to improve
added support for handling node selection in StandardVizEventManager to enhance user interaction with node selection in the visualization
refactor memory handling in ManyToOneRingBuffer to use a new zeroBuffer method to improve code readability and reduce duplication in memory management logic
[ drools - 7 ] add accessors for xorgroup in processnode
no functionality change - code cleanup
refactor SourcePathResolver to simplify path resolution logic and improve code readability to enhance maintainability and streamline path resolution process
fix xml parser to encode dstu2 value
changed the visibility of the ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and updated its usage in ` WebsocketRoutingFilter
rename ` ` suites - config / ' ' to ` ` suites - config - compile ' ' to avoid clash with ` ` suites -
added a method to retrieve the CxxPlatform based on build target and arguments in Haskell binary binary binary binary binary to improve flexibility in platform configuration
added imports for ` IndexReader ` , ` Searchable ` , ` Similarity ` , ` Field ` , and ` Searchable ` classes to en
updated ConcurrentLinkedStack to handle null values and improved test methods in ConcurrentLinkedStackTest to enhance null safety and ensure correct behavior to improve st
added methods ` isMatched ` and ` setMatched ` to ` BinaryHeapQueueTest ` and ` BaseQueueableableableableableableableable
added a null check for mDirectories before accessing its contents to prevent potential NullPointerException when mDirectories is null to ensure safe access to prevent potential NullPointerExceptions
updated conditional logic in RecentsView . java to check if overview state and first layout is not enabled to ensure proper handling of overview state and layout
added package - info . java files for various Lucene packages to improve organization and clarity of the codebase
added a line to display the visibility state of the visible auto leveler panel to enhance user experience by providing contextual information
added optimization callbacks to DirectUpdateHandler and DirectUpdateHandler2 to enable post - optimization for event listeners to enhance event listener management during updates
updated compression modes in CompressionMode . java to use a boolean parameter to improve flexibility in compression handling
added a check for user data in Shaderc . java to ensure proper validation of user data before processing
added a condition to check if the metadata store is local in RetryingMetaStoreClient to enhance retry logic to ensure retries are respected for local
do n ' t log connectionclosedexception if hoststatus be null
refactor Subject class to improve code readability and maintainability
use a thread - safe reference hashmap to avoid race - safety issue
updated color distance calculation in HSSFPalette . java and added a new test case in TestHSSFPalette . java to improve color
doc ( regen ) : fix docstring formatting
danielwagnerhall : added test case for find element by numeric id .
added flags parameter to registerReceiver and updated related methods to include flags parameter to enhance the registration of BroadcastReceivers with specific flags for better
updated test assertions in FFmpegTest . java to use Mockito for mocking behavior to improve test reliability and clarity in test assertions
updated Ogg input handling in Ogg and OggInputStream classes to utilize previous input resources to improve resource management and prevent memory leaks
updated failure message to use a constant for null response to improve code readability and maintainability
[ te ] do n ' t show anomaly warn for no anomaly
refactor BaseActivity and DetailActivity to simplify toast handling and improve code readability
updated the request creation method in TracingFeignClient . java to incorporate the request template for improved functionality to enhance request handling by
updated LDAPCertStore to enhance name validation and referral handling to improve error handling and ensure valid names are processed
refactor the retain method in GatewayRSocket to use a new retain method to improve code readability and reduce duplication in the retain logic
renamed the class ` AdapterViewTest ` to ` ListViewTest ` and added a new test for item click on item click on item click on item
[ hotfix ] [ test ] remove flakiness in checkpointfailuremanageritcase
remove genericitemuiprovider since it be no longer use
add a ` ` selectedobject ' ' field to make it easy to track the selected object
added a @ Isolated annotation to the FileSystemPool class in MetaInfConfigurationTest . java to indicate that the method for accessing the FileSystemPool is not
added a bind address to the server connection to ensure the server connects to the correct server configuration
updated access token expiration settings in DynamicClientRegistrationEndpoint based on the heart mode configuration to enhance security by accommodating different grant types
added ` CloverInstrumentationFilter ` to check if a class is an instance of ` InterfaceAudience annotated annotated annotated annotated annotated annotated annotated annotated annotated annotated annotated
added support for Smartmi Evap Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe Probe
change plausibletobreak to use calculationcontext instead of blockstateinterface
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added error logging for empty repository lists in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to log potential issues with repository management
updated the return condition in IntHashSet to include both missing and missing values to ensure proper handling of missing values in equality checks
added Serializable interface to RuleAdministratorImpl class to enable serialization support for instances of RuleAdministrator
fix crossoriginfilter to allow wildcard pattern for allowed origin
updated test cases in BaseG3dHudTest . java and NewModelTest . java to use a new knight file to improve test coverage and
added error handling for invalid solidified positions in Manager . java to improve robustness by logging errors related to solidified
hbase - 1782 fix npe in execresult . getregionresult
added a new method ` hasAccess ` to check user access within the ` HttpServer ` class to enhance security by ensuring only authorized users can access
refactor ClassMirror and StubJar classes to improve the handling of stub class bytes to enhance code readability and maintainability by encapsulating
added TextView to display internal link text based on whether the file is a folder to enhance user experience by providing contextual information for shared files
updated assertion to use Locale . ENGLISH for formatting to ensure consistent locale handling in tests
[ zeppelin - 3584 ] fix the test failure in modelzootest due to the change in date comparison
removed redundant input handling methods in AllAppsContainerView and LauncherAllAppsContainerView to improve code clarity and reduce unnecessary complexity
use in - memory event store in event handling test
refactored path handling in BsdFileStore and added getmntonname method in BsdNativeDispatcher to improve path retrieval logic to enhance
add test case for issue # 1851
added a new parameter ` x ` and ` y ` to the ` spawn ` command in the ` SpawnCommand ` command to allow users to specify a
added a constant for minimum content dimension and refactored content area width calculation to improve code clarity and maintainability by using a dedicated method to en
use runtime . addmethod ( ) instead of deprecate method .
replaced newDirectory ( ) with newMockDirectory ( ) in TestIndexWriter . java to ensure compatibility with Windows - specific directory handling
added failed checks to plugin checks and refactored the addition of columns in Upgrade catalog to improve error handling and maintain consistency in the code structure
refactor Environment class to improve code readability and maintainability
added a BadApple annotation to the RecoveryAfterSoftCommitTest class to document a known issue related to SOLR - 7421 for future reference
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 553
updated flag names from FLAG _ IGNORE _ HDMV _ DTS _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ D
updated imports in LiquibaseEntityResolver and modified ResourceAccessor initialization in XMLChangeLogSAXParser to streamline resource handling and improve resource management to en
added JDK security properties to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms for hostname verification
updated the ` @ Value . Immutable ` annotation to be non - singleton and removed the static EMPTY constant from ` CxxDeps ` to ` Cxx
rename ` expectedDirectory ` and ` actualDirectory ` lists to ` expectedStubDirectory ` and ` actualFullDirectory ` for clarity to improve
updated the visibility of the resizeThreshold variable in Int2ObjectHashMap . java to ensure proper access to the resizeThreshold variable
updated folder name hint logic to use ` TextUtils . isEmpty ` for better handling of empty titles to improve clarity and consistency in folder name display
updated client ID loading in UaaResetPasswordServiceTests to include " uaa " as a parameter to enhance test coverage for client validation validation
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to enhance encapsulation to restrict access to methods and improve code maintainability
updated error messages in AtomicCounter , AtomicLongPosition , UnsafeBufferPosition , and UnsafeBufferPosition classes to include the closed status to enhance clarity
refactor MimetypeIconUtil class to improve code organization and readability
corrected the spelling of " supportsViewFor " to " supportsViewsFor " across multiple view provider classes to ensure consistency and accuracy in
` unnecessaryparentheses ` : fix for negated ` instanceof `
added support for teleporting Location objects to enhance functionality by allowing dynamic proxying of Location objects
replaced ` Base64 ` encoding with ` Base64Utils . encodeToUrlSafeString ` in ` TokenKeyEndpoint ` and related tests to enhance
updated imports and import statements in TranslatorManagerHelper . java to enhance functionality by integrating ProjectComponent and Event . EVENT . EVENT . EVENT to improve
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity regarding the purpose of the annotation ' s purpose in the code
added a null check for the getId ( ) method to ensure that the getId ( ) method returns a non - null value to prevent potential NullPointerExceptions
refactor setUpRevampedTweet method to accept a boolean parameter for shuffle status to enhance flexibility in handling muffled twe
updated the way verified text is displayed based on the user ' s theme theme in UserProfileActivity to enhance flexibility in displaying verified text according to
[ abucoins ] remove static field .
camel - 7999 : camel - mongodb - allow to turn off autowired connection
added ` sourceIndex ` parameter to ` AttributeMapping ` and updated related classes to enhance attribute mapping functionality by associating source indices with their
improve error handling for corrupt partition
added a call to UserGroupInformation to check if security is enabled for enhanced security configuration
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 6078 ] prevent double - escape of contact email in geoserver home page
[ te ] enrich engine reflections with subsystems ( # 4731 )
update mmfstream to reflect the number of feature
do n ' t throw exception if command be empty
[ hotfix ] [ kafka ] fix npe in singlenodekafkaresumedstrategy
updated constants for PLAYBACK _ SPEED and ACTION _ SET _ PLAYBACK _ SPEED in MediaSessionConnector . java to use PlaybackStateCompat
added automatic separation handling and motor instance management in the MotorMountHandler and FlightConfigurationID classes to enhance functionality and ensure compatibility with
tika - 825 -- add unit test for tika - 825
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to JDK version compatibility issues
refactor lock file creation to use a dedicated method to improve code readability and maintainability by encapsulating lock file creation logic
updated shared preferences version from 5.3 to 5.3 to ensure compatibility with the latest version of the software
fix authentication failure warn log message for federation _
truffle : do n ' t wrap truffleobject in executemethodnode if it be a truffleobject
updated JakartaClientShutdownWithServerWebAppTest to use JakartaWebSocketShutdownContainer class instead of Collectors to streamline shutdown
fix for logback - 1010 : logbackvalve do n ' t print an error if a filter do n ' t exist
refactor Collection and Map classes to improve code organization and maintainability
removed an unused import statement for Version in CreateIndexTask . java to clean up the code and improve code clarity
added handling for OracleDatabase and AbstractDb2Database in MissingPrimaryKeyChangeGenerator . java to ensure correct schema and catalog information is used based on
added MetastoreException to the execute method and updated exception handling in MsckOperation . java to include it to improve error handling for better exception management
[ hotfix ] [ kafka ] [ connector / kafka ] do n ' t retry commit transaction if already commit
[ rocketmq - 328 ] fix the issue that the receipt handle be not remove when forward message to dlq activity
added support for a list of services in DockerComposeContainer and created a corresponding test class DockerComposeServiceTest to enhance service management and ensure proper functionality
refactor : use a copy set to avoid concurrent modification
removed unused imports and simplified the return statement in FeedParser . java to improve code readability by eliminating unnecessary dependencies to enhance code clarity
ensure that the widget drag outline be pad by the default widget padding . ( bug 10881814 )
change data types from int to double for energy reactive variables in MeterRealtimeBodyDataDTO . java to improve precision of calculations by using
added a new Java file ` bug4150029 . java ` that implements a file chooser for file selection to address bug 4150029
added Spark configuration update functionality to HiveConf and SparkTask classes to ensure proper resource management and prevent memory leaks when the Spark client is closed
added a long press indicator to the Launchable class and updated related methods in Launchable and AppIcon classes to support customizable long press actions for better
added handling for empty polygons and updated test cases in WKBWriter and WKBWriterTest to improve robustness of WKB writing and en
refactor UnflavoredBuildTarget creation to use builder pattern to improve code readability and maintainability
added a new class MultiplyByMaxInt to calculate the maximum value for a given integer to implement a test for multiplication by the maximum value in a given integer
added functionality to toggle the drawer indicator based on the current file ' s state to enhance user experience by providing visual feedback when the file is collapsed
removed unused imports from TestRAMDirectory . java to clean up the codebase to improve code clarity and maintainability
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton ` and ` Operations ` classes to improve performance and memory efficiency by using a
drools - 1181 : improve error message when no expression define for a node
updated annotations from " @ ContainedBy ( AC . class ) " to " @ Repeatable ( BC . class ) " in multiple
updated message formatting in AbstractController to use a dynamic duration to improve clarity and consistency in output
updated class loading mechanism in OpenMBeanAttributeInfoSupport . java to ensure proper package access checks before accessing class names
guacamole - 641 : allow to specify response count for quorumresponsehandler .
updated freeSize calculation in StoreDirect . java to correct the calculation of freeSize based on input
modified the ` areTouchesDisabled ` method to accept a ` MotionEvent ` parameter and updated related logic in ` AnyKeyboardView ` and ` Any
updated SslContextFactory instantiation to use SslContextFactory . Server instead of SslContextFactory . Server to improve type specificity and clarity
removed the privileged socket implementation in PG _ Stream . java to simplify the code by directly creating a Socket instance without using privileged operations
refactor InputTest class to improve code readability and maintainability
added functionality to pause blur in the QuickstepLauncher and updated related animation methods to improve UI responsiveness during task pauses
updated NearbyMapFragment to handle null cases for current location markers to improve robustness by preventing potential NullPointerExceptions
updated the ` removeSecret ` method to use ` clientDetailsService . retrieve ` instead of ` client ` to utilize ` clientDetailsService . retrieve
replaced ` @ BeforeAll ` with ` @ BeforeEach ` and updated SQL string formatting to enhance test isolation and improve readability of SQL queries
do n ' t swallow exception on shutdown
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in the dataset
updated filtering logic in ShenyuTrieRuleListener to handle potential null values and improve code readability to enhance code robustness by avoiding null
lightcontrol : rename controldir to controldir , use cloner
updated logic in StdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStdStd
added context handling in HttpSessionEventPublisher to ensure that the application context is not null to prevent potential NullPointerExceptions when handling events
removed outdated syntax check for CREATE CQ statement in ASTVisitor . java to update to reflect changes in CREATE CQ statement syntax from version
[ hotfix ] [ doc ] fix typo in flinkiootdbsink
refactor simplification handling in CanonicalizerPhase to use a counter to improve clarity and maintainability of the code
updated the method to pass a context parameter when setting the file type icon in ActivityListAdapter to ensure proper context is used for icon retrieval
updated indexOrConstraintName to use schema name instead of schema name to improve clarity and accuracy in schema management
[ beam - 8470 ] add support for timestamp field in bigquery table
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` , along with corresponding tests in ` ViewTest `
no functional change - code cleanup
updated import statements in IndexTool and MetaDataClient classes to ensure compatibility with the latest schema changes
added JSON _ VALUE and JSON _ CREATOR constants , modified method retrieval in SpringBootDocBuildTemplate , and refactored annotation handling in JavaClass
[ gr - 36413 ] only include jar resource in resourcefeature .
reformatted CUDA _ R _ 16F and CUDA _ C _ 32I variables for improved readability to enhance code clarity and
refactor ResourceLoader class to use a list of layout directories instead of a single resource loader to enhance flexibility to support multiple resource directories to improve
fix torch redstone torch not work with redstone
[ hotfix ] [ refactor ] add support for varbinary in reltoStages
added import statement for DateHelper in NoteAdapter . java to utilize DateHelper for date formatting in the application
updated backup error handling and messaging in Backup . java and Backup . java to improve clarity and user feedback during backup restoration processes
g3d - 348 : use relative position for eview .
simplified the creation of the pipe file in ShadowParcelFileDescriptor by removing the creation of a temporary file to streamline the file path to improve code read
replaced ` offer ` method with ` addFirst ` in ` StackBasedSecurityContextHolderStrategy ` and removed ` offer ` method in ` StackBasedSecurityContextHolder
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest to accurately reflect the purpose of the
fix canonicalization for x = = y and y = = 0
added a static final type STRING _ ARRAY in TypeFactory . java to facilitate the handling of string arrays in the type system
refactor IME handling and logging in AllAppsContainerView , LauncherAllAppsContainerView , and StatsLogManager to improve code organization
add blockstatecontainer to fix network issue ( # 3037 )
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for clarity and consistency to improve test output readability and ensure accurate validation
add optimization for max texture size in minecraft .
[ java ] stop log recording when stop .
added a condition to reset startPosn if it is in transformation to ensure proper positioning in the semantic analysis process
replaced the use of ` StarTreeUtils . isStarTreeEnabled ( ) ` with ` _ queryContext . isSkipStarTree ( )
added a locking mechanism to manage the visibility of the nearby places view in the NearbyActivity to ensure that the progress progress progress progress progress progress
add maptransformer . of ( ) and inverse ( ) method to maptransformer .
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization and maintainability
added support for retrieving launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management by allowing dynamic retrieval of widget
replaced ` ChangeListener ` and ` ChangeEvent ` with ` StateChangeListener ` in ` StageSelector ` and ` StateChanged ` classes to extend from `
added calls to ` ShadowBinder ` to manage calling process UID and UID in ` Robolectric ` and ` ShadowBinder ` classes to
replaced ` AutoValue _ Expect _ Expect _ Expect _ Expect ` with ` @ Nullable ` in ` ExpectationFailure ` and ` Expect . java `
remove warn log for unsupported message
updated calculations for new width and height in ImageReplacedElement . java to ensure consistent handling of width and height based on target dimensions
added support for double quotes in Markdown rendering to enhance markdown rendering accuracy and improve output consistency
refactor password handling in SharePasswordDialogFragment to improve clarity and maintainability by consolidating password setting logic to enhance code readability and
replaced direct calls to ` getFileChannelMethod ` with ` MappingMethods ` for accessing ` unmap0 ` and ` UNMAP _ BUFFER ` methods
removed public access modifier from methods and classes in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java and AbstractAssert _
added new options for Slider AM keytab configuration in LlapOptionsProcessor . java to enhance the configuration options for Slider AM keytab in
modified the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation control to the graph view to
added a new method ` runAfterBindCompleteRunnables ` and modified the shortcut existence checks in ` LauncherModel . java ` to
changed data fields to final in NodeManageMemoryMergeOperator , NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator
updated the ` add ` methods in ` IssueInterface ` and added a new ` setCheckValid ` method in ` ValidationReport ` to en
refactor RSAClientKeyExchange to use a helper method for obtaining the cipher provider and improve exception handling to enhance code readability and maintain
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration
changed log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity for non - critical issues
updated the condition for appending indentation in AggregateLifeCycle . java to ensure proper formatting of output
change access modifier of BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to BITMAP _ HEIGHT and BITMAP
removed the @ Ignore annotation from CovariantOverrideTest . java to streamline test code by eliminating unnecessary annotations
replace curly ( ) with qtype ( ) in pattern .
camel - 7999 : camel - jbang - make it possible to load route from a xml file .
added space minimum and maximum values for X - axis labels in ScatterChart to improve visual spacing for better data representation
updated string concatenation syntax in ExpressionStringBuilder . java to improve code readability and maintain consistency in formatting
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` BaseState ` classes
added a check for the presence of the " UTF8 " key in the properties file to ensure that the UTF8 " key is present to avoid runtime
solrsolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolrolr
added logging for long - press events on AllApps items in StatsLogManager and StatsLogManager to enhance user interaction event tracking for analytics
added null check for log in StoreWAL . java and created a new test case for issue # 112 112 to address issue # 112 112 112 112
do n ' t show sector land info when it ' s not set
[ hotfix ] [ table - common ] fix unchecked cast in compositetypeinfo
refactor Enum class to improve code readability and maintainability
updated NearbySelectionConfig and NearbyEntityNearbyValueSelector classes to accept a random NearbyRandom parameter and added validation checks for
improve performance by remove temporarycache . remove ( )
do n ' t show the wms and wms import container if not necessary
added a default value for availability _ availability in ContextHandler . java to ensure proper initialization of availability status to avoid null pointer exceptions
updated ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , ` SyncService ` , and ` PeerConnection `
bulk client regen : update gapic - generator - java version to 2.1 . 0 ( # 6022 )
replaced ` _ freeSpaceReclaimDisabled ` with ` _ freeSpaceReclaimQ ` and updated the method ` freeSpaceReclaimQ ` to
changed KDC _ OPT _ PROXIABLE and KDC _ OPT _ REVERSEABLE to static final in KDCOptions . java and
refactor JsonWriter initialization and assignment to improve code clarity and ensure proper assignment of writer
removed redundant lines of code in ProfilePager . java to improve code readability and maintainability
renamed paintBackground to paintComponentBackground in Slider . java to improve clarity by accurately reflecting the method ' s purpose
added a method ` valueFromClassConstant ` to retrieve property values from class constants to enhance property management for object value constants in the application
added error handling for the KafkaService initialization process to log errors related to service initialization failures
replace ` sets . newHashSet ( " build . prop " ) ` with ` immutableSet . of ( " build . prop " , " usr /
add support for autodetect channel in messagebus
added keyword handling in HTMLDocument and created a test for it in TestDemo to enhance document indexing functionality and ensure correct behavior through unit testing
updated SDK version check from S to R in FileUploader . java to ensure compatibility with the latest Android SDK version
refactor address handling in MemcachedSessionDataMapFactory to improve code structure to enhance readability and maintainability
replace ` CorrespondenceSubclassToFactoryCall ` with ` CorrespondenceSubclassToFactoryCall ` to ensure proper instantiation of the class
refactor Builder class to improve code readability and maintainability
[ isbn2bibtex ] fix isbn to bibtex fetcher
[ gr - 20844 ] polyglotlimit . setKeepAlivetime should be set to 10 second to avoid deadlock .
added a null check for the text variable ' text ' in the TextField class to ensure ' text ' is not null before processing to prevent potential Null
update sentimentmodel so that it do n ' t need to be static
added trimming of whitespace to clean up the input string before processing
added a check to return early if the player is in the Godmode mode to optimize performance by avoiding unnecessary processing
ggb - 2118 fix : do n ' t register a new popup in combo combo combo combo combo combo combo combo combo combo combo combo combo combo
removed the ` accessOrder ` parameter from ` LinkedHashMapCache ` and ` BoundedLinkedHashMap ` constructors in ` LinkedHashMapCache ` and ` TCache `
removed redundant line breaks in ChannelEndPoint . java to improve code readability and maintainability
added null check for keyIndex in FixAcidKeyIndex . java and refactored KeyIndexBuilder instantiation in OrcRecordUpdater .
updated exception handling in DirectUpdateHandler2 . java to use Locale . ROOT instead of a hardcoded string to improve localization support for document ID writing errors
move guard creation to writenode so that it can be re - used
refactor : do n ' t check block reachability for exception dispatch block .
added ` getClassificationDisagreement ` method to ` AbstractCloud ` , ` Cloud ` , and ` DBCloud ` classes , and updated ` ViewFilter
removed unnecessary ` @ Value . Parameter ` annotations from several classes to simplify code and improve readability by eliminating redundant method calls
refactor SqlRunner class to improve code readability and maintainability
changed the data type of ` date _ taken ` from ` String ` to ` long ` and updated related methods to improve performance and simplify data handling
replaced ` knownApis ` with ` knownSdks ` in ` DefaultSdkProvider . java ` and updated related methods in ` Robolectric
add confidence progress indicator to create offer
updated user agent header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes to align with the
fix bpt iteration for blueprint with iterator
added constants for message view types and modified the onCreateViewHolder method to handle different view types to improve code readability and support for different message types
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL . java ` to
fix a bug in the grammatical structure of the grammatical structure in the grammatical structure
removed the canvas parameter from the insert method and added duplicate padding support in TexturePacker . java to simplify the method signature and enhance image insertion
added a ` apply ` method to the ` RefactorModule ` class and modified the ` getVisitors ` method in ` AddGradleEnterpriseTo
added methods ` getChildByName ` and ` getChildrenByName ` to retrieve child elements by name in the Xml class to enhance functionality by allowing retrieval of child
added " Content - Charset " header to HttpSolrServer and its corresponding test to ensure proper handling of character encoding in HTTP requests
added SystemUiControllerFlags annotation and updated UI state updates to streamline UI state management across the application
removed the clientService variable from IntrospectingTokenService to streamline the service configuration by eliminating unnecessary dependencies
improve error message when hive split fails
removed the assignment of ownerId in NodeEntry . java to streamline the code by eliminating unnecessary fields
cloud . backup . rightafter . snapshot should be set to true , not false
updated the merge method in TextFragment to include score calculation to ensure the score accurately reflects the merging of TextFragment instances
removed the private Digester field from Md4PasswordEncoder to streamline the class by eliminating unnecessary dependency on Digester
added a validation check for the maximumUnimprovedStepCount property to ensure it is greater than zero to prevent illegal argument exceptions during execution
added a check to return early if no editors are currently open to improve performance by avoiding unnecessary processing when no editors are currently open
refactor BDDMockito to use Mockito ' s verify method for improved clarity to enhance code readability and maintainability by standard
updated classLoader initialization to use PathScanner ' s class loader to ensure correct class loading for improved functionality
updated ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a ` String ` and added asynchronous operation for asynchronous API calls
added logging to abstractsplitbrainprotectiontest . testsplitbrainprotection
added null checks for logoutConfigurer before adding the filter in DefaultLoginPageConfigurer and ServerHttpSecurity to prevent potential NullPointerExceptions when
fix for [ giac ] : do n ' t use degree ( ) in giac .
added logging functionality to DockerComposeContainer and created a new test class for it to enhance logging capabilities and improve test coverage
updated the generic type parameter in the testMapping method signature to enhance type safety and improve code clarity
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to convert a ` Supplier < T ,
replaced a break statement with a return statement to ensure the method correctly terminates with a boolean value
camel - platform - http : add content - type support for vert vert vert . x
added platform - specific path handling methods to MorePaths to ensure consistent path formatting across different operating systems
added a null check for authorizationContext parameters before processing parameters to avoid potential NullPointerException when accessing authorization context parameters
modified the load method to throw an exception if the library loading fails to enhance error handling by ensuring that exceptions are properly handled gracefully
updated SDK version from " 4611349 " to " 4514284 " and added tests for the isStopped method to ensure compatibility with the
fix queuetransactionlog to return a new transactionlogkey instance
added support for enabling and disabling SQL profiles without profile in JdbcEnvironmentProperties and JdbcEnvironmentRepository to enhance flexibility in handling SQL
added a try - finally block around the write operation to ensure _ data is set to null in a try - finally block to ensure that _ data is
fix deprecation warning in mod loading stage
updated the parameter name from ` date ` to ` calendar ` in ` formatDate ` method to improve clarity and consistency in variable naming
updated getThreadInfo method to include STACK _ TRACE _ DEPTH parameter to ensure accurate retrieval of thread information based on stack trace depth
added a protected ` prevTlogOnPrecommit ` in ` UpdateLog . java ` and modified the test assertions in ` LeaderTragicEvent
update fastasync world edit to 1.17
updated directory creation logic in SegmentGeneratorConfig . java to ensure output directories are created if they do not exist to prevent potential null pointer exceptions when handling input
added a new method ` calculateNormalVector ` and refactored ` triangulationHelper ` to utilize this method to improve code clarity and
updated method signatures and imports in JdbcAuditService . java to use IdentityZone instead of IdentityZoneId to enhance query accuracy by associating identity
refactor SpanCollector class to improve code readability and maintainability
added a check for ` SESSION _ MANAGER . getCurrSession ( ) ` before accessing ` SESSION _ MANAGER . getCurrSession (
updated transaction isolation level implementation to enhance performance and reliability of database operations
renamed method ` printLVgroups ` to ` printLogicalVolumeGroups ` in ` OshiController . java ` to improve clarity to en
added a thread name to the current thread in TestSession . java to improve clarity of thread information for debugging purposes
refactor CookieManager class to improve code readability and maintainability
simplified the return statement in LauncherExtension . java to directly return an empty list instead of creating an empty list to improve code efficiency by avoiding
added a new OverviewToAllAppsTouchController to the RecentsUiFactory to enhance user interaction with the launcher
replaced the ` scaleHotseatWithWorkspace ` method with a new method ` getHotseatScaleAndTranslation ` in ` LauncherState `
updated StackTrace filtering logic to exclude JUnit rules from stack trace filtering to ensure that only non - internal JUnit rules are filtered out from stack trace
refactor MappedResizeableBuffer to use wildcard imports and improve array handling to enhance code readability and maintainability by reducing rep
refactor balance listener implementation in DepositListItem . java to improve readability and maintainability of the code
updated color conversion logic in RealisticRenderer . java to ensure proper color handling for different edge edge edge edge edge edge edge edge edge edge edge edge edge
added null check for httpClientResponse in HttpClientBeanPostProcessor and updated log initialization to improve error handling and ensure proper logging consistency
remove unused import and remove unused import
updated last playback time handling logic in FullDetailsActivity . java to improve readability and maintainability of the code
spanish xml tree reader : add support for elliptic token
added a condition to clear the language of the item when the language is empty to ensure that the item ' s language is set correctly when no language is
updated ReactiveLoadBalancerClientFilter to derive the request scheme from the ServiceInstance ' s security status to ensure that the correct protocol is used based on the service ' s secure
http : / / code . google . com / p / mybatis / issues / detail ? id = 565 , it ' s not a
changed the access modifier of fullFilePathFromClassName from private to public to allow access to fullFilePathFromClassName from other classes
replaced custom ` Correspondence ` implementation with Java ' s built - in ` Correspondence . from ` for improved readability to simplify the
replaced instances of ` isNonUSSupported ` with ` isNonENLangSupported ` across multiple files to accurately reflect the language
simplified null check for redeemData to improve code readability and maintainability
add minecraftforgeclient to allow tessellator to override block .
added a return statement in TxCacheDB . java to ensure the method exits early if needed
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal . object
refactor FastDictionary class to improve performance to enhance efficiency of data retrieval operations
improve handling of closed session . close ( ) in nioconnection .
updated FlightEvent values in FlightEventsTest . java and FlightEvent . Type . SIMULATION _ END . java to ensure tests
[ beam - 8470 ] migrate protobuf protobuf to v1.7 . 0 ( # 24949 )
replace target . addNamespaceDeclaration ( ) with newElement . addNamespaceDeclaration ( ) in SaajStaxWriter . java to ensure the namespace declaration
update instructorfeedbackresultspagedata to use student profile picture link instead of profile picture link
updated DefaultPasswordValidator to use a short rule list for rules and added a test for alphabetic and numeric sequence validation to enhance password validation to allow
danielwagnerhall : add a new command to retrieve last remote control log
removed JUnit test annotation from ProxyClassSerializationTest . java to streamline test code by eliminating unnecessary dependencies
updated the thumbnail scaling logic in DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL DL
[ gr - 17854 ] remove speculative guard movement phase from truffle code .
added a check to ensure that the AUTHENTICATION _ MANAGER bean is not already defined in the registry and does not already exist in the registry to
updated the handling of forwarded headers and ports in ForwardedRequestCustomizer . java and added tests in ForwardedRequestCustomizerTest . java
added setLength ( 0 ) to ConsoleReader to reset the output length to zero
changed access modifiers of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists for better extensibility
updated version numbers and specifications for OpenIDE - Module - Specification - Version to ensure compatibility with the latest features and improvements
hbase - 20909 add a configuration option to set the number of line - length line - length line - length line - length line - length
refactor multiple Java classes related to IP address handling to improve code organization and maintainability
updated FixedLengthTokenizerTests to use JUnit ' s assertion methods and added tests for handling edge edge edge edge edge edge edge edge edge edge edge edge
updated the protocol binding configuration in OpenSamlAuthenticationRequestFactory to allow dynamic protocol binding configuration to enhance flexibility by allowing different protocol binding
added AttachedSurfaceControl import and modified surface control transaction handling in DepthController . java to ensure proper handling of surface transactions and improve rendering performance
update app version to 2.5 . x
updated action from WRITE to CREATE for prePrepareBulkLoad and preCleanupBulkLoad commands in AccessController . java to align with the expected action requirements to
updated the sublist method for ` unSeqMergeList ` in ` TsFileManagement . java ` and replaced ` measurementSchemas [ 0 ] ` with
camel - 18585 : camel - core - fileinputstream should be a fileinputstream , not a fileinputstream
added a login method to DefaultShardManager and updated DefaultShardManagerBuilder to use it to improve flexibility in handling login login scenarios
removed an unnecessary whitespace in the DeleteGlobalRef method call to improve code readability and maintain consistency
rename the join table in AbstractRegisteredService from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve cl
added a check before processing the completion of a response in HttpSender . java to ensure the response is only completed if it is marked as successful to improve
[ # 7705 ] feedbackresponsecommentscreator logic improvement ( # 7705 )
added support for linked profile handling in BMPImageReader to ensure compatibility with unc - or - device paths on Windows platforms
updated location parameters for the ` setSimpleCuboid ` method in ` ClassicPlotManager . java ` to correct the dimensions of the plot
add a thread to wait for the p pmd build to finish
refactor grid handling logic in StdGridFragment to improve clarity and structure to enhance maintainability and readability of the code
updated return values in ContributionsListFragment . java to reflect successful completion of the operation
added a test case for skipping a specific query in DistinctPrefixFilterIT and modified the filtering logic in BaseResultIterators to enhance query processing
pdfbox - 2576 : add test for acrobat checkbox group property
added a method ` getFileLastModified ( String file ) ` to retrieve the last modified timestamp of a file in ` BlackBerryImplementation . java ` to
added a check for metadata table validation to ensure that the metadata table in Hive table table table table table table table table table table table table table table table
fix currency selection in cashdeposit
changed catch block from IOException to Throwable in WriteFlusher . java to handle a broader range of exceptions
added a new boolean variable ` mStartedEnterAnimation ` and modified animation handling in ` IconRecentsView . java ` to improve animation logic to ensure
added a public variable ` activeKeyId ` to ` UaaConfiguration ` to allow configuration of the active key identifier
updated action descriptions and method calls in SendMailActions . java for clarity to improve code readability and maintainability by using more descriptive
http : / / issues . apache . org / jira / browse / amq - 3060 - fix issue with http : / / issues
removed the ` isDesc ( ) ` method from ` OrderByExpressionContext ` and updated related checks in ` SelectionPartiallyOrderedByDescOperation `
fix a classcastexception in the application
added a check for the ownCloud app name in the calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar calendar
hbase - 17826 hbase . rootdir . perms should be set if kerberos authentication be enable
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` JavaxServletWebExchange
refactor Instant class to improve code readability and maintainability
added a default value for the state format in CollectionsHandler and updated related test cases to ensure consistent handling of state format across the application
updated logging statement in CentralAuthenticationServiceImpl . java and modified class type check in AbstractTicket . java to simplify the logging statement and improve class type validation
pdfbox - 4892 : handle illegalargumentexception a suggest by valerybokov
added a condition to check if the file ends with a slash to ensure proper handling of file paths in the resource set
[ mng - 7751 ] add path translation to pluginparameterexpressionevaluator to avoid npe
[ beam - 8470 ] move protobuf coder registration to protobuf class
updated HqlQueryRenderer to include a boolean parameter to the JpaQuery parsing logic to ensure correct parsing of numeric numeric literals in HQL query results
updated the ` generateLaunchLugFromRASAeroRailGuide ` and ` RailGuideHandler ` methods to include a parent length
added a synchronized value factory method to the BitmexStreamingExchange class to ensure thread safety when accessing shared resources
( chore ) camel - mail : replace string concatenation with parameterized function
[ java ] update driver driver test to use default timeouts .
do n ' t initialize loaded class by default
added focus functionality to the search field to improve user experience by ensuring focus on the search field
fix tl connection logging .
updated the assertion in StatementTest to check for a specific return value to ensure the test case correctly verifies the expected outcome of the ` getDouble ( )
updated assertions in TestSolrConfigHandler to check for full output path to ensure accurate validation of expected values in test cases
replaced HttpMethod with ServerHttpRequest in the CsrfWebFilterTests to facilitate better testing for non - standard HTTP methods using mocked server
updated the density conversion logic in FilterResourcesStep . java to use a dynamic value of Density . NO _ QUALIFIER to enhance flexibility
added a private variable ` buttonUIID ` and modified UI element handling in ` ComponentGroup ` to improve clarity and maintainability by centralizing UI
removed the check for DENSITY _ 600 in the rotation condition to simplify the condition for better readability and maintainability
added two test classes , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , along with
added @ AwaitsFix annotation to ReplicationFactorTest . java to mark the test as awaiting a fix to address issue SOLR - 6
fixed - nullpointerexception be n ' t throw by redissondexecutorservice # schedule ( ) method if schedule ( ) method be
simplify the credential update logic in FileDownloader and FileUploader classes to improve code readability and maintainability
added null check for StoreFileScanner before closing it to ensure proper resource management and avoid potential NullPointerExceptions
updated method calls to use getOrDefault instead of get for getReceivedByte , getTransportedBytes , getReceivedPackets , and getTransportedBytes ,
added a nonce parameter to the TokenMvcMockTests class to verify the correct handling of the " nonce " claim in the token claims
refactor multiple chart editing classes to improve code organization to enhance maintainability and readability of the chart editing functionality
added width and height settings for formLayeredPane to ensure proper layout management for the layered pane
added an override for getHeight method in BrowserContentPane to adjust the Y - coordinate calculation based on the owner height to ensure proper vertical positioning of the
do n ' t close the database connection if it ' s not connected
updated DOCKER _ COMMAND to use Platform class for consistency to improve code maintainability and ensure correct command execution
added null check for input file before reading input files and improved error handling in TestIsartorValidationFromClasspath . java to enhance robust
updated the drawLeaveBehind method to accept a customizable color instead of a hardcoded value to enhance flexibility by allowing customizable color for folder
show a clear error message when the plugin can not work with canary version
apiresponseserializer : add null check for identityproxy table name
added support for enabling and disabling module persistence in StartArgs . java to enhance flexibility in managing module persistence settings
updated argument handling in GeminiMarketDataService to allow for more flexibility in argument input
replace HashSet with LinkedHashSet for questions to preserve the insertion order of questions in the flow context
add unit test base on feedback
updated excluded JSP files in AuthCheckFilter . java to clean up unused setup resources to improve resource management and reduce unnecessary dependencies
refactor scheduling logic to use a separate method for queueing runnable execution to improve code readability and maintainability by consolidating runnable execution
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to accept a variable argument instead of an array to enhance flexibility in
refactor XMLParser to improve readability and handle errors more gracefully to enhance error handling by returning end tag when no valid input is provided
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest ` that verifies the behavior of horizontal page overflow hidden to ensure
added pivot positioning for the arrow in DeepShortcutsContainer to ensure proper alignment of the arrow when needed
fix : do n ' t print stacktraces in case of interrupted exception
refactor updateThumbnail method to include refreshView parameter for better handling of task snapshots to enhance functionality by allowing thumbnail updates based on the refresh
pdfbox - 4071 : improve error message , a suggest by valerybokov
updated the ` EmailFormatSpecifier ` class to include a ` true ` parameter in the ` InternetAddress ` constructor to ensure that the ` IPv IPv IPv
updated references to ` AuthenticatorActivity ` , ` OperationsService ` , ` EmptyRecyclerView ` , ` FileActivity ` , and ` UserInfo
updated the handling of document IDs in MatchEntireSegmentDocIdSetBlock , SizeBasedDocIdIterator , and SizeBasedDocIdIterator
added methods ` promptToOpenFile ` and ` promptToOpenFile ` in ` FileDialoger ` and ` FilePanelEntry ` classes to enhance file
refactor page count logic into a separate method ` updatePageCounts ( ) ` to improve code readability and maintainability to enhance maintainability by
refactor FlightConfiguration to streamline component handling and bounding box calculations to improve performance and clarity in component processing logic
use direct instead of seda for test
updated DateTimeFormatter initialization to use Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3952 ] dspaceobjectconverter : add permission filtered metadata to the list
added a test for missing required parameters in StarTreeConfig to ensure that the builder correctly handles cases where required parameters are missing
fix camel - spring - xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml xml
refactor InlineLayoutBox to improve parent return logic and enhance repaint handling in HoverListener to improve code clarity and ensure proper repaint
refactor AuthenticatorActivity to use ServiceConnection for authentication handling to improve service management and streamline authentication process
